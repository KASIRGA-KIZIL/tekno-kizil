
// -----------
// This file was generated by riscv_ctg (https://gitlab.com/incoresemi/riscv-compliance/riscv_ctg)
// version   : 0.5.2
// timestamp : Tue Sep  7 16:44:09 2021 GMT
// usage     : riscv_ctg \
//                  -- cgf $cgf \
//                  -- xlen $xlen \
// -----------
//
// -----------
// Copyright (c) 2021. IIT Madras. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fdiv.s instruction of the RISC-V F extension for the fdiv_b7 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fdiv_b7)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x16,test_fp)
RVTEST_SIGBASE(x15,signature_x15_1)

inst_0:
// rs1 == rd != rs2, rs1==f3, rs2==f10, rd==f3, fs1 == 0 and fe1 == 0xfc and fm1 == 0x36c1bf and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f3; op2:f10; dest:f3; op1val:0x7e36c1bf; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:0; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f3, f3, f10, 0x3, 0, x16, 0, x17, x15, 0, x18)

inst_1:
// rs1 != rs2  and rs1 != rd and rs2 != rd, rs1==f21, rs2==f28, rd==f4, fs1 == 0 and fe1 == 0xfe and fm1 == 0x195c05 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f21; op2:f28; dest:f4; op1val:0x7f195c05; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:8; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f4, f21, f28, 0x3, 0, x16, 8, x17, x15, 8, x18)

inst_2:
// rs1 == rs2 == rd, rs1==f16, rs2==f16, rd==f16, fs1 == 0 and fe1 == 0xfe and fm1 == 0x36dceb and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f16; op2:f16; dest:f16; op1val:0x7f36dceb; op2val:0x7f36dceb; valaddr_reg:x16; val_offset:16; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f16, f16, f16, 0x3, 0, x16, 16, x17, x15, 16, x18)

inst_3:
// rs1 == rs2 != rd, rs1==f13, rs2==f13, rd==f11, fs1 == 0 and fe1 == 0xfe and fm1 == 0x015194 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f13; op2:f13; dest:f11; op1val:0x7f015194; op2val:0x7f015194; valaddr_reg:x16; val_offset:24; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f11, f13, f13, 0x3, 0, x16, 24, x17, x15, 24, x18)

inst_4:
// rs2 == rd != rs1, rs1==f28, rs2==f23, rd==f23, fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a4a99 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f28; op2:f23; dest:f23; op1val:0x7dba4a99; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:32; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f23, f28, f23, 0x3, 0, x16, 32, x17, x15, 32, x18)

inst_5:
// rs1==f20, rs2==f22, rd==f1, fs1 == 0 and fe1 == 0xf9 and fm1 == 0x104e6f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f20; op2:f22; dest:f1; op1val:0x7c904e6f; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:40; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f1, f20, f22, 0x3, 0, x16, 40, x17, x15, 40, x18)

inst_6:
// rs1==f26, rs2==f0, rd==f29, fs1 == 0 and fe1 == 0xfe and fm1 == 0x290cc1 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f26; op2:f0; dest:f29; op1val:0x7f290cc1; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:48; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f29, f26, f0, 0x3, 0, x16, 48, x17, x15, 48, x18)

inst_7:
// rs1==f7, rs2==f30, rd==f0, fs1 == 0 and fe1 == 0xfb and fm1 == 0x0d00c9 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f7; op2:f30; dest:f0; op1val:0x7d8d00c9; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:56; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f0, f7, f30, 0x3, 0, x16, 56, x17, x15, 56, x18)

inst_8:
// rs1==f19, rs2==f5, rd==f30, fs1 == 0 and fe1 == 0xfe and fm1 == 0x14aa96 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f19; op2:f5; dest:f30; op1val:0x7f14aa96; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:64; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f30, f19, f5, 0x3, 0, x16, 64, x17, x15, 64, x18)

inst_9:
// rs1==f12, rs2==f6, rd==f13, fs1 == 0 and fe1 == 0xf6 and fm1 == 0x70e85a and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f12; op2:f6; dest:f13; op1val:0x7b70e85a; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:72; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f13, f12, f6, 0x3, 0, x16, 72, x17, x15, 72, x18)

inst_10:
// rs1==f8, rs2==f3, rd==f25, fs1 == 0 and fe1 == 0xfb and fm1 == 0x1e69a3 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f8; op2:f3; dest:f25; op1val:0x7d9e69a3; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:80; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f25, f8, f3, 0x3, 0, x16, 80, x17, x15, 80, x18)

inst_11:
// rs1==f15, rs2==f21, rd==f5, fs1 == 0 and fe1 == 0xfe and fm1 == 0x0ce08c and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f15; op2:f21; dest:f5; op1val:0x7f0ce08c; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:88; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f5, f15, f21, 0x3, 0, x16, 88, x17, x15, 88, x18)

inst_12:
// rs1==f27, rs2==f1, rd==f8, fs1 == 0 and fe1 == 0xfe and fm1 == 0x182774 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f27; op2:f1; dest:f8; op1val:0x7f182774; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:96; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f8, f27, f1, 0x3, 0, x16, 96, x17, x15, 96, x18)

inst_13:
// rs1==f1, rs2==f29, rd==f22, fs1 == 0 and fe1 == 0xfd and fm1 == 0x7e51b6 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f1; op2:f29; dest:f22; op1val:0x7efe51b6; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:104; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f22, f1, f29, 0x3, 0, x16, 104, x17, x15, 104, x18)

inst_14:
// rs1==f11, rs2==f20, rd==f19, fs1 == 0 and fe1 == 0xfb and fm1 == 0x3d26fe and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f11; op2:f20; dest:f19; op1val:0x7dbd26fe; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:112; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f19, f11, f20, 0x3, 0, x16, 112, x17, x15, 112, x18)

inst_15:
// rs1==f31, rs2==f14, rd==f7, fs1 == 0 and fe1 == 0xfc and fm1 == 0x495aa1 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f31; op2:f14; dest:f7; op1val:0x7e495aa1; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:120; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f7, f31, f14, 0x3, 0, x16, 120, x17, x15, 120, x18)

inst_16:
// rs1==f5, rs2==f9, rd==f24, fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c6353 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f5; op2:f9; dest:f24; op1val:0x7f2c6353; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:128; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f24, f5, f9, 0x3, 0, x16, 128, x17, x15, 128, x18)

inst_17:
// rs1==f22, rs2==f11, rd==f26, fs1 == 0 and fe1 == 0xfe and fm1 == 0x33ce10 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f22; op2:f11; dest:f26; op1val:0x7f33ce10; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:136; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f26, f22, f11, 0x3, 0, x16, 136, x17, x15, 136, x18)

inst_18:
// rs1==f25, rs2==f15, rd==f27, fs1 == 0 and fe1 == 0xfd and fm1 == 0x238740 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f25; op2:f15; dest:f27; op1val:0x7ea38740; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:144; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f27, f25, f15, 0x3, 0, x16, 144, x17, x15, 144, x18)

inst_19:
// rs1==f29, rs2==f8, rd==f6, fs1 == 0 and fe1 == 0xfa and fm1 == 0x5be595 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f29; op2:f8; dest:f6; op1val:0x7d5be595; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:152; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f6, f29, f8, 0x3, 0, x16, 152, x17, x15, 152, x18)

inst_20:
// rs1==f17, rs2==f24, rd==f12, fs1 == 0 and fe1 == 0xfd and fm1 == 0x4dc2f4 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f17; op2:f24; dest:f12; op1val:0x7ecdc2f4; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:160; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f17, f24, 0x3, 0, x16, 160, x17, x15, 160, x18)

inst_21:
// rs1==f4, rs2==f19, rd==f15, fs1 == 0 and fe1 == 0xfd and fm1 == 0x30f667 and fs2 == 0 and fe2 == 0xd2 and fm2 == 0x30f667 and rm_val == 3  
// opcode: fdiv.s ; op1:f4; op2:f19; dest:f15; op1val:0x7eb0f667; op2val:0x6930f667; valaddr_reg:x16; val_offset:168; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f15, f4, f19, 0x3, 0, x16, 168, x17, x15, 168, x18)

inst_22:
// rs1==f18, rs2==f31, rd==f20, fs1 == 0 and fe1 == 0xfd and fm1 == 0x217a32 and fs2 == 0 and fe2 == 0xd2 and fm2 == 0x217a32 and rm_val == 3  
// opcode: fdiv.s ; op1:f18; op2:f31; dest:f20; op1val:0x7ea17a32; op2val:0x69217a32; valaddr_reg:x16; val_offset:176; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f20, f18, f31, 0x3, 0, x16, 176, x17, x15, 176, x18)

inst_23:
// rs1==f9, rs2==f18, rd==f31, fs1 == 0 and fe1 == 0xfd and fm1 == 0x3e85af and fs2 == 0 and fe2 == 0xd2 and fm2 == 0x3e85af and rm_val == 3  
// opcode: fdiv.s ; op1:f9; op2:f18; dest:f31; op1val:0x7ebe85af; op2val:0x693e85af; valaddr_reg:x16; val_offset:184; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f31, f9, f18, 0x3, 0, x16, 184, x17, x15, 184, x18)

inst_24:
// rs1==f24, rs2==f2, rd==f21, fs1 == 0 and fe1 == 0xfd and fm1 == 0x25bb60 and fs2 == 0 and fe2 == 0xd2 and fm2 == 0x25bb5f and rm_val == 3  
// opcode: fdiv.s ; op1:f24; op2:f2; dest:f21; op1val:0x7ea5bb60; op2val:0x6925bb5f; valaddr_reg:x16; val_offset:192; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f21, f24, f2, 0x3, 0, x16, 192, x17, x15, 192, x18)

inst_25:
// rs1==f6, rs2==f4, rd==f10, fs1 == 0 and fe1 == 0xfe and fm1 == 0x19d2a8 and fs2 == 0 and fe2 == 0xd3 and fm2 == 0x19d2a8 and rm_val == 3  
// opcode: fdiv.s ; op1:f6; op2:f4; dest:f10; op1val:0x7f19d2a8; op2val:0x6999d2a8; valaddr_reg:x16; val_offset:200; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f10, f6, f4, 0x3, 0, x16, 200, x17, x15, 200, x18)

inst_26:
// rs1==f2, rs2==f12, rd==f28, fs1 == 0 and fe1 == 0xfe and fm1 == 0x16436d and fs2 == 0 and fe2 == 0xd3 and fm2 == 0x16436d and rm_val == 3  
// opcode: fdiv.s ; op1:f2; op2:f12; dest:f28; op1val:0x7f16436d; op2val:0x6996436d; valaddr_reg:x16; val_offset:208; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f28, f2, f12, 0x3, 0, x16, 208, x17, x15, 208, x18)

inst_27:
// rs1==f23, rs2==f25, rd==f2, fs1 == 0 and fe1 == 0xfd and fm1 == 0x0f5661 and fs2 == 0 and fe2 == 0xd2 and fm2 == 0x0f5661 and rm_val == 3  
// opcode: fdiv.s ; op1:f23; op2:f25; dest:f2; op1val:0x7e8f5661; op2val:0x690f5661; valaddr_reg:x16; val_offset:216; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f2, f23, f25, 0x3, 0, x16, 216, x17, x15, 216, x18)

inst_28:
// rs1==f0, rs2==f7, rd==f18, fs1 == 0 and fe1 == 0xfa and fm1 == 0x7574e1 and fs2 == 0 and fe2 == 0xcf and fm2 == 0x7574e1 and rm_val == 3  
// opcode: fdiv.s ; op1:f0; op2:f7; dest:f18; op1val:0x7d7574e1; op2val:0x67f574e1; valaddr_reg:x16; val_offset:224; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f18, f0, f7, 0x3, 0, x16, 224, x17, x15, 224, x18)

inst_29:
// rs1==f14, rs2==f17, rd==f9, fs1 == 0 and fe1 == 0xfe and fm1 == 0x097aef and fs2 == 0 and fe2 == 0xd3 and fm2 == 0x097aef and rm_val == 3  
// opcode: fdiv.s ; op1:f14; op2:f17; dest:f9; op1val:0x7f097aef; op2val:0x69897aef; valaddr_reg:x16; val_offset:232; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f9, f14, f17, 0x3, 0, x16, 232, x17, x15, 232, x18)

inst_30:
// rs1==f30, rs2==f27, rd==f17, fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e1674 and fs2 == 0 and fe2 == 0xd0 and fm2 == 0x3e1673 and rm_val == 3  
// opcode: fdiv.s ; op1:f30; op2:f27; dest:f17; op1val:0x7dbe1674; op2val:0x683e1673; valaddr_reg:x16; val_offset:240; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f17, f30, f27, 0x3, 0, x16, 240, x17, x15, 240, x18)

inst_31:
// rs1==f10, rs2==f26, rd==f14, fs1 == 0 and fe1 == 0xfc and fm1 == 0x12c03f and fs2 == 0 and fe2 == 0xd1 and fm2 == 0x12c03f and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f26; dest:f14; op1val:0x7e12c03f; op2val:0x6892c03f; valaddr_reg:x16; val_offset:248; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f14, f10, f26, 0x3, 0, x16, 248, x17, x15, 248, x18)

inst_32:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x614269 and fs2 == 0 and fe2 == 0xd2 and fm2 == 0x614269 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ee14269; op2val:0x69614269; valaddr_reg:x16; val_offset:256; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 256, x17, x15, 256, x18)

inst_33:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x06e52a and fs2 == 0 and fe2 == 0xd2 and fm2 == 0x06e52a and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e86e52a; op2val:0x6906e52a; valaddr_reg:x16; val_offset:264; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 264, x17, x15, 264, x18)

inst_34:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x729bb9 and fs2 == 0 and fe2 == 0xd1 and fm2 == 0x729bb9 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e729bb9; op2val:0x68f29bb9; valaddr_reg:x16; val_offset:272; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 272, x17, x15, 272, x18)

inst_35:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x044ae8 and fs2 == 0 and fe2 == 0xd0 and fm2 == 0x044ae8 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7d844ae8; op2val:0x68044ae8; valaddr_reg:x16; val_offset:280; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 280, x17, x15, 280, x18)

inst_36:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b2415 and fs2 == 0 and fe2 == 0xd3 and fm2 == 0x3b2415 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f3b2415; op2val:0x69bb2415; valaddr_reg:x16; val_offset:288; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 288, x17, x15, 288, x18)

inst_37:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 0 and fe2 == 0xd0 and fm2 == 0x3f6d06 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7dbf6d07; op2val:0x683f6d06; valaddr_reg:x16; val_offset:296; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 296, x17, x15, 296, x18)

inst_38:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2872e3 and fs2 == 0 and fe2 == 0xcf and fm2 == 0x2872e3 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7d2872e3; op2val:0x67a872e3; valaddr_reg:x16; val_offset:304; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 304, x17, x15, 304, x18)

inst_39:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151669 and fs2 == 0 and fe2 == 0xd3 and fm2 == 0x151669 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f151669; op2val:0x69951669; valaddr_reg:x16; val_offset:312; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 312, x17, x15, 312, x18)

inst_40:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x226d04 and fs2 == 0 and fe2 == 0xd2 and fm2 == 0x226d04 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ea26d04; op2val:0x69226d04; valaddr_reg:x16; val_offset:320; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 320, x17, x15, 320, x18)

inst_41:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e4e462d; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:328; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 328, x17, x15, 328, x18)

inst_42:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x196401 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7d196401; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:336; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 336, x17, x15, 336, x18)

inst_43:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x716299 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ef16299; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:344; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 344, x17, x15, 344, x18)

inst_44:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e1c9c and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f1e1c9c; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:352; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 352, x17, x15, 352, x18)

inst_45:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x30faaa and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f30faaa; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:360; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 360, x17, x15, 360, x18)

inst_46:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x038f64 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e038f64; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:368; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 368, x17, x15, 368, x18)

inst_47:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4d4cf5 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ecd4cf5; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:376; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 376, x17, x15, 376, x18)

inst_48:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x071b70 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e871b70; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:384; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 384, x17, x15, 384, x18)

inst_49:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x373e6b and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eb73e6b; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:392; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 392, x17, x15, 392, x18)

inst_50:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x41e692 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e41e692; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:400; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 400, x17, x15, 400, x18)

inst_51:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b1228 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eeb1228; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:408; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 408, x17, x15, 408, x18)

inst_52:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ee152 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e9ee152; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:416; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 416, x17, x15, 416, x18)

inst_53:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7e8d56 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7efe8d56; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:424; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 424, x17, x15, 424, x18)

inst_54:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x03f57f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e03f57f; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:432; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 432, x17, x15, 432, x18)

inst_55:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x218502 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7c218502; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:440; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 440, x17, x15, 440, x18)

inst_56:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cbcd0 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f2cbcd0; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:448; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 448, x17, x15, 448, x18)

inst_57:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31614f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f31614f; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:456; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 456, x17, x15, 456, x18)

inst_58:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d7e33 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f2d7e33; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:464; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 464, x17, x15, 464, x18)

inst_59:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b8e8c and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f1b8e8c; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:472; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 472, x17, x15, 472, x18)

inst_60:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x620d5f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ee20d5f; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:480; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 480, x17, x15, 480, x18)

inst_61:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2eb1b3 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e2eb1b3; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:488; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 488, x17, x15, 488, x18)

inst_62:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5dfbef and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e5dfbef; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:496; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 496, x17, x15, 496, x18)

inst_63:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7e964a and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7efe964a; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:504; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 504, x17, x15, 504, x18)

inst_64:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0f23f2 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f0f23f2; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:512; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 512, x17, x15, 512, x18)

inst_65:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x320e71 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f320e71; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:520; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 520, x17, x15, 520, x18)

inst_66:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x26ca91 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ea6ca91; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:528; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 528, x17, x15, 528, x18)

inst_67:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28f4b0 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f28f4b0; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:536; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 536, x17, x15, 536, x18)

inst_68:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x6522f2 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7b6522f2; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:544; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 544, x17, x15, 544, x18)

inst_69:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x30c1f0 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f30c1f0; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:552; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 552, x17, x15, 552, x18)

inst_70:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x21312f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ea1312f; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:560; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 560, x17, x15, 560, x18)

inst_71:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x050002 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e850002; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:568; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 568, x17, x15, 568, x18)

inst_72:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x186be6 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f186be6; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:576; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 576, x17, x15, 576, x18)

inst_73:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4733d7 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7dc733d7; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:584; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 584, x17, x15, 584, x18)

inst_74:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1acd2f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f1acd2f; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:592; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 592, x17, x15, 592, x18)

inst_75:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1afcca and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f1afcca; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:600; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 600, x17, x15, 600, x18)

inst_76:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0cfe89 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e0cfe89; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:608; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 608, x17, x15, 608, x18)

inst_77:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ae6b6 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f1ae6b6; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:616; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 616, x17, x15, 616, x18)

inst_78:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4b6083 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ecb6083; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:624; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 624, x17, x15, 624, x18)

inst_79:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2cd245 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e2cd245; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:632; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 632, x17, x15, 632, x18)

inst_80:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x29e684 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f29e684; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:640; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 640, x17, x15, 640, x18)

inst_81:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x014bf6 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e814bf6; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:648; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 648, x17, x15, 648, x18)

inst_82:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x244343 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f244343; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:656; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 656, x17, x15, 656, x18)

inst_83:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x200a1a and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f200a1a; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:664; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 664, x17, x15, 664, x18)

inst_84:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x774515 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e774515; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:672; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 672, x17, x15, 672, x18)

inst_85:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x06075b and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f06075b; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:680; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 680, x17, x15, 680, x18)

inst_86:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0feb39 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e0feb39; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:688; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 688, x17, x15, 688, x18)

inst_87:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a54c0 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f1a54c0; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:696; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 696, x17, x15, 696, x18)

inst_88:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6e17c2 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e6e17c2; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:704; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 704, x17, x15, 704, x18)

inst_89:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5a9856 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eda9856; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:712; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 712, x17, x15, 712, x18)

inst_90:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1446c8 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f1446c8; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:720; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 720, x17, x15, 720, x18)

inst_91:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x66b5d2 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e66b5d2; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:728; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 728, x17, x15, 728, x18)

inst_92:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0dc14f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e8dc14f; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:736; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 736, x17, x15, 736, x18)

inst_93:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0bc23d and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e8bc23d; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:744; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 744, x17, x15, 744, x18)

inst_94:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x639603 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ee39603; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:752; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 752, x17, x15, 752, x18)

inst_95:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40dca5 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e40dca5; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:760; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 760, x17, x15, 760, x18)

inst_96:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x01cbbf and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f01cbbf; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:768; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 768, x17, x15, 768, x18)

inst_97:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x084a01 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7c884a01; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:776; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 776, x17, x15, 776, x18)

inst_98:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x07bc04 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f07bc04; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:784; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 784, x17, x15, 784, x18)

inst_99:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x026c09 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f026c09; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:792; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 792, x17, x15, 792, x18)

inst_100:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x70e623 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ef0e623; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:800; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 800, x17, x15, 800, x18)

inst_101:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x72c1df and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ef2c1df; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:808; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 808, x17, x15, 808, x18)

inst_102:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x7668ef and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7c7668ef; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:816; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 816, x17, x15, 816, x18)

inst_103:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f70d6 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e9f70d6; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:824; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 824, x17, x15, 824, x18)

inst_104:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5298e8 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ed298e8; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:832; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 832, x17, x15, 832, x18)

inst_105:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3bbcb1 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f3bbcb1; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:840; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 840, x17, x15, 840, x18)

inst_106:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x36810f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e36810f; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:848; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 848, x17, x15, 848, x18)

inst_107:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2593da and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ea593da; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:856; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 856, x17, x15, 856, x18)

inst_108:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x34996a and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f34996a; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:864; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 864, x17, x15, 864, x18)

inst_109:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56c198 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ed6c198; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:872; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 872, x17, x15, 872, x18)

inst_110:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7740d5 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ef740d5; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:880; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 880, x17, x15, 880, x18)

inst_111:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30cc1b and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eb0cc1b; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:888; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 888, x17, x15, 888, x18)

inst_112:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c289c and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f2c289c; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:896; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 896, x17, x15, 896, x18)

inst_113:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x710596 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e710596; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:904; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 904, x17, x15, 904, x18)

inst_114:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x025ce3 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7d025ce3; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:912; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 912, x17, x15, 912, x18)

inst_115:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6b5b and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eea6b5b; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:920; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 920, x17, x15, 920, x18)

inst_116:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x179770 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e179770; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:928; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 928, x17, x15, 928, x18)

inst_117:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x664f14 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ee64f14; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:936; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 936, x17, x15, 936, x18)

inst_118:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6dd39b and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e6dd39b; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:944; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 944, x17, x15, 944, x18)

inst_119:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4214d7 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ec214d7; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:952; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 952, x17, x15, 952, x18)

inst_120:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x292241 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f292241; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:960; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 960, x17, x15, 960, x18)

inst_121:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x09f0c8 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f09f0c8; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:968; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 968, x17, x15, 968, x18)

inst_122:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6bfb00 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eebfb00; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:976; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 976, x17, x15, 976, x18)

inst_123:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27923e and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f27923e; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:984; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 984, x17, x15, 984, x18)

inst_124:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x61b55e and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e61b55e; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:992; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 992, x17, x15, 992, x18)

inst_125:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d9e09 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e9d9e09; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1000; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1000, x17, x15, 1000, x18)

inst_126:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x07f6ba and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7d87f6ba; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1008; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1008, x17, x15, 1008, x18)

inst_127:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23f4fa and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f23f4fa; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1016; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1016, x17, x15, 1016, x18)

inst_128:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5ad8ea and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e5ad8ea; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1024; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1024, x17, x15, 1024, x18)

inst_129:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fab30 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f1fab30; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1032; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1032, x17, x15, 1032, x18)

inst_130:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x090d88 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f090d88; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1040; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1040, x17, x15, 1040, x18)

inst_131:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2db39d and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f2db39d; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1048; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1048, x17, x15, 1048, x18)

inst_132:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x253e0d and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f253e0d; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1056; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1056, x17, x15, 1056, x18)

inst_133:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x00e26f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f00e26f; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1064; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1064, x17, x15, 1064, x18)

inst_134:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x246dcc and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f246dcc; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1072; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1072, x17, x15, 1072, x18)

inst_135:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02f0c8 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f02f0c8; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1080; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1080, x17, x15, 1080, x18)

inst_136:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x605a49 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ee05a49; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1088; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1088, x17, x15, 1088, x18)

inst_137:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x06bfe7 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e86bfe7; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1096; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1096, x17, x15, 1096, x18)

inst_138:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42c803 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ec2c803; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1104; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1104, x17, x15, 1104, x18)

inst_139:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x70a207 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ef0a207; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1112; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1112, x17, x15, 1112, x18)

inst_140:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x395f47 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f395f47; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1120; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1120, x17, x15, 1120, x18)

inst_141:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x50d921 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7dd0d921; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1128; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1128, x17, x15, 1128, x18)

inst_142:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28be0d and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f28be0d; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1136; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1136, x17, x15, 1136, x18)

inst_143:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2abc06 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eaabc06; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1144; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1144, x17, x15, 1144, x18)

inst_144:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x17aa7b and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e97aa7b; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1152; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1152, x17, x15, 1152, x18)

inst_145:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x091ce4 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f091ce4; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1160; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1160, x17, x15, 1160, x18)

inst_146:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a03a1 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f0a03a1; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1168; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1168, x17, x15, 1168, x18)

inst_147:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x262e64 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f262e64; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1176; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1176, x17, x15, 1176, x18)

inst_148:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x675fa1 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e675fa1; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1184; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1184, x17, x15, 1184, x18)

inst_149:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x119488 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f119488; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1192; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1192, x17, x15, 1192, x18)

inst_150:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x00e937 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f00e937; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1200; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1200, x17, x15, 1200, x18)

inst_151:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x48e6cd and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ec8e6cd; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1208; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1208, x17, x15, 1208, x18)

inst_152:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x73c956 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ef3c956; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1216; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1216, x17, x15, 1216, x18)

inst_153:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7566f3 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ef566f3; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1224; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1224, x17, x15, 1224, x18)

inst_154:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2099c0 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f2099c0; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1232; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1232, x17, x15, 1232, x18)

inst_155:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3f29ee and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f3f29ee; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1240; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1240, x17, x15, 1240, x18)

inst_156:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x472f12 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e472f12; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1248; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1248, x17, x15, 1248, x18)

inst_157:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x21ceeb and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7c21ceeb; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1256; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1256, x17, x15, 1256, x18)

inst_158:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7046ce and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ef046ce; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1264; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1264, x17, x15, 1264, x18)

inst_159:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0e1012 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e8e1012; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1272; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1272, x17, x15, 1272, x18)

inst_160:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x36dceb and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f36dceb; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1280; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1280, x17, x15, 1280, x18)

inst_161:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x015194 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f015194; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1288; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1288, x17, x15, 1288, x18)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
test_fp:
.word 0x7e36c1bf
.word 0x7f7fffff
.word 0x7f195c05
.word 0x7f7fffff
.word 0x7f36dceb
.word 0x7f36dceb
.word 0x7f015194
.word 0x7f015194
.word 0x7dba4a99
.word 0x7f7fffff
.word 0x7c904e6f
.word 0x7f7fffff
.word 0x7f290cc1
.word 0x7f7fffff
.word 0x7d8d00c9
.word 0x7f7fffff
.word 0x7f14aa96
.word 0x7f7fffff
.word 0x7b70e85a
.word 0x7f7fffff
.word 0x7d9e69a3
.word 0x7f7fffff
.word 0x7f0ce08c
.word 0x7f7fffff
.word 0x7f182774
.word 0x7f7fffff
.word 0x7efe51b6
.word 0x7f7fffff
.word 0x7dbd26fe
.word 0x7f7fffff
.word 0x7e495aa1
.word 0x7f7fffff
.word 0x7f2c6353
.word 0x7f7fffff
.word 0x7f33ce10
.word 0x7f7fffff
.word 0x7ea38740
.word 0x7f7fffff
.word 0x7d5be595
.word 0x7f7fffff
.word 0x7ecdc2f4
.word 0x7f7fffff
.word 0x7eb0f667
.word 0x6930f667
.word 0x7ea17a32
.word 0x69217a32
.word 0x7ebe85af
.word 0x693e85af
.word 0x7ea5bb60
.word 0x6925bb5f
.word 0x7f19d2a8
.word 0x6999d2a8
.word 0x7f16436d
.word 0x6996436d
.word 0x7e8f5661
.word 0x690f5661
.word 0x7d7574e1
.word 0x67f574e1
.word 0x7f097aef
.word 0x69897aef
.word 0x7dbe1674
.word 0x683e1673
.word 0x7e12c03f
.word 0x6892c03f
.word 0x7ee14269
.word 0x69614269
.word 0x7e86e52a
.word 0x6906e52a
.word 0x7e729bb9
.word 0x68f29bb9
.word 0x7d844ae8
.word 0x68044ae8
.word 0x7f3b2415
.word 0x69bb2415
.word 0x7dbf6d07
.word 0x683f6d06
.word 0x7d2872e3
.word 0x67a872e3
.word 0x7f151669
.word 0x69951669
.word 0x7ea26d04
.word 0x69226d04
.word 0x7e4e462d
.word 0x7f7fffff
.word 0x7d196401
.word 0x7f7fffff
.word 0x7ef16299
.word 0x7f7fffff
.word 0x7f1e1c9c
.word 0x7f7fffff
.word 0x7f30faaa
.word 0x7f7fffff
.word 0x7e038f64
.word 0x7f7fffff
.word 0x7ecd4cf5
.word 0x7f7fffff
.word 0x7e871b70
.word 0x7f7fffff
.word 0x7eb73e6b
.word 0x7f7fffff
.word 0x7e41e692
.word 0x7f7fffff
.word 0x7eeb1228
.word 0x7f7fffff
.word 0x7e9ee152
.word 0x7f7fffff
.word 0x7efe8d56
.word 0x7f7fffff
.word 0x7e03f57f
.word 0x7f7fffff
.word 0x7c218502
.word 0x7f7fffff
.word 0x7f2cbcd0
.word 0x7f7fffff
.word 0x7f31614f
.word 0x7f7fffff
.word 0x7f2d7e33
.word 0x7f7fffff
.word 0x7f1b8e8c
.word 0x7f7fffff
.word 0x7ee20d5f
.word 0x7f7fffff
.word 0x7e2eb1b3
.word 0x7f7fffff
.word 0x7e5dfbef
.word 0x7f7fffff
.word 0x7efe964a
.word 0x7f7fffff
.word 0x7f0f23f2
.word 0x7f7fffff
.word 0x7f320e71
.word 0x7f7fffff
.word 0x7ea6ca91
.word 0x7f7fffff
.word 0x7f28f4b0
.word 0x7f7fffff
.word 0x7b6522f2
.word 0x7f7fffff
.word 0x7f30c1f0
.word 0x7f7fffff
.word 0x7ea1312f
.word 0x7f7fffff
.word 0x7e850002
.word 0x7f7fffff
.word 0x7f186be6
.word 0x7f7fffff
.word 0x7dc733d7
.word 0x7f7fffff
.word 0x7f1acd2f
.word 0x7f7fffff
.word 0x7f1afcca
.word 0x7f7fffff
.word 0x7e0cfe89
.word 0x7f7fffff
.word 0x7f1ae6b6
.word 0x7f7fffff
.word 0x7ecb6083
.word 0x7f7fffff
.word 0x7e2cd245
.word 0x7f7fffff
.word 0x7f29e684
.word 0x7f7fffff
.word 0x7e814bf6
.word 0x7f7fffff
.word 0x7f244343
.word 0x7f7fffff
.word 0x7f200a1a
.word 0x7f7fffff
.word 0x7e774515
.word 0x7f7fffff
.word 0x7f06075b
.word 0x7f7fffff
.word 0x7e0feb39
.word 0x7f7fffff
.word 0x7f1a54c0
.word 0x7f7fffff
.word 0x7e6e17c2
.word 0x7f7fffff
.word 0x7eda9856
.word 0x7f7fffff
.word 0x7f1446c8
.word 0x7f7fffff
.word 0x7e66b5d2
.word 0x7f7fffff
.word 0x7e8dc14f
.word 0x7f7fffff
.word 0x7e8bc23d
.word 0x7f7fffff
.word 0x7ee39603
.word 0x7f7fffff
.word 0x7e40dca5
.word 0x7f7fffff
.word 0x7f01cbbf
.word 0x7f7fffff
.word 0x7c884a01
.word 0x7f7fffff
.word 0x7f07bc04
.word 0x7f7fffff
.word 0x7f026c09
.word 0x7f7fffff
.word 0x7ef0e623
.word 0x7f7fffff
.word 0x7ef2c1df
.word 0x7f7fffff
.word 0x7c7668ef
.word 0x7f7fffff
.word 0x7e9f70d6
.word 0x7f7fffff
.word 0x7ed298e8
.word 0x7f7fffff
.word 0x7f3bbcb1
.word 0x7f7fffff
.word 0x7e36810f
.word 0x7f7fffff
.word 0x7ea593da
.word 0x7f7fffff
.word 0x7f34996a
.word 0x7f7fffff
.word 0x7ed6c198
.word 0x7f7fffff
.word 0x7ef740d5
.word 0x7f7fffff
.word 0x7eb0cc1b
.word 0x7f7fffff
.word 0x7f2c289c
.word 0x7f7fffff
.word 0x7e710596
.word 0x7f7fffff
.word 0x7d025ce3
.word 0x7f7fffff
.word 0x7eea6b5b
.word 0x7f7fffff
.word 0x7e179770
.word 0x7f7fffff
.word 0x7ee64f14
.word 0x7f7fffff
.word 0x7e6dd39b
.word 0x7f7fffff
.word 0x7ec214d7
.word 0x7f7fffff
.word 0x7f292241
.word 0x7f7fffff
.word 0x7f09f0c8
.word 0x7f7fffff
.word 0x7eebfb00
.word 0x7f7fffff
.word 0x7f27923e
.word 0x7f7fffff
.word 0x7e61b55e
.word 0x7f7fffff
.word 0x7e9d9e09
.word 0x7f7fffff
.word 0x7d87f6ba
.word 0x7f7fffff
.word 0x7f23f4fa
.word 0x7f7fffff
.word 0x7e5ad8ea
.word 0x7f7fffff
.word 0x7f1fab30
.word 0x7f7fffff
.word 0x7f090d88
.word 0x7f7fffff
.word 0x7f2db39d
.word 0x7f7fffff
.word 0x7f253e0d
.word 0x7f7fffff
.word 0x7f00e26f
.word 0x7f7fffff
.word 0x7f246dcc
.word 0x7f7fffff
.word 0x7f02f0c8
.word 0x7f7fffff
.word 0x7ee05a49
.word 0x7f7fffff
.word 0x7e86bfe7
.word 0x7f7fffff
.word 0x7ec2c803
.word 0x7f7fffff
.word 0x7ef0a207
.word 0x7f7fffff
.word 0x7f395f47
.word 0x7f7fffff
.word 0x7dd0d921
.word 0x7f7fffff
.word 0x7f28be0d
.word 0x7f7fffff
.word 0x7eaabc06
.word 0x7f7fffff
.word 0x7e97aa7b
.word 0x7f7fffff
.word 0x7f091ce4
.word 0x7f7fffff
.word 0x7f0a03a1
.word 0x7f7fffff
.word 0x7f262e64
.word 0x7f7fffff
.word 0x7e675fa1
.word 0x7f7fffff
.word 0x7f119488
.word 0x7f7fffff
.word 0x7f00e937
.word 0x7f7fffff
.word 0x7ec8e6cd
.word 0x7f7fffff
.word 0x7ef3c956
.word 0x7f7fffff
.word 0x7ef566f3
.word 0x7f7fffff
.word 0x7f2099c0
.word 0x7f7fffff
.word 0x7f3f29ee
.word 0x7f7fffff
.word 0x7e472f12
.word 0x7f7fffff
.word 0x7c21ceeb
.word 0x7f7fffff
.word 0x7ef046ce
.word 0x7f7fffff
.word 0x7e8e1012
.word 0x7f7fffff
.word 0x7f36dceb
.word 0x7f7fffff
.word 0x7f015194
.word 0x7f7fffff
RVTEST_DATA_END

RVMODEL_DATA_BEGIN


signature_x15_0:
    .fill 0*(XLEN/32),4,0xdeadbeef


signature_x15_1:
    .fill 324*(XLEN/32),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*(XLEN/32),4,0xdeadbeef

#endif

RVMODEL_DATA_END
