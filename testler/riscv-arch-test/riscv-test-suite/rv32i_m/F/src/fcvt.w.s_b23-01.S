
// -----------
// This file was generated by riscv_ctg (https://gitlab.com/incoresemi/riscv-compliance/riscv_ctg)
// version   : 0.5.2
// timestamp : Tue Sep  7 17:29:32 2021 GMT
// usage     : riscv_ctg \
//                  -- cgf $cgf \
//                  -- xlen $xlen \
// -----------
//
// -----------
// Copyright (c) 2021. IIT Madras. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fcvt.w.s instruction of the RISC-V F extension for the fcvt.w.s_b23 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fcvt.w.s_b23)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x16,test_fp)
RVTEST_SIGBASE(x15,signature_x15_1)

inst_0:// rs1==f24, rd==x24, fs1 == 0 and fe1 == 0x9d and fm1 == 0x7ffffc and rm_val == 0  
// opcode: fcvt.w.s ; op1:f24; dest:x24; op1val:0x4efffffc; valaddr_reg:x16; val_offset:0; rmval:0x0; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x24, f24, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_1:// rs1==f1, rd==x1, fs1 == 0 and fe1 == 0x9e and fm1 == 0x000004 and rm_val == 4  
// opcode: fcvt.w.s ; op1:f1; dest:x1; op1val:0x4f000004; valaddr_reg:x16; val_offset:4; rmval:0x4; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x1, f1, 0x4, 0, x16, 4, x17, x15, 8, x18)

inst_2:// rs1==f4, rd==x19, fs1 == 0 and fe1 == 0x9e and fm1 == 0x000004 and rm_val == 3  
// opcode: fcvt.w.s ; op1:f4; dest:x19; op1val:0x4f000004; valaddr_reg:x16; val_offset:8; rmval:0x3; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x19, f4, 0x3, 0, x16, 8, x17, x15, 16, x18)
RVTEST_VALBASEMOV(x20, x16)
RVTEST_SIGBASE(x19,signature_x19_0)

inst_3:// rs1==f11, rd==x16, fs1 == 0 and fe1 == 0x9e and fm1 == 0x000004 and rm_val == 2  
// opcode: fcvt.w.s ; op1:f11; dest:x16; op1val:0x4f000004; valaddr_reg:x20; val_offset:12; rmval:0x2; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x16, f11, 0x2, 0, x20, 12, x21, x19, 0, x18)
RVTEST_VALBASEMOV(x16, x20)
RVTEST_SIGBASE(x15,signature_x15_2)

inst_4:// rs1==f3, rd==x29, fs1 == 0 and fe1 == 0x9e and fm1 == 0x000004 and rm_val == 1  
// opcode: fcvt.w.s ; op1:f3; dest:x29; op1val:0x4f000004; valaddr_reg:x16; val_offset:16; rmval:0x1; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x29, f3, 0x1, 0, x16, 16, x17, x15, 0, x18)

inst_5:// rs1==f14, rd==x3, fs1 == 0 and fe1 == 0x9e and fm1 == 0x000004 and rm_val == 0  
// opcode: fcvt.w.s ; op1:f14; dest:x3; op1val:0x4f000004; valaddr_reg:x16; val_offset:20; rmval:0x0; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x3, f14, 0x0, 0, x16, 20, x17, x15, 8, x18)

inst_6:// rs1==f2, rd==x31, fs1 == 0 and fe1 == 0x9e and fm1 == 0x000003 and rm_val == 4  
// opcode: fcvt.w.s ; op1:f2; dest:x31; op1val:0x4f000003; valaddr_reg:x16; val_offset:24; rmval:0x4; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x31, f2, 0x4, 0, x16, 24, x17, x15, 16, x18)

inst_7:// rs1==f10, rd==x23, fs1 == 0 and fe1 == 0x9e and fm1 == 0x000003 and rm_val == 3  
// opcode: fcvt.w.s ; op1:f10; dest:x23; op1val:0x4f000003; valaddr_reg:x16; val_offset:28; rmval:0x3; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x23, f10, 0x3, 0, x16, 28, x17, x15, 24, x18)

inst_8:// rs1==f0, rd==x5, fs1 == 0 and fe1 == 0x9e and fm1 == 0x000003 and rm_val == 2  
// opcode: fcvt.w.s ; op1:f0; dest:x5; op1val:0x4f000003; valaddr_reg:x16; val_offset:32; rmval:0x2; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x5, f0, 0x2, 0, x16, 32, x17, x15, 32, x18)

inst_9:// rs1==f26, rd==x21, fs1 == 0 and fe1 == 0x9e and fm1 == 0x000003 and rm_val == 1  
// opcode: fcvt.w.s ; op1:f26; dest:x21; op1val:0x4f000003; valaddr_reg:x16; val_offset:36; rmval:0x1; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x21, f26, 0x1, 0, x16, 36, x17, x15, 40, x18)

inst_10:// rs1==f9, rd==x0, fs1 == 0 and fe1 == 0x9e and fm1 == 0x000003 and rm_val == 0  
// opcode: fcvt.w.s ; op1:f9; dest:x0; op1val:0x4f000003; valaddr_reg:x16; val_offset:40; rmval:0x0; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x0, f9, 0x0, 0, x16, 40, x17, x15, 48, x18)

inst_11:// rs1==f21, rd==x4, fs1 == 0 and fe1 == 0x9e and fm1 == 0x000002 and rm_val == 4  
// opcode: fcvt.w.s ; op1:f21; dest:x4; op1val:0x4f000002; valaddr_reg:x16; val_offset:44; rmval:0x4; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x4, f21, 0x4, 0, x16, 44, x17, x15, 56, x18)
RVTEST_VALBASEMOV(x20, x16)
RVTEST_SIGBASE(x19,signature_x19_1)

inst_12:// rs1==f31, rd==x17, fs1 == 0 and fe1 == 0x9e and fm1 == 0x000002 and rm_val == 3  
// opcode: fcvt.w.s ; op1:f31; dest:x17; op1val:0x4f000002; valaddr_reg:x20; val_offset:48; rmval:0x3; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x17, f31, 0x3, 0, x20, 48, x21, x19, 0, x18)
RVTEST_VALBASEMOV(x16, x20)
RVTEST_SIGBASE(x15,signature_x15_3)

inst_13:// rs1==f6, rd==x26, fs1 == 0 and fe1 == 0x9e and fm1 == 0x000002 and rm_val == 2  
// opcode: fcvt.w.s ; op1:f6; dest:x26; op1val:0x4f000002; valaddr_reg:x16; val_offset:52; rmval:0x2; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x26, f6, 0x2, 0, x16, 52, x17, x15, 0, x18)

inst_14:// rs1==f13, rd==x11, fs1 == 0 and fe1 == 0x9e and fm1 == 0x000002 and rm_val == 1  
// opcode: fcvt.w.s ; op1:f13; dest:x11; op1val:0x4f000002; valaddr_reg:x16; val_offset:56; rmval:0x1; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x11, f13, 0x1, 0, x16, 56, x17, x15, 8, x18)

inst_15:// rs1==f30, rd==x20, fs1 == 0 and fe1 == 0x9e and fm1 == 0x000002 and rm_val == 0  
// opcode: fcvt.w.s ; op1:f30; dest:x20; op1val:0x4f000002; valaddr_reg:x16; val_offset:60; rmval:0x0; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x20, f30, 0x0, 0, x16, 60, x17, x15, 16, x18)

inst_16:// rs1==f8, rd==x25, fs1 == 0 and fe1 == 0x9e and fm1 == 0x000001 and rm_val == 4  
// opcode: fcvt.w.s ; op1:f8; dest:x25; op1val:0x4f000001; valaddr_reg:x16; val_offset:64; rmval:0x4; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x25, f8, 0x4, 0, x16, 64, x17, x15, 24, x18)

inst_17:// rs1==f12, rd==x30, fs1 == 0 and fe1 == 0x9e and fm1 == 0x000001 and rm_val == 3  
// opcode: fcvt.w.s ; op1:f12; dest:x30; op1val:0x4f000001; valaddr_reg:x16; val_offset:68; rmval:0x3; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x30, f12, 0x3, 0, x16, 68, x17, x15, 32, x18)

inst_18:// rs1==f23, rd==x18, fs1 == 0 and fe1 == 0x9e and fm1 == 0x000001 and rm_val == 2  
// opcode: fcvt.w.s ; op1:f23; dest:x18; op1val:0x4f000001; valaddr_reg:x16; val_offset:72; rmval:0x2; correctval:0; testreg:x22
TEST_FPID_OP(fcvt.w.s, x18, f23, 0x2, 0, x16, 72, x17, x15, 40, x22)

inst_19:// rs1==f22, rd==x12, fs1 == 0 and fe1 == 0x9e and fm1 == 0x000001 and rm_val == 1  
// opcode: fcvt.w.s ; op1:f22; dest:x12; op1val:0x4f000001; valaddr_reg:x16; val_offset:76; rmval:0x1; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x12, f22, 0x1, 0, x16, 76, x17, x15, 48, x18)

inst_20:// rs1==f16, rd==x27, fs1 == 0 and fe1 == 0x9e and fm1 == 0x000001 and rm_val == 0  
// opcode: fcvt.w.s ; op1:f16; dest:x27; op1val:0x4f000001; valaddr_reg:x16; val_offset:80; rmval:0x0; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x27, f16, 0x0, 0, x16, 80, x17, x15, 56, x18)

inst_21:// rs1==f27, rd==x10, fs1 == 0 and fe1 == 0x9e and fm1 == 0x000000 and rm_val == 4  
// opcode: fcvt.w.s ; op1:f27; dest:x10; op1val:0x4f000000; valaddr_reg:x16; val_offset:84; rmval:0x4; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x10, f27, 0x4, 0, x16, 84, x17, x15, 64, x18)

inst_22:// rs1==f20, rd==x28, fs1 == 0 and fe1 == 0x9e and fm1 == 0x000000 and rm_val == 3  
// opcode: fcvt.w.s ; op1:f20; dest:x28; op1val:0x4f000000; valaddr_reg:x16; val_offset:88; rmval:0x3; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x28, f20, 0x3, 0, x16, 88, x17, x15, 72, x18)

inst_23:// rs1==f19, rd==x14, fs1 == 0 and fe1 == 0x9e and fm1 == 0x000000 and rm_val == 2  
// opcode: fcvt.w.s ; op1:f19; dest:x14; op1val:0x4f000000; valaddr_reg:x16; val_offset:92; rmval:0x2; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x14, f19, 0x2, 0, x16, 92, x17, x15, 80, x18)

inst_24:// rs1==f15, rd==x22, fs1 == 0 and fe1 == 0x9e and fm1 == 0x000000 and rm_val == 1  
// opcode: fcvt.w.s ; op1:f15; dest:x22; op1val:0x4f000000; valaddr_reg:x16; val_offset:96; rmval:0x1; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x22, f15, 0x1, 0, x16, 96, x17, x15, 88, x18)

inst_25:// rs1==f7, rd==x13, fs1 == 0 and fe1 == 0x9e and fm1 == 0x000000 and rm_val == 0  
// opcode: fcvt.w.s ; op1:f7; dest:x13; op1val:0x4f000000; valaddr_reg:x16; val_offset:100; rmval:0x0; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x13, f7, 0x0, 0, x16, 100, x17, x15, 96, x18)

inst_26:// rs1==f5, rd==x7, fs1 == 0 and fe1 == 0x9d and fm1 == 0x7fffff and rm_val == 4  
// opcode: fcvt.w.s ; op1:f5; dest:x7; op1val:0x4effffff; valaddr_reg:x16; val_offset:104; rmval:0x4; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x7, f5, 0x4, 0, x16, 104, x17, x15, 104, x18)

inst_27:// rs1==f25, rd==x9, fs1 == 0 and fe1 == 0x9d and fm1 == 0x7fffff and rm_val == 3  
// opcode: fcvt.w.s ; op1:f25; dest:x9; op1val:0x4effffff; valaddr_reg:x16; val_offset:108; rmval:0x3; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x9, f25, 0x3, 0, x16, 108, x17, x15, 112, x18)

inst_28:// rs1==f28, rd==x8, fs1 == 0 and fe1 == 0x9d and fm1 == 0x7fffff and rm_val == 2  
// opcode: fcvt.w.s ; op1:f28; dest:x8; op1val:0x4effffff; valaddr_reg:x16; val_offset:112; rmval:0x2; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x8, f28, 0x2, 0, x16, 112, x17, x15, 120, x18)

inst_29:// rs1==f29, rd==x2, fs1 == 0 and fe1 == 0x9d and fm1 == 0x7fffff and rm_val == 1  
// opcode: fcvt.w.s ; op1:f29; dest:x2; op1val:0x4effffff; valaddr_reg:x16; val_offset:116; rmval:0x1; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x2, f29, 0x1, 0, x16, 116, x17, x15, 128, x18)
RVTEST_VALBASEMOV(x20, x16)
RVTEST_SIGBASE(x19,signature_x19_2)

inst_30:// rs1==f17, rd==x15, fs1 == 0 and fe1 == 0x9d and fm1 == 0x7fffff and rm_val == 0  
// opcode: fcvt.w.s ; op1:f17; dest:x15; op1val:0x4effffff; valaddr_reg:x20; val_offset:120; rmval:0x0; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x15, f17, 0x0, 0, x20, 120, x21, x19, 0, x18)
RVTEST_VALBASEMOV(x16, x20)
RVTEST_SIGBASE(x15,signature_x15_4)

inst_31:// rs1==f18, rd==x6, fs1 == 0 and fe1 == 0x9d and fm1 == 0x7ffffe and rm_val == 4  
// opcode: fcvt.w.s ; op1:f18; dest:x6; op1val:0x4efffffe; valaddr_reg:x16; val_offset:124; rmval:0x4; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x6, f18, 0x4, 0, x16, 124, x17, x15, 0, x18)

inst_32:// fs1 == 0 and fe1 == 0x9d and fm1 == 0x7ffffe and rm_val == 3  
// opcode: fcvt.w.s ; op1:f10; dest:x11; op1val:0x4efffffe; valaddr_reg:x16; val_offset:128; rmval:0x3; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x11, f10, 0x3, 0, x16, 128, x17, x15, 8, x18)

inst_33:// fs1 == 0 and fe1 == 0x9d and fm1 == 0x7ffffe and rm_val == 2  
// opcode: fcvt.w.s ; op1:f10; dest:x11; op1val:0x4efffffe; valaddr_reg:x16; val_offset:132; rmval:0x2; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x11, f10, 0x2, 0, x16, 132, x17, x15, 16, x18)

inst_34:// fs1 == 0 and fe1 == 0x9d and fm1 == 0x7ffffe and rm_val == 1  
// opcode: fcvt.w.s ; op1:f10; dest:x11; op1val:0x4efffffe; valaddr_reg:x16; val_offset:136; rmval:0x1; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x11, f10, 0x1, 0, x16, 136, x17, x15, 24, x18)

inst_35:// fs1 == 0 and fe1 == 0x9d and fm1 == 0x7ffffe and rm_val == 0  
// opcode: fcvt.w.s ; op1:f10; dest:x11; op1val:0x4efffffe; valaddr_reg:x16; val_offset:140; rmval:0x0; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x11, f10, 0x0, 0, x16, 140, x17, x15, 32, x18)

inst_36:// fs1 == 0 and fe1 == 0x9d and fm1 == 0x7ffffd and rm_val == 4  
// opcode: fcvt.w.s ; op1:f10; dest:x11; op1val:0x4efffffd; valaddr_reg:x16; val_offset:144; rmval:0x4; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x11, f10, 0x4, 0, x16, 144, x17, x15, 40, x18)

inst_37:// fs1 == 0 and fe1 == 0x9d and fm1 == 0x7ffffd and rm_val == 3  
// opcode: fcvt.w.s ; op1:f10; dest:x11; op1val:0x4efffffd; valaddr_reg:x16; val_offset:148; rmval:0x3; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x11, f10, 0x3, 0, x16, 148, x17, x15, 48, x18)

inst_38:// fs1 == 0 and fe1 == 0x9d and fm1 == 0x7ffffd and rm_val == 2  
// opcode: fcvt.w.s ; op1:f10; dest:x11; op1val:0x4efffffd; valaddr_reg:x16; val_offset:152; rmval:0x2; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x11, f10, 0x2, 0, x16, 152, x17, x15, 56, x18)

inst_39:// fs1 == 0 and fe1 == 0x9d and fm1 == 0x7ffffd and rm_val == 1  
// opcode: fcvt.w.s ; op1:f10; dest:x11; op1val:0x4efffffd; valaddr_reg:x16; val_offset:156; rmval:0x1; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x11, f10, 0x1, 0, x16, 156, x17, x15, 64, x18)

inst_40:// fs1 == 0 and fe1 == 0x9d and fm1 == 0x7ffffd and rm_val == 0  
// opcode: fcvt.w.s ; op1:f10; dest:x11; op1val:0x4efffffd; valaddr_reg:x16; val_offset:160; rmval:0x0; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x11, f10, 0x0, 0, x16, 160, x17, x15, 72, x18)

inst_41:// fs1 == 0 and fe1 == 0x9d and fm1 == 0x7ffffc and rm_val == 4  
// opcode: fcvt.w.s ; op1:f10; dest:x11; op1val:0x4efffffc; valaddr_reg:x16; val_offset:164; rmval:0x4; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x11, f10, 0x4, 0, x16, 164, x17, x15, 80, x18)

inst_42:// fs1 == 0 and fe1 == 0x9d and fm1 == 0x7ffffc and rm_val == 3  
// opcode: fcvt.w.s ; op1:f10; dest:x11; op1val:0x4efffffc; valaddr_reg:x16; val_offset:168; rmval:0x3; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x11, f10, 0x3, 0, x16, 168, x17, x15, 88, x18)

inst_43:// fs1 == 0 and fe1 == 0x9d and fm1 == 0x7ffffc and rm_val == 2  
// opcode: fcvt.w.s ; op1:f10; dest:x11; op1val:0x4efffffc; valaddr_reg:x16; val_offset:172; rmval:0x2; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x11, f10, 0x2, 0, x16, 172, x17, x15, 96, x18)

inst_44:// fs1 == 0 and fe1 == 0x9d and fm1 == 0x7ffffc and rm_val == 1  
// opcode: fcvt.w.s ; op1:f10; dest:x11; op1val:0x4efffffc; valaddr_reg:x16; val_offset:176; rmval:0x1; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x11, f10, 0x1, 0, x16, 176, x17, x15, 104, x18)

inst_45:// fs1 == 0 and fe1 == 0x9e and fm1 == 0x000003 and rm_val == 0  
// opcode: fcvt.w.s ; op1:f10; dest:x11; op1val:0x4f000003; valaddr_reg:x16; val_offset:180; rmval:0x0; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x11, f10, 0x0, 0, x16, 180, x17, x15, 112, x18)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
test_fp:
.word 0x4efffffc
.word 0x4f000004
.word 0x4f000004
.word 0x4f000004
.word 0x4f000004
.word 0x4f000004
.word 0x4f000003
.word 0x4f000003
.word 0x4f000003
.word 0x4f000003
.word 0x4f000003
.word 0x4f000002
.word 0x4f000002
.word 0x4f000002
.word 0x4f000002
.word 0x4f000002
.word 0x4f000001
.word 0x4f000001
.word 0x4f000001
.word 0x4f000001
.word 0x4f000001
.word 0x4f000000
.word 0x4f000000
.word 0x4f000000
.word 0x4f000000
.word 0x4f000000
.word 0x4effffff
.word 0x4effffff
.word 0x4effffff
.word 0x4effffff
.word 0x4effffff
.word 0x4efffffe
.word 0x4efffffe
.word 0x4efffffe
.word 0x4efffffe
.word 0x4efffffe
.word 0x4efffffd
.word 0x4efffffd
.word 0x4efffffd
.word 0x4efffffd
.word 0x4efffffd
.word 0x4efffffc
.word 0x4efffffc
.word 0x4efffffc
.word 0x4efffffc
.word 0x4f000003
RVTEST_DATA_END

RVMODEL_DATA_BEGIN


signature_x15_0:
    .fill 0*(XLEN/32),4,0xdeadbeef


signature_x15_1:
    .fill 6*(XLEN/32),4,0xdeadbeef


signature_x19_0:
    .fill 2*(XLEN/32),4,0xdeadbeef


signature_x15_2:
    .fill 16*(XLEN/32),4,0xdeadbeef


signature_x19_1:
    .fill 2*(XLEN/32),4,0xdeadbeef


signature_x15_3:
    .fill 34*(XLEN/32),4,0xdeadbeef


signature_x19_2:
    .fill 2*(XLEN/32),4,0xdeadbeef


signature_x15_4:
    .fill 30*(XLEN/32),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*(XLEN/32),4,0xdeadbeef

#endif

RVMODEL_DATA_END
