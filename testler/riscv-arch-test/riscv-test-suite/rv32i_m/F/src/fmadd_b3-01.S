
// -----------
// This file was generated by riscv_ctg (https://gitlab.com/incoresemi/riscv-compliance/riscv_ctg)
// version   : 0.5.2
// timestamp : Tue Sep  7 16:07:58 2021 GMT
// usage     : riscv_ctg \
//                  -- cgf $cgf \
//                  -- xlen $xlen \
// -----------
//
// -----------
// Copyright (c) 2021. IIT Madras. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmadd.s instruction of the RISC-V F extension for the fmadd_b3 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fmadd_b3)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x16,test_fp)
RVTEST_SIGBASE(x15,signature_x15_1)

inst_0:
// rs1 == rs3 != rs2 and rs1 == rs3 != rd and rd != rs2, rs1==f1, rs2==f4, rs3==f1, rd==f20, fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f31b9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x186e02 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0e6c50 and rm_val == 0  
// opcode: fmadd.s ; op1:f1; op2:f4; op3:f1; dest:f20; op1val:0x7eef31b9; op2val:0xbf986e02; op3val:0x7eef31b9; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f20, f1, f4, f1, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_1:
// rs2 == rd != rs1 and rs2 == rd != rs3 and rs3 != rs1, rs1==f3, rs2==f15, rs3==f12, rd==f15, fs1 == 0 and fe1 == 0xfd and fm1 == 0x6ddfec and fs2 == 1 and fe2 == 0x7e and fm2 == 0x31243e and fs3 == 0 and fe3 == 0xfd and fm3 == 0x249980 and rm_val == 4  
// opcode: fmadd.s ; op1:f3; op2:f15; op3:f12; dest:f15; op1val:0x7eeddfec; op2val:0xbf31243e; op3val:0x7ea49980; valaddr_reg:x16; val_offset:12; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f15, f3, f15, f12, 0x4, 0, x16, 12, x17, x15, 8, x18)

inst_2:
// rs3 == rd != rs1 and rs3 == rd != rs2 and rs2 != rs1, rs1==f20, rs2==f8, rs3==f9, rd==f9, fs1 == 0 and fe1 == 0xfd and fm1 == 0x6ddfec and fs2 == 1 and fe2 == 0x7e and fm2 == 0x31243e and fs3 == 0 and fe3 == 0xfd and fm3 == 0x249980 and rm_val == 3  
// opcode: fmadd.s ; op1:f20; op2:f8; op3:f9; dest:f9; op1val:0x7eeddfec; op2val:0xbf31243e; op3val:0x7ea49980; valaddr_reg:x16; val_offset:24; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f9, f20, f8, f9, 0x3, 0, x16, 24, x17, x15, 16, x18)

inst_3:
// rs1 == rs2 != rs3 and rs1 == rs2 != rd and rd != rs3, rs1==f9, rs2==f9, rs3==f10, rd==f30, fs1 == 0 and fe1 == 0xfd and fm1 == 0x6ddfec and fs2 == 1 and fe2 == 0x7e and fm2 == 0x31243e and fs3 == 0 and fe3 == 0xfd and fm3 == 0x249980 and rm_val == 2  
// opcode: fmadd.s ; op1:f9; op2:f9; op3:f10; dest:f30; op1val:0x7eeddfec; op2val:0x7eeddfec; op3val:0x7ea49980; valaddr_reg:x16; val_offset:36; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f30, f9, f9, f10, 0x2, 0, x16, 36, x17, x15, 24, x18)

inst_4:
// rs1 == rs2 == rd != rs3, rs1==f0, rs2==f0, rs3==f24, rd==f0, fs1 == 0 and fe1 == 0xfd and fm1 == 0x6ddfec and fs2 == 1 and fe2 == 0x7e and fm2 == 0x31243e and fs3 == 0 and fe3 == 0xfd and fm3 == 0x249980 and rm_val == 1  
// opcode: fmadd.s ; op1:f0; op2:f0; op3:f24; dest:f0; op1val:0x7eeddfec; op2val:0x7eeddfec; op3val:0x7ea49980; valaddr_reg:x16; val_offset:48; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f0, f0, f0, f24, 0x1, 0, x16, 48, x17, x15, 32, x18)

inst_5:
// rs1 == rs2 == rs3 != rd, rs1==f2, rs2==f2, rs3==f2, rd==f21, fs1 == 0 and fe1 == 0xfd and fm1 == 0x6ddfec and fs2 == 1 and fe2 == 0x7e and fm2 == 0x31243e and fs3 == 0 and fe3 == 0xfd and fm3 == 0x249980 and rm_val == 0  
// opcode: fmadd.s ; op1:f2; op2:f2; op3:f2; dest:f21; op1val:0x7eeddfec; op2val:0x7eeddfec; op3val:0x7eeddfec; valaddr_reg:x16; val_offset:60; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f21, f2, f2, f2, 0x0, 0, x16, 60, x17, x15, 40, x18)

inst_6:
// rs1 == rs2 == rs3 == rd, rs1==f18, rs2==f18, rs3==f18, rd==f18, fs1 == 0 and fe1 == 0xfd and fm1 == 0x348d37 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7239df and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2ad64f and rm_val == 4  
// opcode: fmadd.s ; op1:f18; op2:f18; op3:f18; dest:f18; op1val:0x7eb48d37; op2val:0x7eb48d37; op3val:0x7eb48d37; valaddr_reg:x16; val_offset:72; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f18, f18, f18, f18, 0x4, 0, x16, 72, x17, x15, 48, x18)

inst_7:
// rs1 == rd != rs2 and rs1 == rd != rs3 and rs3 != rs2, rs1==f6, rs2==f1, rs3==f31, rd==f6, fs1 == 0 and fe1 == 0xfd and fm1 == 0x348d37 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7239df and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2ad64f and rm_val == 3  
// opcode: fmadd.s ; op1:f6; op2:f1; op3:f31; dest:f6; op1val:0x7eb48d37; op2val:0xbff239df; op3val:0x7f2ad64f; valaddr_reg:x16; val_offset:84; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f6, f6, f1, f31, 0x3, 0, x16, 84, x17, x15, 56, x18)

inst_8:
// rd == rs2 == rs3 != rs1, rs1==f4, rs2==f11, rs3==f11, rd==f11, fs1 == 0 and fe1 == 0xfd and fm1 == 0x348d37 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7239df and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2ad64f and rm_val == 2  
// opcode: fmadd.s ; op1:f4; op2:f11; op3:f11; dest:f11; op1val:0x7eb48d37; op2val:0xbff239df; op3val:0xbff239df; valaddr_reg:x16; val_offset:96; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f11, f4, f11, f11, 0x2, 0, x16, 96, x17, x15, 64, x18)

inst_9:
// rs1 == rd == rs3 != rs2, rs1==f25, rs2==f28, rs3==f25, rd==f25, fs1 == 0 and fe1 == 0xfd and fm1 == 0x348d37 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7239df and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2ad64f and rm_val == 1  
// opcode: fmadd.s ; op1:f25; op2:f28; op3:f25; dest:f25; op1val:0x7eb48d37; op2val:0xbff239df; op3val:0x7eb48d37; valaddr_reg:x16; val_offset:108; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f25, f25, f28, f25, 0x1, 0, x16, 108, x17, x15, 72, x18)

inst_10:
// rs1 != rs2 and rs1 != rd and rs1 != rs3 and rs2 != rs3 and rs2 != rd and rs3 != rd, rs1==f26, rs2==f13, rs3==f0, rd==f3, fs1 == 0 and fe1 == 0xfd and fm1 == 0x348d37 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7239df and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2ad64f and rm_val == 0  
// opcode: fmadd.s ; op1:f26; op2:f13; op3:f0; dest:f3; op1val:0x7eb48d37; op2val:0xbff239df; op3val:0x7f2ad64f; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f3, f26, f13, f0, 0x0, 0, x16, 120, x17, x15, 80, x18)

inst_11:
// rs2 == rs3 != rs1 and rs2 == rs3 != rd and rd != rs1, rs1==f19, rs2==f16, rs3==f16, rd==f1, fs1 == 0 and fe1 == 0xfe and fm1 == 0x11fc97 and fs2 == 1 and fe2 == 0x74 and fm2 == 0x179248 and fs3 == 0 and fe3 == 0xf3 and fm3 == 0x2cded1 and rm_val == 4  
// opcode: fmadd.s ; op1:f19; op2:f16; op3:f16; dest:f1; op1val:0x7f11fc97; op2val:0xba179248; op3val:0xba179248; valaddr_reg:x16; val_offset:132; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f1, f19, f16, f16, 0x4, 0, x16, 132, x17, x15, 88, x18)

inst_12:
// rs1==f15, rs2==f27, rs3==f19, rd==f29, fs1 == 0 and fe1 == 0xfe and fm1 == 0x11fc97 and fs2 == 1 and fe2 == 0x74 and fm2 == 0x179248 and fs3 == 0 and fe3 == 0xf3 and fm3 == 0x2cded1 and rm_val == 3  
// opcode: fmadd.s ; op1:f15; op2:f27; op3:f19; dest:f29; op1val:0x7f11fc97; op2val:0xba179248; op3val:0x79acded1; valaddr_reg:x16; val_offset:144; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f29, f15, f27, f19, 0x3, 0, x16, 144, x17, x15, 96, x18)

inst_13:
// rs1==f22, rs2==f24, rs3==f28, rd==f17, fs1 == 0 and fe1 == 0xfe and fm1 == 0x11fc97 and fs2 == 1 and fe2 == 0x74 and fm2 == 0x179248 and fs3 == 0 and fe3 == 0xf3 and fm3 == 0x2cded1 and rm_val == 2  
// opcode: fmadd.s ; op1:f22; op2:f24; op3:f28; dest:f17; op1val:0x7f11fc97; op2val:0xba179248; op3val:0x79acded1; valaddr_reg:x16; val_offset:156; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f17, f22, f24, f28, 0x2, 0, x16, 156, x17, x15, 104, x18)

inst_14:
// rs1==f8, rs2==f21, rs3==f30, rd==f12, fs1 == 0 and fe1 == 0xfe and fm1 == 0x11fc97 and fs2 == 1 and fe2 == 0x74 and fm2 == 0x179248 and fs3 == 0 and fe3 == 0xf3 and fm3 == 0x2cded1 and rm_val == 1  
// opcode: fmadd.s ; op1:f8; op2:f21; op3:f30; dest:f12; op1val:0x7f11fc97; op2val:0xba179248; op3val:0x79acded1; valaddr_reg:x16; val_offset:168; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f12, f8, f21, f30, 0x1, 0, x16, 168, x17, x15, 112, x18)

inst_15:
// rs1==f24, rs2==f30, rs3==f4, rd==f8, fs1 == 0 and fe1 == 0xfe and fm1 == 0x11fc97 and fs2 == 1 and fe2 == 0x74 and fm2 == 0x179248 and fs3 == 0 and fe3 == 0xf3 and fm3 == 0x2cded1 and rm_val == 0  
// opcode: fmadd.s ; op1:f24; op2:f30; op3:f4; dest:f8; op1val:0x7f11fc97; op2val:0xba179248; op3val:0x79acded1; valaddr_reg:x16; val_offset:180; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f8, f24, f30, f4, 0x0, 0, x16, 180, x17, x15, 120, x18)

inst_16:
// rs1==f16, rs2==f12, rs3==f26, rd==f28, fs1 == 0 and fe1 == 0xfe and fm1 == 0x2abcc7 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0a77e2 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x38b371 and rm_val == 4  
// opcode: fmadd.s ; op1:f16; op2:f12; op3:f26; dest:f28; op1val:0x7f2abcc7; op2val:0xbf0a77e2; op3val:0x7eb8b371; valaddr_reg:x16; val_offset:192; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f28, f16, f12, f26, 0x4, 0, x16, 192, x17, x15, 128, x18)

inst_17:
// rs1==f12, rs2==f3, rs3==f13, rd==f27, fs1 == 0 and fe1 == 0xfe and fm1 == 0x2abcc7 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0a77e2 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x38b371 and rm_val == 3  
// opcode: fmadd.s ; op1:f12; op2:f3; op3:f13; dest:f27; op1val:0x7f2abcc7; op2val:0xbf0a77e2; op3val:0x7eb8b371; valaddr_reg:x16; val_offset:204; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f27, f12, f3, f13, 0x3, 0, x16, 204, x17, x15, 136, x18)

inst_18:
// rs1==f10, rs2==f20, rs3==f23, rd==f22, fs1 == 0 and fe1 == 0xfe and fm1 == 0x2abcc7 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0a77e2 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x38b371 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f20; op3:f23; dest:f22; op1val:0x7f2abcc7; op2val:0xbf0a77e2; op3val:0x7eb8b371; valaddr_reg:x16; val_offset:216; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f22, f10, f20, f23, 0x2, 0, x16, 216, x17, x15, 144, x18)

inst_19:
// rs1==f23, rs2==f5, rs3==f21, rd==f4, fs1 == 0 and fe1 == 0xfe and fm1 == 0x2abcc7 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0a77e2 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x38b371 and rm_val == 1  
// opcode: fmadd.s ; op1:f23; op2:f5; op3:f21; dest:f4; op1val:0x7f2abcc7; op2val:0xbf0a77e2; op3val:0x7eb8b371; valaddr_reg:x16; val_offset:228; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f4, f23, f5, f21, 0x1, 0, x16, 228, x17, x15, 152, x18)

inst_20:
// rs1==f31, rs2==f25, rs3==f14, rd==f19, fs1 == 0 and fe1 == 0xfe and fm1 == 0x2abcc7 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0a77e2 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x38b371 and rm_val == 0  
// opcode: fmadd.s ; op1:f31; op2:f25; op3:f14; dest:f19; op1val:0x7f2abcc7; op2val:0xbf0a77e2; op3val:0x7eb8b371; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f19, f31, f25, f14, 0x0, 0, x16, 240, x17, x15, 160, x18)

inst_21:
// rs1==f11, rs2==f22, rs3==f7, rd==f24, fs1 == 0 and fe1 == 0xfc and fm1 == 0x1b72ef and fs2 == 1 and fe2 == 0x7c and fm2 == 0x4798e7 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x726661 and rm_val == 4  
// opcode: fmadd.s ; op1:f11; op2:f22; op3:f7; dest:f24; op1val:0x7e1b72ef; op2val:0xbe4798e7; op3val:0x7cf26661; valaddr_reg:x16; val_offset:252; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f24, f11, f22, f7, 0x4, 0, x16, 252, x17, x15, 168, x18)

inst_22:
// rs1==f13, rs2==f26, rs3==f22, rd==f16, fs1 == 0 and fe1 == 0xfc and fm1 == 0x1b72ef and fs2 == 1 and fe2 == 0x7c and fm2 == 0x4798e7 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x726661 and rm_val == 3  
// opcode: fmadd.s ; op1:f13; op2:f26; op3:f22; dest:f16; op1val:0x7e1b72ef; op2val:0xbe4798e7; op3val:0x7cf26661; valaddr_reg:x16; val_offset:264; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f16, f13, f26, f22, 0x3, 0, x16, 264, x17, x15, 176, x18)

inst_23:
// rs1==f14, rs2==f7, rs3==f20, rd==f23, fs1 == 0 and fe1 == 0xfc and fm1 == 0x1b72ef and fs2 == 1 and fe2 == 0x7c and fm2 == 0x4798e7 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x726661 and rm_val == 2  
// opcode: fmadd.s ; op1:f14; op2:f7; op3:f20; dest:f23; op1val:0x7e1b72ef; op2val:0xbe4798e7; op3val:0x7cf26661; valaddr_reg:x16; val_offset:276; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f23, f14, f7, f20, 0x2, 0, x16, 276, x17, x15, 184, x18)

inst_24:
// rs1==f28, rs2==f6, rs3==f29, rd==f13, fs1 == 0 and fe1 == 0xfc and fm1 == 0x1b72ef and fs2 == 1 and fe2 == 0x7c and fm2 == 0x4798e7 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x726661 and rm_val == 1  
// opcode: fmadd.s ; op1:f28; op2:f6; op3:f29; dest:f13; op1val:0x7e1b72ef; op2val:0xbe4798e7; op3val:0x7cf26661; valaddr_reg:x16; val_offset:288; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f28, f6, f29, 0x1, 0, x16, 288, x17, x15, 192, x18)

inst_25:
// rs1==f7, rs2==f17, rs3==f6, rd==f26, fs1 == 0 and fe1 == 0xfc and fm1 == 0x1b72ef and fs2 == 1 and fe2 == 0x7c and fm2 == 0x4798e7 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x726661 and rm_val == 0  
// opcode: fmadd.s ; op1:f7; op2:f17; op3:f6; dest:f26; op1val:0x7e1b72ef; op2val:0xbe4798e7; op3val:0x7cf26661; valaddr_reg:x16; val_offset:300; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f26, f7, f17, f6, 0x0, 0, x16, 300, x17, x15, 200, x18)

inst_26:
// rs1==f27, rs2==f23, rs3==f3, rd==f31, fs1 == 0 and fe1 == 0xfb and fm1 == 0x14fd75 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x2f0fd6 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x4bc4f6 and rm_val == 4  
// opcode: fmadd.s ; op1:f27; op2:f23; op3:f3; dest:f31; op1val:0x7d94fd75; op2val:0xbeaf0fd6; op3val:0x7ccbc4f6; valaddr_reg:x16; val_offset:312; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f31, f27, f23, f3, 0x4, 0, x16, 312, x17, x15, 208, x18)

inst_27:
// rs1==f29, rs2==f10, rs3==f15, rd==f7, fs1 == 0 and fe1 == 0xfb and fm1 == 0x14fd75 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x2f0fd6 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x4bc4f6 and rm_val == 3  
// opcode: fmadd.s ; op1:f29; op2:f10; op3:f15; dest:f7; op1val:0x7d94fd75; op2val:0xbeaf0fd6; op3val:0x7ccbc4f6; valaddr_reg:x16; val_offset:324; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f7, f29, f10, f15, 0x3, 0, x16, 324, x17, x15, 216, x18)

inst_28:
// rs1==f30, rs2==f29, rs3==f5, rd==f2, fs1 == 0 and fe1 == 0xfb and fm1 == 0x14fd75 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x2f0fd6 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x4bc4f6 and rm_val == 2  
// opcode: fmadd.s ; op1:f30; op2:f29; op3:f5; dest:f2; op1val:0x7d94fd75; op2val:0xbeaf0fd6; op3val:0x7ccbc4f6; valaddr_reg:x16; val_offset:336; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f2, f30, f29, f5, 0x2, 0, x16, 336, x17, x15, 224, x18)

inst_29:
// rs1==f17, rs2==f14, rs3==f8, rd==f10, fs1 == 0 and fe1 == 0xfb and fm1 == 0x14fd75 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x2f0fd6 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x4bc4f6 and rm_val == 1  
// opcode: fmadd.s ; op1:f17; op2:f14; op3:f8; dest:f10; op1val:0x7d94fd75; op2val:0xbeaf0fd6; op3val:0x7ccbc4f6; valaddr_reg:x16; val_offset:348; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f10, f17, f14, f8, 0x1, 0, x16, 348, x17, x15, 232, x18)

inst_30:
// rs1==f5, rs2==f31, rs3==f17, rd==f14, fs1 == 0 and fe1 == 0xfb and fm1 == 0x14fd75 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x2f0fd6 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x4bc4f6 and rm_val == 0  
// opcode: fmadd.s ; op1:f5; op2:f31; op3:f17; dest:f14; op1val:0x7d94fd75; op2val:0xbeaf0fd6; op3val:0x7ccbc4f6; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f14, f5, f31, f17, 0x0, 0, x16, 360, x17, x15, 240, x18)

inst_31:
// rs1==f21, rs2==f19, rs3==f27, rd==f5, fs1 == 0 and fe1 == 0xfe and fm1 == 0x0e1c58 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x08cba3 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x17e034 and rm_val == 4  
// opcode: fmadd.s ; op1:f21; op2:f19; op3:f27; dest:f5; op1val:0x7f0e1c58; op2val:0xbf08cba3; op3val:0x7e97e034; valaddr_reg:x16; val_offset:372; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f5, f21, f19, f27, 0x4, 0, x16, 372, x17, x15, 248, x18)

inst_32:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0e1c58 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x08cba3 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x17e034 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0e1c58; op2val:0xbf08cba3; op3val:0x7e97e034; valaddr_reg:x16; val_offset:384; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 384, x17, x15, 256, x18)

inst_33:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0e1c58 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x08cba3 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x17e034 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0e1c58; op2val:0xbf08cba3; op3val:0x7e97e034; valaddr_reg:x16; val_offset:396; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 396, x17, x15, 264, x18)

inst_34:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0e1c58 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x08cba3 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x17e034 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0e1c58; op2val:0xbf08cba3; op3val:0x7e97e034; valaddr_reg:x16; val_offset:408; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 408, x17, x15, 272, x18)

inst_35:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0e1c58 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x08cba3 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x17e034 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0e1c58; op2val:0xbf08cba3; op3val:0x7e97e034; valaddr_reg:x16; val_offset:420; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 420, x17, x15, 280, x18)

inst_36:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x639195 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x77a223 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5c2198 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee39195; op2val:0xbf77a223; op3val:0x7edc2198; valaddr_reg:x16; val_offset:432; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 432, x17, x15, 288, x18)

inst_37:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x639195 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x77a223 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5c2198 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee39195; op2val:0xbf77a223; op3val:0x7edc2198; valaddr_reg:x16; val_offset:444; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 444, x17, x15, 296, x18)

inst_38:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x639195 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x77a223 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5c2198 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee39195; op2val:0xbf77a223; op3val:0x7edc2198; valaddr_reg:x16; val_offset:456; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 456, x17, x15, 304, x18)

inst_39:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x639195 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x77a223 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5c2198 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee39195; op2val:0xbf77a223; op3val:0x7edc2198; valaddr_reg:x16; val_offset:468; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 468, x17, x15, 312, x18)

inst_40:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x639195 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x77a223 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5c2198 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee39195; op2val:0xbf77a223; op3val:0x7edc2198; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 320, x18)

inst_41:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2380ab and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1b9155 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x46b774 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2380ab; op2val:0xbf1b9155; op3val:0x7ec6b774; valaddr_reg:x16; val_offset:492; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 492, x17, x15, 328, x18)

inst_42:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2380ab and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1b9155 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x46b774 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2380ab; op2val:0xbf1b9155; op3val:0x7ec6b774; valaddr_reg:x16; val_offset:504; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 504, x17, x15, 336, x18)

inst_43:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2380ab and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1b9155 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x46b774 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2380ab; op2val:0xbf1b9155; op3val:0x7ec6b774; valaddr_reg:x16; val_offset:516; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 516, x17, x15, 344, x18)

inst_44:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2380ab and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1b9155 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x46b774 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2380ab; op2val:0xbf1b9155; op3val:0x7ec6b774; valaddr_reg:x16; val_offset:528; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 528, x17, x15, 352, x18)

inst_45:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2380ab and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1b9155 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x46b774 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2380ab; op2val:0xbf1b9155; op3val:0x7ec6b774; valaddr_reg:x16; val_offset:540; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 540, x17, x15, 360, x18)

inst_46:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a76f0 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x09e8f2 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x266c69 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1a76f0; op2val:0xbf09e8f2; op3val:0x7ea66c69; valaddr_reg:x16; val_offset:552; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 552, x17, x15, 368, x18)

inst_47:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a76f0 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x09e8f2 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x266c69 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1a76f0; op2val:0xbf09e8f2; op3val:0x7ea66c69; valaddr_reg:x16; val_offset:564; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 564, x17, x15, 376, x18)

inst_48:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a76f0 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x09e8f2 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x266c69 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1a76f0; op2val:0xbf09e8f2; op3val:0x7ea66c69; valaddr_reg:x16; val_offset:576; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 576, x17, x15, 384, x18)

inst_49:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a76f0 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x09e8f2 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x266c69 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1a76f0; op2val:0xbf09e8f2; op3val:0x7ea66c69; valaddr_reg:x16; val_offset:588; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 588, x17, x15, 392, x18)

inst_50:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a76f0 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x09e8f2 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x266c69 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1a76f0; op2val:0xbf09e8f2; op3val:0x7ea66c69; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 400, x18)

inst_51:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1f9240 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x479101 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x78ca25 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1f9240; op2val:0xbf479101; op3val:0x7ef8ca25; valaddr_reg:x16; val_offset:612; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 612, x17, x15, 408, x18)

inst_52:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1f9240 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x479101 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x78ca25 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1f9240; op2val:0xbf479101; op3val:0x7ef8ca25; valaddr_reg:x16; val_offset:624; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 624, x17, x15, 416, x18)

inst_53:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1f9240 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x479101 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x78ca25 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1f9240; op2val:0xbf479101; op3val:0x7ef8ca25; valaddr_reg:x16; val_offset:636; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 636, x17, x15, 424, x18)

inst_54:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1f9240 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x479101 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x78ca25 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1f9240; op2val:0xbf479101; op3val:0x7ef8ca25; valaddr_reg:x16; val_offset:648; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 648, x17, x15, 432, x18)

inst_55:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1f9240 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x479101 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x78ca25 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1f9240; op2val:0xbf479101; op3val:0x7ef8ca25; valaddr_reg:x16; val_offset:660; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 660, x17, x15, 440, x18)

inst_56:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x142090 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x351387 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x518ca6 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e942090; op2val:0xbeb51387; op3val:0x7dd18ca6; valaddr_reg:x16; val_offset:672; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 672, x17, x15, 448, x18)

inst_57:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x142090 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x351387 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x518ca6 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e942090; op2val:0xbeb51387; op3val:0x7dd18ca6; valaddr_reg:x16; val_offset:684; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 684, x17, x15, 456, x18)

inst_58:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x142090 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x351387 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x518ca6 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e942090; op2val:0xbeb51387; op3val:0x7dd18ca6; valaddr_reg:x16; val_offset:696; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 696, x17, x15, 464, x18)

inst_59:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x142090 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x351387 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x518ca6 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e942090; op2val:0xbeb51387; op3val:0x7dd18ca6; valaddr_reg:x16; val_offset:708; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 708, x17, x15, 472, x18)

inst_60:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x142090 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x351387 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x518ca6 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e942090; op2val:0xbeb51387; op3val:0x7dd18ca6; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 480, x18)

inst_61:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6baecd and fs2 == 1 and fe2 == 0x7e and fm2 == 0x116e97 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x05e3d3 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eebaecd; op2val:0xbf116e97; op3val:0x7e85e3d3; valaddr_reg:x16; val_offset:732; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 732, x17, x15, 488, x18)

inst_62:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6baecd and fs2 == 1 and fe2 == 0x7e and fm2 == 0x116e97 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x05e3d3 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eebaecd; op2val:0xbf116e97; op3val:0x7e85e3d3; valaddr_reg:x16; val_offset:744; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 744, x17, x15, 496, x18)

inst_63:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6baecd and fs2 == 1 and fe2 == 0x7e and fm2 == 0x116e97 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x05e3d3 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eebaecd; op2val:0xbf116e97; op3val:0x7e85e3d3; valaddr_reg:x16; val_offset:756; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 756, x17, x15, 504, x18)

inst_64:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6baecd and fs2 == 1 and fe2 == 0x7e and fm2 == 0x116e97 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x05e3d3 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eebaecd; op2val:0xbf116e97; op3val:0x7e85e3d3; valaddr_reg:x16; val_offset:768; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 768, x17, x15, 512, x18)

inst_65:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6baecd and fs2 == 1 and fe2 == 0x7e and fm2 == 0x116e97 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x05e3d3 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eebaecd; op2val:0xbf116e97; op3val:0x7e85e3d3; valaddr_reg:x16; val_offset:780; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 780, x17, x15, 520, x18)

inst_66:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x347e95 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x358230 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x7ff294 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e347e95; op2val:0xbfb58230; op3val:0x7e7ff294; valaddr_reg:x16; val_offset:792; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 792, x17, x15, 528, x18)

inst_67:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x347e95 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x358230 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x7ff294 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e347e95; op2val:0xbfb58230; op3val:0x7e7ff294; valaddr_reg:x16; val_offset:804; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 804, x17, x15, 536, x18)

inst_68:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x347e95 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x358230 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x7ff294 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e347e95; op2val:0xbfb58230; op3val:0x7e7ff294; valaddr_reg:x16; val_offset:816; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 816, x17, x15, 544, x18)

inst_69:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x347e95 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x358230 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x7ff294 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e347e95; op2val:0xbfb58230; op3val:0x7e7ff294; valaddr_reg:x16; val_offset:828; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 828, x17, x15, 552, x18)

inst_70:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x347e95 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x358230 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x7ff294 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e347e95; op2val:0xbfb58230; op3val:0x7e7ff294; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 560, x18)

inst_71:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6fec16 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x112ae8 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x080cef and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eefec16; op2val:0xbf112ae8; op3val:0x7e880cef; valaddr_reg:x16; val_offset:852; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 852, x17, x15, 568, x18)

inst_72:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6fec16 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x112ae8 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x080cef and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eefec16; op2val:0xbf112ae8; op3val:0x7e880cef; valaddr_reg:x16; val_offset:864; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 864, x17, x15, 576, x18)

inst_73:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6fec16 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x112ae8 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x080cef and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eefec16; op2val:0xbf112ae8; op3val:0x7e880cef; valaddr_reg:x16; val_offset:876; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 876, x17, x15, 584, x18)

inst_74:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6fec16 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x112ae8 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x080cef and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eefec16; op2val:0xbf112ae8; op3val:0x7e880cef; valaddr_reg:x16; val_offset:888; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 888, x17, x15, 592, x18)

inst_75:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6fec16 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x112ae8 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x080cef and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eefec16; op2val:0xbf112ae8; op3val:0x7e880cef; valaddr_reg:x16; val_offset:900; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 900, x17, x15, 600, x18)

inst_76:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d8df1 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x2e68c6 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x56adeb and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1d8df1; op2val:0xbe2e68c6; op3val:0x7dd6adeb; valaddr_reg:x16; val_offset:912; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 912, x17, x15, 608, x18)

inst_77:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d8df1 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x2e68c6 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x56adeb and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1d8df1; op2val:0xbe2e68c6; op3val:0x7dd6adeb; valaddr_reg:x16; val_offset:924; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 924, x17, x15, 616, x18)

inst_78:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d8df1 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x2e68c6 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x56adeb and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1d8df1; op2val:0xbe2e68c6; op3val:0x7dd6adeb; valaddr_reg:x16; val_offset:936; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 936, x17, x15, 624, x18)

inst_79:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d8df1 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x2e68c6 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x56adeb and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1d8df1; op2val:0xbe2e68c6; op3val:0x7dd6adeb; valaddr_reg:x16; val_offset:948; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 948, x17, x15, 632, x18)

inst_80:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d8df1 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x2e68c6 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x56adeb and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1d8df1; op2val:0xbe2e68c6; op3val:0x7dd6adeb; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 640, x18)

inst_81:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3ac206 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2f08f3 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7f6253 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3ac206; op2val:0xbf2f08f3; op3val:0x7eff6253; valaddr_reg:x16; val_offset:972; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 972, x17, x15, 648, x18)

inst_82:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3ac206 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2f08f3 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7f6253 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3ac206; op2val:0xbf2f08f3; op3val:0x7eff6253; valaddr_reg:x16; val_offset:984; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 984, x17, x15, 656, x18)

inst_83:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3ac206 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2f08f3 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7f6253 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3ac206; op2val:0xbf2f08f3; op3val:0x7eff6253; valaddr_reg:x16; val_offset:996; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 996, x17, x15, 664, x18)

inst_84:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3ac206 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2f08f3 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7f6253 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3ac206; op2val:0xbf2f08f3; op3val:0x7eff6253; valaddr_reg:x16; val_offset:1008; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1008, x17, x15, 672, x18)

inst_85:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3ac206 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2f08f3 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7f6253 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3ac206; op2val:0xbf2f08f3; op3val:0x7eff6253; valaddr_reg:x16; val_offset:1020; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1020, x17, x15, 680, x18)

inst_86:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2b54e3 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0533df and fs3 == 0 and fe3 == 0xfb and fm3 == 0x324ba2 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e2b54e3; op2val:0xbf0533df; op3val:0x7db24ba2; valaddr_reg:x16; val_offset:1032; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1032, x17, x15, 688, x18)

inst_87:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2b54e3 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0533df and fs3 == 0 and fe3 == 0xfb and fm3 == 0x324ba2 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e2b54e3; op2val:0xbf0533df; op3val:0x7db24ba2; valaddr_reg:x16; val_offset:1044; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1044, x17, x15, 696, x18)

inst_88:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2b54e3 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0533df and fs3 == 0 and fe3 == 0xfb and fm3 == 0x324ba2 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e2b54e3; op2val:0xbf0533df; op3val:0x7db24ba2; valaddr_reg:x16; val_offset:1056; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1056, x17, x15, 704, x18)

inst_89:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2b54e3 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0533df and fs3 == 0 and fe3 == 0xfb and fm3 == 0x324ba2 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e2b54e3; op2val:0xbf0533df; op3val:0x7db24ba2; valaddr_reg:x16; val_offset:1068; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1068, x17, x15, 712, x18)

inst_90:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2b54e3 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0533df and fs3 == 0 and fe3 == 0xfb and fm3 == 0x324ba2 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e2b54e3; op2val:0xbf0533df; op3val:0x7db24ba2; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 720, x18)

inst_91:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x36cabd and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3725f9 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x02c60b and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f36cabd; op2val:0xbf3725f9; op3val:0x7f02c60b; valaddr_reg:x16; val_offset:1092; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1092, x17, x15, 728, x18)

inst_92:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x36cabd and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3725f9 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x02c60b and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f36cabd; op2val:0xbf3725f9; op3val:0x7f02c60b; valaddr_reg:x16; val_offset:1104; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1104, x17, x15, 736, x18)

inst_93:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x36cabd and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3725f9 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x02c60b and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f36cabd; op2val:0xbf3725f9; op3val:0x7f02c60b; valaddr_reg:x16; val_offset:1116; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1116, x17, x15, 744, x18)

inst_94:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x36cabd and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3725f9 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x02c60b and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f36cabd; op2val:0xbf3725f9; op3val:0x7f02c60b; valaddr_reg:x16; val_offset:1128; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1128, x17, x15, 752, x18)

inst_95:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x36cabd and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3725f9 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x02c60b and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f36cabd; op2val:0xbf3725f9; op3val:0x7f02c60b; valaddr_reg:x16; val_offset:1140; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1140, x17, x15, 760, x18)

inst_96:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x24d74d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x33dcc2 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x67a163 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d24d74d; op2val:0xc033dcc2; op3val:0x7de7a163; valaddr_reg:x16; val_offset:1152; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1152, x17, x15, 768, x18)

inst_97:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x24d74d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x33dcc2 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x67a163 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d24d74d; op2val:0xc033dcc2; op3val:0x7de7a163; valaddr_reg:x16; val_offset:1164; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1164, x17, x15, 776, x18)

inst_98:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x24d74d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x33dcc2 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x67a163 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d24d74d; op2val:0xc033dcc2; op3val:0x7de7a163; valaddr_reg:x16; val_offset:1176; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1176, x17, x15, 784, x18)

inst_99:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x24d74d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x33dcc2 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x67a163 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d24d74d; op2val:0xc033dcc2; op3val:0x7de7a163; valaddr_reg:x16; val_offset:1188; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1188, x17, x15, 792, x18)

inst_100:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x24d74d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x33dcc2 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x67a163 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d24d74d; op2val:0xc033dcc2; op3val:0x7de7a163; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 800, x18)

inst_101:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x35021c and fs2 == 1 and fe2 == 0x83 and fm2 == 0x44df55 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0b3386 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7cb5021c; op2val:0xc1c4df55; op3val:0x7f0b3386; valaddr_reg:x16; val_offset:1212; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1212, x17, x15, 808, x18)

inst_102:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x35021c and fs2 == 1 and fe2 == 0x83 and fm2 == 0x44df55 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0b3386 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7cb5021c; op2val:0xc1c4df55; op3val:0x7f0b3386; valaddr_reg:x16; val_offset:1224; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1224, x17, x15, 816, x18)

inst_103:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x35021c and fs2 == 1 and fe2 == 0x83 and fm2 == 0x44df55 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0b3386 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7cb5021c; op2val:0xc1c4df55; op3val:0x7f0b3386; valaddr_reg:x16; val_offset:1236; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1236, x17, x15, 824, x18)

inst_104:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x35021c and fs2 == 1 and fe2 == 0x83 and fm2 == 0x44df55 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0b3386 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7cb5021c; op2val:0xc1c4df55; op3val:0x7f0b3386; valaddr_reg:x16; val_offset:1248; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1248, x17, x15, 832, x18)

inst_105:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x35021c and fs2 == 1 and fe2 == 0x83 and fm2 == 0x44df55 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0b3386 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7cb5021c; op2val:0xc1c4df55; op3val:0x7f0b3386; valaddr_reg:x16; val_offset:1260; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1260, x17, x15, 840, x18)

inst_106:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7848a8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1dac69 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x18ebc6 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e7848a8; op2val:0xc01dac69; op3val:0x7f18ebc6; valaddr_reg:x16; val_offset:1272; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1272, x17, x15, 848, x18)

inst_107:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7848a8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1dac69 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x18ebc6 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e7848a8; op2val:0xc01dac69; op3val:0x7f18ebc6; valaddr_reg:x16; val_offset:1284; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1284, x17, x15, 856, x18)

inst_108:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7848a8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1dac69 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x18ebc6 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e7848a8; op2val:0xc01dac69; op3val:0x7f18ebc6; valaddr_reg:x16; val_offset:1296; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1296, x17, x15, 864, x18)

inst_109:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7848a8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1dac69 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x18ebc6 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e7848a8; op2val:0xc01dac69; op3val:0x7f18ebc6; valaddr_reg:x16; val_offset:1308; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1308, x17, x15, 872, x18)

inst_110:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7848a8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1dac69 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x18ebc6 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e7848a8; op2val:0xc01dac69; op3val:0x7f18ebc6; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 880, x18)

inst_111:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x285eb2 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0c4329 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x387fea and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f285eb2; op2val:0xbf0c4329; op3val:0x7eb87fea; valaddr_reg:x16; val_offset:1332; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1332, x17, x15, 888, x18)

inst_112:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x285eb2 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0c4329 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x387fea and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f285eb2; op2val:0xbf0c4329; op3val:0x7eb87fea; valaddr_reg:x16; val_offset:1344; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1344, x17, x15, 896, x18)

inst_113:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x285eb2 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0c4329 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x387fea and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f285eb2; op2val:0xbf0c4329; op3val:0x7eb87fea; valaddr_reg:x16; val_offset:1356; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1356, x17, x15, 904, x18)

inst_114:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x285eb2 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0c4329 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x387fea and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f285eb2; op2val:0xbf0c4329; op3val:0x7eb87fea; valaddr_reg:x16; val_offset:1368; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1368, x17, x15, 912, x18)

inst_115:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x285eb2 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0c4329 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x387fea and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f285eb2; op2val:0xbf0c4329; op3val:0x7eb87fea; valaddr_reg:x16; val_offset:1380; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1380, x17, x15, 920, x18)

inst_116:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x64160b and fs2 == 1 and fe2 == 0x7d and fm2 == 0x4da873 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x373bbc and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee4160b; op2val:0xbecda873; op3val:0x7e373bbc; valaddr_reg:x16; val_offset:1392; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1392, x17, x15, 928, x18)

inst_117:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x64160b and fs2 == 1 and fe2 == 0x7d and fm2 == 0x4da873 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x373bbc and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee4160b; op2val:0xbecda873; op3val:0x7e373bbc; valaddr_reg:x16; val_offset:1404; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1404, x17, x15, 936, x18)

inst_118:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x64160b and fs2 == 1 and fe2 == 0x7d and fm2 == 0x4da873 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x373bbc and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee4160b; op2val:0xbecda873; op3val:0x7e373bbc; valaddr_reg:x16; val_offset:1416; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1416, x17, x15, 944, x18)

inst_119:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x64160b and fs2 == 1 and fe2 == 0x7d and fm2 == 0x4da873 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x373bbc and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee4160b; op2val:0xbecda873; op3val:0x7e373bbc; valaddr_reg:x16; val_offset:1428; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1428, x17, x15, 952, x18)

inst_120:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x64160b and fs2 == 1 and fe2 == 0x7d and fm2 == 0x4da873 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x373bbc and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee4160b; op2val:0xbecda873; op3val:0x7e373bbc; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 960, x18)

inst_121:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0c0cc1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2f3018 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x3fae0f and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d8c0cc1; op2val:0xbfaf3018; op3val:0x7dbfae0f; valaddr_reg:x16; val_offset:1452; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1452, x17, x15, 968, x18)

inst_122:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0c0cc1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2f3018 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x3fae0f and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d8c0cc1; op2val:0xbfaf3018; op3val:0x7dbfae0f; valaddr_reg:x16; val_offset:1464; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1464, x17, x15, 976, x18)

inst_123:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0c0cc1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2f3018 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x3fae0f and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d8c0cc1; op2val:0xbfaf3018; op3val:0x7dbfae0f; valaddr_reg:x16; val_offset:1476; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1476, x17, x15, 984, x18)

inst_124:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0c0cc1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2f3018 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x3fae0f and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d8c0cc1; op2val:0xbfaf3018; op3val:0x7dbfae0f; valaddr_reg:x16; val_offset:1488; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1488, x17, x15, 992, x18)

inst_125:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0c0cc1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2f3018 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x3fae0f and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d8c0cc1; op2val:0xbfaf3018; op3val:0x7dbfae0f; valaddr_reg:x16; val_offset:1500; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1500, x17, x15, 1000, x18)

inst_126:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x02ef0c and fs2 == 1 and fe2 == 0x81 and fm2 == 0x7abf31 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x003f3c and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d82ef0c; op2val:0xc0fabf31; op3val:0x7f003f3c; valaddr_reg:x16; val_offset:1512; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1512, x17, x15, 1008, x18)

inst_127:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x02ef0c and fs2 == 1 and fe2 == 0x81 and fm2 == 0x7abf31 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x003f3c and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d82ef0c; op2val:0xc0fabf31; op3val:0x7f003f3c; valaddr_reg:x16; val_offset:1524; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1524, x17, x15, 1016, x18)

inst_128:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x02ef0c and fs2 == 1 and fe2 == 0x81 and fm2 == 0x7abf31 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x003f3c and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d82ef0c; op2val:0xc0fabf31; op3val:0x7f003f3c; valaddr_reg:x16; val_offset:1536; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1536, x17, x15, 1024, x18)

inst_129:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x02ef0c and fs2 == 1 and fe2 == 0x81 and fm2 == 0x7abf31 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x003f3c and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d82ef0c; op2val:0xc0fabf31; op3val:0x7f003f3c; valaddr_reg:x16; val_offset:1548; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1548, x17, x15, 1032, x18)

inst_130:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x02ef0c and fs2 == 1 and fe2 == 0x81 and fm2 == 0x7abf31 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x003f3c and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d82ef0c; op2val:0xc0fabf31; op3val:0x7f003f3c; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1040, x18)

inst_131:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x08f3f0 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6b1522 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7b8677 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f08f3f0; op2val:0xbf6b1522; op3val:0x7efb8677; valaddr_reg:x16; val_offset:1572; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1572, x17, x15, 1048, x18)

inst_132:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x08f3f0 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6b1522 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7b8677 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f08f3f0; op2val:0xbf6b1522; op3val:0x7efb8677; valaddr_reg:x16; val_offset:1584; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1584, x17, x15, 1056, x18)

inst_133:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x08f3f0 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6b1522 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7b8677 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f08f3f0; op2val:0xbf6b1522; op3val:0x7efb8677; valaddr_reg:x16; val_offset:1596; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1596, x17, x15, 1064, x18)

inst_134:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x08f3f0 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6b1522 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7b8677 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f08f3f0; op2val:0xbf6b1522; op3val:0x7efb8677; valaddr_reg:x16; val_offset:1608; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1608, x17, x15, 1072, x18)

inst_135:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x08f3f0 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6b1522 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7b8677 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f08f3f0; op2val:0xbf6b1522; op3val:0x7efb8677; valaddr_reg:x16; val_offset:1620; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1620, x17, x15, 1080, x18)

inst_136:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d74e0 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x793bf9 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x09b7d2 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0d74e0; op2val:0xbe793bf9; op3val:0x7e09b7d2; valaddr_reg:x16; val_offset:1632; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1632, x17, x15, 1088, x18)

inst_137:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d74e0 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x793bf9 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x09b7d2 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0d74e0; op2val:0xbe793bf9; op3val:0x7e09b7d2; valaddr_reg:x16; val_offset:1644; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1644, x17, x15, 1096, x18)

inst_138:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d74e0 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x793bf9 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x09b7d2 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0d74e0; op2val:0xbe793bf9; op3val:0x7e09b7d2; valaddr_reg:x16; val_offset:1656; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1656, x17, x15, 1104, x18)

inst_139:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d74e0 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x793bf9 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x09b7d2 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0d74e0; op2val:0xbe793bf9; op3val:0x7e09b7d2; valaddr_reg:x16; val_offset:1668; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1668, x17, x15, 1112, x18)

inst_140:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d74e0 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x793bf9 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x09b7d2 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0d74e0; op2val:0xbe793bf9; op3val:0x7e09b7d2; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1120, x18)

inst_141:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3408e8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4ab176 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0e8bd4 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e3408e8; op2val:0xbfcab176; op3val:0x7e8e8bd4; valaddr_reg:x16; val_offset:1692; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1692, x17, x15, 1128, x18)

inst_142:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3408e8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4ab176 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0e8bd4 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e3408e8; op2val:0xbfcab176; op3val:0x7e8e8bd4; valaddr_reg:x16; val_offset:1704; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1704, x17, x15, 1136, x18)

inst_143:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3408e8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4ab176 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0e8bd4 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e3408e8; op2val:0xbfcab176; op3val:0x7e8e8bd4; valaddr_reg:x16; val_offset:1716; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1716, x17, x15, 1144, x18)

inst_144:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3408e8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4ab176 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0e8bd4 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e3408e8; op2val:0xbfcab176; op3val:0x7e8e8bd4; valaddr_reg:x16; val_offset:1728; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1728, x17, x15, 1152, x18)

inst_145:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3408e8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4ab176 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0e8bd4 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e3408e8; op2val:0xbfcab176; op3val:0x7e8e8bd4; valaddr_reg:x16; val_offset:1740; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1740, x17, x15, 1160, x18)

inst_146:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4686be and fs2 == 1 and fe2 == 0x7d and fm2 == 0x047cf6 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x4d7cc4 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ec686be; op2val:0xbe847cf6; op3val:0x7dcd7cc4; valaddr_reg:x16; val_offset:1752; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1752, x17, x15, 1168, x18)

inst_147:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4686be and fs2 == 1 and fe2 == 0x7d and fm2 == 0x047cf6 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x4d7cc4 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ec686be; op2val:0xbe847cf6; op3val:0x7dcd7cc4; valaddr_reg:x16; val_offset:1764; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1764, x17, x15, 1176, x18)

inst_148:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4686be and fs2 == 1 and fe2 == 0x7d and fm2 == 0x047cf6 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x4d7cc4 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ec686be; op2val:0xbe847cf6; op3val:0x7dcd7cc4; valaddr_reg:x16; val_offset:1776; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1776, x17, x15, 1184, x18)

inst_149:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4686be and fs2 == 1 and fe2 == 0x7d and fm2 == 0x047cf6 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x4d7cc4 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ec686be; op2val:0xbe847cf6; op3val:0x7dcd7cc4; valaddr_reg:x16; val_offset:1788; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1788, x17, x15, 1192, x18)

inst_150:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4686be and fs2 == 1 and fe2 == 0x7d and fm2 == 0x047cf6 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x4d7cc4 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ec686be; op2val:0xbe847cf6; op3val:0x7dcd7cc4; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1200, x18)

inst_151:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4337d6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3cfb09 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x101c70 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e4337d6; op2val:0xc03cfb09; op3val:0x7f101c70; valaddr_reg:x16; val_offset:1812; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1812, x17, x15, 1208, x18)

inst_152:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4337d6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3cfb09 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x101c70 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e4337d6; op2val:0xc03cfb09; op3val:0x7f101c70; valaddr_reg:x16; val_offset:1824; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1824, x17, x15, 1216, x18)

inst_153:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4337d6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3cfb09 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x101c70 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e4337d6; op2val:0xc03cfb09; op3val:0x7f101c70; valaddr_reg:x16; val_offset:1836; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1836, x17, x15, 1224, x18)

inst_154:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4337d6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3cfb09 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x101c70 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e4337d6; op2val:0xc03cfb09; op3val:0x7f101c70; valaddr_reg:x16; val_offset:1848; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1848, x17, x15, 1232, x18)

inst_155:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4337d6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3cfb09 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x101c70 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e4337d6; op2val:0xc03cfb09; op3val:0x7f101c70; valaddr_reg:x16; val_offset:1860; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1860, x17, x15, 1240, x18)

inst_156:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4a2c68 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x061f45 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x53d7e2 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e4a2c68; op2val:0xc0061f45; op3val:0x7ed3d7e2; valaddr_reg:x16; val_offset:1872; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1872, x17, x15, 1248, x18)

inst_157:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4a2c68 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x061f45 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x53d7e2 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e4a2c68; op2val:0xc0061f45; op3val:0x7ed3d7e2; valaddr_reg:x16; val_offset:1884; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1884, x17, x15, 1256, x18)

inst_158:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4a2c68 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x061f45 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x53d7e2 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e4a2c68; op2val:0xc0061f45; op3val:0x7ed3d7e2; valaddr_reg:x16; val_offset:1896; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1896, x17, x15, 1264, x18)

inst_159:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4a2c68 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x061f45 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x53d7e2 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e4a2c68; op2val:0xc0061f45; op3val:0x7ed3d7e2; valaddr_reg:x16; val_offset:1908; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1908, x17, x15, 1272, x18)

inst_160:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4a2c68 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x061f45 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x53d7e2 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e4a2c68; op2val:0xc0061f45; op3val:0x7ed3d7e2; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1280, x18)

inst_161:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5513fd and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0f38bb and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6e6ac5 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ed513fd; op2val:0xbf8f38bb; op3val:0x7eee6ac5; valaddr_reg:x16; val_offset:1932; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1932, x17, x15, 1288, x18)

inst_162:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5513fd and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0f38bb and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6e6ac5 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ed513fd; op2val:0xbf8f38bb; op3val:0x7eee6ac5; valaddr_reg:x16; val_offset:1944; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1944, x17, x15, 1296, x18)

inst_163:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5513fd and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0f38bb and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6e6ac5 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ed513fd; op2val:0xbf8f38bb; op3val:0x7eee6ac5; valaddr_reg:x16; val_offset:1956; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1956, x17, x15, 1304, x18)

inst_164:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5513fd and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0f38bb and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6e6ac5 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ed513fd; op2val:0xbf8f38bb; op3val:0x7eee6ac5; valaddr_reg:x16; val_offset:1968; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1968, x17, x15, 1312, x18)

inst_165:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5513fd and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0f38bb and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6e6ac5 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ed513fd; op2val:0xbf8f38bb; op3val:0x7eee6ac5; valaddr_reg:x16; val_offset:1980; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1980, x17, x15, 1320, x18)

inst_166:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x423e7f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x666020 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2ecd16 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ec23e7f; op2val:0xbfe66020; op3val:0x7f2ecd16; valaddr_reg:x16; val_offset:1992; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1992, x17, x15, 1328, x18)

inst_167:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x423e7f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x666020 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2ecd16 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ec23e7f; op2val:0xbfe66020; op3val:0x7f2ecd16; valaddr_reg:x16; val_offset:2004; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 2004, x17, x15, 1336, x18)

inst_168:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x423e7f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x666020 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2ecd16 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ec23e7f; op2val:0xbfe66020; op3val:0x7f2ecd16; valaddr_reg:x16; val_offset:2016; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 2016, x17, x15, 1344, x18)

inst_169:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x423e7f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x666020 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2ecd16 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ec23e7f; op2val:0xbfe66020; op3val:0x7f2ecd16; valaddr_reg:x16; val_offset:2028; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 2028, x17, x15, 1352, x18)
addi x16,x16,2040

inst_170:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x423e7f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x666020 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2ecd16 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ec23e7f; op2val:0xbfe66020; op3val:0x7f2ecd16; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 1360, x18)

inst_171:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681a8e and fs2 == 1 and fe2 == 0x81 and fm2 == 0x05b2ce and fs3 == 0 and fe3 == 0xfd and fm3 == 0x726fd3 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7de81a8e; op2val:0xc085b2ce; op3val:0x7ef26fd3; valaddr_reg:x16; val_offset:12; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 12, x17, x15, 1368, x18)

inst_172:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681a8e and fs2 == 1 and fe2 == 0x81 and fm2 == 0x05b2ce and fs3 == 0 and fe3 == 0xfd and fm3 == 0x726fd3 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7de81a8e; op2val:0xc085b2ce; op3val:0x7ef26fd3; valaddr_reg:x16; val_offset:24; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 24, x17, x15, 1376, x18)

inst_173:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681a8e and fs2 == 1 and fe2 == 0x81 and fm2 == 0x05b2ce and fs3 == 0 and fe3 == 0xfd and fm3 == 0x726fd3 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7de81a8e; op2val:0xc085b2ce; op3val:0x7ef26fd3; valaddr_reg:x16; val_offset:36; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 36, x17, x15, 1384, x18)

inst_174:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681a8e and fs2 == 1 and fe2 == 0x81 and fm2 == 0x05b2ce and fs3 == 0 and fe3 == 0xfd and fm3 == 0x726fd3 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7de81a8e; op2val:0xc085b2ce; op3val:0x7ef26fd3; valaddr_reg:x16; val_offset:48; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 48, x17, x15, 1392, x18)

inst_175:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x681a8e and fs2 == 1 and fe2 == 0x81 and fm2 == 0x05b2ce and fs3 == 0 and fe3 == 0xfd and fm3 == 0x726fd3 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7de81a8e; op2val:0xc085b2ce; op3val:0x7ef26fd3; valaddr_reg:x16; val_offset:60; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 60, x17, x15, 1400, x18)

inst_176:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2b448a and fs2 == 1 and fe2 == 0x82 and fm2 == 0x481dd4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x05e181 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d2b448a; op2val:0xc1481dd4; op3val:0x7f05e181; valaddr_reg:x16; val_offset:72; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 72, x17, x15, 1408, x18)

inst_177:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2b448a and fs2 == 1 and fe2 == 0x82 and fm2 == 0x481dd4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x05e181 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d2b448a; op2val:0xc1481dd4; op3val:0x7f05e181; valaddr_reg:x16; val_offset:84; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 84, x17, x15, 1416, x18)

inst_178:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2b448a and fs2 == 1 and fe2 == 0x82 and fm2 == 0x481dd4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x05e181 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d2b448a; op2val:0xc1481dd4; op3val:0x7f05e181; valaddr_reg:x16; val_offset:96; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 96, x17, x15, 1424, x18)

inst_179:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2b448a and fs2 == 1 and fe2 == 0x82 and fm2 == 0x481dd4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x05e181 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d2b448a; op2val:0xc1481dd4; op3val:0x7f05e181; valaddr_reg:x16; val_offset:108; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 108, x17, x15, 1432, x18)

inst_180:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2b448a and fs2 == 1 and fe2 == 0x82 and fm2 == 0x481dd4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x05e181 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d2b448a; op2val:0xc1481dd4; op3val:0x7f05e181; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 1440, x18)

inst_181:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x343304 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x4c22d6 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0fb12d and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f343304; op2val:0xbecc22d6; op3val:0x7e8fb12d; valaddr_reg:x16; val_offset:132; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 132, x17, x15, 1448, x18)

inst_182:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x343304 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x4c22d6 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0fb12d and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f343304; op2val:0xbecc22d6; op3val:0x7e8fb12d; valaddr_reg:x16; val_offset:144; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 144, x17, x15, 1456, x18)

inst_183:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x343304 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x4c22d6 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0fb12d and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f343304; op2val:0xbecc22d6; op3val:0x7e8fb12d; valaddr_reg:x16; val_offset:156; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 156, x17, x15, 1464, x18)

inst_184:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x343304 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x4c22d6 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0fb12d and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f343304; op2val:0xbecc22d6; op3val:0x7e8fb12d; valaddr_reg:x16; val_offset:168; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 168, x17, x15, 1472, x18)

inst_185:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x343304 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x4c22d6 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0fb12d and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f343304; op2val:0xbecc22d6; op3val:0x7e8fb12d; valaddr_reg:x16; val_offset:180; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 180, x17, x15, 1480, x18)

inst_186:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x667bca and fs2 == 1 and fe2 == 0x7e and fm2 == 0x50cfc6 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3bffa5 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee67bca; op2val:0xbf50cfc6; op3val:0x7ebbffa5; valaddr_reg:x16; val_offset:192; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 192, x17, x15, 1488, x18)

inst_187:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x667bca and fs2 == 1 and fe2 == 0x7e and fm2 == 0x50cfc6 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3bffa5 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee67bca; op2val:0xbf50cfc6; op3val:0x7ebbffa5; valaddr_reg:x16; val_offset:204; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 204, x17, x15, 1496, x18)

inst_188:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x667bca and fs2 == 1 and fe2 == 0x7e and fm2 == 0x50cfc6 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3bffa5 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee67bca; op2val:0xbf50cfc6; op3val:0x7ebbffa5; valaddr_reg:x16; val_offset:216; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 216, x17, x15, 1504, x18)

inst_189:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x667bca and fs2 == 1 and fe2 == 0x7e and fm2 == 0x50cfc6 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3bffa5 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee67bca; op2val:0xbf50cfc6; op3val:0x7ebbffa5; valaddr_reg:x16; val_offset:228; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 228, x17, x15, 1512, x18)

inst_190:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x667bca and fs2 == 1 and fe2 == 0x7e and fm2 == 0x50cfc6 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3bffa5 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee67bca; op2val:0xbf50cfc6; op3val:0x7ebbffa5; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 1520, x18)

inst_191:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25c2ef and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3a8dcd and fs3 == 0 and fe3 == 0xfc and fm3 == 0x7196e6 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ea5c2ef; op2val:0xbf3a8dcd; op3val:0x7e7196e6; valaddr_reg:x16; val_offset:252; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 252, x17, x15, 1528, x18)

inst_192:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25c2ef and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3a8dcd and fs3 == 0 and fe3 == 0xfc and fm3 == 0x7196e6 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ea5c2ef; op2val:0xbf3a8dcd; op3val:0x7e7196e6; valaddr_reg:x16; val_offset:264; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 264, x17, x15, 1536, x18)

inst_193:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25c2ef and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3a8dcd and fs3 == 0 and fe3 == 0xfc and fm3 == 0x7196e6 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ea5c2ef; op2val:0xbf3a8dcd; op3val:0x7e7196e6; valaddr_reg:x16; val_offset:276; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 276, x17, x15, 1544, x18)

inst_194:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25c2ef and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3a8dcd and fs3 == 0 and fe3 == 0xfc and fm3 == 0x7196e6 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ea5c2ef; op2val:0xbf3a8dcd; op3val:0x7e7196e6; valaddr_reg:x16; val_offset:288; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 288, x17, x15, 1552, x18)

inst_195:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25c2ef and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3a8dcd and fs3 == 0 and fe3 == 0xfc and fm3 == 0x7196e6 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ea5c2ef; op2val:0xbf3a8dcd; op3val:0x7e7196e6; valaddr_reg:x16; val_offset:300; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 300, x17, x15, 1560, x18)

inst_196:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28a9ec and fs2 == 1 and fe2 == 0x7c and fm2 == 0x1c96d3 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x4e55d5 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f28a9ec; op2val:0xbe1c96d3; op3val:0x7dce55d5; valaddr_reg:x16; val_offset:312; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 312, x17, x15, 1568, x18)

inst_197:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28a9ec and fs2 == 1 and fe2 == 0x7c and fm2 == 0x1c96d3 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x4e55d5 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f28a9ec; op2val:0xbe1c96d3; op3val:0x7dce55d5; valaddr_reg:x16; val_offset:324; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 324, x17, x15, 1576, x18)

inst_198:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28a9ec and fs2 == 1 and fe2 == 0x7c and fm2 == 0x1c96d3 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x4e55d5 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f28a9ec; op2val:0xbe1c96d3; op3val:0x7dce55d5; valaddr_reg:x16; val_offset:336; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 336, x17, x15, 1584, x18)

inst_199:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28a9ec and fs2 == 1 and fe2 == 0x7c and fm2 == 0x1c96d3 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x4e55d5 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f28a9ec; op2val:0xbe1c96d3; op3val:0x7dce55d5; valaddr_reg:x16; val_offset:348; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 348, x17, x15, 1592, x18)

inst_200:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28a9ec and fs2 == 1 and fe2 == 0x7c and fm2 == 0x1c96d3 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x4e55d5 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f28a9ec; op2val:0xbe1c96d3; op3val:0x7dce55d5; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 1600, x18)

inst_201:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5ce5ef and fs2 == 1 and fe2 == 0x7f and fm2 == 0x252d67 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0e8760 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7edce5ef; op2val:0xbfa52d67; op3val:0x7f0e8760; valaddr_reg:x16; val_offset:372; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 372, x17, x15, 1608, x18)

inst_202:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5ce5ef and fs2 == 1 and fe2 == 0x7f and fm2 == 0x252d67 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0e8760 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7edce5ef; op2val:0xbfa52d67; op3val:0x7f0e8760; valaddr_reg:x16; val_offset:384; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 384, x17, x15, 1616, x18)

inst_203:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5ce5ef and fs2 == 1 and fe2 == 0x7f and fm2 == 0x252d67 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0e8760 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7edce5ef; op2val:0xbfa52d67; op3val:0x7f0e8760; valaddr_reg:x16; val_offset:396; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 396, x17, x15, 1624, x18)

inst_204:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5ce5ef and fs2 == 1 and fe2 == 0x7f and fm2 == 0x252d67 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0e8760 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7edce5ef; op2val:0xbfa52d67; op3val:0x7f0e8760; valaddr_reg:x16; val_offset:408; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 408, x17, x15, 1632, x18)

inst_205:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5ce5ef and fs2 == 1 and fe2 == 0x7f and fm2 == 0x252d67 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0e8760 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7edce5ef; op2val:0xbfa52d67; op3val:0x7f0e8760; valaddr_reg:x16; val_offset:420; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 420, x17, x15, 1640, x18)

inst_206:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x5d3233 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4ca6a8 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x30d400 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d5d3233; op2val:0xbf4ca6a8; op3val:0x7d30d400; valaddr_reg:x16; val_offset:432; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 432, x17, x15, 1648, x18)

inst_207:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x5d3233 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4ca6a8 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x30d400 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d5d3233; op2val:0xbf4ca6a8; op3val:0x7d30d400; valaddr_reg:x16; val_offset:444; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 444, x17, x15, 1656, x18)

inst_208:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x5d3233 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4ca6a8 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x30d400 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d5d3233; op2val:0xbf4ca6a8; op3val:0x7d30d400; valaddr_reg:x16; val_offset:456; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 456, x17, x15, 1664, x18)

inst_209:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x5d3233 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4ca6a8 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x30d400 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d5d3233; op2val:0xbf4ca6a8; op3val:0x7d30d400; valaddr_reg:x16; val_offset:468; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 468, x17, x15, 1672, x18)

inst_210:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x5d3233 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4ca6a8 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x30d400 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d5d3233; op2val:0xbf4ca6a8; op3val:0x7d30d400; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1680, x18)

inst_211:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2637c1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x6043c2 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x119cc8 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7da637c1; op2val:0xc06043c2; op3val:0x7e919cc8; valaddr_reg:x16; val_offset:492; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 492, x17, x15, 1688, x18)

inst_212:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2637c1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x6043c2 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x119cc8 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7da637c1; op2val:0xc06043c2; op3val:0x7e919cc8; valaddr_reg:x16; val_offset:504; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 504, x17, x15, 1696, x18)

inst_213:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2637c1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x6043c2 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x119cc8 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7da637c1; op2val:0xc06043c2; op3val:0x7e919cc8; valaddr_reg:x16; val_offset:516; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 516, x17, x15, 1704, x18)

inst_214:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2637c1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x6043c2 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x119cc8 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7da637c1; op2val:0xc06043c2; op3val:0x7e919cc8; valaddr_reg:x16; val_offset:528; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 528, x17, x15, 1712, x18)

inst_215:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2637c1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x6043c2 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x119cc8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7da637c1; op2val:0xc06043c2; op3val:0x7e919cc8; valaddr_reg:x16; val_offset:540; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 540, x17, x15, 1720, x18)

inst_216:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f00e7 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x0f578d and fs3 == 0 and fe3 == 0xfa and fm3 == 0x05d33e and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eef00e7; op2val:0xbd8f578d; op3val:0x7d05d33e; valaddr_reg:x16; val_offset:552; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 552, x17, x15, 1728, x18)

inst_217:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f00e7 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x0f578d and fs3 == 0 and fe3 == 0xfa and fm3 == 0x05d33e and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eef00e7; op2val:0xbd8f578d; op3val:0x7d05d33e; valaddr_reg:x16; val_offset:564; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 564, x17, x15, 1736, x18)

inst_218:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f00e7 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x0f578d and fs3 == 0 and fe3 == 0xfa and fm3 == 0x05d33e and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eef00e7; op2val:0xbd8f578d; op3val:0x7d05d33e; valaddr_reg:x16; val_offset:576; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 576, x17, x15, 1744, x18)

inst_219:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f00e7 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x0f578d and fs3 == 0 and fe3 == 0xfa and fm3 == 0x05d33e and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eef00e7; op2val:0xbd8f578d; op3val:0x7d05d33e; valaddr_reg:x16; val_offset:588; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 588, x17, x15, 1752, x18)

inst_220:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f00e7 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x0f578d and fs3 == 0 and fe3 == 0xfa and fm3 == 0x05d33e and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eef00e7; op2val:0xbd8f578d; op3val:0x7d05d33e; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1760, x18)

inst_221:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ef396 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x475d41 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x779282 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e9ef396; op2val:0xbec75d41; op3val:0x7df79282; valaddr_reg:x16; val_offset:612; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 612, x17, x15, 1768, x18)

inst_222:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ef396 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x475d41 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x779282 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e9ef396; op2val:0xbec75d41; op3val:0x7df79282; valaddr_reg:x16; val_offset:624; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 624, x17, x15, 1776, x18)

inst_223:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ef396 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x475d41 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x779282 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e9ef396; op2val:0xbec75d41; op3val:0x7df79282; valaddr_reg:x16; val_offset:636; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 636, x17, x15, 1784, x18)

inst_224:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ef396 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x475d41 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x779282 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e9ef396; op2val:0xbec75d41; op3val:0x7df79282; valaddr_reg:x16; val_offset:648; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 648, x17, x15, 1792, x18)

inst_225:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ef396 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x475d41 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x779282 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e9ef396; op2val:0xbec75d41; op3val:0x7df79282; valaddr_reg:x16; val_offset:660; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 660, x17, x15, 1800, x18)

inst_226:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x65fc3b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x027faf and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6a7997 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7de5fc3b; op2val:0xc0827faf; op3val:0x7eea7997; valaddr_reg:x16; val_offset:672; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 672, x17, x15, 1808, x18)

inst_227:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x65fc3b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x027faf and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6a7997 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7de5fc3b; op2val:0xc0827faf; op3val:0x7eea7997; valaddr_reg:x16; val_offset:684; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 684, x17, x15, 1816, x18)

inst_228:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x65fc3b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x027faf and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6a7997 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7de5fc3b; op2val:0xc0827faf; op3val:0x7eea7997; valaddr_reg:x16; val_offset:696; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 696, x17, x15, 1824, x18)

inst_229:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x65fc3b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x027faf and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6a7997 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7de5fc3b; op2val:0xc0827faf; op3val:0x7eea7997; valaddr_reg:x16; val_offset:708; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 708, x17, x15, 1832, x18)

inst_230:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x65fc3b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x027faf and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6a7997 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7de5fc3b; op2val:0xc0827faf; op3val:0x7eea7997; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1840, x18)

inst_231:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x60a271 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x48ddad and fs3 == 0 and fe3 == 0xfe and fm3 == 0x30416d and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e60a271; op2val:0xc048ddad; op3val:0x7f30416d; valaddr_reg:x16; val_offset:732; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 732, x17, x15, 1848, x18)

inst_232:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x60a271 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x48ddad and fs3 == 0 and fe3 == 0xfe and fm3 == 0x30416d and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e60a271; op2val:0xc048ddad; op3val:0x7f30416d; valaddr_reg:x16; val_offset:744; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 744, x17, x15, 1856, x18)

inst_233:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x60a271 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x48ddad and fs3 == 0 and fe3 == 0xfe and fm3 == 0x30416d and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e60a271; op2val:0xc048ddad; op3val:0x7f30416d; valaddr_reg:x16; val_offset:756; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 756, x17, x15, 1864, x18)

inst_234:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x60a271 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x48ddad and fs3 == 0 and fe3 == 0xfe and fm3 == 0x30416d and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e60a271; op2val:0xc048ddad; op3val:0x7f30416d; valaddr_reg:x16; val_offset:768; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 768, x17, x15, 1872, x18)

inst_235:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x60a271 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x48ddad and fs3 == 0 and fe3 == 0xfe and fm3 == 0x30416d and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e60a271; op2val:0xc048ddad; op3val:0x7f30416d; valaddr_reg:x16; val_offset:780; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 780, x17, x15, 1880, x18)

inst_236:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x08ca03 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x417fae and fs3 == 0 and fe3 == 0xfb and fm3 == 0x4ec90d and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f08ca03; op2val:0xbe417fae; op3val:0x7dcec90d; valaddr_reg:x16; val_offset:792; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 792, x17, x15, 1888, x18)

inst_237:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x08ca03 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x417fae and fs3 == 0 and fe3 == 0xfb and fm3 == 0x4ec90d and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f08ca03; op2val:0xbe417fae; op3val:0x7dcec90d; valaddr_reg:x16; val_offset:804; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 804, x17, x15, 1896, x18)

inst_238:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x08ca03 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x417fae and fs3 == 0 and fe3 == 0xfb and fm3 == 0x4ec90d and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f08ca03; op2val:0xbe417fae; op3val:0x7dcec90d; valaddr_reg:x16; val_offset:816; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 816, x17, x15, 1904, x18)

inst_239:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x08ca03 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x417fae and fs3 == 0 and fe3 == 0xfb and fm3 == 0x4ec90d and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f08ca03; op2val:0xbe417fae; op3val:0x7dcec90d; valaddr_reg:x16; val_offset:828; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 828, x17, x15, 1912, x18)

inst_240:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x08ca03 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x417fae and fs3 == 0 and fe3 == 0xfb and fm3 == 0x4ec90d and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f08ca03; op2val:0xbe417fae; op3val:0x7dcec90d; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1920, x18)

inst_241:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77f691 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3cc1c0 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x36d4be and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef7f691; op2val:0xbfbcc1c0; op3val:0x7f36d4be; valaddr_reg:x16; val_offset:852; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 852, x17, x15, 1928, x18)

inst_242:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77f691 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3cc1c0 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x36d4be and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef7f691; op2val:0xbfbcc1c0; op3val:0x7f36d4be; valaddr_reg:x16; val_offset:864; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 864, x17, x15, 1936, x18)

inst_243:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77f691 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3cc1c0 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x36d4be and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef7f691; op2val:0xbfbcc1c0; op3val:0x7f36d4be; valaddr_reg:x16; val_offset:876; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 876, x17, x15, 1944, x18)

inst_244:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77f691 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3cc1c0 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x36d4be and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef7f691; op2val:0xbfbcc1c0; op3val:0x7f36d4be; valaddr_reg:x16; val_offset:888; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 888, x17, x15, 1952, x18)

inst_245:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77f691 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3cc1c0 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x36d4be and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef7f691; op2val:0xbfbcc1c0; op3val:0x7f36d4be; valaddr_reg:x16; val_offset:900; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 900, x17, x15, 1960, x18)

inst_246:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x21ad0f and fs2 == 1 and fe2 == 0x7d and fm2 == 0x054cc4 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x285ec8 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f21ad0f; op2val:0xbe854cc4; op3val:0x7e285ec8; valaddr_reg:x16; val_offset:912; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 912, x17, x15, 1968, x18)

inst_247:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x21ad0f and fs2 == 1 and fe2 == 0x7d and fm2 == 0x054cc4 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x285ec8 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f21ad0f; op2val:0xbe854cc4; op3val:0x7e285ec8; valaddr_reg:x16; val_offset:924; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 924, x17, x15, 1976, x18)

inst_248:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x21ad0f and fs2 == 1 and fe2 == 0x7d and fm2 == 0x054cc4 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x285ec8 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f21ad0f; op2val:0xbe854cc4; op3val:0x7e285ec8; valaddr_reg:x16; val_offset:936; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 936, x17, x15, 1984, x18)

inst_249:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x21ad0f and fs2 == 1 and fe2 == 0x7d and fm2 == 0x054cc4 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x285ec8 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f21ad0f; op2val:0xbe854cc4; op3val:0x7e285ec8; valaddr_reg:x16; val_offset:948; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 948, x17, x15, 1992, x18)

inst_250:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x21ad0f and fs2 == 1 and fe2 == 0x7d and fm2 == 0x054cc4 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x285ec8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f21ad0f; op2val:0xbe854cc4; op3val:0x7e285ec8; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 2000, x18)

inst_251:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x06a3bf and fs2 == 1 and fe2 == 0x7b and fm2 == 0x0ecac8 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x1632f5 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f06a3bf; op2val:0xbd8ecac8; op3val:0x7d1632f5; valaddr_reg:x16; val_offset:972; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 972, x17, x15, 2008, x18)

inst_252:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x06a3bf and fs2 == 1 and fe2 == 0x7b and fm2 == 0x0ecac8 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x1632f5 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f06a3bf; op2val:0xbd8ecac8; op3val:0x7d1632f5; valaddr_reg:x16; val_offset:984; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 984, x17, x15, 2016, x18)

inst_253:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x06a3bf and fs2 == 1 and fe2 == 0x7b and fm2 == 0x0ecac8 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x1632f5 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f06a3bf; op2val:0xbd8ecac8; op3val:0x7d1632f5; valaddr_reg:x16; val_offset:996; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 996, x17, x15, 2024, x18)
RVTEST_SIGBASE(x15,signature_x15_2)

inst_254:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x06a3bf and fs2 == 1 and fe2 == 0x7b and fm2 == 0x0ecac8 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x1632f5 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f06a3bf; op2val:0xbd8ecac8; op3val:0x7d1632f5; valaddr_reg:x16; val_offset:1008; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1008, x17, x15, 0, x18)

inst_255:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x06a3bf and fs2 == 1 and fe2 == 0x7b and fm2 == 0x0ecac8 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x1632f5 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f06a3bf; op2val:0xbd8ecac8; op3val:0x7d1632f5; valaddr_reg:x16; val_offset:1020; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1020, x17, x15, 8, x18)

inst_256:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3be85f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0291dd and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3fae22 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3be85f; op2val:0xbf8291dd; op3val:0x7f3fae22; valaddr_reg:x16; val_offset:1032; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1032, x17, x15, 16, x18)

inst_257:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3be85f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0291dd and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3fae22 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3be85f; op2val:0xbf8291dd; op3val:0x7f3fae22; valaddr_reg:x16; val_offset:1044; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1044, x17, x15, 24, x18)

inst_258:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3be85f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0291dd and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3fae22 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3be85f; op2val:0xbf8291dd; op3val:0x7f3fae22; valaddr_reg:x16; val_offset:1056; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1056, x17, x15, 32, x18)

inst_259:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3be85f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0291dd and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3fae22 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3be85f; op2val:0xbf8291dd; op3val:0x7f3fae22; valaddr_reg:x16; val_offset:1068; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1068, x17, x15, 40, x18)

inst_260:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3be85f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0291dd and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3fae22 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3be85f; op2val:0xbf8291dd; op3val:0x7f3fae22; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 48, x18)

inst_261:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cffed and fs2 == 1 and fe2 == 0x83 and fm2 == 0x623971 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0abd2a and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7c9cffed; op2val:0xc1e23971; op3val:0x7f0abd2a; valaddr_reg:x16; val_offset:1092; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1092, x17, x15, 56, x18)

inst_262:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cffed and fs2 == 1 and fe2 == 0x83 and fm2 == 0x623971 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0abd2a and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7c9cffed; op2val:0xc1e23971; op3val:0x7f0abd2a; valaddr_reg:x16; val_offset:1104; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1104, x17, x15, 64, x18)

inst_263:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cffed and fs2 == 1 and fe2 == 0x83 and fm2 == 0x623971 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0abd2a and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7c9cffed; op2val:0xc1e23971; op3val:0x7f0abd2a; valaddr_reg:x16; val_offset:1116; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1116, x17, x15, 72, x18)

inst_264:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cffed and fs2 == 1 and fe2 == 0x83 and fm2 == 0x623971 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0abd2a and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7c9cffed; op2val:0xc1e23971; op3val:0x7f0abd2a; valaddr_reg:x16; val_offset:1128; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1128, x17, x15, 80, x18)

inst_265:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1cffed and fs2 == 1 and fe2 == 0x83 and fm2 == 0x623971 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0abd2a and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7c9cffed; op2val:0xc1e23971; op3val:0x7f0abd2a; valaddr_reg:x16; val_offset:1140; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1140, x17, x15, 88, x18)

inst_266:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18041e and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5690a4 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7ed2ab and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f18041e; op2val:0xbf5690a4; op3val:0x7efed2ab; valaddr_reg:x16; val_offset:1152; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1152, x17, x15, 96, x18)

inst_267:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18041e and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5690a4 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7ed2ab and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f18041e; op2val:0xbf5690a4; op3val:0x7efed2ab; valaddr_reg:x16; val_offset:1164; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1164, x17, x15, 104, x18)

inst_268:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18041e and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5690a4 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7ed2ab and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f18041e; op2val:0xbf5690a4; op3val:0x7efed2ab; valaddr_reg:x16; val_offset:1176; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1176, x17, x15, 112, x18)

inst_269:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18041e and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5690a4 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7ed2ab and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f18041e; op2val:0xbf5690a4; op3val:0x7efed2ab; valaddr_reg:x16; val_offset:1188; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1188, x17, x15, 120, x18)

inst_270:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18041e and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5690a4 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7ed2ab and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f18041e; op2val:0xbf5690a4; op3val:0x7efed2ab; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 128, x18)

inst_271:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x30a79f and fs2 == 1 and fe2 == 0x80 and fm2 == 0x640ab1 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1d5cab and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e30a79f; op2val:0xc0640ab1; op3val:0x7f1d5cab; valaddr_reg:x16; val_offset:1212; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1212, x17, x15, 136, x18)

inst_272:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x30a79f and fs2 == 1 and fe2 == 0x80 and fm2 == 0x640ab1 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1d5cab and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e30a79f; op2val:0xc0640ab1; op3val:0x7f1d5cab; valaddr_reg:x16; val_offset:1224; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1224, x17, x15, 144, x18)

inst_273:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x30a79f and fs2 == 1 and fe2 == 0x80 and fm2 == 0x640ab1 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1d5cab and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e30a79f; op2val:0xc0640ab1; op3val:0x7f1d5cab; valaddr_reg:x16; val_offset:1236; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1236, x17, x15, 152, x18)

inst_274:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x30a79f and fs2 == 1 and fe2 == 0x80 and fm2 == 0x640ab1 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1d5cab and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e30a79f; op2val:0xc0640ab1; op3val:0x7f1d5cab; valaddr_reg:x16; val_offset:1248; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1248, x17, x15, 160, x18)

inst_275:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x30a79f and fs2 == 1 and fe2 == 0x80 and fm2 == 0x640ab1 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1d5cab and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e30a79f; op2val:0xc0640ab1; op3val:0x7f1d5cab; valaddr_reg:x16; val_offset:1260; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1260, x17, x15, 168, x18)

inst_276:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1bdeb9 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x2c9a42 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x522f22 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1bdeb9; op2val:0xbdac9a42; op3val:0x7d522f22; valaddr_reg:x16; val_offset:1272; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1272, x17, x15, 176, x18)

inst_277:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1bdeb9 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x2c9a42 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x522f22 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1bdeb9; op2val:0xbdac9a42; op3val:0x7d522f22; valaddr_reg:x16; val_offset:1284; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1284, x17, x15, 184, x18)

inst_278:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1bdeb9 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x2c9a42 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x522f22 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1bdeb9; op2val:0xbdac9a42; op3val:0x7d522f22; valaddr_reg:x16; val_offset:1296; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1296, x17, x15, 192, x18)

inst_279:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1bdeb9 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x2c9a42 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x522f22 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1bdeb9; op2val:0xbdac9a42; op3val:0x7d522f22; valaddr_reg:x16; val_offset:1308; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1308, x17, x15, 200, x18)

inst_280:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1bdeb9 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x2c9a42 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x522f22 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1bdeb9; op2val:0xbdac9a42; op3val:0x7d522f22; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 208, x18)

inst_281:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bd190 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x743850 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x60f79d and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7debd190; op2val:0xc0743850; op3val:0x7ee0f79d; valaddr_reg:x16; val_offset:1332; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1332, x17, x15, 216, x18)

inst_282:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bd190 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x743850 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x60f79d and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7debd190; op2val:0xc0743850; op3val:0x7ee0f79d; valaddr_reg:x16; val_offset:1344; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1344, x17, x15, 224, x18)

inst_283:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bd190 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x743850 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x60f79d and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7debd190; op2val:0xc0743850; op3val:0x7ee0f79d; valaddr_reg:x16; val_offset:1356; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1356, x17, x15, 232, x18)

inst_284:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bd190 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x743850 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x60f79d and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7debd190; op2val:0xc0743850; op3val:0x7ee0f79d; valaddr_reg:x16; val_offset:1368; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1368, x17, x15, 240, x18)

inst_285:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6bd190 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x743850 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x60f79d and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7debd190; op2val:0xc0743850; op3val:0x7ee0f79d; valaddr_reg:x16; val_offset:1380; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1380, x17, x15, 248, x18)

inst_286:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f1c1f and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2a2046 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x7e0189 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ebf1c1f; op2val:0xbf2a2046; op3val:0x7e7e0189; valaddr_reg:x16; val_offset:1392; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1392, x17, x15, 256, x18)

inst_287:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f1c1f and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2a2046 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x7e0189 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ebf1c1f; op2val:0xbf2a2046; op3val:0x7e7e0189; valaddr_reg:x16; val_offset:1404; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1404, x17, x15, 264, x18)

inst_288:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f1c1f and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2a2046 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x7e0189 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ebf1c1f; op2val:0xbf2a2046; op3val:0x7e7e0189; valaddr_reg:x16; val_offset:1416; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1416, x17, x15, 272, x18)

inst_289:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f1c1f and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2a2046 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x7e0189 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ebf1c1f; op2val:0xbf2a2046; op3val:0x7e7e0189; valaddr_reg:x16; val_offset:1428; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1428, x17, x15, 280, x18)

inst_290:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f1c1f and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2a2046 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x7e0189 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ebf1c1f; op2val:0xbf2a2046; op3val:0x7e7e0189; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 288, x18)

inst_291:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x37b5df and fs2 == 1 and fe2 == 0x7f and fm2 == 0x12e948 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x52da44 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb7b5df; op2val:0xbf92e948; op3val:0x7ed2da44; valaddr_reg:x16; val_offset:1452; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1452, x17, x15, 296, x18)

inst_292:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x37b5df and fs2 == 1 and fe2 == 0x7f and fm2 == 0x12e948 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x52da44 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb7b5df; op2val:0xbf92e948; op3val:0x7ed2da44; valaddr_reg:x16; val_offset:1464; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1464, x17, x15, 304, x18)

inst_293:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x37b5df and fs2 == 1 and fe2 == 0x7f and fm2 == 0x12e948 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x52da44 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb7b5df; op2val:0xbf92e948; op3val:0x7ed2da44; valaddr_reg:x16; val_offset:1476; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1476, x17, x15, 312, x18)

inst_294:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x37b5df and fs2 == 1 and fe2 == 0x7f and fm2 == 0x12e948 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x52da44 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb7b5df; op2val:0xbf92e948; op3val:0x7ed2da44; valaddr_reg:x16; val_offset:1488; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1488, x17, x15, 320, x18)

inst_295:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x37b5df and fs2 == 1 and fe2 == 0x7f and fm2 == 0x12e948 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x52da44 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb7b5df; op2val:0xbf92e948; op3val:0x7ed2da44; valaddr_reg:x16; val_offset:1500; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1500, x17, x15, 328, x18)

inst_296:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ed986 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x207095 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x5b29b3 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2ed986; op2val:0xbe207095; op3val:0x7ddb29b3; valaddr_reg:x16; val_offset:1512; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1512, x17, x15, 336, x18)

inst_297:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ed986 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x207095 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x5b29b3 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2ed986; op2val:0xbe207095; op3val:0x7ddb29b3; valaddr_reg:x16; val_offset:1524; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1524, x17, x15, 344, x18)

inst_298:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ed986 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x207095 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x5b29b3 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2ed986; op2val:0xbe207095; op3val:0x7ddb29b3; valaddr_reg:x16; val_offset:1536; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1536, x17, x15, 352, x18)

inst_299:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ed986 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x207095 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x5b29b3 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2ed986; op2val:0xbe207095; op3val:0x7ddb29b3; valaddr_reg:x16; val_offset:1548; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1548, x17, x15, 360, x18)

inst_300:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ed986 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x207095 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x5b29b3 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2ed986; op2val:0xbe207095; op3val:0x7ddb29b3; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 368, x18)

inst_301:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5bece0 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2e7d03 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x15e665 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e5bece0; op2val:0xc02e7d03; op3val:0x7f15e665; valaddr_reg:x16; val_offset:1572; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1572, x17, x15, 376, x18)

inst_302:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5bece0 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2e7d03 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x15e665 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e5bece0; op2val:0xc02e7d03; op3val:0x7f15e665; valaddr_reg:x16; val_offset:1584; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1584, x17, x15, 384, x18)

inst_303:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5bece0 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2e7d03 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x15e665 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e5bece0; op2val:0xc02e7d03; op3val:0x7f15e665; valaddr_reg:x16; val_offset:1596; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1596, x17, x15, 392, x18)

inst_304:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5bece0 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2e7d03 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x15e665 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e5bece0; op2val:0xc02e7d03; op3val:0x7f15e665; valaddr_reg:x16; val_offset:1608; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1608, x17, x15, 400, x18)

inst_305:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5bece0 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2e7d03 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x15e665 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e5bece0; op2val:0xc02e7d03; op3val:0x7f15e665; valaddr_reg:x16; val_offset:1620; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1620, x17, x15, 408, x18)

inst_306:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x055e08 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1f839e and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2633f2 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f055e08; op2val:0xbf1f839e; op3val:0x7ea633f2; valaddr_reg:x16; val_offset:1632; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1632, x17, x15, 416, x18)

inst_307:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x055e08 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1f839e and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2633f2 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f055e08; op2val:0xbf1f839e; op3val:0x7ea633f2; valaddr_reg:x16; val_offset:1644; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1644, x17, x15, 424, x18)

inst_308:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x055e08 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1f839e and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2633f2 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f055e08; op2val:0xbf1f839e; op3val:0x7ea633f2; valaddr_reg:x16; val_offset:1656; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1656, x17, x15, 432, x18)

inst_309:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x055e08 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1f839e and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2633f2 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f055e08; op2val:0xbf1f839e; op3val:0x7ea633f2; valaddr_reg:x16; val_offset:1668; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1668, x17, x15, 440, x18)

inst_310:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x055e08 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1f839e and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2633f2 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f055e08; op2val:0xbf1f839e; op3val:0x7ea633f2; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 448, x18)

inst_311:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x4aeb32 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x4a914f and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2090c4 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d4aeb32; op2val:0xc14a914f; op3val:0x7f2090c4; valaddr_reg:x16; val_offset:1692; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1692, x17, x15, 456, x18)

inst_312:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x4aeb32 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x4a914f and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2090c4 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d4aeb32; op2val:0xc14a914f; op3val:0x7f2090c4; valaddr_reg:x16; val_offset:1704; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1704, x17, x15, 464, x18)

inst_313:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x4aeb32 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x4a914f and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2090c4 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d4aeb32; op2val:0xc14a914f; op3val:0x7f2090c4; valaddr_reg:x16; val_offset:1716; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1716, x17, x15, 472, x18)

inst_314:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x4aeb32 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x4a914f and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2090c4 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d4aeb32; op2val:0xc14a914f; op3val:0x7f2090c4; valaddr_reg:x16; val_offset:1728; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1728, x17, x15, 480, x18)

inst_315:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x4aeb32 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x4a914f and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2090c4 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d4aeb32; op2val:0xc14a914f; op3val:0x7f2090c4; valaddr_reg:x16; val_offset:1740; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1740, x17, x15, 488, x18)

inst_316:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x63ac29 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x333166 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1f5d50 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e63ac29; op2val:0xc0333166; op3val:0x7f1f5d50; valaddr_reg:x16; val_offset:1752; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1752, x17, x15, 496, x18)

inst_317:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x63ac29 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x333166 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1f5d50 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e63ac29; op2val:0xc0333166; op3val:0x7f1f5d50; valaddr_reg:x16; val_offset:1764; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1764, x17, x15, 504, x18)

inst_318:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x63ac29 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x333166 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1f5d50 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e63ac29; op2val:0xc0333166; op3val:0x7f1f5d50; valaddr_reg:x16; val_offset:1776; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1776, x17, x15, 512, x18)

inst_319:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x63ac29 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x333166 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1f5d50 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e63ac29; op2val:0xc0333166; op3val:0x7f1f5d50; valaddr_reg:x16; val_offset:1788; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1788, x17, x15, 520, x18)

inst_320:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x63ac29 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x333166 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1f5d50 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e63ac29; op2val:0xc0333166; op3val:0x7f1f5d50; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 528, x18)

inst_321:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2390a7 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x6c2877 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x16e335 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2390a7; op2val:0xbe6c2877; op3val:0x7e16e335; valaddr_reg:x16; val_offset:1812; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1812, x17, x15, 536, x18)

inst_322:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2390a7 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x6c2877 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x16e335 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2390a7; op2val:0xbe6c2877; op3val:0x7e16e335; valaddr_reg:x16; val_offset:1824; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1824, x17, x15, 544, x18)

inst_323:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2390a7 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x6c2877 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x16e335 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2390a7; op2val:0xbe6c2877; op3val:0x7e16e335; valaddr_reg:x16; val_offset:1836; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1836, x17, x15, 552, x18)

inst_324:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2390a7 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x6c2877 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x16e335 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2390a7; op2val:0xbe6c2877; op3val:0x7e16e335; valaddr_reg:x16; val_offset:1848; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1848, x17, x15, 560, x18)

inst_325:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2390a7 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x6c2877 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x16e335 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2390a7; op2val:0xbe6c2877; op3val:0x7e16e335; valaddr_reg:x16; val_offset:1860; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1860, x17, x15, 568, x18)

inst_326:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x14058d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x021f69 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x1679f6 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e94058d; op2val:0xbf821f69; op3val:0x7e9679f6; valaddr_reg:x16; val_offset:1872; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1872, x17, x15, 576, x18)

inst_327:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x14058d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x021f69 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x1679f6 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e94058d; op2val:0xbf821f69; op3val:0x7e9679f6; valaddr_reg:x16; val_offset:1884; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1884, x17, x15, 584, x18)

inst_328:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x14058d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x021f69 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x1679f6 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e94058d; op2val:0xbf821f69; op3val:0x7e9679f6; valaddr_reg:x16; val_offset:1896; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1896, x17, x15, 592, x18)

inst_329:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x14058d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x021f69 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x1679f6 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e94058d; op2val:0xbf821f69; op3val:0x7e9679f6; valaddr_reg:x16; val_offset:1908; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1908, x17, x15, 600, x18)

inst_330:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x14058d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x021f69 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x1679f6 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e94058d; op2val:0xbf821f69; op3val:0x7e9679f6; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 608, x18)

inst_331:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x390aa3 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x722d10 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2f0ca1 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb90aa3; op2val:0xbff22d10; op3val:0x7f2f0ca1; valaddr_reg:x16; val_offset:1932; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1932, x17, x15, 616, x18)

inst_332:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x390aa3 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x722d10 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2f0ca1 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb90aa3; op2val:0xbff22d10; op3val:0x7f2f0ca1; valaddr_reg:x16; val_offset:1944; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1944, x17, x15, 624, x18)

inst_333:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x390aa3 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x722d10 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2f0ca1 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb90aa3; op2val:0xbff22d10; op3val:0x7f2f0ca1; valaddr_reg:x16; val_offset:1956; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1956, x17, x15, 632, x18)

inst_334:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x390aa3 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x722d10 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2f0ca1 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb90aa3; op2val:0xbff22d10; op3val:0x7f2f0ca1; valaddr_reg:x16; val_offset:1968; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1968, x17, x15, 640, x18)

inst_335:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x390aa3 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x722d10 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2f0ca1 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb90aa3; op2val:0xbff22d10; op3val:0x7f2f0ca1; valaddr_reg:x16; val_offset:1980; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1980, x17, x15, 648, x18)

inst_336:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x07f885 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x648bdf and fs3 == 0 and fe3 == 0xfd and fm3 == 0x72c742 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f07f885; op2val:0xbf648bdf; op3val:0x7ef2c742; valaddr_reg:x16; val_offset:1992; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1992, x17, x15, 656, x18)

inst_337:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x07f885 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x648bdf and fs3 == 0 and fe3 == 0xfd and fm3 == 0x72c742 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f07f885; op2val:0xbf648bdf; op3val:0x7ef2c742; valaddr_reg:x16; val_offset:2004; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 2004, x17, x15, 664, x18)

inst_338:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x07f885 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x648bdf and fs3 == 0 and fe3 == 0xfd and fm3 == 0x72c742 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f07f885; op2val:0xbf648bdf; op3val:0x7ef2c742; valaddr_reg:x16; val_offset:2016; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 2016, x17, x15, 672, x18)

inst_339:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x07f885 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x648bdf and fs3 == 0 and fe3 == 0xfd and fm3 == 0x72c742 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f07f885; op2val:0xbf648bdf; op3val:0x7ef2c742; valaddr_reg:x16; val_offset:2028; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 2028, x17, x15, 680, x18)
addi x16,x16,2040

inst_340:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x07f885 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x648bdf and fs3 == 0 and fe3 == 0xfd and fm3 == 0x72c742 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f07f885; op2val:0xbf648bdf; op3val:0x7ef2c742; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 688, x18)

inst_341:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x243fb8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2c433a and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5d0be3 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ea43fb8; op2val:0xbfac433a; op3val:0x7edd0be3; valaddr_reg:x16; val_offset:12; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 12, x17, x15, 696, x18)

inst_342:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x243fb8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2c433a and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5d0be3 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ea43fb8; op2val:0xbfac433a; op3val:0x7edd0be3; valaddr_reg:x16; val_offset:24; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 24, x17, x15, 704, x18)

inst_343:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x243fb8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2c433a and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5d0be3 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ea43fb8; op2val:0xbfac433a; op3val:0x7edd0be3; valaddr_reg:x16; val_offset:36; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 36, x17, x15, 712, x18)

inst_344:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x243fb8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2c433a and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5d0be3 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ea43fb8; op2val:0xbfac433a; op3val:0x7edd0be3; valaddr_reg:x16; val_offset:48; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 48, x17, x15, 720, x18)

inst_345:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x243fb8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2c433a and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5d0be3 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ea43fb8; op2val:0xbfac433a; op3val:0x7edd0be3; valaddr_reg:x16; val_offset:60; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 60, x17, x15, 728, x18)

inst_346:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x32eb6c and fs2 == 1 and fe2 == 0x84 and fm2 == 0x55d574 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x157310 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7c32eb6c; op2val:0xc255d574; op3val:0x7f157310; valaddr_reg:x16; val_offset:72; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 72, x17, x15, 736, x18)

inst_347:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x32eb6c and fs2 == 1 and fe2 == 0x84 and fm2 == 0x55d574 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x157310 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7c32eb6c; op2val:0xc255d574; op3val:0x7f157310; valaddr_reg:x16; val_offset:84; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 84, x17, x15, 744, x18)

inst_348:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x32eb6c and fs2 == 1 and fe2 == 0x84 and fm2 == 0x55d574 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x157310 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7c32eb6c; op2val:0xc255d574; op3val:0x7f157310; valaddr_reg:x16; val_offset:96; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 96, x17, x15, 752, x18)

inst_349:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x32eb6c and fs2 == 1 and fe2 == 0x84 and fm2 == 0x55d574 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x157310 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7c32eb6c; op2val:0xc255d574; op3val:0x7f157310; valaddr_reg:x16; val_offset:108; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 108, x17, x15, 760, x18)

inst_350:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x32eb6c and fs2 == 1 and fe2 == 0x84 and fm2 == 0x55d574 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x157310 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7c32eb6c; op2val:0xc255d574; op3val:0x7f157310; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 768, x18)

inst_351:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2a7c0d and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1d4c63 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5181e6 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2a7c0d; op2val:0xbf1d4c63; op3val:0x7ed181e6; valaddr_reg:x16; val_offset:132; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 132, x17, x15, 776, x18)

inst_352:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2a7c0d and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1d4c63 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5181e6 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2a7c0d; op2val:0xbf1d4c63; op3val:0x7ed181e6; valaddr_reg:x16; val_offset:144; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 144, x17, x15, 784, x18)

inst_353:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2a7c0d and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1d4c63 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5181e6 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2a7c0d; op2val:0xbf1d4c63; op3val:0x7ed181e6; valaddr_reg:x16; val_offset:156; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 156, x17, x15, 792, x18)

inst_354:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2a7c0d and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1d4c63 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5181e6 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2a7c0d; op2val:0xbf1d4c63; op3val:0x7ed181e6; valaddr_reg:x16; val_offset:168; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 168, x17, x15, 800, x18)

inst_355:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2a7c0d and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1d4c63 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5181e6 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2a7c0d; op2val:0xbf1d4c63; op3val:0x7ed181e6; valaddr_reg:x16; val_offset:180; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 180, x17, x15, 808, x18)

inst_356:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ef4a6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x00c03c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2ffb67 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eaef4a6; op2val:0xc000c03c; op3val:0x7f2ffb67; valaddr_reg:x16; val_offset:192; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 192, x17, x15, 816, x18)

inst_357:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ef4a6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x00c03c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2ffb67 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eaef4a6; op2val:0xc000c03c; op3val:0x7f2ffb67; valaddr_reg:x16; val_offset:204; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 204, x17, x15, 824, x18)

inst_358:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ef4a6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x00c03c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2ffb67 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eaef4a6; op2val:0xc000c03c; op3val:0x7f2ffb67; valaddr_reg:x16; val_offset:216; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 216, x17, x15, 832, x18)

inst_359:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ef4a6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x00c03c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2ffb67 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eaef4a6; op2val:0xc000c03c; op3val:0x7f2ffb67; valaddr_reg:x16; val_offset:228; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 228, x17, x15, 840, x18)

inst_360:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ef4a6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x00c03c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2ffb67 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eaef4a6; op2val:0xc000c03c; op3val:0x7f2ffb67; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 848, x18)

inst_361:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5fd1b9 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5dbbf1 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x41dc5e and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7cdfd1b9; op2val:0xc0ddbbf1; op3val:0x7e41dc5e; valaddr_reg:x16; val_offset:252; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 252, x17, x15, 856, x18)

inst_362:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5fd1b9 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5dbbf1 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x41dc5e and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7cdfd1b9; op2val:0xc0ddbbf1; op3val:0x7e41dc5e; valaddr_reg:x16; val_offset:264; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 264, x17, x15, 864, x18)

inst_363:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5fd1b9 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5dbbf1 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x41dc5e and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7cdfd1b9; op2val:0xc0ddbbf1; op3val:0x7e41dc5e; valaddr_reg:x16; val_offset:276; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 276, x17, x15, 872, x18)

inst_364:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5fd1b9 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5dbbf1 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x41dc5e and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7cdfd1b9; op2val:0xc0ddbbf1; op3val:0x7e41dc5e; valaddr_reg:x16; val_offset:288; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 288, x17, x15, 880, x18)

inst_365:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5fd1b9 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5dbbf1 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x41dc5e and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7cdfd1b9; op2val:0xc0ddbbf1; op3val:0x7e41dc5e; valaddr_reg:x16; val_offset:300; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 300, x17, x15, 888, x18)

inst_366:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0f0b15 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4b0294 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x62de76 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0f0b15; op2val:0xbf4b0294; op3val:0x7ee2de76; valaddr_reg:x16; val_offset:312; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 312, x17, x15, 896, x18)

inst_367:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0f0b15 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4b0294 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x62de76 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0f0b15; op2val:0xbf4b0294; op3val:0x7ee2de76; valaddr_reg:x16; val_offset:324; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 324, x17, x15, 904, x18)

inst_368:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0f0b15 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4b0294 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x62de76 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0f0b15; op2val:0xbf4b0294; op3val:0x7ee2de76; valaddr_reg:x16; val_offset:336; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 336, x17, x15, 912, x18)

inst_369:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0f0b15 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4b0294 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x62de76 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0f0b15; op2val:0xbf4b0294; op3val:0x7ee2de76; valaddr_reg:x16; val_offset:348; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 348, x17, x15, 920, x18)

inst_370:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0f0b15 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4b0294 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x62de76 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0f0b15; op2val:0xbf4b0294; op3val:0x7ee2de76; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 928, x18)

inst_371:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x324e28 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x470cb8 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0aa39d and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb24e28; op2val:0xbf470cb8; op3val:0x7e8aa39d; valaddr_reg:x16; val_offset:372; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 372, x17, x15, 936, x18)

inst_372:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x324e28 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x470cb8 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0aa39d and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb24e28; op2val:0xbf470cb8; op3val:0x7e8aa39d; valaddr_reg:x16; val_offset:384; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 384, x17, x15, 944, x18)

inst_373:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x324e28 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x470cb8 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0aa39d and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb24e28; op2val:0xbf470cb8; op3val:0x7e8aa39d; valaddr_reg:x16; val_offset:396; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 396, x17, x15, 952, x18)

inst_374:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x324e28 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x470cb8 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0aa39d and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb24e28; op2val:0xbf470cb8; op3val:0x7e8aa39d; valaddr_reg:x16; val_offset:408; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 408, x17, x15, 960, x18)

inst_375:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x324e28 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x470cb8 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0aa39d and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb24e28; op2val:0xbf470cb8; op3val:0x7e8aa39d; valaddr_reg:x16; val_offset:420; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 420, x17, x15, 968, x18)

inst_376:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x63f59c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x647f4a and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4b7817 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e63f59c; op2val:0xbfe47f4a; op3val:0x7ecb7817; valaddr_reg:x16; val_offset:432; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 432, x17, x15, 976, x18)

inst_377:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x63f59c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x647f4a and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4b7817 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e63f59c; op2val:0xbfe47f4a; op3val:0x7ecb7817; valaddr_reg:x16; val_offset:444; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 444, x17, x15, 984, x18)

inst_378:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x63f59c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x647f4a and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4b7817 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e63f59c; op2val:0xbfe47f4a; op3val:0x7ecb7817; valaddr_reg:x16; val_offset:456; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 456, x17, x15, 992, x18)

inst_379:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x63f59c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x647f4a and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4b7817 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e63f59c; op2val:0xbfe47f4a; op3val:0x7ecb7817; valaddr_reg:x16; val_offset:468; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 468, x17, x15, 1000, x18)

inst_380:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x63f59c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x647f4a and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4b7817 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e63f59c; op2val:0xbfe47f4a; op3val:0x7ecb7817; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1008, x18)

inst_381:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4cdcfa and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2149e2 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x011219 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eccdcfa; op2val:0xbf2149e2; op3val:0x7e811219; valaddr_reg:x16; val_offset:492; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 492, x17, x15, 1016, x18)

inst_382:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4cdcfa and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2149e2 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x011219 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eccdcfa; op2val:0xbf2149e2; op3val:0x7e811219; valaddr_reg:x16; val_offset:504; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 504, x17, x15, 1024, x18)

inst_383:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4cdcfa and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2149e2 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x011219 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eccdcfa; op2val:0xbf2149e2; op3val:0x7e811219; valaddr_reg:x16; val_offset:516; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 516, x17, x15, 1032, x18)

inst_384:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4cdcfa and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2149e2 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x011219 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eccdcfa; op2val:0xbf2149e2; op3val:0x7e811219; valaddr_reg:x16; val_offset:528; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 528, x17, x15, 1040, x18)

inst_385:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4cdcfa and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2149e2 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x011219 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eccdcfa; op2val:0xbf2149e2; op3val:0x7e811219; valaddr_reg:x16; val_offset:540; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 540, x17, x15, 1048, x18)

inst_386:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11ff1d and fs2 == 1 and fe2 == 0x7d and fm2 == 0x4a76b7 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x66ee02 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f11ff1d; op2val:0xbeca76b7; op3val:0x7e66ee02; valaddr_reg:x16; val_offset:552; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 552, x17, x15, 1056, x18)

inst_387:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11ff1d and fs2 == 1 and fe2 == 0x7d and fm2 == 0x4a76b7 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x66ee02 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f11ff1d; op2val:0xbeca76b7; op3val:0x7e66ee02; valaddr_reg:x16; val_offset:564; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 564, x17, x15, 1064, x18)

inst_388:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11ff1d and fs2 == 1 and fe2 == 0x7d and fm2 == 0x4a76b7 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x66ee02 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f11ff1d; op2val:0xbeca76b7; op3val:0x7e66ee02; valaddr_reg:x16; val_offset:576; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 576, x17, x15, 1072, x18)

inst_389:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11ff1d and fs2 == 1 and fe2 == 0x7d and fm2 == 0x4a76b7 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x66ee02 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f11ff1d; op2val:0xbeca76b7; op3val:0x7e66ee02; valaddr_reg:x16; val_offset:588; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 588, x17, x15, 1080, x18)

inst_390:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11ff1d and fs2 == 1 and fe2 == 0x7d and fm2 == 0x4a76b7 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x66ee02 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f11ff1d; op2val:0xbeca76b7; op3val:0x7e66ee02; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1088, x18)

inst_391:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0ebf31 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x22c52b and fs3 == 0 and fe3 == 0xfb and fm3 == 0x3585de and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0ebf31; op2val:0xbe22c52b; op3val:0x7db585de; valaddr_reg:x16; val_offset:612; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 612, x17, x15, 1096, x18)

inst_392:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0ebf31 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x22c52b and fs3 == 0 and fe3 == 0xfb and fm3 == 0x3585de and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0ebf31; op2val:0xbe22c52b; op3val:0x7db585de; valaddr_reg:x16; val_offset:624; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 624, x17, x15, 1104, x18)

inst_393:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0ebf31 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x22c52b and fs3 == 0 and fe3 == 0xfb and fm3 == 0x3585de and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0ebf31; op2val:0xbe22c52b; op3val:0x7db585de; valaddr_reg:x16; val_offset:636; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 636, x17, x15, 1112, x18)

inst_394:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0ebf31 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x22c52b and fs3 == 0 and fe3 == 0xfb and fm3 == 0x3585de and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0ebf31; op2val:0xbe22c52b; op3val:0x7db585de; valaddr_reg:x16; val_offset:648; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 648, x17, x15, 1120, x18)

inst_395:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0ebf31 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x22c52b and fs3 == 0 and fe3 == 0xfb and fm3 == 0x3585de and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0ebf31; op2val:0xbe22c52b; op3val:0x7db585de; valaddr_reg:x16; val_offset:660; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 660, x17, x15, 1128, x18)

inst_396:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77a1f3 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6fb705 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x67e13b and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef7a1f3; op2val:0xbf6fb705; op3val:0x7ee7e13b; valaddr_reg:x16; val_offset:672; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 672, x17, x15, 1136, x18)

inst_397:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77a1f3 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6fb705 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x67e13b and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef7a1f3; op2val:0xbf6fb705; op3val:0x7ee7e13b; valaddr_reg:x16; val_offset:684; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 684, x17, x15, 1144, x18)

inst_398:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77a1f3 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6fb705 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x67e13b and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef7a1f3; op2val:0xbf6fb705; op3val:0x7ee7e13b; valaddr_reg:x16; val_offset:696; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 696, x17, x15, 1152, x18)

inst_399:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77a1f3 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6fb705 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x67e13b and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef7a1f3; op2val:0xbf6fb705; op3val:0x7ee7e13b; valaddr_reg:x16; val_offset:708; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 708, x17, x15, 1160, x18)

inst_400:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x77a1f3 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6fb705 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x67e13b and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef7a1f3; op2val:0xbf6fb705; op3val:0x7ee7e13b; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1168, x18)

inst_401:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x697c86 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x47d51b and fs3 == 0 and fe3 == 0xfd and fm3 == 0x36422a and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee97c86; op2val:0xbf47d51b; op3val:0x7eb6422a; valaddr_reg:x16; val_offset:732; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 732, x17, x15, 1176, x18)

inst_402:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x697c86 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x47d51b and fs3 == 0 and fe3 == 0xfd and fm3 == 0x36422a and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee97c86; op2val:0xbf47d51b; op3val:0x7eb6422a; valaddr_reg:x16; val_offset:744; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 744, x17, x15, 1184, x18)

inst_403:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x697c86 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x47d51b and fs3 == 0 and fe3 == 0xfd and fm3 == 0x36422a and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee97c86; op2val:0xbf47d51b; op3val:0x7eb6422a; valaddr_reg:x16; val_offset:756; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 756, x17, x15, 1192, x18)

inst_404:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x697c86 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x47d51b and fs3 == 0 and fe3 == 0xfd and fm3 == 0x36422a and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee97c86; op2val:0xbf47d51b; op3val:0x7eb6422a; valaddr_reg:x16; val_offset:768; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 768, x17, x15, 1200, x18)

inst_405:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x697c86 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x47d51b and fs3 == 0 and fe3 == 0xfd and fm3 == 0x36422a and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee97c86; op2val:0xbf47d51b; op3val:0x7eb6422a; valaddr_reg:x16; val_offset:780; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 780, x17, x15, 1208, x18)

inst_406:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3ddabc and fs2 == 1 and fe2 == 0x7d and fm2 == 0x17cf0e and fs3 == 0 and fe3 == 0xfc and fm3 == 0x612b27 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3ddabc; op2val:0xbe97cf0e; op3val:0x7e612b27; valaddr_reg:x16; val_offset:792; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 792, x17, x15, 1216, x18)

inst_407:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3ddabc and fs2 == 1 and fe2 == 0x7d and fm2 == 0x17cf0e and fs3 == 0 and fe3 == 0xfc and fm3 == 0x612b27 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3ddabc; op2val:0xbe97cf0e; op3val:0x7e612b27; valaddr_reg:x16; val_offset:804; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 804, x17, x15, 1224, x18)

inst_408:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3ddabc and fs2 == 1 and fe2 == 0x7d and fm2 == 0x17cf0e and fs3 == 0 and fe3 == 0xfc and fm3 == 0x612b27 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3ddabc; op2val:0xbe97cf0e; op3val:0x7e612b27; valaddr_reg:x16; val_offset:816; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 816, x17, x15, 1232, x18)

inst_409:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3ddabc and fs2 == 1 and fe2 == 0x7d and fm2 == 0x17cf0e and fs3 == 0 and fe3 == 0xfc and fm3 == 0x612b27 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3ddabc; op2val:0xbe97cf0e; op3val:0x7e612b27; valaddr_reg:x16; val_offset:828; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 828, x17, x15, 1240, x18)

inst_410:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3ddabc and fs2 == 1 and fe2 == 0x7d and fm2 == 0x17cf0e and fs3 == 0 and fe3 == 0xfc and fm3 == 0x612b27 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3ddabc; op2val:0xbe97cf0e; op3val:0x7e612b27; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1248, x18)

inst_411:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4d95b3 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x140204 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x6db854 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e4d95b3; op2val:0xbf140204; op3val:0x7dedb854; valaddr_reg:x16; val_offset:852; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 852, x17, x15, 1256, x18)

inst_412:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4d95b3 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x140204 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x6db854 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e4d95b3; op2val:0xbf140204; op3val:0x7dedb854; valaddr_reg:x16; val_offset:864; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 864, x17, x15, 1264, x18)

inst_413:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4d95b3 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x140204 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x6db854 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e4d95b3; op2val:0xbf140204; op3val:0x7dedb854; valaddr_reg:x16; val_offset:876; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 876, x17, x15, 1272, x18)

inst_414:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4d95b3 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x140204 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x6db854 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e4d95b3; op2val:0xbf140204; op3val:0x7dedb854; valaddr_reg:x16; val_offset:888; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 888, x17, x15, 1280, x18)

inst_415:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4d95b3 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x140204 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x6db854 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e4d95b3; op2val:0xbf140204; op3val:0x7dedb854; valaddr_reg:x16; val_offset:900; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 900, x17, x15, 1288, x18)

inst_416:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x16204d and fs2 == 1 and fe2 == 0x7d and fm2 == 0x20dc4b and fs3 == 0 and fe3 == 0xfc and fm3 == 0x3caac1 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f16204d; op2val:0xbea0dc4b; op3val:0x7e3caac1; valaddr_reg:x16; val_offset:912; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 912, x17, x15, 1296, x18)

inst_417:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x16204d and fs2 == 1 and fe2 == 0x7d and fm2 == 0x20dc4b and fs3 == 0 and fe3 == 0xfc and fm3 == 0x3caac1 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f16204d; op2val:0xbea0dc4b; op3val:0x7e3caac1; valaddr_reg:x16; val_offset:924; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 924, x17, x15, 1304, x18)

inst_418:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x16204d and fs2 == 1 and fe2 == 0x7d and fm2 == 0x20dc4b and fs3 == 0 and fe3 == 0xfc and fm3 == 0x3caac1 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f16204d; op2val:0xbea0dc4b; op3val:0x7e3caac1; valaddr_reg:x16; val_offset:936; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 936, x17, x15, 1312, x18)

inst_419:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x16204d and fs2 == 1 and fe2 == 0x7d and fm2 == 0x20dc4b and fs3 == 0 and fe3 == 0xfc and fm3 == 0x3caac1 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f16204d; op2val:0xbea0dc4b; op3val:0x7e3caac1; valaddr_reg:x16; val_offset:948; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 948, x17, x15, 1320, x18)

inst_420:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x16204d and fs2 == 1 and fe2 == 0x7d and fm2 == 0x20dc4b and fs3 == 0 and fe3 == 0xfc and fm3 == 0x3caac1 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f16204d; op2val:0xbea0dc4b; op3val:0x7e3caac1; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 1328, x18)

inst_421:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5244d5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x5a9f6c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x33918f and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e5244d5; op2val:0xc05a9f6c; op3val:0x7f33918f; valaddr_reg:x16; val_offset:972; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 972, x17, x15, 1336, x18)

inst_422:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5244d5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x5a9f6c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x33918f and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e5244d5; op2val:0xc05a9f6c; op3val:0x7f33918f; valaddr_reg:x16; val_offset:984; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 984, x17, x15, 1344, x18)

inst_423:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5244d5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x5a9f6c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x33918f and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e5244d5; op2val:0xc05a9f6c; op3val:0x7f33918f; valaddr_reg:x16; val_offset:996; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 996, x17, x15, 1352, x18)

inst_424:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5244d5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x5a9f6c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x33918f and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e5244d5; op2val:0xc05a9f6c; op3val:0x7f33918f; valaddr_reg:x16; val_offset:1008; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1008, x17, x15, 1360, x18)

inst_425:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5244d5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x5a9f6c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x33918f and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e5244d5; op2val:0xc05a9f6c; op3val:0x7f33918f; valaddr_reg:x16; val_offset:1020; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1020, x17, x15, 1368, x18)

inst_426:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x223dfa and fs2 == 1 and fe2 == 0x84 and fm2 == 0x2157ca and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4c813b and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7c223dfa; op2val:0xc22157ca; op3val:0x7ecc813b; valaddr_reg:x16; val_offset:1032; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1032, x17, x15, 1376, x18)

inst_427:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x223dfa and fs2 == 1 and fe2 == 0x84 and fm2 == 0x2157ca and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4c813b and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7c223dfa; op2val:0xc22157ca; op3val:0x7ecc813b; valaddr_reg:x16; val_offset:1044; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1044, x17, x15, 1384, x18)

inst_428:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x223dfa and fs2 == 1 and fe2 == 0x84 and fm2 == 0x2157ca and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4c813b and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7c223dfa; op2val:0xc22157ca; op3val:0x7ecc813b; valaddr_reg:x16; val_offset:1056; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1056, x17, x15, 1392, x18)

inst_429:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x223dfa and fs2 == 1 and fe2 == 0x84 and fm2 == 0x2157ca and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4c813b and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7c223dfa; op2val:0xc22157ca; op3val:0x7ecc813b; valaddr_reg:x16; val_offset:1068; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1068, x17, x15, 1400, x18)

inst_430:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x223dfa and fs2 == 1 and fe2 == 0x84 and fm2 == 0x2157ca and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4c813b and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7c223dfa; op2val:0xc22157ca; op3val:0x7ecc813b; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 1408, x18)

inst_431:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x16166d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x07627c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1ebf21 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f16166d; op2val:0xbf87627c; op3val:0x7f1ebf21; valaddr_reg:x16; val_offset:1092; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1092, x17, x15, 1416, x18)

inst_432:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x16166d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x07627c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1ebf21 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f16166d; op2val:0xbf87627c; op3val:0x7f1ebf21; valaddr_reg:x16; val_offset:1104; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1104, x17, x15, 1424, x18)

inst_433:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x16166d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x07627c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1ebf21 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f16166d; op2val:0xbf87627c; op3val:0x7f1ebf21; valaddr_reg:x16; val_offset:1116; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1116, x17, x15, 1432, x18)

inst_434:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x16166d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x07627c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1ebf21 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f16166d; op2val:0xbf87627c; op3val:0x7f1ebf21; valaddr_reg:x16; val_offset:1128; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1128, x17, x15, 1440, x18)

inst_435:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x16166d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x07627c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1ebf21 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f16166d; op2val:0xbf87627c; op3val:0x7f1ebf21; valaddr_reg:x16; val_offset:1140; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1140, x17, x15, 1448, x18)

inst_436:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2a4aa3 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x293302 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x611a69 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eaa4aa3; op2val:0xbf293302; op3val:0x7e611a69; valaddr_reg:x16; val_offset:1152; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1152, x17, x15, 1456, x18)

inst_437:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2a4aa3 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x293302 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x611a69 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eaa4aa3; op2val:0xbf293302; op3val:0x7e611a69; valaddr_reg:x16; val_offset:1164; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1164, x17, x15, 1464, x18)

inst_438:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2a4aa3 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x293302 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x611a69 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eaa4aa3; op2val:0xbf293302; op3val:0x7e611a69; valaddr_reg:x16; val_offset:1176; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1176, x17, x15, 1472, x18)

inst_439:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2a4aa3 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x293302 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x611a69 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eaa4aa3; op2val:0xbf293302; op3val:0x7e611a69; valaddr_reg:x16; val_offset:1188; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1188, x17, x15, 1480, x18)

inst_440:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2a4aa3 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x293302 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x611a69 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eaa4aa3; op2val:0xbf293302; op3val:0x7e611a69; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 1488, x18)

inst_441:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3b3787 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2337c4 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6eba47 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7dbb3787; op2val:0xc0a337c4; op3val:0x7eeeba47; valaddr_reg:x16; val_offset:1212; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1212, x17, x15, 1496, x18)

inst_442:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3b3787 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2337c4 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6eba47 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7dbb3787; op2val:0xc0a337c4; op3val:0x7eeeba47; valaddr_reg:x16; val_offset:1224; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1224, x17, x15, 1504, x18)

inst_443:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3b3787 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2337c4 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6eba47 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7dbb3787; op2val:0xc0a337c4; op3val:0x7eeeba47; valaddr_reg:x16; val_offset:1236; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1236, x17, x15, 1512, x18)

inst_444:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3b3787 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2337c4 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6eba47 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7dbb3787; op2val:0xc0a337c4; op3val:0x7eeeba47; valaddr_reg:x16; val_offset:1248; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1248, x17, x15, 1520, x18)

inst_445:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3b3787 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2337c4 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6eba47 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7dbb3787; op2val:0xc0a337c4; op3val:0x7eeeba47; valaddr_reg:x16; val_offset:1260; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1260, x17, x15, 1528, x18)

inst_446:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5bf434 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x552827 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3724af and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e5bf434; op2val:0xbfd52827; op3val:0x7eb724af; valaddr_reg:x16; val_offset:1272; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1272, x17, x15, 1536, x18)

inst_447:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5bf434 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x552827 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3724af and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e5bf434; op2val:0xbfd52827; op3val:0x7eb724af; valaddr_reg:x16; val_offset:1284; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1284, x17, x15, 1544, x18)

inst_448:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5bf434 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x552827 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3724af and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e5bf434; op2val:0xbfd52827; op3val:0x7eb724af; valaddr_reg:x16; val_offset:1296; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1296, x17, x15, 1552, x18)

inst_449:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5bf434 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x552827 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3724af and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e5bf434; op2val:0xbfd52827; op3val:0x7eb724af; valaddr_reg:x16; val_offset:1308; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1308, x17, x15, 1560, x18)

inst_450:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5bf434 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x552827 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3724af and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e5bf434; op2val:0xbfd52827; op3val:0x7eb724af; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 1568, x18)

inst_451:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3cfb28 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x7fccec and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3cd574 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3cfb28; op2val:0xbeffccec; op3val:0x7ebcd574; valaddr_reg:x16; val_offset:1332; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1332, x17, x15, 1576, x18)

inst_452:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3cfb28 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x7fccec and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3cd574 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3cfb28; op2val:0xbeffccec; op3val:0x7ebcd574; valaddr_reg:x16; val_offset:1344; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1344, x17, x15, 1584, x18)

inst_453:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3cfb28 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x7fccec and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3cd574 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3cfb28; op2val:0xbeffccec; op3val:0x7ebcd574; valaddr_reg:x16; val_offset:1356; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1356, x17, x15, 1592, x18)

inst_454:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3cfb28 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x7fccec and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3cd574 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3cfb28; op2val:0xbeffccec; op3val:0x7ebcd574; valaddr_reg:x16; val_offset:1368; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1368, x17, x15, 1600, x18)

inst_455:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3cfb28 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x7fccec and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3cd574 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3cfb28; op2val:0xbeffccec; op3val:0x7ebcd574; valaddr_reg:x16; val_offset:1380; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1380, x17, x15, 1608, x18)

inst_456:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f8c7e and fs2 == 1 and fe2 == 0x7e and fm2 == 0x44a44f and fs3 == 0 and fe3 == 0xfc and fm3 == 0x751bf1 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e9f8c7e; op2val:0xbf44a44f; op3val:0x7e751bf1; valaddr_reg:x16; val_offset:1392; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1392, x17, x15, 1616, x18)

inst_457:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f8c7e and fs2 == 1 and fe2 == 0x7e and fm2 == 0x44a44f and fs3 == 0 and fe3 == 0xfc and fm3 == 0x751bf1 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e9f8c7e; op2val:0xbf44a44f; op3val:0x7e751bf1; valaddr_reg:x16; val_offset:1404; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1404, x17, x15, 1624, x18)

inst_458:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f8c7e and fs2 == 1 and fe2 == 0x7e and fm2 == 0x44a44f and fs3 == 0 and fe3 == 0xfc and fm3 == 0x751bf1 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e9f8c7e; op2val:0xbf44a44f; op3val:0x7e751bf1; valaddr_reg:x16; val_offset:1416; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1416, x17, x15, 1632, x18)

inst_459:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f8c7e and fs2 == 1 and fe2 == 0x7e and fm2 == 0x44a44f and fs3 == 0 and fe3 == 0xfc and fm3 == 0x751bf1 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e9f8c7e; op2val:0xbf44a44f; op3val:0x7e751bf1; valaddr_reg:x16; val_offset:1428; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1428, x17, x15, 1640, x18)

inst_460:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f8c7e and fs2 == 1 and fe2 == 0x7e and fm2 == 0x44a44f and fs3 == 0 and fe3 == 0xfc and fm3 == 0x751bf1 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e9f8c7e; op2val:0xbf44a44f; op3val:0x7e751bf1; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 1648, x18)

inst_461:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3c5927 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x01847e and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3e94d0 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3c5927; op2val:0xbf01847e; op3val:0x7ebe94d0; valaddr_reg:x16; val_offset:1452; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1452, x17, x15, 1656, x18)

inst_462:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3c5927 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x01847e and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3e94d0 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3c5927; op2val:0xbf01847e; op3val:0x7ebe94d0; valaddr_reg:x16; val_offset:1464; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1464, x17, x15, 1664, x18)

inst_463:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3c5927 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x01847e and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3e94d0 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3c5927; op2val:0xbf01847e; op3val:0x7ebe94d0; valaddr_reg:x16; val_offset:1476; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1476, x17, x15, 1672, x18)

inst_464:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3c5927 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x01847e and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3e94d0 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3c5927; op2val:0xbf01847e; op3val:0x7ebe94d0; valaddr_reg:x16; val_offset:1488; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1488, x17, x15, 1680, x18)

inst_465:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3c5927 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x01847e and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3e94d0 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3c5927; op2val:0xbf01847e; op3val:0x7ebe94d0; valaddr_reg:x16; val_offset:1500; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1500, x17, x15, 1688, x18)

inst_466:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x64ca80 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x5f46b8 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x478b9a and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee4ca80; op2val:0xbedf46b8; op3val:0x7e478b9a; valaddr_reg:x16; val_offset:1512; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1512, x17, x15, 1696, x18)

inst_467:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x64ca80 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x5f46b8 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x478b9a and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee4ca80; op2val:0xbedf46b8; op3val:0x7e478b9a; valaddr_reg:x16; val_offset:1524; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1524, x17, x15, 1704, x18)

inst_468:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x64ca80 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x5f46b8 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x478b9a and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee4ca80; op2val:0xbedf46b8; op3val:0x7e478b9a; valaddr_reg:x16; val_offset:1536; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1536, x17, x15, 1712, x18)

inst_469:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x64ca80 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x5f46b8 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x478b9a and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee4ca80; op2val:0xbedf46b8; op3val:0x7e478b9a; valaddr_reg:x16; val_offset:1548; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1548, x17, x15, 1720, x18)

inst_470:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x64ca80 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x5f46b8 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x478b9a and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee4ca80; op2val:0xbedf46b8; op3val:0x7e478b9a; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1728, x18)

inst_471:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3889e8 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x73608d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2f7080 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3889e8; op2val:0xbf73608d; op3val:0x7f2f7080; valaddr_reg:x16; val_offset:1572; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1572, x17, x15, 1736, x18)

inst_472:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3889e8 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x73608d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2f7080 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3889e8; op2val:0xbf73608d; op3val:0x7f2f7080; valaddr_reg:x16; val_offset:1584; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1584, x17, x15, 1744, x18)

inst_473:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3889e8 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x73608d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2f7080 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3889e8; op2val:0xbf73608d; op3val:0x7f2f7080; valaddr_reg:x16; val_offset:1596; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1596, x17, x15, 1752, x18)

inst_474:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3889e8 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x73608d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2f7080 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3889e8; op2val:0xbf73608d; op3val:0x7f2f7080; valaddr_reg:x16; val_offset:1608; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1608, x17, x15, 1760, x18)

inst_475:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3889e8 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x73608d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2f7080 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3889e8; op2val:0xbf73608d; op3val:0x7f2f7080; valaddr_reg:x16; val_offset:1620; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1620, x17, x15, 1768, x18)

inst_476:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3ab616 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x47f49a and fs3 == 0 and fe3 == 0xfd and fm3 == 0x11d5f1 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3ab616; op2val:0xbec7f49a; op3val:0x7e91d5f1; valaddr_reg:x16; val_offset:1632; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1632, x17, x15, 1776, x18)

inst_477:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3ab616 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x47f49a and fs3 == 0 and fe3 == 0xfd and fm3 == 0x11d5f1 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3ab616; op2val:0xbec7f49a; op3val:0x7e91d5f1; valaddr_reg:x16; val_offset:1644; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1644, x17, x15, 1784, x18)

inst_478:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3ab616 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x47f49a and fs3 == 0 and fe3 == 0xfd and fm3 == 0x11d5f1 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3ab616; op2val:0xbec7f49a; op3val:0x7e91d5f1; valaddr_reg:x16; val_offset:1656; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1656, x17, x15, 1792, x18)

inst_479:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3ab616 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x47f49a and fs3 == 0 and fe3 == 0xfd and fm3 == 0x11d5f1 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3ab616; op2val:0xbec7f49a; op3val:0x7e91d5f1; valaddr_reg:x16; val_offset:1668; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1668, x17, x15, 1800, x18)

inst_480:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3ab616 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x47f49a and fs3 == 0 and fe3 == 0xfd and fm3 == 0x11d5f1 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3ab616; op2val:0xbec7f49a; op3val:0x7e91d5f1; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1808, x18)

inst_481:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2dd370 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x24d96b and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5fde2a and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e2dd370; op2val:0xbfa4d96b; op3val:0x7e5fde2a; valaddr_reg:x16; val_offset:1692; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1692, x17, x15, 1816, x18)

inst_482:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2dd370 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x24d96b and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5fde2a and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e2dd370; op2val:0xbfa4d96b; op3val:0x7e5fde2a; valaddr_reg:x16; val_offset:1704; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1704, x17, x15, 1824, x18)

inst_483:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2dd370 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x24d96b and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5fde2a and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e2dd370; op2val:0xbfa4d96b; op3val:0x7e5fde2a; valaddr_reg:x16; val_offset:1716; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1716, x17, x15, 1832, x18)

inst_484:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2dd370 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x24d96b and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5fde2a and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e2dd370; op2val:0xbfa4d96b; op3val:0x7e5fde2a; valaddr_reg:x16; val_offset:1728; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1728, x17, x15, 1840, x18)

inst_485:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2dd370 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x24d96b and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5fde2a and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e2dd370; op2val:0xbfa4d96b; op3val:0x7e5fde2a; valaddr_reg:x16; val_offset:1740; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1740, x17, x15, 1848, x18)

inst_486:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x105363 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1303f7 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x25c43d and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e905363; op2val:0xbf9303f7; op3val:0x7ea5c43d; valaddr_reg:x16; val_offset:1752; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1752, x17, x15, 1856, x18)

inst_487:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x105363 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1303f7 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x25c43d and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e905363; op2val:0xbf9303f7; op3val:0x7ea5c43d; valaddr_reg:x16; val_offset:1764; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1764, x17, x15, 1864, x18)

inst_488:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x105363 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1303f7 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x25c43d and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e905363; op2val:0xbf9303f7; op3val:0x7ea5c43d; valaddr_reg:x16; val_offset:1776; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1776, x17, x15, 1872, x18)

inst_489:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x105363 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1303f7 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x25c43d and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e905363; op2val:0xbf9303f7; op3val:0x7ea5c43d; valaddr_reg:x16; val_offset:1788; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1788, x17, x15, 1880, x18)

inst_490:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x105363 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1303f7 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x25c43d and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e905363; op2val:0xbf9303f7; op3val:0x7ea5c43d; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1888, x18)

inst_491:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x71b611 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x353e03 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2b2047 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef1b611; op2val:0xbfb53e03; op3val:0x7f2b2047; valaddr_reg:x16; val_offset:1812; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1812, x17, x15, 1896, x18)

inst_492:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x71b611 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x353e03 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2b2047 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef1b611; op2val:0xbfb53e03; op3val:0x7f2b2047; valaddr_reg:x16; val_offset:1824; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1824, x17, x15, 1904, x18)

inst_493:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x71b611 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x353e03 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2b2047 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef1b611; op2val:0xbfb53e03; op3val:0x7f2b2047; valaddr_reg:x16; val_offset:1836; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1836, x17, x15, 1912, x18)

inst_494:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x71b611 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x353e03 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2b2047 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef1b611; op2val:0xbfb53e03; op3val:0x7f2b2047; valaddr_reg:x16; val_offset:1848; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1848, x17, x15, 1920, x18)

inst_495:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x71b611 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x353e03 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2b2047 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef1b611; op2val:0xbfb53e03; op3val:0x7f2b2047; valaddr_reg:x16; val_offset:1860; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1860, x17, x15, 1928, x18)

inst_496:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6c3979 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x6a3541 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x581dad and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eec3979; op2val:0xbe6a3541; op3val:0x7dd81dad; valaddr_reg:x16; val_offset:1872; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1872, x17, x15, 1936, x18)

inst_497:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6c3979 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x6a3541 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x581dad and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eec3979; op2val:0xbe6a3541; op3val:0x7dd81dad; valaddr_reg:x16; val_offset:1884; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1884, x17, x15, 1944, x18)

inst_498:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6c3979 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x6a3541 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x581dad and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eec3979; op2val:0xbe6a3541; op3val:0x7dd81dad; valaddr_reg:x16; val_offset:1896; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1896, x17, x15, 1952, x18)

inst_499:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6c3979 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x6a3541 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x581dad and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eec3979; op2val:0xbe6a3541; op3val:0x7dd81dad; valaddr_reg:x16; val_offset:1908; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1908, x17, x15, 1960, x18)

inst_500:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6c3979 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x6a3541 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x581dad and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eec3979; op2val:0xbe6a3541; op3val:0x7dd81dad; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1968, x18)

inst_501:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x25c337 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x27c65d and fs3 == 0 and fe3 == 0xfd and fm3 == 0x594594 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7da5c337; op2val:0xc0a7c65d; op3val:0x7ed94594; valaddr_reg:x16; val_offset:1932; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1932, x17, x15, 1976, x18)

inst_502:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x25c337 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x27c65d and fs3 == 0 and fe3 == 0xfd and fm3 == 0x594594 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7da5c337; op2val:0xc0a7c65d; op3val:0x7ed94594; valaddr_reg:x16; val_offset:1944; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1944, x17, x15, 1984, x18)

inst_503:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x25c337 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x27c65d and fs3 == 0 and fe3 == 0xfd and fm3 == 0x594594 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7da5c337; op2val:0xc0a7c65d; op3val:0x7ed94594; valaddr_reg:x16; val_offset:1956; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1956, x17, x15, 1992, x18)

inst_504:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x25c337 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x27c65d and fs3 == 0 and fe3 == 0xfd and fm3 == 0x594594 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7da5c337; op2val:0xc0a7c65d; op3val:0x7ed94594; valaddr_reg:x16; val_offset:1968; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1968, x17, x15, 2000, x18)

inst_505:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x25c337 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x27c65d and fs3 == 0 and fe3 == 0xfd and fm3 == 0x594594 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7da5c337; op2val:0xc0a7c65d; op3val:0x7ed94594; valaddr_reg:x16; val_offset:1980; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1980, x17, x15, 2008, x18)

inst_506:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2b8bb0 and fs2 == 1 and fe2 == 0x75 and fm2 == 0x0afed7 and fs3 == 0 and fe3 == 0xf4 and fm3 == 0x3a4824 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2b8bb0; op2val:0xba8afed7; op3val:0x7a3a4824; valaddr_reg:x16; val_offset:1992; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1992, x17, x15, 2016, x18)

inst_507:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2b8bb0 and fs2 == 1 and fe2 == 0x75 and fm2 == 0x0afed7 and fs3 == 0 and fe3 == 0xf4 and fm3 == 0x3a4824 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2b8bb0; op2val:0xba8afed7; op3val:0x7a3a4824; valaddr_reg:x16; val_offset:2004; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 2004, x17, x15, 2024, x18)
RVTEST_SIGBASE(x15,signature_x15_3)

inst_508:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2b8bb0 and fs2 == 1 and fe2 == 0x75 and fm2 == 0x0afed7 and fs3 == 0 and fe3 == 0xf4 and fm3 == 0x3a4824 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2b8bb0; op2val:0xba8afed7; op3val:0x7a3a4824; valaddr_reg:x16; val_offset:2016; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 2016, x17, x15, 0, x18)

inst_509:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2b8bb0 and fs2 == 1 and fe2 == 0x75 and fm2 == 0x0afed7 and fs3 == 0 and fe3 == 0xf4 and fm3 == 0x3a4824 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2b8bb0; op2val:0xba8afed7; op3val:0x7a3a4824; valaddr_reg:x16; val_offset:2028; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 2028, x17, x15, 8, x18)
addi x16,x16,2040

inst_510:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2b8bb0 and fs2 == 1 and fe2 == 0x75 and fm2 == 0x0afed7 and fs3 == 0 and fe3 == 0xf4 and fm3 == 0x3a4824 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2b8bb0; op2val:0xba8afed7; op3val:0x7a3a4824; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 16, x18)

inst_511:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x69b4c8 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x13b0b0 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x06d41d and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee9b4c8; op2val:0xbf13b0b0; op3val:0x7e86d41d; valaddr_reg:x16; val_offset:12; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 12, x17, x15, 24, x18)

inst_512:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x69b4c8 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x13b0b0 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x06d41d and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee9b4c8; op2val:0xbf13b0b0; op3val:0x7e86d41d; valaddr_reg:x16; val_offset:24; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 24, x17, x15, 32, x18)

inst_513:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x69b4c8 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x13b0b0 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x06d41d and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee9b4c8; op2val:0xbf13b0b0; op3val:0x7e86d41d; valaddr_reg:x16; val_offset:36; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 36, x17, x15, 40, x18)

inst_514:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x69b4c8 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x13b0b0 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x06d41d and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee9b4c8; op2val:0xbf13b0b0; op3val:0x7e86d41d; valaddr_reg:x16; val_offset:48; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 48, x17, x15, 48, x18)

inst_515:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x69b4c8 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x13b0b0 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x06d41d and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee9b4c8; op2val:0xbf13b0b0; op3val:0x7e86d41d; valaddr_reg:x16; val_offset:60; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 60, x17, x15, 56, x18)

inst_516:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x37c8e9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x01712d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x39dafb and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f37c8e9; op2val:0xbf81712d; op3val:0x7f39dafb; valaddr_reg:x16; val_offset:72; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 72, x17, x15, 64, x18)

inst_517:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x37c8e9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x01712d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x39dafb and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f37c8e9; op2val:0xbf81712d; op3val:0x7f39dafb; valaddr_reg:x16; val_offset:84; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 84, x17, x15, 72, x18)

inst_518:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x37c8e9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x01712d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x39dafb and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f37c8e9; op2val:0xbf81712d; op3val:0x7f39dafb; valaddr_reg:x16; val_offset:96; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 96, x17, x15, 80, x18)

inst_519:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x37c8e9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x01712d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x39dafb and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f37c8e9; op2val:0xbf81712d; op3val:0x7f39dafb; valaddr_reg:x16; val_offset:108; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 108, x17, x15, 88, x18)

inst_520:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x37c8e9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x01712d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x39dafb and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f37c8e9; op2val:0xbf81712d; op3val:0x7f39dafb; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 96, x18)

inst_521:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x64d70d and fs2 == 1 and fe2 == 0x7e and fm2 == 0x723849 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x58859b and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee4d70d; op2val:0xbf723849; op3val:0x7ed8859b; valaddr_reg:x16; val_offset:132; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 132, x17, x15, 104, x18)

inst_522:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x64d70d and fs2 == 1 and fe2 == 0x7e and fm2 == 0x723849 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x58859b and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee4d70d; op2val:0xbf723849; op3val:0x7ed8859b; valaddr_reg:x16; val_offset:144; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 144, x17, x15, 112, x18)

inst_523:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x64d70d and fs2 == 1 and fe2 == 0x7e and fm2 == 0x723849 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x58859b and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee4d70d; op2val:0xbf723849; op3val:0x7ed8859b; valaddr_reg:x16; val_offset:156; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 156, x17, x15, 120, x18)

inst_524:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x64d70d and fs2 == 1 and fe2 == 0x7e and fm2 == 0x723849 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x58859b and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee4d70d; op2val:0xbf723849; op3val:0x7ed8859b; valaddr_reg:x16; val_offset:168; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 168, x17, x15, 128, x18)

inst_525:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x64d70d and fs2 == 1 and fe2 == 0x7e and fm2 == 0x723849 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x58859b and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee4d70d; op2val:0xbf723849; op3val:0x7ed8859b; valaddr_reg:x16; val_offset:180; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 180, x17, x15, 136, x18)

inst_526:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0dddb2 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x44f318 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x5a48e6 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8dddb2; op2val:0xbec4f318; op3val:0x7dda48e6; valaddr_reg:x16; val_offset:192; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 192, x17, x15, 144, x18)

inst_527:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0dddb2 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x44f318 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x5a48e6 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8dddb2; op2val:0xbec4f318; op3val:0x7dda48e6; valaddr_reg:x16; val_offset:204; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 204, x17, x15, 152, x18)

inst_528:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0dddb2 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x44f318 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x5a48e6 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8dddb2; op2val:0xbec4f318; op3val:0x7dda48e6; valaddr_reg:x16; val_offset:216; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 216, x17, x15, 160, x18)

inst_529:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0dddb2 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x44f318 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x5a48e6 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8dddb2; op2val:0xbec4f318; op3val:0x7dda48e6; valaddr_reg:x16; val_offset:228; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 228, x17, x15, 168, x18)

inst_530:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0dddb2 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x44f318 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x5a48e6 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8dddb2; op2val:0xbec4f318; op3val:0x7dda48e6; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 176, x18)

inst_531:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c1813 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4a4039 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x76a451 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1c1813; op2val:0xbf4a4039; op3val:0x7ef6a451; valaddr_reg:x16; val_offset:252; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 252, x17, x15, 184, x18)

inst_532:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c1813 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4a4039 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x76a451 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1c1813; op2val:0xbf4a4039; op3val:0x7ef6a451; valaddr_reg:x16; val_offset:264; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 264, x17, x15, 192, x18)

inst_533:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c1813 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4a4039 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x76a451 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1c1813; op2val:0xbf4a4039; op3val:0x7ef6a451; valaddr_reg:x16; val_offset:276; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 276, x17, x15, 200, x18)

inst_534:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c1813 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4a4039 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x76a451 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1c1813; op2val:0xbf4a4039; op3val:0x7ef6a451; valaddr_reg:x16; val_offset:288; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 288, x17, x15, 208, x18)

inst_535:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c1813 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4a4039 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x76a451 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1c1813; op2val:0xbf4a4039; op3val:0x7ef6a451; valaddr_reg:x16; val_offset:300; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 300, x17, x15, 216, x18)

inst_536:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d27fd and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0313ed and fs3 == 0 and fe3 == 0xfd and fm3 == 0x20ef64 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1d27fd; op2val:0xbf0313ed; op3val:0x7ea0ef64; valaddr_reg:x16; val_offset:312; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 312, x17, x15, 224, x18)

inst_537:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d27fd and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0313ed and fs3 == 0 and fe3 == 0xfd and fm3 == 0x20ef64 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1d27fd; op2val:0xbf0313ed; op3val:0x7ea0ef64; valaddr_reg:x16; val_offset:324; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 324, x17, x15, 232, x18)

inst_538:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d27fd and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0313ed and fs3 == 0 and fe3 == 0xfd and fm3 == 0x20ef64 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1d27fd; op2val:0xbf0313ed; op3val:0x7ea0ef64; valaddr_reg:x16; val_offset:336; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 336, x17, x15, 240, x18)

inst_539:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d27fd and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0313ed and fs3 == 0 and fe3 == 0xfd and fm3 == 0x20ef64 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1d27fd; op2val:0xbf0313ed; op3val:0x7ea0ef64; valaddr_reg:x16; val_offset:348; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 348, x17, x15, 248, x18)

inst_540:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d27fd and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0313ed and fs3 == 0 and fe3 == 0xfd and fm3 == 0x20ef64 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1d27fd; op2val:0xbf0313ed; op3val:0x7ea0ef64; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 256, x18)

inst_541:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5f106b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x532924 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x37fe62 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7edf106b; op2val:0xbfd32924; op3val:0x7f37fe62; valaddr_reg:x16; val_offset:372; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 372, x17, x15, 264, x18)

inst_542:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5f106b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x532924 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x37fe62 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7edf106b; op2val:0xbfd32924; op3val:0x7f37fe62; valaddr_reg:x16; val_offset:384; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 384, x17, x15, 272, x18)

inst_543:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5f106b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x532924 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x37fe62 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7edf106b; op2val:0xbfd32924; op3val:0x7f37fe62; valaddr_reg:x16; val_offset:396; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 396, x17, x15, 280, x18)

inst_544:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5f106b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x532924 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x37fe62 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7edf106b; op2val:0xbfd32924; op3val:0x7f37fe62; valaddr_reg:x16; val_offset:408; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 408, x17, x15, 288, x18)

inst_545:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5f106b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x532924 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x37fe62 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7edf106b; op2val:0xbfd32924; op3val:0x7f37fe62; valaddr_reg:x16; val_offset:420; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 420, x17, x15, 296, x18)

inst_546:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x515d63 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1f58f4 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0251c0 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ed15d63; op2val:0xbf1f58f4; op3val:0x7e8251c0; valaddr_reg:x16; val_offset:432; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 432, x17, x15, 304, x18)

inst_547:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x515d63 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1f58f4 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0251c0 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ed15d63; op2val:0xbf1f58f4; op3val:0x7e8251c0; valaddr_reg:x16; val_offset:444; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 444, x17, x15, 312, x18)

inst_548:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x515d63 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1f58f4 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0251c0 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ed15d63; op2val:0xbf1f58f4; op3val:0x7e8251c0; valaddr_reg:x16; val_offset:456; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 456, x17, x15, 320, x18)

inst_549:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x515d63 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1f58f4 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0251c0 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ed15d63; op2val:0xbf1f58f4; op3val:0x7e8251c0; valaddr_reg:x16; val_offset:468; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 468, x17, x15, 328, x18)

inst_550:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x515d63 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1f58f4 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0251c0 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ed15d63; op2val:0xbf1f58f4; op3val:0x7e8251c0; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 336, x18)

inst_551:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b9bcd and fs2 == 1 and fe2 == 0x7c and fm2 == 0x1e405c and fs3 == 0 and fe3 == 0xfb and fm3 == 0x11a564 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eeb9bcd; op2val:0xbe1e405c; op3val:0x7d91a564; valaddr_reg:x16; val_offset:492; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 492, x17, x15, 344, x18)

inst_552:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b9bcd and fs2 == 1 and fe2 == 0x7c and fm2 == 0x1e405c and fs3 == 0 and fe3 == 0xfb and fm3 == 0x11a564 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eeb9bcd; op2val:0xbe1e405c; op3val:0x7d91a564; valaddr_reg:x16; val_offset:504; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 504, x17, x15, 352, x18)

inst_553:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b9bcd and fs2 == 1 and fe2 == 0x7c and fm2 == 0x1e405c and fs3 == 0 and fe3 == 0xfb and fm3 == 0x11a564 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eeb9bcd; op2val:0xbe1e405c; op3val:0x7d91a564; valaddr_reg:x16; val_offset:516; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 516, x17, x15, 360, x18)

inst_554:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b9bcd and fs2 == 1 and fe2 == 0x7c and fm2 == 0x1e405c and fs3 == 0 and fe3 == 0xfb and fm3 == 0x11a564 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eeb9bcd; op2val:0xbe1e405c; op3val:0x7d91a564; valaddr_reg:x16; val_offset:528; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 528, x17, x15, 368, x18)

inst_555:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b9bcd and fs2 == 1 and fe2 == 0x7c and fm2 == 0x1e405c and fs3 == 0 and fe3 == 0xfb and fm3 == 0x11a564 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eeb9bcd; op2val:0xbe1e405c; op3val:0x7d91a564; valaddr_reg:x16; val_offset:540; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 540, x17, x15, 376, x18)

inst_556:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0f91dd and fs2 == 1 and fe2 == 0x7b and fm2 == 0x458990 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x5d90cb and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8f91dd; op2val:0xbdc58990; op3val:0x7cdd90cb; valaddr_reg:x16; val_offset:552; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 552, x17, x15, 384, x18)

inst_557:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0f91dd and fs2 == 1 and fe2 == 0x7b and fm2 == 0x458990 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x5d90cb and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8f91dd; op2val:0xbdc58990; op3val:0x7cdd90cb; valaddr_reg:x16; val_offset:564; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 564, x17, x15, 392, x18)

inst_558:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0f91dd and fs2 == 1 and fe2 == 0x7b and fm2 == 0x458990 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x5d90cb and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8f91dd; op2val:0xbdc58990; op3val:0x7cdd90cb; valaddr_reg:x16; val_offset:576; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 576, x17, x15, 400, x18)

inst_559:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0f91dd and fs2 == 1 and fe2 == 0x7b and fm2 == 0x458990 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x5d90cb and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8f91dd; op2val:0xbdc58990; op3val:0x7cdd90cb; valaddr_reg:x16; val_offset:588; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 588, x17, x15, 408, x18)

inst_560:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0f91dd and fs2 == 1 and fe2 == 0x7b and fm2 == 0x458990 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x5d90cb and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8f91dd; op2val:0xbdc58990; op3val:0x7cdd90cb; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 416, x18)

inst_561:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x30c11b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x673027 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1f9f7f and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7db0c11b; op2val:0xc0e73027; op3val:0x7f1f9f7f; valaddr_reg:x16; val_offset:612; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 612, x17, x15, 424, x18)

inst_562:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x30c11b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x673027 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1f9f7f and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7db0c11b; op2val:0xc0e73027; op3val:0x7f1f9f7f; valaddr_reg:x16; val_offset:624; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 624, x17, x15, 432, x18)

inst_563:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x30c11b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x673027 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1f9f7f and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7db0c11b; op2val:0xc0e73027; op3val:0x7f1f9f7f; valaddr_reg:x16; val_offset:636; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 636, x17, x15, 440, x18)

inst_564:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x30c11b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x673027 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1f9f7f and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7db0c11b; op2val:0xc0e73027; op3val:0x7f1f9f7f; valaddr_reg:x16; val_offset:648; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 648, x17, x15, 448, x18)

inst_565:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x30c11b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x673027 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1f9f7f and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7db0c11b; op2val:0xc0e73027; op3val:0x7f1f9f7f; valaddr_reg:x16; val_offset:660; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 660, x17, x15, 456, x18)

inst_566:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x55e8d8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3c7042 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x1d74cc and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e55e8d8; op2val:0xbfbc7042; op3val:0x7e9d74cc; valaddr_reg:x16; val_offset:672; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 672, x17, x15, 464, x18)

inst_567:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x55e8d8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3c7042 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x1d74cc and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e55e8d8; op2val:0xbfbc7042; op3val:0x7e9d74cc; valaddr_reg:x16; val_offset:684; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 684, x17, x15, 472, x18)

inst_568:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x55e8d8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3c7042 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x1d74cc and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e55e8d8; op2val:0xbfbc7042; op3val:0x7e9d74cc; valaddr_reg:x16; val_offset:696; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 696, x17, x15, 480, x18)

inst_569:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x55e8d8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3c7042 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x1d74cc and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e55e8d8; op2val:0xbfbc7042; op3val:0x7e9d74cc; valaddr_reg:x16; val_offset:708; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 708, x17, x15, 488, x18)

inst_570:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x55e8d8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3c7042 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x1d74cc and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e55e8d8; op2val:0xbfbc7042; op3val:0x7e9d74cc; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 496, x18)

inst_571:
// fs1 == 0 and fe1 == 0xf4 and fm1 == 0x01e1e1 and fs2 == 1 and fe2 == 0x88 and fm2 == 0x196885 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x1baa0e and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7a01e1e1; op2val:0xc4196885; op3val:0x7e9baa0e; valaddr_reg:x16; val_offset:732; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 732, x17, x15, 504, x18)

inst_572:
// fs1 == 0 and fe1 == 0xf4 and fm1 == 0x01e1e1 and fs2 == 1 and fe2 == 0x88 and fm2 == 0x196885 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x1baa0e and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7a01e1e1; op2val:0xc4196885; op3val:0x7e9baa0e; valaddr_reg:x16; val_offset:744; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 744, x17, x15, 512, x18)

inst_573:
// fs1 == 0 and fe1 == 0xf4 and fm1 == 0x01e1e1 and fs2 == 1 and fe2 == 0x88 and fm2 == 0x196885 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x1baa0e and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7a01e1e1; op2val:0xc4196885; op3val:0x7e9baa0e; valaddr_reg:x16; val_offset:756; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 756, x17, x15, 520, x18)

inst_574:
// fs1 == 0 and fe1 == 0xf4 and fm1 == 0x01e1e1 and fs2 == 1 and fe2 == 0x88 and fm2 == 0x196885 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x1baa0e and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7a01e1e1; op2val:0xc4196885; op3val:0x7e9baa0e; valaddr_reg:x16; val_offset:768; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 768, x17, x15, 528, x18)

inst_575:
// fs1 == 0 and fe1 == 0xf4 and fm1 == 0x01e1e1 and fs2 == 1 and fe2 == 0x88 and fm2 == 0x196885 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x1baa0e and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7a01e1e1; op2val:0xc4196885; op3val:0x7e9baa0e; valaddr_reg:x16; val_offset:780; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 780, x17, x15, 536, x18)

inst_576:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x36aa81 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x730786 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2d6937 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e36aa81; op2val:0xc0730786; op3val:0x7f2d6937; valaddr_reg:x16; val_offset:792; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 792, x17, x15, 544, x18)

inst_577:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x36aa81 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x730786 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2d6937 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e36aa81; op2val:0xc0730786; op3val:0x7f2d6937; valaddr_reg:x16; val_offset:804; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 804, x17, x15, 552, x18)

inst_578:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x36aa81 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x730786 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2d6937 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e36aa81; op2val:0xc0730786; op3val:0x7f2d6937; valaddr_reg:x16; val_offset:816; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 816, x17, x15, 560, x18)

inst_579:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x36aa81 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x730786 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2d6937 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e36aa81; op2val:0xc0730786; op3val:0x7f2d6937; valaddr_reg:x16; val_offset:828; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 828, x17, x15, 568, x18)

inst_580:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x36aa81 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x730786 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2d6937 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e36aa81; op2val:0xc0730786; op3val:0x7f2d6937; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 576, x18)

inst_581:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6aedca and fs2 == 1 and fe2 == 0x7e and fm2 == 0x76f305 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x629f84 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eeaedca; op2val:0xbf76f305; op3val:0x7ee29f84; valaddr_reg:x16; val_offset:852; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 852, x17, x15, 584, x18)

inst_582:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6aedca and fs2 == 1 and fe2 == 0x7e and fm2 == 0x76f305 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x629f84 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eeaedca; op2val:0xbf76f305; op3val:0x7ee29f84; valaddr_reg:x16; val_offset:864; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 864, x17, x15, 592, x18)

inst_583:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6aedca and fs2 == 1 and fe2 == 0x7e and fm2 == 0x76f305 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x629f84 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eeaedca; op2val:0xbf76f305; op3val:0x7ee29f84; valaddr_reg:x16; val_offset:876; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 876, x17, x15, 600, x18)

inst_584:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6aedca and fs2 == 1 and fe2 == 0x7e and fm2 == 0x76f305 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x629f84 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eeaedca; op2val:0xbf76f305; op3val:0x7ee29f84; valaddr_reg:x16; val_offset:888; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 888, x17, x15, 608, x18)

inst_585:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6aedca and fs2 == 1 and fe2 == 0x7e and fm2 == 0x76f305 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x629f84 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eeaedca; op2val:0xbf76f305; op3val:0x7ee29f84; valaddr_reg:x16; val_offset:900; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 900, x17, x15, 616, x18)

inst_586:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x32afd0 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x513864 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x1208e5 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb2afd0; op2val:0xbf513864; op3val:0x7e9208e5; valaddr_reg:x16; val_offset:912; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 912, x17, x15, 624, x18)

inst_587:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x32afd0 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x513864 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x1208e5 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb2afd0; op2val:0xbf513864; op3val:0x7e9208e5; valaddr_reg:x16; val_offset:924; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 924, x17, x15, 632, x18)

inst_588:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x32afd0 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x513864 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x1208e5 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb2afd0; op2val:0xbf513864; op3val:0x7e9208e5; valaddr_reg:x16; val_offset:936; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 936, x17, x15, 640, x18)

inst_589:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x32afd0 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x513864 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x1208e5 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb2afd0; op2val:0xbf513864; op3val:0x7e9208e5; valaddr_reg:x16; val_offset:948; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 948, x17, x15, 648, x18)

inst_590:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x32afd0 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x513864 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x1208e5 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb2afd0; op2val:0xbf513864; op3val:0x7e9208e5; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 656, x18)

inst_591:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x148024 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x3cd5fe and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x5b1479 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e148024; op2val:0xbe3cd5fe; op3val:0x7cdb1479; valaddr_reg:x16; val_offset:972; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 972, x17, x15, 664, x18)

inst_592:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x148024 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x3cd5fe and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x5b1479 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e148024; op2val:0xbe3cd5fe; op3val:0x7cdb1479; valaddr_reg:x16; val_offset:984; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 984, x17, x15, 672, x18)

inst_593:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x148024 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x3cd5fe and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x5b1479 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e148024; op2val:0xbe3cd5fe; op3val:0x7cdb1479; valaddr_reg:x16; val_offset:996; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 996, x17, x15, 680, x18)

inst_594:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x148024 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x3cd5fe and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x5b1479 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e148024; op2val:0xbe3cd5fe; op3val:0x7cdb1479; valaddr_reg:x16; val_offset:1008; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1008, x17, x15, 688, x18)

inst_595:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x148024 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x3cd5fe and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x5b1479 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e148024; op2val:0xbe3cd5fe; op3val:0x7cdb1479; valaddr_reg:x16; val_offset:1020; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1020, x17, x15, 696, x18)

inst_596:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x73b9b6 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x12733e and fs3 == 0 and fe3 == 0xfc and fm3 == 0x0b6da2 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e73b9b6; op2val:0xbf12733e; op3val:0x7e0b6da2; valaddr_reg:x16; val_offset:1032; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1032, x17, x15, 704, x18)

inst_597:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x73b9b6 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x12733e and fs3 == 0 and fe3 == 0xfc and fm3 == 0x0b6da2 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e73b9b6; op2val:0xbf12733e; op3val:0x7e0b6da2; valaddr_reg:x16; val_offset:1044; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1044, x17, x15, 712, x18)

inst_598:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x73b9b6 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x12733e and fs3 == 0 and fe3 == 0xfc and fm3 == 0x0b6da2 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e73b9b6; op2val:0xbf12733e; op3val:0x7e0b6da2; valaddr_reg:x16; val_offset:1056; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1056, x17, x15, 720, x18)

inst_599:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x73b9b6 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x12733e and fs3 == 0 and fe3 == 0xfc and fm3 == 0x0b6da2 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e73b9b6; op2val:0xbf12733e; op3val:0x7e0b6da2; valaddr_reg:x16; val_offset:1068; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1068, x17, x15, 728, x18)

inst_600:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x73b9b6 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x12733e and fs3 == 0 and fe3 == 0xfc and fm3 == 0x0b6da2 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e73b9b6; op2val:0xbf12733e; op3val:0x7e0b6da2; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 736, x18)

inst_601:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2653cb and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1dd609 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x4d18e7 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d2653cb; op2val:0xc01dd609; op3val:0x7dcd18e7; valaddr_reg:x16; val_offset:1092; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1092, x17, x15, 744, x18)

inst_602:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2653cb and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1dd609 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x4d18e7 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d2653cb; op2val:0xc01dd609; op3val:0x7dcd18e7; valaddr_reg:x16; val_offset:1104; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1104, x17, x15, 752, x18)

inst_603:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2653cb and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1dd609 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x4d18e7 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d2653cb; op2val:0xc01dd609; op3val:0x7dcd18e7; valaddr_reg:x16; val_offset:1116; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1116, x17, x15, 760, x18)

inst_604:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2653cb and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1dd609 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x4d18e7 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d2653cb; op2val:0xc01dd609; op3val:0x7dcd18e7; valaddr_reg:x16; val_offset:1128; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1128, x17, x15, 768, x18)

inst_605:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2653cb and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1dd609 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x4d18e7 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d2653cb; op2val:0xc01dd609; op3val:0x7dcd18e7; valaddr_reg:x16; val_offset:1140; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1140, x17, x15, 776, x18)

inst_606:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3516bd and fs2 == 1 and fe2 == 0x7d and fm2 == 0x75a1a3 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x2dc11a and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb516bd; op2val:0xbef5a1a3; op3val:0x7e2dc11a; valaddr_reg:x16; val_offset:1152; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1152, x17, x15, 784, x18)

inst_607:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3516bd and fs2 == 1 and fe2 == 0x7d and fm2 == 0x75a1a3 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x2dc11a and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb516bd; op2val:0xbef5a1a3; op3val:0x7e2dc11a; valaddr_reg:x16; val_offset:1164; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1164, x17, x15, 792, x18)

inst_608:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3516bd and fs2 == 1 and fe2 == 0x7d and fm2 == 0x75a1a3 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x2dc11a and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb516bd; op2val:0xbef5a1a3; op3val:0x7e2dc11a; valaddr_reg:x16; val_offset:1176; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1176, x17, x15, 800, x18)

inst_609:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3516bd and fs2 == 1 and fe2 == 0x7d and fm2 == 0x75a1a3 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x2dc11a and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb516bd; op2val:0xbef5a1a3; op3val:0x7e2dc11a; valaddr_reg:x16; val_offset:1188; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1188, x17, x15, 808, x18)

inst_610:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3516bd and fs2 == 1 and fe2 == 0x7d and fm2 == 0x75a1a3 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x2dc11a and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb516bd; op2val:0xbef5a1a3; op3val:0x7e2dc11a; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 816, x18)

inst_611:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x724091 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x07e5ab and fs3 == 0 and fe3 == 0xfa and fm3 == 0x009962 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef24091; op2val:0xbd87e5ab; op3val:0x7d009962; valaddr_reg:x16; val_offset:1212; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1212, x17, x15, 824, x18)

inst_612:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x724091 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x07e5ab and fs3 == 0 and fe3 == 0xfa and fm3 == 0x009962 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef24091; op2val:0xbd87e5ab; op3val:0x7d009962; valaddr_reg:x16; val_offset:1224; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1224, x17, x15, 832, x18)

inst_613:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x724091 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x07e5ab and fs3 == 0 and fe3 == 0xfa and fm3 == 0x009962 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef24091; op2val:0xbd87e5ab; op3val:0x7d009962; valaddr_reg:x16; val_offset:1236; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1236, x17, x15, 840, x18)

inst_614:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x724091 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x07e5ab and fs3 == 0 and fe3 == 0xfa and fm3 == 0x009962 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef24091; op2val:0xbd87e5ab; op3val:0x7d009962; valaddr_reg:x16; val_offset:1248; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1248, x17, x15, 848, x18)

inst_615:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x724091 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x07e5ab and fs3 == 0 and fe3 == 0xfa and fm3 == 0x009962 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef24091; op2val:0xbd87e5ab; op3val:0x7d009962; valaddr_reg:x16; val_offset:1260; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1260, x17, x15, 856, x18)

inst_616:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2838a7 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x486d6d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x03b42b and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e2838a7; op2val:0xc0486d6d; op3val:0x7f03b42b; valaddr_reg:x16; val_offset:1272; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1272, x17, x15, 864, x18)

inst_617:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2838a7 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x486d6d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x03b42b and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e2838a7; op2val:0xc0486d6d; op3val:0x7f03b42b; valaddr_reg:x16; val_offset:1284; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1284, x17, x15, 872, x18)

inst_618:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2838a7 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x486d6d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x03b42b and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e2838a7; op2val:0xc0486d6d; op3val:0x7f03b42b; valaddr_reg:x16; val_offset:1296; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1296, x17, x15, 880, x18)

inst_619:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2838a7 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x486d6d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x03b42b and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e2838a7; op2val:0xc0486d6d; op3val:0x7f03b42b; valaddr_reg:x16; val_offset:1308; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1308, x17, x15, 888, x18)

inst_620:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2838a7 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x486d6d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x03b42b and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e2838a7; op2val:0xc0486d6d; op3val:0x7f03b42b; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 896, x18)

inst_621:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x295ec9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3caab6 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x79a51a and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ea95ec9; op2val:0xbfbcaab6; op3val:0x7ef9a51a; valaddr_reg:x16; val_offset:1332; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1332, x17, x15, 904, x18)

inst_622:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x295ec9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3caab6 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x79a51a and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ea95ec9; op2val:0xbfbcaab6; op3val:0x7ef9a51a; valaddr_reg:x16; val_offset:1344; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1344, x17, x15, 912, x18)

inst_623:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x295ec9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3caab6 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x79a51a and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ea95ec9; op2val:0xbfbcaab6; op3val:0x7ef9a51a; valaddr_reg:x16; val_offset:1356; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1356, x17, x15, 920, x18)

inst_624:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x295ec9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3caab6 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x79a51a and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ea95ec9; op2val:0xbfbcaab6; op3val:0x7ef9a51a; valaddr_reg:x16; val_offset:1368; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1368, x17, x15, 928, x18)

inst_625:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x295ec9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3caab6 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x79a51a and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ea95ec9; op2val:0xbfbcaab6; op3val:0x7ef9a51a; valaddr_reg:x16; val_offset:1380; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1380, x17, x15, 936, x18)

inst_626:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x29b5ac and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3962d8 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x75cba0 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ca9b5ac; op2val:0xc0b962d8; op3val:0x7df5cba0; valaddr_reg:x16; val_offset:1392; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1392, x17, x15, 944, x18)

inst_627:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x29b5ac and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3962d8 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x75cba0 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ca9b5ac; op2val:0xc0b962d8; op3val:0x7df5cba0; valaddr_reg:x16; val_offset:1404; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1404, x17, x15, 952, x18)

inst_628:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x29b5ac and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3962d8 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x75cba0 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ca9b5ac; op2val:0xc0b962d8; op3val:0x7df5cba0; valaddr_reg:x16; val_offset:1416; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1416, x17, x15, 960, x18)

inst_629:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x29b5ac and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3962d8 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x75cba0 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ca9b5ac; op2val:0xc0b962d8; op3val:0x7df5cba0; valaddr_reg:x16; val_offset:1428; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1428, x17, x15, 968, x18)

inst_630:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x29b5ac and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3962d8 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x75cba0 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ca9b5ac; op2val:0xc0b962d8; op3val:0x7df5cba0; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 976, x18)

inst_631:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x748e89 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x10cab1 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0a51cf and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef48e89; op2val:0xbf90cab1; op3val:0x7f0a51cf; valaddr_reg:x16; val_offset:1452; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1452, x17, x15, 984, x18)

inst_632:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x748e89 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x10cab1 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0a51cf and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef48e89; op2val:0xbf90cab1; op3val:0x7f0a51cf; valaddr_reg:x16; val_offset:1464; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1464, x17, x15, 992, x18)

inst_633:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x748e89 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x10cab1 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0a51cf and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef48e89; op2val:0xbf90cab1; op3val:0x7f0a51cf; valaddr_reg:x16; val_offset:1476; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1476, x17, x15, 1000, x18)

inst_634:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x748e89 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x10cab1 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0a51cf and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef48e89; op2val:0xbf90cab1; op3val:0x7f0a51cf; valaddr_reg:x16; val_offset:1488; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1488, x17, x15, 1008, x18)

inst_635:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x748e89 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x10cab1 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0a51cf and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef48e89; op2val:0xbf90cab1; op3val:0x7f0a51cf; valaddr_reg:x16; val_offset:1500; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1500, x17, x15, 1016, x18)

inst_636:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f83d9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1efb14 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x14be49 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eef83d9; op2val:0xbf9efb14; op3val:0x7f14be49; valaddr_reg:x16; val_offset:1512; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1512, x17, x15, 1024, x18)

inst_637:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f83d9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1efb14 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x14be49 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eef83d9; op2val:0xbf9efb14; op3val:0x7f14be49; valaddr_reg:x16; val_offset:1524; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1524, x17, x15, 1032, x18)

inst_638:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f83d9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1efb14 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x14be49 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eef83d9; op2val:0xbf9efb14; op3val:0x7f14be49; valaddr_reg:x16; val_offset:1536; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1536, x17, x15, 1040, x18)

inst_639:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f83d9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1efb14 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x14be49 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eef83d9; op2val:0xbf9efb14; op3val:0x7f14be49; valaddr_reg:x16; val_offset:1548; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1548, x17, x15, 1048, x18)

inst_640:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f83d9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1efb14 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x14be49 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eef83d9; op2val:0xbf9efb14; op3val:0x7f14be49; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1056, x18)

inst_641:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7f92d6 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x21da8e and fs3 == 0 and fe3 == 0xfd and fm3 == 0x219589 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eff92d6; op2val:0xbf21da8e; op3val:0x7ea19589; valaddr_reg:x16; val_offset:1572; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1572, x17, x15, 1064, x18)

inst_642:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7f92d6 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x21da8e and fs3 == 0 and fe3 == 0xfd and fm3 == 0x219589 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eff92d6; op2val:0xbf21da8e; op3val:0x7ea19589; valaddr_reg:x16; val_offset:1584; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1584, x17, x15, 1072, x18)

inst_643:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7f92d6 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x21da8e and fs3 == 0 and fe3 == 0xfd and fm3 == 0x219589 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eff92d6; op2val:0xbf21da8e; op3val:0x7ea19589; valaddr_reg:x16; val_offset:1596; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1596, x17, x15, 1080, x18)

inst_644:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7f92d6 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x21da8e and fs3 == 0 and fe3 == 0xfd and fm3 == 0x219589 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eff92d6; op2val:0xbf21da8e; op3val:0x7ea19589; valaddr_reg:x16; val_offset:1608; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1608, x17, x15, 1088, x18)

inst_645:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7f92d6 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x21da8e and fs3 == 0 and fe3 == 0xfd and fm3 == 0x219589 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eff92d6; op2val:0xbf21da8e; op3val:0x7ea19589; valaddr_reg:x16; val_offset:1620; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1620, x17, x15, 1096, x18)

inst_646:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15d4d3 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3e8bad and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5f0b6a and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f15d4d3; op2val:0xbf3e8bad; op3val:0x7edf0b6a; valaddr_reg:x16; val_offset:1632; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1632, x17, x15, 1104, x18)

inst_647:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15d4d3 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3e8bad and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5f0b6a and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f15d4d3; op2val:0xbf3e8bad; op3val:0x7edf0b6a; valaddr_reg:x16; val_offset:1644; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1644, x17, x15, 1112, x18)

inst_648:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15d4d3 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3e8bad and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5f0b6a and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f15d4d3; op2val:0xbf3e8bad; op3val:0x7edf0b6a; valaddr_reg:x16; val_offset:1656; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1656, x17, x15, 1120, x18)

inst_649:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15d4d3 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3e8bad and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5f0b6a and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f15d4d3; op2val:0xbf3e8bad; op3val:0x7edf0b6a; valaddr_reg:x16; val_offset:1668; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1668, x17, x15, 1128, x18)

inst_650:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15d4d3 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3e8bad and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5f0b6a and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f15d4d3; op2val:0xbf3e8bad; op3val:0x7edf0b6a; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1136, x18)

inst_651:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c3a54 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x70e95d and fs3 == 0 and fe3 == 0xfc and fm3 == 0x03f683 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0c3a54; op2val:0xbe70e95d; op3val:0x7e03f683; valaddr_reg:x16; val_offset:1692; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1692, x17, x15, 1144, x18)

inst_652:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c3a54 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x70e95d and fs3 == 0 and fe3 == 0xfc and fm3 == 0x03f683 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0c3a54; op2val:0xbe70e95d; op3val:0x7e03f683; valaddr_reg:x16; val_offset:1704; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1704, x17, x15, 1152, x18)

inst_653:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c3a54 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x70e95d and fs3 == 0 and fe3 == 0xfc and fm3 == 0x03f683 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0c3a54; op2val:0xbe70e95d; op3val:0x7e03f683; valaddr_reg:x16; val_offset:1716; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1716, x17, x15, 1160, x18)

inst_654:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c3a54 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x70e95d and fs3 == 0 and fe3 == 0xfc and fm3 == 0x03f683 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0c3a54; op2val:0xbe70e95d; op3val:0x7e03f683; valaddr_reg:x16; val_offset:1728; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1728, x17, x15, 1168, x18)

inst_655:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c3a54 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x70e95d and fs3 == 0 and fe3 == 0xfc and fm3 == 0x03f683 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0c3a54; op2val:0xbe70e95d; op3val:0x7e03f683; valaddr_reg:x16; val_offset:1740; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1740, x17, x15, 1176, x18)

inst_656:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x04c0f2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x053b56 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0a2e07 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f04c0f2; op2val:0xbf853b56; op3val:0x7f0a2e07; valaddr_reg:x16; val_offset:1752; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1752, x17, x15, 1184, x18)

inst_657:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x04c0f2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x053b56 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0a2e07 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f04c0f2; op2val:0xbf853b56; op3val:0x7f0a2e07; valaddr_reg:x16; val_offset:1764; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1764, x17, x15, 1192, x18)

inst_658:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x04c0f2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x053b56 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0a2e07 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f04c0f2; op2val:0xbf853b56; op3val:0x7f0a2e07; valaddr_reg:x16; val_offset:1776; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1776, x17, x15, 1200, x18)

inst_659:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x04c0f2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x053b56 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0a2e07 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f04c0f2; op2val:0xbf853b56; op3val:0x7f0a2e07; valaddr_reg:x16; val_offset:1788; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1788, x17, x15, 1208, x18)

inst_660:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x04c0f2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x053b56 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0a2e07 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f04c0f2; op2val:0xbf853b56; op3val:0x7f0a2e07; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1216, x18)

inst_661:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33fa2e and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0255a1 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x37427e and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f33fa2e; op2val:0xbf0255a1; op3val:0x7eb7427e; valaddr_reg:x16; val_offset:1812; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1812, x17, x15, 1224, x18)

inst_662:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33fa2e and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0255a1 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x37427e and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f33fa2e; op2val:0xbf0255a1; op3val:0x7eb7427e; valaddr_reg:x16; val_offset:1824; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1824, x17, x15, 1232, x18)

inst_663:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33fa2e and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0255a1 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x37427e and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f33fa2e; op2val:0xbf0255a1; op3val:0x7eb7427e; valaddr_reg:x16; val_offset:1836; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1836, x17, x15, 1240, x18)

inst_664:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33fa2e and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0255a1 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x37427e and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f33fa2e; op2val:0xbf0255a1; op3val:0x7eb7427e; valaddr_reg:x16; val_offset:1848; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1848, x17, x15, 1248, x18)

inst_665:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33fa2e and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0255a1 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x37427e and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f33fa2e; op2val:0xbf0255a1; op3val:0x7eb7427e; valaddr_reg:x16; val_offset:1860; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1860, x17, x15, 1256, x18)

inst_666:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7f3dba and fs2 == 1 and fe2 == 0x81 and fm2 == 0x211bd1 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x20a18e and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7dff3dba; op2val:0xc0a11bd1; op3val:0x7f20a18e; valaddr_reg:x16; val_offset:1872; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1872, x17, x15, 1264, x18)

inst_667:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7f3dba and fs2 == 1 and fe2 == 0x81 and fm2 == 0x211bd1 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x20a18e and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7dff3dba; op2val:0xc0a11bd1; op3val:0x7f20a18e; valaddr_reg:x16; val_offset:1884; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1884, x17, x15, 1272, x18)

inst_668:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7f3dba and fs2 == 1 and fe2 == 0x81 and fm2 == 0x211bd1 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x20a18e and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7dff3dba; op2val:0xc0a11bd1; op3val:0x7f20a18e; valaddr_reg:x16; val_offset:1896; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1896, x17, x15, 1280, x18)

inst_669:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7f3dba and fs2 == 1 and fe2 == 0x81 and fm2 == 0x211bd1 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x20a18e and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7dff3dba; op2val:0xc0a11bd1; op3val:0x7f20a18e; valaddr_reg:x16; val_offset:1908; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1908, x17, x15, 1288, x18)

inst_670:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7f3dba and fs2 == 1 and fe2 == 0x81 and fm2 == 0x211bd1 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x20a18e and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7dff3dba; op2val:0xc0a11bd1; op3val:0x7f20a18e; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1296, x18)

inst_671:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x46f72d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x02c459 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4b443e and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ec6f72d; op2val:0xbf82c459; op3val:0x7ecb443e; valaddr_reg:x16; val_offset:1932; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1932, x17, x15, 1304, x18)

inst_672:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x46f72d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x02c459 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4b443e and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ec6f72d; op2val:0xbf82c459; op3val:0x7ecb443e; valaddr_reg:x16; val_offset:1944; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1944, x17, x15, 1312, x18)

inst_673:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x46f72d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x02c459 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4b443e and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ec6f72d; op2val:0xbf82c459; op3val:0x7ecb443e; valaddr_reg:x16; val_offset:1956; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1956, x17, x15, 1320, x18)

inst_674:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x46f72d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x02c459 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4b443e and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ec6f72d; op2val:0xbf82c459; op3val:0x7ecb443e; valaddr_reg:x16; val_offset:1968; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1968, x17, x15, 1328, x18)

inst_675:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x46f72d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x02c459 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4b443e and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ec6f72d; op2val:0xbf82c459; op3val:0x7ecb443e; valaddr_reg:x16; val_offset:1980; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1980, x17, x15, 1336, x18)

inst_676:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b6a5b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7adbb0 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x37a6b2 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3b6a5b; op2val:0xbf7adbb0; op3val:0x7f37a6b2; valaddr_reg:x16; val_offset:1992; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1992, x17, x15, 1344, x18)

inst_677:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b6a5b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7adbb0 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x37a6b2 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3b6a5b; op2val:0xbf7adbb0; op3val:0x7f37a6b2; valaddr_reg:x16; val_offset:2004; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 2004, x17, x15, 1352, x18)

inst_678:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b6a5b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7adbb0 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x37a6b2 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3b6a5b; op2val:0xbf7adbb0; op3val:0x7f37a6b2; valaddr_reg:x16; val_offset:2016; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 2016, x17, x15, 1360, x18)

inst_679:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b6a5b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7adbb0 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x37a6b2 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3b6a5b; op2val:0xbf7adbb0; op3val:0x7f37a6b2; valaddr_reg:x16; val_offset:2028; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 2028, x17, x15, 1368, x18)
addi x16,x16,2040

inst_680:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b6a5b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7adbb0 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x37a6b2 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3b6a5b; op2val:0xbf7adbb0; op3val:0x7f37a6b2; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 1376, x18)

inst_681:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2705e0 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4a90d7 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x042923 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2705e0; op2val:0xbf4a90d7; op3val:0x7f042923; valaddr_reg:x16; val_offset:12; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 12, x17, x15, 1384, x18)

inst_682:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2705e0 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4a90d7 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x042923 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2705e0; op2val:0xbf4a90d7; op3val:0x7f042923; valaddr_reg:x16; val_offset:24; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 24, x17, x15, 1392, x18)

inst_683:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2705e0 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4a90d7 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x042923 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2705e0; op2val:0xbf4a90d7; op3val:0x7f042923; valaddr_reg:x16; val_offset:36; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 36, x17, x15, 1400, x18)

inst_684:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2705e0 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4a90d7 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x042923 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2705e0; op2val:0xbf4a90d7; op3val:0x7f042923; valaddr_reg:x16; val_offset:48; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 48, x17, x15, 1408, x18)

inst_685:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2705e0 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4a90d7 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x042923 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2705e0; op2val:0xbf4a90d7; op3val:0x7f042923; valaddr_reg:x16; val_offset:60; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 60, x17, x15, 1416, x18)

inst_686:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x066ad6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1a1b4e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x21d537 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e866ad6; op2val:0xc01a1b4e; op3val:0x7f21d537; valaddr_reg:x16; val_offset:72; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 72, x17, x15, 1424, x18)

inst_687:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x066ad6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1a1b4e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x21d537 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e866ad6; op2val:0xc01a1b4e; op3val:0x7f21d537; valaddr_reg:x16; val_offset:84; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 84, x17, x15, 1432, x18)

inst_688:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x066ad6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1a1b4e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x21d537 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e866ad6; op2val:0xc01a1b4e; op3val:0x7f21d537; valaddr_reg:x16; val_offset:96; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 96, x17, x15, 1440, x18)

inst_689:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x066ad6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1a1b4e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x21d537 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e866ad6; op2val:0xc01a1b4e; op3val:0x7f21d537; valaddr_reg:x16; val_offset:108; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 108, x17, x15, 1448, x18)

inst_690:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x066ad6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1a1b4e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x21d537 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e866ad6; op2val:0xc01a1b4e; op3val:0x7f21d537; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 1456, x18)

inst_691:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0da9b0 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0fad14 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1f0320 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0da9b0; op2val:0xbf8fad14; op3val:0x7f1f0320; valaddr_reg:x16; val_offset:132; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 132, x17, x15, 1464, x18)

inst_692:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0da9b0 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0fad14 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1f0320 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0da9b0; op2val:0xbf8fad14; op3val:0x7f1f0320; valaddr_reg:x16; val_offset:144; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 144, x17, x15, 1472, x18)

inst_693:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0da9b0 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0fad14 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1f0320 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0da9b0; op2val:0xbf8fad14; op3val:0x7f1f0320; valaddr_reg:x16; val_offset:156; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 156, x17, x15, 1480, x18)

inst_694:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0da9b0 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0fad14 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1f0320 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0da9b0; op2val:0xbf8fad14; op3val:0x7f1f0320; valaddr_reg:x16; val_offset:168; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 168, x17, x15, 1488, x18)

inst_695:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0da9b0 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0fad14 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1f0320 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0da9b0; op2val:0xbf8fad14; op3val:0x7f1f0320; valaddr_reg:x16; val_offset:180; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 180, x17, x15, 1496, x18)

inst_696:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x05966f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6cf9b4 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7751f9 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e85966f; op2val:0xbfecf9b4; op3val:0x7ef751f9; valaddr_reg:x16; val_offset:192; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 192, x17, x15, 1504, x18)

inst_697:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x05966f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6cf9b4 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7751f9 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e85966f; op2val:0xbfecf9b4; op3val:0x7ef751f9; valaddr_reg:x16; val_offset:204; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 204, x17, x15, 1512, x18)

inst_698:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x05966f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6cf9b4 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7751f9 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e85966f; op2val:0xbfecf9b4; op3val:0x7ef751f9; valaddr_reg:x16; val_offset:216; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 216, x17, x15, 1520, x18)

inst_699:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x05966f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6cf9b4 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7751f9 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e85966f; op2val:0xbfecf9b4; op3val:0x7ef751f9; valaddr_reg:x16; val_offset:228; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 228, x17, x15, 1528, x18)

inst_700:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x05966f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6cf9b4 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7751f9 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e85966f; op2val:0xbfecf9b4; op3val:0x7ef751f9; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 1536, x18)

inst_701:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x789da3 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1db158 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1924e8 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef89da3; op2val:0xbf9db158; op3val:0x7f1924e8; valaddr_reg:x16; val_offset:252; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 252, x17, x15, 1544, x18)

inst_702:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x789da3 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1db158 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1924e8 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef89da3; op2val:0xbf9db158; op3val:0x7f1924e8; valaddr_reg:x16; val_offset:264; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 264, x17, x15, 1552, x18)

inst_703:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x789da3 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1db158 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1924e8 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef89da3; op2val:0xbf9db158; op3val:0x7f1924e8; valaddr_reg:x16; val_offset:276; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 276, x17, x15, 1560, x18)

inst_704:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x789da3 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1db158 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1924e8 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef89da3; op2val:0xbf9db158; op3val:0x7f1924e8; valaddr_reg:x16; val_offset:288; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 288, x17, x15, 1568, x18)

inst_705:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x789da3 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1db158 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1924e8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef89da3; op2val:0xbf9db158; op3val:0x7f1924e8; valaddr_reg:x16; val_offset:300; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 300, x17, x15, 1576, x18)

inst_706:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x31c4c0 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x61ceaa and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1ccd6f and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb1c4c0; op2val:0xbfe1ceaa; op3val:0x7f1ccd6f; valaddr_reg:x16; val_offset:312; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 312, x17, x15, 1584, x18)

inst_707:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x31c4c0 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x61ceaa and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1ccd6f and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb1c4c0; op2val:0xbfe1ceaa; op3val:0x7f1ccd6f; valaddr_reg:x16; val_offset:324; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 324, x17, x15, 1592, x18)

inst_708:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x31c4c0 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x61ceaa and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1ccd6f and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb1c4c0; op2val:0xbfe1ceaa; op3val:0x7f1ccd6f; valaddr_reg:x16; val_offset:336; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 336, x17, x15, 1600, x18)

inst_709:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x31c4c0 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x61ceaa and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1ccd6f and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb1c4c0; op2val:0xbfe1ceaa; op3val:0x7f1ccd6f; valaddr_reg:x16; val_offset:348; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 348, x17, x15, 1608, x18)

inst_710:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x31c4c0 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x61ceaa and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1ccd6f and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb1c4c0; op2val:0xbfe1ceaa; op3val:0x7f1ccd6f; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 1616, x18)

inst_711:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40881b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2b773c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x00f497 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e40881b; op2val:0xc02b773c; op3val:0x7f00f497; valaddr_reg:x16; val_offset:372; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 372, x17, x15, 1624, x18)

inst_712:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40881b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2b773c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x00f497 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e40881b; op2val:0xc02b773c; op3val:0x7f00f497; valaddr_reg:x16; val_offset:384; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 384, x17, x15, 1632, x18)

inst_713:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40881b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2b773c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x00f497 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e40881b; op2val:0xc02b773c; op3val:0x7f00f497; valaddr_reg:x16; val_offset:396; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 396, x17, x15, 1640, x18)

inst_714:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40881b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2b773c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x00f497 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e40881b; op2val:0xc02b773c; op3val:0x7f00f497; valaddr_reg:x16; val_offset:408; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 408, x17, x15, 1648, x18)

inst_715:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40881b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2b773c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x00f497 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e40881b; op2val:0xc02b773c; op3val:0x7f00f497; valaddr_reg:x16; val_offset:420; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 420, x17, x15, 1656, x18)

inst_716:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x0e4d98 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x3ceebe and fs3 == 0 and fe3 == 0xfd and fm3 == 0x520b63 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7c0e4d98; op2val:0xc23ceebe; op3val:0x7ed20b63; valaddr_reg:x16; val_offset:432; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 432, x17, x15, 1664, x18)

inst_717:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x0e4d98 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x3ceebe and fs3 == 0 and fe3 == 0xfd and fm3 == 0x520b63 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7c0e4d98; op2val:0xc23ceebe; op3val:0x7ed20b63; valaddr_reg:x16; val_offset:444; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 444, x17, x15, 1672, x18)

inst_718:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x0e4d98 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x3ceebe and fs3 == 0 and fe3 == 0xfd and fm3 == 0x520b63 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7c0e4d98; op2val:0xc23ceebe; op3val:0x7ed20b63; valaddr_reg:x16; val_offset:456; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 456, x17, x15, 1680, x18)

inst_719:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x0e4d98 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x3ceebe and fs3 == 0 and fe3 == 0xfd and fm3 == 0x520b63 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7c0e4d98; op2val:0xc23ceebe; op3val:0x7ed20b63; valaddr_reg:x16; val_offset:468; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 468, x17, x15, 1688, x18)

inst_720:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x0e4d98 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x3ceebe and fs3 == 0 and fe3 == 0xfd and fm3 == 0x520b63 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7c0e4d98; op2val:0xc23ceebe; op3val:0x7ed20b63; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1696, x18)

inst_721:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x797b55 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x64cca5 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5ef947 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef97b55; op2val:0xbf64cca5; op3val:0x7edef947; valaddr_reg:x16; val_offset:492; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 492, x17, x15, 1704, x18)

inst_722:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x797b55 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x64cca5 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5ef947 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef97b55; op2val:0xbf64cca5; op3val:0x7edef947; valaddr_reg:x16; val_offset:504; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 504, x17, x15, 1712, x18)

inst_723:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x797b55 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x64cca5 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5ef947 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef97b55; op2val:0xbf64cca5; op3val:0x7edef947; valaddr_reg:x16; val_offset:516; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 516, x17, x15, 1720, x18)

inst_724:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x797b55 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x64cca5 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5ef947 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef97b55; op2val:0xbf64cca5; op3val:0x7edef947; valaddr_reg:x16; val_offset:528; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 528, x17, x15, 1728, x18)

inst_725:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x797b55 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x64cca5 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5ef947 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef97b55; op2val:0xbf64cca5; op3val:0x7edef947; valaddr_reg:x16; val_offset:540; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 540, x17, x15, 1736, x18)

inst_726:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x61ada9 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4defe6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x358b8d and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e61ada9; op2val:0xc04defe6; op3val:0x7f358b8d; valaddr_reg:x16; val_offset:552; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 552, x17, x15, 1744, x18)

inst_727:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x61ada9 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4defe6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x358b8d and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e61ada9; op2val:0xc04defe6; op3val:0x7f358b8d; valaddr_reg:x16; val_offset:564; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 564, x17, x15, 1752, x18)

inst_728:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x61ada9 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4defe6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x358b8d and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e61ada9; op2val:0xc04defe6; op3val:0x7f358b8d; valaddr_reg:x16; val_offset:576; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 576, x17, x15, 1760, x18)

inst_729:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x61ada9 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4defe6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x358b8d and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e61ada9; op2val:0xc04defe6; op3val:0x7f358b8d; valaddr_reg:x16; val_offset:588; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 588, x17, x15, 1768, x18)

inst_730:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x61ada9 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4defe6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x358b8d and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e61ada9; op2val:0xc04defe6; op3val:0x7f358b8d; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1776, x18)

inst_731:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x13caa0 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x65c581 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x04a647 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f13caa0; op2val:0xbf65c581; op3val:0x7f04a647; valaddr_reg:x16; val_offset:612; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 612, x17, x15, 1784, x18)

inst_732:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x13caa0 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x65c581 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x04a647 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f13caa0; op2val:0xbf65c581; op3val:0x7f04a647; valaddr_reg:x16; val_offset:624; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 624, x17, x15, 1792, x18)

inst_733:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x13caa0 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x65c581 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x04a647 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f13caa0; op2val:0xbf65c581; op3val:0x7f04a647; valaddr_reg:x16; val_offset:636; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 636, x17, x15, 1800, x18)

inst_734:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x13caa0 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x65c581 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x04a647 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f13caa0; op2val:0xbf65c581; op3val:0x7f04a647; valaddr_reg:x16; val_offset:648; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 648, x17, x15, 1808, x18)

inst_735:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x13caa0 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x65c581 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x04a647 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f13caa0; op2val:0xbf65c581; op3val:0x7f04a647; valaddr_reg:x16; val_offset:660; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 660, x17, x15, 1816, x18)

inst_736:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x57b1c2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5d5a9b and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3a80cc and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e57b1c2; op2val:0xbfdd5a9b; op3val:0x7eba80cc; valaddr_reg:x16; val_offset:672; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 672, x17, x15, 1824, x18)

inst_737:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x57b1c2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5d5a9b and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3a80cc and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e57b1c2; op2val:0xbfdd5a9b; op3val:0x7eba80cc; valaddr_reg:x16; val_offset:684; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 684, x17, x15, 1832, x18)

inst_738:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x57b1c2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5d5a9b and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3a80cc and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e57b1c2; op2val:0xbfdd5a9b; op3val:0x7eba80cc; valaddr_reg:x16; val_offset:696; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 696, x17, x15, 1840, x18)

inst_739:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x57b1c2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5d5a9b and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3a80cc and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e57b1c2; op2val:0xbfdd5a9b; op3val:0x7eba80cc; valaddr_reg:x16; val_offset:708; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 708, x17, x15, 1848, x18)

inst_740:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x57b1c2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5d5a9b and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3a80cc and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e57b1c2; op2val:0xbfdd5a9b; op3val:0x7eba80cc; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1856, x18)

inst_741:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0b8ecb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x781ce6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x074216 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8b8ecb; op2val:0xbff81ce6; op3val:0x7f074216; valaddr_reg:x16; val_offset:732; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 732, x17, x15, 1864, x18)

inst_742:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0b8ecb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x781ce6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x074216 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8b8ecb; op2val:0xbff81ce6; op3val:0x7f074216; valaddr_reg:x16; val_offset:744; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 744, x17, x15, 1872, x18)

inst_743:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0b8ecb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x781ce6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x074216 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8b8ecb; op2val:0xbff81ce6; op3val:0x7f074216; valaddr_reg:x16; val_offset:756; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 756, x17, x15, 1880, x18)

inst_744:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0b8ecb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x781ce6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x074216 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8b8ecb; op2val:0xbff81ce6; op3val:0x7f074216; valaddr_reg:x16; val_offset:768; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 768, x17, x15, 1888, x18)

inst_745:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0b8ecb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x781ce6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x074216 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8b8ecb; op2val:0xbff81ce6; op3val:0x7f074216; valaddr_reg:x16; val_offset:780; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 780, x17, x15, 1896, x18)

inst_746:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7efbaa and fs2 == 1 and fe2 == 0x7f and fm2 == 0x126eac and fs3 == 0 and fe3 == 0xfe and fm3 == 0x11d9c2 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7efefbaa; op2val:0xbf926eac; op3val:0x7f11d9c2; valaddr_reg:x16; val_offset:792; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 792, x17, x15, 1904, x18)

inst_747:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7efbaa and fs2 == 1 and fe2 == 0x7f and fm2 == 0x126eac and fs3 == 0 and fe3 == 0xfe and fm3 == 0x11d9c2 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7efefbaa; op2val:0xbf926eac; op3val:0x7f11d9c2; valaddr_reg:x16; val_offset:804; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 804, x17, x15, 1912, x18)

inst_748:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7efbaa and fs2 == 1 and fe2 == 0x7f and fm2 == 0x126eac and fs3 == 0 and fe3 == 0xfe and fm3 == 0x11d9c2 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7efefbaa; op2val:0xbf926eac; op3val:0x7f11d9c2; valaddr_reg:x16; val_offset:816; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 816, x17, x15, 1920, x18)

inst_749:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7efbaa and fs2 == 1 and fe2 == 0x7f and fm2 == 0x126eac and fs3 == 0 and fe3 == 0xfe and fm3 == 0x11d9c2 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7efefbaa; op2val:0xbf926eac; op3val:0x7f11d9c2; valaddr_reg:x16; val_offset:828; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 828, x17, x15, 1928, x18)

inst_750:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7efbaa and fs2 == 1 and fe2 == 0x7f and fm2 == 0x126eac and fs3 == 0 and fe3 == 0xfe and fm3 == 0x11d9c2 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7efefbaa; op2val:0xbf926eac; op3val:0x7f11d9c2; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1936, x18)

inst_751:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x14c7ca and fs2 == 1 and fe2 == 0x7e and fm2 == 0x65789e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x055cd1 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f14c7ca; op2val:0xbf65789e; op3val:0x7f055cd1; valaddr_reg:x16; val_offset:852; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 852, x17, x15, 1944, x18)

inst_752:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x14c7ca and fs2 == 1 and fe2 == 0x7e and fm2 == 0x65789e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x055cd1 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f14c7ca; op2val:0xbf65789e; op3val:0x7f055cd1; valaddr_reg:x16; val_offset:864; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 864, x17, x15, 1952, x18)

inst_753:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x14c7ca and fs2 == 1 and fe2 == 0x7e and fm2 == 0x65789e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x055cd1 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f14c7ca; op2val:0xbf65789e; op3val:0x7f055cd1; valaddr_reg:x16; val_offset:876; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 876, x17, x15, 1960, x18)

inst_754:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x14c7ca and fs2 == 1 and fe2 == 0x7e and fm2 == 0x65789e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x055cd1 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f14c7ca; op2val:0xbf65789e; op3val:0x7f055cd1; valaddr_reg:x16; val_offset:888; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 888, x17, x15, 1968, x18)

inst_755:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x14c7ca and fs2 == 1 and fe2 == 0x7e and fm2 == 0x65789e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x055cd1 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f14c7ca; op2val:0xbf65789e; op3val:0x7f055cd1; valaddr_reg:x16; val_offset:900; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 900, x17, x15, 1976, x18)

inst_756:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0abfd0 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0b3975 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x16ea94 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8abfd0; op2val:0xc00b3975; op3val:0x7f16ea94; valaddr_reg:x16; val_offset:912; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 912, x17, x15, 1984, x18)

inst_757:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0abfd0 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0b3975 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x16ea94 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8abfd0; op2val:0xc00b3975; op3val:0x7f16ea94; valaddr_reg:x16; val_offset:924; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 924, x17, x15, 1992, x18)

inst_758:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0abfd0 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0b3975 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x16ea94 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8abfd0; op2val:0xc00b3975; op3val:0x7f16ea94; valaddr_reg:x16; val_offset:936; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 936, x17, x15, 2000, x18)

inst_759:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0abfd0 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0b3975 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x16ea94 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8abfd0; op2val:0xc00b3975; op3val:0x7f16ea94; valaddr_reg:x16; val_offset:948; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 948, x17, x15, 2008, x18)

inst_760:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0abfd0 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0b3975 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x16ea94 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8abfd0; op2val:0xc00b3975; op3val:0x7f16ea94; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 2016, x18)

inst_761:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1625cb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0df910 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2689cb and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1625cb; op2val:0xbf8df910; op3val:0x7f2689cb; valaddr_reg:x16; val_offset:972; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 972, x17, x15, 2024, x18)
RVTEST_SIGBASE(x15,signature_x15_4)

inst_762:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1625cb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0df910 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2689cb and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1625cb; op2val:0xbf8df910; op3val:0x7f2689cb; valaddr_reg:x16; val_offset:984; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 984, x17, x15, 0, x18)

inst_763:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1625cb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0df910 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2689cb and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1625cb; op2val:0xbf8df910; op3val:0x7f2689cb; valaddr_reg:x16; val_offset:996; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 996, x17, x15, 8, x18)

inst_764:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1625cb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0df910 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2689cb and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1625cb; op2val:0xbf8df910; op3val:0x7f2689cb; valaddr_reg:x16; val_offset:1008; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1008, x17, x15, 16, x18)

inst_765:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1625cb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0df910 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2689cb and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1625cb; op2val:0xbf8df910; op3val:0x7f2689cb; valaddr_reg:x16; val_offset:1020; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1020, x17, x15, 24, x18)

inst_766:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x08ea41 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x438442 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x512259 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d88ea41; op2val:0xc0438442; op3val:0x7e512259; valaddr_reg:x16; val_offset:1032; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1032, x17, x15, 32, x18)

inst_767:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x08ea41 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x438442 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x512259 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d88ea41; op2val:0xc0438442; op3val:0x7e512259; valaddr_reg:x16; val_offset:1044; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1044, x17, x15, 40, x18)

inst_768:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x08ea41 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x438442 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x512259 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d88ea41; op2val:0xc0438442; op3val:0x7e512259; valaddr_reg:x16; val_offset:1056; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1056, x17, x15, 48, x18)

inst_769:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x08ea41 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x438442 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x512259 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d88ea41; op2val:0xc0438442; op3val:0x7e512259; valaddr_reg:x16; val_offset:1068; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1068, x17, x15, 56, x18)

inst_770:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x08ea41 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x438442 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x512259 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d88ea41; op2val:0xc0438442; op3val:0x7e512259; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 64, x18)

inst_771:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3fbd64 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2d8949 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x01f9d0 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ebfbd64; op2val:0xbf2d8949; op3val:0x7e81f9d0; valaddr_reg:x16; val_offset:1092; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1092, x17, x15, 72, x18)

inst_772:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3fbd64 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2d8949 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x01f9d0 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ebfbd64; op2val:0xbf2d8949; op3val:0x7e81f9d0; valaddr_reg:x16; val_offset:1104; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1104, x17, x15, 80, x18)

inst_773:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3fbd64 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2d8949 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x01f9d0 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ebfbd64; op2val:0xbf2d8949; op3val:0x7e81f9d0; valaddr_reg:x16; val_offset:1116; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1116, x17, x15, 88, x18)

inst_774:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3fbd64 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2d8949 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x01f9d0 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ebfbd64; op2val:0xbf2d8949; op3val:0x7e81f9d0; valaddr_reg:x16; val_offset:1128; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1128, x17, x15, 96, x18)

inst_775:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3fbd64 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2d8949 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x01f9d0 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ebfbd64; op2val:0xbf2d8949; op3val:0x7e81f9d0; valaddr_reg:x16; val_offset:1140; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1140, x17, x15, 104, x18)

inst_776:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3848de and fs2 == 1 and fe2 == 0x7e and fm2 == 0x273904 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x70c129 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3848de; op2val:0xbf273904; op3val:0x7ef0c129; valaddr_reg:x16; val_offset:1152; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1152, x17, x15, 112, x18)

inst_777:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3848de and fs2 == 1 and fe2 == 0x7e and fm2 == 0x273904 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x70c129 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3848de; op2val:0xbf273904; op3val:0x7ef0c129; valaddr_reg:x16; val_offset:1164; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1164, x17, x15, 120, x18)

inst_778:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3848de and fs2 == 1 and fe2 == 0x7e and fm2 == 0x273904 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x70c129 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3848de; op2val:0xbf273904; op3val:0x7ef0c129; valaddr_reg:x16; val_offset:1176; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1176, x17, x15, 128, x18)

inst_779:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3848de and fs2 == 1 and fe2 == 0x7e and fm2 == 0x273904 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x70c129 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3848de; op2val:0xbf273904; op3val:0x7ef0c129; valaddr_reg:x16; val_offset:1188; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1188, x17, x15, 136, x18)

inst_780:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3848de and fs2 == 1 and fe2 == 0x7e and fm2 == 0x273904 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x70c129 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3848de; op2val:0xbf273904; op3val:0x7ef0c129; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 144, x18)

inst_781:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10c4ae and fs2 == 1 and fe2 == 0x80 and fm2 == 0x27ca24 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3dc53a and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e90c4ae; op2val:0xc027ca24; op3val:0x7f3dc53a; valaddr_reg:x16; val_offset:1212; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1212, x17, x15, 152, x18)

inst_782:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10c4ae and fs2 == 1 and fe2 == 0x80 and fm2 == 0x27ca24 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3dc53a and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e90c4ae; op2val:0xc027ca24; op3val:0x7f3dc53a; valaddr_reg:x16; val_offset:1224; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1224, x17, x15, 160, x18)

inst_783:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10c4ae and fs2 == 1 and fe2 == 0x80 and fm2 == 0x27ca24 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3dc53a and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e90c4ae; op2val:0xc027ca24; op3val:0x7f3dc53a; valaddr_reg:x16; val_offset:1236; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1236, x17, x15, 168, x18)

inst_784:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10c4ae and fs2 == 1 and fe2 == 0x80 and fm2 == 0x27ca24 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3dc53a and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e90c4ae; op2val:0xc027ca24; op3val:0x7f3dc53a; valaddr_reg:x16; val_offset:1248; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1248, x17, x15, 176, x18)

inst_785:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10c4ae and fs2 == 1 and fe2 == 0x80 and fm2 == 0x27ca24 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3dc53a and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e90c4ae; op2val:0xc027ca24; op3val:0x7f3dc53a; valaddr_reg:x16; val_offset:1260; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1260, x17, x15, 184, x18)

inst_786:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b0e1c and fs2 == 1 and fe2 == 0x7d and fm2 == 0x39c4ac and fs3 == 0 and fe3 == 0xfb and fm3 == 0x6108a4 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e9b0e1c; op2val:0xbeb9c4ac; op3val:0x7de108a4; valaddr_reg:x16; val_offset:1272; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1272, x17, x15, 192, x18)

inst_787:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b0e1c and fs2 == 1 and fe2 == 0x7d and fm2 == 0x39c4ac and fs3 == 0 and fe3 == 0xfb and fm3 == 0x6108a4 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e9b0e1c; op2val:0xbeb9c4ac; op3val:0x7de108a4; valaddr_reg:x16; val_offset:1284; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1284, x17, x15, 200, x18)

inst_788:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b0e1c and fs2 == 1 and fe2 == 0x7d and fm2 == 0x39c4ac and fs3 == 0 and fe3 == 0xfb and fm3 == 0x6108a4 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e9b0e1c; op2val:0xbeb9c4ac; op3val:0x7de108a4; valaddr_reg:x16; val_offset:1296; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1296, x17, x15, 208, x18)

inst_789:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b0e1c and fs2 == 1 and fe2 == 0x7d and fm2 == 0x39c4ac and fs3 == 0 and fe3 == 0xfb and fm3 == 0x6108a4 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e9b0e1c; op2val:0xbeb9c4ac; op3val:0x7de108a4; valaddr_reg:x16; val_offset:1308; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1308, x17, x15, 216, x18)

inst_790:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b0e1c and fs2 == 1 and fe2 == 0x7d and fm2 == 0x39c4ac and fs3 == 0 and fe3 == 0xfb and fm3 == 0x6108a4 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e9b0e1c; op2val:0xbeb9c4ac; op3val:0x7de108a4; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 224, x18)

inst_791:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x37f3c9 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1b85b6 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5f815f and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb7f3c9; op2val:0xbf1b85b6; op3val:0x7e5f815f; valaddr_reg:x16; val_offset:1332; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1332, x17, x15, 232, x18)

inst_792:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x37f3c9 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1b85b6 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5f815f and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb7f3c9; op2val:0xbf1b85b6; op3val:0x7e5f815f; valaddr_reg:x16; val_offset:1344; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1344, x17, x15, 240, x18)

inst_793:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x37f3c9 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1b85b6 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5f815f and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb7f3c9; op2val:0xbf1b85b6; op3val:0x7e5f815f; valaddr_reg:x16; val_offset:1356; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1356, x17, x15, 248, x18)

inst_794:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x37f3c9 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1b85b6 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5f815f and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb7f3c9; op2val:0xbf1b85b6; op3val:0x7e5f815f; valaddr_reg:x16; val_offset:1368; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1368, x17, x15, 256, x18)

inst_795:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x37f3c9 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1b85b6 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5f815f and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb7f3c9; op2val:0xbf1b85b6; op3val:0x7e5f815f; valaddr_reg:x16; val_offset:1380; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1380, x17, x15, 264, x18)

inst_796:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3b73fa and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3f4883 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0c10a1 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ebb73fa; op2val:0xbfbf4883; op3val:0x7f0c10a1; valaddr_reg:x16; val_offset:1392; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1392, x17, x15, 272, x18)

inst_797:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3b73fa and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3f4883 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0c10a1 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ebb73fa; op2val:0xbfbf4883; op3val:0x7f0c10a1; valaddr_reg:x16; val_offset:1404; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1404, x17, x15, 280, x18)

inst_798:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3b73fa and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3f4883 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0c10a1 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ebb73fa; op2val:0xbfbf4883; op3val:0x7f0c10a1; valaddr_reg:x16; val_offset:1416; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1416, x17, x15, 288, x18)

inst_799:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3b73fa and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3f4883 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0c10a1 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ebb73fa; op2val:0xbfbf4883; op3val:0x7f0c10a1; valaddr_reg:x16; val_offset:1428; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1428, x17, x15, 296, x18)

inst_800:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3b73fa and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3f4883 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0c10a1 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ebb73fa; op2val:0xbfbf4883; op3val:0x7f0c10a1; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 304, x18)

inst_801:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b64b8 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6debb7 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2e28cb and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3b64b8; op2val:0xbeedebb7; op3val:0x7eae28cb; valaddr_reg:x16; val_offset:1452; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1452, x17, x15, 312, x18)

inst_802:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b64b8 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6debb7 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2e28cb and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3b64b8; op2val:0xbeedebb7; op3val:0x7eae28cb; valaddr_reg:x16; val_offset:1464; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1464, x17, x15, 320, x18)

inst_803:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b64b8 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6debb7 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2e28cb and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3b64b8; op2val:0xbeedebb7; op3val:0x7eae28cb; valaddr_reg:x16; val_offset:1476; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1476, x17, x15, 328, x18)

inst_804:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b64b8 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6debb7 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2e28cb and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3b64b8; op2val:0xbeedebb7; op3val:0x7eae28cb; valaddr_reg:x16; val_offset:1488; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1488, x17, x15, 336, x18)

inst_805:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b64b8 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6debb7 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2e28cb and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3b64b8; op2val:0xbeedebb7; op3val:0x7eae28cb; valaddr_reg:x16; val_offset:1500; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1500, x17, x15, 344, x18)

inst_806:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3fdd96 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5a545b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x23a1eb and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3fdd96; op2val:0xbf5a545b; op3val:0x7f23a1eb; valaddr_reg:x16; val_offset:1512; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1512, x17, x15, 352, x18)

inst_807:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3fdd96 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5a545b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x23a1eb and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3fdd96; op2val:0xbf5a545b; op3val:0x7f23a1eb; valaddr_reg:x16; val_offset:1524; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1524, x17, x15, 360, x18)

inst_808:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3fdd96 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5a545b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x23a1eb and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3fdd96; op2val:0xbf5a545b; op3val:0x7f23a1eb; valaddr_reg:x16; val_offset:1536; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1536, x17, x15, 368, x18)

inst_809:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3fdd96 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5a545b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x23a1eb and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3fdd96; op2val:0xbf5a545b; op3val:0x7f23a1eb; valaddr_reg:x16; val_offset:1548; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1548, x17, x15, 376, x18)

inst_810:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3fdd96 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5a545b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x23a1eb and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3fdd96; op2val:0xbf5a545b; op3val:0x7f23a1eb; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 384, x18)

inst_811:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x626a93 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x44bf77 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2e02f0 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e626a93; op2val:0xbfc4bf77; op3val:0x7eae02f0; valaddr_reg:x16; val_offset:1572; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1572, x17, x15, 392, x18)

inst_812:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x626a93 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x44bf77 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2e02f0 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e626a93; op2val:0xbfc4bf77; op3val:0x7eae02f0; valaddr_reg:x16; val_offset:1584; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1584, x17, x15, 400, x18)

inst_813:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x626a93 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x44bf77 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2e02f0 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e626a93; op2val:0xbfc4bf77; op3val:0x7eae02f0; valaddr_reg:x16; val_offset:1596; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1596, x17, x15, 408, x18)

inst_814:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x626a93 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x44bf77 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2e02f0 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e626a93; op2val:0xbfc4bf77; op3val:0x7eae02f0; valaddr_reg:x16; val_offset:1608; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1608, x17, x15, 416, x18)

inst_815:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x626a93 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x44bf77 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2e02f0 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e626a93; op2val:0xbfc4bf77; op3val:0x7eae02f0; valaddr_reg:x16; val_offset:1620; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1620, x17, x15, 424, x18)

inst_816:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x653da7 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x351f02 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x22305b and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7de53da7; op2val:0xc0b51f02; op3val:0x7f22305b; valaddr_reg:x16; val_offset:1632; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1632, x17, x15, 432, x18)

inst_817:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x653da7 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x351f02 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x22305b and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7de53da7; op2val:0xc0b51f02; op3val:0x7f22305b; valaddr_reg:x16; val_offset:1644; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1644, x17, x15, 440, x18)

inst_818:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x653da7 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x351f02 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x22305b and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7de53da7; op2val:0xc0b51f02; op3val:0x7f22305b; valaddr_reg:x16; val_offset:1656; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1656, x17, x15, 448, x18)

inst_819:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x653da7 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x351f02 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x22305b and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7de53da7; op2val:0xc0b51f02; op3val:0x7f22305b; valaddr_reg:x16; val_offset:1668; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1668, x17, x15, 456, x18)

inst_820:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x653da7 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x351f02 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x22305b and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7de53da7; op2val:0xc0b51f02; op3val:0x7f22305b; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 464, x18)

inst_821:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x23c8dc and fs2 == 1 and fe2 == 0x81 and fm2 == 0x02691f and fs3 == 0 and fe3 == 0xfd and fm3 == 0x26de83 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7da3c8dc; op2val:0xc082691f; op3val:0x7ea6de83; valaddr_reg:x16; val_offset:1692; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1692, x17, x15, 472, x18)

inst_822:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x23c8dc and fs2 == 1 and fe2 == 0x81 and fm2 == 0x02691f and fs3 == 0 and fe3 == 0xfd and fm3 == 0x26de83 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7da3c8dc; op2val:0xc082691f; op3val:0x7ea6de83; valaddr_reg:x16; val_offset:1704; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1704, x17, x15, 480, x18)

inst_823:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x23c8dc and fs2 == 1 and fe2 == 0x81 and fm2 == 0x02691f and fs3 == 0 and fe3 == 0xfd and fm3 == 0x26de83 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7da3c8dc; op2val:0xc082691f; op3val:0x7ea6de83; valaddr_reg:x16; val_offset:1716; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1716, x17, x15, 488, x18)

inst_824:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x23c8dc and fs2 == 1 and fe2 == 0x81 and fm2 == 0x02691f and fs3 == 0 and fe3 == 0xfd and fm3 == 0x26de83 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7da3c8dc; op2val:0xc082691f; op3val:0x7ea6de83; valaddr_reg:x16; val_offset:1728; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1728, x17, x15, 496, x18)

inst_825:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x23c8dc and fs2 == 1 and fe2 == 0x81 and fm2 == 0x02691f and fs3 == 0 and fe3 == 0xfd and fm3 == 0x26de83 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7da3c8dc; op2val:0xc082691f; op3val:0x7ea6de83; valaddr_reg:x16; val_offset:1740; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1740, x17, x15, 504, x18)

inst_826:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7212c5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x20008a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x174c3e and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef212c5; op2val:0xbfa0008a; op3val:0x7f174c3e; valaddr_reg:x16; val_offset:1752; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1752, x17, x15, 512, x18)

inst_827:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7212c5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x20008a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x174c3e and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef212c5; op2val:0xbfa0008a; op3val:0x7f174c3e; valaddr_reg:x16; val_offset:1764; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1764, x17, x15, 520, x18)

inst_828:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7212c5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x20008a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x174c3e and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef212c5; op2val:0xbfa0008a; op3val:0x7f174c3e; valaddr_reg:x16; val_offset:1776; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1776, x17, x15, 528, x18)

inst_829:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7212c5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x20008a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x174c3e and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef212c5; op2val:0xbfa0008a; op3val:0x7f174c3e; valaddr_reg:x16; val_offset:1788; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1788, x17, x15, 536, x18)

inst_830:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7212c5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x20008a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x174c3e and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef212c5; op2val:0xbfa0008a; op3val:0x7f174c3e; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 544, x18)

inst_831:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c7ac4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x262942 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x365c7f and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0c7ac4; op2val:0xbfa62942; op3val:0x7f365c7f; valaddr_reg:x16; val_offset:1812; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1812, x17, x15, 552, x18)

inst_832:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c7ac4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x262942 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x365c7f and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0c7ac4; op2val:0xbfa62942; op3val:0x7f365c7f; valaddr_reg:x16; val_offset:1824; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1824, x17, x15, 560, x18)

inst_833:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c7ac4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x262942 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x365c7f and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0c7ac4; op2val:0xbfa62942; op3val:0x7f365c7f; valaddr_reg:x16; val_offset:1836; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1836, x17, x15, 568, x18)

inst_834:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c7ac4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x262942 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x365c7f and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0c7ac4; op2val:0xbfa62942; op3val:0x7f365c7f; valaddr_reg:x16; val_offset:1848; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1848, x17, x15, 576, x18)

inst_835:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c7ac4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x262942 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x365c7f and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0c7ac4; op2val:0xbfa62942; op3val:0x7f365c7f; valaddr_reg:x16; val_offset:1860; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1860, x17, x15, 584, x18)

inst_836:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20fa79 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x1f78b2 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x488eed and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f20fa79; op2val:0xbe1f78b2; op3val:0x7dc88eed; valaddr_reg:x16; val_offset:1872; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1872, x17, x15, 592, x18)

inst_837:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20fa79 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x1f78b2 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x488eed and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f20fa79; op2val:0xbe1f78b2; op3val:0x7dc88eed; valaddr_reg:x16; val_offset:1884; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1884, x17, x15, 600, x18)

inst_838:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20fa79 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x1f78b2 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x488eed and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f20fa79; op2val:0xbe1f78b2; op3val:0x7dc88eed; valaddr_reg:x16; val_offset:1896; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1896, x17, x15, 608, x18)

inst_839:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20fa79 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x1f78b2 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x488eed and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f20fa79; op2val:0xbe1f78b2; op3val:0x7dc88eed; valaddr_reg:x16; val_offset:1908; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1908, x17, x15, 616, x18)

inst_840:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20fa79 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x1f78b2 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x488eed and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f20fa79; op2val:0xbe1f78b2; op3val:0x7dc88eed; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 624, x18)

inst_841:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x490a06 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x7157ba and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3d8755 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7cc90a06; op2val:0xc17157ba; op3val:0x7ebd8755; valaddr_reg:x16; val_offset:1932; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1932, x17, x15, 632, x18)

inst_842:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x490a06 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x7157ba and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3d8755 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7cc90a06; op2val:0xc17157ba; op3val:0x7ebd8755; valaddr_reg:x16; val_offset:1944; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1944, x17, x15, 640, x18)

inst_843:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x490a06 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x7157ba and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3d8755 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7cc90a06; op2val:0xc17157ba; op3val:0x7ebd8755; valaddr_reg:x16; val_offset:1956; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1956, x17, x15, 648, x18)

inst_844:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x490a06 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x7157ba and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3d8755 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7cc90a06; op2val:0xc17157ba; op3val:0x7ebd8755; valaddr_reg:x16; val_offset:1968; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1968, x17, x15, 656, x18)

inst_845:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x490a06 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x7157ba and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3d8755 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7cc90a06; op2val:0xc17157ba; op3val:0x7ebd8755; valaddr_reg:x16; val_offset:1980; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1980, x17, x15, 664, x18)

inst_846:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2b21f2 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x038e08 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2fe2a3 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d2b21f2; op2val:0xc1838e08; op3val:0x7f2fe2a3; valaddr_reg:x16; val_offset:1992; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1992, x17, x15, 672, x18)

inst_847:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2b21f2 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x038e08 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2fe2a3 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d2b21f2; op2val:0xc1838e08; op3val:0x7f2fe2a3; valaddr_reg:x16; val_offset:2004; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 2004, x17, x15, 680, x18)

inst_848:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2b21f2 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x038e08 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2fe2a3 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d2b21f2; op2val:0xc1838e08; op3val:0x7f2fe2a3; valaddr_reg:x16; val_offset:2016; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 2016, x17, x15, 688, x18)

inst_849:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2b21f2 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x038e08 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2fe2a3 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d2b21f2; op2val:0xc1838e08; op3val:0x7f2fe2a3; valaddr_reg:x16; val_offset:2028; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 2028, x17, x15, 696, x18)
addi x16,x16,2040

inst_850:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2b21f2 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x038e08 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2fe2a3 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d2b21f2; op2val:0xc1838e08; op3val:0x7f2fe2a3; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 704, x18)

inst_851:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ef9b3 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6cf335 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x21f46d and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eaef9b3; op2val:0xbf6cf335; op3val:0x7ea1f46d; valaddr_reg:x16; val_offset:12; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 12, x17, x15, 712, x18)

inst_852:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ef9b3 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6cf335 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x21f46d and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eaef9b3; op2val:0xbf6cf335; op3val:0x7ea1f46d; valaddr_reg:x16; val_offset:24; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 24, x17, x15, 720, x18)

inst_853:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ef9b3 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6cf335 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x21f46d and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eaef9b3; op2val:0xbf6cf335; op3val:0x7ea1f46d; valaddr_reg:x16; val_offset:36; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 36, x17, x15, 728, x18)

inst_854:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ef9b3 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6cf335 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x21f46d and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eaef9b3; op2val:0xbf6cf335; op3val:0x7ea1f46d; valaddr_reg:x16; val_offset:48; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 48, x17, x15, 736, x18)

inst_855:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ef9b3 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6cf335 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x21f46d and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eaef9b3; op2val:0xbf6cf335; op3val:0x7ea1f46d; valaddr_reg:x16; val_offset:60; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 60, x17, x15, 744, x18)

inst_856:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6414a9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3211a1 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1ea613 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee414a9; op2val:0xbfb211a1; op3val:0x7f1ea613; valaddr_reg:x16; val_offset:72; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 72, x17, x15, 752, x18)

inst_857:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6414a9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3211a1 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1ea613 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee414a9; op2val:0xbfb211a1; op3val:0x7f1ea613; valaddr_reg:x16; val_offset:84; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 84, x17, x15, 760, x18)

inst_858:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6414a9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3211a1 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1ea613 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee414a9; op2val:0xbfb211a1; op3val:0x7f1ea613; valaddr_reg:x16; val_offset:96; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 96, x17, x15, 768, x18)

inst_859:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6414a9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3211a1 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1ea613 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee414a9; op2val:0xbfb211a1; op3val:0x7f1ea613; valaddr_reg:x16; val_offset:108; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 108, x17, x15, 776, x18)

inst_860:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6414a9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3211a1 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1ea613 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee414a9; op2val:0xbfb211a1; op3val:0x7f1ea613; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 784, x18)

inst_861:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1bdc6a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x15b123 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x364645 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e9bdc6a; op2val:0xbf15b123; op3val:0x7e364645; valaddr_reg:x16; val_offset:132; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 132, x17, x15, 792, x18)

inst_862:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1bdc6a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x15b123 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x364645 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e9bdc6a; op2val:0xbf15b123; op3val:0x7e364645; valaddr_reg:x16; val_offset:144; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 144, x17, x15, 800, x18)

inst_863:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1bdc6a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x15b123 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x364645 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e9bdc6a; op2val:0xbf15b123; op3val:0x7e364645; valaddr_reg:x16; val_offset:156; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 156, x17, x15, 808, x18)

inst_864:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1bdc6a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x15b123 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x364645 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e9bdc6a; op2val:0xbf15b123; op3val:0x7e364645; valaddr_reg:x16; val_offset:168; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 168, x17, x15, 816, x18)

inst_865:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1bdc6a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x15b123 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x364645 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e9bdc6a; op2val:0xbf15b123; op3val:0x7e364645; valaddr_reg:x16; val_offset:180; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 180, x17, x15, 824, x18)

inst_866:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d723b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0a6ccf and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4ce034 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3d723b; op2val:0xbf0a6ccf; op3val:0x7ecce034; valaddr_reg:x16; val_offset:192; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 192, x17, x15, 832, x18)

inst_867:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d723b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0a6ccf and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4ce034 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3d723b; op2val:0xbf0a6ccf; op3val:0x7ecce034; valaddr_reg:x16; val_offset:204; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 204, x17, x15, 840, x18)

inst_868:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d723b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0a6ccf and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4ce034 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3d723b; op2val:0xbf0a6ccf; op3val:0x7ecce034; valaddr_reg:x16; val_offset:216; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 216, x17, x15, 848, x18)

inst_869:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d723b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0a6ccf and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4ce034 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3d723b; op2val:0xbf0a6ccf; op3val:0x7ecce034; valaddr_reg:x16; val_offset:228; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 228, x17, x15, 856, x18)

inst_870:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d723b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0a6ccf and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4ce034 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3d723b; op2val:0xbf0a6ccf; op3val:0x7ecce034; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 864, x18)

inst_871:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x781bf7 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x19e553 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x1526f9 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7df81bf7; op2val:0xbe99e553; op3val:0x7d1526f9; valaddr_reg:x16; val_offset:252; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 252, x17, x15, 872, x18)

inst_872:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x781bf7 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x19e553 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x1526f9 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7df81bf7; op2val:0xbe99e553; op3val:0x7d1526f9; valaddr_reg:x16; val_offset:264; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 264, x17, x15, 880, x18)

inst_873:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x781bf7 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x19e553 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x1526f9 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7df81bf7; op2val:0xbe99e553; op3val:0x7d1526f9; valaddr_reg:x16; val_offset:276; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 276, x17, x15, 888, x18)

inst_874:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x781bf7 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x19e553 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x1526f9 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7df81bf7; op2val:0xbe99e553; op3val:0x7d1526f9; valaddr_reg:x16; val_offset:288; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 288, x17, x15, 896, x18)

inst_875:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x781bf7 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x19e553 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x1526f9 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7df81bf7; op2val:0xbe99e553; op3val:0x7d1526f9; valaddr_reg:x16; val_offset:300; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 300, x17, x15, 904, x18)

inst_876:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x04524e and fs2 == 1 and fe2 == 0x7f and fm2 == 0x391f1a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3f5f1d and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f04524e; op2val:0xbfb91f1a; op3val:0x7f3f5f1d; valaddr_reg:x16; val_offset:312; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 312, x17, x15, 912, x18)

inst_877:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x04524e and fs2 == 1 and fe2 == 0x7f and fm2 == 0x391f1a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3f5f1d and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f04524e; op2val:0xbfb91f1a; op3val:0x7f3f5f1d; valaddr_reg:x16; val_offset:324; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 324, x17, x15, 920, x18)

inst_878:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x04524e and fs2 == 1 and fe2 == 0x7f and fm2 == 0x391f1a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3f5f1d and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f04524e; op2val:0xbfb91f1a; op3val:0x7f3f5f1d; valaddr_reg:x16; val_offset:336; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 336, x17, x15, 928, x18)

inst_879:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x04524e and fs2 == 1 and fe2 == 0x7f and fm2 == 0x391f1a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3f5f1d and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f04524e; op2val:0xbfb91f1a; op3val:0x7f3f5f1d; valaddr_reg:x16; val_offset:348; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 348, x17, x15, 936, x18)

inst_880:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x04524e and fs2 == 1 and fe2 == 0x7f and fm2 == 0x391f1a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3f5f1d and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f04524e; op2val:0xbfb91f1a; op3val:0x7f3f5f1d; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 944, x18)

inst_881:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x703804 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x73aee7 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x64a94b and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d703804; op2val:0xbff3aee7; op3val:0x7de4a94b; valaddr_reg:x16; val_offset:372; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 372, x17, x15, 952, x18)

inst_882:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x703804 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x73aee7 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x64a94b and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d703804; op2val:0xbff3aee7; op3val:0x7de4a94b; valaddr_reg:x16; val_offset:384; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 384, x17, x15, 960, x18)

inst_883:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x703804 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x73aee7 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x64a94b and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d703804; op2val:0xbff3aee7; op3val:0x7de4a94b; valaddr_reg:x16; val_offset:396; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 396, x17, x15, 968, x18)

inst_884:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x703804 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x73aee7 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x64a94b and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d703804; op2val:0xbff3aee7; op3val:0x7de4a94b; valaddr_reg:x16; val_offset:408; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 408, x17, x15, 976, x18)

inst_885:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x703804 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x73aee7 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x64a94b and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d703804; op2val:0xbff3aee7; op3val:0x7de4a94b; valaddr_reg:x16; val_offset:420; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 420, x17, x15, 984, x18)

inst_886:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x734d68 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0f6a98 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x084d8c and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e734d68; op2val:0xbf0f6a98; op3val:0x7e084d8c; valaddr_reg:x16; val_offset:432; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 432, x17, x15, 992, x18)

inst_887:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x734d68 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0f6a98 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x084d8c and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e734d68; op2val:0xbf0f6a98; op3val:0x7e084d8c; valaddr_reg:x16; val_offset:444; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 444, x17, x15, 1000, x18)

inst_888:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x734d68 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0f6a98 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x084d8c and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e734d68; op2val:0xbf0f6a98; op3val:0x7e084d8c; valaddr_reg:x16; val_offset:456; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 456, x17, x15, 1008, x18)

inst_889:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x734d68 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0f6a98 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x084d8c and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e734d68; op2val:0xbf0f6a98; op3val:0x7e084d8c; valaddr_reg:x16; val_offset:468; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 468, x17, x15, 1016, x18)

inst_890:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x734d68 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0f6a98 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x084d8c and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e734d68; op2val:0xbf0f6a98; op3val:0x7e084d8c; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1024, x18)

inst_891:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5155d6 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x12ba16 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x6ff63d and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ed155d6; op2val:0xbf12ba16; op3val:0x7e6ff63d; valaddr_reg:x16; val_offset:492; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 492, x17, x15, 1032, x18)

inst_892:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5155d6 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x12ba16 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x6ff63d and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ed155d6; op2val:0xbf12ba16; op3val:0x7e6ff63d; valaddr_reg:x16; val_offset:504; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 504, x17, x15, 1040, x18)

inst_893:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5155d6 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x12ba16 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x6ff63d and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ed155d6; op2val:0xbf12ba16; op3val:0x7e6ff63d; valaddr_reg:x16; val_offset:516; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 516, x17, x15, 1048, x18)

inst_894:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5155d6 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x12ba16 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x6ff63d and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ed155d6; op2val:0xbf12ba16; op3val:0x7e6ff63d; valaddr_reg:x16; val_offset:528; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 528, x17, x15, 1056, x18)

inst_895:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5155d6 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x12ba16 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x6ff63d and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ed155d6; op2val:0xbf12ba16; op3val:0x7e6ff63d; valaddr_reg:x16; val_offset:540; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 540, x17, x15, 1064, x18)

inst_896:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x028b61 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2dfcc1 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x317228 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e828b61; op2val:0xc02dfcc1; op3val:0x7f317228; valaddr_reg:x16; val_offset:552; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 552, x17, x15, 1072, x18)

inst_897:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x028b61 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2dfcc1 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x317228 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e828b61; op2val:0xc02dfcc1; op3val:0x7f317228; valaddr_reg:x16; val_offset:564; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 564, x17, x15, 1080, x18)

inst_898:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x028b61 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2dfcc1 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x317228 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e828b61; op2val:0xc02dfcc1; op3val:0x7f317228; valaddr_reg:x16; val_offset:576; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 576, x17, x15, 1088, x18)

inst_899:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x028b61 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2dfcc1 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x317228 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e828b61; op2val:0xc02dfcc1; op3val:0x7f317228; valaddr_reg:x16; val_offset:588; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 588, x17, x15, 1096, x18)

inst_900:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x028b61 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2dfcc1 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x317228 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e828b61; op2val:0xc02dfcc1; op3val:0x7f317228; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1104, x18)

inst_901:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a8ec9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x406305 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3045d1 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eea8ec9; op2val:0xbfc06305; op3val:0x7f3045d1; valaddr_reg:x16; val_offset:612; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 612, x17, x15, 1112, x18)

inst_902:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a8ec9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x406305 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3045d1 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eea8ec9; op2val:0xbfc06305; op3val:0x7f3045d1; valaddr_reg:x16; val_offset:624; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 624, x17, x15, 1120, x18)

inst_903:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a8ec9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x406305 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3045d1 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eea8ec9; op2val:0xbfc06305; op3val:0x7f3045d1; valaddr_reg:x16; val_offset:636; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 636, x17, x15, 1128, x18)

inst_904:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a8ec9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x406305 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3045d1 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eea8ec9; op2val:0xbfc06305; op3val:0x7f3045d1; valaddr_reg:x16; val_offset:648; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 648, x17, x15, 1136, x18)

inst_905:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a8ec9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x406305 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3045d1 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eea8ec9; op2val:0xbfc06305; op3val:0x7f3045d1; valaddr_reg:x16; val_offset:660; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 660, x17, x15, 1144, x18)

inst_906:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0c0d61 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x6f2b41 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x02d828 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d8c0d61; op2val:0xc06f2b41; op3val:0x7e82d828; valaddr_reg:x16; val_offset:672; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 672, x17, x15, 1152, x18)

inst_907:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0c0d61 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x6f2b41 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x02d828 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d8c0d61; op2val:0xc06f2b41; op3val:0x7e82d828; valaddr_reg:x16; val_offset:684; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 684, x17, x15, 1160, x18)

inst_908:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0c0d61 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x6f2b41 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x02d828 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d8c0d61; op2val:0xc06f2b41; op3val:0x7e82d828; valaddr_reg:x16; val_offset:696; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 696, x17, x15, 1168, x18)

inst_909:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0c0d61 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x6f2b41 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x02d828 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d8c0d61; op2val:0xc06f2b41; op3val:0x7e82d828; valaddr_reg:x16; val_offset:708; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 708, x17, x15, 1176, x18)

inst_910:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0c0d61 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x6f2b41 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x02d828 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d8c0d61; op2val:0xc06f2b41; op3val:0x7e82d828; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1184, x18)

inst_911:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x61107d and fs2 == 1 and fe2 == 0x83 and fm2 == 0x4e8dd6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3597f8 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ce1107d; op2val:0xc1ce8dd6; op3val:0x7f3597f8; valaddr_reg:x16; val_offset:732; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 732, x17, x15, 1192, x18)

inst_912:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x61107d and fs2 == 1 and fe2 == 0x83 and fm2 == 0x4e8dd6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3597f8 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ce1107d; op2val:0xc1ce8dd6; op3val:0x7f3597f8; valaddr_reg:x16; val_offset:744; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 744, x17, x15, 1200, x18)

inst_913:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x61107d and fs2 == 1 and fe2 == 0x83 and fm2 == 0x4e8dd6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3597f8 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ce1107d; op2val:0xc1ce8dd6; op3val:0x7f3597f8; valaddr_reg:x16; val_offset:756; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 756, x17, x15, 1208, x18)

inst_914:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x61107d and fs2 == 1 and fe2 == 0x83 and fm2 == 0x4e8dd6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3597f8 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ce1107d; op2val:0xc1ce8dd6; op3val:0x7f3597f8; valaddr_reg:x16; val_offset:768; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 768, x17, x15, 1216, x18)

inst_915:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x61107d and fs2 == 1 and fe2 == 0x83 and fm2 == 0x4e8dd6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3597f8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ce1107d; op2val:0xc1ce8dd6; op3val:0x7f3597f8; valaddr_reg:x16; val_offset:780; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 780, x17, x15, 1224, x18)

inst_916:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x191148 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0a0793 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x250fb1 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f191148; op2val:0xbf8a0793; op3val:0x7f250fb1; valaddr_reg:x16; val_offset:792; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 792, x17, x15, 1232, x18)

inst_917:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x191148 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0a0793 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x250fb1 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f191148; op2val:0xbf8a0793; op3val:0x7f250fb1; valaddr_reg:x16; val_offset:804; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 804, x17, x15, 1240, x18)

inst_918:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x191148 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0a0793 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x250fb1 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f191148; op2val:0xbf8a0793; op3val:0x7f250fb1; valaddr_reg:x16; val_offset:816; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 816, x17, x15, 1248, x18)

inst_919:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x191148 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0a0793 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x250fb1 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f191148; op2val:0xbf8a0793; op3val:0x7f250fb1; valaddr_reg:x16; val_offset:828; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 828, x17, x15, 1256, x18)

inst_920:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x191148 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0a0793 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x250fb1 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f191148; op2val:0xbf8a0793; op3val:0x7f250fb1; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1264, x18)

inst_921:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x25f81d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5da39a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0fb142 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7da5f81d; op2val:0xc0dda39a; op3val:0x7f0fb142; valaddr_reg:x16; val_offset:852; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 852, x17, x15, 1272, x18)

inst_922:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x25f81d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5da39a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0fb142 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7da5f81d; op2val:0xc0dda39a; op3val:0x7f0fb142; valaddr_reg:x16; val_offset:864; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 864, x17, x15, 1280, x18)

inst_923:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x25f81d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5da39a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0fb142 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7da5f81d; op2val:0xc0dda39a; op3val:0x7f0fb142; valaddr_reg:x16; val_offset:876; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 876, x17, x15, 1288, x18)

inst_924:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x25f81d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5da39a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0fb142 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7da5f81d; op2val:0xc0dda39a; op3val:0x7f0fb142; valaddr_reg:x16; val_offset:888; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 888, x17, x15, 1296, x18)

inst_925:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x25f81d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5da39a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0fb142 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7da5f81d; op2val:0xc0dda39a; op3val:0x7f0fb142; valaddr_reg:x16; val_offset:900; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 900, x17, x15, 1304, x18)

inst_926:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x497c49 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3d34f5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x14ea70 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ec97c49; op2val:0xbfbd34f5; op3val:0x7f14ea70; valaddr_reg:x16; val_offset:912; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 912, x17, x15, 1312, x18)

inst_927:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x497c49 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3d34f5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x14ea70 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ec97c49; op2val:0xbfbd34f5; op3val:0x7f14ea70; valaddr_reg:x16; val_offset:924; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 924, x17, x15, 1320, x18)

inst_928:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x497c49 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3d34f5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x14ea70 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ec97c49; op2val:0xbfbd34f5; op3val:0x7f14ea70; valaddr_reg:x16; val_offset:936; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 936, x17, x15, 1328, x18)

inst_929:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x497c49 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3d34f5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x14ea70 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ec97c49; op2val:0xbfbd34f5; op3val:0x7f14ea70; valaddr_reg:x16; val_offset:948; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 948, x17, x15, 1336, x18)

inst_930:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x497c49 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3d34f5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x14ea70 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ec97c49; op2val:0xbfbd34f5; op3val:0x7f14ea70; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 1344, x18)

inst_931:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x043e1b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x03dea5 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x083d97 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e843e1b; op2val:0xbf83dea5; op3val:0x7e883d97; valaddr_reg:x16; val_offset:972; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 972, x17, x15, 1352, x18)

inst_932:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x043e1b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x03dea5 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x083d97 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e843e1b; op2val:0xbf83dea5; op3val:0x7e883d97; valaddr_reg:x16; val_offset:984; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 984, x17, x15, 1360, x18)

inst_933:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x043e1b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x03dea5 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x083d97 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e843e1b; op2val:0xbf83dea5; op3val:0x7e883d97; valaddr_reg:x16; val_offset:996; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 996, x17, x15, 1368, x18)

inst_934:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x043e1b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x03dea5 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x083d97 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e843e1b; op2val:0xbf83dea5; op3val:0x7e883d97; valaddr_reg:x16; val_offset:1008; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1008, x17, x15, 1376, x18)

inst_935:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x043e1b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x03dea5 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x083d97 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e843e1b; op2val:0xbf83dea5; op3val:0x7e883d97; valaddr_reg:x16; val_offset:1020; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1020, x17, x15, 1384, x18)

inst_936:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x327e6a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x01b4a9 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x34df56 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f327e6a; op2val:0xbf81b4a9; op3val:0x7f34df56; valaddr_reg:x16; val_offset:1032; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1032, x17, x15, 1392, x18)

inst_937:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x327e6a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x01b4a9 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x34df56 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f327e6a; op2val:0xbf81b4a9; op3val:0x7f34df56; valaddr_reg:x16; val_offset:1044; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1044, x17, x15, 1400, x18)

inst_938:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x327e6a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x01b4a9 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x34df56 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f327e6a; op2val:0xbf81b4a9; op3val:0x7f34df56; valaddr_reg:x16; val_offset:1056; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1056, x17, x15, 1408, x18)

inst_939:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x327e6a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x01b4a9 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x34df56 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f327e6a; op2val:0xbf81b4a9; op3val:0x7f34df56; valaddr_reg:x16; val_offset:1068; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1068, x17, x15, 1416, x18)

inst_940:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x327e6a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x01b4a9 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x34df56 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f327e6a; op2val:0xbf81b4a9; op3val:0x7f34df56; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 1424, x18)

inst_941:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x16edbb and fs2 == 1 and fe2 == 0x80 and fm2 == 0x761db3 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1119f4 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e16edbb; op2val:0xc0761db3; op3val:0x7f1119f4; valaddr_reg:x16; val_offset:1092; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1092, x17, x15, 1432, x18)

inst_942:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x16edbb and fs2 == 1 and fe2 == 0x80 and fm2 == 0x761db3 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1119f4 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e16edbb; op2val:0xc0761db3; op3val:0x7f1119f4; valaddr_reg:x16; val_offset:1104; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1104, x17, x15, 1440, x18)

inst_943:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x16edbb and fs2 == 1 and fe2 == 0x80 and fm2 == 0x761db3 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1119f4 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e16edbb; op2val:0xc0761db3; op3val:0x7f1119f4; valaddr_reg:x16; val_offset:1116; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1116, x17, x15, 1448, x18)

inst_944:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x16edbb and fs2 == 1 and fe2 == 0x80 and fm2 == 0x761db3 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1119f4 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e16edbb; op2val:0xc0761db3; op3val:0x7f1119f4; valaddr_reg:x16; val_offset:1128; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1128, x17, x15, 1456, x18)

inst_945:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x16edbb and fs2 == 1 and fe2 == 0x80 and fm2 == 0x761db3 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1119f4 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e16edbb; op2val:0xc0761db3; op3val:0x7f1119f4; valaddr_reg:x16; val_offset:1140; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1140, x17, x15, 1464, x18)

inst_946:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0af237 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x28f25d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x376500 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e0af237; op2val:0xc0a8f25d; op3val:0x7f376500; valaddr_reg:x16; val_offset:1152; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1152, x17, x15, 1472, x18)

inst_947:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0af237 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x28f25d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x376500 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e0af237; op2val:0xc0a8f25d; op3val:0x7f376500; valaddr_reg:x16; val_offset:1164; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1164, x17, x15, 1480, x18)

inst_948:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0af237 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x28f25d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x376500 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e0af237; op2val:0xc0a8f25d; op3val:0x7f376500; valaddr_reg:x16; val_offset:1176; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1176, x17, x15, 1488, x18)

inst_949:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0af237 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x28f25d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x376500 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e0af237; op2val:0xc0a8f25d; op3val:0x7f376500; valaddr_reg:x16; val_offset:1188; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1188, x17, x15, 1496, x18)

inst_950:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0af237 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x28f25d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x376500 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e0af237; op2val:0xc0a8f25d; op3val:0x7f376500; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 1504, x18)

inst_951:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x5f1c44 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x24b4d2 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x0f8bb3 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7bdf1c44; op2val:0xc0a4b4d2; op3val:0x7d0f8bb3; valaddr_reg:x16; val_offset:1212; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1212, x17, x15, 1512, x18)

inst_952:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x5f1c44 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x24b4d2 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x0f8bb3 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7bdf1c44; op2val:0xc0a4b4d2; op3val:0x7d0f8bb3; valaddr_reg:x16; val_offset:1224; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1224, x17, x15, 1520, x18)

inst_953:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x5f1c44 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x24b4d2 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x0f8bb3 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7bdf1c44; op2val:0xc0a4b4d2; op3val:0x7d0f8bb3; valaddr_reg:x16; val_offset:1236; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1236, x17, x15, 1528, x18)

inst_954:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x5f1c44 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x24b4d2 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x0f8bb3 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7bdf1c44; op2val:0xc0a4b4d2; op3val:0x7d0f8bb3; valaddr_reg:x16; val_offset:1248; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1248, x17, x15, 1536, x18)

inst_955:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x5f1c44 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x24b4d2 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x0f8bb3 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7bdf1c44; op2val:0xc0a4b4d2; op3val:0x7d0f8bb3; valaddr_reg:x16; val_offset:1260; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1260, x17, x15, 1544, x18)

inst_956:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0c9d65 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4a38ba and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5e26b6 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8c9d65; op2val:0xbfca38ba; op3val:0x7ede26b6; valaddr_reg:x16; val_offset:1272; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1272, x17, x15, 1552, x18)

inst_957:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0c9d65 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4a38ba and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5e26b6 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8c9d65; op2val:0xbfca38ba; op3val:0x7ede26b6; valaddr_reg:x16; val_offset:1284; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1284, x17, x15, 1560, x18)

inst_958:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0c9d65 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4a38ba and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5e26b6 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8c9d65; op2val:0xbfca38ba; op3val:0x7ede26b6; valaddr_reg:x16; val_offset:1296; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1296, x17, x15, 1568, x18)

inst_959:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0c9d65 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4a38ba and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5e26b6 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8c9d65; op2val:0xbfca38ba; op3val:0x7ede26b6; valaddr_reg:x16; val_offset:1308; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1308, x17, x15, 1576, x18)

inst_960:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0c9d65 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4a38ba and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5e26b6 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8c9d65; op2val:0xbfca38ba; op3val:0x7ede26b6; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 1584, x18)

inst_961:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x5e038c and fs2 == 1 and fe2 == 0x84 and fm2 == 0x2e660b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x173ee9 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7c5e038c; op2val:0xc22e660b; op3val:0x7f173ee9; valaddr_reg:x16; val_offset:1332; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1332, x17, x15, 1592, x18)

inst_962:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x5e038c and fs2 == 1 and fe2 == 0x84 and fm2 == 0x2e660b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x173ee9 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7c5e038c; op2val:0xc22e660b; op3val:0x7f173ee9; valaddr_reg:x16; val_offset:1344; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1344, x17, x15, 1600, x18)

inst_963:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x5e038c and fs2 == 1 and fe2 == 0x84 and fm2 == 0x2e660b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x173ee9 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7c5e038c; op2val:0xc22e660b; op3val:0x7f173ee9; valaddr_reg:x16; val_offset:1356; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1356, x17, x15, 1608, x18)

inst_964:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x5e038c and fs2 == 1 and fe2 == 0x84 and fm2 == 0x2e660b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x173ee9 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7c5e038c; op2val:0xc22e660b; op3val:0x7f173ee9; valaddr_reg:x16; val_offset:1368; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1368, x17, x15, 1616, x18)

inst_965:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x5e038c and fs2 == 1 and fe2 == 0x84 and fm2 == 0x2e660b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x173ee9 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7c5e038c; op2val:0xc22e660b; op3val:0x7f173ee9; valaddr_reg:x16; val_offset:1380; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1380, x17, x15, 1624, x18)

inst_966:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0ff5ec and fs2 == 1 and fe2 == 0x7f and fm2 == 0x103b80 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x223795 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0ff5ec; op2val:0xbf903b80; op3val:0x7f223795; valaddr_reg:x16; val_offset:1392; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1392, x17, x15, 1632, x18)

inst_967:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0ff5ec and fs2 == 1 and fe2 == 0x7f and fm2 == 0x103b80 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x223795 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0ff5ec; op2val:0xbf903b80; op3val:0x7f223795; valaddr_reg:x16; val_offset:1404; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1404, x17, x15, 1640, x18)

inst_968:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0ff5ec and fs2 == 1 and fe2 == 0x7f and fm2 == 0x103b80 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x223795 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0ff5ec; op2val:0xbf903b80; op3val:0x7f223795; valaddr_reg:x16; val_offset:1416; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1416, x17, x15, 1648, x18)

inst_969:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0ff5ec and fs2 == 1 and fe2 == 0x7f and fm2 == 0x103b80 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x223795 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0ff5ec; op2val:0xbf903b80; op3val:0x7f223795; valaddr_reg:x16; val_offset:1428; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1428, x17, x15, 1656, x18)

inst_970:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0ff5ec and fs2 == 1 and fe2 == 0x7f and fm2 == 0x103b80 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x223795 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0ff5ec; op2val:0xbf903b80; op3val:0x7f223795; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 1664, x18)

inst_971:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b3817 and fs2 == 1 and fe2 == 0x79 and fm2 == 0x401917 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x0c7c6b and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3b3817; op2val:0xbcc01917; op3val:0x7c8c7c6b; valaddr_reg:x16; val_offset:1452; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1452, x17, x15, 1672, x18)

inst_972:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b3817 and fs2 == 1 and fe2 == 0x79 and fm2 == 0x401917 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x0c7c6b and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3b3817; op2val:0xbcc01917; op3val:0x7c8c7c6b; valaddr_reg:x16; val_offset:1464; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1464, x17, x15, 1680, x18)

inst_973:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b3817 and fs2 == 1 and fe2 == 0x79 and fm2 == 0x401917 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x0c7c6b and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3b3817; op2val:0xbcc01917; op3val:0x7c8c7c6b; valaddr_reg:x16; val_offset:1476; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1476, x17, x15, 1688, x18)

inst_974:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b3817 and fs2 == 1 and fe2 == 0x79 and fm2 == 0x401917 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x0c7c6b and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3b3817; op2val:0xbcc01917; op3val:0x7c8c7c6b; valaddr_reg:x16; val_offset:1488; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1488, x17, x15, 1696, x18)

inst_975:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b3817 and fs2 == 1 and fe2 == 0x79 and fm2 == 0x401917 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x0c7c6b and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3b3817; op2val:0xbcc01917; op3val:0x7c8c7c6b; valaddr_reg:x16; val_offset:1500; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1500, x17, x15, 1704, x18)

inst_976:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x074be5 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x25a9d6 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x2f1b5a and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f074be5; op2val:0xbda5a9d6; op3val:0x7d2f1b5a; valaddr_reg:x16; val_offset:1512; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1512, x17, x15, 1712, x18)

inst_977:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x074be5 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x25a9d6 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x2f1b5a and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f074be5; op2val:0xbda5a9d6; op3val:0x7d2f1b5a; valaddr_reg:x16; val_offset:1524; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1524, x17, x15, 1720, x18)

inst_978:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x074be5 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x25a9d6 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x2f1b5a and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f074be5; op2val:0xbda5a9d6; op3val:0x7d2f1b5a; valaddr_reg:x16; val_offset:1536; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1536, x17, x15, 1728, x18)

inst_979:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x074be5 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x25a9d6 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x2f1b5a and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f074be5; op2val:0xbda5a9d6; op3val:0x7d2f1b5a; valaddr_reg:x16; val_offset:1548; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1548, x17, x15, 1736, x18)

inst_980:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x074be5 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x25a9d6 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x2f1b5a and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f074be5; op2val:0xbda5a9d6; op3val:0x7d2f1b5a; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1744, x18)

inst_981:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x728772 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x430d36 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x38c9b0 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e728772; op2val:0xbfc30d36; op3val:0x7eb8c9b0; valaddr_reg:x16; val_offset:1572; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1572, x17, x15, 1752, x18)

inst_982:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x728772 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x430d36 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x38c9b0 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e728772; op2val:0xbfc30d36; op3val:0x7eb8c9b0; valaddr_reg:x16; val_offset:1584; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1584, x17, x15, 1760, x18)

inst_983:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x728772 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x430d36 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x38c9b0 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e728772; op2val:0xbfc30d36; op3val:0x7eb8c9b0; valaddr_reg:x16; val_offset:1596; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1596, x17, x15, 1768, x18)

inst_984:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x728772 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x430d36 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x38c9b0 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e728772; op2val:0xbfc30d36; op3val:0x7eb8c9b0; valaddr_reg:x16; val_offset:1608; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1608, x17, x15, 1776, x18)

inst_985:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x728772 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x430d36 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x38c9b0 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e728772; op2val:0xbfc30d36; op3val:0x7eb8c9b0; valaddr_reg:x16; val_offset:1620; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1620, x17, x15, 1784, x18)

inst_986:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d27cc and fs2 == 1 and fe2 == 0x7e and fm2 == 0x165ba8 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x389b2c and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1d27cc; op2val:0xbf165ba8; op3val:0x7eb89b2c; valaddr_reg:x16; val_offset:1632; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1632, x17, x15, 1792, x18)

inst_987:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d27cc and fs2 == 1 and fe2 == 0x7e and fm2 == 0x165ba8 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x389b2c and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1d27cc; op2val:0xbf165ba8; op3val:0x7eb89b2c; valaddr_reg:x16; val_offset:1644; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1644, x17, x15, 1800, x18)

inst_988:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d27cc and fs2 == 1 and fe2 == 0x7e and fm2 == 0x165ba8 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x389b2c and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1d27cc; op2val:0xbf165ba8; op3val:0x7eb89b2c; valaddr_reg:x16; val_offset:1656; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1656, x17, x15, 1808, x18)

inst_989:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d27cc and fs2 == 1 and fe2 == 0x7e and fm2 == 0x165ba8 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x389b2c and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1d27cc; op2val:0xbf165ba8; op3val:0x7eb89b2c; valaddr_reg:x16; val_offset:1668; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1668, x17, x15, 1816, x18)

inst_990:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d27cc and fs2 == 1 and fe2 == 0x7e and fm2 == 0x165ba8 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x389b2c and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1d27cc; op2val:0xbf165ba8; op3val:0x7eb89b2c; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1824, x18)

inst_991:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x01c09c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6ad52b and fs3 == 0 and fe3 == 0xfc and fm3 == 0x6e0c34 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e81c09c; op2val:0xbf6ad52b; op3val:0x7e6e0c34; valaddr_reg:x16; val_offset:1692; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1692, x17, x15, 1832, x18)

inst_992:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x01c09c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6ad52b and fs3 == 0 and fe3 == 0xfc and fm3 == 0x6e0c34 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e81c09c; op2val:0xbf6ad52b; op3val:0x7e6e0c34; valaddr_reg:x16; val_offset:1704; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1704, x17, x15, 1840, x18)

inst_993:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x01c09c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6ad52b and fs3 == 0 and fe3 == 0xfc and fm3 == 0x6e0c34 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e81c09c; op2val:0xbf6ad52b; op3val:0x7e6e0c34; valaddr_reg:x16; val_offset:1716; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1716, x17, x15, 1848, x18)

inst_994:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x01c09c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6ad52b and fs3 == 0 and fe3 == 0xfc and fm3 == 0x6e0c34 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e81c09c; op2val:0xbf6ad52b; op3val:0x7e6e0c34; valaddr_reg:x16; val_offset:1728; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1728, x17, x15, 1856, x18)

inst_995:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x01c09c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6ad52b and fs3 == 0 and fe3 == 0xfc and fm3 == 0x6e0c34 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e81c09c; op2val:0xbf6ad52b; op3val:0x7e6e0c34; valaddr_reg:x16; val_offset:1740; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1740, x17, x15, 1864, x18)

inst_996:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x26497d and fs2 == 1 and fe2 == 0x86 and fm2 == 0x486327 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0229d2 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7b26497d; op2val:0xc3486327; op3val:0x7f0229d2; valaddr_reg:x16; val_offset:1752; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1752, x17, x15, 1872, x18)

inst_997:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x26497d and fs2 == 1 and fe2 == 0x86 and fm2 == 0x486327 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0229d2 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7b26497d; op2val:0xc3486327; op3val:0x7f0229d2; valaddr_reg:x16; val_offset:1764; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1764, x17, x15, 1880, x18)

inst_998:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x26497d and fs2 == 1 and fe2 == 0x86 and fm2 == 0x486327 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0229d2 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7b26497d; op2val:0xc3486327; op3val:0x7f0229d2; valaddr_reg:x16; val_offset:1776; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1776, x17, x15, 1888, x18)

inst_999:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x26497d and fs2 == 1 and fe2 == 0x86 and fm2 == 0x486327 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0229d2 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7b26497d; op2val:0xc3486327; op3val:0x7f0229d2; valaddr_reg:x16; val_offset:1788; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1788, x17, x15, 1896, x18)

inst_1000:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x26497d and fs2 == 1 and fe2 == 0x86 and fm2 == 0x486327 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0229d2 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7b26497d; op2val:0xc3486327; op3val:0x7f0229d2; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1904, x18)

inst_1001:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x67719b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x00154c and fs3 == 0 and fe3 == 0xfd and fm3 == 0x67981f and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e67719b; op2val:0xc000154c; op3val:0x7ee7981f; valaddr_reg:x16; val_offset:1812; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1812, x17, x15, 1912, x18)

inst_1002:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x67719b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x00154c and fs3 == 0 and fe3 == 0xfd and fm3 == 0x67981f and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e67719b; op2val:0xc000154c; op3val:0x7ee7981f; valaddr_reg:x16; val_offset:1824; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1824, x17, x15, 1920, x18)

inst_1003:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x67719b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x00154c and fs3 == 0 and fe3 == 0xfd and fm3 == 0x67981f and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e67719b; op2val:0xc000154c; op3val:0x7ee7981f; valaddr_reg:x16; val_offset:1836; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1836, x17, x15, 1928, x18)

inst_1004:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x67719b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x00154c and fs3 == 0 and fe3 == 0xfd and fm3 == 0x67981f and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e67719b; op2val:0xc000154c; op3val:0x7ee7981f; valaddr_reg:x16; val_offset:1848; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1848, x17, x15, 1936, x18)

inst_1005:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x67719b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x00154c and fs3 == 0 and fe3 == 0xfd and fm3 == 0x67981f and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e67719b; op2val:0xc000154c; op3val:0x7ee7981f; valaddr_reg:x16; val_offset:1860; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1860, x17, x15, 1944, x18)

inst_1006:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5fcc51 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x64e70b and fs3 == 0 and fe3 == 0xfa and fm3 == 0x481bf3 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ddfcc51; op2val:0xbee4e70b; op3val:0x7d481bf3; valaddr_reg:x16; val_offset:1872; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1872, x17, x15, 1952, x18)

inst_1007:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5fcc51 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x64e70b and fs3 == 0 and fe3 == 0xfa and fm3 == 0x481bf3 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ddfcc51; op2val:0xbee4e70b; op3val:0x7d481bf3; valaddr_reg:x16; val_offset:1884; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1884, x17, x15, 1960, x18)

inst_1008:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5fcc51 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x64e70b and fs3 == 0 and fe3 == 0xfa and fm3 == 0x481bf3 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ddfcc51; op2val:0xbee4e70b; op3val:0x7d481bf3; valaddr_reg:x16; val_offset:1896; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1896, x17, x15, 1968, x18)

inst_1009:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5fcc51 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x64e70b and fs3 == 0 and fe3 == 0xfa and fm3 == 0x481bf3 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ddfcc51; op2val:0xbee4e70b; op3val:0x7d481bf3; valaddr_reg:x16; val_offset:1908; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1908, x17, x15, 1976, x18)

inst_1010:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5fcc51 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x64e70b and fs3 == 0 and fe3 == 0xfa and fm3 == 0x481bf3 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ddfcc51; op2val:0xbee4e70b; op3val:0x7d481bf3; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1984, x18)

inst_1011:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0ab269 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6b3fb1 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x7ee893 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8ab269; op2val:0xbeeb3fb1; op3val:0x7dfee893; valaddr_reg:x16; val_offset:1932; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1932, x17, x15, 1992, x18)

inst_1012:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0ab269 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6b3fb1 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x7ee893 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8ab269; op2val:0xbeeb3fb1; op3val:0x7dfee893; valaddr_reg:x16; val_offset:1944; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1944, x17, x15, 2000, x18)

inst_1013:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0ab269 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6b3fb1 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x7ee893 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8ab269; op2val:0xbeeb3fb1; op3val:0x7dfee893; valaddr_reg:x16; val_offset:1956; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1956, x17, x15, 2008, x18)

inst_1014:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0ab269 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6b3fb1 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x7ee893 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8ab269; op2val:0xbeeb3fb1; op3val:0x7dfee893; valaddr_reg:x16; val_offset:1968; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1968, x17, x15, 2016, x18)

inst_1015:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0ab269 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6b3fb1 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x7ee893 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8ab269; op2val:0xbeeb3fb1; op3val:0x7dfee893; valaddr_reg:x16; val_offset:1980; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1980, x17, x15, 2024, x18)
RVTEST_SIGBASE(x15,signature_x15_5)

inst_1016:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2b9930 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x2b2afd and fs3 == 0 and fe3 == 0xfc and fm3 == 0x657849 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2b9930; op2val:0xbeab2afd; op3val:0x7e657849; valaddr_reg:x16; val_offset:1992; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1992, x17, x15, 0, x18)

inst_1017:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2b9930 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x2b2afd and fs3 == 0 and fe3 == 0xfc and fm3 == 0x657849 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2b9930; op2val:0xbeab2afd; op3val:0x7e657849; valaddr_reg:x16; val_offset:2004; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 2004, x17, x15, 8, x18)

inst_1018:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2b9930 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x2b2afd and fs3 == 0 and fe3 == 0xfc and fm3 == 0x657849 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2b9930; op2val:0xbeab2afd; op3val:0x7e657849; valaddr_reg:x16; val_offset:2016; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 2016, x17, x15, 16, x18)

inst_1019:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2b9930 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x2b2afd and fs3 == 0 and fe3 == 0xfc and fm3 == 0x657849 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2b9930; op2val:0xbeab2afd; op3val:0x7e657849; valaddr_reg:x16; val_offset:2028; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 2028, x17, x15, 24, x18)
addi x16,x16,2040

inst_1020:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2b9930 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x2b2afd and fs3 == 0 and fe3 == 0xfc and fm3 == 0x657849 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2b9930; op2val:0xbeab2afd; op3val:0x7e657849; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 32, x18)

inst_1021:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x049a6e and fs2 == 1 and fe2 == 0x7f and fm2 == 0x332355 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x399491 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f049a6e; op2val:0xbfb32355; op3val:0x7f399491; valaddr_reg:x16; val_offset:12; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 12, x17, x15, 40, x18)

inst_1022:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x049a6e and fs2 == 1 and fe2 == 0x7f and fm2 == 0x332355 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x399491 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f049a6e; op2val:0xbfb32355; op3val:0x7f399491; valaddr_reg:x16; val_offset:24; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 24, x17, x15, 48, x18)

inst_1023:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x049a6e and fs2 == 1 and fe2 == 0x7f and fm2 == 0x332355 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x399491 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f049a6e; op2val:0xbfb32355; op3val:0x7f399491; valaddr_reg:x16; val_offset:36; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 36, x17, x15, 56, x18)

inst_1024:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x049a6e and fs2 == 1 and fe2 == 0x7f and fm2 == 0x332355 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x399491 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f049a6e; op2val:0xbfb32355; op3val:0x7f399491; valaddr_reg:x16; val_offset:48; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 48, x17, x15, 64, x18)

inst_1025:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x049a6e and fs2 == 1 and fe2 == 0x7f and fm2 == 0x332355 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x399491 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f049a6e; op2val:0xbfb32355; op3val:0x7f399491; valaddr_reg:x16; val_offset:60; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 60, x17, x15, 72, x18)

inst_1026:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1d454a and fs2 == 1 and fe2 == 0x81 and fm2 == 0x130ace and fs3 == 0 and fe3 == 0xfe and fm3 == 0x34aad9 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e1d454a; op2val:0xc0930ace; op3val:0x7f34aad9; valaddr_reg:x16; val_offset:72; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 72, x17, x15, 80, x18)

inst_1027:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1d454a and fs2 == 1 and fe2 == 0x81 and fm2 == 0x130ace and fs3 == 0 and fe3 == 0xfe and fm3 == 0x34aad9 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e1d454a; op2val:0xc0930ace; op3val:0x7f34aad9; valaddr_reg:x16; val_offset:84; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 84, x17, x15, 88, x18)

inst_1028:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1d454a and fs2 == 1 and fe2 == 0x81 and fm2 == 0x130ace and fs3 == 0 and fe3 == 0xfe and fm3 == 0x34aad9 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e1d454a; op2val:0xc0930ace; op3val:0x7f34aad9; valaddr_reg:x16; val_offset:96; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 96, x17, x15, 96, x18)

inst_1029:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1d454a and fs2 == 1 and fe2 == 0x81 and fm2 == 0x130ace and fs3 == 0 and fe3 == 0xfe and fm3 == 0x34aad9 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e1d454a; op2val:0xc0930ace; op3val:0x7f34aad9; valaddr_reg:x16; val_offset:108; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 108, x17, x15, 104, x18)

inst_1030:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1d454a and fs2 == 1 and fe2 == 0x81 and fm2 == 0x130ace and fs3 == 0 and fe3 == 0xfe and fm3 == 0x34aad9 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e1d454a; op2val:0xc0930ace; op3val:0x7f34aad9; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 112, x18)

inst_1031:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4f0fd2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x20e6fd and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0224b8 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ecf0fd2; op2val:0xbfa0e6fd; op3val:0x7f0224b8; valaddr_reg:x16; val_offset:132; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 132, x17, x15, 120, x18)

inst_1032:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4f0fd2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x20e6fd and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0224b8 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ecf0fd2; op2val:0xbfa0e6fd; op3val:0x7f0224b8; valaddr_reg:x16; val_offset:144; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 144, x17, x15, 128, x18)

inst_1033:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4f0fd2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x20e6fd and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0224b8 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ecf0fd2; op2val:0xbfa0e6fd; op3val:0x7f0224b8; valaddr_reg:x16; val_offset:156; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 156, x17, x15, 136, x18)

inst_1034:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4f0fd2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x20e6fd and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0224b8 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ecf0fd2; op2val:0xbfa0e6fd; op3val:0x7f0224b8; valaddr_reg:x16; val_offset:168; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 168, x17, x15, 144, x18)

inst_1035:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4f0fd2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x20e6fd and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0224b8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ecf0fd2; op2val:0xbfa0e6fd; op3val:0x7f0224b8; valaddr_reg:x16; val_offset:180; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 180, x17, x15, 152, x18)

inst_1036:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5e2fb5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x54b2a7 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x389a90 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e5e2fb5; op2val:0xc054b2a7; op3val:0x7f389a90; valaddr_reg:x16; val_offset:192; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 192, x17, x15, 160, x18)

inst_1037:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5e2fb5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x54b2a7 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x389a90 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e5e2fb5; op2val:0xc054b2a7; op3val:0x7f389a90; valaddr_reg:x16; val_offset:204; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 204, x17, x15, 168, x18)

inst_1038:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5e2fb5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x54b2a7 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x389a90 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e5e2fb5; op2val:0xc054b2a7; op3val:0x7f389a90; valaddr_reg:x16; val_offset:216; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 216, x17, x15, 176, x18)

inst_1039:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5e2fb5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x54b2a7 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x389a90 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e5e2fb5; op2val:0xc054b2a7; op3val:0x7f389a90; valaddr_reg:x16; val_offset:228; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 228, x17, x15, 184, x18)

inst_1040:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5e2fb5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x54b2a7 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x389a90 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e5e2fb5; op2val:0xc054b2a7; op3val:0x7f389a90; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 192, x18)

inst_1041:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3c9ff5 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x635528 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x278095 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3c9ff5; op2val:0xbf635528; op3val:0x7f278095; valaddr_reg:x16; val_offset:252; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 252, x17, x15, 200, x18)

inst_1042:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3c9ff5 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x635528 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x278095 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3c9ff5; op2val:0xbf635528; op3val:0x7f278095; valaddr_reg:x16; val_offset:264; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 264, x17, x15, 208, x18)

inst_1043:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3c9ff5 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x635528 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x278095 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3c9ff5; op2val:0xbf635528; op3val:0x7f278095; valaddr_reg:x16; val_offset:276; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 276, x17, x15, 216, x18)

inst_1044:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3c9ff5 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x635528 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x278095 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3c9ff5; op2val:0xbf635528; op3val:0x7f278095; valaddr_reg:x16; val_offset:288; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 288, x17, x15, 224, x18)

inst_1045:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3c9ff5 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x635528 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x278095 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3c9ff5; op2val:0xbf635528; op3val:0x7f278095; valaddr_reg:x16; val_offset:300; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 300, x17, x15, 232, x18)

inst_1046:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20dccc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x03ae89 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x257d51 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e20dccc; op2val:0xbf83ae89; op3val:0x7e257d51; valaddr_reg:x16; val_offset:312; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 312, x17, x15, 240, x18)

inst_1047:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20dccc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x03ae89 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x257d51 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e20dccc; op2val:0xbf83ae89; op3val:0x7e257d51; valaddr_reg:x16; val_offset:324; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 324, x17, x15, 248, x18)

inst_1048:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20dccc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x03ae89 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x257d51 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e20dccc; op2val:0xbf83ae89; op3val:0x7e257d51; valaddr_reg:x16; val_offset:336; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 336, x17, x15, 256, x18)

inst_1049:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20dccc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x03ae89 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x257d51 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e20dccc; op2val:0xbf83ae89; op3val:0x7e257d51; valaddr_reg:x16; val_offset:348; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 348, x17, x15, 264, x18)

inst_1050:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x20dccc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x03ae89 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x257d51 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e20dccc; op2val:0xbf83ae89; op3val:0x7e257d51; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 272, x18)

inst_1051:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x2e79de and fs2 == 1 and fe2 == 0x87 and fm2 == 0x757c34 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x274f48 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7aae79de; op2val:0xc3f57c34; op3val:0x7f274f48; valaddr_reg:x16; val_offset:372; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 372, x17, x15, 280, x18)

inst_1052:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x2e79de and fs2 == 1 and fe2 == 0x87 and fm2 == 0x757c34 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x274f48 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7aae79de; op2val:0xc3f57c34; op3val:0x7f274f48; valaddr_reg:x16; val_offset:384; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 384, x17, x15, 288, x18)

inst_1053:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x2e79de and fs2 == 1 and fe2 == 0x87 and fm2 == 0x757c34 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x274f48 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7aae79de; op2val:0xc3f57c34; op3val:0x7f274f48; valaddr_reg:x16; val_offset:396; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 396, x17, x15, 296, x18)

inst_1054:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x2e79de and fs2 == 1 and fe2 == 0x87 and fm2 == 0x757c34 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x274f48 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7aae79de; op2val:0xc3f57c34; op3val:0x7f274f48; valaddr_reg:x16; val_offset:408; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 408, x17, x15, 304, x18)

inst_1055:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x2e79de and fs2 == 1 and fe2 == 0x87 and fm2 == 0x757c34 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x274f48 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7aae79de; op2val:0xc3f57c34; op3val:0x7f274f48; valaddr_reg:x16; val_offset:420; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 420, x17, x15, 312, x18)

inst_1056:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6d1a0c and fs2 == 1 and fe2 == 0x7c and fm2 == 0x521f16 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x429c29 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eed1a0c; op2val:0xbe521f16; op3val:0x7dc29c29; valaddr_reg:x16; val_offset:432; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 432, x17, x15, 320, x18)

inst_1057:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6d1a0c and fs2 == 1 and fe2 == 0x7c and fm2 == 0x521f16 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x429c29 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eed1a0c; op2val:0xbe521f16; op3val:0x7dc29c29; valaddr_reg:x16; val_offset:444; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 444, x17, x15, 328, x18)

inst_1058:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6d1a0c and fs2 == 1 and fe2 == 0x7c and fm2 == 0x521f16 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x429c29 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eed1a0c; op2val:0xbe521f16; op3val:0x7dc29c29; valaddr_reg:x16; val_offset:456; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 456, x17, x15, 336, x18)

inst_1059:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6d1a0c and fs2 == 1 and fe2 == 0x7c and fm2 == 0x521f16 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x429c29 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eed1a0c; op2val:0xbe521f16; op3val:0x7dc29c29; valaddr_reg:x16; val_offset:468; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 468, x17, x15, 344, x18)

inst_1060:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6d1a0c and fs2 == 1 and fe2 == 0x7c and fm2 == 0x521f16 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x429c29 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eed1a0c; op2val:0xbe521f16; op3val:0x7dc29c29; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 352, x18)

inst_1061:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x190d5e and fs2 == 1 and fe2 == 0x7c and fm2 == 0x32420c and fs3 == 0 and fe3 == 0xfb and fm3 == 0x552591 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f190d5e; op2val:0xbe32420c; op3val:0x7dd52591; valaddr_reg:x16; val_offset:492; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 492, x17, x15, 360, x18)

inst_1062:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x190d5e and fs2 == 1 and fe2 == 0x7c and fm2 == 0x32420c and fs3 == 0 and fe3 == 0xfb and fm3 == 0x552591 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f190d5e; op2val:0xbe32420c; op3val:0x7dd52591; valaddr_reg:x16; val_offset:504; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 504, x17, x15, 368, x18)

inst_1063:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x190d5e and fs2 == 1 and fe2 == 0x7c and fm2 == 0x32420c and fs3 == 0 and fe3 == 0xfb and fm3 == 0x552591 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f190d5e; op2val:0xbe32420c; op3val:0x7dd52591; valaddr_reg:x16; val_offset:516; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 516, x17, x15, 376, x18)

inst_1064:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x190d5e and fs2 == 1 and fe2 == 0x7c and fm2 == 0x32420c and fs3 == 0 and fe3 == 0xfb and fm3 == 0x552591 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f190d5e; op2val:0xbe32420c; op3val:0x7dd52591; valaddr_reg:x16; val_offset:528; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 528, x17, x15, 384, x18)

inst_1065:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x190d5e and fs2 == 1 and fe2 == 0x7c and fm2 == 0x32420c and fs3 == 0 and fe3 == 0xfb and fm3 == 0x552591 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f190d5e; op2val:0xbe32420c; op3val:0x7dd52591; valaddr_reg:x16; val_offset:540; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 540, x17, x15, 392, x18)

inst_1066:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1304ef and fs2 == 1 and fe2 == 0x7c and fm2 == 0x557010 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x7526ed and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1304ef; op2val:0xbe557010; op3val:0x7df526ed; valaddr_reg:x16; val_offset:552; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 552, x17, x15, 400, x18)

inst_1067:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1304ef and fs2 == 1 and fe2 == 0x7c and fm2 == 0x557010 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x7526ed and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1304ef; op2val:0xbe557010; op3val:0x7df526ed; valaddr_reg:x16; val_offset:564; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 564, x17, x15, 408, x18)

inst_1068:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1304ef and fs2 == 1 and fe2 == 0x7c and fm2 == 0x557010 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x7526ed and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1304ef; op2val:0xbe557010; op3val:0x7df526ed; valaddr_reg:x16; val_offset:576; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 576, x17, x15, 416, x18)

inst_1069:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1304ef and fs2 == 1 and fe2 == 0x7c and fm2 == 0x557010 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x7526ed and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1304ef; op2val:0xbe557010; op3val:0x7df526ed; valaddr_reg:x16; val_offset:588; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 588, x17, x15, 424, x18)

inst_1070:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1304ef and fs2 == 1 and fe2 == 0x7c and fm2 == 0x557010 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x7526ed and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1304ef; op2val:0xbe557010; op3val:0x7df526ed; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 432, x18)

inst_1071:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x56a477 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x51d69a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2ff034 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e56a477; op2val:0xc051d69a; op3val:0x7f2ff034; valaddr_reg:x16; val_offset:612; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 612, x17, x15, 440, x18)

inst_1072:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x56a477 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x51d69a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2ff034 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e56a477; op2val:0xc051d69a; op3val:0x7f2ff034; valaddr_reg:x16; val_offset:624; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 624, x17, x15, 448, x18)

inst_1073:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x56a477 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x51d69a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2ff034 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e56a477; op2val:0xc051d69a; op3val:0x7f2ff034; valaddr_reg:x16; val_offset:636; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 636, x17, x15, 456, x18)

inst_1074:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x56a477 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x51d69a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2ff034 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e56a477; op2val:0xc051d69a; op3val:0x7f2ff034; valaddr_reg:x16; val_offset:648; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 648, x17, x15, 464, x18)

inst_1075:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x56a477 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x51d69a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2ff034 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e56a477; op2val:0xc051d69a; op3val:0x7f2ff034; valaddr_reg:x16; val_offset:660; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 660, x17, x15, 472, x18)

inst_1076:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x2125ab and fs2 == 1 and fe2 == 0x83 and fm2 == 0x0435fb and fs3 == 0 and fe3 == 0xfc and fm3 == 0x2672cf and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7c2125ab; op2val:0xc18435fb; op3val:0x7e2672cf; valaddr_reg:x16; val_offset:672; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 672, x17, x15, 480, x18)

inst_1077:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x2125ab and fs2 == 1 and fe2 == 0x83 and fm2 == 0x0435fb and fs3 == 0 and fe3 == 0xfc and fm3 == 0x2672cf and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7c2125ab; op2val:0xc18435fb; op3val:0x7e2672cf; valaddr_reg:x16; val_offset:684; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 684, x17, x15, 488, x18)

inst_1078:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x2125ab and fs2 == 1 and fe2 == 0x83 and fm2 == 0x0435fb and fs3 == 0 and fe3 == 0xfc and fm3 == 0x2672cf and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7c2125ab; op2val:0xc18435fb; op3val:0x7e2672cf; valaddr_reg:x16; val_offset:696; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 696, x17, x15, 496, x18)

inst_1079:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x2125ab and fs2 == 1 and fe2 == 0x83 and fm2 == 0x0435fb and fs3 == 0 and fe3 == 0xfc and fm3 == 0x2672cf and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7c2125ab; op2val:0xc18435fb; op3val:0x7e2672cf; valaddr_reg:x16; val_offset:708; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 708, x17, x15, 504, x18)

inst_1080:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x2125ab and fs2 == 1 and fe2 == 0x83 and fm2 == 0x0435fb and fs3 == 0 and fe3 == 0xfc and fm3 == 0x2672cf and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7c2125ab; op2val:0xc18435fb; op3val:0x7e2672cf; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 512, x18)

inst_1081:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x50cddd and fs2 == 1 and fe2 == 0x7f and fm2 == 0x071ab8 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5c64b6 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ed0cddd; op2val:0xbf871ab8; op3val:0x7edc64b6; valaddr_reg:x16; val_offset:732; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 732, x17, x15, 520, x18)

inst_1082:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x50cddd and fs2 == 1 and fe2 == 0x7f and fm2 == 0x071ab8 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5c64b6 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ed0cddd; op2val:0xbf871ab8; op3val:0x7edc64b6; valaddr_reg:x16; val_offset:744; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 744, x17, x15, 528, x18)

inst_1083:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x50cddd and fs2 == 1 and fe2 == 0x7f and fm2 == 0x071ab8 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5c64b6 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ed0cddd; op2val:0xbf871ab8; op3val:0x7edc64b6; valaddr_reg:x16; val_offset:756; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 756, x17, x15, 536, x18)

inst_1084:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x50cddd and fs2 == 1 and fe2 == 0x7f and fm2 == 0x071ab8 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5c64b6 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ed0cddd; op2val:0xbf871ab8; op3val:0x7edc64b6; valaddr_reg:x16; val_offset:768; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 768, x17, x15, 544, x18)

inst_1085:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x50cddd and fs2 == 1 and fe2 == 0x7f and fm2 == 0x071ab8 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5c64b6 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ed0cddd; op2val:0xbf871ab8; op3val:0x7edc64b6; valaddr_reg:x16; val_offset:780; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 780, x17, x15, 552, x18)

inst_1086:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x341f5c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0691ee and fs3 == 0 and fe3 == 0xfc and fm3 == 0x3d5e30 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb41f5c; op2val:0xbf0691ee; op3val:0x7e3d5e30; valaddr_reg:x16; val_offset:792; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 792, x17, x15, 560, x18)

inst_1087:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x341f5c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0691ee and fs3 == 0 and fe3 == 0xfc and fm3 == 0x3d5e30 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb41f5c; op2val:0xbf0691ee; op3val:0x7e3d5e30; valaddr_reg:x16; val_offset:804; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 804, x17, x15, 568, x18)

inst_1088:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x341f5c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0691ee and fs3 == 0 and fe3 == 0xfc and fm3 == 0x3d5e30 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb41f5c; op2val:0xbf0691ee; op3val:0x7e3d5e30; valaddr_reg:x16; val_offset:816; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 816, x17, x15, 576, x18)

inst_1089:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x341f5c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0691ee and fs3 == 0 and fe3 == 0xfc and fm3 == 0x3d5e30 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb41f5c; op2val:0xbf0691ee; op3val:0x7e3d5e30; valaddr_reg:x16; val_offset:828; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 828, x17, x15, 584, x18)

inst_1090:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x341f5c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0691ee and fs3 == 0 and fe3 == 0xfc and fm3 == 0x3d5e30 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb41f5c; op2val:0xbf0691ee; op3val:0x7e3d5e30; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 592, x18)

inst_1091:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cf90f and fs2 == 1 and fe2 == 0x7c and fm2 == 0x00acab and fs3 == 0 and fe3 == 0xfb and fm3 == 0x2de265 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2cf90f; op2val:0xbe00acab; op3val:0x7dade265; valaddr_reg:x16; val_offset:852; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 852, x17, x15, 600, x18)

inst_1092:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cf90f and fs2 == 1 and fe2 == 0x7c and fm2 == 0x00acab and fs3 == 0 and fe3 == 0xfb and fm3 == 0x2de265 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2cf90f; op2val:0xbe00acab; op3val:0x7dade265; valaddr_reg:x16; val_offset:864; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 864, x17, x15, 608, x18)

inst_1093:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cf90f and fs2 == 1 and fe2 == 0x7c and fm2 == 0x00acab and fs3 == 0 and fe3 == 0xfb and fm3 == 0x2de265 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2cf90f; op2val:0xbe00acab; op3val:0x7dade265; valaddr_reg:x16; val_offset:876; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 876, x17, x15, 616, x18)

inst_1094:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cf90f and fs2 == 1 and fe2 == 0x7c and fm2 == 0x00acab and fs3 == 0 and fe3 == 0xfb and fm3 == 0x2de265 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2cf90f; op2val:0xbe00acab; op3val:0x7dade265; valaddr_reg:x16; val_offset:888; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 888, x17, x15, 624, x18)

inst_1095:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cf90f and fs2 == 1 and fe2 == 0x7c and fm2 == 0x00acab and fs3 == 0 and fe3 == 0xfb and fm3 == 0x2de265 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2cf90f; op2val:0xbe00acab; op3val:0x7dade265; valaddr_reg:x16; val_offset:900; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 900, x17, x15, 632, x18)

inst_1096:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x351fde and fs2 == 1 and fe2 == 0x7e and fm2 == 0x301cf4 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7934ca and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f351fde; op2val:0xbf301cf4; op3val:0x7ef934ca; valaddr_reg:x16; val_offset:912; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 912, x17, x15, 640, x18)

inst_1097:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x351fde and fs2 == 1 and fe2 == 0x7e and fm2 == 0x301cf4 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7934ca and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f351fde; op2val:0xbf301cf4; op3val:0x7ef934ca; valaddr_reg:x16; val_offset:924; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 924, x17, x15, 648, x18)

inst_1098:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x351fde and fs2 == 1 and fe2 == 0x7e and fm2 == 0x301cf4 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7934ca and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f351fde; op2val:0xbf301cf4; op3val:0x7ef934ca; valaddr_reg:x16; val_offset:936; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 936, x17, x15, 656, x18)

inst_1099:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x351fde and fs2 == 1 and fe2 == 0x7e and fm2 == 0x301cf4 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7934ca and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f351fde; op2val:0xbf301cf4; op3val:0x7ef934ca; valaddr_reg:x16; val_offset:948; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 948, x17, x15, 664, x18)

inst_1100:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x351fde and fs2 == 1 and fe2 == 0x7e and fm2 == 0x301cf4 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7934ca and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f351fde; op2val:0xbf301cf4; op3val:0x7ef934ca; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 672, x18)

inst_1101:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x323547 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x006caa and fs3 == 0 and fe3 == 0xfd and fm3 == 0x32cc91 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7cb23547; op2val:0xc1806caa; op3val:0x7eb2cc91; valaddr_reg:x16; val_offset:972; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 972, x17, x15, 680, x18)

inst_1102:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x323547 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x006caa and fs3 == 0 and fe3 == 0xfd and fm3 == 0x32cc91 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7cb23547; op2val:0xc1806caa; op3val:0x7eb2cc91; valaddr_reg:x16; val_offset:984; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 984, x17, x15, 688, x18)

inst_1103:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x323547 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x006caa and fs3 == 0 and fe3 == 0xfd and fm3 == 0x32cc91 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7cb23547; op2val:0xc1806caa; op3val:0x7eb2cc91; valaddr_reg:x16; val_offset:996; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 996, x17, x15, 696, x18)

inst_1104:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x323547 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x006caa and fs3 == 0 and fe3 == 0xfd and fm3 == 0x32cc91 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7cb23547; op2val:0xc1806caa; op3val:0x7eb2cc91; valaddr_reg:x16; val_offset:1008; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1008, x17, x15, 704, x18)

inst_1105:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x323547 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x006caa and fs3 == 0 and fe3 == 0xfd and fm3 == 0x32cc91 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7cb23547; op2val:0xc1806caa; op3val:0x7eb2cc91; valaddr_reg:x16; val_offset:1020; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1020, x17, x15, 712, x18)

inst_1106:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0e0f7e and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1f8f25 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x31161d and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0e0f7e; op2val:0xbf9f8f25; op3val:0x7f31161d; valaddr_reg:x16; val_offset:1032; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1032, x17, x15, 720, x18)

inst_1107:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0e0f7e and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1f8f25 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x31161d and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0e0f7e; op2val:0xbf9f8f25; op3val:0x7f31161d; valaddr_reg:x16; val_offset:1044; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1044, x17, x15, 728, x18)

inst_1108:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0e0f7e and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1f8f25 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x31161d and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0e0f7e; op2val:0xbf9f8f25; op3val:0x7f31161d; valaddr_reg:x16; val_offset:1056; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1056, x17, x15, 736, x18)

inst_1109:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0e0f7e and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1f8f25 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x31161d and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0e0f7e; op2val:0xbf9f8f25; op3val:0x7f31161d; valaddr_reg:x16; val_offset:1068; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1068, x17, x15, 744, x18)

inst_1110:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0e0f7e and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1f8f25 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x31161d and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0e0f7e; op2val:0xbf9f8f25; op3val:0x7f31161d; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 752, x18)

inst_1111:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18ad5a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x17b417 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x34f350 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f18ad5a; op2val:0xbf97b417; op3val:0x7f34f350; valaddr_reg:x16; val_offset:1092; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1092, x17, x15, 760, x18)

inst_1112:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18ad5a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x17b417 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x34f350 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f18ad5a; op2val:0xbf97b417; op3val:0x7f34f350; valaddr_reg:x16; val_offset:1104; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1104, x17, x15, 768, x18)

inst_1113:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18ad5a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x17b417 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x34f350 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f18ad5a; op2val:0xbf97b417; op3val:0x7f34f350; valaddr_reg:x16; val_offset:1116; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1116, x17, x15, 776, x18)

inst_1114:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18ad5a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x17b417 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x34f350 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f18ad5a; op2val:0xbf97b417; op3val:0x7f34f350; valaddr_reg:x16; val_offset:1128; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1128, x17, x15, 784, x18)

inst_1115:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18ad5a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x17b417 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x34f350 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f18ad5a; op2val:0xbf97b417; op3val:0x7f34f350; valaddr_reg:x16; val_offset:1140; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1140, x17, x15, 792, x18)

inst_1116:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f31b9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x186e02 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0e6c50 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eef31b9; op2val:0xbf986e02; op3val:0x7f0e6c50; valaddr_reg:x16; val_offset:1152; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1152, x17, x15, 800, x18)

inst_1117:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f31b9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x186e02 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0e6c50 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eef31b9; op2val:0xbf986e02; op3val:0x7f0e6c50; valaddr_reg:x16; val_offset:1164; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1164, x17, x15, 808, x18)

inst_1118:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f31b9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x186e02 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0e6c50 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eef31b9; op2val:0xbf986e02; op3val:0x7f0e6c50; valaddr_reg:x16; val_offset:1176; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1176, x17, x15, 816, x18)

inst_1119:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f31b9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x186e02 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0e6c50 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eef31b9; op2val:0xbf986e02; op3val:0x7f0e6c50; valaddr_reg:x16; val_offset:1188; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1188, x17, x15, 824, x18)

inst_1120:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f31b9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x186e02 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0e6c50 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eef31b9; op2val:0xbf986e02; op3val:0x7f0e6c50; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 832, x18)

inst_1121:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6ddfec and fs2 == 1 and fe2 == 0x7e and fm2 == 0x31243e and fs3 == 0 and fe3 == 0xfd and fm3 == 0x249980 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eeddfec; op2val:0xbf31243e; op3val:0x7ea49980; valaddr_reg:x16; val_offset:1212; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1212, x17, x15, 840, x18)

inst_1122:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6ddfec and fs2 == 1 and fe2 == 0x7e and fm2 == 0x31243e and fs3 == 0 and fe3 == 0xfd and fm3 == 0x249980 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eeddfec; op2val:0xbf31243e; op3val:0x7ea49980; valaddr_reg:x16; val_offset:1224; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1224, x17, x15, 848, x18)

inst_1123:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6ddfec and fs2 == 1 and fe2 == 0x7e and fm2 == 0x31243e and fs3 == 0 and fe3 == 0xfd and fm3 == 0x249980 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eeddfec; op2val:0xbf31243e; op3val:0x7ea49980; valaddr_reg:x16; val_offset:1236; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1236, x17, x15, 856, x18)

inst_1124:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x348d37 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7239df and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2ad64f and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb48d37; op2val:0xbff239df; op3val:0x7f2ad64f; valaddr_reg:x16; val_offset:1248; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1248, x17, x15, 864, x18)

inst_1125:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x348d37 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7239df and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2ad64f and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb48d37; op2val:0xbff239df; op3val:0x7f2ad64f; valaddr_reg:x16; val_offset:1260; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1260, x17, x15, 872, x18)

inst_1126:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x348d37 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7239df and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2ad64f and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb48d37; op2val:0xbff239df; op3val:0x7f2ad64f; valaddr_reg:x16; val_offset:1272; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1272, x17, x15, 880, x18)

inst_1127:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11fc97 and fs2 == 1 and fe2 == 0x74 and fm2 == 0x179248 and fs3 == 0 and fe3 == 0xf3 and fm3 == 0x2cded1 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f11fc97; op2val:0xba179248; op3val:0x79acded1; valaddr_reg:x16; val_offset:1284; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1284, x17, x15, 888, x18)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
test_fp:
.word 0x7eef31b9
.word 0xbf986e02
.word 0x7eef31b9
.word 0x7eeddfec
.word 0xbf31243e
.word 0x7ea49980
.word 0x7eeddfec
.word 0xbf31243e
.word 0x7ea49980
.word 0x7eeddfec
.word 0x7eeddfec
.word 0x7ea49980
.word 0x7eeddfec
.word 0x7eeddfec
.word 0x7ea49980
.word 0x7eeddfec
.word 0x7eeddfec
.word 0x7eeddfec
.word 0x7eb48d37
.word 0x7eb48d37
.word 0x7eb48d37
.word 0x7eb48d37
.word 0xbff239df
.word 0x7f2ad64f
.word 0x7eb48d37
.word 0xbff239df
.word 0xbff239df
.word 0x7eb48d37
.word 0xbff239df
.word 0x7eb48d37
.word 0x7eb48d37
.word 0xbff239df
.word 0x7f2ad64f
.word 0x7f11fc97
.word 0xba179248
.word 0xba179248
.word 0x7f11fc97
.word 0xba179248
.word 0x79acded1
.word 0x7f11fc97
.word 0xba179248
.word 0x79acded1
.word 0x7f11fc97
.word 0xba179248
.word 0x79acded1
.word 0x7f11fc97
.word 0xba179248
.word 0x79acded1
.word 0x7f2abcc7
.word 0xbf0a77e2
.word 0x7eb8b371
.word 0x7f2abcc7
.word 0xbf0a77e2
.word 0x7eb8b371
.word 0x7f2abcc7
.word 0xbf0a77e2
.word 0x7eb8b371
.word 0x7f2abcc7
.word 0xbf0a77e2
.word 0x7eb8b371
.word 0x7f2abcc7
.word 0xbf0a77e2
.word 0x7eb8b371
.word 0x7e1b72ef
.word 0xbe4798e7
.word 0x7cf26661
.word 0x7e1b72ef
.word 0xbe4798e7
.word 0x7cf26661
.word 0x7e1b72ef
.word 0xbe4798e7
.word 0x7cf26661
.word 0x7e1b72ef
.word 0xbe4798e7
.word 0x7cf26661
.word 0x7e1b72ef
.word 0xbe4798e7
.word 0x7cf26661
.word 0x7d94fd75
.word 0xbeaf0fd6
.word 0x7ccbc4f6
.word 0x7d94fd75
.word 0xbeaf0fd6
.word 0x7ccbc4f6
.word 0x7d94fd75
.word 0xbeaf0fd6
.word 0x7ccbc4f6
.word 0x7d94fd75
.word 0xbeaf0fd6
.word 0x7ccbc4f6
.word 0x7d94fd75
.word 0xbeaf0fd6
.word 0x7ccbc4f6
.word 0x7f0e1c58
.word 0xbf08cba3
.word 0x7e97e034
.word 0x7f0e1c58
.word 0xbf08cba3
.word 0x7e97e034
.word 0x7f0e1c58
.word 0xbf08cba3
.word 0x7e97e034
.word 0x7f0e1c58
.word 0xbf08cba3
.word 0x7e97e034
.word 0x7f0e1c58
.word 0xbf08cba3
.word 0x7e97e034
.word 0x7ee39195
.word 0xbf77a223
.word 0x7edc2198
.word 0x7ee39195
.word 0xbf77a223
.word 0x7edc2198
.word 0x7ee39195
.word 0xbf77a223
.word 0x7edc2198
.word 0x7ee39195
.word 0xbf77a223
.word 0x7edc2198
.word 0x7ee39195
.word 0xbf77a223
.word 0x7edc2198
.word 0x7f2380ab
.word 0xbf1b9155
.word 0x7ec6b774
.word 0x7f2380ab
.word 0xbf1b9155
.word 0x7ec6b774
.word 0x7f2380ab
.word 0xbf1b9155
.word 0x7ec6b774
.word 0x7f2380ab
.word 0xbf1b9155
.word 0x7ec6b774
.word 0x7f2380ab
.word 0xbf1b9155
.word 0x7ec6b774
.word 0x7f1a76f0
.word 0xbf09e8f2
.word 0x7ea66c69
.word 0x7f1a76f0
.word 0xbf09e8f2
.word 0x7ea66c69
.word 0x7f1a76f0
.word 0xbf09e8f2
.word 0x7ea66c69
.word 0x7f1a76f0
.word 0xbf09e8f2
.word 0x7ea66c69
.word 0x7f1a76f0
.word 0xbf09e8f2
.word 0x7ea66c69
.word 0x7f1f9240
.word 0xbf479101
.word 0x7ef8ca25
.word 0x7f1f9240
.word 0xbf479101
.word 0x7ef8ca25
.word 0x7f1f9240
.word 0xbf479101
.word 0x7ef8ca25
.word 0x7f1f9240
.word 0xbf479101
.word 0x7ef8ca25
.word 0x7f1f9240
.word 0xbf479101
.word 0x7ef8ca25
.word 0x7e942090
.word 0xbeb51387
.word 0x7dd18ca6
.word 0x7e942090
.word 0xbeb51387
.word 0x7dd18ca6
.word 0x7e942090
.word 0xbeb51387
.word 0x7dd18ca6
.word 0x7e942090
.word 0xbeb51387
.word 0x7dd18ca6
.word 0x7e942090
.word 0xbeb51387
.word 0x7dd18ca6
.word 0x7eebaecd
.word 0xbf116e97
.word 0x7e85e3d3
.word 0x7eebaecd
.word 0xbf116e97
.word 0x7e85e3d3
.word 0x7eebaecd
.word 0xbf116e97
.word 0x7e85e3d3
.word 0x7eebaecd
.word 0xbf116e97
.word 0x7e85e3d3
.word 0x7eebaecd
.word 0xbf116e97
.word 0x7e85e3d3
.word 0x7e347e95
.word 0xbfb58230
.word 0x7e7ff294
.word 0x7e347e95
.word 0xbfb58230
.word 0x7e7ff294
.word 0x7e347e95
.word 0xbfb58230
.word 0x7e7ff294
.word 0x7e347e95
.word 0xbfb58230
.word 0x7e7ff294
.word 0x7e347e95
.word 0xbfb58230
.word 0x7e7ff294
.word 0x7eefec16
.word 0xbf112ae8
.word 0x7e880cef
.word 0x7eefec16
.word 0xbf112ae8
.word 0x7e880cef
.word 0x7eefec16
.word 0xbf112ae8
.word 0x7e880cef
.word 0x7eefec16
.word 0xbf112ae8
.word 0x7e880cef
.word 0x7eefec16
.word 0xbf112ae8
.word 0x7e880cef
.word 0x7f1d8df1
.word 0xbe2e68c6
.word 0x7dd6adeb
.word 0x7f1d8df1
.word 0xbe2e68c6
.word 0x7dd6adeb
.word 0x7f1d8df1
.word 0xbe2e68c6
.word 0x7dd6adeb
.word 0x7f1d8df1
.word 0xbe2e68c6
.word 0x7dd6adeb
.word 0x7f1d8df1
.word 0xbe2e68c6
.word 0x7dd6adeb
.word 0x7f3ac206
.word 0xbf2f08f3
.word 0x7eff6253
.word 0x7f3ac206
.word 0xbf2f08f3
.word 0x7eff6253
.word 0x7f3ac206
.word 0xbf2f08f3
.word 0x7eff6253
.word 0x7f3ac206
.word 0xbf2f08f3
.word 0x7eff6253
.word 0x7f3ac206
.word 0xbf2f08f3
.word 0x7eff6253
.word 0x7e2b54e3
.word 0xbf0533df
.word 0x7db24ba2
.word 0x7e2b54e3
.word 0xbf0533df
.word 0x7db24ba2
.word 0x7e2b54e3
.word 0xbf0533df
.word 0x7db24ba2
.word 0x7e2b54e3
.word 0xbf0533df
.word 0x7db24ba2
.word 0x7e2b54e3
.word 0xbf0533df
.word 0x7db24ba2
.word 0x7f36cabd
.word 0xbf3725f9
.word 0x7f02c60b
.word 0x7f36cabd
.word 0xbf3725f9
.word 0x7f02c60b
.word 0x7f36cabd
.word 0xbf3725f9
.word 0x7f02c60b
.word 0x7f36cabd
.word 0xbf3725f9
.word 0x7f02c60b
.word 0x7f36cabd
.word 0xbf3725f9
.word 0x7f02c60b
.word 0x7d24d74d
.word 0xc033dcc2
.word 0x7de7a163
.word 0x7d24d74d
.word 0xc033dcc2
.word 0x7de7a163
.word 0x7d24d74d
.word 0xc033dcc2
.word 0x7de7a163
.word 0x7d24d74d
.word 0xc033dcc2
.word 0x7de7a163
.word 0x7d24d74d
.word 0xc033dcc2
.word 0x7de7a163
.word 0x7cb5021c
.word 0xc1c4df55
.word 0x7f0b3386
.word 0x7cb5021c
.word 0xc1c4df55
.word 0x7f0b3386
.word 0x7cb5021c
.word 0xc1c4df55
.word 0x7f0b3386
.word 0x7cb5021c
.word 0xc1c4df55
.word 0x7f0b3386
.word 0x7cb5021c
.word 0xc1c4df55
.word 0x7f0b3386
.word 0x7e7848a8
.word 0xc01dac69
.word 0x7f18ebc6
.word 0x7e7848a8
.word 0xc01dac69
.word 0x7f18ebc6
.word 0x7e7848a8
.word 0xc01dac69
.word 0x7f18ebc6
.word 0x7e7848a8
.word 0xc01dac69
.word 0x7f18ebc6
.word 0x7e7848a8
.word 0xc01dac69
.word 0x7f18ebc6
.word 0x7f285eb2
.word 0xbf0c4329
.word 0x7eb87fea
.word 0x7f285eb2
.word 0xbf0c4329
.word 0x7eb87fea
.word 0x7f285eb2
.word 0xbf0c4329
.word 0x7eb87fea
.word 0x7f285eb2
.word 0xbf0c4329
.word 0x7eb87fea
.word 0x7f285eb2
.word 0xbf0c4329
.word 0x7eb87fea
.word 0x7ee4160b
.word 0xbecda873
.word 0x7e373bbc
.word 0x7ee4160b
.word 0xbecda873
.word 0x7e373bbc
.word 0x7ee4160b
.word 0xbecda873
.word 0x7e373bbc
.word 0x7ee4160b
.word 0xbecda873
.word 0x7e373bbc
.word 0x7ee4160b
.word 0xbecda873
.word 0x7e373bbc
.word 0x7d8c0cc1
.word 0xbfaf3018
.word 0x7dbfae0f
.word 0x7d8c0cc1
.word 0xbfaf3018
.word 0x7dbfae0f
.word 0x7d8c0cc1
.word 0xbfaf3018
.word 0x7dbfae0f
.word 0x7d8c0cc1
.word 0xbfaf3018
.word 0x7dbfae0f
.word 0x7d8c0cc1
.word 0xbfaf3018
.word 0x7dbfae0f
.word 0x7d82ef0c
.word 0xc0fabf31
.word 0x7f003f3c
.word 0x7d82ef0c
.word 0xc0fabf31
.word 0x7f003f3c
.word 0x7d82ef0c
.word 0xc0fabf31
.word 0x7f003f3c
.word 0x7d82ef0c
.word 0xc0fabf31
.word 0x7f003f3c
.word 0x7d82ef0c
.word 0xc0fabf31
.word 0x7f003f3c
.word 0x7f08f3f0
.word 0xbf6b1522
.word 0x7efb8677
.word 0x7f08f3f0
.word 0xbf6b1522
.word 0x7efb8677
.word 0x7f08f3f0
.word 0xbf6b1522
.word 0x7efb8677
.word 0x7f08f3f0
.word 0xbf6b1522
.word 0x7efb8677
.word 0x7f08f3f0
.word 0xbf6b1522
.word 0x7efb8677
.word 0x7f0d74e0
.word 0xbe793bf9
.word 0x7e09b7d2
.word 0x7f0d74e0
.word 0xbe793bf9
.word 0x7e09b7d2
.word 0x7f0d74e0
.word 0xbe793bf9
.word 0x7e09b7d2
.word 0x7f0d74e0
.word 0xbe793bf9
.word 0x7e09b7d2
.word 0x7f0d74e0
.word 0xbe793bf9
.word 0x7e09b7d2
.word 0x7e3408e8
.word 0xbfcab176
.word 0x7e8e8bd4
.word 0x7e3408e8
.word 0xbfcab176
.word 0x7e8e8bd4
.word 0x7e3408e8
.word 0xbfcab176
.word 0x7e8e8bd4
.word 0x7e3408e8
.word 0xbfcab176
.word 0x7e8e8bd4
.word 0x7e3408e8
.word 0xbfcab176
.word 0x7e8e8bd4
.word 0x7ec686be
.word 0xbe847cf6
.word 0x7dcd7cc4
.word 0x7ec686be
.word 0xbe847cf6
.word 0x7dcd7cc4
.word 0x7ec686be
.word 0xbe847cf6
.word 0x7dcd7cc4
.word 0x7ec686be
.word 0xbe847cf6
.word 0x7dcd7cc4
.word 0x7ec686be
.word 0xbe847cf6
.word 0x7dcd7cc4
.word 0x7e4337d6
.word 0xc03cfb09
.word 0x7f101c70
.word 0x7e4337d6
.word 0xc03cfb09
.word 0x7f101c70
.word 0x7e4337d6
.word 0xc03cfb09
.word 0x7f101c70
.word 0x7e4337d6
.word 0xc03cfb09
.word 0x7f101c70
.word 0x7e4337d6
.word 0xc03cfb09
.word 0x7f101c70
.word 0x7e4a2c68
.word 0xc0061f45
.word 0x7ed3d7e2
.word 0x7e4a2c68
.word 0xc0061f45
.word 0x7ed3d7e2
.word 0x7e4a2c68
.word 0xc0061f45
.word 0x7ed3d7e2
.word 0x7e4a2c68
.word 0xc0061f45
.word 0x7ed3d7e2
.word 0x7e4a2c68
.word 0xc0061f45
.word 0x7ed3d7e2
.word 0x7ed513fd
.word 0xbf8f38bb
.word 0x7eee6ac5
.word 0x7ed513fd
.word 0xbf8f38bb
.word 0x7eee6ac5
.word 0x7ed513fd
.word 0xbf8f38bb
.word 0x7eee6ac5
.word 0x7ed513fd
.word 0xbf8f38bb
.word 0x7eee6ac5
.word 0x7ed513fd
.word 0xbf8f38bb
.word 0x7eee6ac5
.word 0x7ec23e7f
.word 0xbfe66020
.word 0x7f2ecd16
.word 0x7ec23e7f
.word 0xbfe66020
.word 0x7f2ecd16
.word 0x7ec23e7f
.word 0xbfe66020
.word 0x7f2ecd16
.word 0x7ec23e7f
.word 0xbfe66020
.word 0x7f2ecd16
.word 0x7ec23e7f
.word 0xbfe66020
.word 0x7f2ecd16
.word 0x7de81a8e
.word 0xc085b2ce
.word 0x7ef26fd3
.word 0x7de81a8e
.word 0xc085b2ce
.word 0x7ef26fd3
.word 0x7de81a8e
.word 0xc085b2ce
.word 0x7ef26fd3
.word 0x7de81a8e
.word 0xc085b2ce
.word 0x7ef26fd3
.word 0x7de81a8e
.word 0xc085b2ce
.word 0x7ef26fd3
.word 0x7d2b448a
.word 0xc1481dd4
.word 0x7f05e181
.word 0x7d2b448a
.word 0xc1481dd4
.word 0x7f05e181
.word 0x7d2b448a
.word 0xc1481dd4
.word 0x7f05e181
.word 0x7d2b448a
.word 0xc1481dd4
.word 0x7f05e181
.word 0x7d2b448a
.word 0xc1481dd4
.word 0x7f05e181
.word 0x7f343304
.word 0xbecc22d6
.word 0x7e8fb12d
.word 0x7f343304
.word 0xbecc22d6
.word 0x7e8fb12d
.word 0x7f343304
.word 0xbecc22d6
.word 0x7e8fb12d
.word 0x7f343304
.word 0xbecc22d6
.word 0x7e8fb12d
.word 0x7f343304
.word 0xbecc22d6
.word 0x7e8fb12d
.word 0x7ee67bca
.word 0xbf50cfc6
.word 0x7ebbffa5
.word 0x7ee67bca
.word 0xbf50cfc6
.word 0x7ebbffa5
.word 0x7ee67bca
.word 0xbf50cfc6
.word 0x7ebbffa5
.word 0x7ee67bca
.word 0xbf50cfc6
.word 0x7ebbffa5
.word 0x7ee67bca
.word 0xbf50cfc6
.word 0x7ebbffa5
.word 0x7ea5c2ef
.word 0xbf3a8dcd
.word 0x7e7196e6
.word 0x7ea5c2ef
.word 0xbf3a8dcd
.word 0x7e7196e6
.word 0x7ea5c2ef
.word 0xbf3a8dcd
.word 0x7e7196e6
.word 0x7ea5c2ef
.word 0xbf3a8dcd
.word 0x7e7196e6
.word 0x7ea5c2ef
.word 0xbf3a8dcd
.word 0x7e7196e6
.word 0x7f28a9ec
.word 0xbe1c96d3
.word 0x7dce55d5
.word 0x7f28a9ec
.word 0xbe1c96d3
.word 0x7dce55d5
.word 0x7f28a9ec
.word 0xbe1c96d3
.word 0x7dce55d5
.word 0x7f28a9ec
.word 0xbe1c96d3
.word 0x7dce55d5
.word 0x7f28a9ec
.word 0xbe1c96d3
.word 0x7dce55d5
.word 0x7edce5ef
.word 0xbfa52d67
.word 0x7f0e8760
.word 0x7edce5ef
.word 0xbfa52d67
.word 0x7f0e8760
.word 0x7edce5ef
.word 0xbfa52d67
.word 0x7f0e8760
.word 0x7edce5ef
.word 0xbfa52d67
.word 0x7f0e8760
.word 0x7edce5ef
.word 0xbfa52d67
.word 0x7f0e8760
.word 0x7d5d3233
.word 0xbf4ca6a8
.word 0x7d30d400
.word 0x7d5d3233
.word 0xbf4ca6a8
.word 0x7d30d400
.word 0x7d5d3233
.word 0xbf4ca6a8
.word 0x7d30d400
.word 0x7d5d3233
.word 0xbf4ca6a8
.word 0x7d30d400
.word 0x7d5d3233
.word 0xbf4ca6a8
.word 0x7d30d400
.word 0x7da637c1
.word 0xc06043c2
.word 0x7e919cc8
.word 0x7da637c1
.word 0xc06043c2
.word 0x7e919cc8
.word 0x7da637c1
.word 0xc06043c2
.word 0x7e919cc8
.word 0x7da637c1
.word 0xc06043c2
.word 0x7e919cc8
.word 0x7da637c1
.word 0xc06043c2
.word 0x7e919cc8
.word 0x7eef00e7
.word 0xbd8f578d
.word 0x7d05d33e
.word 0x7eef00e7
.word 0xbd8f578d
.word 0x7d05d33e
.word 0x7eef00e7
.word 0xbd8f578d
.word 0x7d05d33e
.word 0x7eef00e7
.word 0xbd8f578d
.word 0x7d05d33e
.word 0x7eef00e7
.word 0xbd8f578d
.word 0x7d05d33e
.word 0x7e9ef396
.word 0xbec75d41
.word 0x7df79282
.word 0x7e9ef396
.word 0xbec75d41
.word 0x7df79282
.word 0x7e9ef396
.word 0xbec75d41
.word 0x7df79282
.word 0x7e9ef396
.word 0xbec75d41
.word 0x7df79282
.word 0x7e9ef396
.word 0xbec75d41
.word 0x7df79282
.word 0x7de5fc3b
.word 0xc0827faf
.word 0x7eea7997
.word 0x7de5fc3b
.word 0xc0827faf
.word 0x7eea7997
.word 0x7de5fc3b
.word 0xc0827faf
.word 0x7eea7997
.word 0x7de5fc3b
.word 0xc0827faf
.word 0x7eea7997
.word 0x7de5fc3b
.word 0xc0827faf
.word 0x7eea7997
.word 0x7e60a271
.word 0xc048ddad
.word 0x7f30416d
.word 0x7e60a271
.word 0xc048ddad
.word 0x7f30416d
.word 0x7e60a271
.word 0xc048ddad
.word 0x7f30416d
.word 0x7e60a271
.word 0xc048ddad
.word 0x7f30416d
.word 0x7e60a271
.word 0xc048ddad
.word 0x7f30416d
.word 0x7f08ca03
.word 0xbe417fae
.word 0x7dcec90d
.word 0x7f08ca03
.word 0xbe417fae
.word 0x7dcec90d
.word 0x7f08ca03
.word 0xbe417fae
.word 0x7dcec90d
.word 0x7f08ca03
.word 0xbe417fae
.word 0x7dcec90d
.word 0x7f08ca03
.word 0xbe417fae
.word 0x7dcec90d
.word 0x7ef7f691
.word 0xbfbcc1c0
.word 0x7f36d4be
.word 0x7ef7f691
.word 0xbfbcc1c0
.word 0x7f36d4be
.word 0x7ef7f691
.word 0xbfbcc1c0
.word 0x7f36d4be
.word 0x7ef7f691
.word 0xbfbcc1c0
.word 0x7f36d4be
.word 0x7ef7f691
.word 0xbfbcc1c0
.word 0x7f36d4be
.word 0x7f21ad0f
.word 0xbe854cc4
.word 0x7e285ec8
.word 0x7f21ad0f
.word 0xbe854cc4
.word 0x7e285ec8
.word 0x7f21ad0f
.word 0xbe854cc4
.word 0x7e285ec8
.word 0x7f21ad0f
.word 0xbe854cc4
.word 0x7e285ec8
.word 0x7f21ad0f
.word 0xbe854cc4
.word 0x7e285ec8
.word 0x7f06a3bf
.word 0xbd8ecac8
.word 0x7d1632f5
.word 0x7f06a3bf
.word 0xbd8ecac8
.word 0x7d1632f5
.word 0x7f06a3bf
.word 0xbd8ecac8
.word 0x7d1632f5
.word 0x7f06a3bf
.word 0xbd8ecac8
.word 0x7d1632f5
.word 0x7f06a3bf
.word 0xbd8ecac8
.word 0x7d1632f5
.word 0x7f3be85f
.word 0xbf8291dd
.word 0x7f3fae22
.word 0x7f3be85f
.word 0xbf8291dd
.word 0x7f3fae22
.word 0x7f3be85f
.word 0xbf8291dd
.word 0x7f3fae22
.word 0x7f3be85f
.word 0xbf8291dd
.word 0x7f3fae22
.word 0x7f3be85f
.word 0xbf8291dd
.word 0x7f3fae22
.word 0x7c9cffed
.word 0xc1e23971
.word 0x7f0abd2a
.word 0x7c9cffed
.word 0xc1e23971
.word 0x7f0abd2a
.word 0x7c9cffed
.word 0xc1e23971
.word 0x7f0abd2a
.word 0x7c9cffed
.word 0xc1e23971
.word 0x7f0abd2a
.word 0x7c9cffed
.word 0xc1e23971
.word 0x7f0abd2a
.word 0x7f18041e
.word 0xbf5690a4
.word 0x7efed2ab
.word 0x7f18041e
.word 0xbf5690a4
.word 0x7efed2ab
.word 0x7f18041e
.word 0xbf5690a4
.word 0x7efed2ab
.word 0x7f18041e
.word 0xbf5690a4
.word 0x7efed2ab
.word 0x7f18041e
.word 0xbf5690a4
.word 0x7efed2ab
.word 0x7e30a79f
.word 0xc0640ab1
.word 0x7f1d5cab
.word 0x7e30a79f
.word 0xc0640ab1
.word 0x7f1d5cab
.word 0x7e30a79f
.word 0xc0640ab1
.word 0x7f1d5cab
.word 0x7e30a79f
.word 0xc0640ab1
.word 0x7f1d5cab
.word 0x7e30a79f
.word 0xc0640ab1
.word 0x7f1d5cab
.word 0x7f1bdeb9
.word 0xbdac9a42
.word 0x7d522f22
.word 0x7f1bdeb9
.word 0xbdac9a42
.word 0x7d522f22
.word 0x7f1bdeb9
.word 0xbdac9a42
.word 0x7d522f22
.word 0x7f1bdeb9
.word 0xbdac9a42
.word 0x7d522f22
.word 0x7f1bdeb9
.word 0xbdac9a42
.word 0x7d522f22
.word 0x7debd190
.word 0xc0743850
.word 0x7ee0f79d
.word 0x7debd190
.word 0xc0743850
.word 0x7ee0f79d
.word 0x7debd190
.word 0xc0743850
.word 0x7ee0f79d
.word 0x7debd190
.word 0xc0743850
.word 0x7ee0f79d
.word 0x7debd190
.word 0xc0743850
.word 0x7ee0f79d
.word 0x7ebf1c1f
.word 0xbf2a2046
.word 0x7e7e0189
.word 0x7ebf1c1f
.word 0xbf2a2046
.word 0x7e7e0189
.word 0x7ebf1c1f
.word 0xbf2a2046
.word 0x7e7e0189
.word 0x7ebf1c1f
.word 0xbf2a2046
.word 0x7e7e0189
.word 0x7ebf1c1f
.word 0xbf2a2046
.word 0x7e7e0189
.word 0x7eb7b5df
.word 0xbf92e948
.word 0x7ed2da44
.word 0x7eb7b5df
.word 0xbf92e948
.word 0x7ed2da44
.word 0x7eb7b5df
.word 0xbf92e948
.word 0x7ed2da44
.word 0x7eb7b5df
.word 0xbf92e948
.word 0x7ed2da44
.word 0x7eb7b5df
.word 0xbf92e948
.word 0x7ed2da44
.word 0x7f2ed986
.word 0xbe207095
.word 0x7ddb29b3
.word 0x7f2ed986
.word 0xbe207095
.word 0x7ddb29b3
.word 0x7f2ed986
.word 0xbe207095
.word 0x7ddb29b3
.word 0x7f2ed986
.word 0xbe207095
.word 0x7ddb29b3
.word 0x7f2ed986
.word 0xbe207095
.word 0x7ddb29b3
.word 0x7e5bece0
.word 0xc02e7d03
.word 0x7f15e665
.word 0x7e5bece0
.word 0xc02e7d03
.word 0x7f15e665
.word 0x7e5bece0
.word 0xc02e7d03
.word 0x7f15e665
.word 0x7e5bece0
.word 0xc02e7d03
.word 0x7f15e665
.word 0x7e5bece0
.word 0xc02e7d03
.word 0x7f15e665
.word 0x7f055e08
.word 0xbf1f839e
.word 0x7ea633f2
.word 0x7f055e08
.word 0xbf1f839e
.word 0x7ea633f2
.word 0x7f055e08
.word 0xbf1f839e
.word 0x7ea633f2
.word 0x7f055e08
.word 0xbf1f839e
.word 0x7ea633f2
.word 0x7f055e08
.word 0xbf1f839e
.word 0x7ea633f2
.word 0x7d4aeb32
.word 0xc14a914f
.word 0x7f2090c4
.word 0x7d4aeb32
.word 0xc14a914f
.word 0x7f2090c4
.word 0x7d4aeb32
.word 0xc14a914f
.word 0x7f2090c4
.word 0x7d4aeb32
.word 0xc14a914f
.word 0x7f2090c4
.word 0x7d4aeb32
.word 0xc14a914f
.word 0x7f2090c4
.word 0x7e63ac29
.word 0xc0333166
.word 0x7f1f5d50
.word 0x7e63ac29
.word 0xc0333166
.word 0x7f1f5d50
.word 0x7e63ac29
.word 0xc0333166
.word 0x7f1f5d50
.word 0x7e63ac29
.word 0xc0333166
.word 0x7f1f5d50
.word 0x7e63ac29
.word 0xc0333166
.word 0x7f1f5d50
.word 0x7f2390a7
.word 0xbe6c2877
.word 0x7e16e335
.word 0x7f2390a7
.word 0xbe6c2877
.word 0x7e16e335
.word 0x7f2390a7
.word 0xbe6c2877
.word 0x7e16e335
.word 0x7f2390a7
.word 0xbe6c2877
.word 0x7e16e335
.word 0x7f2390a7
.word 0xbe6c2877
.word 0x7e16e335
.word 0x7e94058d
.word 0xbf821f69
.word 0x7e9679f6
.word 0x7e94058d
.word 0xbf821f69
.word 0x7e9679f6
.word 0x7e94058d
.word 0xbf821f69
.word 0x7e9679f6
.word 0x7e94058d
.word 0xbf821f69
.word 0x7e9679f6
.word 0x7e94058d
.word 0xbf821f69
.word 0x7e9679f6
.word 0x7eb90aa3
.word 0xbff22d10
.word 0x7f2f0ca1
.word 0x7eb90aa3
.word 0xbff22d10
.word 0x7f2f0ca1
.word 0x7eb90aa3
.word 0xbff22d10
.word 0x7f2f0ca1
.word 0x7eb90aa3
.word 0xbff22d10
.word 0x7f2f0ca1
.word 0x7eb90aa3
.word 0xbff22d10
.word 0x7f2f0ca1
.word 0x7f07f885
.word 0xbf648bdf
.word 0x7ef2c742
.word 0x7f07f885
.word 0xbf648bdf
.word 0x7ef2c742
.word 0x7f07f885
.word 0xbf648bdf
.word 0x7ef2c742
.word 0x7f07f885
.word 0xbf648bdf
.word 0x7ef2c742
.word 0x7f07f885
.word 0xbf648bdf
.word 0x7ef2c742
.word 0x7ea43fb8
.word 0xbfac433a
.word 0x7edd0be3
.word 0x7ea43fb8
.word 0xbfac433a
.word 0x7edd0be3
.word 0x7ea43fb8
.word 0xbfac433a
.word 0x7edd0be3
.word 0x7ea43fb8
.word 0xbfac433a
.word 0x7edd0be3
.word 0x7ea43fb8
.word 0xbfac433a
.word 0x7edd0be3
.word 0x7c32eb6c
.word 0xc255d574
.word 0x7f157310
.word 0x7c32eb6c
.word 0xc255d574
.word 0x7f157310
.word 0x7c32eb6c
.word 0xc255d574
.word 0x7f157310
.word 0x7c32eb6c
.word 0xc255d574
.word 0x7f157310
.word 0x7c32eb6c
.word 0xc255d574
.word 0x7f157310
.word 0x7f2a7c0d
.word 0xbf1d4c63
.word 0x7ed181e6
.word 0x7f2a7c0d
.word 0xbf1d4c63
.word 0x7ed181e6
.word 0x7f2a7c0d
.word 0xbf1d4c63
.word 0x7ed181e6
.word 0x7f2a7c0d
.word 0xbf1d4c63
.word 0x7ed181e6
.word 0x7f2a7c0d
.word 0xbf1d4c63
.word 0x7ed181e6
.word 0x7eaef4a6
.word 0xc000c03c
.word 0x7f2ffb67
.word 0x7eaef4a6
.word 0xc000c03c
.word 0x7f2ffb67
.word 0x7eaef4a6
.word 0xc000c03c
.word 0x7f2ffb67
.word 0x7eaef4a6
.word 0xc000c03c
.word 0x7f2ffb67
.word 0x7eaef4a6
.word 0xc000c03c
.word 0x7f2ffb67
.word 0x7cdfd1b9
.word 0xc0ddbbf1
.word 0x7e41dc5e
.word 0x7cdfd1b9
.word 0xc0ddbbf1
.word 0x7e41dc5e
.word 0x7cdfd1b9
.word 0xc0ddbbf1
.word 0x7e41dc5e
.word 0x7cdfd1b9
.word 0xc0ddbbf1
.word 0x7e41dc5e
.word 0x7cdfd1b9
.word 0xc0ddbbf1
.word 0x7e41dc5e
.word 0x7f0f0b15
.word 0xbf4b0294
.word 0x7ee2de76
.word 0x7f0f0b15
.word 0xbf4b0294
.word 0x7ee2de76
.word 0x7f0f0b15
.word 0xbf4b0294
.word 0x7ee2de76
.word 0x7f0f0b15
.word 0xbf4b0294
.word 0x7ee2de76
.word 0x7f0f0b15
.word 0xbf4b0294
.word 0x7ee2de76
.word 0x7eb24e28
.word 0xbf470cb8
.word 0x7e8aa39d
.word 0x7eb24e28
.word 0xbf470cb8
.word 0x7e8aa39d
.word 0x7eb24e28
.word 0xbf470cb8
.word 0x7e8aa39d
.word 0x7eb24e28
.word 0xbf470cb8
.word 0x7e8aa39d
.word 0x7eb24e28
.word 0xbf470cb8
.word 0x7e8aa39d
.word 0x7e63f59c
.word 0xbfe47f4a
.word 0x7ecb7817
.word 0x7e63f59c
.word 0xbfe47f4a
.word 0x7ecb7817
.word 0x7e63f59c
.word 0xbfe47f4a
.word 0x7ecb7817
.word 0x7e63f59c
.word 0xbfe47f4a
.word 0x7ecb7817
.word 0x7e63f59c
.word 0xbfe47f4a
.word 0x7ecb7817
.word 0x7eccdcfa
.word 0xbf2149e2
.word 0x7e811219
.word 0x7eccdcfa
.word 0xbf2149e2
.word 0x7e811219
.word 0x7eccdcfa
.word 0xbf2149e2
.word 0x7e811219
.word 0x7eccdcfa
.word 0xbf2149e2
.word 0x7e811219
.word 0x7eccdcfa
.word 0xbf2149e2
.word 0x7e811219
.word 0x7f11ff1d
.word 0xbeca76b7
.word 0x7e66ee02
.word 0x7f11ff1d
.word 0xbeca76b7
.word 0x7e66ee02
.word 0x7f11ff1d
.word 0xbeca76b7
.word 0x7e66ee02
.word 0x7f11ff1d
.word 0xbeca76b7
.word 0x7e66ee02
.word 0x7f11ff1d
.word 0xbeca76b7
.word 0x7e66ee02
.word 0x7f0ebf31
.word 0xbe22c52b
.word 0x7db585de
.word 0x7f0ebf31
.word 0xbe22c52b
.word 0x7db585de
.word 0x7f0ebf31
.word 0xbe22c52b
.word 0x7db585de
.word 0x7f0ebf31
.word 0xbe22c52b
.word 0x7db585de
.word 0x7f0ebf31
.word 0xbe22c52b
.word 0x7db585de
.word 0x7ef7a1f3
.word 0xbf6fb705
.word 0x7ee7e13b
.word 0x7ef7a1f3
.word 0xbf6fb705
.word 0x7ee7e13b
.word 0x7ef7a1f3
.word 0xbf6fb705
.word 0x7ee7e13b
.word 0x7ef7a1f3
.word 0xbf6fb705
.word 0x7ee7e13b
.word 0x7ef7a1f3
.word 0xbf6fb705
.word 0x7ee7e13b
.word 0x7ee97c86
.word 0xbf47d51b
.word 0x7eb6422a
.word 0x7ee97c86
.word 0xbf47d51b
.word 0x7eb6422a
.word 0x7ee97c86
.word 0xbf47d51b
.word 0x7eb6422a
.word 0x7ee97c86
.word 0xbf47d51b
.word 0x7eb6422a
.word 0x7ee97c86
.word 0xbf47d51b
.word 0x7eb6422a
.word 0x7f3ddabc
.word 0xbe97cf0e
.word 0x7e612b27
.word 0x7f3ddabc
.word 0xbe97cf0e
.word 0x7e612b27
.word 0x7f3ddabc
.word 0xbe97cf0e
.word 0x7e612b27
.word 0x7f3ddabc
.word 0xbe97cf0e
.word 0x7e612b27
.word 0x7f3ddabc
.word 0xbe97cf0e
.word 0x7e612b27
.word 0x7e4d95b3
.word 0xbf140204
.word 0x7dedb854
.word 0x7e4d95b3
.word 0xbf140204
.word 0x7dedb854
.word 0x7e4d95b3
.word 0xbf140204
.word 0x7dedb854
.word 0x7e4d95b3
.word 0xbf140204
.word 0x7dedb854
.word 0x7e4d95b3
.word 0xbf140204
.word 0x7dedb854
.word 0x7f16204d
.word 0xbea0dc4b
.word 0x7e3caac1
.word 0x7f16204d
.word 0xbea0dc4b
.word 0x7e3caac1
.word 0x7f16204d
.word 0xbea0dc4b
.word 0x7e3caac1
.word 0x7f16204d
.word 0xbea0dc4b
.word 0x7e3caac1
.word 0x7f16204d
.word 0xbea0dc4b
.word 0x7e3caac1
.word 0x7e5244d5
.word 0xc05a9f6c
.word 0x7f33918f
.word 0x7e5244d5
.word 0xc05a9f6c
.word 0x7f33918f
.word 0x7e5244d5
.word 0xc05a9f6c
.word 0x7f33918f
.word 0x7e5244d5
.word 0xc05a9f6c
.word 0x7f33918f
.word 0x7e5244d5
.word 0xc05a9f6c
.word 0x7f33918f
.word 0x7c223dfa
.word 0xc22157ca
.word 0x7ecc813b
.word 0x7c223dfa
.word 0xc22157ca
.word 0x7ecc813b
.word 0x7c223dfa
.word 0xc22157ca
.word 0x7ecc813b
.word 0x7c223dfa
.word 0xc22157ca
.word 0x7ecc813b
.word 0x7c223dfa
.word 0xc22157ca
.word 0x7ecc813b
.word 0x7f16166d
.word 0xbf87627c
.word 0x7f1ebf21
.word 0x7f16166d
.word 0xbf87627c
.word 0x7f1ebf21
.word 0x7f16166d
.word 0xbf87627c
.word 0x7f1ebf21
.word 0x7f16166d
.word 0xbf87627c
.word 0x7f1ebf21
.word 0x7f16166d
.word 0xbf87627c
.word 0x7f1ebf21
.word 0x7eaa4aa3
.word 0xbf293302
.word 0x7e611a69
.word 0x7eaa4aa3
.word 0xbf293302
.word 0x7e611a69
.word 0x7eaa4aa3
.word 0xbf293302
.word 0x7e611a69
.word 0x7eaa4aa3
.word 0xbf293302
.word 0x7e611a69
.word 0x7eaa4aa3
.word 0xbf293302
.word 0x7e611a69
.word 0x7dbb3787
.word 0xc0a337c4
.word 0x7eeeba47
.word 0x7dbb3787
.word 0xc0a337c4
.word 0x7eeeba47
.word 0x7dbb3787
.word 0xc0a337c4
.word 0x7eeeba47
.word 0x7dbb3787
.word 0xc0a337c4
.word 0x7eeeba47
.word 0x7dbb3787
.word 0xc0a337c4
.word 0x7eeeba47
.word 0x7e5bf434
.word 0xbfd52827
.word 0x7eb724af
.word 0x7e5bf434
.word 0xbfd52827
.word 0x7eb724af
.word 0x7e5bf434
.word 0xbfd52827
.word 0x7eb724af
.word 0x7e5bf434
.word 0xbfd52827
.word 0x7eb724af
.word 0x7e5bf434
.word 0xbfd52827
.word 0x7eb724af
.word 0x7f3cfb28
.word 0xbeffccec
.word 0x7ebcd574
.word 0x7f3cfb28
.word 0xbeffccec
.word 0x7ebcd574
.word 0x7f3cfb28
.word 0xbeffccec
.word 0x7ebcd574
.word 0x7f3cfb28
.word 0xbeffccec
.word 0x7ebcd574
.word 0x7f3cfb28
.word 0xbeffccec
.word 0x7ebcd574
.word 0x7e9f8c7e
.word 0xbf44a44f
.word 0x7e751bf1
.word 0x7e9f8c7e
.word 0xbf44a44f
.word 0x7e751bf1
.word 0x7e9f8c7e
.word 0xbf44a44f
.word 0x7e751bf1
.word 0x7e9f8c7e
.word 0xbf44a44f
.word 0x7e751bf1
.word 0x7e9f8c7e
.word 0xbf44a44f
.word 0x7e751bf1
.word 0x7f3c5927
.word 0xbf01847e
.word 0x7ebe94d0
.word 0x7f3c5927
.word 0xbf01847e
.word 0x7ebe94d0
.word 0x7f3c5927
.word 0xbf01847e
.word 0x7ebe94d0
.word 0x7f3c5927
.word 0xbf01847e
.word 0x7ebe94d0
.word 0x7f3c5927
.word 0xbf01847e
.word 0x7ebe94d0
.word 0x7ee4ca80
.word 0xbedf46b8
.word 0x7e478b9a
.word 0x7ee4ca80
.word 0xbedf46b8
.word 0x7e478b9a
.word 0x7ee4ca80
.word 0xbedf46b8
.word 0x7e478b9a
.word 0x7ee4ca80
.word 0xbedf46b8
.word 0x7e478b9a
.word 0x7ee4ca80
.word 0xbedf46b8
.word 0x7e478b9a
.word 0x7f3889e8
.word 0xbf73608d
.word 0x7f2f7080
.word 0x7f3889e8
.word 0xbf73608d
.word 0x7f2f7080
.word 0x7f3889e8
.word 0xbf73608d
.word 0x7f2f7080
.word 0x7f3889e8
.word 0xbf73608d
.word 0x7f2f7080
.word 0x7f3889e8
.word 0xbf73608d
.word 0x7f2f7080
.word 0x7f3ab616
.word 0xbec7f49a
.word 0x7e91d5f1
.word 0x7f3ab616
.word 0xbec7f49a
.word 0x7e91d5f1
.word 0x7f3ab616
.word 0xbec7f49a
.word 0x7e91d5f1
.word 0x7f3ab616
.word 0xbec7f49a
.word 0x7e91d5f1
.word 0x7f3ab616
.word 0xbec7f49a
.word 0x7e91d5f1
.word 0x7e2dd370
.word 0xbfa4d96b
.word 0x7e5fde2a
.word 0x7e2dd370
.word 0xbfa4d96b
.word 0x7e5fde2a
.word 0x7e2dd370
.word 0xbfa4d96b
.word 0x7e5fde2a
.word 0x7e2dd370
.word 0xbfa4d96b
.word 0x7e5fde2a
.word 0x7e2dd370
.word 0xbfa4d96b
.word 0x7e5fde2a
.word 0x7e905363
.word 0xbf9303f7
.word 0x7ea5c43d
.word 0x7e905363
.word 0xbf9303f7
.word 0x7ea5c43d
.word 0x7e905363
.word 0xbf9303f7
.word 0x7ea5c43d
.word 0x7e905363
.word 0xbf9303f7
.word 0x7ea5c43d
.word 0x7e905363
.word 0xbf9303f7
.word 0x7ea5c43d
.word 0x7ef1b611
.word 0xbfb53e03
.word 0x7f2b2047
.word 0x7ef1b611
.word 0xbfb53e03
.word 0x7f2b2047
.word 0x7ef1b611
.word 0xbfb53e03
.word 0x7f2b2047
.word 0x7ef1b611
.word 0xbfb53e03
.word 0x7f2b2047
.word 0x7ef1b611
.word 0xbfb53e03
.word 0x7f2b2047
.word 0x7eec3979
.word 0xbe6a3541
.word 0x7dd81dad
.word 0x7eec3979
.word 0xbe6a3541
.word 0x7dd81dad
.word 0x7eec3979
.word 0xbe6a3541
.word 0x7dd81dad
.word 0x7eec3979
.word 0xbe6a3541
.word 0x7dd81dad
.word 0x7eec3979
.word 0xbe6a3541
.word 0x7dd81dad
.word 0x7da5c337
.word 0xc0a7c65d
.word 0x7ed94594
.word 0x7da5c337
.word 0xc0a7c65d
.word 0x7ed94594
.word 0x7da5c337
.word 0xc0a7c65d
.word 0x7ed94594
.word 0x7da5c337
.word 0xc0a7c65d
.word 0x7ed94594
.word 0x7da5c337
.word 0xc0a7c65d
.word 0x7ed94594
.word 0x7f2b8bb0
.word 0xba8afed7
.word 0x7a3a4824
.word 0x7f2b8bb0
.word 0xba8afed7
.word 0x7a3a4824
.word 0x7f2b8bb0
.word 0xba8afed7
.word 0x7a3a4824
.word 0x7f2b8bb0
.word 0xba8afed7
.word 0x7a3a4824
.word 0x7f2b8bb0
.word 0xba8afed7
.word 0x7a3a4824
.word 0x7ee9b4c8
.word 0xbf13b0b0
.word 0x7e86d41d
.word 0x7ee9b4c8
.word 0xbf13b0b0
.word 0x7e86d41d
.word 0x7ee9b4c8
.word 0xbf13b0b0
.word 0x7e86d41d
.word 0x7ee9b4c8
.word 0xbf13b0b0
.word 0x7e86d41d
.word 0x7ee9b4c8
.word 0xbf13b0b0
.word 0x7e86d41d
.word 0x7f37c8e9
.word 0xbf81712d
.word 0x7f39dafb
.word 0x7f37c8e9
.word 0xbf81712d
.word 0x7f39dafb
.word 0x7f37c8e9
.word 0xbf81712d
.word 0x7f39dafb
.word 0x7f37c8e9
.word 0xbf81712d
.word 0x7f39dafb
.word 0x7f37c8e9
.word 0xbf81712d
.word 0x7f39dafb
.word 0x7ee4d70d
.word 0xbf723849
.word 0x7ed8859b
.word 0x7ee4d70d
.word 0xbf723849
.word 0x7ed8859b
.word 0x7ee4d70d
.word 0xbf723849
.word 0x7ed8859b
.word 0x7ee4d70d
.word 0xbf723849
.word 0x7ed8859b
.word 0x7ee4d70d
.word 0xbf723849
.word 0x7ed8859b
.word 0x7e8dddb2
.word 0xbec4f318
.word 0x7dda48e6
.word 0x7e8dddb2
.word 0xbec4f318
.word 0x7dda48e6
.word 0x7e8dddb2
.word 0xbec4f318
.word 0x7dda48e6
.word 0x7e8dddb2
.word 0xbec4f318
.word 0x7dda48e6
.word 0x7e8dddb2
.word 0xbec4f318
.word 0x7dda48e6
.word 0x7f1c1813
.word 0xbf4a4039
.word 0x7ef6a451
.word 0x7f1c1813
.word 0xbf4a4039
.word 0x7ef6a451
.word 0x7f1c1813
.word 0xbf4a4039
.word 0x7ef6a451
.word 0x7f1c1813
.word 0xbf4a4039
.word 0x7ef6a451
.word 0x7f1c1813
.word 0xbf4a4039
.word 0x7ef6a451
.word 0x7f1d27fd
.word 0xbf0313ed
.word 0x7ea0ef64
.word 0x7f1d27fd
.word 0xbf0313ed
.word 0x7ea0ef64
.word 0x7f1d27fd
.word 0xbf0313ed
.word 0x7ea0ef64
.word 0x7f1d27fd
.word 0xbf0313ed
.word 0x7ea0ef64
.word 0x7f1d27fd
.word 0xbf0313ed
.word 0x7ea0ef64
.word 0x7edf106b
.word 0xbfd32924
.word 0x7f37fe62
.word 0x7edf106b
.word 0xbfd32924
.word 0x7f37fe62
.word 0x7edf106b
.word 0xbfd32924
.word 0x7f37fe62
.word 0x7edf106b
.word 0xbfd32924
.word 0x7f37fe62
.word 0x7edf106b
.word 0xbfd32924
.word 0x7f37fe62
.word 0x7ed15d63
.word 0xbf1f58f4
.word 0x7e8251c0
.word 0x7ed15d63
.word 0xbf1f58f4
.word 0x7e8251c0
.word 0x7ed15d63
.word 0xbf1f58f4
.word 0x7e8251c0
.word 0x7ed15d63
.word 0xbf1f58f4
.word 0x7e8251c0
.word 0x7ed15d63
.word 0xbf1f58f4
.word 0x7e8251c0
.word 0x7eeb9bcd
.word 0xbe1e405c
.word 0x7d91a564
.word 0x7eeb9bcd
.word 0xbe1e405c
.word 0x7d91a564
.word 0x7eeb9bcd
.word 0xbe1e405c
.word 0x7d91a564
.word 0x7eeb9bcd
.word 0xbe1e405c
.word 0x7d91a564
.word 0x7eeb9bcd
.word 0xbe1e405c
.word 0x7d91a564
.word 0x7e8f91dd
.word 0xbdc58990
.word 0x7cdd90cb
.word 0x7e8f91dd
.word 0xbdc58990
.word 0x7cdd90cb
.word 0x7e8f91dd
.word 0xbdc58990
.word 0x7cdd90cb
.word 0x7e8f91dd
.word 0xbdc58990
.word 0x7cdd90cb
.word 0x7e8f91dd
.word 0xbdc58990
.word 0x7cdd90cb
.word 0x7db0c11b
.word 0xc0e73027
.word 0x7f1f9f7f
.word 0x7db0c11b
.word 0xc0e73027
.word 0x7f1f9f7f
.word 0x7db0c11b
.word 0xc0e73027
.word 0x7f1f9f7f
.word 0x7db0c11b
.word 0xc0e73027
.word 0x7f1f9f7f
.word 0x7db0c11b
.word 0xc0e73027
.word 0x7f1f9f7f
.word 0x7e55e8d8
.word 0xbfbc7042
.word 0x7e9d74cc
.word 0x7e55e8d8
.word 0xbfbc7042
.word 0x7e9d74cc
.word 0x7e55e8d8
.word 0xbfbc7042
.word 0x7e9d74cc
.word 0x7e55e8d8
.word 0xbfbc7042
.word 0x7e9d74cc
.word 0x7e55e8d8
.word 0xbfbc7042
.word 0x7e9d74cc
.word 0x7a01e1e1
.word 0xc4196885
.word 0x7e9baa0e
.word 0x7a01e1e1
.word 0xc4196885
.word 0x7e9baa0e
.word 0x7a01e1e1
.word 0xc4196885
.word 0x7e9baa0e
.word 0x7a01e1e1
.word 0xc4196885
.word 0x7e9baa0e
.word 0x7a01e1e1
.word 0xc4196885
.word 0x7e9baa0e
.word 0x7e36aa81
.word 0xc0730786
.word 0x7f2d6937
.word 0x7e36aa81
.word 0xc0730786
.word 0x7f2d6937
.word 0x7e36aa81
.word 0xc0730786
.word 0x7f2d6937
.word 0x7e36aa81
.word 0xc0730786
.word 0x7f2d6937
.word 0x7e36aa81
.word 0xc0730786
.word 0x7f2d6937
.word 0x7eeaedca
.word 0xbf76f305
.word 0x7ee29f84
.word 0x7eeaedca
.word 0xbf76f305
.word 0x7ee29f84
.word 0x7eeaedca
.word 0xbf76f305
.word 0x7ee29f84
.word 0x7eeaedca
.word 0xbf76f305
.word 0x7ee29f84
.word 0x7eeaedca
.word 0xbf76f305
.word 0x7ee29f84
.word 0x7eb2afd0
.word 0xbf513864
.word 0x7e9208e5
.word 0x7eb2afd0
.word 0xbf513864
.word 0x7e9208e5
.word 0x7eb2afd0
.word 0xbf513864
.word 0x7e9208e5
.word 0x7eb2afd0
.word 0xbf513864
.word 0x7e9208e5
.word 0x7eb2afd0
.word 0xbf513864
.word 0x7e9208e5
.word 0x7e148024
.word 0xbe3cd5fe
.word 0x7cdb1479
.word 0x7e148024
.word 0xbe3cd5fe
.word 0x7cdb1479
.word 0x7e148024
.word 0xbe3cd5fe
.word 0x7cdb1479
.word 0x7e148024
.word 0xbe3cd5fe
.word 0x7cdb1479
.word 0x7e148024
.word 0xbe3cd5fe
.word 0x7cdb1479
.word 0x7e73b9b6
.word 0xbf12733e
.word 0x7e0b6da2
.word 0x7e73b9b6
.word 0xbf12733e
.word 0x7e0b6da2
.word 0x7e73b9b6
.word 0xbf12733e
.word 0x7e0b6da2
.word 0x7e73b9b6
.word 0xbf12733e
.word 0x7e0b6da2
.word 0x7e73b9b6
.word 0xbf12733e
.word 0x7e0b6da2
.word 0x7d2653cb
.word 0xc01dd609
.word 0x7dcd18e7
.word 0x7d2653cb
.word 0xc01dd609
.word 0x7dcd18e7
.word 0x7d2653cb
.word 0xc01dd609
.word 0x7dcd18e7
.word 0x7d2653cb
.word 0xc01dd609
.word 0x7dcd18e7
.word 0x7d2653cb
.word 0xc01dd609
.word 0x7dcd18e7
.word 0x7eb516bd
.word 0xbef5a1a3
.word 0x7e2dc11a
.word 0x7eb516bd
.word 0xbef5a1a3
.word 0x7e2dc11a
.word 0x7eb516bd
.word 0xbef5a1a3
.word 0x7e2dc11a
.word 0x7eb516bd
.word 0xbef5a1a3
.word 0x7e2dc11a
.word 0x7eb516bd
.word 0xbef5a1a3
.word 0x7e2dc11a
.word 0x7ef24091
.word 0xbd87e5ab
.word 0x7d009962
.word 0x7ef24091
.word 0xbd87e5ab
.word 0x7d009962
.word 0x7ef24091
.word 0xbd87e5ab
.word 0x7d009962
.word 0x7ef24091
.word 0xbd87e5ab
.word 0x7d009962
.word 0x7ef24091
.word 0xbd87e5ab
.word 0x7d009962
.word 0x7e2838a7
.word 0xc0486d6d
.word 0x7f03b42b
.word 0x7e2838a7
.word 0xc0486d6d
.word 0x7f03b42b
.word 0x7e2838a7
.word 0xc0486d6d
.word 0x7f03b42b
.word 0x7e2838a7
.word 0xc0486d6d
.word 0x7f03b42b
.word 0x7e2838a7
.word 0xc0486d6d
.word 0x7f03b42b
.word 0x7ea95ec9
.word 0xbfbcaab6
.word 0x7ef9a51a
.word 0x7ea95ec9
.word 0xbfbcaab6
.word 0x7ef9a51a
.word 0x7ea95ec9
.word 0xbfbcaab6
.word 0x7ef9a51a
.word 0x7ea95ec9
.word 0xbfbcaab6
.word 0x7ef9a51a
.word 0x7ea95ec9
.word 0xbfbcaab6
.word 0x7ef9a51a
.word 0x7ca9b5ac
.word 0xc0b962d8
.word 0x7df5cba0
.word 0x7ca9b5ac
.word 0xc0b962d8
.word 0x7df5cba0
.word 0x7ca9b5ac
.word 0xc0b962d8
.word 0x7df5cba0
.word 0x7ca9b5ac
.word 0xc0b962d8
.word 0x7df5cba0
.word 0x7ca9b5ac
.word 0xc0b962d8
.word 0x7df5cba0
.word 0x7ef48e89
.word 0xbf90cab1
.word 0x7f0a51cf
.word 0x7ef48e89
.word 0xbf90cab1
.word 0x7f0a51cf
.word 0x7ef48e89
.word 0xbf90cab1
.word 0x7f0a51cf
.word 0x7ef48e89
.word 0xbf90cab1
.word 0x7f0a51cf
.word 0x7ef48e89
.word 0xbf90cab1
.word 0x7f0a51cf
.word 0x7eef83d9
.word 0xbf9efb14
.word 0x7f14be49
.word 0x7eef83d9
.word 0xbf9efb14
.word 0x7f14be49
.word 0x7eef83d9
.word 0xbf9efb14
.word 0x7f14be49
.word 0x7eef83d9
.word 0xbf9efb14
.word 0x7f14be49
.word 0x7eef83d9
.word 0xbf9efb14
.word 0x7f14be49
.word 0x7eff92d6
.word 0xbf21da8e
.word 0x7ea19589
.word 0x7eff92d6
.word 0xbf21da8e
.word 0x7ea19589
.word 0x7eff92d6
.word 0xbf21da8e
.word 0x7ea19589
.word 0x7eff92d6
.word 0xbf21da8e
.word 0x7ea19589
.word 0x7eff92d6
.word 0xbf21da8e
.word 0x7ea19589
.word 0x7f15d4d3
.word 0xbf3e8bad
.word 0x7edf0b6a
.word 0x7f15d4d3
.word 0xbf3e8bad
.word 0x7edf0b6a
.word 0x7f15d4d3
.word 0xbf3e8bad
.word 0x7edf0b6a
.word 0x7f15d4d3
.word 0xbf3e8bad
.word 0x7edf0b6a
.word 0x7f15d4d3
.word 0xbf3e8bad
.word 0x7edf0b6a
.word 0x7f0c3a54
.word 0xbe70e95d
.word 0x7e03f683
.word 0x7f0c3a54
.word 0xbe70e95d
.word 0x7e03f683
.word 0x7f0c3a54
.word 0xbe70e95d
.word 0x7e03f683
.word 0x7f0c3a54
.word 0xbe70e95d
.word 0x7e03f683
.word 0x7f0c3a54
.word 0xbe70e95d
.word 0x7e03f683
.word 0x7f04c0f2
.word 0xbf853b56
.word 0x7f0a2e07
.word 0x7f04c0f2
.word 0xbf853b56
.word 0x7f0a2e07
.word 0x7f04c0f2
.word 0xbf853b56
.word 0x7f0a2e07
.word 0x7f04c0f2
.word 0xbf853b56
.word 0x7f0a2e07
.word 0x7f04c0f2
.word 0xbf853b56
.word 0x7f0a2e07
.word 0x7f33fa2e
.word 0xbf0255a1
.word 0x7eb7427e
.word 0x7f33fa2e
.word 0xbf0255a1
.word 0x7eb7427e
.word 0x7f33fa2e
.word 0xbf0255a1
.word 0x7eb7427e
.word 0x7f33fa2e
.word 0xbf0255a1
.word 0x7eb7427e
.word 0x7f33fa2e
.word 0xbf0255a1
.word 0x7eb7427e
.word 0x7dff3dba
.word 0xc0a11bd1
.word 0x7f20a18e
.word 0x7dff3dba
.word 0xc0a11bd1
.word 0x7f20a18e
.word 0x7dff3dba
.word 0xc0a11bd1
.word 0x7f20a18e
.word 0x7dff3dba
.word 0xc0a11bd1
.word 0x7f20a18e
.word 0x7dff3dba
.word 0xc0a11bd1
.word 0x7f20a18e
.word 0x7ec6f72d
.word 0xbf82c459
.word 0x7ecb443e
.word 0x7ec6f72d
.word 0xbf82c459
.word 0x7ecb443e
.word 0x7ec6f72d
.word 0xbf82c459
.word 0x7ecb443e
.word 0x7ec6f72d
.word 0xbf82c459
.word 0x7ecb443e
.word 0x7ec6f72d
.word 0xbf82c459
.word 0x7ecb443e
.word 0x7f3b6a5b
.word 0xbf7adbb0
.word 0x7f37a6b2
.word 0x7f3b6a5b
.word 0xbf7adbb0
.word 0x7f37a6b2
.word 0x7f3b6a5b
.word 0xbf7adbb0
.word 0x7f37a6b2
.word 0x7f3b6a5b
.word 0xbf7adbb0
.word 0x7f37a6b2
.word 0x7f3b6a5b
.word 0xbf7adbb0
.word 0x7f37a6b2
.word 0x7f2705e0
.word 0xbf4a90d7
.word 0x7f042923
.word 0x7f2705e0
.word 0xbf4a90d7
.word 0x7f042923
.word 0x7f2705e0
.word 0xbf4a90d7
.word 0x7f042923
.word 0x7f2705e0
.word 0xbf4a90d7
.word 0x7f042923
.word 0x7f2705e0
.word 0xbf4a90d7
.word 0x7f042923
.word 0x7e866ad6
.word 0xc01a1b4e
.word 0x7f21d537
.word 0x7e866ad6
.word 0xc01a1b4e
.word 0x7f21d537
.word 0x7e866ad6
.word 0xc01a1b4e
.word 0x7f21d537
.word 0x7e866ad6
.word 0xc01a1b4e
.word 0x7f21d537
.word 0x7e866ad6
.word 0xc01a1b4e
.word 0x7f21d537
.word 0x7f0da9b0
.word 0xbf8fad14
.word 0x7f1f0320
.word 0x7f0da9b0
.word 0xbf8fad14
.word 0x7f1f0320
.word 0x7f0da9b0
.word 0xbf8fad14
.word 0x7f1f0320
.word 0x7f0da9b0
.word 0xbf8fad14
.word 0x7f1f0320
.word 0x7f0da9b0
.word 0xbf8fad14
.word 0x7f1f0320
.word 0x7e85966f
.word 0xbfecf9b4
.word 0x7ef751f9
.word 0x7e85966f
.word 0xbfecf9b4
.word 0x7ef751f9
.word 0x7e85966f
.word 0xbfecf9b4
.word 0x7ef751f9
.word 0x7e85966f
.word 0xbfecf9b4
.word 0x7ef751f9
.word 0x7e85966f
.word 0xbfecf9b4
.word 0x7ef751f9
.word 0x7ef89da3
.word 0xbf9db158
.word 0x7f1924e8
.word 0x7ef89da3
.word 0xbf9db158
.word 0x7f1924e8
.word 0x7ef89da3
.word 0xbf9db158
.word 0x7f1924e8
.word 0x7ef89da3
.word 0xbf9db158
.word 0x7f1924e8
.word 0x7ef89da3
.word 0xbf9db158
.word 0x7f1924e8
.word 0x7eb1c4c0
.word 0xbfe1ceaa
.word 0x7f1ccd6f
.word 0x7eb1c4c0
.word 0xbfe1ceaa
.word 0x7f1ccd6f
.word 0x7eb1c4c0
.word 0xbfe1ceaa
.word 0x7f1ccd6f
.word 0x7eb1c4c0
.word 0xbfe1ceaa
.word 0x7f1ccd6f
.word 0x7eb1c4c0
.word 0xbfe1ceaa
.word 0x7f1ccd6f
.word 0x7e40881b
.word 0xc02b773c
.word 0x7f00f497
.word 0x7e40881b
.word 0xc02b773c
.word 0x7f00f497
.word 0x7e40881b
.word 0xc02b773c
.word 0x7f00f497
.word 0x7e40881b
.word 0xc02b773c
.word 0x7f00f497
.word 0x7e40881b
.word 0xc02b773c
.word 0x7f00f497
.word 0x7c0e4d98
.word 0xc23ceebe
.word 0x7ed20b63
.word 0x7c0e4d98
.word 0xc23ceebe
.word 0x7ed20b63
.word 0x7c0e4d98
.word 0xc23ceebe
.word 0x7ed20b63
.word 0x7c0e4d98
.word 0xc23ceebe
.word 0x7ed20b63
.word 0x7c0e4d98
.word 0xc23ceebe
.word 0x7ed20b63
.word 0x7ef97b55
.word 0xbf64cca5
.word 0x7edef947
.word 0x7ef97b55
.word 0xbf64cca5
.word 0x7edef947
.word 0x7ef97b55
.word 0xbf64cca5
.word 0x7edef947
.word 0x7ef97b55
.word 0xbf64cca5
.word 0x7edef947
.word 0x7ef97b55
.word 0xbf64cca5
.word 0x7edef947
.word 0x7e61ada9
.word 0xc04defe6
.word 0x7f358b8d
.word 0x7e61ada9
.word 0xc04defe6
.word 0x7f358b8d
.word 0x7e61ada9
.word 0xc04defe6
.word 0x7f358b8d
.word 0x7e61ada9
.word 0xc04defe6
.word 0x7f358b8d
.word 0x7e61ada9
.word 0xc04defe6
.word 0x7f358b8d
.word 0x7f13caa0
.word 0xbf65c581
.word 0x7f04a647
.word 0x7f13caa0
.word 0xbf65c581
.word 0x7f04a647
.word 0x7f13caa0
.word 0xbf65c581
.word 0x7f04a647
.word 0x7f13caa0
.word 0xbf65c581
.word 0x7f04a647
.word 0x7f13caa0
.word 0xbf65c581
.word 0x7f04a647
.word 0x7e57b1c2
.word 0xbfdd5a9b
.word 0x7eba80cc
.word 0x7e57b1c2
.word 0xbfdd5a9b
.word 0x7eba80cc
.word 0x7e57b1c2
.word 0xbfdd5a9b
.word 0x7eba80cc
.word 0x7e57b1c2
.word 0xbfdd5a9b
.word 0x7eba80cc
.word 0x7e57b1c2
.word 0xbfdd5a9b
.word 0x7eba80cc
.word 0x7e8b8ecb
.word 0xbff81ce6
.word 0x7f074216
.word 0x7e8b8ecb
.word 0xbff81ce6
.word 0x7f074216
.word 0x7e8b8ecb
.word 0xbff81ce6
.word 0x7f074216
.word 0x7e8b8ecb
.word 0xbff81ce6
.word 0x7f074216
.word 0x7e8b8ecb
.word 0xbff81ce6
.word 0x7f074216
.word 0x7efefbaa
.word 0xbf926eac
.word 0x7f11d9c2
.word 0x7efefbaa
.word 0xbf926eac
.word 0x7f11d9c2
.word 0x7efefbaa
.word 0xbf926eac
.word 0x7f11d9c2
.word 0x7efefbaa
.word 0xbf926eac
.word 0x7f11d9c2
.word 0x7efefbaa
.word 0xbf926eac
.word 0x7f11d9c2
.word 0x7f14c7ca
.word 0xbf65789e
.word 0x7f055cd1
.word 0x7f14c7ca
.word 0xbf65789e
.word 0x7f055cd1
.word 0x7f14c7ca
.word 0xbf65789e
.word 0x7f055cd1
.word 0x7f14c7ca
.word 0xbf65789e
.word 0x7f055cd1
.word 0x7f14c7ca
.word 0xbf65789e
.word 0x7f055cd1
.word 0x7e8abfd0
.word 0xc00b3975
.word 0x7f16ea94
.word 0x7e8abfd0
.word 0xc00b3975
.word 0x7f16ea94
.word 0x7e8abfd0
.word 0xc00b3975
.word 0x7f16ea94
.word 0x7e8abfd0
.word 0xc00b3975
.word 0x7f16ea94
.word 0x7e8abfd0
.word 0xc00b3975
.word 0x7f16ea94
.word 0x7f1625cb
.word 0xbf8df910
.word 0x7f2689cb
.word 0x7f1625cb
.word 0xbf8df910
.word 0x7f2689cb
.word 0x7f1625cb
.word 0xbf8df910
.word 0x7f2689cb
.word 0x7f1625cb
.word 0xbf8df910
.word 0x7f2689cb
.word 0x7f1625cb
.word 0xbf8df910
.word 0x7f2689cb
.word 0x7d88ea41
.word 0xc0438442
.word 0x7e512259
.word 0x7d88ea41
.word 0xc0438442
.word 0x7e512259
.word 0x7d88ea41
.word 0xc0438442
.word 0x7e512259
.word 0x7d88ea41
.word 0xc0438442
.word 0x7e512259
.word 0x7d88ea41
.word 0xc0438442
.word 0x7e512259
.word 0x7ebfbd64
.word 0xbf2d8949
.word 0x7e81f9d0
.word 0x7ebfbd64
.word 0xbf2d8949
.word 0x7e81f9d0
.word 0x7ebfbd64
.word 0xbf2d8949
.word 0x7e81f9d0
.word 0x7ebfbd64
.word 0xbf2d8949
.word 0x7e81f9d0
.word 0x7ebfbd64
.word 0xbf2d8949
.word 0x7e81f9d0
.word 0x7f3848de
.word 0xbf273904
.word 0x7ef0c129
.word 0x7f3848de
.word 0xbf273904
.word 0x7ef0c129
.word 0x7f3848de
.word 0xbf273904
.word 0x7ef0c129
.word 0x7f3848de
.word 0xbf273904
.word 0x7ef0c129
.word 0x7f3848de
.word 0xbf273904
.word 0x7ef0c129
.word 0x7e90c4ae
.word 0xc027ca24
.word 0x7f3dc53a
.word 0x7e90c4ae
.word 0xc027ca24
.word 0x7f3dc53a
.word 0x7e90c4ae
.word 0xc027ca24
.word 0x7f3dc53a
.word 0x7e90c4ae
.word 0xc027ca24
.word 0x7f3dc53a
.word 0x7e90c4ae
.word 0xc027ca24
.word 0x7f3dc53a
.word 0x7e9b0e1c
.word 0xbeb9c4ac
.word 0x7de108a4
.word 0x7e9b0e1c
.word 0xbeb9c4ac
.word 0x7de108a4
.word 0x7e9b0e1c
.word 0xbeb9c4ac
.word 0x7de108a4
.word 0x7e9b0e1c
.word 0xbeb9c4ac
.word 0x7de108a4
.word 0x7e9b0e1c
.word 0xbeb9c4ac
.word 0x7de108a4
.word 0x7eb7f3c9
.word 0xbf1b85b6
.word 0x7e5f815f
.word 0x7eb7f3c9
.word 0xbf1b85b6
.word 0x7e5f815f
.word 0x7eb7f3c9
.word 0xbf1b85b6
.word 0x7e5f815f
.word 0x7eb7f3c9
.word 0xbf1b85b6
.word 0x7e5f815f
.word 0x7eb7f3c9
.word 0xbf1b85b6
.word 0x7e5f815f
.word 0x7ebb73fa
.word 0xbfbf4883
.word 0x7f0c10a1
.word 0x7ebb73fa
.word 0xbfbf4883
.word 0x7f0c10a1
.word 0x7ebb73fa
.word 0xbfbf4883
.word 0x7f0c10a1
.word 0x7ebb73fa
.word 0xbfbf4883
.word 0x7f0c10a1
.word 0x7ebb73fa
.word 0xbfbf4883
.word 0x7f0c10a1
.word 0x7f3b64b8
.word 0xbeedebb7
.word 0x7eae28cb
.word 0x7f3b64b8
.word 0xbeedebb7
.word 0x7eae28cb
.word 0x7f3b64b8
.word 0xbeedebb7
.word 0x7eae28cb
.word 0x7f3b64b8
.word 0xbeedebb7
.word 0x7eae28cb
.word 0x7f3b64b8
.word 0xbeedebb7
.word 0x7eae28cb
.word 0x7f3fdd96
.word 0xbf5a545b
.word 0x7f23a1eb
.word 0x7f3fdd96
.word 0xbf5a545b
.word 0x7f23a1eb
.word 0x7f3fdd96
.word 0xbf5a545b
.word 0x7f23a1eb
.word 0x7f3fdd96
.word 0xbf5a545b
.word 0x7f23a1eb
.word 0x7f3fdd96
.word 0xbf5a545b
.word 0x7f23a1eb
.word 0x7e626a93
.word 0xbfc4bf77
.word 0x7eae02f0
.word 0x7e626a93
.word 0xbfc4bf77
.word 0x7eae02f0
.word 0x7e626a93
.word 0xbfc4bf77
.word 0x7eae02f0
.word 0x7e626a93
.word 0xbfc4bf77
.word 0x7eae02f0
.word 0x7e626a93
.word 0xbfc4bf77
.word 0x7eae02f0
.word 0x7de53da7
.word 0xc0b51f02
.word 0x7f22305b
.word 0x7de53da7
.word 0xc0b51f02
.word 0x7f22305b
.word 0x7de53da7
.word 0xc0b51f02
.word 0x7f22305b
.word 0x7de53da7
.word 0xc0b51f02
.word 0x7f22305b
.word 0x7de53da7
.word 0xc0b51f02
.word 0x7f22305b
.word 0x7da3c8dc
.word 0xc082691f
.word 0x7ea6de83
.word 0x7da3c8dc
.word 0xc082691f
.word 0x7ea6de83
.word 0x7da3c8dc
.word 0xc082691f
.word 0x7ea6de83
.word 0x7da3c8dc
.word 0xc082691f
.word 0x7ea6de83
.word 0x7da3c8dc
.word 0xc082691f
.word 0x7ea6de83
.word 0x7ef212c5
.word 0xbfa0008a
.word 0x7f174c3e
.word 0x7ef212c5
.word 0xbfa0008a
.word 0x7f174c3e
.word 0x7ef212c5
.word 0xbfa0008a
.word 0x7f174c3e
.word 0x7ef212c5
.word 0xbfa0008a
.word 0x7f174c3e
.word 0x7ef212c5
.word 0xbfa0008a
.word 0x7f174c3e
.word 0x7f0c7ac4
.word 0xbfa62942
.word 0x7f365c7f
.word 0x7f0c7ac4
.word 0xbfa62942
.word 0x7f365c7f
.word 0x7f0c7ac4
.word 0xbfa62942
.word 0x7f365c7f
.word 0x7f0c7ac4
.word 0xbfa62942
.word 0x7f365c7f
.word 0x7f0c7ac4
.word 0xbfa62942
.word 0x7f365c7f
.word 0x7f20fa79
.word 0xbe1f78b2
.word 0x7dc88eed
.word 0x7f20fa79
.word 0xbe1f78b2
.word 0x7dc88eed
.word 0x7f20fa79
.word 0xbe1f78b2
.word 0x7dc88eed
.word 0x7f20fa79
.word 0xbe1f78b2
.word 0x7dc88eed
.word 0x7f20fa79
.word 0xbe1f78b2
.word 0x7dc88eed
.word 0x7cc90a06
.word 0xc17157ba
.word 0x7ebd8755
.word 0x7cc90a06
.word 0xc17157ba
.word 0x7ebd8755
.word 0x7cc90a06
.word 0xc17157ba
.word 0x7ebd8755
.word 0x7cc90a06
.word 0xc17157ba
.word 0x7ebd8755
.word 0x7cc90a06
.word 0xc17157ba
.word 0x7ebd8755
.word 0x7d2b21f2
.word 0xc1838e08
.word 0x7f2fe2a3
.word 0x7d2b21f2
.word 0xc1838e08
.word 0x7f2fe2a3
.word 0x7d2b21f2
.word 0xc1838e08
.word 0x7f2fe2a3
.word 0x7d2b21f2
.word 0xc1838e08
.word 0x7f2fe2a3
.word 0x7d2b21f2
.word 0xc1838e08
.word 0x7f2fe2a3
.word 0x7eaef9b3
.word 0xbf6cf335
.word 0x7ea1f46d
.word 0x7eaef9b3
.word 0xbf6cf335
.word 0x7ea1f46d
.word 0x7eaef9b3
.word 0xbf6cf335
.word 0x7ea1f46d
.word 0x7eaef9b3
.word 0xbf6cf335
.word 0x7ea1f46d
.word 0x7eaef9b3
.word 0xbf6cf335
.word 0x7ea1f46d
.word 0x7ee414a9
.word 0xbfb211a1
.word 0x7f1ea613
.word 0x7ee414a9
.word 0xbfb211a1
.word 0x7f1ea613
.word 0x7ee414a9
.word 0xbfb211a1
.word 0x7f1ea613
.word 0x7ee414a9
.word 0xbfb211a1
.word 0x7f1ea613
.word 0x7ee414a9
.word 0xbfb211a1
.word 0x7f1ea613
.word 0x7e9bdc6a
.word 0xbf15b123
.word 0x7e364645
.word 0x7e9bdc6a
.word 0xbf15b123
.word 0x7e364645
.word 0x7e9bdc6a
.word 0xbf15b123
.word 0x7e364645
.word 0x7e9bdc6a
.word 0xbf15b123
.word 0x7e364645
.word 0x7e9bdc6a
.word 0xbf15b123
.word 0x7e364645
.word 0x7f3d723b
.word 0xbf0a6ccf
.word 0x7ecce034
.word 0x7f3d723b
.word 0xbf0a6ccf
.word 0x7ecce034
.word 0x7f3d723b
.word 0xbf0a6ccf
.word 0x7ecce034
.word 0x7f3d723b
.word 0xbf0a6ccf
.word 0x7ecce034
.word 0x7f3d723b
.word 0xbf0a6ccf
.word 0x7ecce034
.word 0x7df81bf7
.word 0xbe99e553
.word 0x7d1526f9
.word 0x7df81bf7
.word 0xbe99e553
.word 0x7d1526f9
.word 0x7df81bf7
.word 0xbe99e553
.word 0x7d1526f9
.word 0x7df81bf7
.word 0xbe99e553
.word 0x7d1526f9
.word 0x7df81bf7
.word 0xbe99e553
.word 0x7d1526f9
.word 0x7f04524e
.word 0xbfb91f1a
.word 0x7f3f5f1d
.word 0x7f04524e
.word 0xbfb91f1a
.word 0x7f3f5f1d
.word 0x7f04524e
.word 0xbfb91f1a
.word 0x7f3f5f1d
.word 0x7f04524e
.word 0xbfb91f1a
.word 0x7f3f5f1d
.word 0x7f04524e
.word 0xbfb91f1a
.word 0x7f3f5f1d
.word 0x7d703804
.word 0xbff3aee7
.word 0x7de4a94b
.word 0x7d703804
.word 0xbff3aee7
.word 0x7de4a94b
.word 0x7d703804
.word 0xbff3aee7
.word 0x7de4a94b
.word 0x7d703804
.word 0xbff3aee7
.word 0x7de4a94b
.word 0x7d703804
.word 0xbff3aee7
.word 0x7de4a94b
.word 0x7e734d68
.word 0xbf0f6a98
.word 0x7e084d8c
.word 0x7e734d68
.word 0xbf0f6a98
.word 0x7e084d8c
.word 0x7e734d68
.word 0xbf0f6a98
.word 0x7e084d8c
.word 0x7e734d68
.word 0xbf0f6a98
.word 0x7e084d8c
.word 0x7e734d68
.word 0xbf0f6a98
.word 0x7e084d8c
.word 0x7ed155d6
.word 0xbf12ba16
.word 0x7e6ff63d
.word 0x7ed155d6
.word 0xbf12ba16
.word 0x7e6ff63d
.word 0x7ed155d6
.word 0xbf12ba16
.word 0x7e6ff63d
.word 0x7ed155d6
.word 0xbf12ba16
.word 0x7e6ff63d
.word 0x7ed155d6
.word 0xbf12ba16
.word 0x7e6ff63d
.word 0x7e828b61
.word 0xc02dfcc1
.word 0x7f317228
.word 0x7e828b61
.word 0xc02dfcc1
.word 0x7f317228
.word 0x7e828b61
.word 0xc02dfcc1
.word 0x7f317228
.word 0x7e828b61
.word 0xc02dfcc1
.word 0x7f317228
.word 0x7e828b61
.word 0xc02dfcc1
.word 0x7f317228
.word 0x7eea8ec9
.word 0xbfc06305
.word 0x7f3045d1
.word 0x7eea8ec9
.word 0xbfc06305
.word 0x7f3045d1
.word 0x7eea8ec9
.word 0xbfc06305
.word 0x7f3045d1
.word 0x7eea8ec9
.word 0xbfc06305
.word 0x7f3045d1
.word 0x7eea8ec9
.word 0xbfc06305
.word 0x7f3045d1
.word 0x7d8c0d61
.word 0xc06f2b41
.word 0x7e82d828
.word 0x7d8c0d61
.word 0xc06f2b41
.word 0x7e82d828
.word 0x7d8c0d61
.word 0xc06f2b41
.word 0x7e82d828
.word 0x7d8c0d61
.word 0xc06f2b41
.word 0x7e82d828
.word 0x7d8c0d61
.word 0xc06f2b41
.word 0x7e82d828
.word 0x7ce1107d
.word 0xc1ce8dd6
.word 0x7f3597f8
.word 0x7ce1107d
.word 0xc1ce8dd6
.word 0x7f3597f8
.word 0x7ce1107d
.word 0xc1ce8dd6
.word 0x7f3597f8
.word 0x7ce1107d
.word 0xc1ce8dd6
.word 0x7f3597f8
.word 0x7ce1107d
.word 0xc1ce8dd6
.word 0x7f3597f8
.word 0x7f191148
.word 0xbf8a0793
.word 0x7f250fb1
.word 0x7f191148
.word 0xbf8a0793
.word 0x7f250fb1
.word 0x7f191148
.word 0xbf8a0793
.word 0x7f250fb1
.word 0x7f191148
.word 0xbf8a0793
.word 0x7f250fb1
.word 0x7f191148
.word 0xbf8a0793
.word 0x7f250fb1
.word 0x7da5f81d
.word 0xc0dda39a
.word 0x7f0fb142
.word 0x7da5f81d
.word 0xc0dda39a
.word 0x7f0fb142
.word 0x7da5f81d
.word 0xc0dda39a
.word 0x7f0fb142
.word 0x7da5f81d
.word 0xc0dda39a
.word 0x7f0fb142
.word 0x7da5f81d
.word 0xc0dda39a
.word 0x7f0fb142
.word 0x7ec97c49
.word 0xbfbd34f5
.word 0x7f14ea70
.word 0x7ec97c49
.word 0xbfbd34f5
.word 0x7f14ea70
.word 0x7ec97c49
.word 0xbfbd34f5
.word 0x7f14ea70
.word 0x7ec97c49
.word 0xbfbd34f5
.word 0x7f14ea70
.word 0x7ec97c49
.word 0xbfbd34f5
.word 0x7f14ea70
.word 0x7e843e1b
.word 0xbf83dea5
.word 0x7e883d97
.word 0x7e843e1b
.word 0xbf83dea5
.word 0x7e883d97
.word 0x7e843e1b
.word 0xbf83dea5
.word 0x7e883d97
.word 0x7e843e1b
.word 0xbf83dea5
.word 0x7e883d97
.word 0x7e843e1b
.word 0xbf83dea5
.word 0x7e883d97
.word 0x7f327e6a
.word 0xbf81b4a9
.word 0x7f34df56
.word 0x7f327e6a
.word 0xbf81b4a9
.word 0x7f34df56
.word 0x7f327e6a
.word 0xbf81b4a9
.word 0x7f34df56
.word 0x7f327e6a
.word 0xbf81b4a9
.word 0x7f34df56
.word 0x7f327e6a
.word 0xbf81b4a9
.word 0x7f34df56
.word 0x7e16edbb
.word 0xc0761db3
.word 0x7f1119f4
.word 0x7e16edbb
.word 0xc0761db3
.word 0x7f1119f4
.word 0x7e16edbb
.word 0xc0761db3
.word 0x7f1119f4
.word 0x7e16edbb
.word 0xc0761db3
.word 0x7f1119f4
.word 0x7e16edbb
.word 0xc0761db3
.word 0x7f1119f4
.word 0x7e0af237
.word 0xc0a8f25d
.word 0x7f376500
.word 0x7e0af237
.word 0xc0a8f25d
.word 0x7f376500
.word 0x7e0af237
.word 0xc0a8f25d
.word 0x7f376500
.word 0x7e0af237
.word 0xc0a8f25d
.word 0x7f376500
.word 0x7e0af237
.word 0xc0a8f25d
.word 0x7f376500
.word 0x7bdf1c44
.word 0xc0a4b4d2
.word 0x7d0f8bb3
.word 0x7bdf1c44
.word 0xc0a4b4d2
.word 0x7d0f8bb3
.word 0x7bdf1c44
.word 0xc0a4b4d2
.word 0x7d0f8bb3
.word 0x7bdf1c44
.word 0xc0a4b4d2
.word 0x7d0f8bb3
.word 0x7bdf1c44
.word 0xc0a4b4d2
.word 0x7d0f8bb3
.word 0x7e8c9d65
.word 0xbfca38ba
.word 0x7ede26b6
.word 0x7e8c9d65
.word 0xbfca38ba
.word 0x7ede26b6
.word 0x7e8c9d65
.word 0xbfca38ba
.word 0x7ede26b6
.word 0x7e8c9d65
.word 0xbfca38ba
.word 0x7ede26b6
.word 0x7e8c9d65
.word 0xbfca38ba
.word 0x7ede26b6
.word 0x7c5e038c
.word 0xc22e660b
.word 0x7f173ee9
.word 0x7c5e038c
.word 0xc22e660b
.word 0x7f173ee9
.word 0x7c5e038c
.word 0xc22e660b
.word 0x7f173ee9
.word 0x7c5e038c
.word 0xc22e660b
.word 0x7f173ee9
.word 0x7c5e038c
.word 0xc22e660b
.word 0x7f173ee9
.word 0x7f0ff5ec
.word 0xbf903b80
.word 0x7f223795
.word 0x7f0ff5ec
.word 0xbf903b80
.word 0x7f223795
.word 0x7f0ff5ec
.word 0xbf903b80
.word 0x7f223795
.word 0x7f0ff5ec
.word 0xbf903b80
.word 0x7f223795
.word 0x7f0ff5ec
.word 0xbf903b80
.word 0x7f223795
.word 0x7f3b3817
.word 0xbcc01917
.word 0x7c8c7c6b
.word 0x7f3b3817
.word 0xbcc01917
.word 0x7c8c7c6b
.word 0x7f3b3817
.word 0xbcc01917
.word 0x7c8c7c6b
.word 0x7f3b3817
.word 0xbcc01917
.word 0x7c8c7c6b
.word 0x7f3b3817
.word 0xbcc01917
.word 0x7c8c7c6b
.word 0x7f074be5
.word 0xbda5a9d6
.word 0x7d2f1b5a
.word 0x7f074be5
.word 0xbda5a9d6
.word 0x7d2f1b5a
.word 0x7f074be5
.word 0xbda5a9d6
.word 0x7d2f1b5a
.word 0x7f074be5
.word 0xbda5a9d6
.word 0x7d2f1b5a
.word 0x7f074be5
.word 0xbda5a9d6
.word 0x7d2f1b5a
.word 0x7e728772
.word 0xbfc30d36
.word 0x7eb8c9b0
.word 0x7e728772
.word 0xbfc30d36
.word 0x7eb8c9b0
.word 0x7e728772
.word 0xbfc30d36
.word 0x7eb8c9b0
.word 0x7e728772
.word 0xbfc30d36
.word 0x7eb8c9b0
.word 0x7e728772
.word 0xbfc30d36
.word 0x7eb8c9b0
.word 0x7f1d27cc
.word 0xbf165ba8
.word 0x7eb89b2c
.word 0x7f1d27cc
.word 0xbf165ba8
.word 0x7eb89b2c
.word 0x7f1d27cc
.word 0xbf165ba8
.word 0x7eb89b2c
.word 0x7f1d27cc
.word 0xbf165ba8
.word 0x7eb89b2c
.word 0x7f1d27cc
.word 0xbf165ba8
.word 0x7eb89b2c
.word 0x7e81c09c
.word 0xbf6ad52b
.word 0x7e6e0c34
.word 0x7e81c09c
.word 0xbf6ad52b
.word 0x7e6e0c34
.word 0x7e81c09c
.word 0xbf6ad52b
.word 0x7e6e0c34
.word 0x7e81c09c
.word 0xbf6ad52b
.word 0x7e6e0c34
.word 0x7e81c09c
.word 0xbf6ad52b
.word 0x7e6e0c34
.word 0x7b26497d
.word 0xc3486327
.word 0x7f0229d2
.word 0x7b26497d
.word 0xc3486327
.word 0x7f0229d2
.word 0x7b26497d
.word 0xc3486327
.word 0x7f0229d2
.word 0x7b26497d
.word 0xc3486327
.word 0x7f0229d2
.word 0x7b26497d
.word 0xc3486327
.word 0x7f0229d2
.word 0x7e67719b
.word 0xc000154c
.word 0x7ee7981f
.word 0x7e67719b
.word 0xc000154c
.word 0x7ee7981f
.word 0x7e67719b
.word 0xc000154c
.word 0x7ee7981f
.word 0x7e67719b
.word 0xc000154c
.word 0x7ee7981f
.word 0x7e67719b
.word 0xc000154c
.word 0x7ee7981f
.word 0x7ddfcc51
.word 0xbee4e70b
.word 0x7d481bf3
.word 0x7ddfcc51
.word 0xbee4e70b
.word 0x7d481bf3
.word 0x7ddfcc51
.word 0xbee4e70b
.word 0x7d481bf3
.word 0x7ddfcc51
.word 0xbee4e70b
.word 0x7d481bf3
.word 0x7ddfcc51
.word 0xbee4e70b
.word 0x7d481bf3
.word 0x7e8ab269
.word 0xbeeb3fb1
.word 0x7dfee893
.word 0x7e8ab269
.word 0xbeeb3fb1
.word 0x7dfee893
.word 0x7e8ab269
.word 0xbeeb3fb1
.word 0x7dfee893
.word 0x7e8ab269
.word 0xbeeb3fb1
.word 0x7dfee893
.word 0x7e8ab269
.word 0xbeeb3fb1
.word 0x7dfee893
.word 0x7f2b9930
.word 0xbeab2afd
.word 0x7e657849
.word 0x7f2b9930
.word 0xbeab2afd
.word 0x7e657849
.word 0x7f2b9930
.word 0xbeab2afd
.word 0x7e657849
.word 0x7f2b9930
.word 0xbeab2afd
.word 0x7e657849
.word 0x7f2b9930
.word 0xbeab2afd
.word 0x7e657849
.word 0x7f049a6e
.word 0xbfb32355
.word 0x7f399491
.word 0x7f049a6e
.word 0xbfb32355
.word 0x7f399491
.word 0x7f049a6e
.word 0xbfb32355
.word 0x7f399491
.word 0x7f049a6e
.word 0xbfb32355
.word 0x7f399491
.word 0x7f049a6e
.word 0xbfb32355
.word 0x7f399491
.word 0x7e1d454a
.word 0xc0930ace
.word 0x7f34aad9
.word 0x7e1d454a
.word 0xc0930ace
.word 0x7f34aad9
.word 0x7e1d454a
.word 0xc0930ace
.word 0x7f34aad9
.word 0x7e1d454a
.word 0xc0930ace
.word 0x7f34aad9
.word 0x7e1d454a
.word 0xc0930ace
.word 0x7f34aad9
.word 0x7ecf0fd2
.word 0xbfa0e6fd
.word 0x7f0224b8
.word 0x7ecf0fd2
.word 0xbfa0e6fd
.word 0x7f0224b8
.word 0x7ecf0fd2
.word 0xbfa0e6fd
.word 0x7f0224b8
.word 0x7ecf0fd2
.word 0xbfa0e6fd
.word 0x7f0224b8
.word 0x7ecf0fd2
.word 0xbfa0e6fd
.word 0x7f0224b8
.word 0x7e5e2fb5
.word 0xc054b2a7
.word 0x7f389a90
.word 0x7e5e2fb5
.word 0xc054b2a7
.word 0x7f389a90
.word 0x7e5e2fb5
.word 0xc054b2a7
.word 0x7f389a90
.word 0x7e5e2fb5
.word 0xc054b2a7
.word 0x7f389a90
.word 0x7e5e2fb5
.word 0xc054b2a7
.word 0x7f389a90
.word 0x7f3c9ff5
.word 0xbf635528
.word 0x7f278095
.word 0x7f3c9ff5
.word 0xbf635528
.word 0x7f278095
.word 0x7f3c9ff5
.word 0xbf635528
.word 0x7f278095
.word 0x7f3c9ff5
.word 0xbf635528
.word 0x7f278095
.word 0x7f3c9ff5
.word 0xbf635528
.word 0x7f278095
.word 0x7e20dccc
.word 0xbf83ae89
.word 0x7e257d51
.word 0x7e20dccc
.word 0xbf83ae89
.word 0x7e257d51
.word 0x7e20dccc
.word 0xbf83ae89
.word 0x7e257d51
.word 0x7e20dccc
.word 0xbf83ae89
.word 0x7e257d51
.word 0x7e20dccc
.word 0xbf83ae89
.word 0x7e257d51
.word 0x7aae79de
.word 0xc3f57c34
.word 0x7f274f48
.word 0x7aae79de
.word 0xc3f57c34
.word 0x7f274f48
.word 0x7aae79de
.word 0xc3f57c34
.word 0x7f274f48
.word 0x7aae79de
.word 0xc3f57c34
.word 0x7f274f48
.word 0x7aae79de
.word 0xc3f57c34
.word 0x7f274f48
.word 0x7eed1a0c
.word 0xbe521f16
.word 0x7dc29c29
.word 0x7eed1a0c
.word 0xbe521f16
.word 0x7dc29c29
.word 0x7eed1a0c
.word 0xbe521f16
.word 0x7dc29c29
.word 0x7eed1a0c
.word 0xbe521f16
.word 0x7dc29c29
.word 0x7eed1a0c
.word 0xbe521f16
.word 0x7dc29c29
.word 0x7f190d5e
.word 0xbe32420c
.word 0x7dd52591
.word 0x7f190d5e
.word 0xbe32420c
.word 0x7dd52591
.word 0x7f190d5e
.word 0xbe32420c
.word 0x7dd52591
.word 0x7f190d5e
.word 0xbe32420c
.word 0x7dd52591
.word 0x7f190d5e
.word 0xbe32420c
.word 0x7dd52591
.word 0x7f1304ef
.word 0xbe557010
.word 0x7df526ed
.word 0x7f1304ef
.word 0xbe557010
.word 0x7df526ed
.word 0x7f1304ef
.word 0xbe557010
.word 0x7df526ed
.word 0x7f1304ef
.word 0xbe557010
.word 0x7df526ed
.word 0x7f1304ef
.word 0xbe557010
.word 0x7df526ed
.word 0x7e56a477
.word 0xc051d69a
.word 0x7f2ff034
.word 0x7e56a477
.word 0xc051d69a
.word 0x7f2ff034
.word 0x7e56a477
.word 0xc051d69a
.word 0x7f2ff034
.word 0x7e56a477
.word 0xc051d69a
.word 0x7f2ff034
.word 0x7e56a477
.word 0xc051d69a
.word 0x7f2ff034
.word 0x7c2125ab
.word 0xc18435fb
.word 0x7e2672cf
.word 0x7c2125ab
.word 0xc18435fb
.word 0x7e2672cf
.word 0x7c2125ab
.word 0xc18435fb
.word 0x7e2672cf
.word 0x7c2125ab
.word 0xc18435fb
.word 0x7e2672cf
.word 0x7c2125ab
.word 0xc18435fb
.word 0x7e2672cf
.word 0x7ed0cddd
.word 0xbf871ab8
.word 0x7edc64b6
.word 0x7ed0cddd
.word 0xbf871ab8
.word 0x7edc64b6
.word 0x7ed0cddd
.word 0xbf871ab8
.word 0x7edc64b6
.word 0x7ed0cddd
.word 0xbf871ab8
.word 0x7edc64b6
.word 0x7ed0cddd
.word 0xbf871ab8
.word 0x7edc64b6
.word 0x7eb41f5c
.word 0xbf0691ee
.word 0x7e3d5e30
.word 0x7eb41f5c
.word 0xbf0691ee
.word 0x7e3d5e30
.word 0x7eb41f5c
.word 0xbf0691ee
.word 0x7e3d5e30
.word 0x7eb41f5c
.word 0xbf0691ee
.word 0x7e3d5e30
.word 0x7eb41f5c
.word 0xbf0691ee
.word 0x7e3d5e30
.word 0x7f2cf90f
.word 0xbe00acab
.word 0x7dade265
.word 0x7f2cf90f
.word 0xbe00acab
.word 0x7dade265
.word 0x7f2cf90f
.word 0xbe00acab
.word 0x7dade265
.word 0x7f2cf90f
.word 0xbe00acab
.word 0x7dade265
.word 0x7f2cf90f
.word 0xbe00acab
.word 0x7dade265
.word 0x7f351fde
.word 0xbf301cf4
.word 0x7ef934ca
.word 0x7f351fde
.word 0xbf301cf4
.word 0x7ef934ca
.word 0x7f351fde
.word 0xbf301cf4
.word 0x7ef934ca
.word 0x7f351fde
.word 0xbf301cf4
.word 0x7ef934ca
.word 0x7f351fde
.word 0xbf301cf4
.word 0x7ef934ca
.word 0x7cb23547
.word 0xc1806caa
.word 0x7eb2cc91
.word 0x7cb23547
.word 0xc1806caa
.word 0x7eb2cc91
.word 0x7cb23547
.word 0xc1806caa
.word 0x7eb2cc91
.word 0x7cb23547
.word 0xc1806caa
.word 0x7eb2cc91
.word 0x7cb23547
.word 0xc1806caa
.word 0x7eb2cc91
.word 0x7f0e0f7e
.word 0xbf9f8f25
.word 0x7f31161d
.word 0x7f0e0f7e
.word 0xbf9f8f25
.word 0x7f31161d
.word 0x7f0e0f7e
.word 0xbf9f8f25
.word 0x7f31161d
.word 0x7f0e0f7e
.word 0xbf9f8f25
.word 0x7f31161d
.word 0x7f0e0f7e
.word 0xbf9f8f25
.word 0x7f31161d
.word 0x7f18ad5a
.word 0xbf97b417
.word 0x7f34f350
.word 0x7f18ad5a
.word 0xbf97b417
.word 0x7f34f350
.word 0x7f18ad5a
.word 0xbf97b417
.word 0x7f34f350
.word 0x7f18ad5a
.word 0xbf97b417
.word 0x7f34f350
.word 0x7f18ad5a
.word 0xbf97b417
.word 0x7f34f350
.word 0x7eef31b9
.word 0xbf986e02
.word 0x7f0e6c50
.word 0x7eef31b9
.word 0xbf986e02
.word 0x7f0e6c50
.word 0x7eef31b9
.word 0xbf986e02
.word 0x7f0e6c50
.word 0x7eef31b9
.word 0xbf986e02
.word 0x7f0e6c50
.word 0x7eef31b9
.word 0xbf986e02
.word 0x7f0e6c50
.word 0x7eeddfec
.word 0xbf31243e
.word 0x7ea49980
.word 0x7eeddfec
.word 0xbf31243e
.word 0x7ea49980
.word 0x7eeddfec
.word 0xbf31243e
.word 0x7ea49980
.word 0x7eb48d37
.word 0xbff239df
.word 0x7f2ad64f
.word 0x7eb48d37
.word 0xbff239df
.word 0x7f2ad64f
.word 0x7eb48d37
.word 0xbff239df
.word 0x7f2ad64f
.word 0x7f11fc97
.word 0xba179248
.word 0x79acded1
RVTEST_DATA_END

RVMODEL_DATA_BEGIN


signature_x15_0:
    .fill 0*(XLEN/32),4,0xdeadbeef


signature_x15_1:
    .fill 508*(XLEN/32),4,0xdeadbeef


signature_x15_2:
    .fill 508*(XLEN/32),4,0xdeadbeef


signature_x15_3:
    .fill 508*(XLEN/32),4,0xdeadbeef


signature_x15_4:
    .fill 508*(XLEN/32),4,0xdeadbeef


signature_x15_5:
    .fill 224*(XLEN/32),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*(XLEN/32),4,0xdeadbeef

#endif

RVMODEL_DATA_END
