
// -----------
// This file was generated by riscv_ctg (https://gitlab.com/incoresemi/riscv-compliance/riscv_ctg)
// version   : 0.5.2
// timestamp : Tue Sep  7 16:07:58 2021 GMT
// usage     : riscv_ctg \
//                  -- cgf $cgf \
//                  -- xlen $xlen \
// -----------
//
// -----------
// Copyright (c) 2021. IIT Madras. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmadd.s instruction of the RISC-V F extension for the fmadd_b8 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fmadd_b8)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x16,test_fp)
RVTEST_SIGBASE(x15,signature_x15_1)

inst_0:
// rs1 == rs3 != rs2 and rs1 == rs3 != rd and rd != rs2, rs1==f6, rs2==f9, rs3==f6, rd==f13, fs1 == 0 and fe1 == 0x7d and fm1 == 0x411307 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2f4ae5 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x04347e and rm_val == 0  
// opcode: fmadd.s ; op1:f6; op2:f9; op3:f6; dest:f13; op1val:0x3ec11307; op2val:0xbf2f4ae5; op3val:0x3ec11307; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f6, f9, f6, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_1:
// rs2 == rd != rs1 and rs2 == rd != rs3 and rs3 != rs1, rs1==f24, rs2==f23, rs3==f0, rd==f23, fs1 == 0 and fe1 == 0x7e and fm1 == 0x301bb2 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x65aaff and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1dfe68 and rm_val == 4  
// opcode: fmadd.s ; op1:f24; op2:f23; op3:f0; dest:f23; op1val:0x3f301bb2; op2val:0xbf65aaff; op3val:0x3f1dfe68; valaddr_reg:x16; val_offset:12; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f23, f24, f23, f0, 0x4, 0, x16, 12, x17, x15, 8, x18)

inst_2:
// rs3 == rd != rs1 and rs3 == rd != rs2 and rs2 != rs1, rs1==f29, rs2==f19, rs3==f1, rd==f1, fs1 == 0 and fe1 == 0x7e and fm1 == 0x301bb2 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x65aaff and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1dfe68 and rm_val == 3  
// opcode: fmadd.s ; op1:f29; op2:f19; op3:f1; dest:f1; op1val:0x3f301bb2; op2val:0xbf65aaff; op3val:0x3f1dfe68; valaddr_reg:x16; val_offset:24; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f1, f29, f19, f1, 0x3, 0, x16, 24, x17, x15, 16, x18)

inst_3:
// rs1 == rs2 != rs3 and rs1 == rs2 != rd and rd != rs3, rs1==f16, rs2==f16, rs3==f13, rd==f22, fs1 == 0 and fe1 == 0x7e and fm1 == 0x301bb2 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x65aaff and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1dfe68 and rm_val == 2  
// opcode: fmadd.s ; op1:f16; op2:f16; op3:f13; dest:f22; op1val:0x3f301bb2; op2val:0x3f301bb2; op3val:0x3f1dfe68; valaddr_reg:x16; val_offset:36; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f22, f16, f16, f13, 0x2, 0, x16, 36, x17, x15, 24, x18)

inst_4:
// rs1 == rs2 == rd != rs3, rs1==f15, rs2==f15, rs3==f21, rd==f15, fs1 == 0 and fe1 == 0x7e and fm1 == 0x301bb2 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x65aaff and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1dfe68 and rm_val == 1  
// opcode: fmadd.s ; op1:f15; op2:f15; op3:f21; dest:f15; op1val:0x3f301bb2; op2val:0x3f301bb2; op3val:0x3f1dfe68; valaddr_reg:x16; val_offset:48; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f15, f15, f15, f21, 0x1, 0, x16, 48, x17, x15, 32, x18)

inst_5:
// rs1 == rs2 == rs3 != rd, rs1==f2, rs2==f2, rs3==f2, rd==f18, fs1 == 0 and fe1 == 0x7e and fm1 == 0x301bb2 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x65aaff and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1dfe68 and rm_val == 0  
// opcode: fmadd.s ; op1:f2; op2:f2; op3:f2; dest:f18; op1val:0x3f301bb2; op2val:0x3f301bb2; op3val:0x3f301bb2; valaddr_reg:x16; val_offset:60; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f18, f2, f2, f2, 0x0, 0, x16, 60, x17, x15, 40, x18)

inst_6:
// rs1 == rs2 == rs3 == rd, rs1==f30, rs2==f30, rs3==f30, rd==f30, fs1 == 0 and fe1 == 0x7e and fm1 == 0x2ec914 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x36678a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x79134b and rm_val == 4  
// opcode: fmadd.s ; op1:f30; op2:f30; op3:f30; dest:f30; op1val:0x3f2ec914; op2val:0x3f2ec914; op3val:0x3f2ec914; valaddr_reg:x16; val_offset:72; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f30, f30, f30, f30, 0x4, 0, x16, 72, x17, x15, 48, x18)

inst_7:
// rs1 == rd != rs2 and rs1 == rd != rs3 and rs3 != rs2, rs1==f26, rs2==f25, rs3==f20, rd==f26, fs1 == 0 and fe1 == 0x7e and fm1 == 0x2ec914 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x36678a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x79134b and rm_val == 3  
// opcode: fmadd.s ; op1:f26; op2:f25; op3:f20; dest:f26; op1val:0x3f2ec914; op2val:0xbfb6678a; op3val:0x3f79134b; valaddr_reg:x16; val_offset:84; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f26, f26, f25, f20, 0x3, 0, x16, 84, x17, x15, 56, x18)

inst_8:
// rd == rs2 == rs3 != rs1, rs1==f23, rs2==f17, rs3==f17, rd==f17, fs1 == 0 and fe1 == 0x7e and fm1 == 0x2ec914 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x36678a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x79134b and rm_val == 2  
// opcode: fmadd.s ; op1:f23; op2:f17; op3:f17; dest:f17; op1val:0x3f2ec914; op2val:0xbfb6678a; op3val:0xbfb6678a; valaddr_reg:x16; val_offset:96; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f17, f23, f17, f17, 0x2, 0, x16, 96, x17, x15, 64, x18)

inst_9:
// rs1 == rd == rs3 != rs2, rs1==f5, rs2==f22, rs3==f5, rd==f5, fs1 == 0 and fe1 == 0x7e and fm1 == 0x2ec914 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x36678a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x79134b and rm_val == 1  
// opcode: fmadd.s ; op1:f5; op2:f22; op3:f5; dest:f5; op1val:0x3f2ec914; op2val:0xbfb6678a; op3val:0x3f2ec914; valaddr_reg:x16; val_offset:108; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f5, f5, f22, f5, 0x1, 0, x16, 108, x17, x15, 72, x18)

inst_10:
// rs1 != rs2 and rs1 != rd and rs1 != rs3 and rs2 != rs3 and rs2 != rd and rs3 != rd, rs1==f27, rs2==f7, rs3==f14, rd==f11, fs1 == 0 and fe1 == 0x7e and fm1 == 0x2ec914 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x36678a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x79134b and rm_val == 0  
// opcode: fmadd.s ; op1:f27; op2:f7; op3:f14; dest:f11; op1val:0x3f2ec914; op2val:0xbfb6678a; op3val:0x3f79134b; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f11, f27, f7, f14, 0x0, 0, x16, 120, x17, x15, 80, x18)

inst_11:
// rs2 == rs3 != rs1 and rs2 == rs3 != rd and rd != rs1, rs1==f1, rs2==f3, rs3==f3, rd==f24, fs1 == 0 and fe1 == 0x7e and fm1 == 0x50b4e8 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3fd4a0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1c6451 and rm_val == 4  
// opcode: fmadd.s ; op1:f1; op2:f3; op3:f3; dest:f24; op1val:0x3f50b4e8; op2val:0xbf3fd4a0; op3val:0xbf3fd4a0; valaddr_reg:x16; val_offset:132; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f24, f1, f3, f3, 0x4, 0, x16, 132, x17, x15, 88, x18)

inst_12:
// rs1==f9, rs2==f4, rs3==f8, rd==f19, fs1 == 0 and fe1 == 0x7e and fm1 == 0x50b4e8 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3fd4a0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1c6451 and rm_val == 3  
// opcode: fmadd.s ; op1:f9; op2:f4; op3:f8; dest:f19; op1val:0x3f50b4e8; op2val:0xbf3fd4a0; op3val:0x3f1c6451; valaddr_reg:x16; val_offset:144; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f19, f9, f4, f8, 0x3, 0, x16, 144, x17, x15, 96, x18)

inst_13:
// rs1==f3, rs2==f8, rs3==f7, rd==f6, fs1 == 0 and fe1 == 0x7e and fm1 == 0x50b4e8 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3fd4a0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1c6451 and rm_val == 2  
// opcode: fmadd.s ; op1:f3; op2:f8; op3:f7; dest:f6; op1val:0x3f50b4e8; op2val:0xbf3fd4a0; op3val:0x3f1c6451; valaddr_reg:x16; val_offset:156; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f6, f3, f8, f7, 0x2, 0, x16, 156, x17, x15, 104, x18)

inst_14:
// rs1==f19, rs2==f14, rs3==f25, rd==f10, fs1 == 0 and fe1 == 0x7e and fm1 == 0x50b4e8 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3fd4a0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1c6451 and rm_val == 1  
// opcode: fmadd.s ; op1:f19; op2:f14; op3:f25; dest:f10; op1val:0x3f50b4e8; op2val:0xbf3fd4a0; op3val:0x3f1c6451; valaddr_reg:x16; val_offset:168; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f10, f19, f14, f25, 0x1, 0, x16, 168, x17, x15, 112, x18)

inst_15:
// rs1==f22, rs2==f26, rs3==f29, rd==f31, fs1 == 0 and fe1 == 0x7e and fm1 == 0x50b4e8 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3fd4a0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1c6451 and rm_val == 0  
// opcode: fmadd.s ; op1:f22; op2:f26; op3:f29; dest:f31; op1val:0x3f50b4e8; op2val:0xbf3fd4a0; op3val:0x3f1c6451; valaddr_reg:x16; val_offset:180; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f31, f22, f26, f29, 0x0, 0, x16, 180, x17, x15, 120, x18)

inst_16:
// rs1==f28, rs2==f10, rs3==f12, rd==f3, fs1 == 0 and fe1 == 0x7d and fm1 == 0x79fcb9 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x58b625 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x539f1a and rm_val == 4  
// opcode: fmadd.s ; op1:f28; op2:f10; op3:f12; dest:f3; op1val:0x3ef9fcb9; op2val:0xbf58b625; op3val:0x3ed39f1a; valaddr_reg:x16; val_offset:192; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f3, f28, f10, f12, 0x4, 0, x16, 192, x17, x15, 128, x18)

inst_17:
// rs1==f10, rs2==f11, rs3==f22, rd==f2, fs1 == 0 and fe1 == 0x7d and fm1 == 0x79fcb9 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x58b625 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x539f1a and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f22; dest:f2; op1val:0x3ef9fcb9; op2val:0xbf58b625; op3val:0x3ed39f1a; valaddr_reg:x16; val_offset:204; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f2, f10, f11, f22, 0x3, 0, x16, 204, x17, x15, 136, x18)

inst_18:
// rs1==f8, rs2==f24, rs3==f26, rd==f0, fs1 == 0 and fe1 == 0x7d and fm1 == 0x79fcb9 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x58b625 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x539f1a and rm_val == 2  
// opcode: fmadd.s ; op1:f8; op2:f24; op3:f26; dest:f0; op1val:0x3ef9fcb9; op2val:0xbf58b625; op3val:0x3ed39f1a; valaddr_reg:x16; val_offset:216; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f0, f8, f24, f26, 0x2, 0, x16, 216, x17, x15, 144, x18)

inst_19:
// rs1==f4, rs2==f20, rs3==f31, rd==f7, fs1 == 0 and fe1 == 0x7d and fm1 == 0x79fcb9 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x58b625 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x539f1a and rm_val == 1  
// opcode: fmadd.s ; op1:f4; op2:f20; op3:f31; dest:f7; op1val:0x3ef9fcb9; op2val:0xbf58b625; op3val:0x3ed39f1a; valaddr_reg:x16; val_offset:228; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f7, f4, f20, f31, 0x1, 0, x16, 228, x17, x15, 152, x18)

inst_20:
// rs1==f0, rs2==f13, rs3==f28, rd==f25, fs1 == 0 and fe1 == 0x7d and fm1 == 0x79fcb9 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x58b625 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x539f1a and rm_val == 0  
// opcode: fmadd.s ; op1:f0; op2:f13; op3:f28; dest:f25; op1val:0x3ef9fcb9; op2val:0xbf58b625; op3val:0x3ed39f1a; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f25, f0, f13, f28, 0x0, 0, x16, 240, x17, x15, 160, x18)

inst_21:
// rs1==f11, rs2==f31, rs3==f18, rd==f27, fs1 == 0 and fe1 == 0x7e and fm1 == 0x1fa1ee and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4b33ac and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7d6b41 and rm_val == 4  
// opcode: fmadd.s ; op1:f11; op2:f31; op3:f18; dest:f27; op1val:0x3f1fa1ee; op2val:0xbfcb33ac; op3val:0x3f7d6b41; valaddr_reg:x16; val_offset:252; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f27, f11, f31, f18, 0x4, 0, x16, 252, x17, x15, 168, x18)

inst_22:
// rs1==f21, rs2==f6, rs3==f16, rd==f20, fs1 == 0 and fe1 == 0x7e and fm1 == 0x1fa1ee and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4b33ac and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7d6b41 and rm_val == 3  
// opcode: fmadd.s ; op1:f21; op2:f6; op3:f16; dest:f20; op1val:0x3f1fa1ee; op2val:0xbfcb33ac; op3val:0x3f7d6b41; valaddr_reg:x16; val_offset:264; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f20, f21, f6, f16, 0x3, 0, x16, 264, x17, x15, 176, x18)

inst_23:
// rs1==f14, rs2==f29, rs3==f11, rd==f16, fs1 == 0 and fe1 == 0x7e and fm1 == 0x1fa1ee and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4b33ac and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7d6b41 and rm_val == 2  
// opcode: fmadd.s ; op1:f14; op2:f29; op3:f11; dest:f16; op1val:0x3f1fa1ee; op2val:0xbfcb33ac; op3val:0x3f7d6b41; valaddr_reg:x16; val_offset:276; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f16, f14, f29, f11, 0x2, 0, x16, 276, x17, x15, 184, x18)

inst_24:
// rs1==f12, rs2==f27, rs3==f23, rd==f4, fs1 == 0 and fe1 == 0x7e and fm1 == 0x1fa1ee and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4b33ac and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7d6b41 and rm_val == 1  
// opcode: fmadd.s ; op1:f12; op2:f27; op3:f23; dest:f4; op1val:0x3f1fa1ee; op2val:0xbfcb33ac; op3val:0x3f7d6b41; valaddr_reg:x16; val_offset:288; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f4, f12, f27, f23, 0x1, 0, x16, 288, x17, x15, 192, x18)

inst_25:
// rs1==f18, rs2==f1, rs3==f27, rd==f28, fs1 == 0 and fe1 == 0x7e and fm1 == 0x1fa1ee and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4b33ac and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7d6b41 and rm_val == 0  
// opcode: fmadd.s ; op1:f18; op2:f1; op3:f27; dest:f28; op1val:0x3f1fa1ee; op2val:0xbfcb33ac; op3val:0x3f7d6b41; valaddr_reg:x16; val_offset:300; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f28, f18, f1, f27, 0x0, 0, x16, 300, x17, x15, 200, x18)

inst_26:
// rs1==f20, rs2==f0, rs3==f9, rd==f12, fs1 == 0 and fe1 == 0x7d and fm1 == 0x40f897 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x079831 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4c6ba2 and rm_val == 4  
// opcode: fmadd.s ; op1:f20; op2:f0; op3:f9; dest:f12; op1val:0x3ec0f897; op2val:0xbf079831; op3val:0x3e4c6ba2; valaddr_reg:x16; val_offset:312; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f12, f20, f0, f9, 0x4, 0, x16, 312, x17, x15, 208, x18)

inst_27:
// rs1==f25, rs2==f5, rs3==f4, rd==f14, fs1 == 0 and fe1 == 0x7d and fm1 == 0x40f897 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x079831 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4c6ba2 and rm_val == 3  
// opcode: fmadd.s ; op1:f25; op2:f5; op3:f4; dest:f14; op1val:0x3ec0f897; op2val:0xbf079831; op3val:0x3e4c6ba2; valaddr_reg:x16; val_offset:324; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f14, f25, f5, f4, 0x3, 0, x16, 324, x17, x15, 216, x18)

inst_28:
// rs1==f17, rs2==f21, rs3==f24, rd==f8, fs1 == 0 and fe1 == 0x7d and fm1 == 0x40f897 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x079831 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4c6ba2 and rm_val == 2  
// opcode: fmadd.s ; op1:f17; op2:f21; op3:f24; dest:f8; op1val:0x3ec0f897; op2val:0xbf079831; op3val:0x3e4c6ba2; valaddr_reg:x16; val_offset:336; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f8, f17, f21, f24, 0x2, 0, x16, 336, x17, x15, 224, x18)

inst_29:
// rs1==f13, rs2==f18, rs3==f10, rd==f21, fs1 == 0 and fe1 == 0x7d and fm1 == 0x40f897 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x079831 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4c6ba2 and rm_val == 1  
// opcode: fmadd.s ; op1:f13; op2:f18; op3:f10; dest:f21; op1val:0x3ec0f897; op2val:0xbf079831; op3val:0x3e4c6ba2; valaddr_reg:x16; val_offset:348; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f21, f13, f18, f10, 0x1, 0, x16, 348, x17, x15, 232, x18)

inst_30:
// rs1==f31, rs2==f12, rs3==f15, rd==f29, fs1 == 0 and fe1 == 0x7d and fm1 == 0x40f897 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x079831 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4c6ba2 and rm_val == 0  
// opcode: fmadd.s ; op1:f31; op2:f12; op3:f15; dest:f29; op1val:0x3ec0f897; op2val:0xbf079831; op3val:0x3e4c6ba2; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f29, f31, f12, f15, 0x0, 0, x16, 360, x17, x15, 240, x18)

inst_31:
// rs1==f7, rs2==f28, rs3==f19, rd==f9, fs1 == 0 and fe1 == 0x7d and fm1 == 0x225a77 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x5d03ae and fs3 == 0 and fe3 == 0x7c and fm3 == 0x0c2a6e and rm_val == 4  
// opcode: fmadd.s ; op1:f7; op2:f28; op3:f19; dest:f9; op1val:0x3ea25a77; op2val:0xbedd03ae; op3val:0x3e0c2a6e; valaddr_reg:x16; val_offset:372; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f9, f7, f28, f19, 0x4, 0, x16, 372, x17, x15, 248, x18)

inst_32:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x225a77 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x5d03ae and fs3 == 0 and fe3 == 0x7c and fm3 == 0x0c2a6e and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ea25a77; op2val:0xbedd03ae; op3val:0x3e0c2a6e; valaddr_reg:x16; val_offset:384; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 384, x17, x15, 256, x18)

inst_33:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x225a77 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x5d03ae and fs3 == 0 and fe3 == 0x7c and fm3 == 0x0c2a6e and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ea25a77; op2val:0xbedd03ae; op3val:0x3e0c2a6e; valaddr_reg:x16; val_offset:396; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 396, x17, x15, 264, x18)

inst_34:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x225a77 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x5d03ae and fs3 == 0 and fe3 == 0x7c and fm3 == 0x0c2a6e and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ea25a77; op2val:0xbedd03ae; op3val:0x3e0c2a6e; valaddr_reg:x16; val_offset:408; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 408, x17, x15, 272, x18)

inst_35:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x225a77 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x5d03ae and fs3 == 0 and fe3 == 0x7c and fm3 == 0x0c2a6e and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ea25a77; op2val:0xbedd03ae; op3val:0x3e0c2a6e; valaddr_reg:x16; val_offset:420; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 420, x17, x15, 280, x18)

inst_36:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x4fd596 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x552489 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2d0a5f and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e4fd596; op2val:0xc0552489; op3val:0x3f2d0a5f; valaddr_reg:x16; val_offset:432; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 432, x17, x15, 288, x18)

inst_37:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x4fd596 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x552489 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2d0a5f and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e4fd596; op2val:0xc0552489; op3val:0x3f2d0a5f; valaddr_reg:x16; val_offset:444; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 444, x17, x15, 296, x18)

inst_38:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x4fd596 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x552489 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2d0a5f and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e4fd596; op2val:0xc0552489; op3val:0x3f2d0a5f; valaddr_reg:x16; val_offset:456; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 456, x17, x15, 304, x18)

inst_39:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x4fd596 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x552489 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2d0a5f and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e4fd596; op2val:0xc0552489; op3val:0x3f2d0a5f; valaddr_reg:x16; val_offset:468; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 468, x17, x15, 312, x18)

inst_40:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x4fd596 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x552489 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2d0a5f and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e4fd596; op2val:0xc0552489; op3val:0x3f2d0a5f; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 320, x18)

inst_41:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x4c6d8b and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0057ab and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4cf98f and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dcc6d8b; op2val:0xc10057ab; op3val:0x3f4cf98f; valaddr_reg:x16; val_offset:492; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 492, x17, x15, 328, x18)

inst_42:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x4c6d8b and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0057ab and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4cf98f and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dcc6d8b; op2val:0xc10057ab; op3val:0x3f4cf98f; valaddr_reg:x16; val_offset:504; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 504, x17, x15, 336, x18)

inst_43:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x4c6d8b and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0057ab and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4cf98f and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dcc6d8b; op2val:0xc10057ab; op3val:0x3f4cf98f; valaddr_reg:x16; val_offset:516; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 516, x17, x15, 344, x18)

inst_44:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x4c6d8b and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0057ab and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4cf98f and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dcc6d8b; op2val:0xc10057ab; op3val:0x3f4cf98f; valaddr_reg:x16; val_offset:528; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 528, x17, x15, 352, x18)

inst_45:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x4c6d8b and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0057ab and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4cf98f and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dcc6d8b; op2val:0xc10057ab; op3val:0x3f4cf98f; valaddr_reg:x16; val_offset:540; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 540, x17, x15, 360, x18)

inst_46:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x66ba48 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x205fba and fs3 == 0 and fe3 == 0x7d and fm3 == 0x108ab4 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f66ba48; op2val:0xbea05fba; op3val:0x3e908ab4; valaddr_reg:x16; val_offset:552; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 552, x17, x15, 368, x18)

inst_47:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x66ba48 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x205fba and fs3 == 0 and fe3 == 0x7d and fm3 == 0x108ab4 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f66ba48; op2val:0xbea05fba; op3val:0x3e908ab4; valaddr_reg:x16; val_offset:564; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 564, x17, x15, 376, x18)

inst_48:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x66ba48 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x205fba and fs3 == 0 and fe3 == 0x7d and fm3 == 0x108ab4 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f66ba48; op2val:0xbea05fba; op3val:0x3e908ab4; valaddr_reg:x16; val_offset:576; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 576, x17, x15, 384, x18)

inst_49:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x66ba48 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x205fba and fs3 == 0 and fe3 == 0x7d and fm3 == 0x108ab4 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f66ba48; op2val:0xbea05fba; op3val:0x3e908ab4; valaddr_reg:x16; val_offset:588; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 588, x17, x15, 392, x18)

inst_50:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x66ba48 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x205fba and fs3 == 0 and fe3 == 0x7d and fm3 == 0x108ab4 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f66ba48; op2val:0xbea05fba; op3val:0x3e908ab4; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 400, x18)

inst_51:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x765668 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5ceeba and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5497f9 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f765668; op2val:0xbf5ceeba; op3val:0x3f5497f9; valaddr_reg:x16; val_offset:612; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 612, x17, x15, 408, x18)

inst_52:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x765668 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5ceeba and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5497f9 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f765668; op2val:0xbf5ceeba; op3val:0x3f5497f9; valaddr_reg:x16; val_offset:624; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 624, x17, x15, 416, x18)

inst_53:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x765668 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5ceeba and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5497f9 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f765668; op2val:0xbf5ceeba; op3val:0x3f5497f9; valaddr_reg:x16; val_offset:636; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 636, x17, x15, 424, x18)

inst_54:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x765668 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5ceeba and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5497f9 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f765668; op2val:0xbf5ceeba; op3val:0x3f5497f9; valaddr_reg:x16; val_offset:648; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 648, x17, x15, 432, x18)

inst_55:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x765668 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5ceeba and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5497f9 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f765668; op2val:0xbf5ceeba; op3val:0x3f5497f9; valaddr_reg:x16; val_offset:660; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 660, x17, x15, 440, x18)

inst_56:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2c5c56 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x41df4b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0287f4 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e2c5c56; op2val:0xc041df4b; op3val:0x3f0287f4; valaddr_reg:x16; val_offset:672; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 672, x17, x15, 448, x18)

inst_57:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2c5c56 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x41df4b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0287f4 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e2c5c56; op2val:0xc041df4b; op3val:0x3f0287f4; valaddr_reg:x16; val_offset:684; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 684, x17, x15, 456, x18)

inst_58:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2c5c56 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x41df4b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0287f4 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e2c5c56; op2val:0xc041df4b; op3val:0x3f0287f4; valaddr_reg:x16; val_offset:696; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 696, x17, x15, 464, x18)

inst_59:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2c5c56 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x41df4b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0287f4 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e2c5c56; op2val:0xc041df4b; op3val:0x3f0287f4; valaddr_reg:x16; val_offset:708; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 708, x17, x15, 472, x18)

inst_60:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2c5c56 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x41df4b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0287f4 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e2c5c56; op2val:0xc041df4b; op3val:0x3f0287f4; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 480, x18)

inst_61:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x196169 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3713a4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5b60cd and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f196169; op2val:0xbfb713a4; op3val:0x3f5b60cd; valaddr_reg:x16; val_offset:732; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 732, x17, x15, 488, x18)

inst_62:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x196169 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3713a4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5b60cd and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f196169; op2val:0xbfb713a4; op3val:0x3f5b60cd; valaddr_reg:x16; val_offset:744; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 744, x17, x15, 496, x18)

inst_63:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x196169 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3713a4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5b60cd and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f196169; op2val:0xbfb713a4; op3val:0x3f5b60cd; valaddr_reg:x16; val_offset:756; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 756, x17, x15, 504, x18)

inst_64:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x196169 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3713a4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5b60cd and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f196169; op2val:0xbfb713a4; op3val:0x3f5b60cd; valaddr_reg:x16; val_offset:768; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 768, x17, x15, 512, x18)

inst_65:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x196169 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3713a4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5b60cd and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f196169; op2val:0xbfb713a4; op3val:0x3f5b60cd; valaddr_reg:x16; val_offset:780; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 780, x17, x15, 520, x18)

inst_66:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x19c511 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x22bdaf and fs3 == 0 and fe3 == 0x7d and fm3 == 0x43814a and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e19c511; op2val:0xc022bdaf; op3val:0x3ec3814a; valaddr_reg:x16; val_offset:792; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 792, x17, x15, 528, x18)

inst_67:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x19c511 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x22bdaf and fs3 == 0 and fe3 == 0x7d and fm3 == 0x43814a and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e19c511; op2val:0xc022bdaf; op3val:0x3ec3814a; valaddr_reg:x16; val_offset:804; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 804, x17, x15, 536, x18)

inst_68:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x19c511 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x22bdaf and fs3 == 0 and fe3 == 0x7d and fm3 == 0x43814a and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e19c511; op2val:0xc022bdaf; op3val:0x3ec3814a; valaddr_reg:x16; val_offset:816; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 816, x17, x15, 544, x18)

inst_69:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x19c511 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x22bdaf and fs3 == 0 and fe3 == 0x7d and fm3 == 0x43814a and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e19c511; op2val:0xc022bdaf; op3val:0x3ec3814a; valaddr_reg:x16; val_offset:828; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 828, x17, x15, 552, x18)

inst_70:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x19c511 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x22bdaf and fs3 == 0 and fe3 == 0x7d and fm3 == 0x43814a and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e19c511; op2val:0xc022bdaf; op3val:0x3ec3814a; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 560, x18)

inst_71:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x1002b1 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x116f11 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x23a003 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3c9002b1; op2val:0xc1116f11; op3val:0x3e23a003; valaddr_reg:x16; val_offset:852; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 852, x17, x15, 568, x18)

inst_72:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x1002b1 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x116f11 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x23a003 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3c9002b1; op2val:0xc1116f11; op3val:0x3e23a003; valaddr_reg:x16; val_offset:864; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 864, x17, x15, 576, x18)

inst_73:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x1002b1 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x116f11 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x23a003 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3c9002b1; op2val:0xc1116f11; op3val:0x3e23a003; valaddr_reg:x16; val_offset:876; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 876, x17, x15, 584, x18)

inst_74:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x1002b1 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x116f11 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x23a003 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3c9002b1; op2val:0xc1116f11; op3val:0x3e23a003; valaddr_reg:x16; val_offset:888; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 888, x17, x15, 592, x18)

inst_75:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x1002b1 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x116f11 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x23a003 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3c9002b1; op2val:0xc1116f11; op3val:0x3e23a003; valaddr_reg:x16; val_offset:900; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 900, x17, x15, 600, x18)

inst_76:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x25f257 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x147187 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x407365 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f25f257; op2val:0xbf947187; op3val:0x3f407365; valaddr_reg:x16; val_offset:912; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 912, x17, x15, 608, x18)

inst_77:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x25f257 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x147187 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x407365 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f25f257; op2val:0xbf947187; op3val:0x3f407365; valaddr_reg:x16; val_offset:924; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 924, x17, x15, 616, x18)

inst_78:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x25f257 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x147187 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x407365 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f25f257; op2val:0xbf947187; op3val:0x3f407365; valaddr_reg:x16; val_offset:936; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 936, x17, x15, 624, x18)

inst_79:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x25f257 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x147187 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x407365 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f25f257; op2val:0xbf947187; op3val:0x3f407365; valaddr_reg:x16; val_offset:948; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 948, x17, x15, 632, x18)

inst_80:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x25f257 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x147187 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x407365 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f25f257; op2val:0xbf947187; op3val:0x3f407365; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 640, x18)

inst_81:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x7ee4d9 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4300ed and fs3 == 0 and fe3 == 0x7e and fm3 == 0x42293d and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e7ee4d9; op2val:0xc04300ed; op3val:0x3f42293d; valaddr_reg:x16; val_offset:972; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 972, x17, x15, 648, x18)

inst_82:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x7ee4d9 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4300ed and fs3 == 0 and fe3 == 0x7e and fm3 == 0x42293d and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e7ee4d9; op2val:0xc04300ed; op3val:0x3f42293d; valaddr_reg:x16; val_offset:984; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 984, x17, x15, 656, x18)

inst_83:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x7ee4d9 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4300ed and fs3 == 0 and fe3 == 0x7e and fm3 == 0x42293d and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e7ee4d9; op2val:0xc04300ed; op3val:0x3f42293d; valaddr_reg:x16; val_offset:996; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 996, x17, x15, 664, x18)

inst_84:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x7ee4d9 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4300ed and fs3 == 0 and fe3 == 0x7e and fm3 == 0x42293d and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e7ee4d9; op2val:0xc04300ed; op3val:0x3f42293d; valaddr_reg:x16; val_offset:1008; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1008, x17, x15, 672, x18)

inst_85:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x7ee4d9 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4300ed and fs3 == 0 and fe3 == 0x7e and fm3 == 0x42293d and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e7ee4d9; op2val:0xc04300ed; op3val:0x3f42293d; valaddr_reg:x16; val_offset:1020; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1020, x17, x15, 680, x18)

inst_86:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6008d7 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3c18fa and fs3 == 0 and fe3 == 0x7e and fm3 == 0x249c5a and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee008d7; op2val:0xbfbc18fa; op3val:0x3f249c5a; valaddr_reg:x16; val_offset:1032; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1032, x17, x15, 688, x18)

inst_87:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6008d7 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3c18fa and fs3 == 0 and fe3 == 0x7e and fm3 == 0x249c5a and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee008d7; op2val:0xbfbc18fa; op3val:0x3f249c5a; valaddr_reg:x16; val_offset:1044; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1044, x17, x15, 696, x18)

inst_88:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6008d7 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3c18fa and fs3 == 0 and fe3 == 0x7e and fm3 == 0x249c5a and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee008d7; op2val:0xbfbc18fa; op3val:0x3f249c5a; valaddr_reg:x16; val_offset:1056; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1056, x17, x15, 704, x18)

inst_89:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6008d7 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3c18fa and fs3 == 0 and fe3 == 0x7e and fm3 == 0x249c5a and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee008d7; op2val:0xbfbc18fa; op3val:0x3f249c5a; valaddr_reg:x16; val_offset:1068; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1068, x17, x15, 712, x18)

inst_90:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6008d7 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3c18fa and fs3 == 0 and fe3 == 0x7e and fm3 == 0x249c5a and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee008d7; op2val:0xbfbc18fa; op3val:0x3f249c5a; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 720, x18)

inst_91:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x391398 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0d6fa4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4c8103 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f391398; op2val:0xbf8d6fa4; op3val:0x3f4c8103; valaddr_reg:x16; val_offset:1092; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1092, x17, x15, 728, x18)

inst_92:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x391398 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0d6fa4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4c8103 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f391398; op2val:0xbf8d6fa4; op3val:0x3f4c8103; valaddr_reg:x16; val_offset:1104; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1104, x17, x15, 736, x18)

inst_93:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x391398 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0d6fa4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4c8103 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f391398; op2val:0xbf8d6fa4; op3val:0x3f4c8103; valaddr_reg:x16; val_offset:1116; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1116, x17, x15, 744, x18)

inst_94:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x391398 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0d6fa4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4c8103 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f391398; op2val:0xbf8d6fa4; op3val:0x3f4c8103; valaddr_reg:x16; val_offset:1128; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1128, x17, x15, 752, x18)

inst_95:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x391398 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0d6fa4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4c8103 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f391398; op2val:0xbf8d6fa4; op3val:0x3f4c8103; valaddr_reg:x16; val_offset:1140; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1140, x17, x15, 760, x18)

inst_96:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1b76d7 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2553ef and fs3 == 0 and fe3 == 0x7e and fm3 == 0x48cd24 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1b76d7; op2val:0xbfa553ef; op3val:0x3f48cd24; valaddr_reg:x16; val_offset:1152; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1152, x17, x15, 768, x18)

inst_97:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1b76d7 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2553ef and fs3 == 0 and fe3 == 0x7e and fm3 == 0x48cd24 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1b76d7; op2val:0xbfa553ef; op3val:0x3f48cd24; valaddr_reg:x16; val_offset:1164; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1164, x17, x15, 776, x18)

inst_98:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1b76d7 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2553ef and fs3 == 0 and fe3 == 0x7e and fm3 == 0x48cd24 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1b76d7; op2val:0xbfa553ef; op3val:0x3f48cd24; valaddr_reg:x16; val_offset:1176; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1176, x17, x15, 784, x18)

inst_99:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1b76d7 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2553ef and fs3 == 0 and fe3 == 0x7e and fm3 == 0x48cd24 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1b76d7; op2val:0xbfa553ef; op3val:0x3f48cd24; valaddr_reg:x16; val_offset:1188; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1188, x17, x15, 792, x18)

inst_100:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1b76d7 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2553ef and fs3 == 0 and fe3 == 0x7e and fm3 == 0x48cd24 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1b76d7; op2val:0xbfa553ef; op3val:0x3f48cd24; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 800, x18)

inst_101:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x049c05 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x69ae39 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x721881 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f049c05; op2val:0xbe69ae39; op3val:0x3df21881; valaddr_reg:x16; val_offset:1212; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1212, x17, x15, 808, x18)

inst_102:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x049c05 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x69ae39 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x721881 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f049c05; op2val:0xbe69ae39; op3val:0x3df21881; valaddr_reg:x16; val_offset:1224; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1224, x17, x15, 816, x18)

inst_103:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x049c05 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x69ae39 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x721881 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f049c05; op2val:0xbe69ae39; op3val:0x3df21881; valaddr_reg:x16; val_offset:1236; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1236, x17, x15, 824, x18)

inst_104:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x049c05 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x69ae39 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x721881 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f049c05; op2val:0xbe69ae39; op3val:0x3df21881; valaddr_reg:x16; val_offset:1248; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1248, x17, x15, 832, x18)

inst_105:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x049c05 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x69ae39 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x721881 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f049c05; op2val:0xbe69ae39; op3val:0x3df21881; valaddr_reg:x16; val_offset:1260; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1260, x17, x15, 840, x18)

inst_106:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7795ca and fs2 == 1 and fe2 == 0x7d and fm2 == 0x5ff11c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5894ab and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7795ca; op2val:0xbedff11c; op3val:0x3ed894ab; valaddr_reg:x16; val_offset:1272; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1272, x17, x15, 848, x18)

inst_107:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7795ca and fs2 == 1 and fe2 == 0x7d and fm2 == 0x5ff11c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5894ab and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7795ca; op2val:0xbedff11c; op3val:0x3ed894ab; valaddr_reg:x16; val_offset:1284; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1284, x17, x15, 856, x18)

inst_108:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7795ca and fs2 == 1 and fe2 == 0x7d and fm2 == 0x5ff11c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5894ab and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7795ca; op2val:0xbedff11c; op3val:0x3ed894ab; valaddr_reg:x16; val_offset:1296; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1296, x17, x15, 864, x18)

inst_109:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7795ca and fs2 == 1 and fe2 == 0x7d and fm2 == 0x5ff11c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5894ab and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7795ca; op2val:0xbedff11c; op3val:0x3ed894ab; valaddr_reg:x16; val_offset:1308; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1308, x17, x15, 872, x18)

inst_110:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7795ca and fs2 == 1 and fe2 == 0x7d and fm2 == 0x5ff11c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5894ab and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7795ca; op2val:0xbedff11c; op3val:0x3ed894ab; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 880, x18)

inst_111:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x729bba and fs2 == 1 and fe2 == 0x79 and fm2 == 0x3e1602 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x34246f and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f729bba; op2val:0xbcbe1602; op3val:0x3cb4246f; valaddr_reg:x16; val_offset:1332; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1332, x17, x15, 888, x18)

inst_112:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x729bba and fs2 == 1 and fe2 == 0x79 and fm2 == 0x3e1602 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x34246f and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f729bba; op2val:0xbcbe1602; op3val:0x3cb4246f; valaddr_reg:x16; val_offset:1344; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1344, x17, x15, 896, x18)

inst_113:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x729bba and fs2 == 1 and fe2 == 0x79 and fm2 == 0x3e1602 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x34246f and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f729bba; op2val:0xbcbe1602; op3val:0x3cb4246f; valaddr_reg:x16; val_offset:1356; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1356, x17, x15, 904, x18)

inst_114:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x729bba and fs2 == 1 and fe2 == 0x79 and fm2 == 0x3e1602 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x34246f and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f729bba; op2val:0xbcbe1602; op3val:0x3cb4246f; valaddr_reg:x16; val_offset:1368; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1368, x17, x15, 912, x18)

inst_115:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x729bba and fs2 == 1 and fe2 == 0x79 and fm2 == 0x3e1602 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x34246f and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f729bba; op2val:0xbcbe1602; op3val:0x3cb4246f; valaddr_reg:x16; val_offset:1380; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1380, x17, x15, 920, x18)

inst_116:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x3e32ec and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4808f7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x149e72 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e3e32ec; op2val:0xc04808f7; op3val:0x3f149e72; valaddr_reg:x16; val_offset:1392; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1392, x17, x15, 928, x18)

inst_117:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x3e32ec and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4808f7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x149e72 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e3e32ec; op2val:0xc04808f7; op3val:0x3f149e72; valaddr_reg:x16; val_offset:1404; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1404, x17, x15, 936, x18)

inst_118:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x3e32ec and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4808f7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x149e72 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e3e32ec; op2val:0xc04808f7; op3val:0x3f149e72; valaddr_reg:x16; val_offset:1416; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1416, x17, x15, 944, x18)

inst_119:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x3e32ec and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4808f7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x149e72 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e3e32ec; op2val:0xc04808f7; op3val:0x3f149e72; valaddr_reg:x16; val_offset:1428; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1428, x17, x15, 952, x18)

inst_120:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x3e32ec and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4808f7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x149e72 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e3e32ec; op2val:0xc04808f7; op3val:0x3f149e72; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 960, x18)

inst_121:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4ed70e and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0e03e8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x657ce4 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eced70e; op2val:0xc00e03e8; op3val:0x3f657ce4; valaddr_reg:x16; val_offset:1452; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1452, x17, x15, 968, x18)

inst_122:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4ed70e and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0e03e8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x657ce4 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eced70e; op2val:0xc00e03e8; op3val:0x3f657ce4; valaddr_reg:x16; val_offset:1464; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1464, x17, x15, 976, x18)

inst_123:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4ed70e and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0e03e8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x657ce4 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eced70e; op2val:0xc00e03e8; op3val:0x3f657ce4; valaddr_reg:x16; val_offset:1476; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1476, x17, x15, 984, x18)

inst_124:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4ed70e and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0e03e8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x657ce4 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eced70e; op2val:0xc00e03e8; op3val:0x3f657ce4; valaddr_reg:x16; val_offset:1488; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1488, x17, x15, 992, x18)

inst_125:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4ed70e and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0e03e8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x657ce4 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eced70e; op2val:0xc00e03e8; op3val:0x3f657ce4; valaddr_reg:x16; val_offset:1500; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1500, x17, x15, 1000, x18)

inst_126:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6f4ee6 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x04eaf5 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x7880a6 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eef4ee6; op2val:0xbd84eaf5; op3val:0x3cf880a6; valaddr_reg:x16; val_offset:1512; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1512, x17, x15, 1008, x18)

inst_127:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6f4ee6 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x04eaf5 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x7880a6 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eef4ee6; op2val:0xbd84eaf5; op3val:0x3cf880a6; valaddr_reg:x16; val_offset:1524; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1524, x17, x15, 1016, x18)

inst_128:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6f4ee6 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x04eaf5 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x7880a6 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eef4ee6; op2val:0xbd84eaf5; op3val:0x3cf880a6; valaddr_reg:x16; val_offset:1536; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1536, x17, x15, 1024, x18)

inst_129:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6f4ee6 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x04eaf5 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x7880a6 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eef4ee6; op2val:0xbd84eaf5; op3val:0x3cf880a6; valaddr_reg:x16; val_offset:1548; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1548, x17, x15, 1032, x18)

inst_130:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6f4ee6 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x04eaf5 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x7880a6 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eef4ee6; op2val:0xbd84eaf5; op3val:0x3cf880a6; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1040, x18)

inst_131:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x6e143b and fs2 == 1 and fe2 == 0x7d and fm2 == 0x0c4928 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x027719 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e6e143b; op2val:0xbe8c4928; op3val:0x3d827719; valaddr_reg:x16; val_offset:1572; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1572, x17, x15, 1048, x18)

inst_132:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x6e143b and fs2 == 1 and fe2 == 0x7d and fm2 == 0x0c4928 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x027719 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e6e143b; op2val:0xbe8c4928; op3val:0x3d827719; valaddr_reg:x16; val_offset:1584; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1584, x17, x15, 1056, x18)

inst_133:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x6e143b and fs2 == 1 and fe2 == 0x7d and fm2 == 0x0c4928 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x027719 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e6e143b; op2val:0xbe8c4928; op3val:0x3d827719; valaddr_reg:x16; val_offset:1596; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1596, x17, x15, 1064, x18)

inst_134:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x6e143b and fs2 == 1 and fe2 == 0x7d and fm2 == 0x0c4928 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x027719 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e6e143b; op2val:0xbe8c4928; op3val:0x3d827719; valaddr_reg:x16; val_offset:1608; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1608, x17, x15, 1072, x18)

inst_135:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x6e143b and fs2 == 1 and fe2 == 0x7d and fm2 == 0x0c4928 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x027719 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e6e143b; op2val:0xbe8c4928; op3val:0x3d827719; valaddr_reg:x16; val_offset:1620; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1620, x17, x15, 1080, x18)

inst_136:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x10db40 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7cb5f7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0efeca and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f10db40; op2val:0xbf7cb5f7; op3val:0x3f0efeca; valaddr_reg:x16; val_offset:1632; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1632, x17, x15, 1088, x18)

inst_137:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x10db40 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7cb5f7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0efeca and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f10db40; op2val:0xbf7cb5f7; op3val:0x3f0efeca; valaddr_reg:x16; val_offset:1644; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1644, x17, x15, 1096, x18)

inst_138:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x10db40 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7cb5f7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0efeca and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f10db40; op2val:0xbf7cb5f7; op3val:0x3f0efeca; valaddr_reg:x16; val_offset:1656; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1656, x17, x15, 1104, x18)

inst_139:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x10db40 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7cb5f7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0efeca and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f10db40; op2val:0xbf7cb5f7; op3val:0x3f0efeca; valaddr_reg:x16; val_offset:1668; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1668, x17, x15, 1112, x18)

inst_140:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x10db40 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7cb5f7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0efeca and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f10db40; op2val:0xbf7cb5f7; op3val:0x3f0efeca; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1120, x18)

inst_141:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x2e18e5 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4ae60b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x09fc17 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dae18e5; op2val:0xc0cae60b; op3val:0x3f09fc17; valaddr_reg:x16; val_offset:1692; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1692, x17, x15, 1128, x18)

inst_142:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x2e18e5 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4ae60b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x09fc17 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dae18e5; op2val:0xc0cae60b; op3val:0x3f09fc17; valaddr_reg:x16; val_offset:1704; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1704, x17, x15, 1136, x18)

inst_143:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x2e18e5 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4ae60b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x09fc17 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dae18e5; op2val:0xc0cae60b; op3val:0x3f09fc17; valaddr_reg:x16; val_offset:1716; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1716, x17, x15, 1144, x18)

inst_144:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x2e18e5 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4ae60b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x09fc17 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dae18e5; op2val:0xc0cae60b; op3val:0x3f09fc17; valaddr_reg:x16; val_offset:1728; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1728, x17, x15, 1152, x18)

inst_145:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x2e18e5 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4ae60b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x09fc17 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dae18e5; op2val:0xc0cae60b; op3val:0x3f09fc17; valaddr_reg:x16; val_offset:1740; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1740, x17, x15, 1160, x18)

inst_146:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x61bd75 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4643a4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2ed42e and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f61bd75; op2val:0xbf4643a4; op3val:0x3f2ed42e; valaddr_reg:x16; val_offset:1752; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1752, x17, x15, 1168, x18)

inst_147:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x61bd75 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4643a4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2ed42e and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f61bd75; op2val:0xbf4643a4; op3val:0x3f2ed42e; valaddr_reg:x16; val_offset:1764; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1764, x17, x15, 1176, x18)

inst_148:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x61bd75 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4643a4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2ed42e and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f61bd75; op2val:0xbf4643a4; op3val:0x3f2ed42e; valaddr_reg:x16; val_offset:1776; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1776, x17, x15, 1184, x18)

inst_149:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x61bd75 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4643a4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2ed42e and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f61bd75; op2val:0xbf4643a4; op3val:0x3f2ed42e; valaddr_reg:x16; val_offset:1788; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1788, x17, x15, 1192, x18)

inst_150:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x61bd75 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4643a4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2ed42e and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f61bd75; op2val:0xbf4643a4; op3val:0x3f2ed42e; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1200, x18)

inst_151:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x7bc007 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x55b282 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x522651 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d7bc007; op2val:0xc055b282; op3val:0x3e522651; valaddr_reg:x16; val_offset:1812; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1812, x17, x15, 1208, x18)

inst_152:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x7bc007 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x55b282 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x522651 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d7bc007; op2val:0xc055b282; op3val:0x3e522651; valaddr_reg:x16; val_offset:1824; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1824, x17, x15, 1216, x18)

inst_153:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x7bc007 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x55b282 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x522651 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d7bc007; op2val:0xc055b282; op3val:0x3e522651; valaddr_reg:x16; val_offset:1836; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1836, x17, x15, 1224, x18)

inst_154:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x7bc007 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x55b282 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x522651 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d7bc007; op2val:0xc055b282; op3val:0x3e522651; valaddr_reg:x16; val_offset:1848; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1848, x17, x15, 1232, x18)

inst_155:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x7bc007 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x55b282 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x522651 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d7bc007; op2val:0xc055b282; op3val:0x3e522651; valaddr_reg:x16; val_offset:1860; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1860, x17, x15, 1240, x18)

inst_156:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x14c505 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x73f40a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0dc4d6 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e94c505; op2val:0xbff3f40a; op3val:0x3f0dc4d6; valaddr_reg:x16; val_offset:1872; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1872, x17, x15, 1248, x18)

inst_157:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x14c505 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x73f40a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0dc4d6 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e94c505; op2val:0xbff3f40a; op3val:0x3f0dc4d6; valaddr_reg:x16; val_offset:1884; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1884, x17, x15, 1256, x18)

inst_158:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x14c505 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x73f40a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0dc4d6 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e94c505; op2val:0xbff3f40a; op3val:0x3f0dc4d6; valaddr_reg:x16; val_offset:1896; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1896, x17, x15, 1264, x18)

inst_159:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x14c505 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x73f40a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0dc4d6 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e94c505; op2val:0xbff3f40a; op3val:0x3f0dc4d6; valaddr_reg:x16; val_offset:1908; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1908, x17, x15, 1272, x18)

inst_160:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x14c505 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x73f40a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0dc4d6 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e94c505; op2val:0xbff3f40a; op3val:0x3f0dc4d6; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1280, x18)

inst_161:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x707ae8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x61ddf8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x542c89 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef07ae8; op2val:0xbfe1ddf8; op3val:0x3f542c89; valaddr_reg:x16; val_offset:1932; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1932, x17, x15, 1288, x18)

inst_162:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x707ae8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x61ddf8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x542c89 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef07ae8; op2val:0xbfe1ddf8; op3val:0x3f542c89; valaddr_reg:x16; val_offset:1944; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1944, x17, x15, 1296, x18)

inst_163:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x707ae8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x61ddf8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x542c89 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef07ae8; op2val:0xbfe1ddf8; op3val:0x3f542c89; valaddr_reg:x16; val_offset:1956; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1956, x17, x15, 1304, x18)

inst_164:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x707ae8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x61ddf8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x542c89 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef07ae8; op2val:0xbfe1ddf8; op3val:0x3f542c89; valaddr_reg:x16; val_offset:1968; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1968, x17, x15, 1312, x18)

inst_165:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x707ae8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x61ddf8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x542c89 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef07ae8; op2val:0xbfe1ddf8; op3val:0x3f542c89; valaddr_reg:x16; val_offset:1980; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1980, x17, x15, 1320, x18)

inst_166:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0bdc86 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x53f645 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x679a9d and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8bdc86; op2val:0xc053f645; op3val:0x3f679a9d; valaddr_reg:x16; val_offset:1992; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1992, x17, x15, 1328, x18)

inst_167:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0bdc86 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x53f645 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x679a9d and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8bdc86; op2val:0xc053f645; op3val:0x3f679a9d; valaddr_reg:x16; val_offset:2004; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 2004, x17, x15, 1336, x18)

inst_168:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0bdc86 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x53f645 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x679a9d and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8bdc86; op2val:0xc053f645; op3val:0x3f679a9d; valaddr_reg:x16; val_offset:2016; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 2016, x17, x15, 1344, x18)

inst_169:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0bdc86 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x53f645 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x679a9d and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8bdc86; op2val:0xc053f645; op3val:0x3f679a9d; valaddr_reg:x16; val_offset:2028; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 2028, x17, x15, 1352, x18)
addi x16,x16,2040

inst_170:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0bdc86 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x53f645 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x679a9d and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8bdc86; op2val:0xc053f645; op3val:0x3f679a9d; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 1360, x18)

inst_171:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x54c6f9 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x553b99 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x313b16 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed4c6f9; op2val:0xbed53b99; op3val:0x3e313b16; valaddr_reg:x16; val_offset:12; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 12, x17, x15, 1368, x18)

inst_172:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x54c6f9 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x553b99 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x313b16 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed4c6f9; op2val:0xbed53b99; op3val:0x3e313b16; valaddr_reg:x16; val_offset:24; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 24, x17, x15, 1376, x18)

inst_173:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x54c6f9 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x553b99 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x313b16 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed4c6f9; op2val:0xbed53b99; op3val:0x3e313b16; valaddr_reg:x16; val_offset:36; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 36, x17, x15, 1384, x18)

inst_174:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x54c6f9 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x553b99 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x313b16 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed4c6f9; op2val:0xbed53b99; op3val:0x3e313b16; valaddr_reg:x16; val_offset:48; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 48, x17, x15, 1392, x18)

inst_175:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x54c6f9 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x553b99 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x313b16 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed4c6f9; op2val:0xbed53b99; op3val:0x3e313b16; valaddr_reg:x16; val_offset:60; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 60, x17, x15, 1400, x18)

inst_176:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2b6cbc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3cc599 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7cd058 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2b6cbc; op2val:0xbfbcc599; op3val:0x3f7cd058; valaddr_reg:x16; val_offset:72; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 72, x17, x15, 1408, x18)

inst_177:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2b6cbc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3cc599 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7cd058 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2b6cbc; op2val:0xbfbcc599; op3val:0x3f7cd058; valaddr_reg:x16; val_offset:84; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 84, x17, x15, 1416, x18)

inst_178:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2b6cbc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3cc599 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7cd058 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2b6cbc; op2val:0xbfbcc599; op3val:0x3f7cd058; valaddr_reg:x16; val_offset:96; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 96, x17, x15, 1424, x18)

inst_179:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2b6cbc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3cc599 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7cd058 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2b6cbc; op2val:0xbfbcc599; op3val:0x3f7cd058; valaddr_reg:x16; val_offset:108; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 108, x17, x15, 1432, x18)

inst_180:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2b6cbc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3cc599 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7cd058 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2b6cbc; op2val:0xbfbcc599; op3val:0x3f7cd058; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 1440, x18)

inst_181:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x123365 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0ee721 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x233904 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f123365; op2val:0xbf8ee721; op3val:0x3f233904; valaddr_reg:x16; val_offset:132; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 132, x17, x15, 1448, x18)

inst_182:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x123365 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0ee721 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x233904 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f123365; op2val:0xbf8ee721; op3val:0x3f233904; valaddr_reg:x16; val_offset:144; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 144, x17, x15, 1456, x18)

inst_183:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x123365 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0ee721 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x233904 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f123365; op2val:0xbf8ee721; op3val:0x3f233904; valaddr_reg:x16; val_offset:156; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 156, x17, x15, 1464, x18)

inst_184:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x123365 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0ee721 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x233904 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f123365; op2val:0xbf8ee721; op3val:0x3f233904; valaddr_reg:x16; val_offset:168; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 168, x17, x15, 1472, x18)

inst_185:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x123365 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0ee721 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x233904 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f123365; op2val:0xbf8ee721; op3val:0x3f233904; valaddr_reg:x16; val_offset:180; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 180, x17, x15, 1480, x18)

inst_186:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x46a7b5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7da8e9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x44d6d1 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec6a7b5; op2val:0xbffda8e9; op3val:0x3f44d6d1; valaddr_reg:x16; val_offset:192; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 192, x17, x15, 1488, x18)

inst_187:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x46a7b5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7da8e9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x44d6d1 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec6a7b5; op2val:0xbffda8e9; op3val:0x3f44d6d1; valaddr_reg:x16; val_offset:204; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 204, x17, x15, 1496, x18)

inst_188:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x46a7b5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7da8e9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x44d6d1 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec6a7b5; op2val:0xbffda8e9; op3val:0x3f44d6d1; valaddr_reg:x16; val_offset:216; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 216, x17, x15, 1504, x18)

inst_189:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x46a7b5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7da8e9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x44d6d1 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec6a7b5; op2val:0xbffda8e9; op3val:0x3f44d6d1; valaddr_reg:x16; val_offset:228; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 228, x17, x15, 1512, x18)

inst_190:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x46a7b5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7da8e9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x44d6d1 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec6a7b5; op2val:0xbffda8e9; op3val:0x3f44d6d1; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 1520, x18)

inst_191:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0f9112 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x397179 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x4ffef4 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e0f9112; op2val:0xbeb97179; op3val:0x3d4ffef4; valaddr_reg:x16; val_offset:252; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 252, x17, x15, 1528, x18)

inst_192:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0f9112 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x397179 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x4ffef4 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e0f9112; op2val:0xbeb97179; op3val:0x3d4ffef4; valaddr_reg:x16; val_offset:264; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 264, x17, x15, 1536, x18)

inst_193:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0f9112 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x397179 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x4ffef4 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e0f9112; op2val:0xbeb97179; op3val:0x3d4ffef4; valaddr_reg:x16; val_offset:276; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 276, x17, x15, 1544, x18)

inst_194:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0f9112 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x397179 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x4ffef4 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e0f9112; op2val:0xbeb97179; op3val:0x3d4ffef4; valaddr_reg:x16; val_offset:288; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 288, x17, x15, 1552, x18)

inst_195:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0f9112 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x397179 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x4ffef4 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e0f9112; op2val:0xbeb97179; op3val:0x3d4ffef4; valaddr_reg:x16; val_offset:300; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 300, x17, x15, 1560, x18)

inst_196:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5eb092 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3d2fc7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2491ec and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5eb092; op2val:0xbf3d2fc7; op3val:0x3f2491ec; valaddr_reg:x16; val_offset:312; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 312, x17, x15, 1568, x18)

inst_197:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5eb092 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3d2fc7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2491ec and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5eb092; op2val:0xbf3d2fc7; op3val:0x3f2491ec; valaddr_reg:x16; val_offset:324; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 324, x17, x15, 1576, x18)

inst_198:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5eb092 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3d2fc7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2491ec and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5eb092; op2val:0xbf3d2fc7; op3val:0x3f2491ec; valaddr_reg:x16; val_offset:336; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 336, x17, x15, 1584, x18)

inst_199:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5eb092 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3d2fc7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2491ec and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5eb092; op2val:0xbf3d2fc7; op3val:0x3f2491ec; valaddr_reg:x16; val_offset:348; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 348, x17, x15, 1592, x18)

inst_200:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5eb092 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3d2fc7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2491ec and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5eb092; op2val:0xbf3d2fc7; op3val:0x3f2491ec; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 1600, x18)

inst_201:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x78f793 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x79e76d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7309e0 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f78f793; op2val:0xbf79e76d; op3val:0x3f7309e0; valaddr_reg:x16; val_offset:372; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 372, x17, x15, 1608, x18)

inst_202:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x78f793 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x79e76d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7309e0 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f78f793; op2val:0xbf79e76d; op3val:0x3f7309e0; valaddr_reg:x16; val_offset:384; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 384, x17, x15, 1616, x18)

inst_203:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x78f793 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x79e76d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7309e0 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f78f793; op2val:0xbf79e76d; op3val:0x3f7309e0; valaddr_reg:x16; val_offset:396; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 396, x17, x15, 1624, x18)

inst_204:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x78f793 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x79e76d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7309e0 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f78f793; op2val:0xbf79e76d; op3val:0x3f7309e0; valaddr_reg:x16; val_offset:408; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 408, x17, x15, 1632, x18)

inst_205:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x78f793 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x79e76d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7309e0 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f78f793; op2val:0xbf79e76d; op3val:0x3f7309e0; valaddr_reg:x16; val_offset:420; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 420, x17, x15, 1640, x18)

inst_206:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x71e19f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6feef0 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x62b366 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e71e19f; op2val:0xbfefeef0; op3val:0x3ee2b366; valaddr_reg:x16; val_offset:432; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 432, x17, x15, 1648, x18)

inst_207:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x71e19f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6feef0 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x62b366 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e71e19f; op2val:0xbfefeef0; op3val:0x3ee2b366; valaddr_reg:x16; val_offset:444; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 444, x17, x15, 1656, x18)

inst_208:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x71e19f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6feef0 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x62b366 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e71e19f; op2val:0xbfefeef0; op3val:0x3ee2b366; valaddr_reg:x16; val_offset:456; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 456, x17, x15, 1664, x18)

inst_209:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x71e19f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6feef0 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x62b366 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e71e19f; op2val:0xbfefeef0; op3val:0x3ee2b366; valaddr_reg:x16; val_offset:468; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 468, x17, x15, 1672, x18)

inst_210:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x71e19f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6feef0 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x62b366 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e71e19f; op2val:0xbfefeef0; op3val:0x3ee2b366; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1680, x18)

inst_211:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x122fd6 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x51e9a0 and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x021896 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54122fd6; op2val:0x4051e9a0; op3val:0x53021896; valaddr_reg:x16; val_offset:492; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 492, x17, x15, 1688, x18)

inst_212:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x122fd6 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x51e9a0 and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x021896 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54122fd6; op2val:0x4051e9a0; op3val:0x53021896; valaddr_reg:x16; val_offset:504; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 504, x17, x15, 1696, x18)

inst_213:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x122fd6 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x51e9a0 and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x021896 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54122fd6; op2val:0x4051e9a0; op3val:0x53021896; valaddr_reg:x16; val_offset:516; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 516, x17, x15, 1704, x18)

inst_214:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x122fd6 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x51e9a0 and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x021896 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54122fd6; op2val:0x4051e9a0; op3val:0x53021896; valaddr_reg:x16; val_offset:528; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 528, x17, x15, 1712, x18)

inst_215:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x122fd6 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x51e9a0 and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x021896 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54122fd6; op2val:0x4051e9a0; op3val:0x53021896; valaddr_reg:x16; val_offset:540; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 540, x17, x15, 1720, x18)

inst_216:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x067276 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1dfbce and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x2d078f and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54067276; op2val:0x3f9dfbce; op3val:0x54ad078f; valaddr_reg:x16; val_offset:552; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 552, x17, x15, 1728, x18)

inst_217:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x067276 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1dfbce and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x2d078f and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54067276; op2val:0x3f9dfbce; op3val:0x54ad078f; valaddr_reg:x16; val_offset:564; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 564, x17, x15, 1736, x18)

inst_218:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x067276 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1dfbce and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x2d078f and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54067276; op2val:0x3f9dfbce; op3val:0x54ad078f; valaddr_reg:x16; val_offset:576; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 576, x17, x15, 1744, x18)

inst_219:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x067276 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1dfbce and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x2d078f and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54067276; op2val:0x3f9dfbce; op3val:0x54ad078f; valaddr_reg:x16; val_offset:588; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 588, x17, x15, 1752, x18)

inst_220:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x067276 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1dfbce and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x2d078f and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54067276; op2val:0x3f9dfbce; op3val:0x54ad078f; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1760, x18)

inst_221:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x0705b8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x499575 and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x2d6d6e and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x530705b8; op2val:0x41499575; op3val:0x53ad6d6e; valaddr_reg:x16; val_offset:612; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 612, x17, x15, 1768, x18)

inst_222:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x0705b8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x499575 and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x2d6d6e and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x530705b8; op2val:0x41499575; op3val:0x53ad6d6e; valaddr_reg:x16; val_offset:624; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 624, x17, x15, 1776, x18)

inst_223:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x0705b8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x499575 and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x2d6d6e and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x530705b8; op2val:0x41499575; op3val:0x53ad6d6e; valaddr_reg:x16; val_offset:636; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 636, x17, x15, 1784, x18)

inst_224:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x0705b8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x499575 and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x2d6d6e and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x530705b8; op2val:0x41499575; op3val:0x53ad6d6e; valaddr_reg:x16; val_offset:648; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 648, x17, x15, 1792, x18)

inst_225:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x0705b8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x499575 and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x2d6d6e and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x530705b8; op2val:0x41499575; op3val:0x53ad6d6e; valaddr_reg:x16; val_offset:660; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 660, x17, x15, 1800, x18)

inst_226:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x43caa1 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x119051 and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x055ed3 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5443caa1; op2val:0x40119051; op3val:0x53855ed3; valaddr_reg:x16; val_offset:672; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 672, x17, x15, 1808, x18)

inst_227:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x43caa1 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x119051 and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x055ed3 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5443caa1; op2val:0x40119051; op3val:0x53855ed3; valaddr_reg:x16; val_offset:684; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 684, x17, x15, 1816, x18)

inst_228:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x43caa1 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x119051 and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x055ed3 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5443caa1; op2val:0x40119051; op3val:0x53855ed3; valaddr_reg:x16; val_offset:696; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 696, x17, x15, 1824, x18)

inst_229:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x43caa1 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x119051 and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x055ed3 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5443caa1; op2val:0x40119051; op3val:0x53855ed3; valaddr_reg:x16; val_offset:708; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 708, x17, x15, 1832, x18)

inst_230:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x43caa1 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x119051 and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x055ed3 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5443caa1; op2val:0x40119051; op3val:0x53855ed3; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1840, x18)

inst_231:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x090f4d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x33b6cf and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x4fe437 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54090f4d; op2val:0x3f33b6cf; op3val:0x54cfe437; valaddr_reg:x16; val_offset:732; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 732, x17, x15, 1848, x18)

inst_232:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x090f4d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x33b6cf and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x4fe437 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54090f4d; op2val:0x3f33b6cf; op3val:0x54cfe437; valaddr_reg:x16; val_offset:744; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 744, x17, x15, 1856, x18)

inst_233:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x090f4d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x33b6cf and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x4fe437 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54090f4d; op2val:0x3f33b6cf; op3val:0x54cfe437; valaddr_reg:x16; val_offset:756; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 756, x17, x15, 1864, x18)

inst_234:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x090f4d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x33b6cf and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x4fe437 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54090f4d; op2val:0x3f33b6cf; op3val:0x54cfe437; valaddr_reg:x16; val_offset:768; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 768, x17, x15, 1872, x18)

inst_235:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x090f4d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x33b6cf and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x4fe437 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54090f4d; op2val:0x3f33b6cf; op3val:0x54cfe437; valaddr_reg:x16; val_offset:780; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 780, x17, x15, 1880, x18)

inst_236:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x3a5f88 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x5227d5 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x338051 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54ba5f88; op2val:0x3ed227d5; op3val:0x54b38051; valaddr_reg:x16; val_offset:792; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 792, x17, x15, 1888, x18)

inst_237:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x3a5f88 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x5227d5 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x338051 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54ba5f88; op2val:0x3ed227d5; op3val:0x54b38051; valaddr_reg:x16; val_offset:804; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 804, x17, x15, 1896, x18)

inst_238:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x3a5f88 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x5227d5 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x338051 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54ba5f88; op2val:0x3ed227d5; op3val:0x54b38051; valaddr_reg:x16; val_offset:816; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 816, x17, x15, 1904, x18)

inst_239:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x3a5f88 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x5227d5 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x338051 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54ba5f88; op2val:0x3ed227d5; op3val:0x54b38051; valaddr_reg:x16; val_offset:828; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 828, x17, x15, 1912, x18)

inst_240:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x3a5f88 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x5227d5 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x338051 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54ba5f88; op2val:0x3ed227d5; op3val:0x54b38051; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1920, x18)

inst_241:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x27cc22 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x0d56e4 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x746b74 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54a7cc22; op2val:0x3d8d56e4; op3val:0x54f46b74; valaddr_reg:x16; val_offset:852; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 852, x17, x15, 1928, x18)

inst_242:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x27cc22 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x0d56e4 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x746b74 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54a7cc22; op2val:0x3d8d56e4; op3val:0x54f46b74; valaddr_reg:x16; val_offset:864; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 864, x17, x15, 1936, x18)

inst_243:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x27cc22 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x0d56e4 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x746b74 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54a7cc22; op2val:0x3d8d56e4; op3val:0x54f46b74; valaddr_reg:x16; val_offset:876; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 876, x17, x15, 1944, x18)

inst_244:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x27cc22 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x0d56e4 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x746b74 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54a7cc22; op2val:0x3d8d56e4; op3val:0x54f46b74; valaddr_reg:x16; val_offset:888; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 888, x17, x15, 1952, x18)

inst_245:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x27cc22 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x0d56e4 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x746b74 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54a7cc22; op2val:0x3d8d56e4; op3val:0x54f46b74; valaddr_reg:x16; val_offset:900; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 900, x17, x15, 1960, x18)

inst_246:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x6265c2 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x542009 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x5119d9 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x546265c2; op2val:0x3ed42009; op3val:0x54d119d9; valaddr_reg:x16; val_offset:912; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 912, x17, x15, 1968, x18)

inst_247:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x6265c2 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x542009 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x5119d9 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x546265c2; op2val:0x3ed42009; op3val:0x54d119d9; valaddr_reg:x16; val_offset:924; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 924, x17, x15, 1976, x18)

inst_248:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x6265c2 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x542009 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x5119d9 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x546265c2; op2val:0x3ed42009; op3val:0x54d119d9; valaddr_reg:x16; val_offset:936; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 936, x17, x15, 1984, x18)

inst_249:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x6265c2 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x542009 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x5119d9 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x546265c2; op2val:0x3ed42009; op3val:0x54d119d9; valaddr_reg:x16; val_offset:948; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 948, x17, x15, 1992, x18)

inst_250:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x6265c2 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x542009 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x5119d9 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x546265c2; op2val:0x3ed42009; op3val:0x54d119d9; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 2000, x18)

inst_251:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x427ced and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0f4d5f and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x13216f and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54c27ced; op2val:0x3f0f4d5f; op3val:0x5493216f; valaddr_reg:x16; val_offset:972; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 972, x17, x15, 2008, x18)

inst_252:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x427ced and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0f4d5f and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x13216f and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54c27ced; op2val:0x3f0f4d5f; op3val:0x5493216f; valaddr_reg:x16; val_offset:984; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 984, x17, x15, 2016, x18)

inst_253:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x427ced and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0f4d5f and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x13216f and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54c27ced; op2val:0x3f0f4d5f; op3val:0x5493216f; valaddr_reg:x16; val_offset:996; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 996, x17, x15, 2024, x18)
RVTEST_SIGBASE(x15,signature_x15_2)

inst_254:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x427ced and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0f4d5f and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x13216f and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54c27ced; op2val:0x3f0f4d5f; op3val:0x5493216f; valaddr_reg:x16; val_offset:1008; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1008, x17, x15, 0, x18)

inst_255:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x427ced and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0f4d5f and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x13216f and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54c27ced; op2val:0x3f0f4d5f; op3val:0x5493216f; valaddr_reg:x16; val_offset:1020; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1020, x17, x15, 8, x18)

inst_256:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x656627 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x45a36c and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x2772f9 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54e56627; op2val:0x3ec5a36c; op3val:0x54a772f9; valaddr_reg:x16; val_offset:1032; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1032, x17, x15, 16, x18)

inst_257:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x656627 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x45a36c and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x2772f9 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54e56627; op2val:0x3ec5a36c; op3val:0x54a772f9; valaddr_reg:x16; val_offset:1044; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1044, x17, x15, 24, x18)

inst_258:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x656627 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x45a36c and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x2772f9 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54e56627; op2val:0x3ec5a36c; op3val:0x54a772f9; valaddr_reg:x16; val_offset:1056; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1056, x17, x15, 32, x18)

inst_259:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x656627 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x45a36c and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x2772f9 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54e56627; op2val:0x3ec5a36c; op3val:0x54a772f9; valaddr_reg:x16; val_offset:1068; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1068, x17, x15, 40, x18)

inst_260:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x656627 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x45a36c and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x2772f9 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54e56627; op2val:0x3ec5a36c; op3val:0x54a772f9; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 48, x18)

inst_261:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x4097dc and fs2 == 0 and fe2 == 0x7e and fm2 == 0x170e7b and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x0e5b88 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54c097dc; op2val:0x3f170e7b; op3val:0x548e5b88; valaddr_reg:x16; val_offset:1092; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1092, x17, x15, 56, x18)

inst_262:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x4097dc and fs2 == 0 and fe2 == 0x7e and fm2 == 0x170e7b and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x0e5b88 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54c097dc; op2val:0x3f170e7b; op3val:0x548e5b88; valaddr_reg:x16; val_offset:1104; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1104, x17, x15, 64, x18)

inst_263:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x4097dc and fs2 == 0 and fe2 == 0x7e and fm2 == 0x170e7b and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x0e5b88 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54c097dc; op2val:0x3f170e7b; op3val:0x548e5b88; valaddr_reg:x16; val_offset:1116; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1116, x17, x15, 72, x18)

inst_264:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x4097dc and fs2 == 0 and fe2 == 0x7e and fm2 == 0x170e7b and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x0e5b88 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54c097dc; op2val:0x3f170e7b; op3val:0x548e5b88; valaddr_reg:x16; val_offset:1128; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1128, x17, x15, 80, x18)

inst_265:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x4097dc and fs2 == 0 and fe2 == 0x7e and fm2 == 0x170e7b and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x0e5b88 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54c097dc; op2val:0x3f170e7b; op3val:0x548e5b88; valaddr_reg:x16; val_offset:1140; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1140, x17, x15, 88, x18)

inst_266:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x5755ff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x50cd02 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x20bb5d and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x545755ff; op2val:0x3fd0cd02; op3val:0x5420bb5d; valaddr_reg:x16; val_offset:1152; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1152, x17, x15, 96, x18)

inst_267:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x5755ff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x50cd02 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x20bb5d and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x545755ff; op2val:0x3fd0cd02; op3val:0x5420bb5d; valaddr_reg:x16; val_offset:1164; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1164, x17, x15, 104, x18)

inst_268:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x5755ff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x50cd02 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x20bb5d and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x545755ff; op2val:0x3fd0cd02; op3val:0x5420bb5d; valaddr_reg:x16; val_offset:1176; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1176, x17, x15, 112, x18)

inst_269:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x5755ff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x50cd02 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x20bb5d and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x545755ff; op2val:0x3fd0cd02; op3val:0x5420bb5d; valaddr_reg:x16; val_offset:1188; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1188, x17, x15, 120, x18)

inst_270:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x5755ff and fs2 == 0 and fe2 == 0x7f and fm2 == 0x50cd02 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x20bb5d and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x545755ff; op2val:0x3fd0cd02; op3val:0x5420bb5d; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 128, x18)

inst_271:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x3f5dd2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1a5c2a and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x49ca9b and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x543f5dd2; op2val:0x401a5c2a; op3val:0x5349ca9b; valaddr_reg:x16; val_offset:1212; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1212, x17, x15, 136, x18)

inst_272:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x3f5dd2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1a5c2a and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x49ca9b and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x543f5dd2; op2val:0x401a5c2a; op3val:0x5349ca9b; valaddr_reg:x16; val_offset:1224; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1224, x17, x15, 144, x18)

inst_273:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x3f5dd2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1a5c2a and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x49ca9b and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x543f5dd2; op2val:0x401a5c2a; op3val:0x5349ca9b; valaddr_reg:x16; val_offset:1236; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1236, x17, x15, 152, x18)

inst_274:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x3f5dd2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1a5c2a and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x49ca9b and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x543f5dd2; op2val:0x401a5c2a; op3val:0x5349ca9b; valaddr_reg:x16; val_offset:1248; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1248, x17, x15, 160, x18)

inst_275:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x3f5dd2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1a5c2a and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x49ca9b and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x543f5dd2; op2val:0x401a5c2a; op3val:0x5349ca9b; valaddr_reg:x16; val_offset:1260; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1260, x17, x15, 168, x18)

inst_276:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x4ca682 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x64a420 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x1270fe and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x53cca682; op2val:0x4064a420; op3val:0x541270fe; valaddr_reg:x16; val_offset:1272; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1272, x17, x15, 176, x18)

inst_277:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x4ca682 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x64a420 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x1270fe and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x53cca682; op2val:0x4064a420; op3val:0x541270fe; valaddr_reg:x16; val_offset:1284; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1284, x17, x15, 184, x18)

inst_278:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x4ca682 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x64a420 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x1270fe and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x53cca682; op2val:0x4064a420; op3val:0x541270fe; valaddr_reg:x16; val_offset:1296; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1296, x17, x15, 192, x18)

inst_279:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x4ca682 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x64a420 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x1270fe and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x53cca682; op2val:0x4064a420; op3val:0x541270fe; valaddr_reg:x16; val_offset:1308; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1308, x17, x15, 200, x18)

inst_280:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x4ca682 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x64a420 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x1270fe and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x53cca682; op2val:0x4064a420; op3val:0x541270fe; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 208, x18)

inst_281:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x335aae and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2decb5 and fs3 == 0 and fe3 == 0xa5 and fm3 == 0x44bc46 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54b35aae; op2val:0x3fadecb5; op3val:0x52c4bc46; valaddr_reg:x16; val_offset:1332; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1332, x17, x15, 216, x18)

inst_282:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x335aae and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2decb5 and fs3 == 0 and fe3 == 0xa5 and fm3 == 0x44bc46 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54b35aae; op2val:0x3fadecb5; op3val:0x52c4bc46; valaddr_reg:x16; val_offset:1344; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1344, x17, x15, 224, x18)

inst_283:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x335aae and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2decb5 and fs3 == 0 and fe3 == 0xa5 and fm3 == 0x44bc46 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54b35aae; op2val:0x3fadecb5; op3val:0x52c4bc46; valaddr_reg:x16; val_offset:1356; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1356, x17, x15, 232, x18)

inst_284:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x335aae and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2decb5 and fs3 == 0 and fe3 == 0xa5 and fm3 == 0x44bc46 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54b35aae; op2val:0x3fadecb5; op3val:0x52c4bc46; valaddr_reg:x16; val_offset:1368; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1368, x17, x15, 240, x18)

inst_285:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x335aae and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2decb5 and fs3 == 0 and fe3 == 0xa5 and fm3 == 0x44bc46 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54b35aae; op2val:0x3fadecb5; op3val:0x52c4bc46; valaddr_reg:x16; val_offset:1380; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1380, x17, x15, 248, x18)

inst_286:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x7b4695 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x74c9c3 and fs3 == 0 and fe3 == 0xa5 and fm3 == 0x7baaf5 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x53fb4695; op2val:0x4074c9c3; op3val:0x52fbaaf5; valaddr_reg:x16; val_offset:1392; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1392, x17, x15, 256, x18)

inst_287:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x7b4695 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x74c9c3 and fs3 == 0 and fe3 == 0xa5 and fm3 == 0x7baaf5 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x53fb4695; op2val:0x4074c9c3; op3val:0x52fbaaf5; valaddr_reg:x16; val_offset:1404; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1404, x17, x15, 264, x18)

inst_288:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x7b4695 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x74c9c3 and fs3 == 0 and fe3 == 0xa5 and fm3 == 0x7baaf5 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x53fb4695; op2val:0x4074c9c3; op3val:0x52fbaaf5; valaddr_reg:x16; val_offset:1416; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1416, x17, x15, 272, x18)

inst_289:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x7b4695 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x74c9c3 and fs3 == 0 and fe3 == 0xa5 and fm3 == 0x7baaf5 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x53fb4695; op2val:0x4074c9c3; op3val:0x52fbaaf5; valaddr_reg:x16; val_offset:1428; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1428, x17, x15, 280, x18)

inst_290:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x7b4695 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x74c9c3 and fs3 == 0 and fe3 == 0xa5 and fm3 == 0x7baaf5 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x53fb4695; op2val:0x4074c9c3; op3val:0x52fbaaf5; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 288, x18)

inst_291:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x5b7807 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7ca2c9 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x13b525 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x545b7807; op2val:0x3f7ca2c9; op3val:0x5493b525; valaddr_reg:x16; val_offset:1452; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1452, x17, x15, 296, x18)

inst_292:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x5b7807 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7ca2c9 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x13b525 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x545b7807; op2val:0x3f7ca2c9; op3val:0x5493b525; valaddr_reg:x16; val_offset:1464; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1464, x17, x15, 304, x18)

inst_293:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x5b7807 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7ca2c9 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x13b525 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x545b7807; op2val:0x3f7ca2c9; op3val:0x5493b525; valaddr_reg:x16; val_offset:1476; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1476, x17, x15, 312, x18)

inst_294:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x5b7807 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7ca2c9 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x13b525 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x545b7807; op2val:0x3f7ca2c9; op3val:0x5493b525; valaddr_reg:x16; val_offset:1488; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1488, x17, x15, 320, x18)

inst_295:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x5b7807 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7ca2c9 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x13b525 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x545b7807; op2val:0x3f7ca2c9; op3val:0x5493b525; valaddr_reg:x16; val_offset:1500; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1500, x17, x15, 328, x18)

inst_296:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x7ab9d8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x6f5802 and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x2cb270 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x53fab9d8; op2val:0x406f5802; op3val:0x532cb270; valaddr_reg:x16; val_offset:1512; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1512, x17, x15, 336, x18)

inst_297:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x7ab9d8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x6f5802 and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x2cb270 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x53fab9d8; op2val:0x406f5802; op3val:0x532cb270; valaddr_reg:x16; val_offset:1524; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1524, x17, x15, 344, x18)

inst_298:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x7ab9d8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x6f5802 and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x2cb270 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x53fab9d8; op2val:0x406f5802; op3val:0x532cb270; valaddr_reg:x16; val_offset:1536; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1536, x17, x15, 352, x18)

inst_299:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x7ab9d8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x6f5802 and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x2cb270 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x53fab9d8; op2val:0x406f5802; op3val:0x532cb270; valaddr_reg:x16; val_offset:1548; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1548, x17, x15, 360, x18)

inst_300:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x7ab9d8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x6f5802 and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x2cb270 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x53fab9d8; op2val:0x406f5802; op3val:0x532cb270; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 368, x18)

inst_301:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x04edd6 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x624c2b and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x27e7bb and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5384edd6; op2val:0x40e24c2b; op3val:0x5327e7bb; valaddr_reg:x16; val_offset:1572; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1572, x17, x15, 376, x18)

inst_302:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x04edd6 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x624c2b and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x27e7bb and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5384edd6; op2val:0x40e24c2b; op3val:0x5327e7bb; valaddr_reg:x16; val_offset:1584; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1584, x17, x15, 384, x18)

inst_303:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x04edd6 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x624c2b and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x27e7bb and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5384edd6; op2val:0x40e24c2b; op3val:0x5327e7bb; valaddr_reg:x16; val_offset:1596; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1596, x17, x15, 392, x18)

inst_304:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x04edd6 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x624c2b and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x27e7bb and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5384edd6; op2val:0x40e24c2b; op3val:0x5327e7bb; valaddr_reg:x16; val_offset:1608; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1608, x17, x15, 400, x18)

inst_305:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x04edd6 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x624c2b and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x27e7bb and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5384edd6; op2val:0x40e24c2b; op3val:0x5327e7bb; valaddr_reg:x16; val_offset:1620; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1620, x17, x15, 408, x18)

inst_306:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x51c6ab and fs2 == 0 and fe2 == 0x7e and fm2 == 0x56a9f9 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x203148 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54d1c6ab; op2val:0x3f56a9f9; op3val:0x54203148; valaddr_reg:x16; val_offset:1632; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1632, x17, x15, 416, x18)

inst_307:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x51c6ab and fs2 == 0 and fe2 == 0x7e and fm2 == 0x56a9f9 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x203148 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54d1c6ab; op2val:0x3f56a9f9; op3val:0x54203148; valaddr_reg:x16; val_offset:1644; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1644, x17, x15, 424, x18)

inst_308:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x51c6ab and fs2 == 0 and fe2 == 0x7e and fm2 == 0x56a9f9 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x203148 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54d1c6ab; op2val:0x3f56a9f9; op3val:0x54203148; valaddr_reg:x16; val_offset:1656; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1656, x17, x15, 432, x18)

inst_309:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x51c6ab and fs2 == 0 and fe2 == 0x7e and fm2 == 0x56a9f9 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x203148 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54d1c6ab; op2val:0x3f56a9f9; op3val:0x54203148; valaddr_reg:x16; val_offset:1668; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1668, x17, x15, 440, x18)

inst_310:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x51c6ab and fs2 == 0 and fe2 == 0x7e and fm2 == 0x56a9f9 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x203148 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54d1c6ab; op2val:0x3f56a9f9; op3val:0x54203148; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 448, x18)

inst_311:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x3379cf and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2636b4 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x45bc55 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x533379cf; op2val:0x402636b4; op3val:0x54c5bc55; valaddr_reg:x16; val_offset:1692; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1692, x17, x15, 456, x18)

inst_312:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x3379cf and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2636b4 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x45bc55 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x533379cf; op2val:0x402636b4; op3val:0x54c5bc55; valaddr_reg:x16; val_offset:1704; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1704, x17, x15, 464, x18)

inst_313:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x3379cf and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2636b4 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x45bc55 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x533379cf; op2val:0x402636b4; op3val:0x54c5bc55; valaddr_reg:x16; val_offset:1716; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1716, x17, x15, 472, x18)

inst_314:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x3379cf and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2636b4 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x45bc55 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x533379cf; op2val:0x402636b4; op3val:0x54c5bc55; valaddr_reg:x16; val_offset:1728; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1728, x17, x15, 480, x18)

inst_315:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x3379cf and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2636b4 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x45bc55 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x533379cf; op2val:0x402636b4; op3val:0x54c5bc55; valaddr_reg:x16; val_offset:1740; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1740, x17, x15, 488, x18)

inst_316:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x6ced36 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x3e6291 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x1f9971 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x536ced36; op2val:0x40be6291; op3val:0x541f9971; valaddr_reg:x16; val_offset:1752; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1752, x17, x15, 496, x18)

inst_317:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x6ced36 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x3e6291 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x1f9971 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x536ced36; op2val:0x40be6291; op3val:0x541f9971; valaddr_reg:x16; val_offset:1764; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1764, x17, x15, 504, x18)

inst_318:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x6ced36 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x3e6291 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x1f9971 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x536ced36; op2val:0x40be6291; op3val:0x541f9971; valaddr_reg:x16; val_offset:1776; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1776, x17, x15, 512, x18)

inst_319:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x6ced36 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x3e6291 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x1f9971 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x536ced36; op2val:0x40be6291; op3val:0x541f9971; valaddr_reg:x16; val_offset:1788; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1788, x17, x15, 520, x18)

inst_320:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x6ced36 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x3e6291 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x1f9971 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x536ced36; op2val:0x40be6291; op3val:0x541f9971; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 528, x18)

inst_321:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x538ffb and fs2 == 0 and fe2 == 0x7e and fm2 == 0x70640e and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x655952 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54d38ffb; op2val:0x3f70640e; op3val:0x53e55952; valaddr_reg:x16; val_offset:1812; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1812, x17, x15, 536, x18)

inst_322:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x538ffb and fs2 == 0 and fe2 == 0x7e and fm2 == 0x70640e and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x655952 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54d38ffb; op2val:0x3f70640e; op3val:0x53e55952; valaddr_reg:x16; val_offset:1824; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1824, x17, x15, 544, x18)

inst_323:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x538ffb and fs2 == 0 and fe2 == 0x7e and fm2 == 0x70640e and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x655952 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54d38ffb; op2val:0x3f70640e; op3val:0x53e55952; valaddr_reg:x16; val_offset:1836; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1836, x17, x15, 552, x18)

inst_324:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x538ffb and fs2 == 0 and fe2 == 0x7e and fm2 == 0x70640e and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x655952 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54d38ffb; op2val:0x3f70640e; op3val:0x53e55952; valaddr_reg:x16; val_offset:1848; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1848, x17, x15, 560, x18)

inst_325:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x538ffb and fs2 == 0 and fe2 == 0x7e and fm2 == 0x70640e and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x655952 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54d38ffb; op2val:0x3f70640e; op3val:0x53e55952; valaddr_reg:x16; val_offset:1860; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1860, x17, x15, 568, x18)

inst_326:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x1d7f2f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x654257 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x65e8d4 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x541d7f2f; op2val:0x3fe54257; op3val:0x5465e8d4; valaddr_reg:x16; val_offset:1872; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1872, x17, x15, 576, x18)

inst_327:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x1d7f2f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x654257 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x65e8d4 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x541d7f2f; op2val:0x3fe54257; op3val:0x5465e8d4; valaddr_reg:x16; val_offset:1884; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1884, x17, x15, 584, x18)

inst_328:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x1d7f2f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x654257 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x65e8d4 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x541d7f2f; op2val:0x3fe54257; op3val:0x5465e8d4; valaddr_reg:x16; val_offset:1896; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1896, x17, x15, 592, x18)

inst_329:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x1d7f2f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x654257 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x65e8d4 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x541d7f2f; op2val:0x3fe54257; op3val:0x5465e8d4; valaddr_reg:x16; val_offset:1908; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1908, x17, x15, 600, x18)

inst_330:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x1d7f2f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x654257 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x65e8d4 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x541d7f2f; op2val:0x3fe54257; op3val:0x5465e8d4; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 608, x18)

inst_331:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x39c374 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x758c24 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x69ba48 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54b9c374; op2val:0x3df58c24; op3val:0x54e9ba48; valaddr_reg:x16; val_offset:1932; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1932, x17, x15, 616, x18)

inst_332:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x39c374 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x758c24 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x69ba48 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54b9c374; op2val:0x3df58c24; op3val:0x54e9ba48; valaddr_reg:x16; val_offset:1944; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1944, x17, x15, 624, x18)

inst_333:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x39c374 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x758c24 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x69ba48 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54b9c374; op2val:0x3df58c24; op3val:0x54e9ba48; valaddr_reg:x16; val_offset:1956; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1956, x17, x15, 632, x18)

inst_334:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x39c374 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x758c24 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x69ba48 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54b9c374; op2val:0x3df58c24; op3val:0x54e9ba48; valaddr_reg:x16; val_offset:1968; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1968, x17, x15, 640, x18)

inst_335:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x39c374 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x758c24 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x69ba48 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54b9c374; op2val:0x3df58c24; op3val:0x54e9ba48; valaddr_reg:x16; val_offset:1980; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1980, x17, x15, 648, x18)

inst_336:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x40d578 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7ed354 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x200681 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5440d578; op2val:0x3f7ed354; op3val:0x54a00681; valaddr_reg:x16; val_offset:1992; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1992, x17, x15, 656, x18)

inst_337:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x40d578 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7ed354 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x200681 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5440d578; op2val:0x3f7ed354; op3val:0x54a00681; valaddr_reg:x16; val_offset:2004; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 2004, x17, x15, 664, x18)

inst_338:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x40d578 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7ed354 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x200681 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5440d578; op2val:0x3f7ed354; op3val:0x54a00681; valaddr_reg:x16; val_offset:2016; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 2016, x17, x15, 672, x18)

inst_339:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x40d578 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7ed354 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x200681 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5440d578; op2val:0x3f7ed354; op3val:0x54a00681; valaddr_reg:x16; val_offset:2028; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 2028, x17, x15, 680, x18)
addi x16,x16,2040

inst_340:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x40d578 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7ed354 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x200681 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5440d578; op2val:0x3f7ed354; op3val:0x54a00681; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 688, x18)

inst_341:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x791bc6 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x61809f and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x1248b7 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54791bc6; op2val:0x3f61809f; op3val:0x549248b7; valaddr_reg:x16; val_offset:12; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 12, x17, x15, 696, x18)

inst_342:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x791bc6 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x61809f and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x1248b7 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54791bc6; op2val:0x3f61809f; op3val:0x549248b7; valaddr_reg:x16; val_offset:24; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 24, x17, x15, 704, x18)

inst_343:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x791bc6 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x61809f and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x1248b7 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54791bc6; op2val:0x3f61809f; op3val:0x549248b7; valaddr_reg:x16; val_offset:36; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 36, x17, x15, 712, x18)

inst_344:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x791bc6 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x61809f and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x1248b7 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54791bc6; op2val:0x3f61809f; op3val:0x549248b7; valaddr_reg:x16; val_offset:48; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 48, x17, x15, 720, x18)

inst_345:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x791bc6 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x61809f and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x1248b7 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54791bc6; op2val:0x3f61809f; op3val:0x549248b7; valaddr_reg:x16; val_offset:60; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 60, x17, x15, 728, x18)

inst_346:
// fs1 == 0 and fe1 == 0xa4 and fm1 == 0x0e9bc9 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x538ff9 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x0a2564 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x520e9bc9; op2val:0x41d38ff9; op3val:0x548a2564; valaddr_reg:x16; val_offset:72; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 72, x17, x15, 736, x18)

inst_347:
// fs1 == 0 and fe1 == 0xa4 and fm1 == 0x0e9bc9 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x538ff9 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x0a2564 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x520e9bc9; op2val:0x41d38ff9; op3val:0x548a2564; valaddr_reg:x16; val_offset:84; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 84, x17, x15, 744, x18)

inst_348:
// fs1 == 0 and fe1 == 0xa4 and fm1 == 0x0e9bc9 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x538ff9 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x0a2564 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x520e9bc9; op2val:0x41d38ff9; op3val:0x548a2564; valaddr_reg:x16; val_offset:96; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 96, x17, x15, 752, x18)

inst_349:
// fs1 == 0 and fe1 == 0xa4 and fm1 == 0x0e9bc9 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x538ff9 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x0a2564 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x520e9bc9; op2val:0x41d38ff9; op3val:0x548a2564; valaddr_reg:x16; val_offset:108; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 108, x17, x15, 760, x18)

inst_350:
// fs1 == 0 and fe1 == 0xa4 and fm1 == 0x0e9bc9 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x538ff9 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x0a2564 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x520e9bc9; op2val:0x41d38ff9; op3val:0x548a2564; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 768, x18)

inst_351:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x5b5513 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x6abb8b and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x5b8e3c and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54db5513; op2val:0x3f6abb8b; op3val:0x53db8e3c; valaddr_reg:x16; val_offset:132; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 132, x17, x15, 776, x18)

inst_352:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x5b5513 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x6abb8b and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x5b8e3c and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54db5513; op2val:0x3f6abb8b; op3val:0x53db8e3c; valaddr_reg:x16; val_offset:144; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 144, x17, x15, 784, x18)

inst_353:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x5b5513 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x6abb8b and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x5b8e3c and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54db5513; op2val:0x3f6abb8b; op3val:0x53db8e3c; valaddr_reg:x16; val_offset:156; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 156, x17, x15, 792, x18)

inst_354:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x5b5513 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x6abb8b and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x5b8e3c and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54db5513; op2val:0x3f6abb8b; op3val:0x53db8e3c; valaddr_reg:x16; val_offset:168; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 168, x17, x15, 800, x18)

inst_355:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x5b5513 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x6abb8b and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x5b8e3c and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54db5513; op2val:0x3f6abb8b; op3val:0x53db8e3c; valaddr_reg:x16; val_offset:180; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 180, x17, x15, 808, x18)

inst_356:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x6bda7c and fs2 == 0 and fe2 == 0x7d and fm2 == 0x5f3f08 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x19294e and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54ebda7c; op2val:0x3edf3f08; op3val:0x5499294e; valaddr_reg:x16; val_offset:192; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 192, x17, x15, 816, x18)

inst_357:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x6bda7c and fs2 == 0 and fe2 == 0x7d and fm2 == 0x5f3f08 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x19294e and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54ebda7c; op2val:0x3edf3f08; op3val:0x5499294e; valaddr_reg:x16; val_offset:204; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 204, x17, x15, 824, x18)

inst_358:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x6bda7c and fs2 == 0 and fe2 == 0x7d and fm2 == 0x5f3f08 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x19294e and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54ebda7c; op2val:0x3edf3f08; op3val:0x5499294e; valaddr_reg:x16; val_offset:216; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 216, x17, x15, 832, x18)

inst_359:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x6bda7c and fs2 == 0 and fe2 == 0x7d and fm2 == 0x5f3f08 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x19294e and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54ebda7c; op2val:0x3edf3f08; op3val:0x5499294e; valaddr_reg:x16; val_offset:228; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 228, x17, x15, 840, x18)

inst_360:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x6bda7c and fs2 == 0 and fe2 == 0x7d and fm2 == 0x5f3f08 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x19294e and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54ebda7c; op2val:0x3edf3f08; op3val:0x5499294e; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 848, x18)

inst_361:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x5d24d6 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x07bf38 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x0abc63 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x535d24d6; op2val:0x4087bf38; op3val:0x548abc63; valaddr_reg:x16; val_offset:252; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 252, x17, x15, 856, x18)

inst_362:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x5d24d6 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x07bf38 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x0abc63 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x535d24d6; op2val:0x4087bf38; op3val:0x548abc63; valaddr_reg:x16; val_offset:264; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 264, x17, x15, 864, x18)

inst_363:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x5d24d6 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x07bf38 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x0abc63 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x535d24d6; op2val:0x4087bf38; op3val:0x548abc63; valaddr_reg:x16; val_offset:276; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 276, x17, x15, 872, x18)

inst_364:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x5d24d6 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x07bf38 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x0abc63 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x535d24d6; op2val:0x4087bf38; op3val:0x548abc63; valaddr_reg:x16; val_offset:288; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 288, x17, x15, 880, x18)

inst_365:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x5d24d6 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x07bf38 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x0abc63 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x535d24d6; op2val:0x4087bf38; op3val:0x548abc63; valaddr_reg:x16; val_offset:300; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 300, x17, x15, 888, x18)

inst_366:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x2cc4ce and fs2 == 0 and fe2 == 0x82 and fm2 == 0x022175 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x20b5eb and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x532cc4ce; op2val:0x41022175; op3val:0x5420b5eb; valaddr_reg:x16; val_offset:312; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 312, x17, x15, 896, x18)

inst_367:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x2cc4ce and fs2 == 0 and fe2 == 0x82 and fm2 == 0x022175 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x20b5eb and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x532cc4ce; op2val:0x41022175; op3val:0x5420b5eb; valaddr_reg:x16; val_offset:324; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 324, x17, x15, 904, x18)

inst_368:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x2cc4ce and fs2 == 0 and fe2 == 0x82 and fm2 == 0x022175 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x20b5eb and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x532cc4ce; op2val:0x41022175; op3val:0x5420b5eb; valaddr_reg:x16; val_offset:336; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 336, x17, x15, 912, x18)

inst_369:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x2cc4ce and fs2 == 0 and fe2 == 0x82 and fm2 == 0x022175 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x20b5eb and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x532cc4ce; op2val:0x41022175; op3val:0x5420b5eb; valaddr_reg:x16; val_offset:348; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 348, x17, x15, 920, x18)

inst_370:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x2cc4ce and fs2 == 0 and fe2 == 0x82 and fm2 == 0x022175 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x20b5eb and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x532cc4ce; op2val:0x41022175; op3val:0x5420b5eb; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 928, x18)

inst_371:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x4e01ce and fs2 == 0 and fe2 == 0x7f and fm2 == 0x151a31 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x0803df and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x544e01ce; op2val:0x3f951a31; op3val:0x548803df; valaddr_reg:x16; val_offset:372; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 372, x17, x15, 936, x18)

inst_372:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x4e01ce and fs2 == 0 and fe2 == 0x7f and fm2 == 0x151a31 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x0803df and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x544e01ce; op2val:0x3f951a31; op3val:0x548803df; valaddr_reg:x16; val_offset:384; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 384, x17, x15, 944, x18)

inst_373:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x4e01ce and fs2 == 0 and fe2 == 0x7f and fm2 == 0x151a31 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x0803df and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x544e01ce; op2val:0x3f951a31; op3val:0x548803df; valaddr_reg:x16; val_offset:396; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 396, x17, x15, 952, x18)

inst_374:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x4e01ce and fs2 == 0 and fe2 == 0x7f and fm2 == 0x151a31 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x0803df and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x544e01ce; op2val:0x3f951a31; op3val:0x548803df; valaddr_reg:x16; val_offset:408; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 408, x17, x15, 960, x18)

inst_375:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x4e01ce and fs2 == 0 and fe2 == 0x7f and fm2 == 0x151a31 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x0803df and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x544e01ce; op2val:0x3f951a31; op3val:0x548803df; valaddr_reg:x16; val_offset:420; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 420, x17, x15, 968, x18)

inst_376:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x37b114 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2f4ea3 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x023585 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x53b7b114; op2val:0x402f4ea3; op3val:0x54823585; valaddr_reg:x16; val_offset:432; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 432, x17, x15, 976, x18)

inst_377:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x37b114 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2f4ea3 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x023585 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x53b7b114; op2val:0x402f4ea3; op3val:0x54823585; valaddr_reg:x16; val_offset:444; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 444, x17, x15, 984, x18)

inst_378:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x37b114 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2f4ea3 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x023585 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x53b7b114; op2val:0x402f4ea3; op3val:0x54823585; valaddr_reg:x16; val_offset:456; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 456, x17, x15, 992, x18)

inst_379:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x37b114 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2f4ea3 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x023585 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x53b7b114; op2val:0x402f4ea3; op3val:0x54823585; valaddr_reg:x16; val_offset:468; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 468, x17, x15, 1000, x18)

inst_380:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x37b114 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2f4ea3 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x023585 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x53b7b114; op2val:0x402f4ea3; op3val:0x54823585; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1008, x18)

inst_381:
// fs1 == 0 and fe1 == 0xa5 and fm1 == 0x1a073c and fs2 == 0 and fe2 == 0x7e and fm2 == 0x412b92 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x78bc65 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x529a073c; op2val:0x3f412b92; op3val:0x54f8bc65; valaddr_reg:x16; val_offset:492; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 492, x17, x15, 1016, x18)

inst_382:
// fs1 == 0 and fe1 == 0xa5 and fm1 == 0x1a073c and fs2 == 0 and fe2 == 0x7e and fm2 == 0x412b92 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x78bc65 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x529a073c; op2val:0x3f412b92; op3val:0x54f8bc65; valaddr_reg:x16; val_offset:504; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 504, x17, x15, 1024, x18)

inst_383:
// fs1 == 0 and fe1 == 0xa5 and fm1 == 0x1a073c and fs2 == 0 and fe2 == 0x7e and fm2 == 0x412b92 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x78bc65 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x529a073c; op2val:0x3f412b92; op3val:0x54f8bc65; valaddr_reg:x16; val_offset:516; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 516, x17, x15, 1032, x18)

inst_384:
// fs1 == 0 and fe1 == 0xa5 and fm1 == 0x1a073c and fs2 == 0 and fe2 == 0x7e and fm2 == 0x412b92 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x78bc65 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x529a073c; op2val:0x3f412b92; op3val:0x54f8bc65; valaddr_reg:x16; val_offset:528; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 528, x17, x15, 1040, x18)

inst_385:
// fs1 == 0 and fe1 == 0xa5 and fm1 == 0x1a073c and fs2 == 0 and fe2 == 0x7e and fm2 == 0x412b92 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x78bc65 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x529a073c; op2val:0x3f412b92; op3val:0x54f8bc65; valaddr_reg:x16; val_offset:540; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 540, x17, x15, 1048, x18)

inst_386:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x1ca555 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x467208 and fs3 == 0 and fe3 == 0xa5 and fm3 == 0x524b28 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x541ca555; op2val:0x40467208; op3val:0x52d24b28; valaddr_reg:x16; val_offset:552; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 552, x17, x15, 1056, x18)

inst_387:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x1ca555 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x467208 and fs3 == 0 and fe3 == 0xa5 and fm3 == 0x524b28 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x541ca555; op2val:0x40467208; op3val:0x52d24b28; valaddr_reg:x16; val_offset:564; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 564, x17, x15, 1064, x18)

inst_388:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x1ca555 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x467208 and fs3 == 0 and fe3 == 0xa5 and fm3 == 0x524b28 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x541ca555; op2val:0x40467208; op3val:0x52d24b28; valaddr_reg:x16; val_offset:576; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 576, x17, x15, 1072, x18)

inst_389:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x1ca555 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x467208 and fs3 == 0 and fe3 == 0xa5 and fm3 == 0x524b28 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x541ca555; op2val:0x40467208; op3val:0x52d24b28; valaddr_reg:x16; val_offset:588; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 588, x17, x15, 1080, x18)

inst_390:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x1ca555 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x467208 and fs3 == 0 and fe3 == 0xa5 and fm3 == 0x524b28 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x541ca555; op2val:0x40467208; op3val:0x52d24b28; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1088, x18)

inst_391:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x02c7ba and fs2 == 0 and fe2 == 0x80 and fm2 == 0x147669 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x50a02a and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5402c7ba; op2val:0x40147669; op3val:0x5450a02a; valaddr_reg:x16; val_offset:612; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 612, x17, x15, 1096, x18)

inst_392:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x02c7ba and fs2 == 0 and fe2 == 0x80 and fm2 == 0x147669 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x50a02a and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5402c7ba; op2val:0x40147669; op3val:0x5450a02a; valaddr_reg:x16; val_offset:624; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 624, x17, x15, 1104, x18)

inst_393:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x02c7ba and fs2 == 0 and fe2 == 0x80 and fm2 == 0x147669 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x50a02a and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5402c7ba; op2val:0x40147669; op3val:0x5450a02a; valaddr_reg:x16; val_offset:636; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 636, x17, x15, 1112, x18)

inst_394:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x02c7ba and fs2 == 0 and fe2 == 0x80 and fm2 == 0x147669 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x50a02a and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5402c7ba; op2val:0x40147669; op3val:0x5450a02a; valaddr_reg:x16; val_offset:648; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 648, x17, x15, 1120, x18)

inst_395:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x02c7ba and fs2 == 0 and fe2 == 0x80 and fm2 == 0x147669 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x50a02a and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5402c7ba; op2val:0x40147669; op3val:0x5450a02a; valaddr_reg:x16; val_offset:660; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 660, x17, x15, 1128, x18)

inst_396:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x4b6d62 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x17647d and fs3 == 0 and fe3 == 0xa5 and fm3 == 0x76540c and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x544b6d62; op2val:0x4017647d; op3val:0x52f6540c; valaddr_reg:x16; val_offset:672; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 672, x17, x15, 1136, x18)

inst_397:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x4b6d62 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x17647d and fs3 == 0 and fe3 == 0xa5 and fm3 == 0x76540c and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x544b6d62; op2val:0x4017647d; op3val:0x52f6540c; valaddr_reg:x16; val_offset:684; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 684, x17, x15, 1144, x18)

inst_398:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x4b6d62 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x17647d and fs3 == 0 and fe3 == 0xa5 and fm3 == 0x76540c and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x544b6d62; op2val:0x4017647d; op3val:0x52f6540c; valaddr_reg:x16; val_offset:696; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 696, x17, x15, 1152, x18)

inst_399:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x4b6d62 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x17647d and fs3 == 0 and fe3 == 0xa5 and fm3 == 0x76540c and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x544b6d62; op2val:0x4017647d; op3val:0x52f6540c; valaddr_reg:x16; val_offset:708; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 708, x17, x15, 1160, x18)

inst_400:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x4b6d62 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x17647d and fs3 == 0 and fe3 == 0xa5 and fm3 == 0x76540c and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x544b6d62; op2val:0x4017647d; op3val:0x52f6540c; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1168, x18)

inst_401:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x794e87 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x799be5 and fs3 == 0 and fe3 == 0xa5 and fm3 == 0x4eacc7 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x53f94e87; op2val:0x40799be5; op3val:0x52ceacc7; valaddr_reg:x16; val_offset:732; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 732, x17, x15, 1176, x18)

inst_402:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x794e87 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x799be5 and fs3 == 0 and fe3 == 0xa5 and fm3 == 0x4eacc7 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x53f94e87; op2val:0x40799be5; op3val:0x52ceacc7; valaddr_reg:x16; val_offset:744; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 744, x17, x15, 1184, x18)

inst_403:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x794e87 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x799be5 and fs3 == 0 and fe3 == 0xa5 and fm3 == 0x4eacc7 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x53f94e87; op2val:0x40799be5; op3val:0x52ceacc7; valaddr_reg:x16; val_offset:756; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 756, x17, x15, 1192, x18)

inst_404:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x794e87 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x799be5 and fs3 == 0 and fe3 == 0xa5 and fm3 == 0x4eacc7 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x53f94e87; op2val:0x40799be5; op3val:0x52ceacc7; valaddr_reg:x16; val_offset:768; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 768, x17, x15, 1200, x18)

inst_405:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x794e87 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x799be5 and fs3 == 0 and fe3 == 0xa5 and fm3 == 0x4eacc7 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x53f94e87; op2val:0x40799be5; op3val:0x52ceacc7; valaddr_reg:x16; val_offset:780; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 780, x17, x15, 1208, x18)

inst_406:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x6f8c68 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x016fc6 and fs3 == 0 and fe3 == 0xa5 and fm3 == 0x5c3501 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54ef8c68; op2val:0x3f816fc6; op3val:0x52dc3501; valaddr_reg:x16; val_offset:792; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 792, x17, x15, 1216, x18)

inst_407:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x6f8c68 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x016fc6 and fs3 == 0 and fe3 == 0xa5 and fm3 == 0x5c3501 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54ef8c68; op2val:0x3f816fc6; op3val:0x52dc3501; valaddr_reg:x16; val_offset:804; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 804, x17, x15, 1224, x18)

inst_408:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x6f8c68 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x016fc6 and fs3 == 0 and fe3 == 0xa5 and fm3 == 0x5c3501 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54ef8c68; op2val:0x3f816fc6; op3val:0x52dc3501; valaddr_reg:x16; val_offset:816; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 816, x17, x15, 1232, x18)

inst_409:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x6f8c68 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x016fc6 and fs3 == 0 and fe3 == 0xa5 and fm3 == 0x5c3501 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54ef8c68; op2val:0x3f816fc6; op3val:0x52dc3501; valaddr_reg:x16; val_offset:828; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 828, x17, x15, 1240, x18)

inst_410:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x6f8c68 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x016fc6 and fs3 == 0 and fe3 == 0xa5 and fm3 == 0x5c3501 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54ef8c68; op2val:0x3f816fc6; op3val:0x52dc3501; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1248, x18)

inst_411:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x66173b and fs2 == 0 and fe2 == 0x7e and fm2 == 0x10ee62 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x7b795a and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54e6173b; op2val:0x3f10ee62; op3val:0x547b795a; valaddr_reg:x16; val_offset:852; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 852, x17, x15, 1256, x18)

inst_412:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x66173b and fs2 == 0 and fe2 == 0x7e and fm2 == 0x10ee62 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x7b795a and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54e6173b; op2val:0x3f10ee62; op3val:0x547b795a; valaddr_reg:x16; val_offset:864; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 864, x17, x15, 1264, x18)

inst_413:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x66173b and fs2 == 0 and fe2 == 0x7e and fm2 == 0x10ee62 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x7b795a and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54e6173b; op2val:0x3f10ee62; op3val:0x547b795a; valaddr_reg:x16; val_offset:876; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 876, x17, x15, 1272, x18)

inst_414:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x66173b and fs2 == 0 and fe2 == 0x7e and fm2 == 0x10ee62 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x7b795a and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54e6173b; op2val:0x3f10ee62; op3val:0x547b795a; valaddr_reg:x16; val_offset:888; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 888, x17, x15, 1280, x18)

inst_415:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x66173b and fs2 == 0 and fe2 == 0x7e and fm2 == 0x10ee62 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x7b795a and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54e6173b; op2val:0x3f10ee62; op3val:0x547b795a; valaddr_reg:x16; val_offset:900; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 900, x17, x15, 1288, x18)

inst_416:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x4021e6 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x1e671e and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x11daef and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x534021e6; op2val:0x411e671e; op3val:0x5311daef; valaddr_reg:x16; val_offset:912; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 912, x17, x15, 1296, x18)

inst_417:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x4021e6 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x1e671e and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x11daef and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x534021e6; op2val:0x411e671e; op3val:0x5311daef; valaddr_reg:x16; val_offset:924; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 924, x17, x15, 1304, x18)

inst_418:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x4021e6 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x1e671e and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x11daef and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x534021e6; op2val:0x411e671e; op3val:0x5311daef; valaddr_reg:x16; val_offset:936; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 936, x17, x15, 1312, x18)

inst_419:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x4021e6 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x1e671e and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x11daef and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x534021e6; op2val:0x411e671e; op3val:0x5311daef; valaddr_reg:x16; val_offset:948; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 948, x17, x15, 1320, x18)

inst_420:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x4021e6 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x1e671e and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x11daef and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x534021e6; op2val:0x411e671e; op3val:0x5311daef; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 1328, x18)

inst_421:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x764d80 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2cf2a6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x266587 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef64d80; op2val:0xbfacf2a6; op3val:0x3f266587; valaddr_reg:x16; val_offset:972; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 972, x17, x15, 1336, x18)

inst_422:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x764d80 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2cf2a6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x266587 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef64d80; op2val:0xbfacf2a6; op3val:0x3f266587; valaddr_reg:x16; val_offset:984; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 984, x17, x15, 1344, x18)

inst_423:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x764d80 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2cf2a6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x266587 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef64d80; op2val:0xbfacf2a6; op3val:0x3f266587; valaddr_reg:x16; val_offset:996; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 996, x17, x15, 1352, x18)

inst_424:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x764d80 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2cf2a6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x266587 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef64d80; op2val:0xbfacf2a6; op3val:0x3f266587; valaddr_reg:x16; val_offset:1008; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1008, x17, x15, 1360, x18)

inst_425:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x764d80 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2cf2a6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x266587 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef64d80; op2val:0xbfacf2a6; op3val:0x3f266587; valaddr_reg:x16; val_offset:1020; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1020, x17, x15, 1368, x18)

inst_426:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6735fb and fs2 == 1 and fe2 == 0x79 and fm2 == 0x3c8fae and fs3 == 0 and fe3 == 0x78 and fm3 == 0x2a4d69 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee735fb; op2val:0xbcbc8fae; op3val:0x3c2a4d69; valaddr_reg:x16; val_offset:1032; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1032, x17, x15, 1376, x18)

inst_427:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6735fb and fs2 == 1 and fe2 == 0x79 and fm2 == 0x3c8fae and fs3 == 0 and fe3 == 0x78 and fm3 == 0x2a4d69 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee735fb; op2val:0xbcbc8fae; op3val:0x3c2a4d69; valaddr_reg:x16; val_offset:1044; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1044, x17, x15, 1384, x18)

inst_428:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6735fb and fs2 == 1 and fe2 == 0x79 and fm2 == 0x3c8fae and fs3 == 0 and fe3 == 0x78 and fm3 == 0x2a4d69 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee735fb; op2val:0xbcbc8fae; op3val:0x3c2a4d69; valaddr_reg:x16; val_offset:1056; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1056, x17, x15, 1392, x18)

inst_429:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6735fb and fs2 == 1 and fe2 == 0x79 and fm2 == 0x3c8fae and fs3 == 0 and fe3 == 0x78 and fm3 == 0x2a4d69 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee735fb; op2val:0xbcbc8fae; op3val:0x3c2a4d69; valaddr_reg:x16; val_offset:1068; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1068, x17, x15, 1400, x18)

inst_430:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6735fb and fs2 == 1 and fe2 == 0x79 and fm2 == 0x3c8fae and fs3 == 0 and fe3 == 0x78 and fm3 == 0x2a4d69 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee735fb; op2val:0xbcbc8fae; op3val:0x3c2a4d69; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 1408, x18)

inst_431:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x16ff2d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4f41c7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x747e44 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f16ff2d; op2val:0xbfcf41c7; op3val:0x3f747e44; valaddr_reg:x16; val_offset:1092; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1092, x17, x15, 1416, x18)

inst_432:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x16ff2d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4f41c7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x747e44 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f16ff2d; op2val:0xbfcf41c7; op3val:0x3f747e44; valaddr_reg:x16; val_offset:1104; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1104, x17, x15, 1424, x18)

inst_433:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x16ff2d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4f41c7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x747e44 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f16ff2d; op2val:0xbfcf41c7; op3val:0x3f747e44; valaddr_reg:x16; val_offset:1116; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1116, x17, x15, 1432, x18)

inst_434:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x16ff2d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4f41c7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x747e44 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f16ff2d; op2val:0xbfcf41c7; op3val:0x3f747e44; valaddr_reg:x16; val_offset:1128; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1128, x17, x15, 1440, x18)

inst_435:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x16ff2d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4f41c7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x747e44 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f16ff2d; op2val:0xbfcf41c7; op3val:0x3f747e44; valaddr_reg:x16; val_offset:1140; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1140, x17, x15, 1448, x18)

inst_436:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x706b07 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x70af1d and fs3 == 0 and fe3 == 0x7c and fm3 == 0x6208cc and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f706b07; op2val:0xbe70af1d; op3val:0x3e6208cc; valaddr_reg:x16; val_offset:1152; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1152, x17, x15, 1456, x18)

inst_437:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x706b07 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x70af1d and fs3 == 0 and fe3 == 0x7c and fm3 == 0x6208cc and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f706b07; op2val:0xbe70af1d; op3val:0x3e6208cc; valaddr_reg:x16; val_offset:1164; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1164, x17, x15, 1464, x18)

inst_438:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x706b07 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x70af1d and fs3 == 0 and fe3 == 0x7c and fm3 == 0x6208cc and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f706b07; op2val:0xbe70af1d; op3val:0x3e6208cc; valaddr_reg:x16; val_offset:1176; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1176, x17, x15, 1472, x18)

inst_439:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x706b07 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x70af1d and fs3 == 0 and fe3 == 0x7c and fm3 == 0x6208cc and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f706b07; op2val:0xbe70af1d; op3val:0x3e6208cc; valaddr_reg:x16; val_offset:1188; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1188, x17, x15, 1480, x18)

inst_440:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x706b07 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x70af1d and fs3 == 0 and fe3 == 0x7c and fm3 == 0x6208cc and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f706b07; op2val:0xbe70af1d; op3val:0x3e6208cc; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 1488, x18)

inst_441:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x494386 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x21ca3a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7e64e9 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3cc94386; op2val:0xc221ca3a; op3val:0x3f7e64e9; valaddr_reg:x16; val_offset:1212; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1212, x17, x15, 1496, x18)

inst_442:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x494386 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x21ca3a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7e64e9 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3cc94386; op2val:0xc221ca3a; op3val:0x3f7e64e9; valaddr_reg:x16; val_offset:1224; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1224, x17, x15, 1504, x18)

inst_443:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x494386 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x21ca3a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7e64e9 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3cc94386; op2val:0xc221ca3a; op3val:0x3f7e64e9; valaddr_reg:x16; val_offset:1236; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1236, x17, x15, 1512, x18)

inst_444:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x494386 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x21ca3a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7e64e9 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3cc94386; op2val:0xc221ca3a; op3val:0x3f7e64e9; valaddr_reg:x16; val_offset:1248; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1248, x17, x15, 1520, x18)

inst_445:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x494386 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x21ca3a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7e64e9 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3cc94386; op2val:0xc221ca3a; op3val:0x3f7e64e9; valaddr_reg:x16; val_offset:1260; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1260, x17, x15, 1528, x18)

inst_446:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x35500d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4dcb3f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x11c10e and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb5500d; op2val:0xbfcdcb3f; op3val:0x3f11c10e; valaddr_reg:x16; val_offset:1272; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1272, x17, x15, 1536, x18)

inst_447:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x35500d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4dcb3f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x11c10e and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb5500d; op2val:0xbfcdcb3f; op3val:0x3f11c10e; valaddr_reg:x16; val_offset:1284; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1284, x17, x15, 1544, x18)

inst_448:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x35500d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4dcb3f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x11c10e and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb5500d; op2val:0xbfcdcb3f; op3val:0x3f11c10e; valaddr_reg:x16; val_offset:1296; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1296, x17, x15, 1552, x18)

inst_449:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x35500d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4dcb3f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x11c10e and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb5500d; op2val:0xbfcdcb3f; op3val:0x3f11c10e; valaddr_reg:x16; val_offset:1308; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1308, x17, x15, 1560, x18)

inst_450:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x35500d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4dcb3f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x11c10e and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb5500d; op2val:0xbfcdcb3f; op3val:0x3f11c10e; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 1568, x18)

inst_451:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x27d72f and fs2 == 1 and fe2 == 0x7c and fm2 == 0x39eb29 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x73c95d and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ea7d72f; op2val:0xbe39eb29; op3val:0x3d73c95d; valaddr_reg:x16; val_offset:1332; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1332, x17, x15, 1576, x18)

inst_452:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x27d72f and fs2 == 1 and fe2 == 0x7c and fm2 == 0x39eb29 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x73c95d and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ea7d72f; op2val:0xbe39eb29; op3val:0x3d73c95d; valaddr_reg:x16; val_offset:1344; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1344, x17, x15, 1584, x18)

inst_453:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x27d72f and fs2 == 1 and fe2 == 0x7c and fm2 == 0x39eb29 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x73c95d and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ea7d72f; op2val:0xbe39eb29; op3val:0x3d73c95d; valaddr_reg:x16; val_offset:1356; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1356, x17, x15, 1592, x18)

inst_454:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x27d72f and fs2 == 1 and fe2 == 0x7c and fm2 == 0x39eb29 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x73c95d and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ea7d72f; op2val:0xbe39eb29; op3val:0x3d73c95d; valaddr_reg:x16; val_offset:1368; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1368, x17, x15, 1600, x18)

inst_455:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x27d72f and fs2 == 1 and fe2 == 0x7c and fm2 == 0x39eb29 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x73c95d and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ea7d72f; op2val:0xbe39eb29; op3val:0x3d73c95d; valaddr_reg:x16; val_offset:1380; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1380, x17, x15, 1608, x18)

inst_456:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x562e7b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x68625c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x426c6b and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f562e7b; op2val:0xbf68625c; op3val:0x3f426c6b; valaddr_reg:x16; val_offset:1392; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1392, x17, x15, 1616, x18)

inst_457:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x562e7b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x68625c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x426c6b and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f562e7b; op2val:0xbf68625c; op3val:0x3f426c6b; valaddr_reg:x16; val_offset:1404; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1404, x17, x15, 1624, x18)

inst_458:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x562e7b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x68625c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x426c6b and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f562e7b; op2val:0xbf68625c; op3val:0x3f426c6b; valaddr_reg:x16; val_offset:1416; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1416, x17, x15, 1632, x18)

inst_459:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x562e7b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x68625c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x426c6b and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f562e7b; op2val:0xbf68625c; op3val:0x3f426c6b; valaddr_reg:x16; val_offset:1428; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1428, x17, x15, 1640, x18)

inst_460:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x562e7b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x68625c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x426c6b and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f562e7b; op2val:0xbf68625c; op3val:0x3f426c6b; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 1648, x18)

inst_461:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0909b8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x06e551 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x106bb0 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8909b8; op2val:0xbf86e551; op3val:0x3e906bb0; valaddr_reg:x16; val_offset:1452; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1452, x17, x15, 1656, x18)

inst_462:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0909b8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x06e551 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x106bb0 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8909b8; op2val:0xbf86e551; op3val:0x3e906bb0; valaddr_reg:x16; val_offset:1464; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1464, x17, x15, 1664, x18)

inst_463:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0909b8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x06e551 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x106bb0 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8909b8; op2val:0xbf86e551; op3val:0x3e906bb0; valaddr_reg:x16; val_offset:1476; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1476, x17, x15, 1672, x18)

inst_464:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0909b8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x06e551 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x106bb0 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8909b8; op2val:0xbf86e551; op3val:0x3e906bb0; valaddr_reg:x16; val_offset:1488; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1488, x17, x15, 1680, x18)

inst_465:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0909b8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x06e551 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x106bb0 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8909b8; op2val:0xbf86e551; op3val:0x3e906bb0; valaddr_reg:x16; val_offset:1500; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1500, x17, x15, 1688, x18)

inst_466:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x082eba and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2c7d22 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3783ed and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f082eba; op2val:0xbfac7d22; op3val:0x3f3783ed; valaddr_reg:x16; val_offset:1512; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1512, x17, x15, 1696, x18)

inst_467:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x082eba and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2c7d22 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3783ed and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f082eba; op2val:0xbfac7d22; op3val:0x3f3783ed; valaddr_reg:x16; val_offset:1524; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1524, x17, x15, 1704, x18)

inst_468:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x082eba and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2c7d22 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3783ed and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f082eba; op2val:0xbfac7d22; op3val:0x3f3783ed; valaddr_reg:x16; val_offset:1536; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1536, x17, x15, 1712, x18)

inst_469:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x082eba and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2c7d22 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3783ed and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f082eba; op2val:0xbfac7d22; op3val:0x3f3783ed; valaddr_reg:x16; val_offset:1548; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1548, x17, x15, 1720, x18)

inst_470:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x082eba and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2c7d22 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3783ed and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f082eba; op2val:0xbfac7d22; op3val:0x3f3783ed; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1728, x18)

inst_471:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x22c04e and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0a8d8a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x302b4c and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f22c04e; op2val:0xbf8a8d8a; op3val:0x3f302b4c; valaddr_reg:x16; val_offset:1572; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1572, x17, x15, 1736, x18)

inst_472:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x22c04e and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0a8d8a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x302b4c and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f22c04e; op2val:0xbf8a8d8a; op3val:0x3f302b4c; valaddr_reg:x16; val_offset:1584; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1584, x17, x15, 1744, x18)

inst_473:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x22c04e and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0a8d8a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x302b4c and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f22c04e; op2val:0xbf8a8d8a; op3val:0x3f302b4c; valaddr_reg:x16; val_offset:1596; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1596, x17, x15, 1752, x18)

inst_474:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x22c04e and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0a8d8a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x302b4c and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f22c04e; op2val:0xbf8a8d8a; op3val:0x3f302b4c; valaddr_reg:x16; val_offset:1608; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1608, x17, x15, 1760, x18)

inst_475:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x22c04e and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0a8d8a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x302b4c and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f22c04e; op2val:0xbf8a8d8a; op3val:0x3f302b4c; valaddr_reg:x16; val_offset:1620; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1620, x17, x15, 1768, x18)

inst_476:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x19536d and fs2 == 1 and fe2 == 0x7a and fm2 == 0x349615 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x585119 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f19536d; op2val:0xbd349615; op3val:0x3cd85119; valaddr_reg:x16; val_offset:1632; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1632, x17, x15, 1776, x18)

inst_477:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x19536d and fs2 == 1 and fe2 == 0x7a and fm2 == 0x349615 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x585119 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f19536d; op2val:0xbd349615; op3val:0x3cd85119; valaddr_reg:x16; val_offset:1644; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1644, x17, x15, 1784, x18)

inst_478:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x19536d and fs2 == 1 and fe2 == 0x7a and fm2 == 0x349615 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x585119 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f19536d; op2val:0xbd349615; op3val:0x3cd85119; valaddr_reg:x16; val_offset:1656; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1656, x17, x15, 1792, x18)

inst_479:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x19536d and fs2 == 1 and fe2 == 0x7a and fm2 == 0x349615 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x585119 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f19536d; op2val:0xbd349615; op3val:0x3cd85119; valaddr_reg:x16; val_offset:1668; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1668, x17, x15, 1800, x18)

inst_480:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x19536d and fs2 == 1 and fe2 == 0x7a and fm2 == 0x349615 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x585119 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f19536d; op2val:0xbd349615; op3val:0x3cd85119; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1808, x18)

inst_481:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x44ffc1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1953eb and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6bfadd and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f44ffc1; op2val:0xbf9953eb; op3val:0x3f6bfadd; valaddr_reg:x16; val_offset:1692; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1692, x17, x15, 1816, x18)

inst_482:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x44ffc1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1953eb and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6bfadd and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f44ffc1; op2val:0xbf9953eb; op3val:0x3f6bfadd; valaddr_reg:x16; val_offset:1704; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1704, x17, x15, 1824, x18)

inst_483:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x44ffc1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1953eb and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6bfadd and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f44ffc1; op2val:0xbf9953eb; op3val:0x3f6bfadd; valaddr_reg:x16; val_offset:1716; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1716, x17, x15, 1832, x18)

inst_484:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x44ffc1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1953eb and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6bfadd and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f44ffc1; op2val:0xbf9953eb; op3val:0x3f6bfadd; valaddr_reg:x16; val_offset:1728; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1728, x17, x15, 1840, x18)

inst_485:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x44ffc1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1953eb and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6bfadd and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f44ffc1; op2val:0xbf9953eb; op3val:0x3f6bfadd; valaddr_reg:x16; val_offset:1740; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1740, x17, x15, 1848, x18)

inst_486:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4c89cb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1c35f6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x799e2a and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4c89cb; op2val:0xbf9c35f6; op3val:0x3f799e2a; valaddr_reg:x16; val_offset:1752; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1752, x17, x15, 1856, x18)

inst_487:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4c89cb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1c35f6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x799e2a and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4c89cb; op2val:0xbf9c35f6; op3val:0x3f799e2a; valaddr_reg:x16; val_offset:1764; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1764, x17, x15, 1864, x18)

inst_488:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4c89cb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1c35f6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x799e2a and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4c89cb; op2val:0xbf9c35f6; op3val:0x3f799e2a; valaddr_reg:x16; val_offset:1776; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1776, x17, x15, 1872, x18)

inst_489:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4c89cb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1c35f6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x799e2a and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4c89cb; op2val:0xbf9c35f6; op3val:0x3f799e2a; valaddr_reg:x16; val_offset:1788; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1788, x17, x15, 1880, x18)

inst_490:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4c89cb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1c35f6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x799e2a and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4c89cb; op2val:0xbf9c35f6; op3val:0x3f799e2a; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1888, x18)

inst_491:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0a9973 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x45d4da and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5636a6 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8a9973; op2val:0xc045d4da; op3val:0x3f5636a6; valaddr_reg:x16; val_offset:1812; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1812, x17, x15, 1896, x18)

inst_492:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0a9973 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x45d4da and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5636a6 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8a9973; op2val:0xc045d4da; op3val:0x3f5636a6; valaddr_reg:x16; val_offset:1824; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1824, x17, x15, 1904, x18)

inst_493:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0a9973 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x45d4da and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5636a6 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8a9973; op2val:0xc045d4da; op3val:0x3f5636a6; valaddr_reg:x16; val_offset:1836; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1836, x17, x15, 1912, x18)

inst_494:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0a9973 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x45d4da and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5636a6 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8a9973; op2val:0xc045d4da; op3val:0x3f5636a6; valaddr_reg:x16; val_offset:1848; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1848, x17, x15, 1920, x18)

inst_495:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0a9973 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x45d4da and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5636a6 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8a9973; op2val:0xc045d4da; op3val:0x3f5636a6; valaddr_reg:x16; val_offset:1860; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1860, x17, x15, 1928, x18)

inst_496:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x357a6d and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6b1dbe and fs3 == 0 and fe3 == 0x7d and fm3 == 0x26ac78 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f357a6d; op2val:0xbeeb1dbe; op3val:0x3ea6ac78; valaddr_reg:x16; val_offset:1872; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1872, x17, x15, 1936, x18)

inst_497:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x357a6d and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6b1dbe and fs3 == 0 and fe3 == 0x7d and fm3 == 0x26ac78 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f357a6d; op2val:0xbeeb1dbe; op3val:0x3ea6ac78; valaddr_reg:x16; val_offset:1884; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1884, x17, x15, 1944, x18)

inst_498:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x357a6d and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6b1dbe and fs3 == 0 and fe3 == 0x7d and fm3 == 0x26ac78 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f357a6d; op2val:0xbeeb1dbe; op3val:0x3ea6ac78; valaddr_reg:x16; val_offset:1896; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1896, x17, x15, 1952, x18)

inst_499:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x357a6d and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6b1dbe and fs3 == 0 and fe3 == 0x7d and fm3 == 0x26ac78 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f357a6d; op2val:0xbeeb1dbe; op3val:0x3ea6ac78; valaddr_reg:x16; val_offset:1908; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1908, x17, x15, 1960, x18)

inst_500:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x357a6d and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6b1dbe and fs3 == 0 and fe3 == 0x7d and fm3 == 0x26ac78 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f357a6d; op2val:0xbeeb1dbe; op3val:0x3ea6ac78; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1968, x18)

inst_501:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x61d06f and fs2 == 1 and fe2 == 0x7d and fm2 == 0x4060e2 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x29b1c9 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f61d06f; op2val:0xbec060e2; op3val:0x3ea9b1c9; valaddr_reg:x16; val_offset:1932; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1932, x17, x15, 1976, x18)

inst_502:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x61d06f and fs2 == 1 and fe2 == 0x7d and fm2 == 0x4060e2 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x29b1c9 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f61d06f; op2val:0xbec060e2; op3val:0x3ea9b1c9; valaddr_reg:x16; val_offset:1944; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1944, x17, x15, 1984, x18)

inst_503:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x61d06f and fs2 == 1 and fe2 == 0x7d and fm2 == 0x4060e2 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x29b1c9 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f61d06f; op2val:0xbec060e2; op3val:0x3ea9b1c9; valaddr_reg:x16; val_offset:1956; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1956, x17, x15, 1992, x18)

inst_504:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x61d06f and fs2 == 1 and fe2 == 0x7d and fm2 == 0x4060e2 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x29b1c9 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f61d06f; op2val:0xbec060e2; op3val:0x3ea9b1c9; valaddr_reg:x16; val_offset:1968; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1968, x17, x15, 2000, x18)

inst_505:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x61d06f and fs2 == 1 and fe2 == 0x7d and fm2 == 0x4060e2 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x29b1c9 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f61d06f; op2val:0xbec060e2; op3val:0x3ea9b1c9; valaddr_reg:x16; val_offset:1980; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1980, x17, x15, 2008, x18)

inst_506:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x073c96 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x53a845 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x5f9fa9 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f073c96; op2val:0xbdd3a845; op3val:0x3d5f9fa9; valaddr_reg:x16; val_offset:1992; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1992, x17, x15, 2016, x18)

inst_507:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x073c96 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x53a845 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x5f9fa9 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f073c96; op2val:0xbdd3a845; op3val:0x3d5f9fa9; valaddr_reg:x16; val_offset:2004; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 2004, x17, x15, 2024, x18)
RVTEST_SIGBASE(x15,signature_x15_3)

inst_508:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x073c96 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x53a845 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x5f9fa9 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f073c96; op2val:0xbdd3a845; op3val:0x3d5f9fa9; valaddr_reg:x16; val_offset:2016; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 2016, x17, x15, 0, x18)

inst_509:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x073c96 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x53a845 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x5f9fa9 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f073c96; op2val:0xbdd3a845; op3val:0x3d5f9fa9; valaddr_reg:x16; val_offset:2028; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 2028, x17, x15, 8, x18)
addi x16,x16,2040

inst_510:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x073c96 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x53a845 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x5f9fa9 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f073c96; op2val:0xbdd3a845; op3val:0x3d5f9fa9; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 16, x18)

inst_511:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1fe3ea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x05b292 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2701e2 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e9fe3ea; op2val:0xbf85b292; op3val:0x3ea701e2; valaddr_reg:x16; val_offset:12; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 12, x17, x15, 24, x18)

inst_512:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1fe3ea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x05b292 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2701e2 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e9fe3ea; op2val:0xbf85b292; op3val:0x3ea701e2; valaddr_reg:x16; val_offset:24; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 24, x17, x15, 32, x18)

inst_513:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1fe3ea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x05b292 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2701e2 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e9fe3ea; op2val:0xbf85b292; op3val:0x3ea701e2; valaddr_reg:x16; val_offset:36; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 36, x17, x15, 40, x18)

inst_514:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1fe3ea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x05b292 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2701e2 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e9fe3ea; op2val:0xbf85b292; op3val:0x3ea701e2; valaddr_reg:x16; val_offset:48; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 48, x17, x15, 48, x18)

inst_515:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1fe3ea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x05b292 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2701e2 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e9fe3ea; op2val:0xbf85b292; op3val:0x3ea701e2; valaddr_reg:x16; val_offset:60; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 60, x17, x15, 56, x18)

inst_516:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x218b4f and fs2 == 1 and fe2 == 0x7b and fm2 == 0x49685d and fs3 == 0 and fe3 == 0x7a and fm3 == 0x7e3079 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f218b4f; op2val:0xbdc9685d; op3val:0x3d7e3079; valaddr_reg:x16; val_offset:72; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 72, x17, x15, 64, x18)

inst_517:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x218b4f and fs2 == 1 and fe2 == 0x7b and fm2 == 0x49685d and fs3 == 0 and fe3 == 0x7a and fm3 == 0x7e3079 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f218b4f; op2val:0xbdc9685d; op3val:0x3d7e3079; valaddr_reg:x16; val_offset:84; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 84, x17, x15, 72, x18)

inst_518:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x218b4f and fs2 == 1 and fe2 == 0x7b and fm2 == 0x49685d and fs3 == 0 and fe3 == 0x7a and fm3 == 0x7e3079 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f218b4f; op2val:0xbdc9685d; op3val:0x3d7e3079; valaddr_reg:x16; val_offset:96; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 96, x17, x15, 80, x18)

inst_519:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x218b4f and fs2 == 1 and fe2 == 0x7b and fm2 == 0x49685d and fs3 == 0 and fe3 == 0x7a and fm3 == 0x7e3079 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f218b4f; op2val:0xbdc9685d; op3val:0x3d7e3079; valaddr_reg:x16; val_offset:108; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 108, x17, x15, 88, x18)

inst_520:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x218b4f and fs2 == 1 and fe2 == 0x7b and fm2 == 0x49685d and fs3 == 0 and fe3 == 0x7a and fm3 == 0x7e3079 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f218b4f; op2val:0xbdc9685d; op3val:0x3d7e3079; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 96, x18)

inst_521:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x77c896 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x1fb596 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x1a9558 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f77c896; op2val:0xbd9fb596; op3val:0x3d9a9558; valaddr_reg:x16; val_offset:132; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 132, x17, x15, 104, x18)

inst_522:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x77c896 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x1fb596 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x1a9558 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f77c896; op2val:0xbd9fb596; op3val:0x3d9a9558; valaddr_reg:x16; val_offset:144; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 144, x17, x15, 112, x18)

inst_523:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x77c896 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x1fb596 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x1a9558 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f77c896; op2val:0xbd9fb596; op3val:0x3d9a9558; valaddr_reg:x16; val_offset:156; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 156, x17, x15, 120, x18)

inst_524:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x77c896 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x1fb596 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x1a9558 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f77c896; op2val:0xbd9fb596; op3val:0x3d9a9558; valaddr_reg:x16; val_offset:168; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 168, x17, x15, 128, x18)

inst_525:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x77c896 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x1fb596 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x1a9558 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f77c896; op2val:0xbd9fb596; op3val:0x3d9a9558; valaddr_reg:x16; val_offset:180; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 180, x17, x15, 136, x18)

inst_526:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x43cc0b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2d5eaa and fs3 == 0 and fe3 == 0x7e and fm3 == 0x04994b and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f43cc0b; op2val:0xbf2d5eaa; op3val:0x3f04994b; valaddr_reg:x16; val_offset:192; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 192, x17, x15, 144, x18)

inst_527:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x43cc0b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2d5eaa and fs3 == 0 and fe3 == 0x7e and fm3 == 0x04994b and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f43cc0b; op2val:0xbf2d5eaa; op3val:0x3f04994b; valaddr_reg:x16; val_offset:204; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 204, x17, x15, 152, x18)

inst_528:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x43cc0b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2d5eaa and fs3 == 0 and fe3 == 0x7e and fm3 == 0x04994b and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f43cc0b; op2val:0xbf2d5eaa; op3val:0x3f04994b; valaddr_reg:x16; val_offset:216; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 216, x17, x15, 160, x18)

inst_529:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x43cc0b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2d5eaa and fs3 == 0 and fe3 == 0x7e and fm3 == 0x04994b and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f43cc0b; op2val:0xbf2d5eaa; op3val:0x3f04994b; valaddr_reg:x16; val_offset:228; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 228, x17, x15, 168, x18)

inst_530:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x43cc0b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2d5eaa and fs3 == 0 and fe3 == 0x7e and fm3 == 0x04994b and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f43cc0b; op2val:0xbf2d5eaa; op3val:0x3f04994b; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 176, x18)

inst_531:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x56a57a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x59ad71 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3683b2 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f56a57a; op2val:0xbf59ad71; op3val:0x3f3683b2; valaddr_reg:x16; val_offset:252; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 252, x17, x15, 184, x18)

inst_532:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x56a57a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x59ad71 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3683b2 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f56a57a; op2val:0xbf59ad71; op3val:0x3f3683b2; valaddr_reg:x16; val_offset:264; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 264, x17, x15, 192, x18)

inst_533:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x56a57a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x59ad71 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3683b2 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f56a57a; op2val:0xbf59ad71; op3val:0x3f3683b2; valaddr_reg:x16; val_offset:276; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 276, x17, x15, 200, x18)

inst_534:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x56a57a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x59ad71 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3683b2 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f56a57a; op2val:0xbf59ad71; op3val:0x3f3683b2; valaddr_reg:x16; val_offset:288; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 288, x17, x15, 208, x18)

inst_535:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x56a57a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x59ad71 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3683b2 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f56a57a; op2val:0xbf59ad71; op3val:0x3f3683b2; valaddr_reg:x16; val_offset:300; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 300, x17, x15, 216, x18)

inst_536:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3ef575 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x77fb3e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x38fa3d and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3ef575; op2val:0xbf77fb3e; op3val:0x3f38fa3d; valaddr_reg:x16; val_offset:312; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 312, x17, x15, 224, x18)

inst_537:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3ef575 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x77fb3e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x38fa3d and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3ef575; op2val:0xbf77fb3e; op3val:0x3f38fa3d; valaddr_reg:x16; val_offset:324; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 324, x17, x15, 232, x18)

inst_538:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3ef575 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x77fb3e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x38fa3d and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3ef575; op2val:0xbf77fb3e; op3val:0x3f38fa3d; valaddr_reg:x16; val_offset:336; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 336, x17, x15, 240, x18)

inst_539:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3ef575 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x77fb3e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x38fa3d and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3ef575; op2val:0xbf77fb3e; op3val:0x3f38fa3d; valaddr_reg:x16; val_offset:348; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 348, x17, x15, 248, x18)

inst_540:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3ef575 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x77fb3e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x38fa3d and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3ef575; op2val:0xbf77fb3e; op3val:0x3f38fa3d; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 256, x18)

inst_541:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x750ed1 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x62c031 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x590f0f and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3df50ed1; op2val:0xc0e2c031; op3val:0x3f590f0f; valaddr_reg:x16; val_offset:372; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 372, x17, x15, 264, x18)

inst_542:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x750ed1 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x62c031 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x590f0f and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3df50ed1; op2val:0xc0e2c031; op3val:0x3f590f0f; valaddr_reg:x16; val_offset:384; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 384, x17, x15, 272, x18)

inst_543:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x750ed1 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x62c031 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x590f0f and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3df50ed1; op2val:0xc0e2c031; op3val:0x3f590f0f; valaddr_reg:x16; val_offset:396; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 396, x17, x15, 280, x18)

inst_544:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x750ed1 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x62c031 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x590f0f and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3df50ed1; op2val:0xc0e2c031; op3val:0x3f590f0f; valaddr_reg:x16; val_offset:408; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 408, x17, x15, 288, x18)

inst_545:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x750ed1 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x62c031 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x590f0f and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3df50ed1; op2val:0xc0e2c031; op3val:0x3f590f0f; valaddr_reg:x16; val_offset:420; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 420, x17, x15, 296, x18)

inst_546:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2017fa and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7b7cca and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1d458d and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2017fa; op2val:0xbf7b7cca; op3val:0x3f1d458d; valaddr_reg:x16; val_offset:432; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 432, x17, x15, 304, x18)

inst_547:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2017fa and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7b7cca and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1d458d and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2017fa; op2val:0xbf7b7cca; op3val:0x3f1d458d; valaddr_reg:x16; val_offset:444; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 444, x17, x15, 312, x18)

inst_548:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2017fa and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7b7cca and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1d458d and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2017fa; op2val:0xbf7b7cca; op3val:0x3f1d458d; valaddr_reg:x16; val_offset:456; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 456, x17, x15, 320, x18)

inst_549:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2017fa and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7b7cca and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1d458d and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2017fa; op2val:0xbf7b7cca; op3val:0x3f1d458d; valaddr_reg:x16; val_offset:468; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 468, x17, x15, 328, x18)

inst_550:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2017fa and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7b7cca and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1d458d and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2017fa; op2val:0xbf7b7cca; op3val:0x3f1d458d; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 336, x18)

inst_551:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x586755 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7ead60 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x574916 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f586755; op2val:0xbf7ead60; op3val:0x3f574916; valaddr_reg:x16; val_offset:492; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 492, x17, x15, 344, x18)

inst_552:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x586755 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7ead60 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x574916 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f586755; op2val:0xbf7ead60; op3val:0x3f574916; valaddr_reg:x16; val_offset:504; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 504, x17, x15, 352, x18)

inst_553:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x586755 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7ead60 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x574916 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f586755; op2val:0xbf7ead60; op3val:0x3f574916; valaddr_reg:x16; val_offset:516; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 516, x17, x15, 360, x18)

inst_554:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x586755 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7ead60 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x574916 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f586755; op2val:0xbf7ead60; op3val:0x3f574916; valaddr_reg:x16; val_offset:528; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 528, x17, x15, 368, x18)

inst_555:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x586755 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7ead60 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x574916 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f586755; op2val:0xbf7ead60; op3val:0x3f574916; valaddr_reg:x16; val_offset:540; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 540, x17, x15, 376, x18)

inst_556:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x08d02c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x579e50 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6676e2 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f08d02c; op2val:0xbfd79e50; op3val:0x3f6676e2; valaddr_reg:x16; val_offset:552; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 552, x17, x15, 384, x18)

inst_557:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x08d02c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x579e50 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6676e2 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f08d02c; op2val:0xbfd79e50; op3val:0x3f6676e2; valaddr_reg:x16; val_offset:564; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 564, x17, x15, 392, x18)

inst_558:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x08d02c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x579e50 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6676e2 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f08d02c; op2val:0xbfd79e50; op3val:0x3f6676e2; valaddr_reg:x16; val_offset:576; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 576, x17, x15, 400, x18)

inst_559:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x08d02c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x579e50 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6676e2 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f08d02c; op2val:0xbfd79e50; op3val:0x3f6676e2; valaddr_reg:x16; val_offset:588; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 588, x17, x15, 408, x18)

inst_560:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x08d02c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x579e50 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6676e2 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f08d02c; op2val:0xbfd79e50; op3val:0x3f6676e2; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 416, x18)

inst_561:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x42d56f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x402fa3 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x124454 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec2d56f; op2val:0xbfc02fa3; op3val:0x3f124454; valaddr_reg:x16; val_offset:612; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 612, x17, x15, 424, x18)

inst_562:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x42d56f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x402fa3 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x124454 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec2d56f; op2val:0xbfc02fa3; op3val:0x3f124454; valaddr_reg:x16; val_offset:624; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 624, x17, x15, 432, x18)

inst_563:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x42d56f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x402fa3 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x124454 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec2d56f; op2val:0xbfc02fa3; op3val:0x3f124454; valaddr_reg:x16; val_offset:636; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 636, x17, x15, 440, x18)

inst_564:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x42d56f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x402fa3 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x124454 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec2d56f; op2val:0xbfc02fa3; op3val:0x3f124454; valaddr_reg:x16; val_offset:648; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 648, x17, x15, 448, x18)

inst_565:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x42d56f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x402fa3 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x124454 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec2d56f; op2val:0xbfc02fa3; op3val:0x3f124454; valaddr_reg:x16; val_offset:660; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 660, x17, x15, 456, x18)

inst_566:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x07a1da and fs2 == 1 and fe2 == 0x7c and fm2 == 0x5508cc and fs3 == 0 and fe3 == 0x7b and fm3 == 0x61bca8 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f07a1da; op2val:0xbe5508cc; op3val:0x3de1bca8; valaddr_reg:x16; val_offset:672; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 672, x17, x15, 464, x18)

inst_567:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x07a1da and fs2 == 1 and fe2 == 0x7c and fm2 == 0x5508cc and fs3 == 0 and fe3 == 0x7b and fm3 == 0x61bca8 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f07a1da; op2val:0xbe5508cc; op3val:0x3de1bca8; valaddr_reg:x16; val_offset:684; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 684, x17, x15, 472, x18)

inst_568:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x07a1da and fs2 == 1 and fe2 == 0x7c and fm2 == 0x5508cc and fs3 == 0 and fe3 == 0x7b and fm3 == 0x61bca8 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f07a1da; op2val:0xbe5508cc; op3val:0x3de1bca8; valaddr_reg:x16; val_offset:696; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 696, x17, x15, 480, x18)

inst_569:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x07a1da and fs2 == 1 and fe2 == 0x7c and fm2 == 0x5508cc and fs3 == 0 and fe3 == 0x7b and fm3 == 0x61bca8 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f07a1da; op2val:0xbe5508cc; op3val:0x3de1bca8; valaddr_reg:x16; val_offset:708; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 708, x17, x15, 488, x18)

inst_570:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x07a1da and fs2 == 1 and fe2 == 0x7c and fm2 == 0x5508cc and fs3 == 0 and fe3 == 0x7b and fm3 == 0x61bca8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f07a1da; op2val:0xbe5508cc; op3val:0x3de1bca8; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 496, x18)

inst_571:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x75677f and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0577c7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7fe330 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e75677f; op2val:0xc08577c7; op3val:0x3f7fe330; valaddr_reg:x16; val_offset:732; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 732, x17, x15, 504, x18)

inst_572:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x75677f and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0577c7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7fe330 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e75677f; op2val:0xc08577c7; op3val:0x3f7fe330; valaddr_reg:x16; val_offset:744; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 744, x17, x15, 512, x18)

inst_573:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x75677f and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0577c7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7fe330 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e75677f; op2val:0xc08577c7; op3val:0x3f7fe330; valaddr_reg:x16; val_offset:756; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 756, x17, x15, 520, x18)

inst_574:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x75677f and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0577c7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7fe330 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e75677f; op2val:0xc08577c7; op3val:0x3f7fe330; valaddr_reg:x16; val_offset:768; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 768, x17, x15, 528, x18)

inst_575:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x75677f and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0577c7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7fe330 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e75677f; op2val:0xc08577c7; op3val:0x3f7fe330; valaddr_reg:x16; val_offset:780; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 780, x17, x15, 536, x18)

inst_576:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x62ccfd and fs2 == 1 and fe2 == 0x81 and fm2 == 0x15f8c4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x04ddb4 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3de2ccfd; op2val:0xc095f8c4; op3val:0x3f04ddb4; valaddr_reg:x16; val_offset:792; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 792, x17, x15, 544, x18)

inst_577:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x62ccfd and fs2 == 1 and fe2 == 0x81 and fm2 == 0x15f8c4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x04ddb4 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3de2ccfd; op2val:0xc095f8c4; op3val:0x3f04ddb4; valaddr_reg:x16; val_offset:804; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 804, x17, x15, 552, x18)

inst_578:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x62ccfd and fs2 == 1 and fe2 == 0x81 and fm2 == 0x15f8c4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x04ddb4 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3de2ccfd; op2val:0xc095f8c4; op3val:0x3f04ddb4; valaddr_reg:x16; val_offset:816; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 816, x17, x15, 560, x18)

inst_579:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x62ccfd and fs2 == 1 and fe2 == 0x81 and fm2 == 0x15f8c4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x04ddb4 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3de2ccfd; op2val:0xc095f8c4; op3val:0x3f04ddb4; valaddr_reg:x16; val_offset:828; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 828, x17, x15, 568, x18)

inst_580:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x62ccfd and fs2 == 1 and fe2 == 0x81 and fm2 == 0x15f8c4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x04ddb4 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3de2ccfd; op2val:0xc095f8c4; op3val:0x3f04ddb4; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 576, x18)

inst_581:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4c2f05 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1a26c2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x75e666 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4c2f05; op2val:0xbf9a26c2; op3val:0x3f75e666; valaddr_reg:x16; val_offset:852; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 852, x17, x15, 584, x18)

inst_582:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4c2f05 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1a26c2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x75e666 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4c2f05; op2val:0xbf9a26c2; op3val:0x3f75e666; valaddr_reg:x16; val_offset:864; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 864, x17, x15, 592, x18)

inst_583:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4c2f05 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1a26c2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x75e666 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4c2f05; op2val:0xbf9a26c2; op3val:0x3f75e666; valaddr_reg:x16; val_offset:876; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 876, x17, x15, 600, x18)

inst_584:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4c2f05 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1a26c2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x75e666 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4c2f05; op2val:0xbf9a26c2; op3val:0x3f75e666; valaddr_reg:x16; val_offset:888; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 888, x17, x15, 608, x18)

inst_585:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4c2f05 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1a26c2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x75e666 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4c2f05; op2val:0xbf9a26c2; op3val:0x3f75e666; valaddr_reg:x16; val_offset:900; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 900, x17, x15, 616, x18)

inst_586:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x672b16 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x090c5e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x778275 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f672b16; op2val:0xbf890c5e; op3val:0x3f778275; valaddr_reg:x16; val_offset:912; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 912, x17, x15, 624, x18)

inst_587:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x672b16 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x090c5e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x778275 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f672b16; op2val:0xbf890c5e; op3val:0x3f778275; valaddr_reg:x16; val_offset:924; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 924, x17, x15, 632, x18)

inst_588:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x672b16 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x090c5e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x778275 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f672b16; op2val:0xbf890c5e; op3val:0x3f778275; valaddr_reg:x16; val_offset:936; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 936, x17, x15, 640, x18)

inst_589:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x672b16 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x090c5e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x778275 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f672b16; op2val:0xbf890c5e; op3val:0x3f778275; valaddr_reg:x16; val_offset:948; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 948, x17, x15, 648, x18)

inst_590:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x672b16 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x090c5e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x778275 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f672b16; op2val:0xbf890c5e; op3val:0x3f778275; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 656, x18)

inst_591:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0509be and fs2 == 1 and fe2 == 0x80 and fm2 == 0x14e3a2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1abfdc and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8509be; op2val:0xc014e3a2; op3val:0x3f1abfdc; valaddr_reg:x16; val_offset:972; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 972, x17, x15, 664, x18)

inst_592:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0509be and fs2 == 1 and fe2 == 0x80 and fm2 == 0x14e3a2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1abfdc and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8509be; op2val:0xc014e3a2; op3val:0x3f1abfdc; valaddr_reg:x16; val_offset:984; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 984, x17, x15, 672, x18)

inst_593:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0509be and fs2 == 1 and fe2 == 0x80 and fm2 == 0x14e3a2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1abfdc and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8509be; op2val:0xc014e3a2; op3val:0x3f1abfdc; valaddr_reg:x16; val_offset:996; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 996, x17, x15, 680, x18)

inst_594:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0509be and fs2 == 1 and fe2 == 0x80 and fm2 == 0x14e3a2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1abfdc and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8509be; op2val:0xc014e3a2; op3val:0x3f1abfdc; valaddr_reg:x16; val_offset:1008; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1008, x17, x15, 688, x18)

inst_595:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0509be and fs2 == 1 and fe2 == 0x80 and fm2 == 0x14e3a2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1abfdc and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8509be; op2val:0xc014e3a2; op3val:0x3f1abfdc; valaddr_reg:x16; val_offset:1020; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1020, x17, x15, 696, x18)

inst_596:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x509338 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0615f0 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5a7dde and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed09338; op2val:0xbf8615f0; op3val:0x3eda7dde; valaddr_reg:x16; val_offset:1032; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1032, x17, x15, 704, x18)

inst_597:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x509338 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0615f0 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5a7dde and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed09338; op2val:0xbf8615f0; op3val:0x3eda7dde; valaddr_reg:x16; val_offset:1044; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1044, x17, x15, 712, x18)

inst_598:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x509338 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0615f0 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5a7dde and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed09338; op2val:0xbf8615f0; op3val:0x3eda7dde; valaddr_reg:x16; val_offset:1056; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1056, x17, x15, 720, x18)

inst_599:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x509338 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0615f0 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5a7dde and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed09338; op2val:0xbf8615f0; op3val:0x3eda7dde; valaddr_reg:x16; val_offset:1068; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1068, x17, x15, 728, x18)

inst_600:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x509338 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0615f0 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5a7dde and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed09338; op2val:0xbf8615f0; op3val:0x3eda7dde; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 736, x18)

inst_601:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x17fc6c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x500e7c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x770b64 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e17fc6c; op2val:0xc0500e7c; op3val:0x3ef70b64; valaddr_reg:x16; val_offset:1092; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1092, x17, x15, 744, x18)

inst_602:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x17fc6c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x500e7c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x770b64 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e17fc6c; op2val:0xc0500e7c; op3val:0x3ef70b64; valaddr_reg:x16; val_offset:1104; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1104, x17, x15, 752, x18)

inst_603:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x17fc6c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x500e7c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x770b64 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e17fc6c; op2val:0xc0500e7c; op3val:0x3ef70b64; valaddr_reg:x16; val_offset:1116; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1116, x17, x15, 760, x18)

inst_604:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x17fc6c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x500e7c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x770b64 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e17fc6c; op2val:0xc0500e7c; op3val:0x3ef70b64; valaddr_reg:x16; val_offset:1128; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1128, x17, x15, 768, x18)

inst_605:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x17fc6c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x500e7c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x770b64 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e17fc6c; op2val:0xc0500e7c; op3val:0x3ef70b64; valaddr_reg:x16; val_offset:1140; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1140, x17, x15, 776, x18)

inst_606:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x483051 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x397d80 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x110d0e and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e483051; op2val:0xc0397d80; op3val:0x3f110d0e; valaddr_reg:x16; val_offset:1152; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1152, x17, x15, 784, x18)

inst_607:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x483051 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x397d80 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x110d0e and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e483051; op2val:0xc0397d80; op3val:0x3f110d0e; valaddr_reg:x16; val_offset:1164; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1164, x17, x15, 792, x18)

inst_608:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x483051 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x397d80 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x110d0e and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e483051; op2val:0xc0397d80; op3val:0x3f110d0e; valaddr_reg:x16; val_offset:1176; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1176, x17, x15, 800, x18)

inst_609:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x483051 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x397d80 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x110d0e and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e483051; op2val:0xc0397d80; op3val:0x3f110d0e; valaddr_reg:x16; val_offset:1188; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1188, x17, x15, 808, x18)

inst_610:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x483051 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x397d80 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x110d0e and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e483051; op2val:0xc0397d80; op3val:0x3f110d0e; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 816, x18)

inst_611:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2cf3fc and fs2 == 1 and fe2 == 0x80 and fm2 == 0x056c43 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3447cd and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e2cf3fc; op2val:0xc0056c43; op3val:0x3eb447cd; valaddr_reg:x16; val_offset:1212; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1212, x17, x15, 824, x18)

inst_612:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2cf3fc and fs2 == 1 and fe2 == 0x80 and fm2 == 0x056c43 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3447cd and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e2cf3fc; op2val:0xc0056c43; op3val:0x3eb447cd; valaddr_reg:x16; val_offset:1224; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1224, x17, x15, 832, x18)

inst_613:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2cf3fc and fs2 == 1 and fe2 == 0x80 and fm2 == 0x056c43 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3447cd and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e2cf3fc; op2val:0xc0056c43; op3val:0x3eb447cd; valaddr_reg:x16; val_offset:1236; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1236, x17, x15, 840, x18)

inst_614:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2cf3fc and fs2 == 1 and fe2 == 0x80 and fm2 == 0x056c43 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3447cd and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e2cf3fc; op2val:0xc0056c43; op3val:0x3eb447cd; valaddr_reg:x16; val_offset:1248; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1248, x17, x15, 848, x18)

inst_615:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2cf3fc and fs2 == 1 and fe2 == 0x80 and fm2 == 0x056c43 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3447cd and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e2cf3fc; op2val:0xc0056c43; op3val:0x3eb447cd; valaddr_reg:x16; val_offset:1260; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1260, x17, x15, 856, x18)

inst_616:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1d3f9f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x33f467 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5d1339 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1d3f9f; op2val:0xbfb3f467; op3val:0x3f5d1339; valaddr_reg:x16; val_offset:1272; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1272, x17, x15, 864, x18)

inst_617:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1d3f9f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x33f467 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5d1339 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1d3f9f; op2val:0xbfb3f467; op3val:0x3f5d1339; valaddr_reg:x16; val_offset:1284; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1284, x17, x15, 872, x18)

inst_618:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1d3f9f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x33f467 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5d1339 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1d3f9f; op2val:0xbfb3f467; op3val:0x3f5d1339; valaddr_reg:x16; val_offset:1296; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1296, x17, x15, 880, x18)

inst_619:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1d3f9f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x33f467 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5d1339 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1d3f9f; op2val:0xbfb3f467; op3val:0x3f5d1339; valaddr_reg:x16; val_offset:1308; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1308, x17, x15, 888, x18)

inst_620:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1d3f9f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x33f467 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5d1339 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1d3f9f; op2val:0xbfb3f467; op3val:0x3f5d1339; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 896, x18)

inst_621:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x45c198 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x57d94c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x26bd72 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec5c198; op2val:0xbfd7d94c; op3val:0x3f26bd72; valaddr_reg:x16; val_offset:1332; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1332, x17, x15, 904, x18)

inst_622:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x45c198 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x57d94c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x26bd72 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec5c198; op2val:0xbfd7d94c; op3val:0x3f26bd72; valaddr_reg:x16; val_offset:1344; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1344, x17, x15, 912, x18)

inst_623:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x45c198 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x57d94c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x26bd72 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec5c198; op2val:0xbfd7d94c; op3val:0x3f26bd72; valaddr_reg:x16; val_offset:1356; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1356, x17, x15, 920, x18)

inst_624:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x45c198 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x57d94c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x26bd72 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec5c198; op2val:0xbfd7d94c; op3val:0x3f26bd72; valaddr_reg:x16; val_offset:1368; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1368, x17, x15, 928, x18)

inst_625:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x45c198 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x57d94c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x26bd72 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec5c198; op2val:0xbfd7d94c; op3val:0x3f26bd72; valaddr_reg:x16; val_offset:1380; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1380, x17, x15, 936, x18)

inst_626:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x43d5ce and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5f1f3c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2aaf23 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f43d5ce; op2val:0xbf5f1f3c; op3val:0x3f2aaf23; valaddr_reg:x16; val_offset:1392; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1392, x17, x15, 944, x18)

inst_627:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x43d5ce and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5f1f3c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2aaf23 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f43d5ce; op2val:0xbf5f1f3c; op3val:0x3f2aaf23; valaddr_reg:x16; val_offset:1404; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1404, x17, x15, 952, x18)

inst_628:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x43d5ce and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5f1f3c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2aaf23 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f43d5ce; op2val:0xbf5f1f3c; op3val:0x3f2aaf23; valaddr_reg:x16; val_offset:1416; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1416, x17, x15, 960, x18)

inst_629:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x43d5ce and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5f1f3c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2aaf23 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f43d5ce; op2val:0xbf5f1f3c; op3val:0x3f2aaf23; valaddr_reg:x16; val_offset:1428; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1428, x17, x15, 968, x18)

inst_630:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x43d5ce and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5f1f3c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2aaf23 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f43d5ce; op2val:0xbf5f1f3c; op3val:0x3f2aaf23; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 976, x18)

inst_631:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x401a8b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5c47d2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x254cb5 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec01a8b; op2val:0xbfdc47d2; op3val:0x3f254cb5; valaddr_reg:x16; val_offset:1452; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1452, x17, x15, 984, x18)

inst_632:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x401a8b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5c47d2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x254cb5 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec01a8b; op2val:0xbfdc47d2; op3val:0x3f254cb5; valaddr_reg:x16; val_offset:1464; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1464, x17, x15, 992, x18)

inst_633:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x401a8b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5c47d2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x254cb5 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec01a8b; op2val:0xbfdc47d2; op3val:0x3f254cb5; valaddr_reg:x16; val_offset:1476; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1476, x17, x15, 1000, x18)

inst_634:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x401a8b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5c47d2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x254cb5 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec01a8b; op2val:0xbfdc47d2; op3val:0x3f254cb5; valaddr_reg:x16; val_offset:1488; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1488, x17, x15, 1008, x18)

inst_635:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x401a8b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5c47d2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x254cb5 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec01a8b; op2val:0xbfdc47d2; op3val:0x3f254cb5; valaddr_reg:x16; val_offset:1500; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1500, x17, x15, 1016, x18)

inst_636:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x37b5a2 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x197057 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5c3858 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e37b5a2; op2val:0xc0997057; op3val:0x3f5c3858; valaddr_reg:x16; val_offset:1512; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1512, x17, x15, 1024, x18)

inst_637:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x37b5a2 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x197057 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5c3858 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e37b5a2; op2val:0xc0997057; op3val:0x3f5c3858; valaddr_reg:x16; val_offset:1524; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1524, x17, x15, 1032, x18)

inst_638:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x37b5a2 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x197057 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5c3858 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e37b5a2; op2val:0xc0997057; op3val:0x3f5c3858; valaddr_reg:x16; val_offset:1536; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1536, x17, x15, 1040, x18)

inst_639:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x37b5a2 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x197057 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5c3858 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e37b5a2; op2val:0xc0997057; op3val:0x3f5c3858; valaddr_reg:x16; val_offset:1548; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1548, x17, x15, 1048, x18)

inst_640:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x37b5a2 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x197057 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5c3858 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e37b5a2; op2val:0xc0997057; op3val:0x3f5c3858; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1056, x18)

inst_641:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x5fa990 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x444831 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2b7ce5 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3cdfa990; op2val:0xc1444831; op3val:0x3eab7ce5; valaddr_reg:x16; val_offset:1572; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1572, x17, x15, 1064, x18)

inst_642:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x5fa990 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x444831 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2b7ce5 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3cdfa990; op2val:0xc1444831; op3val:0x3eab7ce5; valaddr_reg:x16; val_offset:1584; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1584, x17, x15, 1072, x18)

inst_643:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x5fa990 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x444831 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2b7ce5 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3cdfa990; op2val:0xc1444831; op3val:0x3eab7ce5; valaddr_reg:x16; val_offset:1596; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1596, x17, x15, 1080, x18)

inst_644:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x5fa990 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x444831 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2b7ce5 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3cdfa990; op2val:0xc1444831; op3val:0x3eab7ce5; valaddr_reg:x16; val_offset:1608; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1608, x17, x15, 1088, x18)

inst_645:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x5fa990 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x444831 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2b7ce5 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3cdfa990; op2val:0xc1444831; op3val:0x3eab7ce5; valaddr_reg:x16; val_offset:1620; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1620, x17, x15, 1096, x18)

inst_646:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x46e3b4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x11a165 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6248ba and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f46e3b4; op2val:0xbf91a165; op3val:0x3f6248ba; valaddr_reg:x16; val_offset:1632; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1632, x17, x15, 1104, x18)

inst_647:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x46e3b4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x11a165 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6248ba and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f46e3b4; op2val:0xbf91a165; op3val:0x3f6248ba; valaddr_reg:x16; val_offset:1644; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1644, x17, x15, 1112, x18)

inst_648:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x46e3b4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x11a165 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6248ba and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f46e3b4; op2val:0xbf91a165; op3val:0x3f6248ba; valaddr_reg:x16; val_offset:1656; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1656, x17, x15, 1120, x18)

inst_649:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x46e3b4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x11a165 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6248ba and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f46e3b4; op2val:0xbf91a165; op3val:0x3f6248ba; valaddr_reg:x16; val_offset:1668; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1668, x17, x15, 1128, x18)

inst_650:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x46e3b4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x11a165 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6248ba and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f46e3b4; op2val:0xbf91a165; op3val:0x3f6248ba; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1136, x18)

inst_651:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x44702b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x54c683 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x234537 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d44702b; op2val:0xc0d4c683; op3val:0x3ea34537; valaddr_reg:x16; val_offset:1692; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1692, x17, x15, 1144, x18)

inst_652:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x44702b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x54c683 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x234537 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d44702b; op2val:0xc0d4c683; op3val:0x3ea34537; valaddr_reg:x16; val_offset:1704; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1704, x17, x15, 1152, x18)

inst_653:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x44702b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x54c683 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x234537 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d44702b; op2val:0xc0d4c683; op3val:0x3ea34537; valaddr_reg:x16; val_offset:1716; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1716, x17, x15, 1160, x18)

inst_654:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x44702b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x54c683 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x234537 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d44702b; op2val:0xc0d4c683; op3val:0x3ea34537; valaddr_reg:x16; val_offset:1728; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1728, x17, x15, 1168, x18)

inst_655:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x44702b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x54c683 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x234537 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d44702b; op2val:0xc0d4c683; op3val:0x3ea34537; valaddr_reg:x16; val_offset:1740; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1740, x17, x15, 1176, x18)

inst_656:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x724364 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x65b8bb and fs3 == 0 and fe3 == 0x7e and fm3 == 0x59651a and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f724364; op2val:0xbf65b8bb; op3val:0x3f59651a; valaddr_reg:x16; val_offset:1752; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1752, x17, x15, 1184, x18)

inst_657:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x724364 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x65b8bb and fs3 == 0 and fe3 == 0x7e and fm3 == 0x59651a and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f724364; op2val:0xbf65b8bb; op3val:0x3f59651a; valaddr_reg:x16; val_offset:1764; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1764, x17, x15, 1192, x18)

inst_658:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x724364 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x65b8bb and fs3 == 0 and fe3 == 0x7e and fm3 == 0x59651a and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f724364; op2val:0xbf65b8bb; op3val:0x3f59651a; valaddr_reg:x16; val_offset:1776; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1776, x17, x15, 1200, x18)

inst_659:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x724364 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x65b8bb and fs3 == 0 and fe3 == 0x7e and fm3 == 0x59651a and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f724364; op2val:0xbf65b8bb; op3val:0x3f59651a; valaddr_reg:x16; val_offset:1788; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1788, x17, x15, 1208, x18)

inst_660:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x724364 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x65b8bb and fs3 == 0 and fe3 == 0x7e and fm3 == 0x59651a and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f724364; op2val:0xbf65b8bb; op3val:0x3f59651a; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1216, x18)

inst_661:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x78753e and fs2 == 1 and fe2 == 0x7d and fm2 == 0x11120c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0ccbed and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f78753e; op2val:0xbe91120c; op3val:0x3e8ccbed; valaddr_reg:x16; val_offset:1812; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1812, x17, x15, 1224, x18)

inst_662:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x78753e and fs2 == 1 and fe2 == 0x7d and fm2 == 0x11120c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0ccbed and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f78753e; op2val:0xbe91120c; op3val:0x3e8ccbed; valaddr_reg:x16; val_offset:1824; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1824, x17, x15, 1232, x18)

inst_663:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x78753e and fs2 == 1 and fe2 == 0x7d and fm2 == 0x11120c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0ccbed and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f78753e; op2val:0xbe91120c; op3val:0x3e8ccbed; valaddr_reg:x16; val_offset:1836; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1836, x17, x15, 1240, x18)

inst_664:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x78753e and fs2 == 1 and fe2 == 0x7d and fm2 == 0x11120c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0ccbed and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f78753e; op2val:0xbe91120c; op3val:0x3e8ccbed; valaddr_reg:x16; val_offset:1848; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1848, x17, x15, 1248, x18)

inst_665:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x78753e and fs2 == 1 and fe2 == 0x7d and fm2 == 0x11120c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0ccbed and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f78753e; op2val:0xbe91120c; op3val:0x3e8ccbed; valaddr_reg:x16; val_offset:1860; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1860, x17, x15, 1256, x18)

inst_666:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2d3d1c and fs2 == 1 and fe2 == 0x7d and fm2 == 0x19fec2 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x506bd9 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2d3d1c; op2val:0xbe99fec2; op3val:0x3e506bd9; valaddr_reg:x16; val_offset:1872; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1872, x17, x15, 1264, x18)

inst_667:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2d3d1c and fs2 == 1 and fe2 == 0x7d and fm2 == 0x19fec2 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x506bd9 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2d3d1c; op2val:0xbe99fec2; op3val:0x3e506bd9; valaddr_reg:x16; val_offset:1884; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1884, x17, x15, 1272, x18)

inst_668:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2d3d1c and fs2 == 1 and fe2 == 0x7d and fm2 == 0x19fec2 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x506bd9 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2d3d1c; op2val:0xbe99fec2; op3val:0x3e506bd9; valaddr_reg:x16; val_offset:1896; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1896, x17, x15, 1280, x18)

inst_669:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2d3d1c and fs2 == 1 and fe2 == 0x7d and fm2 == 0x19fec2 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x506bd9 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2d3d1c; op2val:0xbe99fec2; op3val:0x3e506bd9; valaddr_reg:x16; val_offset:1908; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1908, x17, x15, 1288, x18)

inst_670:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2d3d1c and fs2 == 1 and fe2 == 0x7d and fm2 == 0x19fec2 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x506bd9 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2d3d1c; op2val:0xbe99fec2; op3val:0x3e506bd9; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1296, x18)

inst_671:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x7c0de1 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x07150e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x05000d and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dfc0de1; op2val:0xc087150e; op3val:0x3f05000d; valaddr_reg:x16; val_offset:1932; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1932, x17, x15, 1304, x18)

inst_672:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x7c0de1 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x07150e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x05000d and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dfc0de1; op2val:0xc087150e; op3val:0x3f05000d; valaddr_reg:x16; val_offset:1944; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1944, x17, x15, 1312, x18)

inst_673:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x7c0de1 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x07150e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x05000d and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dfc0de1; op2val:0xc087150e; op3val:0x3f05000d; valaddr_reg:x16; val_offset:1956; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1956, x17, x15, 1320, x18)

inst_674:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x7c0de1 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x07150e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x05000d and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dfc0de1; op2val:0xc087150e; op3val:0x3f05000d; valaddr_reg:x16; val_offset:1968; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1968, x17, x15, 1328, x18)

inst_675:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x7c0de1 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x07150e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x05000d and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dfc0de1; op2val:0xc087150e; op3val:0x3f05000d; valaddr_reg:x16; val_offset:1980; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1980, x17, x15, 1336, x18)

inst_676:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4fe29b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x700969 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x42ec16 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ecfe29b; op2val:0xbff00969; op3val:0x3f42ec16; valaddr_reg:x16; val_offset:1992; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1992, x17, x15, 1344, x18)

inst_677:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4fe29b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x700969 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x42ec16 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ecfe29b; op2val:0xbff00969; op3val:0x3f42ec16; valaddr_reg:x16; val_offset:2004; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 2004, x17, x15, 1352, x18)

inst_678:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4fe29b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x700969 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x42ec16 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ecfe29b; op2val:0xbff00969; op3val:0x3f42ec16; valaddr_reg:x16; val_offset:2016; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 2016, x17, x15, 1360, x18)

inst_679:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4fe29b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x700969 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x42ec16 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ecfe29b; op2val:0xbff00969; op3val:0x3f42ec16; valaddr_reg:x16; val_offset:2028; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 2028, x17, x15, 1368, x18)
addi x16,x16,2040

inst_680:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4fe29b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x700969 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x42ec16 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ecfe29b; op2val:0xbff00969; op3val:0x3f42ec16; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 1376, x18)

inst_681:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x68a88a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x76881b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x600da7 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f68a88a; op2val:0xbf76881b; op3val:0x3f600da7; valaddr_reg:x16; val_offset:12; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 12, x17, x15, 1384, x18)

inst_682:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x68a88a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x76881b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x600da7 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f68a88a; op2val:0xbf76881b; op3val:0x3f600da7; valaddr_reg:x16; val_offset:24; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 24, x17, x15, 1392, x18)

inst_683:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x68a88a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x76881b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x600da7 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f68a88a; op2val:0xbf76881b; op3val:0x3f600da7; valaddr_reg:x16; val_offset:36; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 36, x17, x15, 1400, x18)

inst_684:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x68a88a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x76881b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x600da7 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f68a88a; op2val:0xbf76881b; op3val:0x3f600da7; valaddr_reg:x16; val_offset:48; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 48, x17, x15, 1408, x18)

inst_685:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x68a88a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x76881b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x600da7 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f68a88a; op2val:0xbf76881b; op3val:0x3f600da7; valaddr_reg:x16; val_offset:60; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 60, x17, x15, 1416, x18)

inst_686:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6a2d7d and fs2 == 1 and fe2 == 0x7d and fm2 == 0x39d9b8 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2a0209 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6a2d7d; op2val:0xbeb9d9b8; op3val:0x3eaa0209; valaddr_reg:x16; val_offset:72; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 72, x17, x15, 1424, x18)

inst_687:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6a2d7d and fs2 == 1 and fe2 == 0x7d and fm2 == 0x39d9b8 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2a0209 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6a2d7d; op2val:0xbeb9d9b8; op3val:0x3eaa0209; valaddr_reg:x16; val_offset:84; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 84, x17, x15, 1432, x18)

inst_688:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6a2d7d and fs2 == 1 and fe2 == 0x7d and fm2 == 0x39d9b8 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2a0209 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6a2d7d; op2val:0xbeb9d9b8; op3val:0x3eaa0209; valaddr_reg:x16; val_offset:96; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 96, x17, x15, 1440, x18)

inst_689:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6a2d7d and fs2 == 1 and fe2 == 0x7d and fm2 == 0x39d9b8 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2a0209 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6a2d7d; op2val:0xbeb9d9b8; op3val:0x3eaa0209; valaddr_reg:x16; val_offset:108; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 108, x17, x15, 1448, x18)

inst_690:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6a2d7d and fs2 == 1 and fe2 == 0x7d and fm2 == 0x39d9b8 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2a0209 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6a2d7d; op2val:0xbeb9d9b8; op3val:0x3eaa0209; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 1456, x18)

inst_691:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x12cad3 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1a053e and fs3 == 0 and fe3 == 0x7d and fm3 == 0x30a209 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e92cad3; op2val:0xbf9a053e; op3val:0x3eb0a209; valaddr_reg:x16; val_offset:132; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 132, x17, x15, 1464, x18)

inst_692:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x12cad3 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1a053e and fs3 == 0 and fe3 == 0x7d and fm3 == 0x30a209 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e92cad3; op2val:0xbf9a053e; op3val:0x3eb0a209; valaddr_reg:x16; val_offset:144; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 144, x17, x15, 1472, x18)

inst_693:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x12cad3 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1a053e and fs3 == 0 and fe3 == 0x7d and fm3 == 0x30a209 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e92cad3; op2val:0xbf9a053e; op3val:0x3eb0a209; valaddr_reg:x16; val_offset:156; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 156, x17, x15, 1480, x18)

inst_694:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x12cad3 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1a053e and fs3 == 0 and fe3 == 0x7d and fm3 == 0x30a209 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e92cad3; op2val:0xbf9a053e; op3val:0x3eb0a209; valaddr_reg:x16; val_offset:168; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 168, x17, x15, 1488, x18)

inst_695:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x12cad3 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1a053e and fs3 == 0 and fe3 == 0x7d and fm3 == 0x30a209 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e92cad3; op2val:0xbf9a053e; op3val:0x3eb0a209; valaddr_reg:x16; val_offset:180; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 180, x17, x15, 1496, x18)

inst_696:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x06c853 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x47858a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x52180f and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e86c853; op2val:0xc047858a; op3val:0x3f52180f; valaddr_reg:x16; val_offset:192; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 192, x17, x15, 1504, x18)

inst_697:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x06c853 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x47858a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x52180f and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e86c853; op2val:0xc047858a; op3val:0x3f52180f; valaddr_reg:x16; val_offset:204; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 204, x17, x15, 1512, x18)

inst_698:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x06c853 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x47858a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x52180f and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e86c853; op2val:0xc047858a; op3val:0x3f52180f; valaddr_reg:x16; val_offset:216; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 216, x17, x15, 1520, x18)

inst_699:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x06c853 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x47858a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x52180f and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e86c853; op2val:0xc047858a; op3val:0x3f52180f; valaddr_reg:x16; val_offset:228; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 228, x17, x15, 1528, x18)

inst_700:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x06c853 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x47858a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x52180f and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e86c853; op2val:0xc047858a; op3val:0x3f52180f; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 1536, x18)

inst_701:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x43fd07 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x524206 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x20f81c and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f43fd07; op2val:0xbf524206; op3val:0x3f20f81c; valaddr_reg:x16; val_offset:252; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 252, x17, x15, 1544, x18)

inst_702:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x43fd07 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x524206 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x20f81c and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f43fd07; op2val:0xbf524206; op3val:0x3f20f81c; valaddr_reg:x16; val_offset:264; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 264, x17, x15, 1552, x18)

inst_703:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x43fd07 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x524206 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x20f81c and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f43fd07; op2val:0xbf524206; op3val:0x3f20f81c; valaddr_reg:x16; val_offset:276; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 276, x17, x15, 1560, x18)

inst_704:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x43fd07 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x524206 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x20f81c and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f43fd07; op2val:0xbf524206; op3val:0x3f20f81c; valaddr_reg:x16; val_offset:288; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 288, x17, x15, 1568, x18)

inst_705:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x43fd07 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x524206 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x20f81c and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f43fd07; op2val:0xbf524206; op3val:0x3f20f81c; valaddr_reg:x16; val_offset:300; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 300, x17, x15, 1576, x18)

inst_706:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x774c56 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x658e14 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5dc089 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef74c56; op2val:0xbfe58e14; op3val:0x3f5dc089; valaddr_reg:x16; val_offset:312; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 312, x17, x15, 1584, x18)

inst_707:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x774c56 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x658e14 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5dc089 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef74c56; op2val:0xbfe58e14; op3val:0x3f5dc089; valaddr_reg:x16; val_offset:324; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 324, x17, x15, 1592, x18)

inst_708:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x774c56 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x658e14 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5dc089 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef74c56; op2val:0xbfe58e14; op3val:0x3f5dc089; valaddr_reg:x16; val_offset:336; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 336, x17, x15, 1600, x18)

inst_709:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x774c56 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x658e14 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5dc089 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef74c56; op2val:0xbfe58e14; op3val:0x3f5dc089; valaddr_reg:x16; val_offset:348; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 348, x17, x15, 1608, x18)

inst_710:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x774c56 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x658e14 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5dc089 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef74c56; op2val:0xbfe58e14; op3val:0x3f5dc089; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 1616, x18)

inst_711:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3eed63 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x2b3a73 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x7f6851 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3eed63; op2val:0xbeab3a73; op3val:0x3e7f6851; valaddr_reg:x16; val_offset:372; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 372, x17, x15, 1624, x18)

inst_712:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3eed63 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x2b3a73 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x7f6851 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3eed63; op2val:0xbeab3a73; op3val:0x3e7f6851; valaddr_reg:x16; val_offset:384; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 384, x17, x15, 1632, x18)

inst_713:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3eed63 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x2b3a73 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x7f6851 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3eed63; op2val:0xbeab3a73; op3val:0x3e7f6851; valaddr_reg:x16; val_offset:396; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 396, x17, x15, 1640, x18)

inst_714:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3eed63 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x2b3a73 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x7f6851 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3eed63; op2val:0xbeab3a73; op3val:0x3e7f6851; valaddr_reg:x16; val_offset:408; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 408, x17, x15, 1648, x18)

inst_715:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3eed63 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x2b3a73 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x7f6851 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3eed63; op2val:0xbeab3a73; op3val:0x3e7f6851; valaddr_reg:x16; val_offset:420; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 420, x17, x15, 1656, x18)

inst_716:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3c9bdc and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1bc793 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x658ad0 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3c9bdc; op2val:0xbf1bc793; op3val:0x3ee58ad0; valaddr_reg:x16; val_offset:432; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 432, x17, x15, 1664, x18)

inst_717:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3c9bdc and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1bc793 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x658ad0 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3c9bdc; op2val:0xbf1bc793; op3val:0x3ee58ad0; valaddr_reg:x16; val_offset:444; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 444, x17, x15, 1672, x18)

inst_718:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3c9bdc and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1bc793 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x658ad0 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3c9bdc; op2val:0xbf1bc793; op3val:0x3ee58ad0; valaddr_reg:x16; val_offset:456; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 456, x17, x15, 1680, x18)

inst_719:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3c9bdc and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1bc793 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x658ad0 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3c9bdc; op2val:0xbf1bc793; op3val:0x3ee58ad0; valaddr_reg:x16; val_offset:468; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 468, x17, x15, 1688, x18)

inst_720:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3c9bdc and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1bc793 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x658ad0 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3c9bdc; op2val:0xbf1bc793; op3val:0x3ee58ad0; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1696, x18)

inst_721:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x63e558 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5a0c5b and fs3 == 0 and fe3 == 0x7d and fm3 == 0x421c4d and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee3e558; op2val:0xbf5a0c5b; op3val:0x3ec21c4d; valaddr_reg:x16; val_offset:492; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 492, x17, x15, 1704, x18)

inst_722:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x63e558 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5a0c5b and fs3 == 0 and fe3 == 0x7d and fm3 == 0x421c4d and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee3e558; op2val:0xbf5a0c5b; op3val:0x3ec21c4d; valaddr_reg:x16; val_offset:504; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 504, x17, x15, 1712, x18)

inst_723:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x63e558 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5a0c5b and fs3 == 0 and fe3 == 0x7d and fm3 == 0x421c4d and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee3e558; op2val:0xbf5a0c5b; op3val:0x3ec21c4d; valaddr_reg:x16; val_offset:516; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 516, x17, x15, 1720, x18)

inst_724:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x63e558 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5a0c5b and fs3 == 0 and fe3 == 0x7d and fm3 == 0x421c4d and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee3e558; op2val:0xbf5a0c5b; op3val:0x3ec21c4d; valaddr_reg:x16; val_offset:528; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 528, x17, x15, 1728, x18)

inst_725:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x63e558 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5a0c5b and fs3 == 0 and fe3 == 0x7d and fm3 == 0x421c4d and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee3e558; op2val:0xbf5a0c5b; op3val:0x3ec21c4d; valaddr_reg:x16; val_offset:540; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 540, x17, x15, 1736, x18)

inst_726:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7d0200 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x399fce and fs3 == 0 and fe3 == 0x7b and fm3 == 0x377463 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3efd0200; op2val:0xbe399fce; op3val:0x3db77463; valaddr_reg:x16; val_offset:552; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 552, x17, x15, 1744, x18)

inst_727:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7d0200 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x399fce and fs3 == 0 and fe3 == 0x7b and fm3 == 0x377463 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3efd0200; op2val:0xbe399fce; op3val:0x3db77463; valaddr_reg:x16; val_offset:564; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 564, x17, x15, 1752, x18)

inst_728:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7d0200 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x399fce and fs3 == 0 and fe3 == 0x7b and fm3 == 0x377463 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3efd0200; op2val:0xbe399fce; op3val:0x3db77463; valaddr_reg:x16; val_offset:576; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 576, x17, x15, 1760, x18)

inst_729:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7d0200 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x399fce and fs3 == 0 and fe3 == 0x7b and fm3 == 0x377463 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3efd0200; op2val:0xbe399fce; op3val:0x3db77463; valaddr_reg:x16; val_offset:588; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 588, x17, x15, 1768, x18)

inst_730:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7d0200 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x399fce and fs3 == 0 and fe3 == 0x7b and fm3 == 0x377463 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3efd0200; op2val:0xbe399fce; op3val:0x3db77463; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1776, x18)

inst_731:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5950e8 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x5e599a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3cc039 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5950e8; op2val:0xbede599a; op3val:0x3ebcc039; valaddr_reg:x16; val_offset:612; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 612, x17, x15, 1784, x18)

inst_732:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5950e8 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x5e599a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3cc039 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5950e8; op2val:0xbede599a; op3val:0x3ebcc039; valaddr_reg:x16; val_offset:624; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 624, x17, x15, 1792, x18)

inst_733:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5950e8 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x5e599a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3cc039 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5950e8; op2val:0xbede599a; op3val:0x3ebcc039; valaddr_reg:x16; val_offset:636; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 636, x17, x15, 1800, x18)

inst_734:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5950e8 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x5e599a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3cc039 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5950e8; op2val:0xbede599a; op3val:0x3ebcc039; valaddr_reg:x16; val_offset:648; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 648, x17, x15, 1808, x18)

inst_735:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5950e8 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x5e599a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3cc039 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5950e8; op2val:0xbede599a; op3val:0x3ebcc039; valaddr_reg:x16; val_offset:660; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 660, x17, x15, 1816, x18)

inst_736:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x71ba49 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x242291 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1afbfb and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f71ba49; op2val:0xbea42291; op3val:0x3e9afbfb; valaddr_reg:x16; val_offset:672; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 672, x17, x15, 1824, x18)

inst_737:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x71ba49 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x242291 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1afbfb and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f71ba49; op2val:0xbea42291; op3val:0x3e9afbfb; valaddr_reg:x16; val_offset:684; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 684, x17, x15, 1832, x18)

inst_738:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x71ba49 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x242291 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1afbfb and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f71ba49; op2val:0xbea42291; op3val:0x3e9afbfb; valaddr_reg:x16; val_offset:696; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 696, x17, x15, 1840, x18)

inst_739:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x71ba49 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x242291 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1afbfb and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f71ba49; op2val:0xbea42291; op3val:0x3e9afbfb; valaddr_reg:x16; val_offset:708; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 708, x17, x15, 1848, x18)

inst_740:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x71ba49 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x242291 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1afbfb and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f71ba49; op2val:0xbea42291; op3val:0x3e9afbfb; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1856, x18)

inst_741:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x7bbf90 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x22e931 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x20348b and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d7bbf90; op2val:0xc122e931; op3val:0x3f20348b; valaddr_reg:x16; val_offset:732; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 732, x17, x15, 1864, x18)

inst_742:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x7bbf90 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x22e931 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x20348b and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d7bbf90; op2val:0xc122e931; op3val:0x3f20348b; valaddr_reg:x16; val_offset:744; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 744, x17, x15, 1872, x18)

inst_743:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x7bbf90 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x22e931 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x20348b and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d7bbf90; op2val:0xc122e931; op3val:0x3f20348b; valaddr_reg:x16; val_offset:756; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 756, x17, x15, 1880, x18)

inst_744:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x7bbf90 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x22e931 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x20348b and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d7bbf90; op2val:0xc122e931; op3val:0x3f20348b; valaddr_reg:x16; val_offset:768; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 768, x17, x15, 1888, x18)

inst_745:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x7bbf90 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x22e931 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x20348b and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d7bbf90; op2val:0xc122e931; op3val:0x3f20348b; valaddr_reg:x16; val_offset:780; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 780, x17, x15, 1896, x18)

inst_746:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4cb046 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x236c63 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x02aae6 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eccb046; op2val:0xbfa36c63; op3val:0x3f02aae6; valaddr_reg:x16; val_offset:792; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 792, x17, x15, 1904, x18)

inst_747:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4cb046 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x236c63 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x02aae6 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eccb046; op2val:0xbfa36c63; op3val:0x3f02aae6; valaddr_reg:x16; val_offset:804; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 804, x17, x15, 1912, x18)

inst_748:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4cb046 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x236c63 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x02aae6 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eccb046; op2val:0xbfa36c63; op3val:0x3f02aae6; valaddr_reg:x16; val_offset:816; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 816, x17, x15, 1920, x18)

inst_749:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4cb046 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x236c63 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x02aae6 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eccb046; op2val:0xbfa36c63; op3val:0x3f02aae6; valaddr_reg:x16; val_offset:828; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 828, x17, x15, 1928, x18)

inst_750:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4cb046 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x236c63 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x02aae6 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eccb046; op2val:0xbfa36c63; op3val:0x3f02aae6; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1936, x18)

inst_751:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x117e0a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1a5fa6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2f785d and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f117e0a; op2val:0xbf9a5fa6; op3val:0x3f2f785d; valaddr_reg:x16; val_offset:852; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 852, x17, x15, 1944, x18)

inst_752:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x117e0a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1a5fa6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2f785d and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f117e0a; op2val:0xbf9a5fa6; op3val:0x3f2f785d; valaddr_reg:x16; val_offset:864; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 864, x17, x15, 1952, x18)

inst_753:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x117e0a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1a5fa6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2f785d and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f117e0a; op2val:0xbf9a5fa6; op3val:0x3f2f785d; valaddr_reg:x16; val_offset:876; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 876, x17, x15, 1960, x18)

inst_754:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x117e0a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1a5fa6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2f785d and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f117e0a; op2val:0xbf9a5fa6; op3val:0x3f2f785d; valaddr_reg:x16; val_offset:888; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 888, x17, x15, 1968, x18)

inst_755:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x117e0a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1a5fa6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2f785d and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f117e0a; op2val:0xbf9a5fa6; op3val:0x3f2f785d; valaddr_reg:x16; val_offset:900; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 900, x17, x15, 1976, x18)

inst_756:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x78eb79 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x63ea08 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5d9c5c and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3df8eb79; op2val:0xc0e3ea08; op3val:0x3f5d9c5c; valaddr_reg:x16; val_offset:912; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 912, x17, x15, 1984, x18)

inst_757:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x78eb79 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x63ea08 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5d9c5c and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3df8eb79; op2val:0xc0e3ea08; op3val:0x3f5d9c5c; valaddr_reg:x16; val_offset:924; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 924, x17, x15, 1992, x18)

inst_758:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x78eb79 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x63ea08 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5d9c5c and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3df8eb79; op2val:0xc0e3ea08; op3val:0x3f5d9c5c; valaddr_reg:x16; val_offset:936; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 936, x17, x15, 2000, x18)

inst_759:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x78eb79 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x63ea08 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5d9c5c and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3df8eb79; op2val:0xc0e3ea08; op3val:0x3f5d9c5c; valaddr_reg:x16; val_offset:948; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 948, x17, x15, 2008, x18)

inst_760:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x78eb79 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x63ea08 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5d9c5c and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3df8eb79; op2val:0xc0e3ea08; op3val:0x3f5d9c5c; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 2016, x18)

inst_761:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x597815 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1b4c10 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x03ec52 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed97815; op2val:0xbf1b4c10; op3val:0x3e83ec52; valaddr_reg:x16; val_offset:972; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 972, x17, x15, 2024, x18)
RVTEST_SIGBASE(x15,signature_x15_4)

inst_762:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x597815 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1b4c10 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x03ec52 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed97815; op2val:0xbf1b4c10; op3val:0x3e83ec52; valaddr_reg:x16; val_offset:984; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 984, x17, x15, 0, x18)

inst_763:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x597815 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1b4c10 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x03ec52 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed97815; op2val:0xbf1b4c10; op3val:0x3e83ec52; valaddr_reg:x16; val_offset:996; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 996, x17, x15, 8, x18)

inst_764:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x597815 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1b4c10 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x03ec52 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed97815; op2val:0xbf1b4c10; op3val:0x3e83ec52; valaddr_reg:x16; val_offset:1008; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1008, x17, x15, 16, x18)

inst_765:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x597815 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1b4c10 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x03ec52 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed97815; op2val:0xbf1b4c10; op3val:0x3e83ec52; valaddr_reg:x16; val_offset:1020; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1020, x17, x15, 24, x18)

inst_766:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6d9126 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x01fdfa and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7143aa and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6d9126; op2val:0xbf81fdfa; op3val:0x3f7143aa; valaddr_reg:x16; val_offset:1032; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1032, x17, x15, 32, x18)

inst_767:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6d9126 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x01fdfa and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7143aa and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6d9126; op2val:0xbf81fdfa; op3val:0x3f7143aa; valaddr_reg:x16; val_offset:1044; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1044, x17, x15, 40, x18)

inst_768:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6d9126 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x01fdfa and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7143aa and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6d9126; op2val:0xbf81fdfa; op3val:0x3f7143aa; valaddr_reg:x16; val_offset:1056; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1056, x17, x15, 48, x18)

inst_769:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6d9126 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x01fdfa and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7143aa and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6d9126; op2val:0xbf81fdfa; op3val:0x3f7143aa; valaddr_reg:x16; val_offset:1068; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1068, x17, x15, 56, x18)

inst_770:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6d9126 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x01fdfa and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7143aa and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6d9126; op2val:0xbf81fdfa; op3val:0x3f7143aa; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 64, x18)

inst_771:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x644c0a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3235c1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1eeccf and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f644c0a; op2val:0xbf3235c1; op3val:0x3f1eeccf; valaddr_reg:x16; val_offset:1092; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1092, x17, x15, 72, x18)

inst_772:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x644c0a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3235c1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1eeccf and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f644c0a; op2val:0xbf3235c1; op3val:0x3f1eeccf; valaddr_reg:x16; val_offset:1104; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1104, x17, x15, 80, x18)

inst_773:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x644c0a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3235c1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1eeccf and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f644c0a; op2val:0xbf3235c1; op3val:0x3f1eeccf; valaddr_reg:x16; val_offset:1116; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1116, x17, x15, 88, x18)

inst_774:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x644c0a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3235c1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1eeccf and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f644c0a; op2val:0xbf3235c1; op3val:0x3f1eeccf; valaddr_reg:x16; val_offset:1128; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1128, x17, x15, 96, x18)

inst_775:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x644c0a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3235c1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1eeccf and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f644c0a; op2val:0xbf3235c1; op3val:0x3f1eeccf; valaddr_reg:x16; val_offset:1140; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1140, x17, x15, 104, x18)

inst_776:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x415420 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x221c32 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x74d910 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec15420; op2val:0xc0221c32; op3val:0x3f74d910; valaddr_reg:x16; val_offset:1152; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1152, x17, x15, 112, x18)

inst_777:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x415420 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x221c32 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x74d910 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec15420; op2val:0xc0221c32; op3val:0x3f74d910; valaddr_reg:x16; val_offset:1164; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1164, x17, x15, 120, x18)

inst_778:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x415420 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x221c32 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x74d910 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec15420; op2val:0xc0221c32; op3val:0x3f74d910; valaddr_reg:x16; val_offset:1176; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1176, x17, x15, 128, x18)

inst_779:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x415420 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x221c32 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x74d910 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec15420; op2val:0xc0221c32; op3val:0x3f74d910; valaddr_reg:x16; val_offset:1188; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1188, x17, x15, 136, x18)

inst_780:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x415420 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x221c32 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x74d910 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec15420; op2val:0xc0221c32; op3val:0x3f74d910; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 144, x18)

inst_781:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x160846 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x37341d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x56bcea and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f160846; op2val:0xbfb7341d; op3val:0x3f56bcea; valaddr_reg:x16; val_offset:1212; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1212, x17, x15, 152, x18)

inst_782:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x160846 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x37341d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x56bcea and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f160846; op2val:0xbfb7341d; op3val:0x3f56bcea; valaddr_reg:x16; val_offset:1224; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1224, x17, x15, 160, x18)

inst_783:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x160846 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x37341d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x56bcea and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f160846; op2val:0xbfb7341d; op3val:0x3f56bcea; valaddr_reg:x16; val_offset:1236; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1236, x17, x15, 168, x18)

inst_784:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x160846 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x37341d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x56bcea and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f160846; op2val:0xbfb7341d; op3val:0x3f56bcea; valaddr_reg:x16; val_offset:1248; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1248, x17, x15, 176, x18)

inst_785:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x160846 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x37341d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x56bcea and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f160846; op2val:0xbfb7341d; op3val:0x3f56bcea; valaddr_reg:x16; val_offset:1260; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1260, x17, x15, 184, x18)

inst_786:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x59ab4b and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6a797d and fs3 == 0 and fe3 == 0x7d and fm3 == 0x475ddf and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f59ab4b; op2val:0xbeea797d; op3val:0x3ec75ddf; valaddr_reg:x16; val_offset:1272; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1272, x17, x15, 192, x18)

inst_787:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x59ab4b and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6a797d and fs3 == 0 and fe3 == 0x7d and fm3 == 0x475ddf and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f59ab4b; op2val:0xbeea797d; op3val:0x3ec75ddf; valaddr_reg:x16; val_offset:1284; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1284, x17, x15, 200, x18)

inst_788:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x59ab4b and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6a797d and fs3 == 0 and fe3 == 0x7d and fm3 == 0x475ddf and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f59ab4b; op2val:0xbeea797d; op3val:0x3ec75ddf; valaddr_reg:x16; val_offset:1296; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1296, x17, x15, 208, x18)

inst_789:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x59ab4b and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6a797d and fs3 == 0 and fe3 == 0x7d and fm3 == 0x475ddf and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f59ab4b; op2val:0xbeea797d; op3val:0x3ec75ddf; valaddr_reg:x16; val_offset:1308; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1308, x17, x15, 216, x18)

inst_790:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x59ab4b and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6a797d and fs3 == 0 and fe3 == 0x7d and fm3 == 0x475ddf and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f59ab4b; op2val:0xbeea797d; op3val:0x3ec75ddf; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 224, x18)

inst_791:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x351f2f and fs2 == 1 and fe2 == 0x7b and fm2 == 0x6d5e89 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x27f0c1 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f351f2f; op2val:0xbded5e89; op3val:0x3da7f0c1; valaddr_reg:x16; val_offset:1332; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1332, x17, x15, 232, x18)

inst_792:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x351f2f and fs2 == 1 and fe2 == 0x7b and fm2 == 0x6d5e89 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x27f0c1 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f351f2f; op2val:0xbded5e89; op3val:0x3da7f0c1; valaddr_reg:x16; val_offset:1344; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1344, x17, x15, 240, x18)

inst_793:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x351f2f and fs2 == 1 and fe2 == 0x7b and fm2 == 0x6d5e89 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x27f0c1 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f351f2f; op2val:0xbded5e89; op3val:0x3da7f0c1; valaddr_reg:x16; val_offset:1356; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1356, x17, x15, 248, x18)

inst_794:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x351f2f and fs2 == 1 and fe2 == 0x7b and fm2 == 0x6d5e89 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x27f0c1 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f351f2f; op2val:0xbded5e89; op3val:0x3da7f0c1; valaddr_reg:x16; val_offset:1368; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1368, x17, x15, 256, x18)

inst_795:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x351f2f and fs2 == 1 and fe2 == 0x7b and fm2 == 0x6d5e89 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x27f0c1 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f351f2f; op2val:0xbded5e89; op3val:0x3da7f0c1; valaddr_reg:x16; val_offset:1380; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1380, x17, x15, 264, x18)

inst_796:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x133a9f and fs2 == 1 and fe2 == 0x80 and fm2 == 0x409a13 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5d8928 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e933a9f; op2val:0xc0409a13; op3val:0x3f5d8928; valaddr_reg:x16; val_offset:1392; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1392, x17, x15, 272, x18)

inst_797:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x133a9f and fs2 == 1 and fe2 == 0x80 and fm2 == 0x409a13 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5d8928 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e933a9f; op2val:0xc0409a13; op3val:0x3f5d8928; valaddr_reg:x16; val_offset:1404; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1404, x17, x15, 280, x18)

inst_798:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x133a9f and fs2 == 1 and fe2 == 0x80 and fm2 == 0x409a13 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5d8928 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e933a9f; op2val:0xc0409a13; op3val:0x3f5d8928; valaddr_reg:x16; val_offset:1416; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1416, x17, x15, 288, x18)

inst_799:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x133a9f and fs2 == 1 and fe2 == 0x80 and fm2 == 0x409a13 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5d8928 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e933a9f; op2val:0xc0409a13; op3val:0x3f5d8928; valaddr_reg:x16; val_offset:1428; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1428, x17, x15, 296, x18)

inst_800:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x133a9f and fs2 == 1 and fe2 == 0x80 and fm2 == 0x409a13 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5d8928 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e933a9f; op2val:0xc0409a13; op3val:0x3f5d8928; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 304, x18)

inst_801:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3561e7 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x0a094d and fs3 == 0 and fe3 == 0x7a and fm3 == 0x439abb and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb561e7; op2val:0xbe0a094d; op3val:0x3d439abb; valaddr_reg:x16; val_offset:1452; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1452, x17, x15, 312, x18)

inst_802:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3561e7 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x0a094d and fs3 == 0 and fe3 == 0x7a and fm3 == 0x439abb and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb561e7; op2val:0xbe0a094d; op3val:0x3d439abb; valaddr_reg:x16; val_offset:1464; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1464, x17, x15, 320, x18)

inst_803:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3561e7 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x0a094d and fs3 == 0 and fe3 == 0x7a and fm3 == 0x439abb and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb561e7; op2val:0xbe0a094d; op3val:0x3d439abb; valaddr_reg:x16; val_offset:1476; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1476, x17, x15, 328, x18)

inst_804:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3561e7 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x0a094d and fs3 == 0 and fe3 == 0x7a and fm3 == 0x439abb and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb561e7; op2val:0xbe0a094d; op3val:0x3d439abb; valaddr_reg:x16; val_offset:1488; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1488, x17, x15, 336, x18)

inst_805:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3561e7 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x0a094d and fs3 == 0 and fe3 == 0x7a and fm3 == 0x439abb and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb561e7; op2val:0xbe0a094d; op3val:0x3d439abb; valaddr_reg:x16; val_offset:1500; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1500, x17, x15, 344, x18)

inst_806:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x21ba54 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x1e3163 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x47e067 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e21ba54; op2val:0xc09e3163; op3val:0x3f47e067; valaddr_reg:x16; val_offset:1512; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1512, x17, x15, 352, x18)

inst_807:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x21ba54 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x1e3163 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x47e067 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e21ba54; op2val:0xc09e3163; op3val:0x3f47e067; valaddr_reg:x16; val_offset:1524; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1524, x17, x15, 360, x18)

inst_808:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x21ba54 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x1e3163 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x47e067 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e21ba54; op2val:0xc09e3163; op3val:0x3f47e067; valaddr_reg:x16; val_offset:1536; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1536, x17, x15, 368, x18)

inst_809:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x21ba54 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x1e3163 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x47e067 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e21ba54; op2val:0xc09e3163; op3val:0x3f47e067; valaddr_reg:x16; val_offset:1548; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1548, x17, x15, 376, x18)

inst_810:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x21ba54 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x1e3163 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x47e067 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e21ba54; op2val:0xc09e3163; op3val:0x3f47e067; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 384, x18)

inst_811:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x18f600 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4bc023 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x737bc0 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e98f600; op2val:0xc04bc023; op3val:0x3f737bc0; valaddr_reg:x16; val_offset:1572; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1572, x17, x15, 392, x18)

inst_812:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x18f600 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4bc023 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x737bc0 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e98f600; op2val:0xc04bc023; op3val:0x3f737bc0; valaddr_reg:x16; val_offset:1584; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1584, x17, x15, 400, x18)

inst_813:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x18f600 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4bc023 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x737bc0 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e98f600; op2val:0xc04bc023; op3val:0x3f737bc0; valaddr_reg:x16; val_offset:1596; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1596, x17, x15, 408, x18)

inst_814:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x18f600 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4bc023 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x737bc0 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e98f600; op2val:0xc04bc023; op3val:0x3f737bc0; valaddr_reg:x16; val_offset:1608; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1608, x17, x15, 416, x18)

inst_815:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x18f600 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4bc023 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x737bc0 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e98f600; op2val:0xc04bc023; op3val:0x3f737bc0; valaddr_reg:x16; val_offset:1620; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1620, x17, x15, 424, x18)

inst_816:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x2e9ab7 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x2008fb and fs3 == 0 and fe3 == 0x75 and fm3 == 0x5a4da6 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3cae9ab7; op2val:0xbda008fb; op3val:0x3ada4da6; valaddr_reg:x16; val_offset:1632; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1632, x17, x15, 432, x18)

inst_817:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x2e9ab7 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x2008fb and fs3 == 0 and fe3 == 0x75 and fm3 == 0x5a4da6 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3cae9ab7; op2val:0xbda008fb; op3val:0x3ada4da6; valaddr_reg:x16; val_offset:1644; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1644, x17, x15, 440, x18)

inst_818:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x2e9ab7 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x2008fb and fs3 == 0 and fe3 == 0x75 and fm3 == 0x5a4da6 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3cae9ab7; op2val:0xbda008fb; op3val:0x3ada4da6; valaddr_reg:x16; val_offset:1656; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1656, x17, x15, 448, x18)

inst_819:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x2e9ab7 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x2008fb and fs3 == 0 and fe3 == 0x75 and fm3 == 0x5a4da6 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3cae9ab7; op2val:0xbda008fb; op3val:0x3ada4da6; valaddr_reg:x16; val_offset:1668; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1668, x17, x15, 456, x18)

inst_820:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x2e9ab7 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x2008fb and fs3 == 0 and fe3 == 0x75 and fm3 == 0x5a4da6 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3cae9ab7; op2val:0xbda008fb; op3val:0x3ada4da6; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 464, x18)

inst_821:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x797556 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x11c107 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0e078e and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f797556; op2val:0xbe91c107; op3val:0x3e8e078e; valaddr_reg:x16; val_offset:1692; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1692, x17, x15, 472, x18)

inst_822:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x797556 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x11c107 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0e078e and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f797556; op2val:0xbe91c107; op3val:0x3e8e078e; valaddr_reg:x16; val_offset:1704; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1704, x17, x15, 480, x18)

inst_823:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x797556 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x11c107 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0e078e and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f797556; op2val:0xbe91c107; op3val:0x3e8e078e; valaddr_reg:x16; val_offset:1716; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1716, x17, x15, 488, x18)

inst_824:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x797556 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x11c107 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0e078e and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f797556; op2val:0xbe91c107; op3val:0x3e8e078e; valaddr_reg:x16; val_offset:1728; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1728, x17, x15, 496, x18)

inst_825:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x797556 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x11c107 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0e078e and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f797556; op2val:0xbe91c107; op3val:0x3e8e078e; valaddr_reg:x16; val_offset:1740; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1740, x17, x15, 504, x18)

inst_826:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x553f5a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4ec439 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2c3c6f and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e553f5a; op2val:0xbfcec439; op3val:0x3eac3c6f; valaddr_reg:x16; val_offset:1752; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1752, x17, x15, 512, x18)

inst_827:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x553f5a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4ec439 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2c3c6f and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e553f5a; op2val:0xbfcec439; op3val:0x3eac3c6f; valaddr_reg:x16; val_offset:1764; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1764, x17, x15, 520, x18)

inst_828:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x553f5a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4ec439 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2c3c6f and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e553f5a; op2val:0xbfcec439; op3val:0x3eac3c6f; valaddr_reg:x16; val_offset:1776; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1776, x17, x15, 528, x18)

inst_829:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x553f5a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4ec439 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2c3c6f and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e553f5a; op2val:0xbfcec439; op3val:0x3eac3c6f; valaddr_reg:x16; val_offset:1788; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1788, x17, x15, 536, x18)

inst_830:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x553f5a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4ec439 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2c3c6f and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e553f5a; op2val:0xbfcec439; op3val:0x3eac3c6f; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 544, x18)

inst_831:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x451d75 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x6fec43 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x38bc6b and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f451d75; op2val:0xbe6fec43; op3val:0x3e38bc6b; valaddr_reg:x16; val_offset:1812; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1812, x17, x15, 552, x18)

inst_832:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x451d75 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x6fec43 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x38bc6b and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f451d75; op2val:0xbe6fec43; op3val:0x3e38bc6b; valaddr_reg:x16; val_offset:1824; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1824, x17, x15, 560, x18)

inst_833:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x451d75 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x6fec43 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x38bc6b and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f451d75; op2val:0xbe6fec43; op3val:0x3e38bc6b; valaddr_reg:x16; val_offset:1836; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1836, x17, x15, 568, x18)

inst_834:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x451d75 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x6fec43 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x38bc6b and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f451d75; op2val:0xbe6fec43; op3val:0x3e38bc6b; valaddr_reg:x16; val_offset:1848; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1848, x17, x15, 576, x18)

inst_835:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x451d75 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x6fec43 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x38bc6b and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f451d75; op2val:0xbe6fec43; op3val:0x3e38bc6b; valaddr_reg:x16; val_offset:1860; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1860, x17, x15, 584, x18)

inst_836:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x40b175 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x1e6af5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6e7c12 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e40b175; op2val:0xc09e6af5; op3val:0x3f6e7c12; valaddr_reg:x16; val_offset:1872; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1872, x17, x15, 592, x18)

inst_837:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x40b175 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x1e6af5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6e7c12 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e40b175; op2val:0xc09e6af5; op3val:0x3f6e7c12; valaddr_reg:x16; val_offset:1884; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1884, x17, x15, 600, x18)

inst_838:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x40b175 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x1e6af5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6e7c12 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e40b175; op2val:0xc09e6af5; op3val:0x3f6e7c12; valaddr_reg:x16; val_offset:1896; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1896, x17, x15, 608, x18)

inst_839:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x40b175 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x1e6af5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6e7c12 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e40b175; op2val:0xc09e6af5; op3val:0x3f6e7c12; valaddr_reg:x16; val_offset:1908; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1908, x17, x15, 616, x18)

inst_840:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x40b175 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x1e6af5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6e7c12 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e40b175; op2val:0xc09e6af5; op3val:0x3f6e7c12; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 624, x18)

inst_841:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x58b267 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x7a80b6 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x540b2c and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f58b267; op2val:0xbefa80b6; op3val:0x3ed40b2c; valaddr_reg:x16; val_offset:1932; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1932, x17, x15, 632, x18)

inst_842:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x58b267 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x7a80b6 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x540b2c and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f58b267; op2val:0xbefa80b6; op3val:0x3ed40b2c; valaddr_reg:x16; val_offset:1944; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1944, x17, x15, 640, x18)

inst_843:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x58b267 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x7a80b6 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x540b2c and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f58b267; op2val:0xbefa80b6; op3val:0x3ed40b2c; valaddr_reg:x16; val_offset:1956; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1956, x17, x15, 648, x18)

inst_844:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x58b267 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x7a80b6 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x540b2c and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f58b267; op2val:0xbefa80b6; op3val:0x3ed40b2c; valaddr_reg:x16; val_offset:1968; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1968, x17, x15, 656, x18)

inst_845:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x58b267 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x7a80b6 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x540b2c and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f58b267; op2val:0xbefa80b6; op3val:0x3ed40b2c; valaddr_reg:x16; val_offset:1980; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1980, x17, x15, 664, x18)

inst_846:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0097ea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2a8a69 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2b54d1 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0097ea; op2val:0xbfaa8a69; op3val:0x3f2b54d1; valaddr_reg:x16; val_offset:1992; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1992, x17, x15, 672, x18)

inst_847:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0097ea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2a8a69 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2b54d1 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0097ea; op2val:0xbfaa8a69; op3val:0x3f2b54d1; valaddr_reg:x16; val_offset:2004; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 2004, x17, x15, 680, x18)

inst_848:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0097ea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2a8a69 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2b54d1 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0097ea; op2val:0xbfaa8a69; op3val:0x3f2b54d1; valaddr_reg:x16; val_offset:2016; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 2016, x17, x15, 688, x18)

inst_849:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0097ea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2a8a69 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2b54d1 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0097ea; op2val:0xbfaa8a69; op3val:0x3f2b54d1; valaddr_reg:x16; val_offset:2028; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 2028, x17, x15, 696, x18)
addi x16,x16,2040

inst_850:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0097ea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2a8a69 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2b54d1 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0097ea; op2val:0xbfaa8a69; op3val:0x3f2b54d1; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 704, x18)

inst_851:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0586c0 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5d4ee9 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x66dcf9 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0586c0; op2val:0xbf5d4ee9; op3val:0x3ee6dcf9; valaddr_reg:x16; val_offset:12; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 12, x17, x15, 712, x18)

inst_852:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0586c0 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5d4ee9 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x66dcf9 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0586c0; op2val:0xbf5d4ee9; op3val:0x3ee6dcf9; valaddr_reg:x16; val_offset:24; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 24, x17, x15, 720, x18)

inst_853:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0586c0 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5d4ee9 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x66dcf9 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0586c0; op2val:0xbf5d4ee9; op3val:0x3ee6dcf9; valaddr_reg:x16; val_offset:36; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 36, x17, x15, 728, x18)

inst_854:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0586c0 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5d4ee9 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x66dcf9 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0586c0; op2val:0xbf5d4ee9; op3val:0x3ee6dcf9; valaddr_reg:x16; val_offset:48; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 48, x17, x15, 736, x18)

inst_855:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0586c0 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5d4ee9 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x66dcf9 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0586c0; op2val:0xbf5d4ee9; op3val:0x3ee6dcf9; valaddr_reg:x16; val_offset:60; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 60, x17, x15, 744, x18)

inst_856:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x36efb3 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x199082 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5b790c and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3db6efb3; op2val:0xc1199082; op3val:0x3f5b790c; valaddr_reg:x16; val_offset:72; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 72, x17, x15, 752, x18)

inst_857:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x36efb3 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x199082 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5b790c and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3db6efb3; op2val:0xc1199082; op3val:0x3f5b790c; valaddr_reg:x16; val_offset:84; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 84, x17, x15, 760, x18)

inst_858:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x36efb3 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x199082 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5b790c and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3db6efb3; op2val:0xc1199082; op3val:0x3f5b790c; valaddr_reg:x16; val_offset:96; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 96, x17, x15, 768, x18)

inst_859:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x36efb3 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x199082 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5b790c and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3db6efb3; op2val:0xc1199082; op3val:0x3f5b790c; valaddr_reg:x16; val_offset:108; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 108, x17, x15, 776, x18)

inst_860:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x36efb3 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x199082 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5b790c and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3db6efb3; op2val:0xc1199082; op3val:0x3f5b790c; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 784, x18)

inst_861:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x36b10a and fs2 == 1 and fe2 == 0x7d and fm2 == 0x1d50d7 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x608889 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f36b10a; op2val:0xbe9d50d7; op3val:0x3e608889; valaddr_reg:x16; val_offset:132; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 132, x17, x15, 792, x18)

inst_862:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x36b10a and fs2 == 1 and fe2 == 0x7d and fm2 == 0x1d50d7 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x608889 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f36b10a; op2val:0xbe9d50d7; op3val:0x3e608889; valaddr_reg:x16; val_offset:144; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 144, x17, x15, 800, x18)

inst_863:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x36b10a and fs2 == 1 and fe2 == 0x7d and fm2 == 0x1d50d7 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x608889 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f36b10a; op2val:0xbe9d50d7; op3val:0x3e608889; valaddr_reg:x16; val_offset:156; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 156, x17, x15, 808, x18)

inst_864:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x36b10a and fs2 == 1 and fe2 == 0x7d and fm2 == 0x1d50d7 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x608889 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f36b10a; op2val:0xbe9d50d7; op3val:0x3e608889; valaddr_reg:x16; val_offset:168; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 168, x17, x15, 816, x18)

inst_865:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x36b10a and fs2 == 1 and fe2 == 0x7d and fm2 == 0x1d50d7 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x608889 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f36b10a; op2val:0xbe9d50d7; op3val:0x3e608889; valaddr_reg:x16; val_offset:180; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 180, x17, x15, 824, x18)

inst_866:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1c5a92 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6dbc0c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1132b3 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e9c5a92; op2val:0xbfedbc0c; op3val:0x3f1132b3; valaddr_reg:x16; val_offset:192; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 192, x17, x15, 832, x18)

inst_867:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1c5a92 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6dbc0c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1132b3 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e9c5a92; op2val:0xbfedbc0c; op3val:0x3f1132b3; valaddr_reg:x16; val_offset:204; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 204, x17, x15, 840, x18)

inst_868:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1c5a92 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6dbc0c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1132b3 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e9c5a92; op2val:0xbfedbc0c; op3val:0x3f1132b3; valaddr_reg:x16; val_offset:216; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 216, x17, x15, 848, x18)

inst_869:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1c5a92 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6dbc0c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1132b3 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e9c5a92; op2val:0xbfedbc0c; op3val:0x3f1132b3; valaddr_reg:x16; val_offset:228; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 228, x17, x15, 856, x18)

inst_870:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1c5a92 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6dbc0c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1132b3 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e9c5a92; op2val:0xbfedbc0c; op3val:0x3f1132b3; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 864, x18)

inst_871:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6f1711 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x338208 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x27a692 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6f1711; op2val:0xbe338208; op3val:0x3e27a692; valaddr_reg:x16; val_offset:252; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 252, x17, x15, 872, x18)

inst_872:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6f1711 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x338208 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x27a692 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6f1711; op2val:0xbe338208; op3val:0x3e27a692; valaddr_reg:x16; val_offset:264; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 264, x17, x15, 880, x18)

inst_873:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6f1711 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x338208 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x27a692 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6f1711; op2val:0xbe338208; op3val:0x3e27a692; valaddr_reg:x16; val_offset:276; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 276, x17, x15, 888, x18)

inst_874:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6f1711 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x338208 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x27a692 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6f1711; op2val:0xbe338208; op3val:0x3e27a692; valaddr_reg:x16; val_offset:288; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 288, x17, x15, 896, x18)

inst_875:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6f1711 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x338208 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x27a692 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6f1711; op2val:0xbe338208; op3val:0x3e27a692; valaddr_reg:x16; val_offset:300; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 300, x17, x15, 904, x18)

inst_876:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x341bf1 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x776568 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x2e0e4f and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f341bf1; op2val:0xbe776568; op3val:0x3e2e0e4f; valaddr_reg:x16; val_offset:312; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 312, x17, x15, 912, x18)

inst_877:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x341bf1 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x776568 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x2e0e4f and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f341bf1; op2val:0xbe776568; op3val:0x3e2e0e4f; valaddr_reg:x16; val_offset:324; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 324, x17, x15, 920, x18)

inst_878:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x341bf1 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x776568 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x2e0e4f and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f341bf1; op2val:0xbe776568; op3val:0x3e2e0e4f; valaddr_reg:x16; val_offset:336; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 336, x17, x15, 928, x18)

inst_879:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x341bf1 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x776568 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x2e0e4f and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f341bf1; op2val:0xbe776568; op3val:0x3e2e0e4f; valaddr_reg:x16; val_offset:348; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 348, x17, x15, 936, x18)

inst_880:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x341bf1 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x776568 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x2e0e4f and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f341bf1; op2val:0xbe776568; op3val:0x3e2e0e4f; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 944, x18)

inst_881:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x17a729 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2d9ef5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4db443 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e17a729; op2val:0xc0ad9ef5; op3val:0x3f4db443; valaddr_reg:x16; val_offset:372; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 372, x17, x15, 952, x18)

inst_882:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x17a729 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2d9ef5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4db443 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e17a729; op2val:0xc0ad9ef5; op3val:0x3f4db443; valaddr_reg:x16; val_offset:384; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 384, x17, x15, 960, x18)

inst_883:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x17a729 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2d9ef5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4db443 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e17a729; op2val:0xc0ad9ef5; op3val:0x3f4db443; valaddr_reg:x16; val_offset:396; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 396, x17, x15, 968, x18)

inst_884:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x17a729 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2d9ef5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4db443 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e17a729; op2val:0xc0ad9ef5; op3val:0x3f4db443; valaddr_reg:x16; val_offset:408; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 408, x17, x15, 976, x18)

inst_885:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x17a729 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2d9ef5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4db443 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e17a729; op2val:0xc0ad9ef5; op3val:0x3f4db443; valaddr_reg:x16; val_offset:420; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 420, x17, x15, 984, x18)

inst_886:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1d51a1 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7d5645 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1baeb0 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1d51a1; op2val:0xbf7d5645; op3val:0x3f1baeb0; valaddr_reg:x16; val_offset:432; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 432, x17, x15, 992, x18)

inst_887:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1d51a1 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7d5645 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1baeb0 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1d51a1; op2val:0xbf7d5645; op3val:0x3f1baeb0; valaddr_reg:x16; val_offset:444; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 444, x17, x15, 1000, x18)

inst_888:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1d51a1 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7d5645 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1baeb0 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1d51a1; op2val:0xbf7d5645; op3val:0x3f1baeb0; valaddr_reg:x16; val_offset:456; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 456, x17, x15, 1008, x18)

inst_889:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1d51a1 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7d5645 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1baeb0 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1d51a1; op2val:0xbf7d5645; op3val:0x3f1baeb0; valaddr_reg:x16; val_offset:468; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 468, x17, x15, 1016, x18)

inst_890:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1d51a1 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7d5645 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1baeb0 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1d51a1; op2val:0xbf7d5645; op3val:0x3f1baeb0; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1024, x18)

inst_891:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x04a392 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x2e7bc2 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x34ce9a and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f04a392; op2val:0xbe2e7bc2; op3val:0x3db4ce9a; valaddr_reg:x16; val_offset:492; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 492, x17, x15, 1032, x18)

inst_892:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x04a392 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x2e7bc2 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x34ce9a and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f04a392; op2val:0xbe2e7bc2; op3val:0x3db4ce9a; valaddr_reg:x16; val_offset:504; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 504, x17, x15, 1040, x18)

inst_893:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x04a392 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x2e7bc2 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x34ce9a and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f04a392; op2val:0xbe2e7bc2; op3val:0x3db4ce9a; valaddr_reg:x16; val_offset:516; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 516, x17, x15, 1048, x18)

inst_894:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x04a392 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x2e7bc2 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x34ce9a and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f04a392; op2val:0xbe2e7bc2; op3val:0x3db4ce9a; valaddr_reg:x16; val_offset:528; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 528, x17, x15, 1056, x18)

inst_895:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x04a392 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x2e7bc2 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x34ce9a and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f04a392; op2val:0xbe2e7bc2; op3val:0x3db4ce9a; valaddr_reg:x16; val_offset:540; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 540, x17, x15, 1064, x18)

inst_896:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x156945 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x214fe0 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3c4ba6 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e956945; op2val:0xbfa14fe0; op3val:0x3ebc4ba6; valaddr_reg:x16; val_offset:552; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 552, x17, x15, 1072, x18)

inst_897:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x156945 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x214fe0 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3c4ba6 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e956945; op2val:0xbfa14fe0; op3val:0x3ebc4ba6; valaddr_reg:x16; val_offset:564; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 564, x17, x15, 1080, x18)

inst_898:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x156945 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x214fe0 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3c4ba6 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e956945; op2val:0xbfa14fe0; op3val:0x3ebc4ba6; valaddr_reg:x16; val_offset:576; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 576, x17, x15, 1088, x18)

inst_899:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x156945 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x214fe0 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3c4ba6 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e956945; op2val:0xbfa14fe0; op3val:0x3ebc4ba6; valaddr_reg:x16; val_offset:588; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 588, x17, x15, 1096, x18)

inst_900:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x156945 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x214fe0 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3c4ba6 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e956945; op2val:0xbfa14fe0; op3val:0x3ebc4ba6; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1104, x18)

inst_901:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x12802f and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3dd55d and fs3 == 0 and fe3 == 0x7d and fm3 == 0x59457a and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f12802f; op2val:0xbf3dd55d; op3val:0x3ed9457a; valaddr_reg:x16; val_offset:612; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 612, x17, x15, 1112, x18)

inst_902:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x12802f and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3dd55d and fs3 == 0 and fe3 == 0x7d and fm3 == 0x59457a and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f12802f; op2val:0xbf3dd55d; op3val:0x3ed9457a; valaddr_reg:x16; val_offset:624; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 624, x17, x15, 1120, x18)

inst_903:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x12802f and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3dd55d and fs3 == 0 and fe3 == 0x7d and fm3 == 0x59457a and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f12802f; op2val:0xbf3dd55d; op3val:0x3ed9457a; valaddr_reg:x16; val_offset:636; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 636, x17, x15, 1128, x18)

inst_904:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x12802f and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3dd55d and fs3 == 0 and fe3 == 0x7d and fm3 == 0x59457a and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f12802f; op2val:0xbf3dd55d; op3val:0x3ed9457a; valaddr_reg:x16; val_offset:648; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 648, x17, x15, 1136, x18)

inst_905:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x12802f and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3dd55d and fs3 == 0 and fe3 == 0x7d and fm3 == 0x59457a and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f12802f; op2val:0xbf3dd55d; op3val:0x3ed9457a; valaddr_reg:x16; val_offset:660; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 660, x17, x15, 1144, x18)

inst_906:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7c45c3 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x664a0e and fs3 == 0 and fe3 == 0x7c and fm3 == 0x62efa7 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7c45c3; op2val:0xbe664a0e; op3val:0x3e62efa7; valaddr_reg:x16; val_offset:672; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 672, x17, x15, 1152, x18)

inst_907:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7c45c3 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x664a0e and fs3 == 0 and fe3 == 0x7c and fm3 == 0x62efa7 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7c45c3; op2val:0xbe664a0e; op3val:0x3e62efa7; valaddr_reg:x16; val_offset:684; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 684, x17, x15, 1160, x18)

inst_908:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7c45c3 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x664a0e and fs3 == 0 and fe3 == 0x7c and fm3 == 0x62efa7 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7c45c3; op2val:0xbe664a0e; op3val:0x3e62efa7; valaddr_reg:x16; val_offset:696; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 696, x17, x15, 1168, x18)

inst_909:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7c45c3 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x664a0e and fs3 == 0 and fe3 == 0x7c and fm3 == 0x62efa7 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7c45c3; op2val:0xbe664a0e; op3val:0x3e62efa7; valaddr_reg:x16; val_offset:708; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 708, x17, x15, 1176, x18)

inst_910:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7c45c3 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x664a0e and fs3 == 0 and fe3 == 0x7c and fm3 == 0x62efa7 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7c45c3; op2val:0xbe664a0e; op3val:0x3e62efa7; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1184, x18)

inst_911:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x657f69 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x01c30d and fs3 == 0 and fe3 == 0x7d and fm3 == 0x68a820 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3de57f69; op2val:0xc081c30d; op3val:0x3ee8a820; valaddr_reg:x16; val_offset:732; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 732, x17, x15, 1192, x18)

inst_912:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x657f69 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x01c30d and fs3 == 0 and fe3 == 0x7d and fm3 == 0x68a820 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3de57f69; op2val:0xc081c30d; op3val:0x3ee8a820; valaddr_reg:x16; val_offset:744; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 744, x17, x15, 1200, x18)

inst_913:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x657f69 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x01c30d and fs3 == 0 and fe3 == 0x7d and fm3 == 0x68a820 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3de57f69; op2val:0xc081c30d; op3val:0x3ee8a820; valaddr_reg:x16; val_offset:756; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 756, x17, x15, 1208, x18)

inst_914:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x657f69 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x01c30d and fs3 == 0 and fe3 == 0x7d and fm3 == 0x68a820 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3de57f69; op2val:0xc081c30d; op3val:0x3ee8a820; valaddr_reg:x16; val_offset:768; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 768, x17, x15, 1216, x18)

inst_915:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x657f69 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x01c30d and fs3 == 0 and fe3 == 0x7d and fm3 == 0x68a820 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3de57f69; op2val:0xc081c30d; op3val:0x3ee8a820; valaddr_reg:x16; val_offset:780; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 780, x17, x15, 1224, x18)

inst_916:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0b5ce6 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x1ced5e and fs3 == 0 and fe3 == 0x7b and fm3 == 0x2adba8 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0b5ce6; op2val:0xbe1ced5e; op3val:0x3daadba8; valaddr_reg:x16; val_offset:792; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 792, x17, x15, 1232, x18)

inst_917:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0b5ce6 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x1ced5e and fs3 == 0 and fe3 == 0x7b and fm3 == 0x2adba8 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0b5ce6; op2val:0xbe1ced5e; op3val:0x3daadba8; valaddr_reg:x16; val_offset:804; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 804, x17, x15, 1240, x18)

inst_918:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0b5ce6 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x1ced5e and fs3 == 0 and fe3 == 0x7b and fm3 == 0x2adba8 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0b5ce6; op2val:0xbe1ced5e; op3val:0x3daadba8; valaddr_reg:x16; val_offset:816; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 816, x17, x15, 1248, x18)

inst_919:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0b5ce6 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x1ced5e and fs3 == 0 and fe3 == 0x7b and fm3 == 0x2adba8 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0b5ce6; op2val:0xbe1ced5e; op3val:0x3daadba8; valaddr_reg:x16; val_offset:828; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 828, x17, x15, 1256, x18)

inst_920:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0b5ce6 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x1ced5e and fs3 == 0 and fe3 == 0x7b and fm3 == 0x2adba8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0b5ce6; op2val:0xbe1ced5e; op3val:0x3daadba8; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1264, x18)

inst_921:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x76ac98 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x469d74 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3f6135 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f76ac98; op2val:0xbf469d74; op3val:0x3f3f6135; valaddr_reg:x16; val_offset:852; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 852, x17, x15, 1272, x18)

inst_922:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x76ac98 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x469d74 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3f6135 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f76ac98; op2val:0xbf469d74; op3val:0x3f3f6135; valaddr_reg:x16; val_offset:864; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 864, x17, x15, 1280, x18)

inst_923:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x76ac98 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x469d74 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3f6135 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f76ac98; op2val:0xbf469d74; op3val:0x3f3f6135; valaddr_reg:x16; val_offset:876; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 876, x17, x15, 1288, x18)

inst_924:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x76ac98 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x469d74 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3f6135 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f76ac98; op2val:0xbf469d74; op3val:0x3f3f6135; valaddr_reg:x16; val_offset:888; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 888, x17, x15, 1296, x18)

inst_925:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x76ac98 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x469d74 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3f6135 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f76ac98; op2val:0xbf469d74; op3val:0x3f3f6135; valaddr_reg:x16; val_offset:900; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 900, x17, x15, 1304, x18)

inst_926:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x028d1b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4d69f1 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x51820b and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e828d1b; op2val:0xbfcd69f1; op3val:0x3ed1820b; valaddr_reg:x16; val_offset:912; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 912, x17, x15, 1312, x18)

inst_927:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x028d1b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4d69f1 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x51820b and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e828d1b; op2val:0xbfcd69f1; op3val:0x3ed1820b; valaddr_reg:x16; val_offset:924; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 924, x17, x15, 1320, x18)

inst_928:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x028d1b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4d69f1 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x51820b and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e828d1b; op2val:0xbfcd69f1; op3val:0x3ed1820b; valaddr_reg:x16; val_offset:936; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 936, x17, x15, 1328, x18)

inst_929:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x028d1b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4d69f1 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x51820b and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e828d1b; op2val:0xbfcd69f1; op3val:0x3ed1820b; valaddr_reg:x16; val_offset:948; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 948, x17, x15, 1336, x18)

inst_930:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x028d1b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4d69f1 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x51820b and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e828d1b; op2val:0xbfcd69f1; op3val:0x3ed1820b; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 1344, x18)

inst_931:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x09213a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x18aefc and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2392ec and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f09213a; op2val:0xbf98aefc; op3val:0x3f2392ec; valaddr_reg:x16; val_offset:972; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 972, x17, x15, 1352, x18)

inst_932:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x09213a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x18aefc and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2392ec and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f09213a; op2val:0xbf98aefc; op3val:0x3f2392ec; valaddr_reg:x16; val_offset:984; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 984, x17, x15, 1360, x18)

inst_933:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x09213a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x18aefc and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2392ec and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f09213a; op2val:0xbf98aefc; op3val:0x3f2392ec; valaddr_reg:x16; val_offset:996; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 996, x17, x15, 1368, x18)

inst_934:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x09213a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x18aefc and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2392ec and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f09213a; op2val:0xbf98aefc; op3val:0x3f2392ec; valaddr_reg:x16; val_offset:1008; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1008, x17, x15, 1376, x18)

inst_935:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x09213a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x18aefc and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2392ec and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f09213a; op2val:0xbf98aefc; op3val:0x3f2392ec; valaddr_reg:x16; val_offset:1020; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1020, x17, x15, 1384, x18)

inst_936:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x340376 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2b283b and fs3 == 0 and fe3 == 0x7d and fm3 == 0x70b534 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f340376; op2val:0xbf2b283b; op3val:0x3ef0b534; valaddr_reg:x16; val_offset:1032; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1032, x17, x15, 1392, x18)

inst_937:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x340376 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2b283b and fs3 == 0 and fe3 == 0x7d and fm3 == 0x70b534 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f340376; op2val:0xbf2b283b; op3val:0x3ef0b534; valaddr_reg:x16; val_offset:1044; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1044, x17, x15, 1400, x18)

inst_938:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x340376 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2b283b and fs3 == 0 and fe3 == 0x7d and fm3 == 0x70b534 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f340376; op2val:0xbf2b283b; op3val:0x3ef0b534; valaddr_reg:x16; val_offset:1056; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1056, x17, x15, 1408, x18)

inst_939:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x340376 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2b283b and fs3 == 0 and fe3 == 0x7d and fm3 == 0x70b534 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f340376; op2val:0xbf2b283b; op3val:0x3ef0b534; valaddr_reg:x16; val_offset:1068; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1068, x17, x15, 1416, x18)

inst_940:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x340376 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2b283b and fs3 == 0 and fe3 == 0x7d and fm3 == 0x70b534 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f340376; op2val:0xbf2b283b; op3val:0x3ef0b534; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 1424, x18)

inst_941:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6ed95c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x362816 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x29f3ee and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eeed95c; op2val:0xbfb62816; op3val:0x3f29f3ee; valaddr_reg:x16; val_offset:1092; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1092, x17, x15, 1432, x18)

inst_942:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6ed95c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x362816 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x29f3ee and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eeed95c; op2val:0xbfb62816; op3val:0x3f29f3ee; valaddr_reg:x16; val_offset:1104; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1104, x17, x15, 1440, x18)

inst_943:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6ed95c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x362816 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x29f3ee and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eeed95c; op2val:0xbfb62816; op3val:0x3f29f3ee; valaddr_reg:x16; val_offset:1116; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1116, x17, x15, 1448, x18)

inst_944:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6ed95c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x362816 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x29f3ee and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eeed95c; op2val:0xbfb62816; op3val:0x3f29f3ee; valaddr_reg:x16; val_offset:1128; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1128, x17, x15, 1456, x18)

inst_945:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6ed95c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x362816 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x29f3ee and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eeed95c; op2val:0xbfb62816; op3val:0x3f29f3ee; valaddr_reg:x16; val_offset:1140; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1140, x17, x15, 1464, x18)

inst_946:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x755a0c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3acb03 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3305fe and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e755a0c; op2val:0xc03acb03; op3val:0x3f3305fe; valaddr_reg:x16; val_offset:1152; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1152, x17, x15, 1472, x18)

inst_947:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x755a0c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3acb03 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3305fe and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e755a0c; op2val:0xc03acb03; op3val:0x3f3305fe; valaddr_reg:x16; val_offset:1164; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1164, x17, x15, 1480, x18)

inst_948:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x755a0c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3acb03 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3305fe and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e755a0c; op2val:0xc03acb03; op3val:0x3f3305fe; valaddr_reg:x16; val_offset:1176; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1176, x17, x15, 1488, x18)

inst_949:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x755a0c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3acb03 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3305fe and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e755a0c; op2val:0xc03acb03; op3val:0x3f3305fe; valaddr_reg:x16; val_offset:1188; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1188, x17, x15, 1496, x18)

inst_950:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x755a0c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3acb03 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3305fe and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e755a0c; op2val:0xc03acb03; op3val:0x3f3305fe; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 1504, x18)

inst_951:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x035779 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x5c00a7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x61bf05 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e835779; op2val:0xc05c00a7; op3val:0x3f61bf05; valaddr_reg:x16; val_offset:1212; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1212, x17, x15, 1512, x18)

inst_952:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x035779 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x5c00a7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x61bf05 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e835779; op2val:0xc05c00a7; op3val:0x3f61bf05; valaddr_reg:x16; val_offset:1224; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1224, x17, x15, 1520, x18)

inst_953:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x035779 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x5c00a7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x61bf05 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e835779; op2val:0xc05c00a7; op3val:0x3f61bf05; valaddr_reg:x16; val_offset:1236; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1236, x17, x15, 1528, x18)

inst_954:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x035779 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x5c00a7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x61bf05 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e835779; op2val:0xc05c00a7; op3val:0x3f61bf05; valaddr_reg:x16; val_offset:1248; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1248, x17, x15, 1536, x18)

inst_955:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x035779 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x5c00a7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x61bf05 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e835779; op2val:0xc05c00a7; op3val:0x3f61bf05; valaddr_reg:x16; val_offset:1260; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1260, x17, x15, 1544, x18)

inst_956:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x35d2bb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0ec945 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4ad3af and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb5d2bb; op2val:0xbf8ec945; op3val:0x3ecad3af; valaddr_reg:x16; val_offset:1272; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1272, x17, x15, 1552, x18)

inst_957:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x35d2bb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0ec945 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4ad3af and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb5d2bb; op2val:0xbf8ec945; op3val:0x3ecad3af; valaddr_reg:x16; val_offset:1284; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1284, x17, x15, 1560, x18)

inst_958:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x35d2bb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0ec945 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4ad3af and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb5d2bb; op2val:0xbf8ec945; op3val:0x3ecad3af; valaddr_reg:x16; val_offset:1296; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1296, x17, x15, 1568, x18)

inst_959:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x35d2bb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0ec945 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4ad3af and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb5d2bb; op2val:0xbf8ec945; op3val:0x3ecad3af; valaddr_reg:x16; val_offset:1308; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1308, x17, x15, 1576, x18)

inst_960:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x35d2bb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0ec945 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4ad3af and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb5d2bb; op2val:0xbf8ec945; op3val:0x3ecad3af; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 1584, x18)

inst_961:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x48af4c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2b90bc and fs3 == 0 and fe3 == 0x7e and fm3 == 0x067e8e and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec8af4c; op2val:0xbfab90bc; op3val:0x3f067e8e; valaddr_reg:x16; val_offset:1332; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1332, x17, x15, 1592, x18)

inst_962:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x48af4c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2b90bc and fs3 == 0 and fe3 == 0x7e and fm3 == 0x067e8e and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec8af4c; op2val:0xbfab90bc; op3val:0x3f067e8e; valaddr_reg:x16; val_offset:1344; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1344, x17, x15, 1600, x18)

inst_963:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x48af4c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2b90bc and fs3 == 0 and fe3 == 0x7e and fm3 == 0x067e8e and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec8af4c; op2val:0xbfab90bc; op3val:0x3f067e8e; valaddr_reg:x16; val_offset:1356; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1356, x17, x15, 1608, x18)

inst_964:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x48af4c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2b90bc and fs3 == 0 and fe3 == 0x7e and fm3 == 0x067e8e and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec8af4c; op2val:0xbfab90bc; op3val:0x3f067e8e; valaddr_reg:x16; val_offset:1368; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1368, x17, x15, 1616, x18)

inst_965:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x48af4c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2b90bc and fs3 == 0 and fe3 == 0x7e and fm3 == 0x067e8e and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec8af4c; op2val:0xbfab90bc; op3val:0x3f067e8e; valaddr_reg:x16; val_offset:1380; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1380, x17, x15, 1624, x18)

inst_966:
// fs1 == 0 and fe1 == 0x78 and fm1 == 0x37167d and fs2 == 1 and fe2 == 0x84 and fm2 == 0x7d008a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x34f19d and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3c37167d; op2val:0xc27d008a; op3val:0x3f34f19d; valaddr_reg:x16; val_offset:1392; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1392, x17, x15, 1632, x18)

inst_967:
// fs1 == 0 and fe1 == 0x78 and fm1 == 0x37167d and fs2 == 1 and fe2 == 0x84 and fm2 == 0x7d008a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x34f19d and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3c37167d; op2val:0xc27d008a; op3val:0x3f34f19d; valaddr_reg:x16; val_offset:1404; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1404, x17, x15, 1640, x18)

inst_968:
// fs1 == 0 and fe1 == 0x78 and fm1 == 0x37167d and fs2 == 1 and fe2 == 0x84 and fm2 == 0x7d008a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x34f19d and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3c37167d; op2val:0xc27d008a; op3val:0x3f34f19d; valaddr_reg:x16; val_offset:1416; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1416, x17, x15, 1648, x18)

inst_969:
// fs1 == 0 and fe1 == 0x78 and fm1 == 0x37167d and fs2 == 1 and fe2 == 0x84 and fm2 == 0x7d008a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x34f19d and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3c37167d; op2val:0xc27d008a; op3val:0x3f34f19d; valaddr_reg:x16; val_offset:1428; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1428, x17, x15, 1656, x18)

inst_970:
// fs1 == 0 and fe1 == 0x78 and fm1 == 0x37167d and fs2 == 1 and fe2 == 0x84 and fm2 == 0x7d008a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x34f19d and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3c37167d; op2val:0xc27d008a; op3val:0x3f34f19d; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 1664, x18)

inst_971:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3b78c4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x13bcd8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x586147 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3b78c4; op2val:0xbf93bcd8; op3val:0x3f586147; valaddr_reg:x16; val_offset:1452; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1452, x17, x15, 1672, x18)

inst_972:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3b78c4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x13bcd8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x586147 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3b78c4; op2val:0xbf93bcd8; op3val:0x3f586147; valaddr_reg:x16; val_offset:1464; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1464, x17, x15, 1680, x18)

inst_973:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3b78c4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x13bcd8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x586147 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3b78c4; op2val:0xbf93bcd8; op3val:0x3f586147; valaddr_reg:x16; val_offset:1476; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1476, x17, x15, 1688, x18)

inst_974:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3b78c4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x13bcd8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x586147 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3b78c4; op2val:0xbf93bcd8; op3val:0x3f586147; valaddr_reg:x16; val_offset:1488; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1488, x17, x15, 1696, x18)

inst_975:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3b78c4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x13bcd8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x586147 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3b78c4; op2val:0xbf93bcd8; op3val:0x3f586147; valaddr_reg:x16; val_offset:1500; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1500, x17, x15, 1704, x18)

inst_976:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5f53b5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x5d5d05 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x411c6a and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e5f53b5; op2val:0xc05d5d05; op3val:0x3f411c6a; valaddr_reg:x16; val_offset:1512; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1512, x17, x15, 1712, x18)

inst_977:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5f53b5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x5d5d05 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x411c6a and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e5f53b5; op2val:0xc05d5d05; op3val:0x3f411c6a; valaddr_reg:x16; val_offset:1524; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1524, x17, x15, 1720, x18)

inst_978:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5f53b5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x5d5d05 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x411c6a and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e5f53b5; op2val:0xc05d5d05; op3val:0x3f411c6a; valaddr_reg:x16; val_offset:1536; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1536, x17, x15, 1728, x18)

inst_979:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5f53b5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x5d5d05 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x411c6a and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e5f53b5; op2val:0xc05d5d05; op3val:0x3f411c6a; valaddr_reg:x16; val_offset:1548; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1548, x17, x15, 1736, x18)

inst_980:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5f53b5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x5d5d05 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x411c6a and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e5f53b5; op2val:0xc05d5d05; op3val:0x3f411c6a; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1744, x18)

inst_981:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x39e90d and fs2 == 1 and fe2 == 0x7b and fm2 == 0x3697e8 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x049a01 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f39e90d; op2val:0xbdb697e8; op3val:0x3d849a01; valaddr_reg:x16; val_offset:1572; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1572, x17, x15, 1752, x18)

inst_982:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x39e90d and fs2 == 1 and fe2 == 0x7b and fm2 == 0x3697e8 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x049a01 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f39e90d; op2val:0xbdb697e8; op3val:0x3d849a01; valaddr_reg:x16; val_offset:1584; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1584, x17, x15, 1760, x18)

inst_983:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x39e90d and fs2 == 1 and fe2 == 0x7b and fm2 == 0x3697e8 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x049a01 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f39e90d; op2val:0xbdb697e8; op3val:0x3d849a01; valaddr_reg:x16; val_offset:1596; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1596, x17, x15, 1768, x18)

inst_984:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x39e90d and fs2 == 1 and fe2 == 0x7b and fm2 == 0x3697e8 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x049a01 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f39e90d; op2val:0xbdb697e8; op3val:0x3d849a01; valaddr_reg:x16; val_offset:1608; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1608, x17, x15, 1776, x18)

inst_985:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x39e90d and fs2 == 1 and fe2 == 0x7b and fm2 == 0x3697e8 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x049a01 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f39e90d; op2val:0xbdb697e8; op3val:0x3d849a01; valaddr_reg:x16; val_offset:1620; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1620, x17, x15, 1784, x18)

inst_986:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7c9eb5 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x728771 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6f53af and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7c9eb5; op2val:0xbef28771; op3val:0x3eef53af; valaddr_reg:x16; val_offset:1632; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1632, x17, x15, 1792, x18)

inst_987:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7c9eb5 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x728771 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6f53af and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7c9eb5; op2val:0xbef28771; op3val:0x3eef53af; valaddr_reg:x16; val_offset:1644; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1644, x17, x15, 1800, x18)

inst_988:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7c9eb5 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x728771 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6f53af and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7c9eb5; op2val:0xbef28771; op3val:0x3eef53af; valaddr_reg:x16; val_offset:1656; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1656, x17, x15, 1808, x18)

inst_989:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7c9eb5 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x728771 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6f53af and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7c9eb5; op2val:0xbef28771; op3val:0x3eef53af; valaddr_reg:x16; val_offset:1668; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1668, x17, x15, 1816, x18)

inst_990:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7c9eb5 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x728771 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6f53af and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7c9eb5; op2val:0xbef28771; op3val:0x3eef53af; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1824, x18)

inst_991:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5f8862 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4b1c67 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3159f3 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e5f8862; op2val:0xbf4b1c67; op3val:0x3e3159f3; valaddr_reg:x16; val_offset:1692; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1692, x17, x15, 1832, x18)

inst_992:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5f8862 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4b1c67 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3159f3 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e5f8862; op2val:0xbf4b1c67; op3val:0x3e3159f3; valaddr_reg:x16; val_offset:1704; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1704, x17, x15, 1840, x18)

inst_993:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5f8862 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4b1c67 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3159f3 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e5f8862; op2val:0xbf4b1c67; op3val:0x3e3159f3; valaddr_reg:x16; val_offset:1716; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1716, x17, x15, 1848, x18)

inst_994:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5f8862 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4b1c67 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3159f3 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e5f8862; op2val:0xbf4b1c67; op3val:0x3e3159f3; valaddr_reg:x16; val_offset:1728; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1728, x17, x15, 1856, x18)

inst_995:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5f8862 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4b1c67 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3159f3 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e5f8862; op2val:0xbf4b1c67; op3val:0x3e3159f3; valaddr_reg:x16; val_offset:1740; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1740, x17, x15, 1864, x18)

inst_996:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0e78e7 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x22954b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x34f731 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0e78e7; op2val:0xbfa2954b; op3val:0x3f34f731; valaddr_reg:x16; val_offset:1752; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1752, x17, x15, 1872, x18)

inst_997:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0e78e7 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x22954b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x34f731 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0e78e7; op2val:0xbfa2954b; op3val:0x3f34f731; valaddr_reg:x16; val_offset:1764; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1764, x17, x15, 1880, x18)

inst_998:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0e78e7 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x22954b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x34f731 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0e78e7; op2val:0xbfa2954b; op3val:0x3f34f731; valaddr_reg:x16; val_offset:1776; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1776, x17, x15, 1888, x18)

inst_999:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0e78e7 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x22954b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x34f731 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0e78e7; op2val:0xbfa2954b; op3val:0x3f34f731; valaddr_reg:x16; val_offset:1788; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1788, x17, x15, 1896, x18)

inst_1000:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0e78e7 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x22954b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x34f731 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0e78e7; op2val:0xbfa2954b; op3val:0x3f34f731; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1904, x18)

inst_1001:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x60cc14 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x5c9515 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x41b24a and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f60cc14; op2val:0xbedc9515; op3val:0x3ec1b24a; valaddr_reg:x16; val_offset:1812; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1812, x17, x15, 1912, x18)

inst_1002:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x60cc14 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x5c9515 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x41b24a and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f60cc14; op2val:0xbedc9515; op3val:0x3ec1b24a; valaddr_reg:x16; val_offset:1824; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1824, x17, x15, 1920, x18)

inst_1003:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x60cc14 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x5c9515 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x41b24a and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f60cc14; op2val:0xbedc9515; op3val:0x3ec1b24a; valaddr_reg:x16; val_offset:1836; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1836, x17, x15, 1928, x18)

inst_1004:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x60cc14 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x5c9515 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x41b24a and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f60cc14; op2val:0xbedc9515; op3val:0x3ec1b24a; valaddr_reg:x16; val_offset:1848; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1848, x17, x15, 1936, x18)

inst_1005:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x60cc14 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x5c9515 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x41b24a and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f60cc14; op2val:0xbedc9515; op3val:0x3ec1b24a; valaddr_reg:x16; val_offset:1860; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1860, x17, x15, 1944, x18)

inst_1006:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x36ae98 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3ba55d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x05e78a and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f36ae98; op2val:0xbf3ba55d; op3val:0x3f05e78a; valaddr_reg:x16; val_offset:1872; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1872, x17, x15, 1952, x18)

inst_1007:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x36ae98 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3ba55d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x05e78a and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f36ae98; op2val:0xbf3ba55d; op3val:0x3f05e78a; valaddr_reg:x16; val_offset:1884; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1884, x17, x15, 1960, x18)

inst_1008:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x36ae98 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3ba55d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x05e78a and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f36ae98; op2val:0xbf3ba55d; op3val:0x3f05e78a; valaddr_reg:x16; val_offset:1896; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1896, x17, x15, 1968, x18)

inst_1009:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x36ae98 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3ba55d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x05e78a and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f36ae98; op2val:0xbf3ba55d; op3val:0x3f05e78a; valaddr_reg:x16; val_offset:1908; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1908, x17, x15, 1976, x18)

inst_1010:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x36ae98 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3ba55d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x05e78a and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f36ae98; op2val:0xbf3ba55d; op3val:0x3f05e78a; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1984, x18)

inst_1011:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x00ce8a and fs2 == 1 and fe2 == 0x84 and fm2 == 0x014bba and fs3 == 0 and fe3 == 0x7e and fm3 == 0x021c5c and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3c80ce8a; op2val:0xc2014bba; op3val:0x3f021c5c; valaddr_reg:x16; val_offset:1932; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1932, x17, x15, 1992, x18)

inst_1012:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x00ce8a and fs2 == 1 and fe2 == 0x84 and fm2 == 0x014bba and fs3 == 0 and fe3 == 0x7e and fm3 == 0x021c5c and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3c80ce8a; op2val:0xc2014bba; op3val:0x3f021c5c; valaddr_reg:x16; val_offset:1944; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1944, x17, x15, 2000, x18)

inst_1013:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x00ce8a and fs2 == 1 and fe2 == 0x84 and fm2 == 0x014bba and fs3 == 0 and fe3 == 0x7e and fm3 == 0x021c5c and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3c80ce8a; op2val:0xc2014bba; op3val:0x3f021c5c; valaddr_reg:x16; val_offset:1956; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1956, x17, x15, 2008, x18)

inst_1014:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x00ce8a and fs2 == 1 and fe2 == 0x84 and fm2 == 0x014bba and fs3 == 0 and fe3 == 0x7e and fm3 == 0x021c5c and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3c80ce8a; op2val:0xc2014bba; op3val:0x3f021c5c; valaddr_reg:x16; val_offset:1968; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1968, x17, x15, 2016, x18)

inst_1015:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x00ce8a and fs2 == 1 and fe2 == 0x84 and fm2 == 0x014bba and fs3 == 0 and fe3 == 0x7e and fm3 == 0x021c5c and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3c80ce8a; op2val:0xc2014bba; op3val:0x3f021c5c; valaddr_reg:x16; val_offset:1980; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1980, x17, x15, 2024, x18)
RVTEST_SIGBASE(x15,signature_x15_5)

inst_1016:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x15a255 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1518d9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2e4c04 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f15a255; op2val:0xbf9518d9; op3val:0x3f2e4c04; valaddr_reg:x16; val_offset:1992; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1992, x17, x15, 0, x18)

inst_1017:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x15a255 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1518d9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2e4c04 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f15a255; op2val:0xbf9518d9; op3val:0x3f2e4c04; valaddr_reg:x16; val_offset:2004; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 2004, x17, x15, 8, x18)

inst_1018:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x15a255 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1518d9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2e4c04 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f15a255; op2val:0xbf9518d9; op3val:0x3f2e4c04; valaddr_reg:x16; val_offset:2016; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 2016, x17, x15, 16, x18)

inst_1019:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x15a255 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1518d9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2e4c04 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f15a255; op2val:0xbf9518d9; op3val:0x3f2e4c04; valaddr_reg:x16; val_offset:2028; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 2028, x17, x15, 24, x18)
addi x16,x16,2040

inst_1020:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x15a255 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1518d9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2e4c04 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f15a255; op2val:0xbf9518d9; op3val:0x3f2e4c04; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 32, x18)

inst_1021:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x1bcea6 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x53dd7a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x00f21f and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3c9bcea6; op2val:0xc1d3dd7a; op3val:0x3f00f21f; valaddr_reg:x16; val_offset:12; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 12, x17, x15, 40, x18)

inst_1022:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x1bcea6 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x53dd7a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x00f21f and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3c9bcea6; op2val:0xc1d3dd7a; op3val:0x3f00f21f; valaddr_reg:x16; val_offset:24; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 24, x17, x15, 48, x18)

inst_1023:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x1bcea6 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x53dd7a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x00f21f and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3c9bcea6; op2val:0xc1d3dd7a; op3val:0x3f00f21f; valaddr_reg:x16; val_offset:36; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 36, x17, x15, 56, x18)

inst_1024:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x1bcea6 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x53dd7a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x00f21f and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3c9bcea6; op2val:0xc1d3dd7a; op3val:0x3f00f21f; valaddr_reg:x16; val_offset:48; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 48, x17, x15, 64, x18)

inst_1025:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x1bcea6 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x53dd7a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x00f21f and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3c9bcea6; op2val:0xc1d3dd7a; op3val:0x3f00f21f; valaddr_reg:x16; val_offset:60; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 60, x17, x15, 72, x18)

inst_1026:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4ef1fe and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6a6697 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3d7c21 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ecef1fe; op2val:0xbfea6697; op3val:0x3f3d7c21; valaddr_reg:x16; val_offset:72; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 72, x17, x15, 80, x18)

inst_1027:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4ef1fe and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6a6697 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3d7c21 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ecef1fe; op2val:0xbfea6697; op3val:0x3f3d7c21; valaddr_reg:x16; val_offset:84; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 84, x17, x15, 88, x18)

inst_1028:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4ef1fe and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6a6697 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3d7c21 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ecef1fe; op2val:0xbfea6697; op3val:0x3f3d7c21; valaddr_reg:x16; val_offset:96; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 96, x17, x15, 96, x18)

inst_1029:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4ef1fe and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6a6697 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3d7c21 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ecef1fe; op2val:0xbfea6697; op3val:0x3f3d7c21; valaddr_reg:x16; val_offset:108; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 108, x17, x15, 104, x18)

inst_1030:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4ef1fe and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6a6697 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3d7c21 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ecef1fe; op2val:0xbfea6697; op3val:0x3f3d7c21; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 112, x18)

inst_1031:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x1f2c9c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0e0cb1 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x30a545 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d1f2c9c; op2val:0xc00e0cb1; op3val:0x3db0a545; valaddr_reg:x16; val_offset:132; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 132, x17, x15, 120, x18)

inst_1032:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x1f2c9c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0e0cb1 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x30a545 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d1f2c9c; op2val:0xc00e0cb1; op3val:0x3db0a545; valaddr_reg:x16; val_offset:144; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 144, x17, x15, 128, x18)

inst_1033:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x1f2c9c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0e0cb1 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x30a545 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d1f2c9c; op2val:0xc00e0cb1; op3val:0x3db0a545; valaddr_reg:x16; val_offset:156; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 156, x17, x15, 136, x18)

inst_1034:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x1f2c9c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0e0cb1 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x30a545 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d1f2c9c; op2val:0xc00e0cb1; op3val:0x3db0a545; valaddr_reg:x16; val_offset:168; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 168, x17, x15, 144, x18)

inst_1035:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x1f2c9c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0e0cb1 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x30a545 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d1f2c9c; op2val:0xc00e0cb1; op3val:0x3db0a545; valaddr_reg:x16; val_offset:180; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 180, x17, x15, 152, x18)

inst_1036:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x61a6d5 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x34215a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1ec6b3 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ce1a6d5; op2val:0xc1b4215a; op3val:0x3f1ec6b3; valaddr_reg:x16; val_offset:192; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 192, x17, x15, 160, x18)

inst_1037:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x61a6d5 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x34215a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1ec6b3 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ce1a6d5; op2val:0xc1b4215a; op3val:0x3f1ec6b3; valaddr_reg:x16; val_offset:204; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 204, x17, x15, 168, x18)

inst_1038:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x61a6d5 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x34215a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1ec6b3 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ce1a6d5; op2val:0xc1b4215a; op3val:0x3f1ec6b3; valaddr_reg:x16; val_offset:216; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 216, x17, x15, 176, x18)

inst_1039:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x61a6d5 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x34215a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1ec6b3 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ce1a6d5; op2val:0xc1b4215a; op3val:0x3f1ec6b3; valaddr_reg:x16; val_offset:228; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 228, x17, x15, 184, x18)

inst_1040:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x61a6d5 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x34215a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1ec6b3 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ce1a6d5; op2val:0xc1b4215a; op3val:0x3f1ec6b3; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 192, x18)

inst_1041:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x460eda and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6a707f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x35609c and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f460eda; op2val:0xbf6a707f; op3val:0x3f35609c; valaddr_reg:x16; val_offset:252; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 252, x17, x15, 200, x18)

inst_1042:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x460eda and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6a707f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x35609c and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f460eda; op2val:0xbf6a707f; op3val:0x3f35609c; valaddr_reg:x16; val_offset:264; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 264, x17, x15, 208, x18)

inst_1043:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x460eda and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6a707f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x35609c and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f460eda; op2val:0xbf6a707f; op3val:0x3f35609c; valaddr_reg:x16; val_offset:276; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 276, x17, x15, 216, x18)

inst_1044:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x460eda and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6a707f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x35609c and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f460eda; op2val:0xbf6a707f; op3val:0x3f35609c; valaddr_reg:x16; val_offset:288; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 288, x17, x15, 224, x18)

inst_1045:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x460eda and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6a707f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x35609c and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f460eda; op2val:0xbf6a707f; op3val:0x3f35609c; valaddr_reg:x16; val_offset:300; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 300, x17, x15, 232, x18)

inst_1046:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1fc867 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x691944 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x117d2b and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1fc867; op2val:0xbf691944; op3val:0x3f117d2b; valaddr_reg:x16; val_offset:312; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 312, x17, x15, 240, x18)

inst_1047:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1fc867 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x691944 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x117d2b and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1fc867; op2val:0xbf691944; op3val:0x3f117d2b; valaddr_reg:x16; val_offset:324; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 324, x17, x15, 248, x18)

inst_1048:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1fc867 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x691944 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x117d2b and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1fc867; op2val:0xbf691944; op3val:0x3f117d2b; valaddr_reg:x16; val_offset:336; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 336, x17, x15, 256, x18)

inst_1049:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1fc867 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x691944 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x117d2b and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1fc867; op2val:0xbf691944; op3val:0x3f117d2b; valaddr_reg:x16; val_offset:348; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 348, x17, x15, 264, x18)

inst_1050:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1fc867 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x691944 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x117d2b and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1fc867; op2val:0xbf691944; op3val:0x3f117d2b; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 272, x18)

inst_1051:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3db7e7 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x1638c5 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x5ea7a8 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ebdb7e7; op2val:0xbe9638c5; op3val:0x3ddea7a8; valaddr_reg:x16; val_offset:372; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 372, x17, x15, 280, x18)

inst_1052:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3db7e7 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x1638c5 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x5ea7a8 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ebdb7e7; op2val:0xbe9638c5; op3val:0x3ddea7a8; valaddr_reg:x16; val_offset:384; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 384, x17, x15, 288, x18)

inst_1053:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3db7e7 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x1638c5 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x5ea7a8 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ebdb7e7; op2val:0xbe9638c5; op3val:0x3ddea7a8; valaddr_reg:x16; val_offset:396; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 396, x17, x15, 296, x18)

inst_1054:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3db7e7 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x1638c5 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x5ea7a8 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ebdb7e7; op2val:0xbe9638c5; op3val:0x3ddea7a8; valaddr_reg:x16; val_offset:408; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 408, x17, x15, 304, x18)

inst_1055:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3db7e7 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x1638c5 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x5ea7a8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ebdb7e7; op2val:0xbe9638c5; op3val:0x3ddea7a8; valaddr_reg:x16; val_offset:420; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 420, x17, x15, 312, x18)

inst_1056:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4508b1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0ee82f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5bfb0d and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec508b1; op2val:0xc00ee82f; op3val:0x3f5bfb0d; valaddr_reg:x16; val_offset:432; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 432, x17, x15, 320, x18)

inst_1057:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4508b1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0ee82f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5bfb0d and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec508b1; op2val:0xc00ee82f; op3val:0x3f5bfb0d; valaddr_reg:x16; val_offset:444; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 444, x17, x15, 328, x18)

inst_1058:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4508b1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0ee82f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5bfb0d and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec508b1; op2val:0xc00ee82f; op3val:0x3f5bfb0d; valaddr_reg:x16; val_offset:456; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 456, x17, x15, 336, x18)

inst_1059:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4508b1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0ee82f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5bfb0d and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec508b1; op2val:0xc00ee82f; op3val:0x3f5bfb0d; valaddr_reg:x16; val_offset:468; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 468, x17, x15, 344, x18)

inst_1060:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4508b1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0ee82f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5bfb0d and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec508b1; op2val:0xc00ee82f; op3val:0x3f5bfb0d; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 352, x18)

inst_1061:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x645f76 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x79327b and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5e4de3 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f645f76; op2val:0xbef9327b; op3val:0x3ede4de3; valaddr_reg:x16; val_offset:492; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 492, x17, x15, 360, x18)

inst_1062:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x645f76 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x79327b and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5e4de3 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f645f76; op2val:0xbef9327b; op3val:0x3ede4de3; valaddr_reg:x16; val_offset:504; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 504, x17, x15, 368, x18)

inst_1063:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x645f76 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x79327b and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5e4de3 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f645f76; op2val:0xbef9327b; op3val:0x3ede4de3; valaddr_reg:x16; val_offset:516; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 516, x17, x15, 376, x18)

inst_1064:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x645f76 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x79327b and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5e4de3 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f645f76; op2val:0xbef9327b; op3val:0x3ede4de3; valaddr_reg:x16; val_offset:528; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 528, x17, x15, 384, x18)

inst_1065:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x645f76 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x79327b and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5e4de3 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f645f76; op2val:0xbef9327b; op3val:0x3ede4de3; valaddr_reg:x16; val_offset:540; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 540, x17, x15, 392, x18)

inst_1066:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x5a2df9 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x160bc0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7fc1e7 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dda2df9; op2val:0xc1160bc0; op3val:0x3f7fc1e7; valaddr_reg:x16; val_offset:552; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 552, x17, x15, 400, x18)

inst_1067:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x5a2df9 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x160bc0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7fc1e7 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dda2df9; op2val:0xc1160bc0; op3val:0x3f7fc1e7; valaddr_reg:x16; val_offset:564; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 564, x17, x15, 408, x18)

inst_1068:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x5a2df9 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x160bc0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7fc1e7 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dda2df9; op2val:0xc1160bc0; op3val:0x3f7fc1e7; valaddr_reg:x16; val_offset:576; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 576, x17, x15, 416, x18)

inst_1069:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x5a2df9 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x160bc0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7fc1e7 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dda2df9; op2val:0xc1160bc0; op3val:0x3f7fc1e7; valaddr_reg:x16; val_offset:588; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 588, x17, x15, 424, x18)

inst_1070:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x5a2df9 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x160bc0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7fc1e7 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dda2df9; op2val:0xc1160bc0; op3val:0x3f7fc1e7; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 432, x18)

inst_1071:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x486448 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5435eb and fs3 == 0 and fe3 == 0x7e and fm3 == 0x261d41 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec86448; op2val:0xbfd435eb; op3val:0x3f261d41; valaddr_reg:x16; val_offset:612; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 612, x17, x15, 440, x18)

inst_1072:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x486448 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5435eb and fs3 == 0 and fe3 == 0x7e and fm3 == 0x261d41 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec86448; op2val:0xbfd435eb; op3val:0x3f261d41; valaddr_reg:x16; val_offset:624; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 624, x17, x15, 448, x18)

inst_1073:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x486448 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5435eb and fs3 == 0 and fe3 == 0x7e and fm3 == 0x261d41 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec86448; op2val:0xbfd435eb; op3val:0x3f261d41; valaddr_reg:x16; val_offset:636; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 636, x17, x15, 456, x18)

inst_1074:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x486448 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5435eb and fs3 == 0 and fe3 == 0x7e and fm3 == 0x261d41 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec86448; op2val:0xbfd435eb; op3val:0x3f261d41; valaddr_reg:x16; val_offset:648; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 648, x17, x15, 464, x18)

inst_1075:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x486448 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5435eb and fs3 == 0 and fe3 == 0x7e and fm3 == 0x261d41 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec86448; op2val:0xbfd435eb; op3val:0x3f261d41; valaddr_reg:x16; val_offset:660; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 660, x17, x15, 472, x18)

inst_1076:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x2f41d9 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3f7a04 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x0315a9 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d2f41d9; op2val:0xbf3f7a04; op3val:0x3d0315a9; valaddr_reg:x16; val_offset:672; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 672, x17, x15, 480, x18)

inst_1077:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x2f41d9 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3f7a04 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x0315a9 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d2f41d9; op2val:0xbf3f7a04; op3val:0x3d0315a9; valaddr_reg:x16; val_offset:684; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 684, x17, x15, 488, x18)

inst_1078:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x2f41d9 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3f7a04 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x0315a9 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d2f41d9; op2val:0xbf3f7a04; op3val:0x3d0315a9; valaddr_reg:x16; val_offset:696; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 696, x17, x15, 496, x18)

inst_1079:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x2f41d9 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3f7a04 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x0315a9 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d2f41d9; op2val:0xbf3f7a04; op3val:0x3d0315a9; valaddr_reg:x16; val_offset:708; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 708, x17, x15, 504, x18)

inst_1080:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x2f41d9 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3f7a04 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x0315a9 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d2f41d9; op2val:0xbf3f7a04; op3val:0x3d0315a9; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 512, x18)

inst_1081:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4ee142 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0a2973 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5f4dda and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ecee142; op2val:0xbf8a2973; op3val:0x3edf4dda; valaddr_reg:x16; val_offset:732; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 732, x17, x15, 520, x18)

inst_1082:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4ee142 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0a2973 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5f4dda and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ecee142; op2val:0xbf8a2973; op3val:0x3edf4dda; valaddr_reg:x16; val_offset:744; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 744, x17, x15, 528, x18)

inst_1083:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4ee142 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0a2973 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5f4dda and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ecee142; op2val:0xbf8a2973; op3val:0x3edf4dda; valaddr_reg:x16; val_offset:756; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 756, x17, x15, 536, x18)

inst_1084:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4ee142 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0a2973 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5f4dda and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ecee142; op2val:0xbf8a2973; op3val:0x3edf4dda; valaddr_reg:x16; val_offset:768; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 768, x17, x15, 544, x18)

inst_1085:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4ee142 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0a2973 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5f4dda and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ecee142; op2val:0xbf8a2973; op3val:0x3edf4dda; valaddr_reg:x16; val_offset:780; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 780, x17, x15, 552, x18)

inst_1086:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x216c33 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2e259b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5b9e84 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f216c33; op2val:0xbfae259b; op3val:0x3f5b9e84; valaddr_reg:x16; val_offset:792; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 792, x17, x15, 560, x18)

inst_1087:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x216c33 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2e259b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5b9e84 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f216c33; op2val:0xbfae259b; op3val:0x3f5b9e84; valaddr_reg:x16; val_offset:804; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 804, x17, x15, 568, x18)

inst_1088:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x216c33 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2e259b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5b9e84 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f216c33; op2val:0xbfae259b; op3val:0x3f5b9e84; valaddr_reg:x16; val_offset:816; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 816, x17, x15, 576, x18)

inst_1089:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x216c33 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2e259b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5b9e84 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f216c33; op2val:0xbfae259b; op3val:0x3f5b9e84; valaddr_reg:x16; val_offset:828; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 828, x17, x15, 584, x18)

inst_1090:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x216c33 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2e259b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5b9e84 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f216c33; op2val:0xbfae259b; op3val:0x3f5b9e84; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 592, x18)

inst_1091:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x3f7f96 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x74d4f4 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3724e8 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e3f7f96; op2val:0xbff4d4f4; op3val:0x3eb724e8; valaddr_reg:x16; val_offset:852; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 852, x17, x15, 600, x18)

inst_1092:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x3f7f96 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x74d4f4 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3724e8 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e3f7f96; op2val:0xbff4d4f4; op3val:0x3eb724e8; valaddr_reg:x16; val_offset:864; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 864, x17, x15, 608, x18)

inst_1093:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x3f7f96 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x74d4f4 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3724e8 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e3f7f96; op2val:0xbff4d4f4; op3val:0x3eb724e8; valaddr_reg:x16; val_offset:876; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 876, x17, x15, 616, x18)

inst_1094:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x3f7f96 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x74d4f4 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3724e8 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e3f7f96; op2val:0xbff4d4f4; op3val:0x3eb724e8; valaddr_reg:x16; val_offset:888; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 888, x17, x15, 624, x18)

inst_1095:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x3f7f96 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x74d4f4 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3724e8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e3f7f96; op2val:0xbff4d4f4; op3val:0x3eb724e8; valaddr_reg:x16; val_offset:900; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 900, x17, x15, 632, x18)

inst_1096:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x39d55e and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4cdc02 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x14b5bc and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e39d55e; op2val:0xc04cdc02; op3val:0x3f14b5bc; valaddr_reg:x16; val_offset:912; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 912, x17, x15, 640, x18)

inst_1097:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x39d55e and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4cdc02 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x14b5bc and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e39d55e; op2val:0xc04cdc02; op3val:0x3f14b5bc; valaddr_reg:x16; val_offset:924; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 924, x17, x15, 648, x18)

inst_1098:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x39d55e and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4cdc02 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x14b5bc and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e39d55e; op2val:0xc04cdc02; op3val:0x3f14b5bc; valaddr_reg:x16; val_offset:936; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 936, x17, x15, 656, x18)

inst_1099:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x39d55e and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4cdc02 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x14b5bc and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e39d55e; op2val:0xc04cdc02; op3val:0x3f14b5bc; valaddr_reg:x16; val_offset:948; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 948, x17, x15, 664, x18)

inst_1100:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x39d55e and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4cdc02 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x14b5bc and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e39d55e; op2val:0xc04cdc02; op3val:0x3f14b5bc; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 672, x18)

inst_1101:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5694c4 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x4bc4fe and fs3 == 0 and fe3 == 0x7a and fm3 == 0x2acd17 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed694c4; op2val:0xbdcbc4fe; op3val:0x3d2acd17; valaddr_reg:x16; val_offset:972; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 972, x17, x15, 680, x18)

inst_1102:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5694c4 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x4bc4fe and fs3 == 0 and fe3 == 0x7a and fm3 == 0x2acd17 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed694c4; op2val:0xbdcbc4fe; op3val:0x3d2acd17; valaddr_reg:x16; val_offset:984; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 984, x17, x15, 688, x18)

inst_1103:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5694c4 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x4bc4fe and fs3 == 0 and fe3 == 0x7a and fm3 == 0x2acd17 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed694c4; op2val:0xbdcbc4fe; op3val:0x3d2acd17; valaddr_reg:x16; val_offset:996; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 996, x17, x15, 696, x18)

inst_1104:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5694c4 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x4bc4fe and fs3 == 0 and fe3 == 0x7a and fm3 == 0x2acd17 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed694c4; op2val:0xbdcbc4fe; op3val:0x3d2acd17; valaddr_reg:x16; val_offset:1008; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1008, x17, x15, 704, x18)

inst_1105:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5694c4 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x4bc4fe and fs3 == 0 and fe3 == 0x7a and fm3 == 0x2acd17 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed694c4; op2val:0xbdcbc4fe; op3val:0x3d2acd17; valaddr_reg:x16; val_offset:1020; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1020, x17, x15, 712, x18)

inst_1106:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x68d8cf and fs2 == 1 and fe2 == 0x7f and fm2 == 0x39efd7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x291ed4 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee8d8cf; op2val:0xbfb9efd7; op3val:0x3f291ed4; valaddr_reg:x16; val_offset:1032; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1032, x17, x15, 720, x18)

inst_1107:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x68d8cf and fs2 == 1 and fe2 == 0x7f and fm2 == 0x39efd7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x291ed4 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee8d8cf; op2val:0xbfb9efd7; op3val:0x3f291ed4; valaddr_reg:x16; val_offset:1044; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1044, x17, x15, 728, x18)

inst_1108:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x68d8cf and fs2 == 1 and fe2 == 0x7f and fm2 == 0x39efd7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x291ed4 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee8d8cf; op2val:0xbfb9efd7; op3val:0x3f291ed4; valaddr_reg:x16; val_offset:1056; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1056, x17, x15, 736, x18)

inst_1109:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x68d8cf and fs2 == 1 and fe2 == 0x7f and fm2 == 0x39efd7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x291ed4 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee8d8cf; op2val:0xbfb9efd7; op3val:0x3f291ed4; valaddr_reg:x16; val_offset:1068; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1068, x17, x15, 744, x18)

inst_1110:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x68d8cf and fs2 == 1 and fe2 == 0x7f and fm2 == 0x39efd7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x291ed4 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee8d8cf; op2val:0xbfb9efd7; op3val:0x3f291ed4; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 752, x18)

inst_1111:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x45daed and fs2 == 1 and fe2 == 0x80 and fm2 == 0x15e97e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x67b9c4 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec5daed; op2val:0xc015e97e; op3val:0x3f67b9c4; valaddr_reg:x16; val_offset:1092; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1092, x17, x15, 760, x18)

inst_1112:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x45daed and fs2 == 1 and fe2 == 0x80 and fm2 == 0x15e97e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x67b9c4 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec5daed; op2val:0xc015e97e; op3val:0x3f67b9c4; valaddr_reg:x16; val_offset:1104; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1104, x17, x15, 768, x18)

inst_1113:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x45daed and fs2 == 1 and fe2 == 0x80 and fm2 == 0x15e97e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x67b9c4 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec5daed; op2val:0xc015e97e; op3val:0x3f67b9c4; valaddr_reg:x16; val_offset:1116; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1116, x17, x15, 776, x18)

inst_1114:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x45daed and fs2 == 1 and fe2 == 0x80 and fm2 == 0x15e97e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x67b9c4 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec5daed; op2val:0xc015e97e; op3val:0x3f67b9c4; valaddr_reg:x16; val_offset:1128; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1128, x17, x15, 784, x18)

inst_1115:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x45daed and fs2 == 1 and fe2 == 0x80 and fm2 == 0x15e97e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x67b9c4 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec5daed; op2val:0xc015e97e; op3val:0x3f67b9c4; valaddr_reg:x16; val_offset:1140; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1140, x17, x15, 792, x18)

inst_1116:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x20496c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x450fad and fs3 == 0 and fe3 == 0x7e and fm3 == 0x76c4a2 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f20496c; op2val:0xbfc50fad; op3val:0x3f76c4a2; valaddr_reg:x16; val_offset:1152; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1152, x17, x15, 800, x18)

inst_1117:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x20496c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x450fad and fs3 == 0 and fe3 == 0x7e and fm3 == 0x76c4a2 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f20496c; op2val:0xbfc50fad; op3val:0x3f76c4a2; valaddr_reg:x16; val_offset:1164; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1164, x17, x15, 808, x18)

inst_1118:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x20496c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x450fad and fs3 == 0 and fe3 == 0x7e and fm3 == 0x76c4a2 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f20496c; op2val:0xbfc50fad; op3val:0x3f76c4a2; valaddr_reg:x16; val_offset:1176; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1176, x17, x15, 816, x18)

inst_1119:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x20496c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x450fad and fs3 == 0 and fe3 == 0x7e and fm3 == 0x76c4a2 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f20496c; op2val:0xbfc50fad; op3val:0x3f76c4a2; valaddr_reg:x16; val_offset:1188; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1188, x17, x15, 824, x18)

inst_1120:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x20496c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x450fad and fs3 == 0 and fe3 == 0x7e and fm3 == 0x76c4a2 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f20496c; op2val:0xbfc50fad; op3val:0x3f76c4a2; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 832, x18)

inst_1121:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x628a7b and fs2 == 1 and fe2 == 0x7c and fm2 == 0x4321b9 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x2cad53 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f628a7b; op2val:0xbe4321b9; op3val:0x3e2cad53; valaddr_reg:x16; val_offset:1212; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1212, x17, x15, 840, x18)

inst_1122:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x628a7b and fs2 == 1 and fe2 == 0x7c and fm2 == 0x4321b9 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x2cad53 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f628a7b; op2val:0xbe4321b9; op3val:0x3e2cad53; valaddr_reg:x16; val_offset:1224; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1224, x17, x15, 848, x18)

inst_1123:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x628a7b and fs2 == 1 and fe2 == 0x7c and fm2 == 0x4321b9 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x2cad53 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f628a7b; op2val:0xbe4321b9; op3val:0x3e2cad53; valaddr_reg:x16; val_offset:1236; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1236, x17, x15, 856, x18)

inst_1124:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x628a7b and fs2 == 1 and fe2 == 0x7c and fm2 == 0x4321b9 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x2cad53 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f628a7b; op2val:0xbe4321b9; op3val:0x3e2cad53; valaddr_reg:x16; val_offset:1248; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1248, x17, x15, 864, x18)

inst_1125:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x628a7b and fs2 == 1 and fe2 == 0x7c and fm2 == 0x4321b9 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x2cad53 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f628a7b; op2val:0xbe4321b9; op3val:0x3e2cad53; valaddr_reg:x16; val_offset:1260; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1260, x17, x15, 872, x18)

inst_1126:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x38b262 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5155b4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x170777 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f38b262; op2val:0xbf5155b4; op3val:0x3f170777; valaddr_reg:x16; val_offset:1272; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1272, x17, x15, 880, x18)

inst_1127:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x38b262 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5155b4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x170777 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f38b262; op2val:0xbf5155b4; op3val:0x3f170777; valaddr_reg:x16; val_offset:1284; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1284, x17, x15, 888, x18)

inst_1128:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x38b262 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5155b4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x170777 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f38b262; op2val:0xbf5155b4; op3val:0x3f170777; valaddr_reg:x16; val_offset:1296; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1296, x17, x15, 896, x18)

inst_1129:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x38b262 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5155b4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x170777 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f38b262; op2val:0xbf5155b4; op3val:0x3f170777; valaddr_reg:x16; val_offset:1308; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1308, x17, x15, 904, x18)

inst_1130:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x38b262 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5155b4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x170777 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f38b262; op2val:0xbf5155b4; op3val:0x3f170777; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 912, x18)

inst_1131:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7fd4b4 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x18530e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x18394b and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7fd4b4; op2val:0xbf18530e; op3val:0x3f18394b; valaddr_reg:x16; val_offset:1332; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1332, x17, x15, 920, x18)

inst_1132:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7fd4b4 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x18530e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x18394b and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7fd4b4; op2val:0xbf18530e; op3val:0x3f18394b; valaddr_reg:x16; val_offset:1344; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1344, x17, x15, 928, x18)

inst_1133:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7fd4b4 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x18530e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x18394b and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7fd4b4; op2val:0xbf18530e; op3val:0x3f18394b; valaddr_reg:x16; val_offset:1356; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1356, x17, x15, 936, x18)

inst_1134:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7fd4b4 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x18530e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x18394b and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7fd4b4; op2val:0xbf18530e; op3val:0x3f18394b; valaddr_reg:x16; val_offset:1368; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1368, x17, x15, 944, x18)

inst_1135:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7fd4b4 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x18530e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x18394b and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7fd4b4; op2val:0xbf18530e; op3val:0x3f18394b; valaddr_reg:x16; val_offset:1380; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1380, x17, x15, 952, x18)

inst_1136:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x431c7f and fs2 == 1 and fe2 == 0x7c and fm2 == 0x02149a and fs3 == 0 and fe3 == 0x7b and fm3 == 0x464858 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f431c7f; op2val:0xbe02149a; op3val:0x3dc64858; valaddr_reg:x16; val_offset:1392; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1392, x17, x15, 960, x18)

inst_1137:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x431c7f and fs2 == 1 and fe2 == 0x7c and fm2 == 0x02149a and fs3 == 0 and fe3 == 0x7b and fm3 == 0x464858 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f431c7f; op2val:0xbe02149a; op3val:0x3dc64858; valaddr_reg:x16; val_offset:1404; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1404, x17, x15, 968, x18)

inst_1138:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x431c7f and fs2 == 1 and fe2 == 0x7c and fm2 == 0x02149a and fs3 == 0 and fe3 == 0x7b and fm3 == 0x464858 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f431c7f; op2val:0xbe02149a; op3val:0x3dc64858; valaddr_reg:x16; val_offset:1416; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1416, x17, x15, 976, x18)

inst_1139:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x431c7f and fs2 == 1 and fe2 == 0x7c and fm2 == 0x02149a and fs3 == 0 and fe3 == 0x7b and fm3 == 0x464858 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f431c7f; op2val:0xbe02149a; op3val:0x3dc64858; valaddr_reg:x16; val_offset:1428; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1428, x17, x15, 984, x18)

inst_1140:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x431c7f and fs2 == 1 and fe2 == 0x7c and fm2 == 0x02149a and fs3 == 0 and fe3 == 0x7b and fm3 == 0x464858 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f431c7f; op2val:0xbe02149a; op3val:0x3dc64858; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 992, x18)

inst_1141:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x46c2f1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0721b9 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x51d5f8 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec6c2f1; op2val:0xbf8721b9; op3val:0x3ed1d5f8; valaddr_reg:x16; val_offset:1452; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1452, x17, x15, 1000, x18)

inst_1142:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x46c2f1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0721b9 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x51d5f8 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec6c2f1; op2val:0xbf8721b9; op3val:0x3ed1d5f8; valaddr_reg:x16; val_offset:1464; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1464, x17, x15, 1008, x18)

inst_1143:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x46c2f1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0721b9 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x51d5f8 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec6c2f1; op2val:0xbf8721b9; op3val:0x3ed1d5f8; valaddr_reg:x16; val_offset:1476; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1476, x17, x15, 1016, x18)

inst_1144:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x46c2f1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0721b9 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x51d5f8 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec6c2f1; op2val:0xbf8721b9; op3val:0x3ed1d5f8; valaddr_reg:x16; val_offset:1488; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1488, x17, x15, 1024, x18)

inst_1145:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x46c2f1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0721b9 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x51d5f8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec6c2f1; op2val:0xbf8721b9; op3val:0x3ed1d5f8; valaddr_reg:x16; val_offset:1500; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1500, x17, x15, 1032, x18)

inst_1146:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x08e01f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x145b43 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1ea4bc and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f08e01f; op2val:0xbf945b43; op3val:0x3f1ea4bc; valaddr_reg:x16; val_offset:1512; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1512, x17, x15, 1040, x18)

inst_1147:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x08e01f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x145b43 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1ea4bc and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f08e01f; op2val:0xbf945b43; op3val:0x3f1ea4bc; valaddr_reg:x16; val_offset:1524; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1524, x17, x15, 1048, x18)

inst_1148:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x08e01f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x145b43 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1ea4bc and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f08e01f; op2val:0xbf945b43; op3val:0x3f1ea4bc; valaddr_reg:x16; val_offset:1536; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1536, x17, x15, 1056, x18)

inst_1149:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x08e01f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x145b43 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1ea4bc and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f08e01f; op2val:0xbf945b43; op3val:0x3f1ea4bc; valaddr_reg:x16; val_offset:1548; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1548, x17, x15, 1064, x18)

inst_1150:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x08e01f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x145b43 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1ea4bc and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f08e01f; op2val:0xbf945b43; op3val:0x3f1ea4bc; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1072, x18)

inst_1151:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4e7ff3 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x190653 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x76df25 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4e7ff3; op2val:0xbf990653; op3val:0x3f76df25; valaddr_reg:x16; val_offset:1572; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1572, x17, x15, 1080, x18)

inst_1152:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4e7ff3 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x190653 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x76df25 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4e7ff3; op2val:0xbf990653; op3val:0x3f76df25; valaddr_reg:x16; val_offset:1584; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1584, x17, x15, 1088, x18)

inst_1153:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4e7ff3 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x190653 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x76df25 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4e7ff3; op2val:0xbf990653; op3val:0x3f76df25; valaddr_reg:x16; val_offset:1596; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1596, x17, x15, 1096, x18)

inst_1154:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4e7ff3 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x190653 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x76df25 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4e7ff3; op2val:0xbf990653; op3val:0x3f76df25; valaddr_reg:x16; val_offset:1608; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1608, x17, x15, 1104, x18)

inst_1155:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4e7ff3 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x190653 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x76df25 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4e7ff3; op2val:0xbf990653; op3val:0x3f76df25; valaddr_reg:x16; val_offset:1620; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1620, x17, x15, 1112, x18)

inst_1156:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2ec218 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1976bd and fs3 == 0 and fe3 == 0x7e and fm3 == 0x51861f and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2ec218; op2val:0xbf9976bd; op3val:0x3f51861f; valaddr_reg:x16; val_offset:1632; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1632, x17, x15, 1120, x18)

inst_1157:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2ec218 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1976bd and fs3 == 0 and fe3 == 0x7e and fm3 == 0x51861f and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2ec218; op2val:0xbf9976bd; op3val:0x3f51861f; valaddr_reg:x16; val_offset:1644; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1644, x17, x15, 1128, x18)

inst_1158:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2ec218 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1976bd and fs3 == 0 and fe3 == 0x7e and fm3 == 0x51861f and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2ec218; op2val:0xbf9976bd; op3val:0x3f51861f; valaddr_reg:x16; val_offset:1656; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1656, x17, x15, 1136, x18)

inst_1159:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2ec218 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1976bd and fs3 == 0 and fe3 == 0x7e and fm3 == 0x51861f and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2ec218; op2val:0xbf9976bd; op3val:0x3f51861f; valaddr_reg:x16; val_offset:1668; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1668, x17, x15, 1144, x18)

inst_1160:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2ec218 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1976bd and fs3 == 0 and fe3 == 0x7e and fm3 == 0x51861f and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2ec218; op2val:0xbf9976bd; op3val:0x3f51861f; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1152, x18)

inst_1161:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7223af and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6a83b2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5dd12e and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7223af; op2val:0xbf6a83b2; op3val:0x3f5dd12e; valaddr_reg:x16; val_offset:1692; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1692, x17, x15, 1160, x18)

inst_1162:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7223af and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6a83b2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5dd12e and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7223af; op2val:0xbf6a83b2; op3val:0x3f5dd12e; valaddr_reg:x16; val_offset:1704; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1704, x17, x15, 1168, x18)

inst_1163:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7223af and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6a83b2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5dd12e and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7223af; op2val:0xbf6a83b2; op3val:0x3f5dd12e; valaddr_reg:x16; val_offset:1716; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1716, x17, x15, 1176, x18)

inst_1164:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7223af and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6a83b2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5dd12e and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7223af; op2val:0xbf6a83b2; op3val:0x3f5dd12e; valaddr_reg:x16; val_offset:1728; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1728, x17, x15, 1184, x18)

inst_1165:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7223af and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6a83b2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5dd12e and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7223af; op2val:0xbf6a83b2; op3val:0x3f5dd12e; valaddr_reg:x16; val_offset:1740; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1740, x17, x15, 1192, x18)

inst_1166:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x07462c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3b6e2f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4614f7 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f07462c; op2val:0xbfbb6e2f; op3val:0x3f4614f7; valaddr_reg:x16; val_offset:1752; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1752, x17, x15, 1200, x18)

inst_1167:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x07462c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3b6e2f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4614f7 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f07462c; op2val:0xbfbb6e2f; op3val:0x3f4614f7; valaddr_reg:x16; val_offset:1764; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1764, x17, x15, 1208, x18)

inst_1168:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x07462c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3b6e2f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4614f7 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f07462c; op2val:0xbfbb6e2f; op3val:0x3f4614f7; valaddr_reg:x16; val_offset:1776; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1776, x17, x15, 1216, x18)

inst_1169:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x07462c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3b6e2f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4614f7 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f07462c; op2val:0xbfbb6e2f; op3val:0x3f4614f7; valaddr_reg:x16; val_offset:1788; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1788, x17, x15, 1224, x18)

inst_1170:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x07462c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3b6e2f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4614f7 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f07462c; op2val:0xbfbb6e2f; op3val:0x3f4614f7; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1232, x18)

inst_1171:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3cff3d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x261ed6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x75488d and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ebcff3d; op2val:0xc0261ed6; op3val:0x3f75488d; valaddr_reg:x16; val_offset:1812; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1812, x17, x15, 1240, x18)

inst_1172:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3cff3d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x261ed6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x75488d and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ebcff3d; op2val:0xc0261ed6; op3val:0x3f75488d; valaddr_reg:x16; val_offset:1824; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1824, x17, x15, 1248, x18)

inst_1173:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3cff3d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x261ed6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x75488d and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ebcff3d; op2val:0xc0261ed6; op3val:0x3f75488d; valaddr_reg:x16; val_offset:1836; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1836, x17, x15, 1256, x18)

inst_1174:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3cff3d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x261ed6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x75488d and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ebcff3d; op2val:0xc0261ed6; op3val:0x3f75488d; valaddr_reg:x16; val_offset:1848; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1848, x17, x15, 1264, x18)

inst_1175:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3cff3d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x261ed6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x75488d and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ebcff3d; op2val:0xc0261ed6; op3val:0x3f75488d; valaddr_reg:x16; val_offset:1860; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1860, x17, x15, 1272, x18)

inst_1176:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x47ed1d and fs2 == 1 and fe2 == 0x7d and fm2 == 0x4de313 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x20ca36 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f47ed1d; op2val:0xbecde313; op3val:0x3ea0ca36; valaddr_reg:x16; val_offset:1872; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1872, x17, x15, 1280, x18)

inst_1177:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x47ed1d and fs2 == 1 and fe2 == 0x7d and fm2 == 0x4de313 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x20ca36 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f47ed1d; op2val:0xbecde313; op3val:0x3ea0ca36; valaddr_reg:x16; val_offset:1884; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1884, x17, x15, 1288, x18)

inst_1178:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x47ed1d and fs2 == 1 and fe2 == 0x7d and fm2 == 0x4de313 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x20ca36 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f47ed1d; op2val:0xbecde313; op3val:0x3ea0ca36; valaddr_reg:x16; val_offset:1896; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1896, x17, x15, 1296, x18)

inst_1179:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x47ed1d and fs2 == 1 and fe2 == 0x7d and fm2 == 0x4de313 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x20ca36 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f47ed1d; op2val:0xbecde313; op3val:0x3ea0ca36; valaddr_reg:x16; val_offset:1908; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1908, x17, x15, 1304, x18)

inst_1180:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x47ed1d and fs2 == 1 and fe2 == 0x7d and fm2 == 0x4de313 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x20ca36 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f47ed1d; op2val:0xbecde313; op3val:0x3ea0ca36; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1312, x18)

inst_1181:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0f1623 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x204092 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3323db and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0f1623; op2val:0xbf204092; op3val:0x3eb323db; valaddr_reg:x16; val_offset:1932; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1932, x17, x15, 1320, x18)

inst_1182:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0f1623 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x204092 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3323db and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0f1623; op2val:0xbf204092; op3val:0x3eb323db; valaddr_reg:x16; val_offset:1944; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1944, x17, x15, 1328, x18)

inst_1183:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0f1623 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x204092 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3323db and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0f1623; op2val:0xbf204092; op3val:0x3eb323db; valaddr_reg:x16; val_offset:1956; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1956, x17, x15, 1336, x18)

inst_1184:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0f1623 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x204092 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3323db and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0f1623; op2val:0xbf204092; op3val:0x3eb323db; valaddr_reg:x16; val_offset:1968; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1968, x17, x15, 1344, x18)

inst_1185:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0f1623 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x204092 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3323db and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0f1623; op2val:0xbf204092; op3val:0x3eb323db; valaddr_reg:x16; val_offset:1980; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1980, x17, x15, 1352, x18)

inst_1186:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x78edc3 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5d247a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5708ba and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f78edc3; op2val:0xbf5d247a; op3val:0x3f5708ba; valaddr_reg:x16; val_offset:1992; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1992, x17, x15, 1360, x18)

inst_1187:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x78edc3 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5d247a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5708ba and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f78edc3; op2val:0xbf5d247a; op3val:0x3f5708ba; valaddr_reg:x16; val_offset:2004; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 2004, x17, x15, 1368, x18)

inst_1188:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x78edc3 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5d247a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5708ba and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f78edc3; op2val:0xbf5d247a; op3val:0x3f5708ba; valaddr_reg:x16; val_offset:2016; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 2016, x17, x15, 1376, x18)

inst_1189:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x78edc3 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5d247a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5708ba and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f78edc3; op2val:0xbf5d247a; op3val:0x3f5708ba; valaddr_reg:x16; val_offset:2028; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 2028, x17, x15, 1384, x18)
addi x16,x16,2040

inst_1190:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x78edc3 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5d247a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5708ba and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f78edc3; op2val:0xbf5d247a; op3val:0x3f5708ba; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 1392, x18)

inst_1191:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x39ec9c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4519d2 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0f25d5 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb9ec9c; op2val:0xbf4519d2; op3val:0x3e8f25d5; valaddr_reg:x16; val_offset:12; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 12, x17, x15, 1400, x18)

inst_1192:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x39ec9c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4519d2 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0f25d5 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb9ec9c; op2val:0xbf4519d2; op3val:0x3e8f25d5; valaddr_reg:x16; val_offset:24; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 24, x17, x15, 1408, x18)

inst_1193:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x39ec9c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4519d2 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0f25d5 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb9ec9c; op2val:0xbf4519d2; op3val:0x3e8f25d5; valaddr_reg:x16; val_offset:36; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 36, x17, x15, 1416, x18)

inst_1194:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x39ec9c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4519d2 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0f25d5 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb9ec9c; op2val:0xbf4519d2; op3val:0x3e8f25d5; valaddr_reg:x16; val_offset:48; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 48, x17, x15, 1424, x18)

inst_1195:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x39ec9c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4519d2 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0f25d5 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb9ec9c; op2val:0xbf4519d2; op3val:0x3e8f25d5; valaddr_reg:x16; val_offset:60; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 60, x17, x15, 1432, x18)

inst_1196:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x40a588 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x19490b and fs3 == 0 and fe3 == 0x7c and fm3 == 0x66b3cc and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec0a588; op2val:0xbf19490b; op3val:0x3e66b3cc; valaddr_reg:x16; val_offset:72; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 72, x17, x15, 1440, x18)

inst_1197:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x40a588 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x19490b and fs3 == 0 and fe3 == 0x7c and fm3 == 0x66b3cc and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec0a588; op2val:0xbf19490b; op3val:0x3e66b3cc; valaddr_reg:x16; val_offset:84; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 84, x17, x15, 1448, x18)

inst_1198:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x40a588 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x19490b and fs3 == 0 and fe3 == 0x7c and fm3 == 0x66b3cc and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec0a588; op2val:0xbf19490b; op3val:0x3e66b3cc; valaddr_reg:x16; val_offset:96; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 96, x17, x15, 1456, x18)

inst_1199:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x40a588 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x19490b and fs3 == 0 and fe3 == 0x7c and fm3 == 0x66b3cc and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec0a588; op2val:0xbf19490b; op3val:0x3e66b3cc; valaddr_reg:x16; val_offset:108; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 108, x17, x15, 1464, x18)

inst_1200:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x40a588 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x19490b and fs3 == 0 and fe3 == 0x7c and fm3 == 0x66b3cc and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec0a588; op2val:0xbf19490b; op3val:0x3e66b3cc; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 1472, x18)

inst_1201:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2b3c36 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5dad69 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1446f9 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eab3c36; op2val:0xbfddad69; op3val:0x3f1446f9; valaddr_reg:x16; val_offset:132; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 132, x17, x15, 1480, x18)

inst_1202:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2b3c36 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5dad69 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1446f9 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eab3c36; op2val:0xbfddad69; op3val:0x3f1446f9; valaddr_reg:x16; val_offset:144; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 144, x17, x15, 1488, x18)

inst_1203:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2b3c36 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5dad69 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1446f9 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eab3c36; op2val:0xbfddad69; op3val:0x3f1446f9; valaddr_reg:x16; val_offset:156; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 156, x17, x15, 1496, x18)

inst_1204:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2b3c36 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5dad69 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1446f9 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eab3c36; op2val:0xbfddad69; op3val:0x3f1446f9; valaddr_reg:x16; val_offset:168; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 168, x17, x15, 1504, x18)

inst_1205:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2b3c36 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5dad69 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1446f9 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eab3c36; op2val:0xbfddad69; op3val:0x3f1446f9; valaddr_reg:x16; val_offset:180; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 180, x17, x15, 1512, x18)

inst_1206:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x60e642 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7448d3 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x569b71 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e60e642; op2val:0xbff448d3; op3val:0x3ed69b71; valaddr_reg:x16; val_offset:192; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 192, x17, x15, 1520, x18)

inst_1207:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x60e642 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7448d3 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x569b71 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e60e642; op2val:0xbff448d3; op3val:0x3ed69b71; valaddr_reg:x16; val_offset:204; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 204, x17, x15, 1528, x18)

inst_1208:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x60e642 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7448d3 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x569b71 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e60e642; op2val:0xbff448d3; op3val:0x3ed69b71; valaddr_reg:x16; val_offset:216; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 216, x17, x15, 1536, x18)

inst_1209:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x60e642 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7448d3 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x569b71 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e60e642; op2val:0xbff448d3; op3val:0x3ed69b71; valaddr_reg:x16; val_offset:228; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 228, x17, x15, 1544, x18)

inst_1210:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x60e642 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7448d3 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x569b71 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e60e642; op2val:0xbff448d3; op3val:0x3ed69b71; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 1552, x18)

inst_1211:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0a0f1d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4490a5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x540329 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8a0f1d; op2val:0xc04490a5; op3val:0x3f540329; valaddr_reg:x16; val_offset:252; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 252, x17, x15, 1560, x18)

inst_1212:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0a0f1d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4490a5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x540329 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8a0f1d; op2val:0xc04490a5; op3val:0x3f540329; valaddr_reg:x16; val_offset:264; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 264, x17, x15, 1568, x18)

inst_1213:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0a0f1d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4490a5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x540329 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8a0f1d; op2val:0xc04490a5; op3val:0x3f540329; valaddr_reg:x16; val_offset:276; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 276, x17, x15, 1576, x18)

inst_1214:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0a0f1d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4490a5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x540329 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8a0f1d; op2val:0xc04490a5; op3val:0x3f540329; valaddr_reg:x16; val_offset:288; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 288, x17, x15, 1584, x18)

inst_1215:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0a0f1d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4490a5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x540329 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8a0f1d; op2val:0xc04490a5; op3val:0x3f540329; valaddr_reg:x16; val_offset:300; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 300, x17, x15, 1592, x18)

inst_1216:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1dfd77 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x688ddd and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0f8541 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e9dfd77; op2val:0xbf688ddd; op3val:0x3e8f8541; valaddr_reg:x16; val_offset:312; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 312, x17, x15, 1600, x18)

inst_1217:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1dfd77 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x688ddd and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0f8541 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e9dfd77; op2val:0xbf688ddd; op3val:0x3e8f8541; valaddr_reg:x16; val_offset:324; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 324, x17, x15, 1608, x18)

inst_1218:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1dfd77 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x688ddd and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0f8541 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e9dfd77; op2val:0xbf688ddd; op3val:0x3e8f8541; valaddr_reg:x16; val_offset:336; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 336, x17, x15, 1616, x18)

inst_1219:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1dfd77 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x688ddd and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0f8541 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e9dfd77; op2val:0xbf688ddd; op3val:0x3e8f8541; valaddr_reg:x16; val_offset:348; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 348, x17, x15, 1624, x18)

inst_1220:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1dfd77 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x688ddd and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0f8541 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e9dfd77; op2val:0xbf688ddd; op3val:0x3e8f8541; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 1632, x18)

inst_1221:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x003e07 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0592f0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x05d3ab and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d803e07; op2val:0xc10592f0; op3val:0x3f05d3ab; valaddr_reg:x16; val_offset:372; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 372, x17, x15, 1640, x18)

inst_1222:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x003e07 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0592f0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x05d3ab and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d803e07; op2val:0xc10592f0; op3val:0x3f05d3ab; valaddr_reg:x16; val_offset:384; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 384, x17, x15, 1648, x18)

inst_1223:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x003e07 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0592f0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x05d3ab and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d803e07; op2val:0xc10592f0; op3val:0x3f05d3ab; valaddr_reg:x16; val_offset:396; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 396, x17, x15, 1656, x18)

inst_1224:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x003e07 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0592f0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x05d3ab and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d803e07; op2val:0xc10592f0; op3val:0x3f05d3ab; valaddr_reg:x16; val_offset:408; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 408, x17, x15, 1664, x18)

inst_1225:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x003e07 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0592f0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x05d3ab and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d803e07; op2val:0xc10592f0; op3val:0x3f05d3ab; valaddr_reg:x16; val_offset:420; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 420, x17, x15, 1672, x18)

inst_1226:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5575b6 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x48a45d and fs3 == 0 and fe3 == 0x7c and fm3 == 0x274d03 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5575b6; op2val:0xbe48a45d; op3val:0x3e274d03; valaddr_reg:x16; val_offset:432; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 432, x17, x15, 1680, x18)

inst_1227:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5575b6 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x48a45d and fs3 == 0 and fe3 == 0x7c and fm3 == 0x274d03 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5575b6; op2val:0xbe48a45d; op3val:0x3e274d03; valaddr_reg:x16; val_offset:444; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 444, x17, x15, 1688, x18)

inst_1228:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5575b6 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x48a45d and fs3 == 0 and fe3 == 0x7c and fm3 == 0x274d03 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5575b6; op2val:0xbe48a45d; op3val:0x3e274d03; valaddr_reg:x16; val_offset:456; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 456, x17, x15, 1696, x18)

inst_1229:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5575b6 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x48a45d and fs3 == 0 and fe3 == 0x7c and fm3 == 0x274d03 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5575b6; op2val:0xbe48a45d; op3val:0x3e274d03; valaddr_reg:x16; val_offset:468; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 468, x17, x15, 1704, x18)

inst_1230:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5575b6 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x48a45d and fs3 == 0 and fe3 == 0x7c and fm3 == 0x274d03 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5575b6; op2val:0xbe48a45d; op3val:0x3e274d03; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1712, x18)

inst_1231:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x76b66d and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7a0ca4 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x70fa56 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef6b66d; op2val:0xbf7a0ca4; op3val:0x3ef0fa56; valaddr_reg:x16; val_offset:492; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 492, x17, x15, 1720, x18)

inst_1232:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x76b66d and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7a0ca4 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x70fa56 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef6b66d; op2val:0xbf7a0ca4; op3val:0x3ef0fa56; valaddr_reg:x16; val_offset:504; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 504, x17, x15, 1728, x18)

inst_1233:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x76b66d and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7a0ca4 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x70fa56 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef6b66d; op2val:0xbf7a0ca4; op3val:0x3ef0fa56; valaddr_reg:x16; val_offset:516; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 516, x17, x15, 1736, x18)

inst_1234:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x76b66d and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7a0ca4 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x70fa56 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef6b66d; op2val:0xbf7a0ca4; op3val:0x3ef0fa56; valaddr_reg:x16; val_offset:528; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 528, x17, x15, 1744, x18)

inst_1235:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x76b66d and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7a0ca4 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x70fa56 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef6b66d; op2val:0xbf7a0ca4; op3val:0x3ef0fa56; valaddr_reg:x16; val_offset:540; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 540, x17, x15, 1752, x18)

inst_1236:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x439b66 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x69194f and fs3 == 0 and fe3 == 0x7a and fm3 == 0x321bc7 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3cc39b66; op2val:0xbfe9194f; op3val:0x3d321bc7; valaddr_reg:x16; val_offset:552; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 552, x17, x15, 1760, x18)

inst_1237:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x439b66 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x69194f and fs3 == 0 and fe3 == 0x7a and fm3 == 0x321bc7 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3cc39b66; op2val:0xbfe9194f; op3val:0x3d321bc7; valaddr_reg:x16; val_offset:564; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 564, x17, x15, 1768, x18)

inst_1238:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x439b66 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x69194f and fs3 == 0 and fe3 == 0x7a and fm3 == 0x321bc7 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3cc39b66; op2val:0xbfe9194f; op3val:0x3d321bc7; valaddr_reg:x16; val_offset:576; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 576, x17, x15, 1776, x18)

inst_1239:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x439b66 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x69194f and fs3 == 0 and fe3 == 0x7a and fm3 == 0x321bc7 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3cc39b66; op2val:0xbfe9194f; op3val:0x3d321bc7; valaddr_reg:x16; val_offset:588; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 588, x17, x15, 1784, x18)

inst_1240:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x439b66 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x69194f and fs3 == 0 and fe3 == 0x7a and fm3 == 0x321bc7 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3cc39b66; op2val:0xbfe9194f; op3val:0x3d321bc7; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1792, x18)

inst_1241:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0535fc and fs2 == 1 and fe2 == 0x80 and fm2 == 0x195456 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1f924c and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e0535fc; op2val:0xc0195456; op3val:0x3e9f924c; valaddr_reg:x16; val_offset:612; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 612, x17, x15, 1800, x18)

inst_1242:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0535fc and fs2 == 1 and fe2 == 0x80 and fm2 == 0x195456 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1f924c and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e0535fc; op2val:0xc0195456; op3val:0x3e9f924c; valaddr_reg:x16; val_offset:624; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 624, x17, x15, 1808, x18)

inst_1243:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0535fc and fs2 == 1 and fe2 == 0x80 and fm2 == 0x195456 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1f924c and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e0535fc; op2val:0xc0195456; op3val:0x3e9f924c; valaddr_reg:x16; val_offset:636; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 636, x17, x15, 1816, x18)

inst_1244:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0535fc and fs2 == 1 and fe2 == 0x80 and fm2 == 0x195456 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1f924c and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e0535fc; op2val:0xc0195456; op3val:0x3e9f924c; valaddr_reg:x16; val_offset:648; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 648, x17, x15, 1824, x18)

inst_1245:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0535fc and fs2 == 1 and fe2 == 0x80 and fm2 == 0x195456 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1f924c and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e0535fc; op2val:0xc0195456; op3val:0x3e9f924c; valaddr_reg:x16; val_offset:660; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 660, x17, x15, 1832, x18)

inst_1246:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x266370 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x778ad2 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x20e42c and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f266370; op2val:0xbe778ad2; op3val:0x3e20e42c; valaddr_reg:x16; val_offset:672; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 672, x17, x15, 1840, x18)

inst_1247:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x266370 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x778ad2 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x20e42c and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f266370; op2val:0xbe778ad2; op3val:0x3e20e42c; valaddr_reg:x16; val_offset:684; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 684, x17, x15, 1848, x18)

inst_1248:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x266370 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x778ad2 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x20e42c and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f266370; op2val:0xbe778ad2; op3val:0x3e20e42c; valaddr_reg:x16; val_offset:696; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 696, x17, x15, 1856, x18)

inst_1249:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x266370 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x778ad2 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x20e42c and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f266370; op2val:0xbe778ad2; op3val:0x3e20e42c; valaddr_reg:x16; val_offset:708; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 708, x17, x15, 1864, x18)

inst_1250:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x266370 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x778ad2 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x20e42c and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f266370; op2val:0xbe778ad2; op3val:0x3e20e42c; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1872, x18)

inst_1251:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x063b7e and fs2 == 1 and fe2 == 0x7e and fm2 == 0x27c423 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x2fef4f and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e863b7e; op2val:0xbf27c423; op3val:0x3e2fef4f; valaddr_reg:x16; val_offset:732; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 732, x17, x15, 1880, x18)

inst_1252:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x063b7e and fs2 == 1 and fe2 == 0x7e and fm2 == 0x27c423 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x2fef4f and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e863b7e; op2val:0xbf27c423; op3val:0x3e2fef4f; valaddr_reg:x16; val_offset:744; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 744, x17, x15, 1888, x18)

inst_1253:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x063b7e and fs2 == 1 and fe2 == 0x7e and fm2 == 0x27c423 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x2fef4f and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e863b7e; op2val:0xbf27c423; op3val:0x3e2fef4f; valaddr_reg:x16; val_offset:756; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 756, x17, x15, 1896, x18)

inst_1254:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x063b7e and fs2 == 1 and fe2 == 0x7e and fm2 == 0x27c423 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x2fef4f and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e863b7e; op2val:0xbf27c423; op3val:0x3e2fef4f; valaddr_reg:x16; val_offset:768; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 768, x17, x15, 1904, x18)

inst_1255:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x063b7e and fs2 == 1 and fe2 == 0x7e and fm2 == 0x27c423 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x2fef4f and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e863b7e; op2val:0xbf27c423; op3val:0x3e2fef4f; valaddr_reg:x16; val_offset:780; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 780, x17, x15, 1912, x18)

inst_1256:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x26f10a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0bbac8 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x363d5d and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f26f10a; op2val:0xbf0bbac8; op3val:0x3eb63d5d; valaddr_reg:x16; val_offset:792; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 792, x17, x15, 1920, x18)

inst_1257:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x26f10a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0bbac8 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x363d5d and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f26f10a; op2val:0xbf0bbac8; op3val:0x3eb63d5d; valaddr_reg:x16; val_offset:804; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 804, x17, x15, 1928, x18)

inst_1258:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x26f10a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0bbac8 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x363d5d and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f26f10a; op2val:0xbf0bbac8; op3val:0x3eb63d5d; valaddr_reg:x16; val_offset:816; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 816, x17, x15, 1936, x18)

inst_1259:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x26f10a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0bbac8 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x363d5d and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f26f10a; op2val:0xbf0bbac8; op3val:0x3eb63d5d; valaddr_reg:x16; val_offset:828; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 828, x17, x15, 1944, x18)

inst_1260:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x26f10a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0bbac8 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x363d5d and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f26f10a; op2val:0xbf0bbac8; op3val:0x3eb63d5d; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1952, x18)

inst_1261:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x348325 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x12f232 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4f3b24 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb48325; op2val:0xbf12f232; op3val:0x3e4f3b24; valaddr_reg:x16; val_offset:852; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 852, x17, x15, 1960, x18)

inst_1262:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x348325 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x12f232 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4f3b24 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb48325; op2val:0xbf12f232; op3val:0x3e4f3b24; valaddr_reg:x16; val_offset:864; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 864, x17, x15, 1968, x18)

inst_1263:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x348325 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x12f232 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4f3b24 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb48325; op2val:0xbf12f232; op3val:0x3e4f3b24; valaddr_reg:x16; val_offset:876; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 876, x17, x15, 1976, x18)

inst_1264:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x348325 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x12f232 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4f3b24 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb48325; op2val:0xbf12f232; op3val:0x3e4f3b24; valaddr_reg:x16; val_offset:888; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 888, x17, x15, 1984, x18)

inst_1265:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x348325 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x12f232 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4f3b24 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb48325; op2val:0xbf12f232; op3val:0x3e4f3b24; valaddr_reg:x16; val_offset:900; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 900, x17, x15, 1992, x18)

inst_1266:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x097cd4 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x2ec419 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3bb853 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f097cd4; op2val:0xbeaec419; op3val:0x3e3bb853; valaddr_reg:x16; val_offset:912; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 912, x17, x15, 2000, x18)

inst_1267:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x097cd4 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x2ec419 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3bb853 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f097cd4; op2val:0xbeaec419; op3val:0x3e3bb853; valaddr_reg:x16; val_offset:924; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 924, x17, x15, 2008, x18)

inst_1268:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x097cd4 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x2ec419 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3bb853 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f097cd4; op2val:0xbeaec419; op3val:0x3e3bb853; valaddr_reg:x16; val_offset:936; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 936, x17, x15, 2016, x18)

inst_1269:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x097cd4 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x2ec419 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3bb853 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f097cd4; op2val:0xbeaec419; op3val:0x3e3bb853; valaddr_reg:x16; val_offset:948; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 948, x17, x15, 2024, x18)
RVTEST_SIGBASE(x15,signature_x15_6)

inst_1270:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x097cd4 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x2ec419 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3bb853 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f097cd4; op2val:0xbeaec419; op3val:0x3e3bb853; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 0, x18)

inst_1271:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3fd2a1 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x605d93 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x281e6b and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3fd2a1; op2val:0xbee05d93; op3val:0x3ea81e6b; valaddr_reg:x16; val_offset:972; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 972, x17, x15, 8, x18)

inst_1272:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3fd2a1 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x605d93 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x281e6b and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3fd2a1; op2val:0xbee05d93; op3val:0x3ea81e6b; valaddr_reg:x16; val_offset:984; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 984, x17, x15, 16, x18)

inst_1273:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3fd2a1 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x605d93 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x281e6b and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3fd2a1; op2val:0xbee05d93; op3val:0x3ea81e6b; valaddr_reg:x16; val_offset:996; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 996, x17, x15, 24, x18)

inst_1274:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3fd2a1 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x605d93 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x281e6b and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3fd2a1; op2val:0xbee05d93; op3val:0x3ea81e6b; valaddr_reg:x16; val_offset:1008; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1008, x17, x15, 32, x18)

inst_1275:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3fd2a1 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x605d93 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x281e6b and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3fd2a1; op2val:0xbee05d93; op3val:0x3ea81e6b; valaddr_reg:x16; val_offset:1020; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1020, x17, x15, 40, x18)

inst_1276:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7d090c and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6aa87d and fs3 == 0 and fe3 == 0x7d and fm3 == 0x67f0cf and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7d090c; op2val:0xbeeaa87d; op3val:0x3ee7f0cf; valaddr_reg:x16; val_offset:1032; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1032, x17, x15, 48, x18)

inst_1277:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7d090c and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6aa87d and fs3 == 0 and fe3 == 0x7d and fm3 == 0x67f0cf and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7d090c; op2val:0xbeeaa87d; op3val:0x3ee7f0cf; valaddr_reg:x16; val_offset:1044; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1044, x17, x15, 56, x18)

inst_1278:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7d090c and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6aa87d and fs3 == 0 and fe3 == 0x7d and fm3 == 0x67f0cf and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7d090c; op2val:0xbeeaa87d; op3val:0x3ee7f0cf; valaddr_reg:x16; val_offset:1056; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1056, x17, x15, 64, x18)

inst_1279:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7d090c and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6aa87d and fs3 == 0 and fe3 == 0x7d and fm3 == 0x67f0cf and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7d090c; op2val:0xbeeaa87d; op3val:0x3ee7f0cf; valaddr_reg:x16; val_offset:1068; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1068, x17, x15, 72, x18)

inst_1280:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7d090c and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6aa87d and fs3 == 0 and fe3 == 0x7d and fm3 == 0x67f0cf and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7d090c; op2val:0xbeeaa87d; op3val:0x3ee7f0cf; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 80, x18)

inst_1281:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x335b8c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x19393a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x56b39f and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb35b8c; op2val:0xbf99393a; op3val:0x3ed6b39f; valaddr_reg:x16; val_offset:1092; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1092, x17, x15, 88, x18)

inst_1282:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x335b8c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x19393a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x56b39f and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb35b8c; op2val:0xbf99393a; op3val:0x3ed6b39f; valaddr_reg:x16; val_offset:1104; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1104, x17, x15, 96, x18)

inst_1283:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x335b8c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x19393a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x56b39f and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb35b8c; op2val:0xbf99393a; op3val:0x3ed6b39f; valaddr_reg:x16; val_offset:1116; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1116, x17, x15, 104, x18)

inst_1284:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x335b8c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x19393a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x56b39f and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb35b8c; op2val:0xbf99393a; op3val:0x3ed6b39f; valaddr_reg:x16; val_offset:1128; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1128, x17, x15, 112, x18)

inst_1285:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x335b8c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x19393a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x56b39f and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb35b8c; op2val:0xbf99393a; op3val:0x3ed6b39f; valaddr_reg:x16; val_offset:1140; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1140, x17, x15, 120, x18)

inst_1286:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x34c61c and fs2 == 1 and fe2 == 0x7b and fm2 == 0x1decde and fs3 == 0 and fe3 == 0x7a and fm3 == 0x5f0987 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f34c61c; op2val:0xbd9decde; op3val:0x3d5f0987; valaddr_reg:x16; val_offset:1152; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1152, x17, x15, 128, x18)

inst_1287:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x34c61c and fs2 == 1 and fe2 == 0x7b and fm2 == 0x1decde and fs3 == 0 and fe3 == 0x7a and fm3 == 0x5f0987 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f34c61c; op2val:0xbd9decde; op3val:0x3d5f0987; valaddr_reg:x16; val_offset:1164; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1164, x17, x15, 136, x18)

inst_1288:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x34c61c and fs2 == 1 and fe2 == 0x7b and fm2 == 0x1decde and fs3 == 0 and fe3 == 0x7a and fm3 == 0x5f0987 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f34c61c; op2val:0xbd9decde; op3val:0x3d5f0987; valaddr_reg:x16; val_offset:1176; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1176, x17, x15, 144, x18)

inst_1289:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x34c61c and fs2 == 1 and fe2 == 0x7b and fm2 == 0x1decde and fs3 == 0 and fe3 == 0x7a and fm3 == 0x5f0987 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f34c61c; op2val:0xbd9decde; op3val:0x3d5f0987; valaddr_reg:x16; val_offset:1188; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1188, x17, x15, 152, x18)

inst_1290:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x34c61c and fs2 == 1 and fe2 == 0x7b and fm2 == 0x1decde and fs3 == 0 and fe3 == 0x7a and fm3 == 0x5f0987 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f34c61c; op2val:0xbd9decde; op3val:0x3d5f0987; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 160, x18)

inst_1291:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x6bc751 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2bd778 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1e4496 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e6bc751; op2val:0xbfabd778; op3val:0x3e9e4496; valaddr_reg:x16; val_offset:1212; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1212, x17, x15, 168, x18)

inst_1292:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x6bc751 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2bd778 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1e4496 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e6bc751; op2val:0xbfabd778; op3val:0x3e9e4496; valaddr_reg:x16; val_offset:1224; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1224, x17, x15, 176, x18)

inst_1293:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x6bc751 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2bd778 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1e4496 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e6bc751; op2val:0xbfabd778; op3val:0x3e9e4496; valaddr_reg:x16; val_offset:1236; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1236, x17, x15, 184, x18)

inst_1294:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x6bc751 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2bd778 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1e4496 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e6bc751; op2val:0xbfabd778; op3val:0x3e9e4496; valaddr_reg:x16; val_offset:1248; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1248, x17, x15, 192, x18)

inst_1295:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x6bc751 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2bd778 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1e4496 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e6bc751; op2val:0xbfabd778; op3val:0x3e9e4496; valaddr_reg:x16; val_offset:1260; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1260, x17, x15, 200, x18)

inst_1296:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x381a14 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x37158a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x03aa22 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f381a14; op2val:0xbf37158a; op3val:0x3f03aa22; valaddr_reg:x16; val_offset:1272; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1272, x17, x15, 208, x18)

inst_1297:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x381a14 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x37158a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x03aa22 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f381a14; op2val:0xbf37158a; op3val:0x3f03aa22; valaddr_reg:x16; val_offset:1284; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1284, x17, x15, 216, x18)

inst_1298:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x381a14 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x37158a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x03aa22 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f381a14; op2val:0xbf37158a; op3val:0x3f03aa22; valaddr_reg:x16; val_offset:1296; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1296, x17, x15, 224, x18)

inst_1299:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x381a14 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x37158a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x03aa22 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f381a14; op2val:0xbf37158a; op3val:0x3f03aa22; valaddr_reg:x16; val_offset:1308; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1308, x17, x15, 232, x18)

inst_1300:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x381a14 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x37158a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x03aa22 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f381a14; op2val:0xbf37158a; op3val:0x3f03aa22; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 240, x18)

inst_1301:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x22f622 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6db2eb and fs3 == 0 and fe3 == 0x7d and fm3 == 0x174fc3 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f22f622; op2val:0xbeedb2eb; op3val:0x3e974fc3; valaddr_reg:x16; val_offset:1332; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1332, x17, x15, 248, x18)

inst_1302:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x22f622 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6db2eb and fs3 == 0 and fe3 == 0x7d and fm3 == 0x174fc3 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f22f622; op2val:0xbeedb2eb; op3val:0x3e974fc3; valaddr_reg:x16; val_offset:1344; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1344, x17, x15, 256, x18)

inst_1303:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x22f622 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6db2eb and fs3 == 0 and fe3 == 0x7d and fm3 == 0x174fc3 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f22f622; op2val:0xbeedb2eb; op3val:0x3e974fc3; valaddr_reg:x16; val_offset:1356; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1356, x17, x15, 264, x18)

inst_1304:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x22f622 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6db2eb and fs3 == 0 and fe3 == 0x7d and fm3 == 0x174fc3 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f22f622; op2val:0xbeedb2eb; op3val:0x3e974fc3; valaddr_reg:x16; val_offset:1368; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1368, x17, x15, 272, x18)

inst_1305:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x22f622 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6db2eb and fs3 == 0 and fe3 == 0x7d and fm3 == 0x174fc3 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f22f622; op2val:0xbeedb2eb; op3val:0x3e974fc3; valaddr_reg:x16; val_offset:1380; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1380, x17, x15, 280, x18)

inst_1306:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2c05c6 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x372477 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x762143 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eac05c6; op2val:0xbf372477; op3val:0x3e762143; valaddr_reg:x16; val_offset:1392; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1392, x17, x15, 288, x18)

inst_1307:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2c05c6 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x372477 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x762143 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eac05c6; op2val:0xbf372477; op3val:0x3e762143; valaddr_reg:x16; val_offset:1404; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1404, x17, x15, 296, x18)

inst_1308:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2c05c6 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x372477 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x762143 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eac05c6; op2val:0xbf372477; op3val:0x3e762143; valaddr_reg:x16; val_offset:1416; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1416, x17, x15, 304, x18)

inst_1309:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2c05c6 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x372477 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x762143 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eac05c6; op2val:0xbf372477; op3val:0x3e762143; valaddr_reg:x16; val_offset:1428; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1428, x17, x15, 312, x18)

inst_1310:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2c05c6 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x372477 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x762143 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eac05c6; op2val:0xbf372477; op3val:0x3e762143; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 320, x18)

inst_1311:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x66811d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2da96f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1c5dd0 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e66811d; op2val:0xbfada96f; op3val:0x3e9c5dd0; valaddr_reg:x16; val_offset:1452; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1452, x17, x15, 328, x18)

inst_1312:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x66811d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2da96f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1c5dd0 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e66811d; op2val:0xbfada96f; op3val:0x3e9c5dd0; valaddr_reg:x16; val_offset:1464; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1464, x17, x15, 336, x18)

inst_1313:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x66811d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2da96f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1c5dd0 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e66811d; op2val:0xbfada96f; op3val:0x3e9c5dd0; valaddr_reg:x16; val_offset:1476; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1476, x17, x15, 344, x18)

inst_1314:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x66811d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2da96f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1c5dd0 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e66811d; op2val:0xbfada96f; op3val:0x3e9c5dd0; valaddr_reg:x16; val_offset:1488; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1488, x17, x15, 352, x18)

inst_1315:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x66811d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2da96f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1c5dd0 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e66811d; op2val:0xbfada96f; op3val:0x3e9c5dd0; valaddr_reg:x16; val_offset:1500; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1500, x17, x15, 360, x18)

inst_1316:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x23801f and fs2 == 1 and fe2 == 0x7d and fm2 == 0x2b8993 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x5b1ce5 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f23801f; op2val:0xbeab8993; op3val:0x3e5b1ce5; valaddr_reg:x16; val_offset:1512; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1512, x17, x15, 368, x18)

inst_1317:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x23801f and fs2 == 1 and fe2 == 0x7d and fm2 == 0x2b8993 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x5b1ce5 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f23801f; op2val:0xbeab8993; op3val:0x3e5b1ce5; valaddr_reg:x16; val_offset:1524; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1524, x17, x15, 376, x18)

inst_1318:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x23801f and fs2 == 1 and fe2 == 0x7d and fm2 == 0x2b8993 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x5b1ce5 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f23801f; op2val:0xbeab8993; op3val:0x3e5b1ce5; valaddr_reg:x16; val_offset:1536; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1536, x17, x15, 384, x18)

inst_1319:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x23801f and fs2 == 1 and fe2 == 0x7d and fm2 == 0x2b8993 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x5b1ce5 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f23801f; op2val:0xbeab8993; op3val:0x3e5b1ce5; valaddr_reg:x16; val_offset:1548; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1548, x17, x15, 392, x18)

inst_1320:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x23801f and fs2 == 1 and fe2 == 0x7d and fm2 == 0x2b8993 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x5b1ce5 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f23801f; op2val:0xbeab8993; op3val:0x3e5b1ce5; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 400, x18)

inst_1321:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5f366b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1bbe28 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x07cbc0 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e5f366b; op2val:0xbf1bbe28; op3val:0x3e07cbc0; valaddr_reg:x16; val_offset:1572; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1572, x17, x15, 408, x18)

inst_1322:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5f366b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1bbe28 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x07cbc0 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e5f366b; op2val:0xbf1bbe28; op3val:0x3e07cbc0; valaddr_reg:x16; val_offset:1584; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1584, x17, x15, 416, x18)

inst_1323:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5f366b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1bbe28 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x07cbc0 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e5f366b; op2val:0xbf1bbe28; op3val:0x3e07cbc0; valaddr_reg:x16; val_offset:1596; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1596, x17, x15, 424, x18)

inst_1324:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5f366b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1bbe28 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x07cbc0 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e5f366b; op2val:0xbf1bbe28; op3val:0x3e07cbc0; valaddr_reg:x16; val_offset:1608; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1608, x17, x15, 432, x18)

inst_1325:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5f366b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1bbe28 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x07cbc0 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e5f366b; op2val:0xbf1bbe28; op3val:0x3e07cbc0; valaddr_reg:x16; val_offset:1620; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1620, x17, x15, 440, x18)

inst_1326:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x692e4a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4c84d6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3a49e2 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f692e4a; op2val:0xbf4c84d6; op3val:0x3f3a49e2; valaddr_reg:x16; val_offset:1632; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1632, x17, x15, 448, x18)

inst_1327:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x692e4a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4c84d6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3a49e2 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f692e4a; op2val:0xbf4c84d6; op3val:0x3f3a49e2; valaddr_reg:x16; val_offset:1644; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1644, x17, x15, 456, x18)

inst_1328:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x692e4a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4c84d6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3a49e2 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f692e4a; op2val:0xbf4c84d6; op3val:0x3f3a49e2; valaddr_reg:x16; val_offset:1656; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1656, x17, x15, 464, x18)

inst_1329:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x692e4a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4c84d6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3a49e2 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f692e4a; op2val:0xbf4c84d6; op3val:0x3f3a49e2; valaddr_reg:x16; val_offset:1668; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1668, x17, x15, 472, x18)

inst_1330:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x692e4a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4c84d6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3a49e2 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f692e4a; op2val:0xbf4c84d6; op3val:0x3f3a49e2; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 480, x18)

inst_1331:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x002c67 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x291ec9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x295974 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f002c67; op2val:0xbfa91ec9; op3val:0x3f295974; valaddr_reg:x16; val_offset:1692; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1692, x17, x15, 488, x18)

inst_1332:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x002c67 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x291ec9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x295974 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f002c67; op2val:0xbfa91ec9; op3val:0x3f295974; valaddr_reg:x16; val_offset:1704; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1704, x17, x15, 496, x18)

inst_1333:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x002c67 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x291ec9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x295974 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f002c67; op2val:0xbfa91ec9; op3val:0x3f295974; valaddr_reg:x16; val_offset:1716; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1716, x17, x15, 504, x18)

inst_1334:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x002c67 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x291ec9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x295974 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f002c67; op2val:0xbfa91ec9; op3val:0x3f295974; valaddr_reg:x16; val_offset:1728; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1728, x17, x15, 512, x18)

inst_1335:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x002c67 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x291ec9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x295974 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f002c67; op2val:0xbfa91ec9; op3val:0x3f295974; valaddr_reg:x16; val_offset:1740; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1740, x17, x15, 520, x18)

inst_1336:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x249819 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x1487c4 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3efe72 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d249819; op2val:0xc11487c4; op3val:0x3ebefe72; valaddr_reg:x16; val_offset:1752; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1752, x17, x15, 528, x18)

inst_1337:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x249819 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x1487c4 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3efe72 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d249819; op2val:0xc11487c4; op3val:0x3ebefe72; valaddr_reg:x16; val_offset:1764; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1764, x17, x15, 536, x18)

inst_1338:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x249819 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x1487c4 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3efe72 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d249819; op2val:0xc11487c4; op3val:0x3ebefe72; valaddr_reg:x16; val_offset:1776; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1776, x17, x15, 544, x18)

inst_1339:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x249819 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x1487c4 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3efe72 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d249819; op2val:0xc11487c4; op3val:0x3ebefe72; valaddr_reg:x16; val_offset:1788; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1788, x17, x15, 552, x18)

inst_1340:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x249819 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x1487c4 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3efe72 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d249819; op2val:0xc11487c4; op3val:0x3ebefe72; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 560, x18)

inst_1341:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1f7ce1 and fs2 == 1 and fe2 == 0x79 and fm2 == 0x18b18b and fs3 == 0 and fe3 == 0x78 and fm3 == 0x3e4183 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1f7ce1; op2val:0xbc98b18b; op3val:0x3c3e4183; valaddr_reg:x16; val_offset:1812; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1812, x17, x15, 568, x18)

inst_1342:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1f7ce1 and fs2 == 1 and fe2 == 0x79 and fm2 == 0x18b18b and fs3 == 0 and fe3 == 0x78 and fm3 == 0x3e4183 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1f7ce1; op2val:0xbc98b18b; op3val:0x3c3e4183; valaddr_reg:x16; val_offset:1824; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1824, x17, x15, 576, x18)

inst_1343:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1f7ce1 and fs2 == 1 and fe2 == 0x79 and fm2 == 0x18b18b and fs3 == 0 and fe3 == 0x78 and fm3 == 0x3e4183 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1f7ce1; op2val:0xbc98b18b; op3val:0x3c3e4183; valaddr_reg:x16; val_offset:1836; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1836, x17, x15, 584, x18)

inst_1344:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1f7ce1 and fs2 == 1 and fe2 == 0x79 and fm2 == 0x18b18b and fs3 == 0 and fe3 == 0x78 and fm3 == 0x3e4183 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1f7ce1; op2val:0xbc98b18b; op3val:0x3c3e4183; valaddr_reg:x16; val_offset:1848; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1848, x17, x15, 592, x18)

inst_1345:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1f7ce1 and fs2 == 1 and fe2 == 0x79 and fm2 == 0x18b18b and fs3 == 0 and fe3 == 0x78 and fm3 == 0x3e4183 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1f7ce1; op2val:0xbc98b18b; op3val:0x3c3e4183; valaddr_reg:x16; val_offset:1860; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1860, x17, x15, 600, x18)

inst_1346:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x18a141 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x373c64 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5a7e8f and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f18a141; op2val:0xbfb73c64; op3val:0x3f5a7e8f; valaddr_reg:x16; val_offset:1872; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1872, x17, x15, 608, x18)

inst_1347:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x18a141 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x373c64 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5a7e8f and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f18a141; op2val:0xbfb73c64; op3val:0x3f5a7e8f; valaddr_reg:x16; val_offset:1884; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1884, x17, x15, 616, x18)

inst_1348:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x18a141 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x373c64 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5a7e8f and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f18a141; op2val:0xbfb73c64; op3val:0x3f5a7e8f; valaddr_reg:x16; val_offset:1896; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1896, x17, x15, 624, x18)

inst_1349:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x18a141 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x373c64 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5a7e8f and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f18a141; op2val:0xbfb73c64; op3val:0x3f5a7e8f; valaddr_reg:x16; val_offset:1908; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1908, x17, x15, 632, x18)

inst_1350:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x18a141 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x373c64 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5a7e8f and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f18a141; op2val:0xbfb73c64; op3val:0x3f5a7e8f; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 640, x18)

inst_1351:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x055d79 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2e325d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x357f8a and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f055d79; op2val:0xbfae325d; op3val:0x3f357f8a; valaddr_reg:x16; val_offset:1932; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1932, x17, x15, 648, x18)

inst_1352:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x055d79 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2e325d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x357f8a and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f055d79; op2val:0xbfae325d; op3val:0x3f357f8a; valaddr_reg:x16; val_offset:1944; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1944, x17, x15, 656, x18)

inst_1353:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x055d79 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2e325d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x357f8a and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f055d79; op2val:0xbfae325d; op3val:0x3f357f8a; valaddr_reg:x16; val_offset:1956; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1956, x17, x15, 664, x18)

inst_1354:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x055d79 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2e325d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x357f8a and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f055d79; op2val:0xbfae325d; op3val:0x3f357f8a; valaddr_reg:x16; val_offset:1968; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1968, x17, x15, 672, x18)

inst_1355:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x055d79 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2e325d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x357f8a and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f055d79; op2val:0xbfae325d; op3val:0x3f357f8a; valaddr_reg:x16; val_offset:1980; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1980, x17, x15, 680, x18)

inst_1356:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x030803 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x074a1c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0a7e51 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f030803; op2val:0xbf074a1c; op3val:0x3e8a7e51; valaddr_reg:x16; val_offset:1992; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1992, x17, x15, 688, x18)

inst_1357:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x030803 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x074a1c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0a7e51 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f030803; op2val:0xbf074a1c; op3val:0x3e8a7e51; valaddr_reg:x16; val_offset:2004; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 2004, x17, x15, 696, x18)

inst_1358:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x030803 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x074a1c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0a7e51 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f030803; op2val:0xbf074a1c; op3val:0x3e8a7e51; valaddr_reg:x16; val_offset:2016; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 2016, x17, x15, 704, x18)

inst_1359:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x030803 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x074a1c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0a7e51 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f030803; op2val:0xbf074a1c; op3val:0x3e8a7e51; valaddr_reg:x16; val_offset:2028; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 2028, x17, x15, 712, x18)
addi x16,x16,2040

inst_1360:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x030803 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x074a1c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0a7e51 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f030803; op2val:0xbf074a1c; op3val:0x3e8a7e51; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 720, x18)

inst_1361:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x448bc5 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x3635f7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0be4cd and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3cc48bc5; op2val:0xc1b635f7; op3val:0x3f0be4cd; valaddr_reg:x16; val_offset:12; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 12, x17, x15, 728, x18)

inst_1362:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x448bc5 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x3635f7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0be4cd and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3cc48bc5; op2val:0xc1b635f7; op3val:0x3f0be4cd; valaddr_reg:x16; val_offset:24; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 24, x17, x15, 736, x18)

inst_1363:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x448bc5 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x3635f7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0be4cd and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3cc48bc5; op2val:0xc1b635f7; op3val:0x3f0be4cd; valaddr_reg:x16; val_offset:36; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 36, x17, x15, 744, x18)

inst_1364:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x448bc5 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x3635f7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0be4cd and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3cc48bc5; op2val:0xc1b635f7; op3val:0x3f0be4cd; valaddr_reg:x16; val_offset:48; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 48, x17, x15, 752, x18)

inst_1365:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x448bc5 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x3635f7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0be4cd and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3cc48bc5; op2val:0xc1b635f7; op3val:0x3f0be4cd; valaddr_reg:x16; val_offset:60; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 60, x17, x15, 760, x18)

inst_1366:
// fs1 == 0 and fe1 == 0x74 and fm1 == 0x3783b0 and fs2 == 1 and fe2 == 0x86 and fm2 == 0x530d4c and fs3 == 0 and fe3 == 0x7c and fm3 == 0x174b13 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3a3783b0; op2val:0xc3530d4c; op3val:0x3e174b13; valaddr_reg:x16; val_offset:72; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 72, x17, x15, 768, x18)

inst_1367:
// fs1 == 0 and fe1 == 0x74 and fm1 == 0x3783b0 and fs2 == 1 and fe2 == 0x86 and fm2 == 0x530d4c and fs3 == 0 and fe3 == 0x7c and fm3 == 0x174b13 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3a3783b0; op2val:0xc3530d4c; op3val:0x3e174b13; valaddr_reg:x16; val_offset:84; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 84, x17, x15, 776, x18)

inst_1368:
// fs1 == 0 and fe1 == 0x74 and fm1 == 0x3783b0 and fs2 == 1 and fe2 == 0x86 and fm2 == 0x530d4c and fs3 == 0 and fe3 == 0x7c and fm3 == 0x174b13 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3a3783b0; op2val:0xc3530d4c; op3val:0x3e174b13; valaddr_reg:x16; val_offset:96; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 96, x17, x15, 784, x18)

inst_1369:
// fs1 == 0 and fe1 == 0x74 and fm1 == 0x3783b0 and fs2 == 1 and fe2 == 0x86 and fm2 == 0x530d4c and fs3 == 0 and fe3 == 0x7c and fm3 == 0x174b13 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3a3783b0; op2val:0xc3530d4c; op3val:0x3e174b13; valaddr_reg:x16; val_offset:108; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 108, x17, x15, 792, x18)

inst_1370:
// fs1 == 0 and fe1 == 0x74 and fm1 == 0x3783b0 and fs2 == 1 and fe2 == 0x86 and fm2 == 0x530d4c and fs3 == 0 and fe3 == 0x7c and fm3 == 0x174b13 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3a3783b0; op2val:0xc3530d4c; op3val:0x3e174b13; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 800, x18)

inst_1371:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x348723 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x46849d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0bfe0a and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f348723; op2val:0xbf46849d; op3val:0x3f0bfe0a; valaddr_reg:x16; val_offset:132; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 132, x17, x15, 808, x18)

inst_1372:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x348723 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x46849d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0bfe0a and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f348723; op2val:0xbf46849d; op3val:0x3f0bfe0a; valaddr_reg:x16; val_offset:144; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 144, x17, x15, 816, x18)

inst_1373:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x348723 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x46849d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0bfe0a and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f348723; op2val:0xbf46849d; op3val:0x3f0bfe0a; valaddr_reg:x16; val_offset:156; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 156, x17, x15, 824, x18)

inst_1374:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x348723 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x46849d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0bfe0a and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f348723; op2val:0xbf46849d; op3val:0x3f0bfe0a; valaddr_reg:x16; val_offset:168; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 168, x17, x15, 832, x18)

inst_1375:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x348723 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x46849d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0bfe0a and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f348723; op2val:0xbf46849d; op3val:0x3f0bfe0a; valaddr_reg:x16; val_offset:180; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 180, x17, x15, 840, x18)

inst_1376:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x59cb0e and fs2 == 1 and fe2 == 0x7c and fm2 == 0x3ae252 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x1efe13 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f59cb0e; op2val:0xbe3ae252; op3val:0x3e1efe13; valaddr_reg:x16; val_offset:192; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 192, x17, x15, 848, x18)

inst_1377:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x59cb0e and fs2 == 1 and fe2 == 0x7c and fm2 == 0x3ae252 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x1efe13 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f59cb0e; op2val:0xbe3ae252; op3val:0x3e1efe13; valaddr_reg:x16; val_offset:204; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 204, x17, x15, 856, x18)

inst_1378:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x59cb0e and fs2 == 1 and fe2 == 0x7c and fm2 == 0x3ae252 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x1efe13 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f59cb0e; op2val:0xbe3ae252; op3val:0x3e1efe13; valaddr_reg:x16; val_offset:216; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 216, x17, x15, 864, x18)

inst_1379:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x59cb0e and fs2 == 1 and fe2 == 0x7c and fm2 == 0x3ae252 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x1efe13 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f59cb0e; op2val:0xbe3ae252; op3val:0x3e1efe13; valaddr_reg:x16; val_offset:228; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 228, x17, x15, 872, x18)

inst_1380:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x59cb0e and fs2 == 1 and fe2 == 0x7c and fm2 == 0x3ae252 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x1efe13 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f59cb0e; op2val:0xbe3ae252; op3val:0x3e1efe13; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 880, x18)

inst_1381:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x64b3db and fs2 == 1 and fe2 == 0x7e and fm2 == 0x220808 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x10c0fd and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f64b3db; op2val:0xbf220808; op3val:0x3f10c0fd; valaddr_reg:x16; val_offset:252; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 252, x17, x15, 888, x18)

inst_1382:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x64b3db and fs2 == 1 and fe2 == 0x7e and fm2 == 0x220808 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x10c0fd and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f64b3db; op2val:0xbf220808; op3val:0x3f10c0fd; valaddr_reg:x16; val_offset:264; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 264, x17, x15, 896, x18)

inst_1383:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x64b3db and fs2 == 1 and fe2 == 0x7e and fm2 == 0x220808 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x10c0fd and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f64b3db; op2val:0xbf220808; op3val:0x3f10c0fd; valaddr_reg:x16; val_offset:276; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 276, x17, x15, 904, x18)

inst_1384:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x64b3db and fs2 == 1 and fe2 == 0x7e and fm2 == 0x220808 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x10c0fd and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f64b3db; op2val:0xbf220808; op3val:0x3f10c0fd; valaddr_reg:x16; val_offset:288; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 288, x17, x15, 912, x18)

inst_1385:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x64b3db and fs2 == 1 and fe2 == 0x7e and fm2 == 0x220808 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x10c0fd and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f64b3db; op2val:0xbf220808; op3val:0x3f10c0fd; valaddr_reg:x16; val_offset:300; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 300, x17, x15, 920, x18)

inst_1386:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3d3c4d and fs2 == 1 and fe2 == 0x7e and fm2 == 0x12d53b and fs3 == 0 and fe3 == 0x7c and fm3 == 0x591406 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ebd3c4d; op2val:0xbf12d53b; op3val:0x3e591406; valaddr_reg:x16; val_offset:312; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 312, x17, x15, 928, x18)

inst_1387:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3d3c4d and fs2 == 1 and fe2 == 0x7e and fm2 == 0x12d53b and fs3 == 0 and fe3 == 0x7c and fm3 == 0x591406 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ebd3c4d; op2val:0xbf12d53b; op3val:0x3e591406; valaddr_reg:x16; val_offset:324; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 324, x17, x15, 936, x18)

inst_1388:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3d3c4d and fs2 == 1 and fe2 == 0x7e and fm2 == 0x12d53b and fs3 == 0 and fe3 == 0x7c and fm3 == 0x591406 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ebd3c4d; op2val:0xbf12d53b; op3val:0x3e591406; valaddr_reg:x16; val_offset:336; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 336, x17, x15, 944, x18)

inst_1389:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3d3c4d and fs2 == 1 and fe2 == 0x7e and fm2 == 0x12d53b and fs3 == 0 and fe3 == 0x7c and fm3 == 0x591406 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ebd3c4d; op2val:0xbf12d53b; op3val:0x3e591406; valaddr_reg:x16; val_offset:348; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 348, x17, x15, 952, x18)

inst_1390:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3d3c4d and fs2 == 1 and fe2 == 0x7e and fm2 == 0x12d53b and fs3 == 0 and fe3 == 0x7c and fm3 == 0x591406 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ebd3c4d; op2val:0xbf12d53b; op3val:0x3e591406; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 960, x18)

inst_1391:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x096347 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x3f9316 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x4da005 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e896347; op2val:0xbe3f9316; op3val:0x3d4da005; valaddr_reg:x16; val_offset:372; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 372, x17, x15, 968, x18)

inst_1392:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x096347 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x3f9316 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x4da005 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e896347; op2val:0xbe3f9316; op3val:0x3d4da005; valaddr_reg:x16; val_offset:384; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 384, x17, x15, 976, x18)

inst_1393:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x096347 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x3f9316 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x4da005 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e896347; op2val:0xbe3f9316; op3val:0x3d4da005; valaddr_reg:x16; val_offset:396; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 396, x17, x15, 984, x18)

inst_1394:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x096347 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x3f9316 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x4da005 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e896347; op2val:0xbe3f9316; op3val:0x3d4da005; valaddr_reg:x16; val_offset:408; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 408, x17, x15, 992, x18)

inst_1395:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x096347 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x3f9316 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x4da005 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e896347; op2val:0xbe3f9316; op3val:0x3d4da005; valaddr_reg:x16; val_offset:420; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 420, x17, x15, 1000, x18)

inst_1396:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2572cb and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2c31f8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5e92d8 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e2572cb; op2val:0xc0ac31f8; op3val:0x3f5e92d8; valaddr_reg:x16; val_offset:432; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 432, x17, x15, 1008, x18)

inst_1397:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2572cb and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2c31f8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5e92d8 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e2572cb; op2val:0xc0ac31f8; op3val:0x3f5e92d8; valaddr_reg:x16; val_offset:444; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 444, x17, x15, 1016, x18)

inst_1398:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2572cb and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2c31f8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5e92d8 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e2572cb; op2val:0xc0ac31f8; op3val:0x3f5e92d8; valaddr_reg:x16; val_offset:456; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 456, x17, x15, 1024, x18)

inst_1399:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2572cb and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2c31f8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5e92d8 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e2572cb; op2val:0xc0ac31f8; op3val:0x3f5e92d8; valaddr_reg:x16; val_offset:468; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 468, x17, x15, 1032, x18)

inst_1400:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2572cb and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2c31f8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5e92d8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e2572cb; op2val:0xc0ac31f8; op3val:0x3f5e92d8; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1040, x18)

inst_1401:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x779f95 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x060886 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x01a5c6 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f779f95; op2val:0xbf060886; op3val:0x3f01a5c6; valaddr_reg:x16; val_offset:492; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 492, x17, x15, 1048, x18)

inst_1402:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x779f95 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x060886 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x01a5c6 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f779f95; op2val:0xbf060886; op3val:0x3f01a5c6; valaddr_reg:x16; val_offset:504; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 504, x17, x15, 1056, x18)

inst_1403:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x779f95 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x060886 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x01a5c6 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f779f95; op2val:0xbf060886; op3val:0x3f01a5c6; valaddr_reg:x16; val_offset:516; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 516, x17, x15, 1064, x18)

inst_1404:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x779f95 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x060886 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x01a5c6 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f779f95; op2val:0xbf060886; op3val:0x3f01a5c6; valaddr_reg:x16; val_offset:528; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 528, x17, x15, 1072, x18)

inst_1405:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x779f95 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x060886 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x01a5c6 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f779f95; op2val:0xbf060886; op3val:0x3f01a5c6; valaddr_reg:x16; val_offset:540; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 540, x17, x15, 1080, x18)

inst_1406:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x71bd2b and fs2 == 1 and fe2 == 0x7b and fm2 == 0x3607c7 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x2be3d5 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f71bd2b; op2val:0xbdb607c7; op3val:0x3dabe3d5; valaddr_reg:x16; val_offset:552; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 552, x17, x15, 1088, x18)

inst_1407:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x71bd2b and fs2 == 1 and fe2 == 0x7b and fm2 == 0x3607c7 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x2be3d5 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f71bd2b; op2val:0xbdb607c7; op3val:0x3dabe3d5; valaddr_reg:x16; val_offset:564; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 564, x17, x15, 1096, x18)

inst_1408:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x71bd2b and fs2 == 1 and fe2 == 0x7b and fm2 == 0x3607c7 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x2be3d5 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f71bd2b; op2val:0xbdb607c7; op3val:0x3dabe3d5; valaddr_reg:x16; val_offset:576; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 576, x17, x15, 1104, x18)

inst_1409:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x71bd2b and fs2 == 1 and fe2 == 0x7b and fm2 == 0x3607c7 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x2be3d5 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f71bd2b; op2val:0xbdb607c7; op3val:0x3dabe3d5; valaddr_reg:x16; val_offset:588; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 588, x17, x15, 1112, x18)

inst_1410:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x71bd2b and fs2 == 1 and fe2 == 0x7b and fm2 == 0x3607c7 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x2be3d5 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f71bd2b; op2val:0xbdb607c7; op3val:0x3dabe3d5; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1120, x18)

inst_1411:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0b5988 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x07f930 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1407b6 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0b5988; op2val:0xbf87f930; op3val:0x3f1407b6; valaddr_reg:x16; val_offset:612; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 612, x17, x15, 1128, x18)

inst_1412:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0b5988 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x07f930 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1407b6 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0b5988; op2val:0xbf87f930; op3val:0x3f1407b6; valaddr_reg:x16; val_offset:624; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 624, x17, x15, 1136, x18)

inst_1413:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0b5988 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x07f930 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1407b6 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0b5988; op2val:0xbf87f930; op3val:0x3f1407b6; valaddr_reg:x16; val_offset:636; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 636, x17, x15, 1144, x18)

inst_1414:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0b5988 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x07f930 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1407b6 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0b5988; op2val:0xbf87f930; op3val:0x3f1407b6; valaddr_reg:x16; val_offset:648; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 648, x17, x15, 1152, x18)

inst_1415:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0b5988 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x07f930 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1407b6 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0b5988; op2val:0xbf87f930; op3val:0x3f1407b6; valaddr_reg:x16; val_offset:660; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 660, x17, x15, 1160, x18)

inst_1416:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4fe472 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x5b08d1 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x31df96 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ecfe472; op2val:0xbedb08d1; op3val:0x3e31df96; valaddr_reg:x16; val_offset:672; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 672, x17, x15, 1168, x18)

inst_1417:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4fe472 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x5b08d1 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x31df96 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ecfe472; op2val:0xbedb08d1; op3val:0x3e31df96; valaddr_reg:x16; val_offset:684; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 684, x17, x15, 1176, x18)

inst_1418:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4fe472 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x5b08d1 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x31df96 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ecfe472; op2val:0xbedb08d1; op3val:0x3e31df96; valaddr_reg:x16; val_offset:696; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 696, x17, x15, 1184, x18)

inst_1419:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4fe472 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x5b08d1 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x31df96 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ecfe472; op2val:0xbedb08d1; op3val:0x3e31df96; valaddr_reg:x16; val_offset:708; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 708, x17, x15, 1192, x18)

inst_1420:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4fe472 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x5b08d1 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x31df96 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ecfe472; op2val:0xbedb08d1; op3val:0x3e31df96; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1200, x18)

inst_1421:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1817b8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x245062 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x433de8 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1817b8; op2val:0xbfa45062; op3val:0x3f433de8; valaddr_reg:x16; val_offset:732; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 732, x17, x15, 1208, x18)

inst_1422:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1817b8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x245062 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x433de8 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1817b8; op2val:0xbfa45062; op3val:0x3f433de8; valaddr_reg:x16; val_offset:744; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 744, x17, x15, 1216, x18)

inst_1423:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1817b8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x245062 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x433de8 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1817b8; op2val:0xbfa45062; op3val:0x3f433de8; valaddr_reg:x16; val_offset:756; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 756, x17, x15, 1224, x18)

inst_1424:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1817b8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x245062 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x433de8 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1817b8; op2val:0xbfa45062; op3val:0x3f433de8; valaddr_reg:x16; val_offset:768; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 768, x17, x15, 1232, x18)

inst_1425:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1817b8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x245062 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x433de8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1817b8; op2val:0xbfa45062; op3val:0x3f433de8; valaddr_reg:x16; val_offset:780; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 780, x17, x15, 1240, x18)

inst_1426:
// fs1 == 0 and fe1 == 0x78 and fm1 == 0x59ebfb and fs2 == 1 and fe2 == 0x84 and fm2 == 0x0c4838 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6ed50f and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3c59ebfb; op2val:0xc20c4838; op3val:0x3eeed50f; valaddr_reg:x16; val_offset:792; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 792, x17, x15, 1248, x18)

inst_1427:
// fs1 == 0 and fe1 == 0x78 and fm1 == 0x59ebfb and fs2 == 1 and fe2 == 0x84 and fm2 == 0x0c4838 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6ed50f and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3c59ebfb; op2val:0xc20c4838; op3val:0x3eeed50f; valaddr_reg:x16; val_offset:804; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 804, x17, x15, 1256, x18)

inst_1428:
// fs1 == 0 and fe1 == 0x78 and fm1 == 0x59ebfb and fs2 == 1 and fe2 == 0x84 and fm2 == 0x0c4838 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6ed50f and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3c59ebfb; op2val:0xc20c4838; op3val:0x3eeed50f; valaddr_reg:x16; val_offset:816; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 816, x17, x15, 1264, x18)

inst_1429:
// fs1 == 0 and fe1 == 0x78 and fm1 == 0x59ebfb and fs2 == 1 and fe2 == 0x84 and fm2 == 0x0c4838 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6ed50f and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3c59ebfb; op2val:0xc20c4838; op3val:0x3eeed50f; valaddr_reg:x16; val_offset:828; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 828, x17, x15, 1272, x18)

inst_1430:
// fs1 == 0 and fe1 == 0x78 and fm1 == 0x59ebfb and fs2 == 1 and fe2 == 0x84 and fm2 == 0x0c4838 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6ed50f and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3c59ebfb; op2val:0xc20c4838; op3val:0x3eeed50f; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1280, x18)

inst_1431:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x56a601 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x113f3a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x739215 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f56a601; op2val:0xbf913f3a; op3val:0x3f739215; valaddr_reg:x16; val_offset:852; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 852, x17, x15, 1288, x18)

inst_1432:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x56a601 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x113f3a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x739215 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f56a601; op2val:0xbf913f3a; op3val:0x3f739215; valaddr_reg:x16; val_offset:864; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 864, x17, x15, 1296, x18)

inst_1433:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x56a601 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x113f3a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x739215 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f56a601; op2val:0xbf913f3a; op3val:0x3f739215; valaddr_reg:x16; val_offset:876; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 876, x17, x15, 1304, x18)

inst_1434:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x56a601 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x113f3a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x739215 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f56a601; op2val:0xbf913f3a; op3val:0x3f739215; valaddr_reg:x16; val_offset:888; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 888, x17, x15, 1312, x18)

inst_1435:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x56a601 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x113f3a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x739215 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f56a601; op2val:0xbf913f3a; op3val:0x3f739215; valaddr_reg:x16; val_offset:900; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 900, x17, x15, 1320, x18)

inst_1436:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1f2482 and fs2 == 1 and fe2 == 0x78 and fm2 == 0x2c88a3 and fs3 == 0 and fe3 == 0x76 and fm3 == 0x5682f0 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e9f2482; op2val:0xbc2c88a3; op3val:0x3b5682f0; valaddr_reg:x16; val_offset:912; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 912, x17, x15, 1328, x18)

inst_1437:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1f2482 and fs2 == 1 and fe2 == 0x78 and fm2 == 0x2c88a3 and fs3 == 0 and fe3 == 0x76 and fm3 == 0x5682f0 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e9f2482; op2val:0xbc2c88a3; op3val:0x3b5682f0; valaddr_reg:x16; val_offset:924; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 924, x17, x15, 1336, x18)

inst_1438:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1f2482 and fs2 == 1 and fe2 == 0x78 and fm2 == 0x2c88a3 and fs3 == 0 and fe3 == 0x76 and fm3 == 0x5682f0 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e9f2482; op2val:0xbc2c88a3; op3val:0x3b5682f0; valaddr_reg:x16; val_offset:936; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 936, x17, x15, 1344, x18)

inst_1439:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1f2482 and fs2 == 1 and fe2 == 0x78 and fm2 == 0x2c88a3 and fs3 == 0 and fe3 == 0x76 and fm3 == 0x5682f0 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e9f2482; op2val:0xbc2c88a3; op3val:0x3b5682f0; valaddr_reg:x16; val_offset:948; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 948, x17, x15, 1352, x18)

inst_1440:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1f2482 and fs2 == 1 and fe2 == 0x78 and fm2 == 0x2c88a3 and fs3 == 0 and fe3 == 0x76 and fm3 == 0x5682f0 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e9f2482; op2val:0xbc2c88a3; op3val:0x3b5682f0; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 1360, x18)

inst_1441:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6bfb54 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6c5f8f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x59e3c8 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6bfb54; op2val:0xbf6c5f8f; op3val:0x3f59e3c8; valaddr_reg:x16; val_offset:972; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 972, x17, x15, 1368, x18)

inst_1442:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6bfb54 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6c5f8f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x59e3c8 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6bfb54; op2val:0xbf6c5f8f; op3val:0x3f59e3c8; valaddr_reg:x16; val_offset:984; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 984, x17, x15, 1376, x18)

inst_1443:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6bfb54 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6c5f8f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x59e3c8 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6bfb54; op2val:0xbf6c5f8f; op3val:0x3f59e3c8; valaddr_reg:x16; val_offset:996; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 996, x17, x15, 1384, x18)

inst_1444:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6bfb54 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6c5f8f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x59e3c8 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6bfb54; op2val:0xbf6c5f8f; op3val:0x3f59e3c8; valaddr_reg:x16; val_offset:1008; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1008, x17, x15, 1392, x18)

inst_1445:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6bfb54 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6c5f8f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x59e3c8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6bfb54; op2val:0xbf6c5f8f; op3val:0x3f59e3c8; valaddr_reg:x16; val_offset:1020; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1020, x17, x15, 1400, x18)

inst_1446:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2ee632 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1a1a3e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5290d1 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2ee632; op2val:0xbf9a1a3e; op3val:0x3f5290d1; valaddr_reg:x16; val_offset:1032; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1032, x17, x15, 1408, x18)

inst_1447:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2ee632 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1a1a3e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5290d1 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2ee632; op2val:0xbf9a1a3e; op3val:0x3f5290d1; valaddr_reg:x16; val_offset:1044; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1044, x17, x15, 1416, x18)

inst_1448:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2ee632 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1a1a3e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5290d1 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2ee632; op2val:0xbf9a1a3e; op3val:0x3f5290d1; valaddr_reg:x16; val_offset:1056; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1056, x17, x15, 1424, x18)

inst_1449:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2ee632 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1a1a3e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5290d1 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2ee632; op2val:0xbf9a1a3e; op3val:0x3f5290d1; valaddr_reg:x16; val_offset:1068; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1068, x17, x15, 1432, x18)

inst_1450:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2ee632 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1a1a3e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5290d1 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2ee632; op2val:0xbf9a1a3e; op3val:0x3f5290d1; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 1440, x18)

inst_1451:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x68e2e1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x417b57 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x300340 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee8e2e1; op2val:0xbfc17b57; op3val:0x3f300340; valaddr_reg:x16; val_offset:1092; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1092, x17, x15, 1448, x18)

inst_1452:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x68e2e1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x417b57 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x300340 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee8e2e1; op2val:0xbfc17b57; op3val:0x3f300340; valaddr_reg:x16; val_offset:1104; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1104, x17, x15, 1456, x18)

inst_1453:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x68e2e1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x417b57 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x300340 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee8e2e1; op2val:0xbfc17b57; op3val:0x3f300340; valaddr_reg:x16; val_offset:1116; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1116, x17, x15, 1464, x18)

inst_1454:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x68e2e1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x417b57 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x300340 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee8e2e1; op2val:0xbfc17b57; op3val:0x3f300340; valaddr_reg:x16; val_offset:1128; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1128, x17, x15, 1472, x18)

inst_1455:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x68e2e1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x417b57 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x300340 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee8e2e1; op2val:0xbfc17b57; op3val:0x3f300340; valaddr_reg:x16; val_offset:1140; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1140, x17, x15, 1480, x18)

inst_1456:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x28f869 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x6b33e1 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x1b3e47 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f28f869; op2val:0xbdeb33e1; op3val:0x3d9b3e47; valaddr_reg:x16; val_offset:1152; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1152, x17, x15, 1488, x18)

inst_1457:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x28f869 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x6b33e1 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x1b3e47 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f28f869; op2val:0xbdeb33e1; op3val:0x3d9b3e47; valaddr_reg:x16; val_offset:1164; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1164, x17, x15, 1496, x18)

inst_1458:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x28f869 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x6b33e1 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x1b3e47 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f28f869; op2val:0xbdeb33e1; op3val:0x3d9b3e47; valaddr_reg:x16; val_offset:1176; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1176, x17, x15, 1504, x18)

inst_1459:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x28f869 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x6b33e1 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x1b3e47 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f28f869; op2val:0xbdeb33e1; op3val:0x3d9b3e47; valaddr_reg:x16; val_offset:1188; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1188, x17, x15, 1512, x18)

inst_1460:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x28f869 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x6b33e1 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x1b3e47 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f28f869; op2val:0xbdeb33e1; op3val:0x3d9b3e47; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 1520, x18)

inst_1461:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x47419c and fs2 == 1 and fe2 == 0x7c and fm2 == 0x5787ee and fs3 == 0 and fe3 == 0x7b and fm3 == 0x27c1e7 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec7419c; op2val:0xbe5787ee; op3val:0x3da7c1e7; valaddr_reg:x16; val_offset:1212; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1212, x17, x15, 1528, x18)

inst_1462:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x47419c and fs2 == 1 and fe2 == 0x7c and fm2 == 0x5787ee and fs3 == 0 and fe3 == 0x7b and fm3 == 0x27c1e7 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec7419c; op2val:0xbe5787ee; op3val:0x3da7c1e7; valaddr_reg:x16; val_offset:1224; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1224, x17, x15, 1536, x18)

inst_1463:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x47419c and fs2 == 1 and fe2 == 0x7c and fm2 == 0x5787ee and fs3 == 0 and fe3 == 0x7b and fm3 == 0x27c1e7 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec7419c; op2val:0xbe5787ee; op3val:0x3da7c1e7; valaddr_reg:x16; val_offset:1236; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1236, x17, x15, 1544, x18)

inst_1464:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x47419c and fs2 == 1 and fe2 == 0x7c and fm2 == 0x5787ee and fs3 == 0 and fe3 == 0x7b and fm3 == 0x27c1e7 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec7419c; op2val:0xbe5787ee; op3val:0x3da7c1e7; valaddr_reg:x16; val_offset:1248; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1248, x17, x15, 1552, x18)

inst_1465:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x47419c and fs2 == 1 and fe2 == 0x7c and fm2 == 0x5787ee and fs3 == 0 and fe3 == 0x7b and fm3 == 0x27c1e7 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec7419c; op2val:0xbe5787ee; op3val:0x3da7c1e7; valaddr_reg:x16; val_offset:1260; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1260, x17, x15, 1560, x18)

inst_1466:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x68a86f and fs2 == 1 and fe2 == 0x7e and fm2 == 0x39b3e9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x28c53a and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f68a86f; op2val:0xbf39b3e9; op3val:0x3f28c53a; valaddr_reg:x16; val_offset:1272; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1272, x17, x15, 1568, x18)

inst_1467:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x68a86f and fs2 == 1 and fe2 == 0x7e and fm2 == 0x39b3e9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x28c53a and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f68a86f; op2val:0xbf39b3e9; op3val:0x3f28c53a; valaddr_reg:x16; val_offset:1284; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1284, x17, x15, 1576, x18)

inst_1468:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x68a86f and fs2 == 1 and fe2 == 0x7e and fm2 == 0x39b3e9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x28c53a and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f68a86f; op2val:0xbf39b3e9; op3val:0x3f28c53a; valaddr_reg:x16; val_offset:1296; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1296, x17, x15, 1584, x18)

inst_1469:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x68a86f and fs2 == 1 and fe2 == 0x7e and fm2 == 0x39b3e9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x28c53a and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f68a86f; op2val:0xbf39b3e9; op3val:0x3f28c53a; valaddr_reg:x16; val_offset:1308; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1308, x17, x15, 1592, x18)

inst_1470:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x68a86f and fs2 == 1 and fe2 == 0x7e and fm2 == 0x39b3e9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x28c53a and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f68a86f; op2val:0xbf39b3e9; op3val:0x3f28c53a; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 1600, x18)

inst_1471:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x769f50 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x6671a7 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x5e00a0 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f769f50; op2val:0xbd6671a7; op3val:0x3d5e00a0; valaddr_reg:x16; val_offset:1332; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1332, x17, x15, 1608, x18)

inst_1472:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x769f50 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x6671a7 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x5e00a0 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f769f50; op2val:0xbd6671a7; op3val:0x3d5e00a0; valaddr_reg:x16; val_offset:1344; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1344, x17, x15, 1616, x18)

inst_1473:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x769f50 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x6671a7 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x5e00a0 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f769f50; op2val:0xbd6671a7; op3val:0x3d5e00a0; valaddr_reg:x16; val_offset:1356; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1356, x17, x15, 1624, x18)

inst_1474:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x769f50 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x6671a7 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x5e00a0 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f769f50; op2val:0xbd6671a7; op3val:0x3d5e00a0; valaddr_reg:x16; val_offset:1368; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1368, x17, x15, 1632, x18)

inst_1475:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x769f50 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x6671a7 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x5e00a0 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f769f50; op2val:0xbd6671a7; op3val:0x3d5e00a0; valaddr_reg:x16; val_offset:1380; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1380, x17, x15, 1640, x18)

inst_1476:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x4fa3cf and fs2 == 1 and fe2 == 0x7e and fm2 == 0x31228f and fs3 == 0 and fe3 == 0x7c and fm3 == 0x0fac4a and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e4fa3cf; op2val:0xbf31228f; op3val:0x3e0fac4a; valaddr_reg:x16; val_offset:1392; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1392, x17, x15, 1648, x18)

inst_1477:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x4fa3cf and fs2 == 1 and fe2 == 0x7e and fm2 == 0x31228f and fs3 == 0 and fe3 == 0x7c and fm3 == 0x0fac4a and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e4fa3cf; op2val:0xbf31228f; op3val:0x3e0fac4a; valaddr_reg:x16; val_offset:1404; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1404, x17, x15, 1656, x18)

inst_1478:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x4fa3cf and fs2 == 1 and fe2 == 0x7e and fm2 == 0x31228f and fs3 == 0 and fe3 == 0x7c and fm3 == 0x0fac4a and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e4fa3cf; op2val:0xbf31228f; op3val:0x3e0fac4a; valaddr_reg:x16; val_offset:1416; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1416, x17, x15, 1664, x18)

inst_1479:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x4fa3cf and fs2 == 1 and fe2 == 0x7e and fm2 == 0x31228f and fs3 == 0 and fe3 == 0x7c and fm3 == 0x0fac4a and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e4fa3cf; op2val:0xbf31228f; op3val:0x3e0fac4a; valaddr_reg:x16; val_offset:1428; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1428, x17, x15, 1672, x18)

inst_1480:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x4fa3cf and fs2 == 1 and fe2 == 0x7e and fm2 == 0x31228f and fs3 == 0 and fe3 == 0x7c and fm3 == 0x0fac4a and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e4fa3cf; op2val:0xbf31228f; op3val:0x3e0fac4a; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 1680, x18)

inst_1481:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6456a5 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x106d02 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x00d1f8 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6456a5; op2val:0xbe906d02; op3val:0x3e80d1f8; valaddr_reg:x16; val_offset:1452; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1452, x17, x15, 1688, x18)

inst_1482:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6456a5 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x106d02 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x00d1f8 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6456a5; op2val:0xbe906d02; op3val:0x3e80d1f8; valaddr_reg:x16; val_offset:1464; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1464, x17, x15, 1696, x18)

inst_1483:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6456a5 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x106d02 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x00d1f8 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6456a5; op2val:0xbe906d02; op3val:0x3e80d1f8; valaddr_reg:x16; val_offset:1476; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1476, x17, x15, 1704, x18)

inst_1484:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6456a5 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x106d02 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x00d1f8 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6456a5; op2val:0xbe906d02; op3val:0x3e80d1f8; valaddr_reg:x16; val_offset:1488; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1488, x17, x15, 1712, x18)

inst_1485:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6456a5 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x106d02 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x00d1f8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6456a5; op2val:0xbe906d02; op3val:0x3e80d1f8; valaddr_reg:x16; val_offset:1500; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1500, x17, x15, 1720, x18)

inst_1486:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x735a48 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x71b97e and fs3 == 0 and fe3 == 0x7c and fm3 == 0x65c852 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef35a48; op2val:0xbef1b97e; op3val:0x3e65c852; valaddr_reg:x16; val_offset:1512; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1512, x17, x15, 1728, x18)

inst_1487:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x735a48 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x71b97e and fs3 == 0 and fe3 == 0x7c and fm3 == 0x65c852 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef35a48; op2val:0xbef1b97e; op3val:0x3e65c852; valaddr_reg:x16; val_offset:1524; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1524, x17, x15, 1736, x18)

inst_1488:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x735a48 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x71b97e and fs3 == 0 and fe3 == 0x7c and fm3 == 0x65c852 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef35a48; op2val:0xbef1b97e; op3val:0x3e65c852; valaddr_reg:x16; val_offset:1536; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1536, x17, x15, 1744, x18)

inst_1489:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x735a48 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x71b97e and fs3 == 0 and fe3 == 0x7c and fm3 == 0x65c852 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef35a48; op2val:0xbef1b97e; op3val:0x3e65c852; valaddr_reg:x16; val_offset:1548; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1548, x17, x15, 1752, x18)

inst_1490:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x735a48 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x71b97e and fs3 == 0 and fe3 == 0x7c and fm3 == 0x65c852 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef35a48; op2val:0xbef1b97e; op3val:0x3e65c852; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1760, x18)

inst_1491:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x27d697 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7bef45 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x252c45 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f27d697; op2val:0xbf7bef45; op3val:0x3f252c45; valaddr_reg:x16; val_offset:1572; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1572, x17, x15, 1768, x18)

inst_1492:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x27d697 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7bef45 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x252c45 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f27d697; op2val:0xbf7bef45; op3val:0x3f252c45; valaddr_reg:x16; val_offset:1584; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1584, x17, x15, 1776, x18)

inst_1493:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x27d697 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7bef45 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x252c45 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f27d697; op2val:0xbf7bef45; op3val:0x3f252c45; valaddr_reg:x16; val_offset:1596; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1596, x17, x15, 1784, x18)

inst_1494:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x27d697 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7bef45 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x252c45 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f27d697; op2val:0xbf7bef45; op3val:0x3f252c45; valaddr_reg:x16; val_offset:1608; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1608, x17, x15, 1792, x18)

inst_1495:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x27d697 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7bef45 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x252c45 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f27d697; op2val:0xbf7bef45; op3val:0x3f252c45; valaddr_reg:x16; val_offset:1620; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1620, x17, x15, 1800, x18)

inst_1496:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x1010df and fs2 == 1 and fe2 == 0x7e and fm2 == 0x52ea5a and fs3 == 0 and fe3 == 0x7a and fm3 == 0x6d6373 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d9010df; op2val:0xbf52ea5a; op3val:0x3d6d6373; valaddr_reg:x16; val_offset:1632; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1632, x17, x15, 1808, x18)

inst_1497:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x1010df and fs2 == 1 and fe2 == 0x7e and fm2 == 0x52ea5a and fs3 == 0 and fe3 == 0x7a and fm3 == 0x6d6373 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d9010df; op2val:0xbf52ea5a; op3val:0x3d6d6373; valaddr_reg:x16; val_offset:1644; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1644, x17, x15, 1816, x18)

inst_1498:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x1010df and fs2 == 1 and fe2 == 0x7e and fm2 == 0x52ea5a and fs3 == 0 and fe3 == 0x7a and fm3 == 0x6d6373 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d9010df; op2val:0xbf52ea5a; op3val:0x3d6d6373; valaddr_reg:x16; val_offset:1656; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1656, x17, x15, 1824, x18)

inst_1499:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x1010df and fs2 == 1 and fe2 == 0x7e and fm2 == 0x52ea5a and fs3 == 0 and fe3 == 0x7a and fm3 == 0x6d6373 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d9010df; op2val:0xbf52ea5a; op3val:0x3d6d6373; valaddr_reg:x16; val_offset:1668; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1668, x17, x15, 1832, x18)

inst_1500:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x1010df and fs2 == 1 and fe2 == 0x7e and fm2 == 0x52ea5a and fs3 == 0 and fe3 == 0x7a and fm3 == 0x6d6373 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d9010df; op2val:0xbf52ea5a; op3val:0x3d6d6373; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1840, x18)

inst_1501:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4db0c1 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x1ba6e5 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x7a203b and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4db0c1; op2val:0xbe9ba6e5; op3val:0x3e7a203b; valaddr_reg:x16; val_offset:1692; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1692, x17, x15, 1848, x18)

inst_1502:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4db0c1 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x1ba6e5 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x7a203b and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4db0c1; op2val:0xbe9ba6e5; op3val:0x3e7a203b; valaddr_reg:x16; val_offset:1704; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1704, x17, x15, 1856, x18)

inst_1503:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4db0c1 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x1ba6e5 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x7a203b and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4db0c1; op2val:0xbe9ba6e5; op3val:0x3e7a203b; valaddr_reg:x16; val_offset:1716; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1716, x17, x15, 1864, x18)

inst_1504:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4db0c1 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x1ba6e5 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x7a203b and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4db0c1; op2val:0xbe9ba6e5; op3val:0x3e7a203b; valaddr_reg:x16; val_offset:1728; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1728, x17, x15, 1872, x18)

inst_1505:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4db0c1 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x1ba6e5 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x7a203b and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4db0c1; op2val:0xbe9ba6e5; op3val:0x3e7a203b; valaddr_reg:x16; val_offset:1740; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1740, x17, x15, 1880, x18)

inst_1506:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x51af42 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x602218 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x379548 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f51af42; op2val:0xbd602218; op3val:0x3d379548; valaddr_reg:x16; val_offset:1752; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1752, x17, x15, 1888, x18)

inst_1507:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x51af42 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x602218 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x379548 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f51af42; op2val:0xbd602218; op3val:0x3d379548; valaddr_reg:x16; val_offset:1764; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1764, x17, x15, 1896, x18)

inst_1508:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x51af42 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x602218 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x379548 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f51af42; op2val:0xbd602218; op3val:0x3d379548; valaddr_reg:x16; val_offset:1776; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1776, x17, x15, 1904, x18)

inst_1509:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x51af42 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x602218 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x379548 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f51af42; op2val:0xbd602218; op3val:0x3d379548; valaddr_reg:x16; val_offset:1788; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1788, x17, x15, 1912, x18)

inst_1510:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x51af42 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x602218 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x379548 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f51af42; op2val:0xbd602218; op3val:0x3d379548; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1920, x18)

inst_1511:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7dad09 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x76460c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7409b1 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7dad09; op2val:0xbf76460c; op3val:0x3f7409b1; valaddr_reg:x16; val_offset:1812; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1812, x17, x15, 1928, x18)

inst_1512:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7dad09 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x76460c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7409b1 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7dad09; op2val:0xbf76460c; op3val:0x3f7409b1; valaddr_reg:x16; val_offset:1824; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1824, x17, x15, 1936, x18)

inst_1513:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7dad09 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x76460c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7409b1 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7dad09; op2val:0xbf76460c; op3val:0x3f7409b1; valaddr_reg:x16; val_offset:1836; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1836, x17, x15, 1944, x18)

inst_1514:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7dad09 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x76460c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7409b1 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7dad09; op2val:0xbf76460c; op3val:0x3f7409b1; valaddr_reg:x16; val_offset:1848; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1848, x17, x15, 1952, x18)

inst_1515:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7dad09 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x76460c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7409b1 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7dad09; op2val:0xbf76460c; op3val:0x3f7409b1; valaddr_reg:x16; val_offset:1860; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1860, x17, x15, 1960, x18)

inst_1516:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2241bb and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2a3ccd and fs3 == 0 and fe3 == 0x7d and fm3 == 0x57cc61 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2241bb; op2val:0xbf2a3ccd; op3val:0x3ed7cc61; valaddr_reg:x16; val_offset:1872; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1872, x17, x15, 1968, x18)

inst_1517:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2241bb and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2a3ccd and fs3 == 0 and fe3 == 0x7d and fm3 == 0x57cc61 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2241bb; op2val:0xbf2a3ccd; op3val:0x3ed7cc61; valaddr_reg:x16; val_offset:1884; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1884, x17, x15, 1976, x18)

inst_1518:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2241bb and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2a3ccd and fs3 == 0 and fe3 == 0x7d and fm3 == 0x57cc61 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2241bb; op2val:0xbf2a3ccd; op3val:0x3ed7cc61; valaddr_reg:x16; val_offset:1896; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1896, x17, x15, 1984, x18)

inst_1519:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2241bb and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2a3ccd and fs3 == 0 and fe3 == 0x7d and fm3 == 0x57cc61 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2241bb; op2val:0xbf2a3ccd; op3val:0x3ed7cc61; valaddr_reg:x16; val_offset:1908; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1908, x17, x15, 1992, x18)

inst_1520:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2241bb and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2a3ccd and fs3 == 0 and fe3 == 0x7d and fm3 == 0x57cc61 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2241bb; op2val:0xbf2a3ccd; op3val:0x3ed7cc61; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 2000, x18)

inst_1521:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7b5fed and fs2 == 1 and fe2 == 0x7c and fm2 == 0x5d5af6 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x595b21 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7b5fed; op2val:0xbe5d5af6; op3val:0x3e595b21; valaddr_reg:x16; val_offset:1932; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1932, x17, x15, 2008, x18)

inst_1522:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7b5fed and fs2 == 1 and fe2 == 0x7c and fm2 == 0x5d5af6 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x595b21 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7b5fed; op2val:0xbe5d5af6; op3val:0x3e595b21; valaddr_reg:x16; val_offset:1944; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1944, x17, x15, 2016, x18)

inst_1523:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7b5fed and fs2 == 1 and fe2 == 0x7c and fm2 == 0x5d5af6 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x595b21 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7b5fed; op2val:0xbe5d5af6; op3val:0x3e595b21; valaddr_reg:x16; val_offset:1956; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1956, x17, x15, 2024, x18)
RVTEST_SIGBASE(x15,signature_x15_7)

inst_1524:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7b5fed and fs2 == 1 and fe2 == 0x7c and fm2 == 0x5d5af6 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x595b21 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7b5fed; op2val:0xbe5d5af6; op3val:0x3e595b21; valaddr_reg:x16; val_offset:1968; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1968, x17, x15, 0, x18)

inst_1525:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7b5fed and fs2 == 1 and fe2 == 0x7c and fm2 == 0x5d5af6 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x595b21 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7b5fed; op2val:0xbe5d5af6; op3val:0x3e595b21; valaddr_reg:x16; val_offset:1980; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1980, x17, x15, 8, x18)

inst_1526:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x001add and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1eb63b and fs3 == 0 and fe3 == 0x7c and fm3 == 0x1ed78b and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e801add; op2val:0xbf1eb63b; op3val:0x3e1ed78b; valaddr_reg:x16; val_offset:1992; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1992, x17, x15, 16, x18)

inst_1527:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x001add and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1eb63b and fs3 == 0 and fe3 == 0x7c and fm3 == 0x1ed78b and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e801add; op2val:0xbf1eb63b; op3val:0x3e1ed78b; valaddr_reg:x16; val_offset:2004; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 2004, x17, x15, 24, x18)

inst_1528:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x001add and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1eb63b and fs3 == 0 and fe3 == 0x7c and fm3 == 0x1ed78b and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e801add; op2val:0xbf1eb63b; op3val:0x3e1ed78b; valaddr_reg:x16; val_offset:2016; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 2016, x17, x15, 32, x18)

inst_1529:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x001add and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1eb63b and fs3 == 0 and fe3 == 0x7c and fm3 == 0x1ed78b and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e801add; op2val:0xbf1eb63b; op3val:0x3e1ed78b; valaddr_reg:x16; val_offset:2028; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 2028, x17, x15, 40, x18)
addi x16,x16,2040

inst_1530:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x001add and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1eb63b and fs3 == 0 and fe3 == 0x7c and fm3 == 0x1ed78b and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e801add; op2val:0xbf1eb63b; op3val:0x3e1ed78b; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 48, x18)

inst_1531:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x4bfc00 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x1cf775 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7a257b and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ccbfc00; op2val:0xc21cf775; op3val:0x3f7a257b; valaddr_reg:x16; val_offset:12; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 12, x17, x15, 56, x18)

inst_1532:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x4bfc00 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x1cf775 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7a257b and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ccbfc00; op2val:0xc21cf775; op3val:0x3f7a257b; valaddr_reg:x16; val_offset:24; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 24, x17, x15, 64, x18)

inst_1533:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x4bfc00 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x1cf775 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7a257b and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ccbfc00; op2val:0xc21cf775; op3val:0x3f7a257b; valaddr_reg:x16; val_offset:36; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 36, x17, x15, 72, x18)

inst_1534:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x4bfc00 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x1cf775 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7a257b and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ccbfc00; op2val:0xc21cf775; op3val:0x3f7a257b; valaddr_reg:x16; val_offset:48; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 48, x17, x15, 80, x18)

inst_1535:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x4bfc00 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x1cf775 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7a257b and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ccbfc00; op2val:0xc21cf775; op3val:0x3f7a257b; valaddr_reg:x16; val_offset:60; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 60, x17, x15, 88, x18)

inst_1536:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x17359b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4c5a88 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x716863 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e97359b; op2val:0xc04c5a88; op3val:0x3f716863; valaddr_reg:x16; val_offset:72; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 72, x17, x15, 96, x18)

inst_1537:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x17359b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4c5a88 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x716863 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e97359b; op2val:0xc04c5a88; op3val:0x3f716863; valaddr_reg:x16; val_offset:84; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 84, x17, x15, 104, x18)

inst_1538:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x17359b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4c5a88 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x716863 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e97359b; op2val:0xc04c5a88; op3val:0x3f716863; valaddr_reg:x16; val_offset:96; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 96, x17, x15, 112, x18)

inst_1539:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x17359b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4c5a88 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x716863 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e97359b; op2val:0xc04c5a88; op3val:0x3f716863; valaddr_reg:x16; val_offset:108; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 108, x17, x15, 120, x18)

inst_1540:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x17359b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4c5a88 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x716863 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e97359b; op2val:0xc04c5a88; op3val:0x3f716863; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 128, x18)

inst_1541:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2f282e and fs2 == 1 and fe2 == 0x7e and fm2 == 0x421aec and fs3 == 0 and fe3 == 0x7e and fm3 == 0x04cedf and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2f282e; op2val:0xbf421aec; op3val:0x3f04cedf; valaddr_reg:x16; val_offset:132; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 132, x17, x15, 136, x18)

inst_1542:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2f282e and fs2 == 1 and fe2 == 0x7e and fm2 == 0x421aec and fs3 == 0 and fe3 == 0x7e and fm3 == 0x04cedf and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2f282e; op2val:0xbf421aec; op3val:0x3f04cedf; valaddr_reg:x16; val_offset:144; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 144, x17, x15, 144, x18)

inst_1543:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2f282e and fs2 == 1 and fe2 == 0x7e and fm2 == 0x421aec and fs3 == 0 and fe3 == 0x7e and fm3 == 0x04cedf and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2f282e; op2val:0xbf421aec; op3val:0x3f04cedf; valaddr_reg:x16; val_offset:156; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 156, x17, x15, 152, x18)

inst_1544:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2f282e and fs2 == 1 and fe2 == 0x7e and fm2 == 0x421aec and fs3 == 0 and fe3 == 0x7e and fm3 == 0x04cedf and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2f282e; op2val:0xbf421aec; op3val:0x3f04cedf; valaddr_reg:x16; val_offset:168; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 168, x17, x15, 160, x18)

inst_1545:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2f282e and fs2 == 1 and fe2 == 0x7e and fm2 == 0x421aec and fs3 == 0 and fe3 == 0x7e and fm3 == 0x04cedf and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2f282e; op2val:0xbf421aec; op3val:0x3f04cedf; valaddr_reg:x16; val_offset:180; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 180, x17, x15, 168, x18)

inst_1546:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x39d665 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x371dc9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x04ede2 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e39d665; op2val:0xc0371dc9; op3val:0x3f04ede2; valaddr_reg:x16; val_offset:192; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 192, x17, x15, 176, x18)

inst_1547:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x39d665 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x371dc9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x04ede2 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e39d665; op2val:0xc0371dc9; op3val:0x3f04ede2; valaddr_reg:x16; val_offset:204; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 204, x17, x15, 184, x18)

inst_1548:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x39d665 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x371dc9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x04ede2 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e39d665; op2val:0xc0371dc9; op3val:0x3f04ede2; valaddr_reg:x16; val_offset:216; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 216, x17, x15, 192, x18)

inst_1549:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x39d665 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x371dc9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x04ede2 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e39d665; op2val:0xc0371dc9; op3val:0x3f04ede2; valaddr_reg:x16; val_offset:228; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 228, x17, x15, 200, x18)

inst_1550:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x39d665 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x371dc9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x04ede2 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e39d665; op2val:0xc0371dc9; op3val:0x3f04ede2; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 208, x18)

inst_1551:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x297f97 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0566b8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x30a698 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f297f97; op2val:0xbf8566b8; op3val:0x3f30a698; valaddr_reg:x16; val_offset:252; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 252, x17, x15, 216, x18)

inst_1552:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x297f97 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0566b8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x30a698 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f297f97; op2val:0xbf8566b8; op3val:0x3f30a698; valaddr_reg:x16; val_offset:264; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 264, x17, x15, 224, x18)

inst_1553:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x297f97 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0566b8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x30a698 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f297f97; op2val:0xbf8566b8; op3val:0x3f30a698; valaddr_reg:x16; val_offset:276; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 276, x17, x15, 232, x18)

inst_1554:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x297f97 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0566b8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x30a698 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f297f97; op2val:0xbf8566b8; op3val:0x3f30a698; valaddr_reg:x16; val_offset:288; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 288, x17, x15, 240, x18)

inst_1555:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x297f97 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0566b8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x30a698 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f297f97; op2val:0xbf8566b8; op3val:0x3f30a698; valaddr_reg:x16; val_offset:300; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 300, x17, x15, 248, x18)

inst_1556:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7f2248 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x257519 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x24e5cd and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7f2248; op2val:0xbea57519; op3val:0x3ea4e5cd; valaddr_reg:x16; val_offset:312; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 312, x17, x15, 256, x18)

inst_1557:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7f2248 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x257519 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x24e5cd and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7f2248; op2val:0xbea57519; op3val:0x3ea4e5cd; valaddr_reg:x16; val_offset:324; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 324, x17, x15, 264, x18)

inst_1558:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7f2248 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x257519 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x24e5cd and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7f2248; op2val:0xbea57519; op3val:0x3ea4e5cd; valaddr_reg:x16; val_offset:336; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 336, x17, x15, 272, x18)

inst_1559:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7f2248 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x257519 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x24e5cd and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7f2248; op2val:0xbea57519; op3val:0x3ea4e5cd; valaddr_reg:x16; val_offset:348; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 348, x17, x15, 280, x18)

inst_1560:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7f2248 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x257519 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x24e5cd and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7f2248; op2val:0xbea57519; op3val:0x3ea4e5cd; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 288, x18)

inst_1561:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x32da21 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x116e42 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4b352a and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f32da21; op2val:0xbf116e42; op3val:0x3ecb352a; valaddr_reg:x16; val_offset:372; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 372, x17, x15, 296, x18)

inst_1562:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x32da21 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x116e42 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4b352a and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f32da21; op2val:0xbf116e42; op3val:0x3ecb352a; valaddr_reg:x16; val_offset:384; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 384, x17, x15, 304, x18)

inst_1563:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x32da21 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x116e42 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4b352a and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f32da21; op2val:0xbf116e42; op3val:0x3ecb352a; valaddr_reg:x16; val_offset:396; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 396, x17, x15, 312, x18)

inst_1564:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x32da21 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x116e42 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4b352a and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f32da21; op2val:0xbf116e42; op3val:0x3ecb352a; valaddr_reg:x16; val_offset:408; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 408, x17, x15, 320, x18)

inst_1565:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x32da21 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x116e42 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4b352a and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f32da21; op2val:0xbf116e42; op3val:0x3ecb352a; valaddr_reg:x16; val_offset:420; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 420, x17, x15, 328, x18)

inst_1566:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5ab347 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0c1218 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6f5300 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5ab347; op2val:0xbf8c1218; op3val:0x3f6f5300; valaddr_reg:x16; val_offset:432; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 432, x17, x15, 336, x18)

inst_1567:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5ab347 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0c1218 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6f5300 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5ab347; op2val:0xbf8c1218; op3val:0x3f6f5300; valaddr_reg:x16; val_offset:444; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 444, x17, x15, 344, x18)

inst_1568:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5ab347 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0c1218 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6f5300 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5ab347; op2val:0xbf8c1218; op3val:0x3f6f5300; valaddr_reg:x16; val_offset:456; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 456, x17, x15, 352, x18)

inst_1569:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5ab347 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0c1218 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6f5300 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5ab347; op2val:0xbf8c1218; op3val:0x3f6f5300; valaddr_reg:x16; val_offset:468; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 468, x17, x15, 360, x18)

inst_1570:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5ab347 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0c1218 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6f5300 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5ab347; op2val:0xbf8c1218; op3val:0x3f6f5300; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 368, x18)

inst_1571:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x23890e and fs2 == 1 and fe2 == 0x7f and fm2 == 0x271e98 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5583e7 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f23890e; op2val:0xbfa71e98; op3val:0x3f5583e7; valaddr_reg:x16; val_offset:492; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 492, x17, x15, 376, x18)

inst_1572:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x23890e and fs2 == 1 and fe2 == 0x7f and fm2 == 0x271e98 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5583e7 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f23890e; op2val:0xbfa71e98; op3val:0x3f5583e7; valaddr_reg:x16; val_offset:504; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 504, x17, x15, 384, x18)

inst_1573:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x23890e and fs2 == 1 and fe2 == 0x7f and fm2 == 0x271e98 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5583e7 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f23890e; op2val:0xbfa71e98; op3val:0x3f5583e7; valaddr_reg:x16; val_offset:516; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 516, x17, x15, 392, x18)

inst_1574:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x23890e and fs2 == 1 and fe2 == 0x7f and fm2 == 0x271e98 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5583e7 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f23890e; op2val:0xbfa71e98; op3val:0x3f5583e7; valaddr_reg:x16; val_offset:528; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 528, x17, x15, 400, x18)

inst_1575:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x23890e and fs2 == 1 and fe2 == 0x7f and fm2 == 0x271e98 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5583e7 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f23890e; op2val:0xbfa71e98; op3val:0x3f5583e7; valaddr_reg:x16; val_offset:540; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 540, x17, x15, 408, x18)

inst_1576:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x599df6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x532bf7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x338292 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dd99df6; op2val:0xc0d32bf7; op3val:0x3f338292; valaddr_reg:x16; val_offset:552; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 552, x17, x15, 416, x18)

inst_1577:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x599df6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x532bf7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x338292 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dd99df6; op2val:0xc0d32bf7; op3val:0x3f338292; valaddr_reg:x16; val_offset:564; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 564, x17, x15, 424, x18)

inst_1578:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x599df6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x532bf7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x338292 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dd99df6; op2val:0xc0d32bf7; op3val:0x3f338292; valaddr_reg:x16; val_offset:576; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 576, x17, x15, 432, x18)

inst_1579:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x599df6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x532bf7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x338292 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dd99df6; op2val:0xc0d32bf7; op3val:0x3f338292; valaddr_reg:x16; val_offset:588; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 588, x17, x15, 440, x18)

inst_1580:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x599df6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x532bf7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x338292 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dd99df6; op2val:0xc0d32bf7; op3val:0x3f338292; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 448, x18)

inst_1581:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1e642d and fs2 == 1 and fe2 == 0x7b and fm2 == 0x5d5980 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x08f3dc and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e9e642d; op2val:0xbddd5980; op3val:0x3d08f3dc; valaddr_reg:x16; val_offset:612; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 612, x17, x15, 456, x18)

inst_1582:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1e642d and fs2 == 1 and fe2 == 0x7b and fm2 == 0x5d5980 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x08f3dc and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e9e642d; op2val:0xbddd5980; op3val:0x3d08f3dc; valaddr_reg:x16; val_offset:624; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 624, x17, x15, 464, x18)

inst_1583:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1e642d and fs2 == 1 and fe2 == 0x7b and fm2 == 0x5d5980 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x08f3dc and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e9e642d; op2val:0xbddd5980; op3val:0x3d08f3dc; valaddr_reg:x16; val_offset:636; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 636, x17, x15, 472, x18)

inst_1584:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1e642d and fs2 == 1 and fe2 == 0x7b and fm2 == 0x5d5980 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x08f3dc and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e9e642d; op2val:0xbddd5980; op3val:0x3d08f3dc; valaddr_reg:x16; val_offset:648; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 648, x17, x15, 480, x18)

inst_1585:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1e642d and fs2 == 1 and fe2 == 0x7b and fm2 == 0x5d5980 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x08f3dc and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e9e642d; op2val:0xbddd5980; op3val:0x3d08f3dc; valaddr_reg:x16; val_offset:660; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 660, x17, x15, 488, x18)

inst_1586:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4b9391 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x180275 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x71c326 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4b9391; op2val:0xbd980275; op3val:0x3d71c326; valaddr_reg:x16; val_offset:672; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 672, x17, x15, 496, x18)

inst_1587:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4b9391 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x180275 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x71c326 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4b9391; op2val:0xbd980275; op3val:0x3d71c326; valaddr_reg:x16; val_offset:684; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 684, x17, x15, 504, x18)

inst_1588:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4b9391 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x180275 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x71c326 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4b9391; op2val:0xbd980275; op3val:0x3d71c326; valaddr_reg:x16; val_offset:696; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 696, x17, x15, 512, x18)

inst_1589:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4b9391 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x180275 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x71c326 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4b9391; op2val:0xbd980275; op3val:0x3d71c326; valaddr_reg:x16; val_offset:708; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 708, x17, x15, 520, x18)

inst_1590:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4b9391 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x180275 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x71c326 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4b9391; op2val:0xbd980275; op3val:0x3d71c326; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 528, x18)

inst_1591:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6beae6 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x32fdff and fs3 == 0 and fe3 == 0x7d and fm3 == 0x24f367 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eebeae6; op2val:0xbf32fdff; op3val:0x3ea4f367; valaddr_reg:x16; val_offset:732; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 732, x17, x15, 536, x18)

inst_1592:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6beae6 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x32fdff and fs3 == 0 and fe3 == 0x7d and fm3 == 0x24f367 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eebeae6; op2val:0xbf32fdff; op3val:0x3ea4f367; valaddr_reg:x16; val_offset:744; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 744, x17, x15, 544, x18)

inst_1593:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6beae6 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x32fdff and fs3 == 0 and fe3 == 0x7d and fm3 == 0x24f367 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eebeae6; op2val:0xbf32fdff; op3val:0x3ea4f367; valaddr_reg:x16; val_offset:756; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 756, x17, x15, 552, x18)

inst_1594:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6beae6 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x32fdff and fs3 == 0 and fe3 == 0x7d and fm3 == 0x24f367 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eebeae6; op2val:0xbf32fdff; op3val:0x3ea4f367; valaddr_reg:x16; val_offset:768; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 768, x17, x15, 560, x18)

inst_1595:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6beae6 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x32fdff and fs3 == 0 and fe3 == 0x7d and fm3 == 0x24f367 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eebeae6; op2val:0xbf32fdff; op3val:0x3ea4f367; valaddr_reg:x16; val_offset:780; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 780, x17, x15, 568, x18)

inst_1596:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x35f018 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x5e0449 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x1dc941 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f35f018; op2val:0xbd5e0449; op3val:0x3d1dc941; valaddr_reg:x16; val_offset:792; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 792, x17, x15, 576, x18)

inst_1597:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x35f018 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x5e0449 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x1dc941 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f35f018; op2val:0xbd5e0449; op3val:0x3d1dc941; valaddr_reg:x16; val_offset:804; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 804, x17, x15, 584, x18)

inst_1598:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x35f018 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x5e0449 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x1dc941 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f35f018; op2val:0xbd5e0449; op3val:0x3d1dc941; valaddr_reg:x16; val_offset:816; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 816, x17, x15, 592, x18)

inst_1599:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x35f018 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x5e0449 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x1dc941 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f35f018; op2val:0xbd5e0449; op3val:0x3d1dc941; valaddr_reg:x16; val_offset:828; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 828, x17, x15, 600, x18)

inst_1600:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x35f018 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x5e0449 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x1dc941 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f35f018; op2val:0xbd5e0449; op3val:0x3d1dc941; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 608, x18)

inst_1601:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x10019b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x6843b3 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x02a789 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3c90019b; op2val:0xc0e843b3; op3val:0x3e02a789; valaddr_reg:x16; val_offset:852; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 852, x17, x15, 616, x18)

inst_1602:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x10019b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x6843b3 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x02a789 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3c90019b; op2val:0xc0e843b3; op3val:0x3e02a789; valaddr_reg:x16; val_offset:864; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 864, x17, x15, 624, x18)

inst_1603:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x10019b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x6843b3 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x02a789 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3c90019b; op2val:0xc0e843b3; op3val:0x3e02a789; valaddr_reg:x16; val_offset:876; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 876, x17, x15, 632, x18)

inst_1604:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x10019b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x6843b3 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x02a789 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3c90019b; op2val:0xc0e843b3; op3val:0x3e02a789; valaddr_reg:x16; val_offset:888; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 888, x17, x15, 640, x18)

inst_1605:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x10019b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x6843b3 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x02a789 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3c90019b; op2val:0xc0e843b3; op3val:0x3e02a789; valaddr_reg:x16; val_offset:900; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 900, x17, x15, 648, x18)

inst_1606:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4a6111 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7e0c8b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x48d639 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4a6111; op2val:0xbf7e0c8b; op3val:0x3f48d639; valaddr_reg:x16; val_offset:912; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 912, x17, x15, 656, x18)

inst_1607:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4a6111 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7e0c8b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x48d639 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4a6111; op2val:0xbf7e0c8b; op3val:0x3f48d639; valaddr_reg:x16; val_offset:924; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 924, x17, x15, 664, x18)

inst_1608:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4a6111 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7e0c8b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x48d639 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4a6111; op2val:0xbf7e0c8b; op3val:0x3f48d639; valaddr_reg:x16; val_offset:936; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 936, x17, x15, 672, x18)

inst_1609:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4a6111 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7e0c8b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x48d639 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4a6111; op2val:0xbf7e0c8b; op3val:0x3f48d639; valaddr_reg:x16; val_offset:948; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 948, x17, x15, 680, x18)

inst_1610:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4a6111 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7e0c8b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x48d639 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4a6111; op2val:0xbf7e0c8b; op3val:0x3f48d639; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 688, x18)

inst_1611:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7f8bae and fs2 == 1 and fe2 == 0x7c and fm2 == 0x03ea69 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x03ae79 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7f8bae; op2val:0xbe03ea69; op3val:0x3e03ae79; valaddr_reg:x16; val_offset:972; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 972, x17, x15, 696, x18)

inst_1612:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7f8bae and fs2 == 1 and fe2 == 0x7c and fm2 == 0x03ea69 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x03ae79 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7f8bae; op2val:0xbe03ea69; op3val:0x3e03ae79; valaddr_reg:x16; val_offset:984; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 984, x17, x15, 704, x18)

inst_1613:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7f8bae and fs2 == 1 and fe2 == 0x7c and fm2 == 0x03ea69 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x03ae79 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7f8bae; op2val:0xbe03ea69; op3val:0x3e03ae79; valaddr_reg:x16; val_offset:996; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 996, x17, x15, 712, x18)

inst_1614:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7f8bae and fs2 == 1 and fe2 == 0x7c and fm2 == 0x03ea69 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x03ae79 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7f8bae; op2val:0xbe03ea69; op3val:0x3e03ae79; valaddr_reg:x16; val_offset:1008; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1008, x17, x15, 720, x18)

inst_1615:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7f8bae and fs2 == 1 and fe2 == 0x7c and fm2 == 0x03ea69 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x03ae79 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7f8bae; op2val:0xbe03ea69; op3val:0x3e03ae79; valaddr_reg:x16; val_offset:1020; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1020, x17, x15, 728, x18)

inst_1616:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x43dd43 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x121a4f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5f90a3 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec3dd43; op2val:0xc0121a4f; op3val:0x3f5f90a3; valaddr_reg:x16; val_offset:1032; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1032, x17, x15, 736, x18)

inst_1617:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x43dd43 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x121a4f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5f90a3 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec3dd43; op2val:0xc0121a4f; op3val:0x3f5f90a3; valaddr_reg:x16; val_offset:1044; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1044, x17, x15, 744, x18)

inst_1618:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x43dd43 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x121a4f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5f90a3 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec3dd43; op2val:0xc0121a4f; op3val:0x3f5f90a3; valaddr_reg:x16; val_offset:1056; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1056, x17, x15, 752, x18)

inst_1619:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x43dd43 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x121a4f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5f90a3 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec3dd43; op2val:0xc0121a4f; op3val:0x3f5f90a3; valaddr_reg:x16; val_offset:1068; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1068, x17, x15, 760, x18)

inst_1620:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x43dd43 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x121a4f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5f90a3 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec3dd43; op2val:0xc0121a4f; op3val:0x3f5f90a3; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 768, x18)

inst_1621:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x4fb8b2 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x07dbf2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5c79bd and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e4fb8b2; op2val:0xc087dbf2; op3val:0x3f5c79bd; valaddr_reg:x16; val_offset:1092; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1092, x17, x15, 776, x18)

inst_1622:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x4fb8b2 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x07dbf2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5c79bd and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e4fb8b2; op2val:0xc087dbf2; op3val:0x3f5c79bd; valaddr_reg:x16; val_offset:1104; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1104, x17, x15, 784, x18)

inst_1623:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x4fb8b2 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x07dbf2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5c79bd and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e4fb8b2; op2val:0xc087dbf2; op3val:0x3f5c79bd; valaddr_reg:x16; val_offset:1116; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1116, x17, x15, 792, x18)

inst_1624:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x4fb8b2 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x07dbf2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5c79bd and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e4fb8b2; op2val:0xc087dbf2; op3val:0x3f5c79bd; valaddr_reg:x16; val_offset:1128; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1128, x17, x15, 800, x18)

inst_1625:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x4fb8b2 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x07dbf2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5c79bd and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e4fb8b2; op2val:0xc087dbf2; op3val:0x3f5c79bd; valaddr_reg:x16; val_offset:1140; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1140, x17, x15, 808, x18)

inst_1626:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x6fe5aa and fs2 == 1 and fe2 == 0x80 and fm2 == 0x65951d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x57242d and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e6fe5aa; op2val:0xc065951d; op3val:0x3f57242d; valaddr_reg:x16; val_offset:1152; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1152, x17, x15, 816, x18)

inst_1627:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x6fe5aa and fs2 == 1 and fe2 == 0x80 and fm2 == 0x65951d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x57242d and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e6fe5aa; op2val:0xc065951d; op3val:0x3f57242d; valaddr_reg:x16; val_offset:1164; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1164, x17, x15, 824, x18)

inst_1628:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x6fe5aa and fs2 == 1 and fe2 == 0x80 and fm2 == 0x65951d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x57242d and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e6fe5aa; op2val:0xc065951d; op3val:0x3f57242d; valaddr_reg:x16; val_offset:1176; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1176, x17, x15, 832, x18)

inst_1629:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x6fe5aa and fs2 == 1 and fe2 == 0x80 and fm2 == 0x65951d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x57242d and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e6fe5aa; op2val:0xc065951d; op3val:0x3f57242d; valaddr_reg:x16; val_offset:1188; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1188, x17, x15, 840, x18)

inst_1630:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x6fe5aa and fs2 == 1 and fe2 == 0x80 and fm2 == 0x65951d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x57242d and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e6fe5aa; op2val:0xc065951d; op3val:0x3f57242d; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 848, x18)

inst_1631:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3873d7 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x6dc7ad and fs3 == 0 and fe3 == 0x7b and fm3 == 0x2b531e and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3873d7; op2val:0xbdedc7ad; op3val:0x3dab531e; valaddr_reg:x16; val_offset:1212; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1212, x17, x15, 856, x18)

inst_1632:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3873d7 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x6dc7ad and fs3 == 0 and fe3 == 0x7b and fm3 == 0x2b531e and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3873d7; op2val:0xbdedc7ad; op3val:0x3dab531e; valaddr_reg:x16; val_offset:1224; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1224, x17, x15, 864, x18)

inst_1633:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3873d7 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x6dc7ad and fs3 == 0 and fe3 == 0x7b and fm3 == 0x2b531e and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3873d7; op2val:0xbdedc7ad; op3val:0x3dab531e; valaddr_reg:x16; val_offset:1236; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1236, x17, x15, 872, x18)

inst_1634:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3873d7 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x6dc7ad and fs3 == 0 and fe3 == 0x7b and fm3 == 0x2b531e and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3873d7; op2val:0xbdedc7ad; op3val:0x3dab531e; valaddr_reg:x16; val_offset:1248; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1248, x17, x15, 880, x18)

inst_1635:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3873d7 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x6dc7ad and fs3 == 0 and fe3 == 0x7b and fm3 == 0x2b531e and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3873d7; op2val:0xbdedc7ad; op3val:0x3dab531e; valaddr_reg:x16; val_offset:1260; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1260, x17, x15, 888, x18)

inst_1636:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7ca48c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4b2e86 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x488465 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7ca48c; op2val:0xbf4b2e86; op3val:0x3f488465; valaddr_reg:x16; val_offset:1272; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1272, x17, x15, 896, x18)

inst_1637:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7ca48c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4b2e86 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x488465 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7ca48c; op2val:0xbf4b2e86; op3val:0x3f488465; valaddr_reg:x16; val_offset:1284; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1284, x17, x15, 904, x18)

inst_1638:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7ca48c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4b2e86 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x488465 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7ca48c; op2val:0xbf4b2e86; op3val:0x3f488465; valaddr_reg:x16; val_offset:1296; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1296, x17, x15, 912, x18)

inst_1639:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7ca48c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4b2e86 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x488465 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7ca48c; op2val:0xbf4b2e86; op3val:0x3f488465; valaddr_reg:x16; val_offset:1308; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1308, x17, x15, 920, x18)

inst_1640:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7ca48c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4b2e86 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x488465 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7ca48c; op2val:0xbf4b2e86; op3val:0x3f488465; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 928, x18)

inst_1641:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x69982d and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6f10c7 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5a2461 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee9982d; op2val:0xbf6f10c7; op3val:0x3eda2461; valaddr_reg:x16; val_offset:1332; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1332, x17, x15, 936, x18)

inst_1642:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x69982d and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6f10c7 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5a2461 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee9982d; op2val:0xbf6f10c7; op3val:0x3eda2461; valaddr_reg:x16; val_offset:1344; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1344, x17, x15, 944, x18)

inst_1643:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x69982d and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6f10c7 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5a2461 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee9982d; op2val:0xbf6f10c7; op3val:0x3eda2461; valaddr_reg:x16; val_offset:1356; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1356, x17, x15, 952, x18)

inst_1644:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x69982d and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6f10c7 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5a2461 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee9982d; op2val:0xbf6f10c7; op3val:0x3eda2461; valaddr_reg:x16; val_offset:1368; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1368, x17, x15, 960, x18)

inst_1645:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x69982d and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6f10c7 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5a2461 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee9982d; op2val:0xbf6f10c7; op3val:0x3eda2461; valaddr_reg:x16; val_offset:1380; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1380, x17, x15, 968, x18)

inst_1646:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x07eb17 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x35a405 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x40e09a and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f07eb17; op2val:0xbfb5a405; op3val:0x3f40e09a; valaddr_reg:x16; val_offset:1392; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1392, x17, x15, 976, x18)

inst_1647:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x07eb17 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x35a405 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x40e09a and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f07eb17; op2val:0xbfb5a405; op3val:0x3f40e09a; valaddr_reg:x16; val_offset:1404; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1404, x17, x15, 984, x18)

inst_1648:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x07eb17 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x35a405 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x40e09a and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f07eb17; op2val:0xbfb5a405; op3val:0x3f40e09a; valaddr_reg:x16; val_offset:1416; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1416, x17, x15, 992, x18)

inst_1649:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x07eb17 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x35a405 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x40e09a and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f07eb17; op2val:0xbfb5a405; op3val:0x3f40e09a; valaddr_reg:x16; val_offset:1428; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1428, x17, x15, 1000, x18)

inst_1650:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x07eb17 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x35a405 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x40e09a and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f07eb17; op2val:0xbfb5a405; op3val:0x3f40e09a; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 1008, x18)

inst_1651:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x4af4ae and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0f2d24 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6304ef and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dcaf4ae; op2val:0xc10f2d24; op3val:0x3f6304ef; valaddr_reg:x16; val_offset:1452; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1452, x17, x15, 1016, x18)

inst_1652:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x4af4ae and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0f2d24 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6304ef and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dcaf4ae; op2val:0xc10f2d24; op3val:0x3f6304ef; valaddr_reg:x16; val_offset:1464; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1464, x17, x15, 1024, x18)

inst_1653:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x4af4ae and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0f2d24 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6304ef and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dcaf4ae; op2val:0xc10f2d24; op3val:0x3f6304ef; valaddr_reg:x16; val_offset:1476; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1476, x17, x15, 1032, x18)

inst_1654:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x4af4ae and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0f2d24 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6304ef and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dcaf4ae; op2val:0xc10f2d24; op3val:0x3f6304ef; valaddr_reg:x16; val_offset:1488; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1488, x17, x15, 1040, x18)

inst_1655:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x4af4ae and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0f2d24 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6304ef and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dcaf4ae; op2val:0xc10f2d24; op3val:0x3f6304ef; valaddr_reg:x16; val_offset:1500; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1500, x17, x15, 1048, x18)

inst_1656:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x6802c9 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x464ed6 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x33b99b and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d6802c9; op2val:0xc0c64ed6; op3val:0x3eb3b99b; valaddr_reg:x16; val_offset:1512; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1512, x17, x15, 1056, x18)

inst_1657:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x6802c9 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x464ed6 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x33b99b and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d6802c9; op2val:0xc0c64ed6; op3val:0x3eb3b99b; valaddr_reg:x16; val_offset:1524; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1524, x17, x15, 1064, x18)

inst_1658:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x6802c9 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x464ed6 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x33b99b and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d6802c9; op2val:0xc0c64ed6; op3val:0x3eb3b99b; valaddr_reg:x16; val_offset:1536; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1536, x17, x15, 1072, x18)

inst_1659:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x6802c9 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x464ed6 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x33b99b and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d6802c9; op2val:0xc0c64ed6; op3val:0x3eb3b99b; valaddr_reg:x16; val_offset:1548; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1548, x17, x15, 1080, x18)

inst_1660:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x6802c9 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x464ed6 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x33b99b and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d6802c9; op2val:0xc0c64ed6; op3val:0x3eb3b99b; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1088, x18)

inst_1661:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x78931d and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0ce316 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x08ccf4 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f78931d; op2val:0xbf0ce316; op3val:0x3f08ccf4; valaddr_reg:x16; val_offset:1572; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1572, x17, x15, 1096, x18)

inst_1662:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x78931d and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0ce316 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x08ccf4 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f78931d; op2val:0xbf0ce316; op3val:0x3f08ccf4; valaddr_reg:x16; val_offset:1584; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1584, x17, x15, 1104, x18)

inst_1663:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x78931d and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0ce316 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x08ccf4 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f78931d; op2val:0xbf0ce316; op3val:0x3f08ccf4; valaddr_reg:x16; val_offset:1596; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1596, x17, x15, 1112, x18)

inst_1664:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x78931d and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0ce316 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x08ccf4 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f78931d; op2val:0xbf0ce316; op3val:0x3f08ccf4; valaddr_reg:x16; val_offset:1608; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1608, x17, x15, 1120, x18)

inst_1665:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x78931d and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0ce316 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x08ccf4 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f78931d; op2val:0xbf0ce316; op3val:0x3f08ccf4; valaddr_reg:x16; val_offset:1620; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1620, x17, x15, 1128, x18)

inst_1666:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x052c03 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x18e67e and fs3 == 0 and fe3 == 0x7b and fm3 == 0x1f1412 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e852c03; op2val:0xbe98e67e; op3val:0x3d9f1412; valaddr_reg:x16; val_offset:1632; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1632, x17, x15, 1136, x18)

inst_1667:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x052c03 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x18e67e and fs3 == 0 and fe3 == 0x7b and fm3 == 0x1f1412 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e852c03; op2val:0xbe98e67e; op3val:0x3d9f1412; valaddr_reg:x16; val_offset:1644; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1644, x17, x15, 1144, x18)

inst_1668:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x052c03 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x18e67e and fs3 == 0 and fe3 == 0x7b and fm3 == 0x1f1412 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e852c03; op2val:0xbe98e67e; op3val:0x3d9f1412; valaddr_reg:x16; val_offset:1656; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1656, x17, x15, 1152, x18)

inst_1669:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x052c03 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x18e67e and fs3 == 0 and fe3 == 0x7b and fm3 == 0x1f1412 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e852c03; op2val:0xbe98e67e; op3val:0x3d9f1412; valaddr_reg:x16; val_offset:1668; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1668, x17, x15, 1160, x18)

inst_1670:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x052c03 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x18e67e and fs3 == 0 and fe3 == 0x7b and fm3 == 0x1f1412 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e852c03; op2val:0xbe98e67e; op3val:0x3d9f1412; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1168, x18)

inst_1671:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x51b8c7 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x0fdea9 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x6bb940 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e51b8c7; op2val:0xbe8fdea9; op3val:0x3d6bb940; valaddr_reg:x16; val_offset:1692; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1692, x17, x15, 1176, x18)

inst_1672:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x51b8c7 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x0fdea9 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x6bb940 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e51b8c7; op2val:0xbe8fdea9; op3val:0x3d6bb940; valaddr_reg:x16; val_offset:1704; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1704, x17, x15, 1184, x18)

inst_1673:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x51b8c7 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x0fdea9 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x6bb940 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e51b8c7; op2val:0xbe8fdea9; op3val:0x3d6bb940; valaddr_reg:x16; val_offset:1716; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1716, x17, x15, 1192, x18)

inst_1674:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x51b8c7 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x0fdea9 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x6bb940 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e51b8c7; op2val:0xbe8fdea9; op3val:0x3d6bb940; valaddr_reg:x16; val_offset:1728; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1728, x17, x15, 1200, x18)

inst_1675:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x51b8c7 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x0fdea9 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x6bb940 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e51b8c7; op2val:0xbe8fdea9; op3val:0x3d6bb940; valaddr_reg:x16; val_offset:1740; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1740, x17, x15, 1208, x18)

inst_1676:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x411307 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2f4ae5 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x04347e and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec11307; op2val:0xbf2f4ae5; op3val:0x3e84347e; valaddr_reg:x16; val_offset:1752; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1752, x17, x15, 1216, x18)

inst_1677:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x411307 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2f4ae5 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x04347e and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec11307; op2val:0xbf2f4ae5; op3val:0x3e84347e; valaddr_reg:x16; val_offset:1764; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1764, x17, x15, 1224, x18)

inst_1678:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x411307 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2f4ae5 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x04347e and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec11307; op2val:0xbf2f4ae5; op3val:0x3e84347e; valaddr_reg:x16; val_offset:1776; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1776, x17, x15, 1232, x18)

inst_1679:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x411307 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2f4ae5 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x04347e and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec11307; op2val:0xbf2f4ae5; op3val:0x3e84347e; valaddr_reg:x16; val_offset:1788; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1788, x17, x15, 1240, x18)

inst_1680:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x411307 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2f4ae5 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x04347e and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec11307; op2val:0xbf2f4ae5; op3val:0x3e84347e; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1248, x18)

inst_1681:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x301bb2 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x65aaff and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1dfe68 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f301bb2; op2val:0xbf65aaff; op3val:0x3f1dfe68; valaddr_reg:x16; val_offset:1812; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1812, x17, x15, 1256, x18)

inst_1682:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x301bb2 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x65aaff and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1dfe68 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f301bb2; op2val:0xbf65aaff; op3val:0x3f1dfe68; valaddr_reg:x16; val_offset:1824; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1824, x17, x15, 1264, x18)

inst_1683:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x301bb2 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x65aaff and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1dfe68 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f301bb2; op2val:0xbf65aaff; op3val:0x3f1dfe68; valaddr_reg:x16; val_offset:1836; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1836, x17, x15, 1272, x18)

inst_1684:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2ec914 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x36678a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x79134b and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2ec914; op2val:0xbfb6678a; op3val:0x3f79134b; valaddr_reg:x16; val_offset:1848; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1848, x17, x15, 1280, x18)

inst_1685:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2ec914 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x36678a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x79134b and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2ec914; op2val:0xbfb6678a; op3val:0x3f79134b; valaddr_reg:x16; val_offset:1860; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1860, x17, x15, 1288, x18)

inst_1686:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2ec914 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x36678a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x79134b and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2ec914; op2val:0xbfb6678a; op3val:0x3f79134b; valaddr_reg:x16; val_offset:1872; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1872, x17, x15, 1296, x18)

inst_1687:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x50b4e8 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3fd4a0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1c6451 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f50b4e8; op2val:0xbf3fd4a0; op3val:0x3f1c6451; valaddr_reg:x16; val_offset:1884; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1884, x17, x15, 1304, x18)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
test_fp:
.word 0x3ec11307
.word 0xbf2f4ae5
.word 0x3ec11307
.word 0x3f301bb2
.word 0xbf65aaff
.word 0x3f1dfe68
.word 0x3f301bb2
.word 0xbf65aaff
.word 0x3f1dfe68
.word 0x3f301bb2
.word 0x3f301bb2
.word 0x3f1dfe68
.word 0x3f301bb2
.word 0x3f301bb2
.word 0x3f1dfe68
.word 0x3f301bb2
.word 0x3f301bb2
.word 0x3f301bb2
.word 0x3f2ec914
.word 0x3f2ec914
.word 0x3f2ec914
.word 0x3f2ec914
.word 0xbfb6678a
.word 0x3f79134b
.word 0x3f2ec914
.word 0xbfb6678a
.word 0xbfb6678a
.word 0x3f2ec914
.word 0xbfb6678a
.word 0x3f2ec914
.word 0x3f2ec914
.word 0xbfb6678a
.word 0x3f79134b
.word 0x3f50b4e8
.word 0xbf3fd4a0
.word 0xbf3fd4a0
.word 0x3f50b4e8
.word 0xbf3fd4a0
.word 0x3f1c6451
.word 0x3f50b4e8
.word 0xbf3fd4a0
.word 0x3f1c6451
.word 0x3f50b4e8
.word 0xbf3fd4a0
.word 0x3f1c6451
.word 0x3f50b4e8
.word 0xbf3fd4a0
.word 0x3f1c6451
.word 0x3ef9fcb9
.word 0xbf58b625
.word 0x3ed39f1a
.word 0x3ef9fcb9
.word 0xbf58b625
.word 0x3ed39f1a
.word 0x3ef9fcb9
.word 0xbf58b625
.word 0x3ed39f1a
.word 0x3ef9fcb9
.word 0xbf58b625
.word 0x3ed39f1a
.word 0x3ef9fcb9
.word 0xbf58b625
.word 0x3ed39f1a
.word 0x3f1fa1ee
.word 0xbfcb33ac
.word 0x3f7d6b41
.word 0x3f1fa1ee
.word 0xbfcb33ac
.word 0x3f7d6b41
.word 0x3f1fa1ee
.word 0xbfcb33ac
.word 0x3f7d6b41
.word 0x3f1fa1ee
.word 0xbfcb33ac
.word 0x3f7d6b41
.word 0x3f1fa1ee
.word 0xbfcb33ac
.word 0x3f7d6b41
.word 0x3ec0f897
.word 0xbf079831
.word 0x3e4c6ba2
.word 0x3ec0f897
.word 0xbf079831
.word 0x3e4c6ba2
.word 0x3ec0f897
.word 0xbf079831
.word 0x3e4c6ba2
.word 0x3ec0f897
.word 0xbf079831
.word 0x3e4c6ba2
.word 0x3ec0f897
.word 0xbf079831
.word 0x3e4c6ba2
.word 0x3ea25a77
.word 0xbedd03ae
.word 0x3e0c2a6e
.word 0x3ea25a77
.word 0xbedd03ae
.word 0x3e0c2a6e
.word 0x3ea25a77
.word 0xbedd03ae
.word 0x3e0c2a6e
.word 0x3ea25a77
.word 0xbedd03ae
.word 0x3e0c2a6e
.word 0x3ea25a77
.word 0xbedd03ae
.word 0x3e0c2a6e
.word 0x3e4fd596
.word 0xc0552489
.word 0x3f2d0a5f
.word 0x3e4fd596
.word 0xc0552489
.word 0x3f2d0a5f
.word 0x3e4fd596
.word 0xc0552489
.word 0x3f2d0a5f
.word 0x3e4fd596
.word 0xc0552489
.word 0x3f2d0a5f
.word 0x3e4fd596
.word 0xc0552489
.word 0x3f2d0a5f
.word 0x3dcc6d8b
.word 0xc10057ab
.word 0x3f4cf98f
.word 0x3dcc6d8b
.word 0xc10057ab
.word 0x3f4cf98f
.word 0x3dcc6d8b
.word 0xc10057ab
.word 0x3f4cf98f
.word 0x3dcc6d8b
.word 0xc10057ab
.word 0x3f4cf98f
.word 0x3dcc6d8b
.word 0xc10057ab
.word 0x3f4cf98f
.word 0x3f66ba48
.word 0xbea05fba
.word 0x3e908ab4
.word 0x3f66ba48
.word 0xbea05fba
.word 0x3e908ab4
.word 0x3f66ba48
.word 0xbea05fba
.word 0x3e908ab4
.word 0x3f66ba48
.word 0xbea05fba
.word 0x3e908ab4
.word 0x3f66ba48
.word 0xbea05fba
.word 0x3e908ab4
.word 0x3f765668
.word 0xbf5ceeba
.word 0x3f5497f9
.word 0x3f765668
.word 0xbf5ceeba
.word 0x3f5497f9
.word 0x3f765668
.word 0xbf5ceeba
.word 0x3f5497f9
.word 0x3f765668
.word 0xbf5ceeba
.word 0x3f5497f9
.word 0x3f765668
.word 0xbf5ceeba
.word 0x3f5497f9
.word 0x3e2c5c56
.word 0xc041df4b
.word 0x3f0287f4
.word 0x3e2c5c56
.word 0xc041df4b
.word 0x3f0287f4
.word 0x3e2c5c56
.word 0xc041df4b
.word 0x3f0287f4
.word 0x3e2c5c56
.word 0xc041df4b
.word 0x3f0287f4
.word 0x3e2c5c56
.word 0xc041df4b
.word 0x3f0287f4
.word 0x3f196169
.word 0xbfb713a4
.word 0x3f5b60cd
.word 0x3f196169
.word 0xbfb713a4
.word 0x3f5b60cd
.word 0x3f196169
.word 0xbfb713a4
.word 0x3f5b60cd
.word 0x3f196169
.word 0xbfb713a4
.word 0x3f5b60cd
.word 0x3f196169
.word 0xbfb713a4
.word 0x3f5b60cd
.word 0x3e19c511
.word 0xc022bdaf
.word 0x3ec3814a
.word 0x3e19c511
.word 0xc022bdaf
.word 0x3ec3814a
.word 0x3e19c511
.word 0xc022bdaf
.word 0x3ec3814a
.word 0x3e19c511
.word 0xc022bdaf
.word 0x3ec3814a
.word 0x3e19c511
.word 0xc022bdaf
.word 0x3ec3814a
.word 0x3c9002b1
.word 0xc1116f11
.word 0x3e23a003
.word 0x3c9002b1
.word 0xc1116f11
.word 0x3e23a003
.word 0x3c9002b1
.word 0xc1116f11
.word 0x3e23a003
.word 0x3c9002b1
.word 0xc1116f11
.word 0x3e23a003
.word 0x3c9002b1
.word 0xc1116f11
.word 0x3e23a003
.word 0x3f25f257
.word 0xbf947187
.word 0x3f407365
.word 0x3f25f257
.word 0xbf947187
.word 0x3f407365
.word 0x3f25f257
.word 0xbf947187
.word 0x3f407365
.word 0x3f25f257
.word 0xbf947187
.word 0x3f407365
.word 0x3f25f257
.word 0xbf947187
.word 0x3f407365
.word 0x3e7ee4d9
.word 0xc04300ed
.word 0x3f42293d
.word 0x3e7ee4d9
.word 0xc04300ed
.word 0x3f42293d
.word 0x3e7ee4d9
.word 0xc04300ed
.word 0x3f42293d
.word 0x3e7ee4d9
.word 0xc04300ed
.word 0x3f42293d
.word 0x3e7ee4d9
.word 0xc04300ed
.word 0x3f42293d
.word 0x3ee008d7
.word 0xbfbc18fa
.word 0x3f249c5a
.word 0x3ee008d7
.word 0xbfbc18fa
.word 0x3f249c5a
.word 0x3ee008d7
.word 0xbfbc18fa
.word 0x3f249c5a
.word 0x3ee008d7
.word 0xbfbc18fa
.word 0x3f249c5a
.word 0x3ee008d7
.word 0xbfbc18fa
.word 0x3f249c5a
.word 0x3f391398
.word 0xbf8d6fa4
.word 0x3f4c8103
.word 0x3f391398
.word 0xbf8d6fa4
.word 0x3f4c8103
.word 0x3f391398
.word 0xbf8d6fa4
.word 0x3f4c8103
.word 0x3f391398
.word 0xbf8d6fa4
.word 0x3f4c8103
.word 0x3f391398
.word 0xbf8d6fa4
.word 0x3f4c8103
.word 0x3f1b76d7
.word 0xbfa553ef
.word 0x3f48cd24
.word 0x3f1b76d7
.word 0xbfa553ef
.word 0x3f48cd24
.word 0x3f1b76d7
.word 0xbfa553ef
.word 0x3f48cd24
.word 0x3f1b76d7
.word 0xbfa553ef
.word 0x3f48cd24
.word 0x3f1b76d7
.word 0xbfa553ef
.word 0x3f48cd24
.word 0x3f049c05
.word 0xbe69ae39
.word 0x3df21881
.word 0x3f049c05
.word 0xbe69ae39
.word 0x3df21881
.word 0x3f049c05
.word 0xbe69ae39
.word 0x3df21881
.word 0x3f049c05
.word 0xbe69ae39
.word 0x3df21881
.word 0x3f049c05
.word 0xbe69ae39
.word 0x3df21881
.word 0x3f7795ca
.word 0xbedff11c
.word 0x3ed894ab
.word 0x3f7795ca
.word 0xbedff11c
.word 0x3ed894ab
.word 0x3f7795ca
.word 0xbedff11c
.word 0x3ed894ab
.word 0x3f7795ca
.word 0xbedff11c
.word 0x3ed894ab
.word 0x3f7795ca
.word 0xbedff11c
.word 0x3ed894ab
.word 0x3f729bba
.word 0xbcbe1602
.word 0x3cb4246f
.word 0x3f729bba
.word 0xbcbe1602
.word 0x3cb4246f
.word 0x3f729bba
.word 0xbcbe1602
.word 0x3cb4246f
.word 0x3f729bba
.word 0xbcbe1602
.word 0x3cb4246f
.word 0x3f729bba
.word 0xbcbe1602
.word 0x3cb4246f
.word 0x3e3e32ec
.word 0xc04808f7
.word 0x3f149e72
.word 0x3e3e32ec
.word 0xc04808f7
.word 0x3f149e72
.word 0x3e3e32ec
.word 0xc04808f7
.word 0x3f149e72
.word 0x3e3e32ec
.word 0xc04808f7
.word 0x3f149e72
.word 0x3e3e32ec
.word 0xc04808f7
.word 0x3f149e72
.word 0x3eced70e
.word 0xc00e03e8
.word 0x3f657ce4
.word 0x3eced70e
.word 0xc00e03e8
.word 0x3f657ce4
.word 0x3eced70e
.word 0xc00e03e8
.word 0x3f657ce4
.word 0x3eced70e
.word 0xc00e03e8
.word 0x3f657ce4
.word 0x3eced70e
.word 0xc00e03e8
.word 0x3f657ce4
.word 0x3eef4ee6
.word 0xbd84eaf5
.word 0x3cf880a6
.word 0x3eef4ee6
.word 0xbd84eaf5
.word 0x3cf880a6
.word 0x3eef4ee6
.word 0xbd84eaf5
.word 0x3cf880a6
.word 0x3eef4ee6
.word 0xbd84eaf5
.word 0x3cf880a6
.word 0x3eef4ee6
.word 0xbd84eaf5
.word 0x3cf880a6
.word 0x3e6e143b
.word 0xbe8c4928
.word 0x3d827719
.word 0x3e6e143b
.word 0xbe8c4928
.word 0x3d827719
.word 0x3e6e143b
.word 0xbe8c4928
.word 0x3d827719
.word 0x3e6e143b
.word 0xbe8c4928
.word 0x3d827719
.word 0x3e6e143b
.word 0xbe8c4928
.word 0x3d827719
.word 0x3f10db40
.word 0xbf7cb5f7
.word 0x3f0efeca
.word 0x3f10db40
.word 0xbf7cb5f7
.word 0x3f0efeca
.word 0x3f10db40
.word 0xbf7cb5f7
.word 0x3f0efeca
.word 0x3f10db40
.word 0xbf7cb5f7
.word 0x3f0efeca
.word 0x3f10db40
.word 0xbf7cb5f7
.word 0x3f0efeca
.word 0x3dae18e5
.word 0xc0cae60b
.word 0x3f09fc17
.word 0x3dae18e5
.word 0xc0cae60b
.word 0x3f09fc17
.word 0x3dae18e5
.word 0xc0cae60b
.word 0x3f09fc17
.word 0x3dae18e5
.word 0xc0cae60b
.word 0x3f09fc17
.word 0x3dae18e5
.word 0xc0cae60b
.word 0x3f09fc17
.word 0x3f61bd75
.word 0xbf4643a4
.word 0x3f2ed42e
.word 0x3f61bd75
.word 0xbf4643a4
.word 0x3f2ed42e
.word 0x3f61bd75
.word 0xbf4643a4
.word 0x3f2ed42e
.word 0x3f61bd75
.word 0xbf4643a4
.word 0x3f2ed42e
.word 0x3f61bd75
.word 0xbf4643a4
.word 0x3f2ed42e
.word 0x3d7bc007
.word 0xc055b282
.word 0x3e522651
.word 0x3d7bc007
.word 0xc055b282
.word 0x3e522651
.word 0x3d7bc007
.word 0xc055b282
.word 0x3e522651
.word 0x3d7bc007
.word 0xc055b282
.word 0x3e522651
.word 0x3d7bc007
.word 0xc055b282
.word 0x3e522651
.word 0x3e94c505
.word 0xbff3f40a
.word 0x3f0dc4d6
.word 0x3e94c505
.word 0xbff3f40a
.word 0x3f0dc4d6
.word 0x3e94c505
.word 0xbff3f40a
.word 0x3f0dc4d6
.word 0x3e94c505
.word 0xbff3f40a
.word 0x3f0dc4d6
.word 0x3e94c505
.word 0xbff3f40a
.word 0x3f0dc4d6
.word 0x3ef07ae8
.word 0xbfe1ddf8
.word 0x3f542c89
.word 0x3ef07ae8
.word 0xbfe1ddf8
.word 0x3f542c89
.word 0x3ef07ae8
.word 0xbfe1ddf8
.word 0x3f542c89
.word 0x3ef07ae8
.word 0xbfe1ddf8
.word 0x3f542c89
.word 0x3ef07ae8
.word 0xbfe1ddf8
.word 0x3f542c89
.word 0x3e8bdc86
.word 0xc053f645
.word 0x3f679a9d
.word 0x3e8bdc86
.word 0xc053f645
.word 0x3f679a9d
.word 0x3e8bdc86
.word 0xc053f645
.word 0x3f679a9d
.word 0x3e8bdc86
.word 0xc053f645
.word 0x3f679a9d
.word 0x3e8bdc86
.word 0xc053f645
.word 0x3f679a9d
.word 0x3ed4c6f9
.word 0xbed53b99
.word 0x3e313b16
.word 0x3ed4c6f9
.word 0xbed53b99
.word 0x3e313b16
.word 0x3ed4c6f9
.word 0xbed53b99
.word 0x3e313b16
.word 0x3ed4c6f9
.word 0xbed53b99
.word 0x3e313b16
.word 0x3ed4c6f9
.word 0xbed53b99
.word 0x3e313b16
.word 0x3f2b6cbc
.word 0xbfbcc599
.word 0x3f7cd058
.word 0x3f2b6cbc
.word 0xbfbcc599
.word 0x3f7cd058
.word 0x3f2b6cbc
.word 0xbfbcc599
.word 0x3f7cd058
.word 0x3f2b6cbc
.word 0xbfbcc599
.word 0x3f7cd058
.word 0x3f2b6cbc
.word 0xbfbcc599
.word 0x3f7cd058
.word 0x3f123365
.word 0xbf8ee721
.word 0x3f233904
.word 0x3f123365
.word 0xbf8ee721
.word 0x3f233904
.word 0x3f123365
.word 0xbf8ee721
.word 0x3f233904
.word 0x3f123365
.word 0xbf8ee721
.word 0x3f233904
.word 0x3f123365
.word 0xbf8ee721
.word 0x3f233904
.word 0x3ec6a7b5
.word 0xbffda8e9
.word 0x3f44d6d1
.word 0x3ec6a7b5
.word 0xbffda8e9
.word 0x3f44d6d1
.word 0x3ec6a7b5
.word 0xbffda8e9
.word 0x3f44d6d1
.word 0x3ec6a7b5
.word 0xbffda8e9
.word 0x3f44d6d1
.word 0x3ec6a7b5
.word 0xbffda8e9
.word 0x3f44d6d1
.word 0x3e0f9112
.word 0xbeb97179
.word 0x3d4ffef4
.word 0x3e0f9112
.word 0xbeb97179
.word 0x3d4ffef4
.word 0x3e0f9112
.word 0xbeb97179
.word 0x3d4ffef4
.word 0x3e0f9112
.word 0xbeb97179
.word 0x3d4ffef4
.word 0x3e0f9112
.word 0xbeb97179
.word 0x3d4ffef4
.word 0x3f5eb092
.word 0xbf3d2fc7
.word 0x3f2491ec
.word 0x3f5eb092
.word 0xbf3d2fc7
.word 0x3f2491ec
.word 0x3f5eb092
.word 0xbf3d2fc7
.word 0x3f2491ec
.word 0x3f5eb092
.word 0xbf3d2fc7
.word 0x3f2491ec
.word 0x3f5eb092
.word 0xbf3d2fc7
.word 0x3f2491ec
.word 0x3f78f793
.word 0xbf79e76d
.word 0x3f7309e0
.word 0x3f78f793
.word 0xbf79e76d
.word 0x3f7309e0
.word 0x3f78f793
.word 0xbf79e76d
.word 0x3f7309e0
.word 0x3f78f793
.word 0xbf79e76d
.word 0x3f7309e0
.word 0x3f78f793
.word 0xbf79e76d
.word 0x3f7309e0
.word 0x3e71e19f
.word 0xbfefeef0
.word 0x3ee2b366
.word 0x3e71e19f
.word 0xbfefeef0
.word 0x3ee2b366
.word 0x3e71e19f
.word 0xbfefeef0
.word 0x3ee2b366
.word 0x3e71e19f
.word 0xbfefeef0
.word 0x3ee2b366
.word 0x3e71e19f
.word 0xbfefeef0
.word 0x3ee2b366
.word 0x54122fd6
.word 0x4051e9a0
.word 0x53021896
.word 0x54122fd6
.word 0x4051e9a0
.word 0x53021896
.word 0x54122fd6
.word 0x4051e9a0
.word 0x53021896
.word 0x54122fd6
.word 0x4051e9a0
.word 0x53021896
.word 0x54122fd6
.word 0x4051e9a0
.word 0x53021896
.word 0x54067276
.word 0x3f9dfbce
.word 0x54ad078f
.word 0x54067276
.word 0x3f9dfbce
.word 0x54ad078f
.word 0x54067276
.word 0x3f9dfbce
.word 0x54ad078f
.word 0x54067276
.word 0x3f9dfbce
.word 0x54ad078f
.word 0x54067276
.word 0x3f9dfbce
.word 0x54ad078f
.word 0x530705b8
.word 0x41499575
.word 0x53ad6d6e
.word 0x530705b8
.word 0x41499575
.word 0x53ad6d6e
.word 0x530705b8
.word 0x41499575
.word 0x53ad6d6e
.word 0x530705b8
.word 0x41499575
.word 0x53ad6d6e
.word 0x530705b8
.word 0x41499575
.word 0x53ad6d6e
.word 0x5443caa1
.word 0x40119051
.word 0x53855ed3
.word 0x5443caa1
.word 0x40119051
.word 0x53855ed3
.word 0x5443caa1
.word 0x40119051
.word 0x53855ed3
.word 0x5443caa1
.word 0x40119051
.word 0x53855ed3
.word 0x5443caa1
.word 0x40119051
.word 0x53855ed3
.word 0x54090f4d
.word 0x3f33b6cf
.word 0x54cfe437
.word 0x54090f4d
.word 0x3f33b6cf
.word 0x54cfe437
.word 0x54090f4d
.word 0x3f33b6cf
.word 0x54cfe437
.word 0x54090f4d
.word 0x3f33b6cf
.word 0x54cfe437
.word 0x54090f4d
.word 0x3f33b6cf
.word 0x54cfe437
.word 0x54ba5f88
.word 0x3ed227d5
.word 0x54b38051
.word 0x54ba5f88
.word 0x3ed227d5
.word 0x54b38051
.word 0x54ba5f88
.word 0x3ed227d5
.word 0x54b38051
.word 0x54ba5f88
.word 0x3ed227d5
.word 0x54b38051
.word 0x54ba5f88
.word 0x3ed227d5
.word 0x54b38051
.word 0x54a7cc22
.word 0x3d8d56e4
.word 0x54f46b74
.word 0x54a7cc22
.word 0x3d8d56e4
.word 0x54f46b74
.word 0x54a7cc22
.word 0x3d8d56e4
.word 0x54f46b74
.word 0x54a7cc22
.word 0x3d8d56e4
.word 0x54f46b74
.word 0x54a7cc22
.word 0x3d8d56e4
.word 0x54f46b74
.word 0x546265c2
.word 0x3ed42009
.word 0x54d119d9
.word 0x546265c2
.word 0x3ed42009
.word 0x54d119d9
.word 0x546265c2
.word 0x3ed42009
.word 0x54d119d9
.word 0x546265c2
.word 0x3ed42009
.word 0x54d119d9
.word 0x546265c2
.word 0x3ed42009
.word 0x54d119d9
.word 0x54c27ced
.word 0x3f0f4d5f
.word 0x5493216f
.word 0x54c27ced
.word 0x3f0f4d5f
.word 0x5493216f
.word 0x54c27ced
.word 0x3f0f4d5f
.word 0x5493216f
.word 0x54c27ced
.word 0x3f0f4d5f
.word 0x5493216f
.word 0x54c27ced
.word 0x3f0f4d5f
.word 0x5493216f
.word 0x54e56627
.word 0x3ec5a36c
.word 0x54a772f9
.word 0x54e56627
.word 0x3ec5a36c
.word 0x54a772f9
.word 0x54e56627
.word 0x3ec5a36c
.word 0x54a772f9
.word 0x54e56627
.word 0x3ec5a36c
.word 0x54a772f9
.word 0x54e56627
.word 0x3ec5a36c
.word 0x54a772f9
.word 0x54c097dc
.word 0x3f170e7b
.word 0x548e5b88
.word 0x54c097dc
.word 0x3f170e7b
.word 0x548e5b88
.word 0x54c097dc
.word 0x3f170e7b
.word 0x548e5b88
.word 0x54c097dc
.word 0x3f170e7b
.word 0x548e5b88
.word 0x54c097dc
.word 0x3f170e7b
.word 0x548e5b88
.word 0x545755ff
.word 0x3fd0cd02
.word 0x5420bb5d
.word 0x545755ff
.word 0x3fd0cd02
.word 0x5420bb5d
.word 0x545755ff
.word 0x3fd0cd02
.word 0x5420bb5d
.word 0x545755ff
.word 0x3fd0cd02
.word 0x5420bb5d
.word 0x545755ff
.word 0x3fd0cd02
.word 0x5420bb5d
.word 0x543f5dd2
.word 0x401a5c2a
.word 0x5349ca9b
.word 0x543f5dd2
.word 0x401a5c2a
.word 0x5349ca9b
.word 0x543f5dd2
.word 0x401a5c2a
.word 0x5349ca9b
.word 0x543f5dd2
.word 0x401a5c2a
.word 0x5349ca9b
.word 0x543f5dd2
.word 0x401a5c2a
.word 0x5349ca9b
.word 0x53cca682
.word 0x4064a420
.word 0x541270fe
.word 0x53cca682
.word 0x4064a420
.word 0x541270fe
.word 0x53cca682
.word 0x4064a420
.word 0x541270fe
.word 0x53cca682
.word 0x4064a420
.word 0x541270fe
.word 0x53cca682
.word 0x4064a420
.word 0x541270fe
.word 0x54b35aae
.word 0x3fadecb5
.word 0x52c4bc46
.word 0x54b35aae
.word 0x3fadecb5
.word 0x52c4bc46
.word 0x54b35aae
.word 0x3fadecb5
.word 0x52c4bc46
.word 0x54b35aae
.word 0x3fadecb5
.word 0x52c4bc46
.word 0x54b35aae
.word 0x3fadecb5
.word 0x52c4bc46
.word 0x53fb4695
.word 0x4074c9c3
.word 0x52fbaaf5
.word 0x53fb4695
.word 0x4074c9c3
.word 0x52fbaaf5
.word 0x53fb4695
.word 0x4074c9c3
.word 0x52fbaaf5
.word 0x53fb4695
.word 0x4074c9c3
.word 0x52fbaaf5
.word 0x53fb4695
.word 0x4074c9c3
.word 0x52fbaaf5
.word 0x545b7807
.word 0x3f7ca2c9
.word 0x5493b525
.word 0x545b7807
.word 0x3f7ca2c9
.word 0x5493b525
.word 0x545b7807
.word 0x3f7ca2c9
.word 0x5493b525
.word 0x545b7807
.word 0x3f7ca2c9
.word 0x5493b525
.word 0x545b7807
.word 0x3f7ca2c9
.word 0x5493b525
.word 0x53fab9d8
.word 0x406f5802
.word 0x532cb270
.word 0x53fab9d8
.word 0x406f5802
.word 0x532cb270
.word 0x53fab9d8
.word 0x406f5802
.word 0x532cb270
.word 0x53fab9d8
.word 0x406f5802
.word 0x532cb270
.word 0x53fab9d8
.word 0x406f5802
.word 0x532cb270
.word 0x5384edd6
.word 0x40e24c2b
.word 0x5327e7bb
.word 0x5384edd6
.word 0x40e24c2b
.word 0x5327e7bb
.word 0x5384edd6
.word 0x40e24c2b
.word 0x5327e7bb
.word 0x5384edd6
.word 0x40e24c2b
.word 0x5327e7bb
.word 0x5384edd6
.word 0x40e24c2b
.word 0x5327e7bb
.word 0x54d1c6ab
.word 0x3f56a9f9
.word 0x54203148
.word 0x54d1c6ab
.word 0x3f56a9f9
.word 0x54203148
.word 0x54d1c6ab
.word 0x3f56a9f9
.word 0x54203148
.word 0x54d1c6ab
.word 0x3f56a9f9
.word 0x54203148
.word 0x54d1c6ab
.word 0x3f56a9f9
.word 0x54203148
.word 0x533379cf
.word 0x402636b4
.word 0x54c5bc55
.word 0x533379cf
.word 0x402636b4
.word 0x54c5bc55
.word 0x533379cf
.word 0x402636b4
.word 0x54c5bc55
.word 0x533379cf
.word 0x402636b4
.word 0x54c5bc55
.word 0x533379cf
.word 0x402636b4
.word 0x54c5bc55
.word 0x536ced36
.word 0x40be6291
.word 0x541f9971
.word 0x536ced36
.word 0x40be6291
.word 0x541f9971
.word 0x536ced36
.word 0x40be6291
.word 0x541f9971
.word 0x536ced36
.word 0x40be6291
.word 0x541f9971
.word 0x536ced36
.word 0x40be6291
.word 0x541f9971
.word 0x54d38ffb
.word 0x3f70640e
.word 0x53e55952
.word 0x54d38ffb
.word 0x3f70640e
.word 0x53e55952
.word 0x54d38ffb
.word 0x3f70640e
.word 0x53e55952
.word 0x54d38ffb
.word 0x3f70640e
.word 0x53e55952
.word 0x54d38ffb
.word 0x3f70640e
.word 0x53e55952
.word 0x541d7f2f
.word 0x3fe54257
.word 0x5465e8d4
.word 0x541d7f2f
.word 0x3fe54257
.word 0x5465e8d4
.word 0x541d7f2f
.word 0x3fe54257
.word 0x5465e8d4
.word 0x541d7f2f
.word 0x3fe54257
.word 0x5465e8d4
.word 0x541d7f2f
.word 0x3fe54257
.word 0x5465e8d4
.word 0x54b9c374
.word 0x3df58c24
.word 0x54e9ba48
.word 0x54b9c374
.word 0x3df58c24
.word 0x54e9ba48
.word 0x54b9c374
.word 0x3df58c24
.word 0x54e9ba48
.word 0x54b9c374
.word 0x3df58c24
.word 0x54e9ba48
.word 0x54b9c374
.word 0x3df58c24
.word 0x54e9ba48
.word 0x5440d578
.word 0x3f7ed354
.word 0x54a00681
.word 0x5440d578
.word 0x3f7ed354
.word 0x54a00681
.word 0x5440d578
.word 0x3f7ed354
.word 0x54a00681
.word 0x5440d578
.word 0x3f7ed354
.word 0x54a00681
.word 0x5440d578
.word 0x3f7ed354
.word 0x54a00681
.word 0x54791bc6
.word 0x3f61809f
.word 0x549248b7
.word 0x54791bc6
.word 0x3f61809f
.word 0x549248b7
.word 0x54791bc6
.word 0x3f61809f
.word 0x549248b7
.word 0x54791bc6
.word 0x3f61809f
.word 0x549248b7
.word 0x54791bc6
.word 0x3f61809f
.word 0x549248b7
.word 0x520e9bc9
.word 0x41d38ff9
.word 0x548a2564
.word 0x520e9bc9
.word 0x41d38ff9
.word 0x548a2564
.word 0x520e9bc9
.word 0x41d38ff9
.word 0x548a2564
.word 0x520e9bc9
.word 0x41d38ff9
.word 0x548a2564
.word 0x520e9bc9
.word 0x41d38ff9
.word 0x548a2564
.word 0x54db5513
.word 0x3f6abb8b
.word 0x53db8e3c
.word 0x54db5513
.word 0x3f6abb8b
.word 0x53db8e3c
.word 0x54db5513
.word 0x3f6abb8b
.word 0x53db8e3c
.word 0x54db5513
.word 0x3f6abb8b
.word 0x53db8e3c
.word 0x54db5513
.word 0x3f6abb8b
.word 0x53db8e3c
.word 0x54ebda7c
.word 0x3edf3f08
.word 0x5499294e
.word 0x54ebda7c
.word 0x3edf3f08
.word 0x5499294e
.word 0x54ebda7c
.word 0x3edf3f08
.word 0x5499294e
.word 0x54ebda7c
.word 0x3edf3f08
.word 0x5499294e
.word 0x54ebda7c
.word 0x3edf3f08
.word 0x5499294e
.word 0x535d24d6
.word 0x4087bf38
.word 0x548abc63
.word 0x535d24d6
.word 0x4087bf38
.word 0x548abc63
.word 0x535d24d6
.word 0x4087bf38
.word 0x548abc63
.word 0x535d24d6
.word 0x4087bf38
.word 0x548abc63
.word 0x535d24d6
.word 0x4087bf38
.word 0x548abc63
.word 0x532cc4ce
.word 0x41022175
.word 0x5420b5eb
.word 0x532cc4ce
.word 0x41022175
.word 0x5420b5eb
.word 0x532cc4ce
.word 0x41022175
.word 0x5420b5eb
.word 0x532cc4ce
.word 0x41022175
.word 0x5420b5eb
.word 0x532cc4ce
.word 0x41022175
.word 0x5420b5eb
.word 0x544e01ce
.word 0x3f951a31
.word 0x548803df
.word 0x544e01ce
.word 0x3f951a31
.word 0x548803df
.word 0x544e01ce
.word 0x3f951a31
.word 0x548803df
.word 0x544e01ce
.word 0x3f951a31
.word 0x548803df
.word 0x544e01ce
.word 0x3f951a31
.word 0x548803df
.word 0x53b7b114
.word 0x402f4ea3
.word 0x54823585
.word 0x53b7b114
.word 0x402f4ea3
.word 0x54823585
.word 0x53b7b114
.word 0x402f4ea3
.word 0x54823585
.word 0x53b7b114
.word 0x402f4ea3
.word 0x54823585
.word 0x53b7b114
.word 0x402f4ea3
.word 0x54823585
.word 0x529a073c
.word 0x3f412b92
.word 0x54f8bc65
.word 0x529a073c
.word 0x3f412b92
.word 0x54f8bc65
.word 0x529a073c
.word 0x3f412b92
.word 0x54f8bc65
.word 0x529a073c
.word 0x3f412b92
.word 0x54f8bc65
.word 0x529a073c
.word 0x3f412b92
.word 0x54f8bc65
.word 0x541ca555
.word 0x40467208
.word 0x52d24b28
.word 0x541ca555
.word 0x40467208
.word 0x52d24b28
.word 0x541ca555
.word 0x40467208
.word 0x52d24b28
.word 0x541ca555
.word 0x40467208
.word 0x52d24b28
.word 0x541ca555
.word 0x40467208
.word 0x52d24b28
.word 0x5402c7ba
.word 0x40147669
.word 0x5450a02a
.word 0x5402c7ba
.word 0x40147669
.word 0x5450a02a
.word 0x5402c7ba
.word 0x40147669
.word 0x5450a02a
.word 0x5402c7ba
.word 0x40147669
.word 0x5450a02a
.word 0x5402c7ba
.word 0x40147669
.word 0x5450a02a
.word 0x544b6d62
.word 0x4017647d
.word 0x52f6540c
.word 0x544b6d62
.word 0x4017647d
.word 0x52f6540c
.word 0x544b6d62
.word 0x4017647d
.word 0x52f6540c
.word 0x544b6d62
.word 0x4017647d
.word 0x52f6540c
.word 0x544b6d62
.word 0x4017647d
.word 0x52f6540c
.word 0x53f94e87
.word 0x40799be5
.word 0x52ceacc7
.word 0x53f94e87
.word 0x40799be5
.word 0x52ceacc7
.word 0x53f94e87
.word 0x40799be5
.word 0x52ceacc7
.word 0x53f94e87
.word 0x40799be5
.word 0x52ceacc7
.word 0x53f94e87
.word 0x40799be5
.word 0x52ceacc7
.word 0x54ef8c68
.word 0x3f816fc6
.word 0x52dc3501
.word 0x54ef8c68
.word 0x3f816fc6
.word 0x52dc3501
.word 0x54ef8c68
.word 0x3f816fc6
.word 0x52dc3501
.word 0x54ef8c68
.word 0x3f816fc6
.word 0x52dc3501
.word 0x54ef8c68
.word 0x3f816fc6
.word 0x52dc3501
.word 0x54e6173b
.word 0x3f10ee62
.word 0x547b795a
.word 0x54e6173b
.word 0x3f10ee62
.word 0x547b795a
.word 0x54e6173b
.word 0x3f10ee62
.word 0x547b795a
.word 0x54e6173b
.word 0x3f10ee62
.word 0x547b795a
.word 0x54e6173b
.word 0x3f10ee62
.word 0x547b795a
.word 0x534021e6
.word 0x411e671e
.word 0x5311daef
.word 0x534021e6
.word 0x411e671e
.word 0x5311daef
.word 0x534021e6
.word 0x411e671e
.word 0x5311daef
.word 0x534021e6
.word 0x411e671e
.word 0x5311daef
.word 0x534021e6
.word 0x411e671e
.word 0x5311daef
.word 0x3ef64d80
.word 0xbfacf2a6
.word 0x3f266587
.word 0x3ef64d80
.word 0xbfacf2a6
.word 0x3f266587
.word 0x3ef64d80
.word 0xbfacf2a6
.word 0x3f266587
.word 0x3ef64d80
.word 0xbfacf2a6
.word 0x3f266587
.word 0x3ef64d80
.word 0xbfacf2a6
.word 0x3f266587
.word 0x3ee735fb
.word 0xbcbc8fae
.word 0x3c2a4d69
.word 0x3ee735fb
.word 0xbcbc8fae
.word 0x3c2a4d69
.word 0x3ee735fb
.word 0xbcbc8fae
.word 0x3c2a4d69
.word 0x3ee735fb
.word 0xbcbc8fae
.word 0x3c2a4d69
.word 0x3ee735fb
.word 0xbcbc8fae
.word 0x3c2a4d69
.word 0x3f16ff2d
.word 0xbfcf41c7
.word 0x3f747e44
.word 0x3f16ff2d
.word 0xbfcf41c7
.word 0x3f747e44
.word 0x3f16ff2d
.word 0xbfcf41c7
.word 0x3f747e44
.word 0x3f16ff2d
.word 0xbfcf41c7
.word 0x3f747e44
.word 0x3f16ff2d
.word 0xbfcf41c7
.word 0x3f747e44
.word 0x3f706b07
.word 0xbe70af1d
.word 0x3e6208cc
.word 0x3f706b07
.word 0xbe70af1d
.word 0x3e6208cc
.word 0x3f706b07
.word 0xbe70af1d
.word 0x3e6208cc
.word 0x3f706b07
.word 0xbe70af1d
.word 0x3e6208cc
.word 0x3f706b07
.word 0xbe70af1d
.word 0x3e6208cc
.word 0x3cc94386
.word 0xc221ca3a
.word 0x3f7e64e9
.word 0x3cc94386
.word 0xc221ca3a
.word 0x3f7e64e9
.word 0x3cc94386
.word 0xc221ca3a
.word 0x3f7e64e9
.word 0x3cc94386
.word 0xc221ca3a
.word 0x3f7e64e9
.word 0x3cc94386
.word 0xc221ca3a
.word 0x3f7e64e9
.word 0x3eb5500d
.word 0xbfcdcb3f
.word 0x3f11c10e
.word 0x3eb5500d
.word 0xbfcdcb3f
.word 0x3f11c10e
.word 0x3eb5500d
.word 0xbfcdcb3f
.word 0x3f11c10e
.word 0x3eb5500d
.word 0xbfcdcb3f
.word 0x3f11c10e
.word 0x3eb5500d
.word 0xbfcdcb3f
.word 0x3f11c10e
.word 0x3ea7d72f
.word 0xbe39eb29
.word 0x3d73c95d
.word 0x3ea7d72f
.word 0xbe39eb29
.word 0x3d73c95d
.word 0x3ea7d72f
.word 0xbe39eb29
.word 0x3d73c95d
.word 0x3ea7d72f
.word 0xbe39eb29
.word 0x3d73c95d
.word 0x3ea7d72f
.word 0xbe39eb29
.word 0x3d73c95d
.word 0x3f562e7b
.word 0xbf68625c
.word 0x3f426c6b
.word 0x3f562e7b
.word 0xbf68625c
.word 0x3f426c6b
.word 0x3f562e7b
.word 0xbf68625c
.word 0x3f426c6b
.word 0x3f562e7b
.word 0xbf68625c
.word 0x3f426c6b
.word 0x3f562e7b
.word 0xbf68625c
.word 0x3f426c6b
.word 0x3e8909b8
.word 0xbf86e551
.word 0x3e906bb0
.word 0x3e8909b8
.word 0xbf86e551
.word 0x3e906bb0
.word 0x3e8909b8
.word 0xbf86e551
.word 0x3e906bb0
.word 0x3e8909b8
.word 0xbf86e551
.word 0x3e906bb0
.word 0x3e8909b8
.word 0xbf86e551
.word 0x3e906bb0
.word 0x3f082eba
.word 0xbfac7d22
.word 0x3f3783ed
.word 0x3f082eba
.word 0xbfac7d22
.word 0x3f3783ed
.word 0x3f082eba
.word 0xbfac7d22
.word 0x3f3783ed
.word 0x3f082eba
.word 0xbfac7d22
.word 0x3f3783ed
.word 0x3f082eba
.word 0xbfac7d22
.word 0x3f3783ed
.word 0x3f22c04e
.word 0xbf8a8d8a
.word 0x3f302b4c
.word 0x3f22c04e
.word 0xbf8a8d8a
.word 0x3f302b4c
.word 0x3f22c04e
.word 0xbf8a8d8a
.word 0x3f302b4c
.word 0x3f22c04e
.word 0xbf8a8d8a
.word 0x3f302b4c
.word 0x3f22c04e
.word 0xbf8a8d8a
.word 0x3f302b4c
.word 0x3f19536d
.word 0xbd349615
.word 0x3cd85119
.word 0x3f19536d
.word 0xbd349615
.word 0x3cd85119
.word 0x3f19536d
.word 0xbd349615
.word 0x3cd85119
.word 0x3f19536d
.word 0xbd349615
.word 0x3cd85119
.word 0x3f19536d
.word 0xbd349615
.word 0x3cd85119
.word 0x3f44ffc1
.word 0xbf9953eb
.word 0x3f6bfadd
.word 0x3f44ffc1
.word 0xbf9953eb
.word 0x3f6bfadd
.word 0x3f44ffc1
.word 0xbf9953eb
.word 0x3f6bfadd
.word 0x3f44ffc1
.word 0xbf9953eb
.word 0x3f6bfadd
.word 0x3f44ffc1
.word 0xbf9953eb
.word 0x3f6bfadd
.word 0x3f4c89cb
.word 0xbf9c35f6
.word 0x3f799e2a
.word 0x3f4c89cb
.word 0xbf9c35f6
.word 0x3f799e2a
.word 0x3f4c89cb
.word 0xbf9c35f6
.word 0x3f799e2a
.word 0x3f4c89cb
.word 0xbf9c35f6
.word 0x3f799e2a
.word 0x3f4c89cb
.word 0xbf9c35f6
.word 0x3f799e2a
.word 0x3e8a9973
.word 0xc045d4da
.word 0x3f5636a6
.word 0x3e8a9973
.word 0xc045d4da
.word 0x3f5636a6
.word 0x3e8a9973
.word 0xc045d4da
.word 0x3f5636a6
.word 0x3e8a9973
.word 0xc045d4da
.word 0x3f5636a6
.word 0x3e8a9973
.word 0xc045d4da
.word 0x3f5636a6
.word 0x3f357a6d
.word 0xbeeb1dbe
.word 0x3ea6ac78
.word 0x3f357a6d
.word 0xbeeb1dbe
.word 0x3ea6ac78
.word 0x3f357a6d
.word 0xbeeb1dbe
.word 0x3ea6ac78
.word 0x3f357a6d
.word 0xbeeb1dbe
.word 0x3ea6ac78
.word 0x3f357a6d
.word 0xbeeb1dbe
.word 0x3ea6ac78
.word 0x3f61d06f
.word 0xbec060e2
.word 0x3ea9b1c9
.word 0x3f61d06f
.word 0xbec060e2
.word 0x3ea9b1c9
.word 0x3f61d06f
.word 0xbec060e2
.word 0x3ea9b1c9
.word 0x3f61d06f
.word 0xbec060e2
.word 0x3ea9b1c9
.word 0x3f61d06f
.word 0xbec060e2
.word 0x3ea9b1c9
.word 0x3f073c96
.word 0xbdd3a845
.word 0x3d5f9fa9
.word 0x3f073c96
.word 0xbdd3a845
.word 0x3d5f9fa9
.word 0x3f073c96
.word 0xbdd3a845
.word 0x3d5f9fa9
.word 0x3f073c96
.word 0xbdd3a845
.word 0x3d5f9fa9
.word 0x3f073c96
.word 0xbdd3a845
.word 0x3d5f9fa9
.word 0x3e9fe3ea
.word 0xbf85b292
.word 0x3ea701e2
.word 0x3e9fe3ea
.word 0xbf85b292
.word 0x3ea701e2
.word 0x3e9fe3ea
.word 0xbf85b292
.word 0x3ea701e2
.word 0x3e9fe3ea
.word 0xbf85b292
.word 0x3ea701e2
.word 0x3e9fe3ea
.word 0xbf85b292
.word 0x3ea701e2
.word 0x3f218b4f
.word 0xbdc9685d
.word 0x3d7e3079
.word 0x3f218b4f
.word 0xbdc9685d
.word 0x3d7e3079
.word 0x3f218b4f
.word 0xbdc9685d
.word 0x3d7e3079
.word 0x3f218b4f
.word 0xbdc9685d
.word 0x3d7e3079
.word 0x3f218b4f
.word 0xbdc9685d
.word 0x3d7e3079
.word 0x3f77c896
.word 0xbd9fb596
.word 0x3d9a9558
.word 0x3f77c896
.word 0xbd9fb596
.word 0x3d9a9558
.word 0x3f77c896
.word 0xbd9fb596
.word 0x3d9a9558
.word 0x3f77c896
.word 0xbd9fb596
.word 0x3d9a9558
.word 0x3f77c896
.word 0xbd9fb596
.word 0x3d9a9558
.word 0x3f43cc0b
.word 0xbf2d5eaa
.word 0x3f04994b
.word 0x3f43cc0b
.word 0xbf2d5eaa
.word 0x3f04994b
.word 0x3f43cc0b
.word 0xbf2d5eaa
.word 0x3f04994b
.word 0x3f43cc0b
.word 0xbf2d5eaa
.word 0x3f04994b
.word 0x3f43cc0b
.word 0xbf2d5eaa
.word 0x3f04994b
.word 0x3f56a57a
.word 0xbf59ad71
.word 0x3f3683b2
.word 0x3f56a57a
.word 0xbf59ad71
.word 0x3f3683b2
.word 0x3f56a57a
.word 0xbf59ad71
.word 0x3f3683b2
.word 0x3f56a57a
.word 0xbf59ad71
.word 0x3f3683b2
.word 0x3f56a57a
.word 0xbf59ad71
.word 0x3f3683b2
.word 0x3f3ef575
.word 0xbf77fb3e
.word 0x3f38fa3d
.word 0x3f3ef575
.word 0xbf77fb3e
.word 0x3f38fa3d
.word 0x3f3ef575
.word 0xbf77fb3e
.word 0x3f38fa3d
.word 0x3f3ef575
.word 0xbf77fb3e
.word 0x3f38fa3d
.word 0x3f3ef575
.word 0xbf77fb3e
.word 0x3f38fa3d
.word 0x3df50ed1
.word 0xc0e2c031
.word 0x3f590f0f
.word 0x3df50ed1
.word 0xc0e2c031
.word 0x3f590f0f
.word 0x3df50ed1
.word 0xc0e2c031
.word 0x3f590f0f
.word 0x3df50ed1
.word 0xc0e2c031
.word 0x3f590f0f
.word 0x3df50ed1
.word 0xc0e2c031
.word 0x3f590f0f
.word 0x3f2017fa
.word 0xbf7b7cca
.word 0x3f1d458d
.word 0x3f2017fa
.word 0xbf7b7cca
.word 0x3f1d458d
.word 0x3f2017fa
.word 0xbf7b7cca
.word 0x3f1d458d
.word 0x3f2017fa
.word 0xbf7b7cca
.word 0x3f1d458d
.word 0x3f2017fa
.word 0xbf7b7cca
.word 0x3f1d458d
.word 0x3f586755
.word 0xbf7ead60
.word 0x3f574916
.word 0x3f586755
.word 0xbf7ead60
.word 0x3f574916
.word 0x3f586755
.word 0xbf7ead60
.word 0x3f574916
.word 0x3f586755
.word 0xbf7ead60
.word 0x3f574916
.word 0x3f586755
.word 0xbf7ead60
.word 0x3f574916
.word 0x3f08d02c
.word 0xbfd79e50
.word 0x3f6676e2
.word 0x3f08d02c
.word 0xbfd79e50
.word 0x3f6676e2
.word 0x3f08d02c
.word 0xbfd79e50
.word 0x3f6676e2
.word 0x3f08d02c
.word 0xbfd79e50
.word 0x3f6676e2
.word 0x3f08d02c
.word 0xbfd79e50
.word 0x3f6676e2
.word 0x3ec2d56f
.word 0xbfc02fa3
.word 0x3f124454
.word 0x3ec2d56f
.word 0xbfc02fa3
.word 0x3f124454
.word 0x3ec2d56f
.word 0xbfc02fa3
.word 0x3f124454
.word 0x3ec2d56f
.word 0xbfc02fa3
.word 0x3f124454
.word 0x3ec2d56f
.word 0xbfc02fa3
.word 0x3f124454
.word 0x3f07a1da
.word 0xbe5508cc
.word 0x3de1bca8
.word 0x3f07a1da
.word 0xbe5508cc
.word 0x3de1bca8
.word 0x3f07a1da
.word 0xbe5508cc
.word 0x3de1bca8
.word 0x3f07a1da
.word 0xbe5508cc
.word 0x3de1bca8
.word 0x3f07a1da
.word 0xbe5508cc
.word 0x3de1bca8
.word 0x3e75677f
.word 0xc08577c7
.word 0x3f7fe330
.word 0x3e75677f
.word 0xc08577c7
.word 0x3f7fe330
.word 0x3e75677f
.word 0xc08577c7
.word 0x3f7fe330
.word 0x3e75677f
.word 0xc08577c7
.word 0x3f7fe330
.word 0x3e75677f
.word 0xc08577c7
.word 0x3f7fe330
.word 0x3de2ccfd
.word 0xc095f8c4
.word 0x3f04ddb4
.word 0x3de2ccfd
.word 0xc095f8c4
.word 0x3f04ddb4
.word 0x3de2ccfd
.word 0xc095f8c4
.word 0x3f04ddb4
.word 0x3de2ccfd
.word 0xc095f8c4
.word 0x3f04ddb4
.word 0x3de2ccfd
.word 0xc095f8c4
.word 0x3f04ddb4
.word 0x3f4c2f05
.word 0xbf9a26c2
.word 0x3f75e666
.word 0x3f4c2f05
.word 0xbf9a26c2
.word 0x3f75e666
.word 0x3f4c2f05
.word 0xbf9a26c2
.word 0x3f75e666
.word 0x3f4c2f05
.word 0xbf9a26c2
.word 0x3f75e666
.word 0x3f4c2f05
.word 0xbf9a26c2
.word 0x3f75e666
.word 0x3f672b16
.word 0xbf890c5e
.word 0x3f778275
.word 0x3f672b16
.word 0xbf890c5e
.word 0x3f778275
.word 0x3f672b16
.word 0xbf890c5e
.word 0x3f778275
.word 0x3f672b16
.word 0xbf890c5e
.word 0x3f778275
.word 0x3f672b16
.word 0xbf890c5e
.word 0x3f778275
.word 0x3e8509be
.word 0xc014e3a2
.word 0x3f1abfdc
.word 0x3e8509be
.word 0xc014e3a2
.word 0x3f1abfdc
.word 0x3e8509be
.word 0xc014e3a2
.word 0x3f1abfdc
.word 0x3e8509be
.word 0xc014e3a2
.word 0x3f1abfdc
.word 0x3e8509be
.word 0xc014e3a2
.word 0x3f1abfdc
.word 0x3ed09338
.word 0xbf8615f0
.word 0x3eda7dde
.word 0x3ed09338
.word 0xbf8615f0
.word 0x3eda7dde
.word 0x3ed09338
.word 0xbf8615f0
.word 0x3eda7dde
.word 0x3ed09338
.word 0xbf8615f0
.word 0x3eda7dde
.word 0x3ed09338
.word 0xbf8615f0
.word 0x3eda7dde
.word 0x3e17fc6c
.word 0xc0500e7c
.word 0x3ef70b64
.word 0x3e17fc6c
.word 0xc0500e7c
.word 0x3ef70b64
.word 0x3e17fc6c
.word 0xc0500e7c
.word 0x3ef70b64
.word 0x3e17fc6c
.word 0xc0500e7c
.word 0x3ef70b64
.word 0x3e17fc6c
.word 0xc0500e7c
.word 0x3ef70b64
.word 0x3e483051
.word 0xc0397d80
.word 0x3f110d0e
.word 0x3e483051
.word 0xc0397d80
.word 0x3f110d0e
.word 0x3e483051
.word 0xc0397d80
.word 0x3f110d0e
.word 0x3e483051
.word 0xc0397d80
.word 0x3f110d0e
.word 0x3e483051
.word 0xc0397d80
.word 0x3f110d0e
.word 0x3e2cf3fc
.word 0xc0056c43
.word 0x3eb447cd
.word 0x3e2cf3fc
.word 0xc0056c43
.word 0x3eb447cd
.word 0x3e2cf3fc
.word 0xc0056c43
.word 0x3eb447cd
.word 0x3e2cf3fc
.word 0xc0056c43
.word 0x3eb447cd
.word 0x3e2cf3fc
.word 0xc0056c43
.word 0x3eb447cd
.word 0x3f1d3f9f
.word 0xbfb3f467
.word 0x3f5d1339
.word 0x3f1d3f9f
.word 0xbfb3f467
.word 0x3f5d1339
.word 0x3f1d3f9f
.word 0xbfb3f467
.word 0x3f5d1339
.word 0x3f1d3f9f
.word 0xbfb3f467
.word 0x3f5d1339
.word 0x3f1d3f9f
.word 0xbfb3f467
.word 0x3f5d1339
.word 0x3ec5c198
.word 0xbfd7d94c
.word 0x3f26bd72
.word 0x3ec5c198
.word 0xbfd7d94c
.word 0x3f26bd72
.word 0x3ec5c198
.word 0xbfd7d94c
.word 0x3f26bd72
.word 0x3ec5c198
.word 0xbfd7d94c
.word 0x3f26bd72
.word 0x3ec5c198
.word 0xbfd7d94c
.word 0x3f26bd72
.word 0x3f43d5ce
.word 0xbf5f1f3c
.word 0x3f2aaf23
.word 0x3f43d5ce
.word 0xbf5f1f3c
.word 0x3f2aaf23
.word 0x3f43d5ce
.word 0xbf5f1f3c
.word 0x3f2aaf23
.word 0x3f43d5ce
.word 0xbf5f1f3c
.word 0x3f2aaf23
.word 0x3f43d5ce
.word 0xbf5f1f3c
.word 0x3f2aaf23
.word 0x3ec01a8b
.word 0xbfdc47d2
.word 0x3f254cb5
.word 0x3ec01a8b
.word 0xbfdc47d2
.word 0x3f254cb5
.word 0x3ec01a8b
.word 0xbfdc47d2
.word 0x3f254cb5
.word 0x3ec01a8b
.word 0xbfdc47d2
.word 0x3f254cb5
.word 0x3ec01a8b
.word 0xbfdc47d2
.word 0x3f254cb5
.word 0x3e37b5a2
.word 0xc0997057
.word 0x3f5c3858
.word 0x3e37b5a2
.word 0xc0997057
.word 0x3f5c3858
.word 0x3e37b5a2
.word 0xc0997057
.word 0x3f5c3858
.word 0x3e37b5a2
.word 0xc0997057
.word 0x3f5c3858
.word 0x3e37b5a2
.word 0xc0997057
.word 0x3f5c3858
.word 0x3cdfa990
.word 0xc1444831
.word 0x3eab7ce5
.word 0x3cdfa990
.word 0xc1444831
.word 0x3eab7ce5
.word 0x3cdfa990
.word 0xc1444831
.word 0x3eab7ce5
.word 0x3cdfa990
.word 0xc1444831
.word 0x3eab7ce5
.word 0x3cdfa990
.word 0xc1444831
.word 0x3eab7ce5
.word 0x3f46e3b4
.word 0xbf91a165
.word 0x3f6248ba
.word 0x3f46e3b4
.word 0xbf91a165
.word 0x3f6248ba
.word 0x3f46e3b4
.word 0xbf91a165
.word 0x3f6248ba
.word 0x3f46e3b4
.word 0xbf91a165
.word 0x3f6248ba
.word 0x3f46e3b4
.word 0xbf91a165
.word 0x3f6248ba
.word 0x3d44702b
.word 0xc0d4c683
.word 0x3ea34537
.word 0x3d44702b
.word 0xc0d4c683
.word 0x3ea34537
.word 0x3d44702b
.word 0xc0d4c683
.word 0x3ea34537
.word 0x3d44702b
.word 0xc0d4c683
.word 0x3ea34537
.word 0x3d44702b
.word 0xc0d4c683
.word 0x3ea34537
.word 0x3f724364
.word 0xbf65b8bb
.word 0x3f59651a
.word 0x3f724364
.word 0xbf65b8bb
.word 0x3f59651a
.word 0x3f724364
.word 0xbf65b8bb
.word 0x3f59651a
.word 0x3f724364
.word 0xbf65b8bb
.word 0x3f59651a
.word 0x3f724364
.word 0xbf65b8bb
.word 0x3f59651a
.word 0x3f78753e
.word 0xbe91120c
.word 0x3e8ccbed
.word 0x3f78753e
.word 0xbe91120c
.word 0x3e8ccbed
.word 0x3f78753e
.word 0xbe91120c
.word 0x3e8ccbed
.word 0x3f78753e
.word 0xbe91120c
.word 0x3e8ccbed
.word 0x3f78753e
.word 0xbe91120c
.word 0x3e8ccbed
.word 0x3f2d3d1c
.word 0xbe99fec2
.word 0x3e506bd9
.word 0x3f2d3d1c
.word 0xbe99fec2
.word 0x3e506bd9
.word 0x3f2d3d1c
.word 0xbe99fec2
.word 0x3e506bd9
.word 0x3f2d3d1c
.word 0xbe99fec2
.word 0x3e506bd9
.word 0x3f2d3d1c
.word 0xbe99fec2
.word 0x3e506bd9
.word 0x3dfc0de1
.word 0xc087150e
.word 0x3f05000d
.word 0x3dfc0de1
.word 0xc087150e
.word 0x3f05000d
.word 0x3dfc0de1
.word 0xc087150e
.word 0x3f05000d
.word 0x3dfc0de1
.word 0xc087150e
.word 0x3f05000d
.word 0x3dfc0de1
.word 0xc087150e
.word 0x3f05000d
.word 0x3ecfe29b
.word 0xbff00969
.word 0x3f42ec16
.word 0x3ecfe29b
.word 0xbff00969
.word 0x3f42ec16
.word 0x3ecfe29b
.word 0xbff00969
.word 0x3f42ec16
.word 0x3ecfe29b
.word 0xbff00969
.word 0x3f42ec16
.word 0x3ecfe29b
.word 0xbff00969
.word 0x3f42ec16
.word 0x3f68a88a
.word 0xbf76881b
.word 0x3f600da7
.word 0x3f68a88a
.word 0xbf76881b
.word 0x3f600da7
.word 0x3f68a88a
.word 0xbf76881b
.word 0x3f600da7
.word 0x3f68a88a
.word 0xbf76881b
.word 0x3f600da7
.word 0x3f68a88a
.word 0xbf76881b
.word 0x3f600da7
.word 0x3f6a2d7d
.word 0xbeb9d9b8
.word 0x3eaa0209
.word 0x3f6a2d7d
.word 0xbeb9d9b8
.word 0x3eaa0209
.word 0x3f6a2d7d
.word 0xbeb9d9b8
.word 0x3eaa0209
.word 0x3f6a2d7d
.word 0xbeb9d9b8
.word 0x3eaa0209
.word 0x3f6a2d7d
.word 0xbeb9d9b8
.word 0x3eaa0209
.word 0x3e92cad3
.word 0xbf9a053e
.word 0x3eb0a209
.word 0x3e92cad3
.word 0xbf9a053e
.word 0x3eb0a209
.word 0x3e92cad3
.word 0xbf9a053e
.word 0x3eb0a209
.word 0x3e92cad3
.word 0xbf9a053e
.word 0x3eb0a209
.word 0x3e92cad3
.word 0xbf9a053e
.word 0x3eb0a209
.word 0x3e86c853
.word 0xc047858a
.word 0x3f52180f
.word 0x3e86c853
.word 0xc047858a
.word 0x3f52180f
.word 0x3e86c853
.word 0xc047858a
.word 0x3f52180f
.word 0x3e86c853
.word 0xc047858a
.word 0x3f52180f
.word 0x3e86c853
.word 0xc047858a
.word 0x3f52180f
.word 0x3f43fd07
.word 0xbf524206
.word 0x3f20f81c
.word 0x3f43fd07
.word 0xbf524206
.word 0x3f20f81c
.word 0x3f43fd07
.word 0xbf524206
.word 0x3f20f81c
.word 0x3f43fd07
.word 0xbf524206
.word 0x3f20f81c
.word 0x3f43fd07
.word 0xbf524206
.word 0x3f20f81c
.word 0x3ef74c56
.word 0xbfe58e14
.word 0x3f5dc089
.word 0x3ef74c56
.word 0xbfe58e14
.word 0x3f5dc089
.word 0x3ef74c56
.word 0xbfe58e14
.word 0x3f5dc089
.word 0x3ef74c56
.word 0xbfe58e14
.word 0x3f5dc089
.word 0x3ef74c56
.word 0xbfe58e14
.word 0x3f5dc089
.word 0x3f3eed63
.word 0xbeab3a73
.word 0x3e7f6851
.word 0x3f3eed63
.word 0xbeab3a73
.word 0x3e7f6851
.word 0x3f3eed63
.word 0xbeab3a73
.word 0x3e7f6851
.word 0x3f3eed63
.word 0xbeab3a73
.word 0x3e7f6851
.word 0x3f3eed63
.word 0xbeab3a73
.word 0x3e7f6851
.word 0x3f3c9bdc
.word 0xbf1bc793
.word 0x3ee58ad0
.word 0x3f3c9bdc
.word 0xbf1bc793
.word 0x3ee58ad0
.word 0x3f3c9bdc
.word 0xbf1bc793
.word 0x3ee58ad0
.word 0x3f3c9bdc
.word 0xbf1bc793
.word 0x3ee58ad0
.word 0x3f3c9bdc
.word 0xbf1bc793
.word 0x3ee58ad0
.word 0x3ee3e558
.word 0xbf5a0c5b
.word 0x3ec21c4d
.word 0x3ee3e558
.word 0xbf5a0c5b
.word 0x3ec21c4d
.word 0x3ee3e558
.word 0xbf5a0c5b
.word 0x3ec21c4d
.word 0x3ee3e558
.word 0xbf5a0c5b
.word 0x3ec21c4d
.word 0x3ee3e558
.word 0xbf5a0c5b
.word 0x3ec21c4d
.word 0x3efd0200
.word 0xbe399fce
.word 0x3db77463
.word 0x3efd0200
.word 0xbe399fce
.word 0x3db77463
.word 0x3efd0200
.word 0xbe399fce
.word 0x3db77463
.word 0x3efd0200
.word 0xbe399fce
.word 0x3db77463
.word 0x3efd0200
.word 0xbe399fce
.word 0x3db77463
.word 0x3f5950e8
.word 0xbede599a
.word 0x3ebcc039
.word 0x3f5950e8
.word 0xbede599a
.word 0x3ebcc039
.word 0x3f5950e8
.word 0xbede599a
.word 0x3ebcc039
.word 0x3f5950e8
.word 0xbede599a
.word 0x3ebcc039
.word 0x3f5950e8
.word 0xbede599a
.word 0x3ebcc039
.word 0x3f71ba49
.word 0xbea42291
.word 0x3e9afbfb
.word 0x3f71ba49
.word 0xbea42291
.word 0x3e9afbfb
.word 0x3f71ba49
.word 0xbea42291
.word 0x3e9afbfb
.word 0x3f71ba49
.word 0xbea42291
.word 0x3e9afbfb
.word 0x3f71ba49
.word 0xbea42291
.word 0x3e9afbfb
.word 0x3d7bbf90
.word 0xc122e931
.word 0x3f20348b
.word 0x3d7bbf90
.word 0xc122e931
.word 0x3f20348b
.word 0x3d7bbf90
.word 0xc122e931
.word 0x3f20348b
.word 0x3d7bbf90
.word 0xc122e931
.word 0x3f20348b
.word 0x3d7bbf90
.word 0xc122e931
.word 0x3f20348b
.word 0x3eccb046
.word 0xbfa36c63
.word 0x3f02aae6
.word 0x3eccb046
.word 0xbfa36c63
.word 0x3f02aae6
.word 0x3eccb046
.word 0xbfa36c63
.word 0x3f02aae6
.word 0x3eccb046
.word 0xbfa36c63
.word 0x3f02aae6
.word 0x3eccb046
.word 0xbfa36c63
.word 0x3f02aae6
.word 0x3f117e0a
.word 0xbf9a5fa6
.word 0x3f2f785d
.word 0x3f117e0a
.word 0xbf9a5fa6
.word 0x3f2f785d
.word 0x3f117e0a
.word 0xbf9a5fa6
.word 0x3f2f785d
.word 0x3f117e0a
.word 0xbf9a5fa6
.word 0x3f2f785d
.word 0x3f117e0a
.word 0xbf9a5fa6
.word 0x3f2f785d
.word 0x3df8eb79
.word 0xc0e3ea08
.word 0x3f5d9c5c
.word 0x3df8eb79
.word 0xc0e3ea08
.word 0x3f5d9c5c
.word 0x3df8eb79
.word 0xc0e3ea08
.word 0x3f5d9c5c
.word 0x3df8eb79
.word 0xc0e3ea08
.word 0x3f5d9c5c
.word 0x3df8eb79
.word 0xc0e3ea08
.word 0x3f5d9c5c
.word 0x3ed97815
.word 0xbf1b4c10
.word 0x3e83ec52
.word 0x3ed97815
.word 0xbf1b4c10
.word 0x3e83ec52
.word 0x3ed97815
.word 0xbf1b4c10
.word 0x3e83ec52
.word 0x3ed97815
.word 0xbf1b4c10
.word 0x3e83ec52
.word 0x3ed97815
.word 0xbf1b4c10
.word 0x3e83ec52
.word 0x3f6d9126
.word 0xbf81fdfa
.word 0x3f7143aa
.word 0x3f6d9126
.word 0xbf81fdfa
.word 0x3f7143aa
.word 0x3f6d9126
.word 0xbf81fdfa
.word 0x3f7143aa
.word 0x3f6d9126
.word 0xbf81fdfa
.word 0x3f7143aa
.word 0x3f6d9126
.word 0xbf81fdfa
.word 0x3f7143aa
.word 0x3f644c0a
.word 0xbf3235c1
.word 0x3f1eeccf
.word 0x3f644c0a
.word 0xbf3235c1
.word 0x3f1eeccf
.word 0x3f644c0a
.word 0xbf3235c1
.word 0x3f1eeccf
.word 0x3f644c0a
.word 0xbf3235c1
.word 0x3f1eeccf
.word 0x3f644c0a
.word 0xbf3235c1
.word 0x3f1eeccf
.word 0x3ec15420
.word 0xc0221c32
.word 0x3f74d910
.word 0x3ec15420
.word 0xc0221c32
.word 0x3f74d910
.word 0x3ec15420
.word 0xc0221c32
.word 0x3f74d910
.word 0x3ec15420
.word 0xc0221c32
.word 0x3f74d910
.word 0x3ec15420
.word 0xc0221c32
.word 0x3f74d910
.word 0x3f160846
.word 0xbfb7341d
.word 0x3f56bcea
.word 0x3f160846
.word 0xbfb7341d
.word 0x3f56bcea
.word 0x3f160846
.word 0xbfb7341d
.word 0x3f56bcea
.word 0x3f160846
.word 0xbfb7341d
.word 0x3f56bcea
.word 0x3f160846
.word 0xbfb7341d
.word 0x3f56bcea
.word 0x3f59ab4b
.word 0xbeea797d
.word 0x3ec75ddf
.word 0x3f59ab4b
.word 0xbeea797d
.word 0x3ec75ddf
.word 0x3f59ab4b
.word 0xbeea797d
.word 0x3ec75ddf
.word 0x3f59ab4b
.word 0xbeea797d
.word 0x3ec75ddf
.word 0x3f59ab4b
.word 0xbeea797d
.word 0x3ec75ddf
.word 0x3f351f2f
.word 0xbded5e89
.word 0x3da7f0c1
.word 0x3f351f2f
.word 0xbded5e89
.word 0x3da7f0c1
.word 0x3f351f2f
.word 0xbded5e89
.word 0x3da7f0c1
.word 0x3f351f2f
.word 0xbded5e89
.word 0x3da7f0c1
.word 0x3f351f2f
.word 0xbded5e89
.word 0x3da7f0c1
.word 0x3e933a9f
.word 0xc0409a13
.word 0x3f5d8928
.word 0x3e933a9f
.word 0xc0409a13
.word 0x3f5d8928
.word 0x3e933a9f
.word 0xc0409a13
.word 0x3f5d8928
.word 0x3e933a9f
.word 0xc0409a13
.word 0x3f5d8928
.word 0x3e933a9f
.word 0xc0409a13
.word 0x3f5d8928
.word 0x3eb561e7
.word 0xbe0a094d
.word 0x3d439abb
.word 0x3eb561e7
.word 0xbe0a094d
.word 0x3d439abb
.word 0x3eb561e7
.word 0xbe0a094d
.word 0x3d439abb
.word 0x3eb561e7
.word 0xbe0a094d
.word 0x3d439abb
.word 0x3eb561e7
.word 0xbe0a094d
.word 0x3d439abb
.word 0x3e21ba54
.word 0xc09e3163
.word 0x3f47e067
.word 0x3e21ba54
.word 0xc09e3163
.word 0x3f47e067
.word 0x3e21ba54
.word 0xc09e3163
.word 0x3f47e067
.word 0x3e21ba54
.word 0xc09e3163
.word 0x3f47e067
.word 0x3e21ba54
.word 0xc09e3163
.word 0x3f47e067
.word 0x3e98f600
.word 0xc04bc023
.word 0x3f737bc0
.word 0x3e98f600
.word 0xc04bc023
.word 0x3f737bc0
.word 0x3e98f600
.word 0xc04bc023
.word 0x3f737bc0
.word 0x3e98f600
.word 0xc04bc023
.word 0x3f737bc0
.word 0x3e98f600
.word 0xc04bc023
.word 0x3f737bc0
.word 0x3cae9ab7
.word 0xbda008fb
.word 0x3ada4da6
.word 0x3cae9ab7
.word 0xbda008fb
.word 0x3ada4da6
.word 0x3cae9ab7
.word 0xbda008fb
.word 0x3ada4da6
.word 0x3cae9ab7
.word 0xbda008fb
.word 0x3ada4da6
.word 0x3cae9ab7
.word 0xbda008fb
.word 0x3ada4da6
.word 0x3f797556
.word 0xbe91c107
.word 0x3e8e078e
.word 0x3f797556
.word 0xbe91c107
.word 0x3e8e078e
.word 0x3f797556
.word 0xbe91c107
.word 0x3e8e078e
.word 0x3f797556
.word 0xbe91c107
.word 0x3e8e078e
.word 0x3f797556
.word 0xbe91c107
.word 0x3e8e078e
.word 0x3e553f5a
.word 0xbfcec439
.word 0x3eac3c6f
.word 0x3e553f5a
.word 0xbfcec439
.word 0x3eac3c6f
.word 0x3e553f5a
.word 0xbfcec439
.word 0x3eac3c6f
.word 0x3e553f5a
.word 0xbfcec439
.word 0x3eac3c6f
.word 0x3e553f5a
.word 0xbfcec439
.word 0x3eac3c6f
.word 0x3f451d75
.word 0xbe6fec43
.word 0x3e38bc6b
.word 0x3f451d75
.word 0xbe6fec43
.word 0x3e38bc6b
.word 0x3f451d75
.word 0xbe6fec43
.word 0x3e38bc6b
.word 0x3f451d75
.word 0xbe6fec43
.word 0x3e38bc6b
.word 0x3f451d75
.word 0xbe6fec43
.word 0x3e38bc6b
.word 0x3e40b175
.word 0xc09e6af5
.word 0x3f6e7c12
.word 0x3e40b175
.word 0xc09e6af5
.word 0x3f6e7c12
.word 0x3e40b175
.word 0xc09e6af5
.word 0x3f6e7c12
.word 0x3e40b175
.word 0xc09e6af5
.word 0x3f6e7c12
.word 0x3e40b175
.word 0xc09e6af5
.word 0x3f6e7c12
.word 0x3f58b267
.word 0xbefa80b6
.word 0x3ed40b2c
.word 0x3f58b267
.word 0xbefa80b6
.word 0x3ed40b2c
.word 0x3f58b267
.word 0xbefa80b6
.word 0x3ed40b2c
.word 0x3f58b267
.word 0xbefa80b6
.word 0x3ed40b2c
.word 0x3f58b267
.word 0xbefa80b6
.word 0x3ed40b2c
.word 0x3f0097ea
.word 0xbfaa8a69
.word 0x3f2b54d1
.word 0x3f0097ea
.word 0xbfaa8a69
.word 0x3f2b54d1
.word 0x3f0097ea
.word 0xbfaa8a69
.word 0x3f2b54d1
.word 0x3f0097ea
.word 0xbfaa8a69
.word 0x3f2b54d1
.word 0x3f0097ea
.word 0xbfaa8a69
.word 0x3f2b54d1
.word 0x3f0586c0
.word 0xbf5d4ee9
.word 0x3ee6dcf9
.word 0x3f0586c0
.word 0xbf5d4ee9
.word 0x3ee6dcf9
.word 0x3f0586c0
.word 0xbf5d4ee9
.word 0x3ee6dcf9
.word 0x3f0586c0
.word 0xbf5d4ee9
.word 0x3ee6dcf9
.word 0x3f0586c0
.word 0xbf5d4ee9
.word 0x3ee6dcf9
.word 0x3db6efb3
.word 0xc1199082
.word 0x3f5b790c
.word 0x3db6efb3
.word 0xc1199082
.word 0x3f5b790c
.word 0x3db6efb3
.word 0xc1199082
.word 0x3f5b790c
.word 0x3db6efb3
.word 0xc1199082
.word 0x3f5b790c
.word 0x3db6efb3
.word 0xc1199082
.word 0x3f5b790c
.word 0x3f36b10a
.word 0xbe9d50d7
.word 0x3e608889
.word 0x3f36b10a
.word 0xbe9d50d7
.word 0x3e608889
.word 0x3f36b10a
.word 0xbe9d50d7
.word 0x3e608889
.word 0x3f36b10a
.word 0xbe9d50d7
.word 0x3e608889
.word 0x3f36b10a
.word 0xbe9d50d7
.word 0x3e608889
.word 0x3e9c5a92
.word 0xbfedbc0c
.word 0x3f1132b3
.word 0x3e9c5a92
.word 0xbfedbc0c
.word 0x3f1132b3
.word 0x3e9c5a92
.word 0xbfedbc0c
.word 0x3f1132b3
.word 0x3e9c5a92
.word 0xbfedbc0c
.word 0x3f1132b3
.word 0x3e9c5a92
.word 0xbfedbc0c
.word 0x3f1132b3
.word 0x3f6f1711
.word 0xbe338208
.word 0x3e27a692
.word 0x3f6f1711
.word 0xbe338208
.word 0x3e27a692
.word 0x3f6f1711
.word 0xbe338208
.word 0x3e27a692
.word 0x3f6f1711
.word 0xbe338208
.word 0x3e27a692
.word 0x3f6f1711
.word 0xbe338208
.word 0x3e27a692
.word 0x3f341bf1
.word 0xbe776568
.word 0x3e2e0e4f
.word 0x3f341bf1
.word 0xbe776568
.word 0x3e2e0e4f
.word 0x3f341bf1
.word 0xbe776568
.word 0x3e2e0e4f
.word 0x3f341bf1
.word 0xbe776568
.word 0x3e2e0e4f
.word 0x3f341bf1
.word 0xbe776568
.word 0x3e2e0e4f
.word 0x3e17a729
.word 0xc0ad9ef5
.word 0x3f4db443
.word 0x3e17a729
.word 0xc0ad9ef5
.word 0x3f4db443
.word 0x3e17a729
.word 0xc0ad9ef5
.word 0x3f4db443
.word 0x3e17a729
.word 0xc0ad9ef5
.word 0x3f4db443
.word 0x3e17a729
.word 0xc0ad9ef5
.word 0x3f4db443
.word 0x3f1d51a1
.word 0xbf7d5645
.word 0x3f1baeb0
.word 0x3f1d51a1
.word 0xbf7d5645
.word 0x3f1baeb0
.word 0x3f1d51a1
.word 0xbf7d5645
.word 0x3f1baeb0
.word 0x3f1d51a1
.word 0xbf7d5645
.word 0x3f1baeb0
.word 0x3f1d51a1
.word 0xbf7d5645
.word 0x3f1baeb0
.word 0x3f04a392
.word 0xbe2e7bc2
.word 0x3db4ce9a
.word 0x3f04a392
.word 0xbe2e7bc2
.word 0x3db4ce9a
.word 0x3f04a392
.word 0xbe2e7bc2
.word 0x3db4ce9a
.word 0x3f04a392
.word 0xbe2e7bc2
.word 0x3db4ce9a
.word 0x3f04a392
.word 0xbe2e7bc2
.word 0x3db4ce9a
.word 0x3e956945
.word 0xbfa14fe0
.word 0x3ebc4ba6
.word 0x3e956945
.word 0xbfa14fe0
.word 0x3ebc4ba6
.word 0x3e956945
.word 0xbfa14fe0
.word 0x3ebc4ba6
.word 0x3e956945
.word 0xbfa14fe0
.word 0x3ebc4ba6
.word 0x3e956945
.word 0xbfa14fe0
.word 0x3ebc4ba6
.word 0x3f12802f
.word 0xbf3dd55d
.word 0x3ed9457a
.word 0x3f12802f
.word 0xbf3dd55d
.word 0x3ed9457a
.word 0x3f12802f
.word 0xbf3dd55d
.word 0x3ed9457a
.word 0x3f12802f
.word 0xbf3dd55d
.word 0x3ed9457a
.word 0x3f12802f
.word 0xbf3dd55d
.word 0x3ed9457a
.word 0x3f7c45c3
.word 0xbe664a0e
.word 0x3e62efa7
.word 0x3f7c45c3
.word 0xbe664a0e
.word 0x3e62efa7
.word 0x3f7c45c3
.word 0xbe664a0e
.word 0x3e62efa7
.word 0x3f7c45c3
.word 0xbe664a0e
.word 0x3e62efa7
.word 0x3f7c45c3
.word 0xbe664a0e
.word 0x3e62efa7
.word 0x3de57f69
.word 0xc081c30d
.word 0x3ee8a820
.word 0x3de57f69
.word 0xc081c30d
.word 0x3ee8a820
.word 0x3de57f69
.word 0xc081c30d
.word 0x3ee8a820
.word 0x3de57f69
.word 0xc081c30d
.word 0x3ee8a820
.word 0x3de57f69
.word 0xc081c30d
.word 0x3ee8a820
.word 0x3f0b5ce6
.word 0xbe1ced5e
.word 0x3daadba8
.word 0x3f0b5ce6
.word 0xbe1ced5e
.word 0x3daadba8
.word 0x3f0b5ce6
.word 0xbe1ced5e
.word 0x3daadba8
.word 0x3f0b5ce6
.word 0xbe1ced5e
.word 0x3daadba8
.word 0x3f0b5ce6
.word 0xbe1ced5e
.word 0x3daadba8
.word 0x3f76ac98
.word 0xbf469d74
.word 0x3f3f6135
.word 0x3f76ac98
.word 0xbf469d74
.word 0x3f3f6135
.word 0x3f76ac98
.word 0xbf469d74
.word 0x3f3f6135
.word 0x3f76ac98
.word 0xbf469d74
.word 0x3f3f6135
.word 0x3f76ac98
.word 0xbf469d74
.word 0x3f3f6135
.word 0x3e828d1b
.word 0xbfcd69f1
.word 0x3ed1820b
.word 0x3e828d1b
.word 0xbfcd69f1
.word 0x3ed1820b
.word 0x3e828d1b
.word 0xbfcd69f1
.word 0x3ed1820b
.word 0x3e828d1b
.word 0xbfcd69f1
.word 0x3ed1820b
.word 0x3e828d1b
.word 0xbfcd69f1
.word 0x3ed1820b
.word 0x3f09213a
.word 0xbf98aefc
.word 0x3f2392ec
.word 0x3f09213a
.word 0xbf98aefc
.word 0x3f2392ec
.word 0x3f09213a
.word 0xbf98aefc
.word 0x3f2392ec
.word 0x3f09213a
.word 0xbf98aefc
.word 0x3f2392ec
.word 0x3f09213a
.word 0xbf98aefc
.word 0x3f2392ec
.word 0x3f340376
.word 0xbf2b283b
.word 0x3ef0b534
.word 0x3f340376
.word 0xbf2b283b
.word 0x3ef0b534
.word 0x3f340376
.word 0xbf2b283b
.word 0x3ef0b534
.word 0x3f340376
.word 0xbf2b283b
.word 0x3ef0b534
.word 0x3f340376
.word 0xbf2b283b
.word 0x3ef0b534
.word 0x3eeed95c
.word 0xbfb62816
.word 0x3f29f3ee
.word 0x3eeed95c
.word 0xbfb62816
.word 0x3f29f3ee
.word 0x3eeed95c
.word 0xbfb62816
.word 0x3f29f3ee
.word 0x3eeed95c
.word 0xbfb62816
.word 0x3f29f3ee
.word 0x3eeed95c
.word 0xbfb62816
.word 0x3f29f3ee
.word 0x3e755a0c
.word 0xc03acb03
.word 0x3f3305fe
.word 0x3e755a0c
.word 0xc03acb03
.word 0x3f3305fe
.word 0x3e755a0c
.word 0xc03acb03
.word 0x3f3305fe
.word 0x3e755a0c
.word 0xc03acb03
.word 0x3f3305fe
.word 0x3e755a0c
.word 0xc03acb03
.word 0x3f3305fe
.word 0x3e835779
.word 0xc05c00a7
.word 0x3f61bf05
.word 0x3e835779
.word 0xc05c00a7
.word 0x3f61bf05
.word 0x3e835779
.word 0xc05c00a7
.word 0x3f61bf05
.word 0x3e835779
.word 0xc05c00a7
.word 0x3f61bf05
.word 0x3e835779
.word 0xc05c00a7
.word 0x3f61bf05
.word 0x3eb5d2bb
.word 0xbf8ec945
.word 0x3ecad3af
.word 0x3eb5d2bb
.word 0xbf8ec945
.word 0x3ecad3af
.word 0x3eb5d2bb
.word 0xbf8ec945
.word 0x3ecad3af
.word 0x3eb5d2bb
.word 0xbf8ec945
.word 0x3ecad3af
.word 0x3eb5d2bb
.word 0xbf8ec945
.word 0x3ecad3af
.word 0x3ec8af4c
.word 0xbfab90bc
.word 0x3f067e8e
.word 0x3ec8af4c
.word 0xbfab90bc
.word 0x3f067e8e
.word 0x3ec8af4c
.word 0xbfab90bc
.word 0x3f067e8e
.word 0x3ec8af4c
.word 0xbfab90bc
.word 0x3f067e8e
.word 0x3ec8af4c
.word 0xbfab90bc
.word 0x3f067e8e
.word 0x3c37167d
.word 0xc27d008a
.word 0x3f34f19d
.word 0x3c37167d
.word 0xc27d008a
.word 0x3f34f19d
.word 0x3c37167d
.word 0xc27d008a
.word 0x3f34f19d
.word 0x3c37167d
.word 0xc27d008a
.word 0x3f34f19d
.word 0x3c37167d
.word 0xc27d008a
.word 0x3f34f19d
.word 0x3f3b78c4
.word 0xbf93bcd8
.word 0x3f586147
.word 0x3f3b78c4
.word 0xbf93bcd8
.word 0x3f586147
.word 0x3f3b78c4
.word 0xbf93bcd8
.word 0x3f586147
.word 0x3f3b78c4
.word 0xbf93bcd8
.word 0x3f586147
.word 0x3f3b78c4
.word 0xbf93bcd8
.word 0x3f586147
.word 0x3e5f53b5
.word 0xc05d5d05
.word 0x3f411c6a
.word 0x3e5f53b5
.word 0xc05d5d05
.word 0x3f411c6a
.word 0x3e5f53b5
.word 0xc05d5d05
.word 0x3f411c6a
.word 0x3e5f53b5
.word 0xc05d5d05
.word 0x3f411c6a
.word 0x3e5f53b5
.word 0xc05d5d05
.word 0x3f411c6a
.word 0x3f39e90d
.word 0xbdb697e8
.word 0x3d849a01
.word 0x3f39e90d
.word 0xbdb697e8
.word 0x3d849a01
.word 0x3f39e90d
.word 0xbdb697e8
.word 0x3d849a01
.word 0x3f39e90d
.word 0xbdb697e8
.word 0x3d849a01
.word 0x3f39e90d
.word 0xbdb697e8
.word 0x3d849a01
.word 0x3f7c9eb5
.word 0xbef28771
.word 0x3eef53af
.word 0x3f7c9eb5
.word 0xbef28771
.word 0x3eef53af
.word 0x3f7c9eb5
.word 0xbef28771
.word 0x3eef53af
.word 0x3f7c9eb5
.word 0xbef28771
.word 0x3eef53af
.word 0x3f7c9eb5
.word 0xbef28771
.word 0x3eef53af
.word 0x3e5f8862
.word 0xbf4b1c67
.word 0x3e3159f3
.word 0x3e5f8862
.word 0xbf4b1c67
.word 0x3e3159f3
.word 0x3e5f8862
.word 0xbf4b1c67
.word 0x3e3159f3
.word 0x3e5f8862
.word 0xbf4b1c67
.word 0x3e3159f3
.word 0x3e5f8862
.word 0xbf4b1c67
.word 0x3e3159f3
.word 0x3f0e78e7
.word 0xbfa2954b
.word 0x3f34f731
.word 0x3f0e78e7
.word 0xbfa2954b
.word 0x3f34f731
.word 0x3f0e78e7
.word 0xbfa2954b
.word 0x3f34f731
.word 0x3f0e78e7
.word 0xbfa2954b
.word 0x3f34f731
.word 0x3f0e78e7
.word 0xbfa2954b
.word 0x3f34f731
.word 0x3f60cc14
.word 0xbedc9515
.word 0x3ec1b24a
.word 0x3f60cc14
.word 0xbedc9515
.word 0x3ec1b24a
.word 0x3f60cc14
.word 0xbedc9515
.word 0x3ec1b24a
.word 0x3f60cc14
.word 0xbedc9515
.word 0x3ec1b24a
.word 0x3f60cc14
.word 0xbedc9515
.word 0x3ec1b24a
.word 0x3f36ae98
.word 0xbf3ba55d
.word 0x3f05e78a
.word 0x3f36ae98
.word 0xbf3ba55d
.word 0x3f05e78a
.word 0x3f36ae98
.word 0xbf3ba55d
.word 0x3f05e78a
.word 0x3f36ae98
.word 0xbf3ba55d
.word 0x3f05e78a
.word 0x3f36ae98
.word 0xbf3ba55d
.word 0x3f05e78a
.word 0x3c80ce8a
.word 0xc2014bba
.word 0x3f021c5c
.word 0x3c80ce8a
.word 0xc2014bba
.word 0x3f021c5c
.word 0x3c80ce8a
.word 0xc2014bba
.word 0x3f021c5c
.word 0x3c80ce8a
.word 0xc2014bba
.word 0x3f021c5c
.word 0x3c80ce8a
.word 0xc2014bba
.word 0x3f021c5c
.word 0x3f15a255
.word 0xbf9518d9
.word 0x3f2e4c04
.word 0x3f15a255
.word 0xbf9518d9
.word 0x3f2e4c04
.word 0x3f15a255
.word 0xbf9518d9
.word 0x3f2e4c04
.word 0x3f15a255
.word 0xbf9518d9
.word 0x3f2e4c04
.word 0x3f15a255
.word 0xbf9518d9
.word 0x3f2e4c04
.word 0x3c9bcea6
.word 0xc1d3dd7a
.word 0x3f00f21f
.word 0x3c9bcea6
.word 0xc1d3dd7a
.word 0x3f00f21f
.word 0x3c9bcea6
.word 0xc1d3dd7a
.word 0x3f00f21f
.word 0x3c9bcea6
.word 0xc1d3dd7a
.word 0x3f00f21f
.word 0x3c9bcea6
.word 0xc1d3dd7a
.word 0x3f00f21f
.word 0x3ecef1fe
.word 0xbfea6697
.word 0x3f3d7c21
.word 0x3ecef1fe
.word 0xbfea6697
.word 0x3f3d7c21
.word 0x3ecef1fe
.word 0xbfea6697
.word 0x3f3d7c21
.word 0x3ecef1fe
.word 0xbfea6697
.word 0x3f3d7c21
.word 0x3ecef1fe
.word 0xbfea6697
.word 0x3f3d7c21
.word 0x3d1f2c9c
.word 0xc00e0cb1
.word 0x3db0a545
.word 0x3d1f2c9c
.word 0xc00e0cb1
.word 0x3db0a545
.word 0x3d1f2c9c
.word 0xc00e0cb1
.word 0x3db0a545
.word 0x3d1f2c9c
.word 0xc00e0cb1
.word 0x3db0a545
.word 0x3d1f2c9c
.word 0xc00e0cb1
.word 0x3db0a545
.word 0x3ce1a6d5
.word 0xc1b4215a
.word 0x3f1ec6b3
.word 0x3ce1a6d5
.word 0xc1b4215a
.word 0x3f1ec6b3
.word 0x3ce1a6d5
.word 0xc1b4215a
.word 0x3f1ec6b3
.word 0x3ce1a6d5
.word 0xc1b4215a
.word 0x3f1ec6b3
.word 0x3ce1a6d5
.word 0xc1b4215a
.word 0x3f1ec6b3
.word 0x3f460eda
.word 0xbf6a707f
.word 0x3f35609c
.word 0x3f460eda
.word 0xbf6a707f
.word 0x3f35609c
.word 0x3f460eda
.word 0xbf6a707f
.word 0x3f35609c
.word 0x3f460eda
.word 0xbf6a707f
.word 0x3f35609c
.word 0x3f460eda
.word 0xbf6a707f
.word 0x3f35609c
.word 0x3f1fc867
.word 0xbf691944
.word 0x3f117d2b
.word 0x3f1fc867
.word 0xbf691944
.word 0x3f117d2b
.word 0x3f1fc867
.word 0xbf691944
.word 0x3f117d2b
.word 0x3f1fc867
.word 0xbf691944
.word 0x3f117d2b
.word 0x3f1fc867
.word 0xbf691944
.word 0x3f117d2b
.word 0x3ebdb7e7
.word 0xbe9638c5
.word 0x3ddea7a8
.word 0x3ebdb7e7
.word 0xbe9638c5
.word 0x3ddea7a8
.word 0x3ebdb7e7
.word 0xbe9638c5
.word 0x3ddea7a8
.word 0x3ebdb7e7
.word 0xbe9638c5
.word 0x3ddea7a8
.word 0x3ebdb7e7
.word 0xbe9638c5
.word 0x3ddea7a8
.word 0x3ec508b1
.word 0xc00ee82f
.word 0x3f5bfb0d
.word 0x3ec508b1
.word 0xc00ee82f
.word 0x3f5bfb0d
.word 0x3ec508b1
.word 0xc00ee82f
.word 0x3f5bfb0d
.word 0x3ec508b1
.word 0xc00ee82f
.word 0x3f5bfb0d
.word 0x3ec508b1
.word 0xc00ee82f
.word 0x3f5bfb0d
.word 0x3f645f76
.word 0xbef9327b
.word 0x3ede4de3
.word 0x3f645f76
.word 0xbef9327b
.word 0x3ede4de3
.word 0x3f645f76
.word 0xbef9327b
.word 0x3ede4de3
.word 0x3f645f76
.word 0xbef9327b
.word 0x3ede4de3
.word 0x3f645f76
.word 0xbef9327b
.word 0x3ede4de3
.word 0x3dda2df9
.word 0xc1160bc0
.word 0x3f7fc1e7
.word 0x3dda2df9
.word 0xc1160bc0
.word 0x3f7fc1e7
.word 0x3dda2df9
.word 0xc1160bc0
.word 0x3f7fc1e7
.word 0x3dda2df9
.word 0xc1160bc0
.word 0x3f7fc1e7
.word 0x3dda2df9
.word 0xc1160bc0
.word 0x3f7fc1e7
.word 0x3ec86448
.word 0xbfd435eb
.word 0x3f261d41
.word 0x3ec86448
.word 0xbfd435eb
.word 0x3f261d41
.word 0x3ec86448
.word 0xbfd435eb
.word 0x3f261d41
.word 0x3ec86448
.word 0xbfd435eb
.word 0x3f261d41
.word 0x3ec86448
.word 0xbfd435eb
.word 0x3f261d41
.word 0x3d2f41d9
.word 0xbf3f7a04
.word 0x3d0315a9
.word 0x3d2f41d9
.word 0xbf3f7a04
.word 0x3d0315a9
.word 0x3d2f41d9
.word 0xbf3f7a04
.word 0x3d0315a9
.word 0x3d2f41d9
.word 0xbf3f7a04
.word 0x3d0315a9
.word 0x3d2f41d9
.word 0xbf3f7a04
.word 0x3d0315a9
.word 0x3ecee142
.word 0xbf8a2973
.word 0x3edf4dda
.word 0x3ecee142
.word 0xbf8a2973
.word 0x3edf4dda
.word 0x3ecee142
.word 0xbf8a2973
.word 0x3edf4dda
.word 0x3ecee142
.word 0xbf8a2973
.word 0x3edf4dda
.word 0x3ecee142
.word 0xbf8a2973
.word 0x3edf4dda
.word 0x3f216c33
.word 0xbfae259b
.word 0x3f5b9e84
.word 0x3f216c33
.word 0xbfae259b
.word 0x3f5b9e84
.word 0x3f216c33
.word 0xbfae259b
.word 0x3f5b9e84
.word 0x3f216c33
.word 0xbfae259b
.word 0x3f5b9e84
.word 0x3f216c33
.word 0xbfae259b
.word 0x3f5b9e84
.word 0x3e3f7f96
.word 0xbff4d4f4
.word 0x3eb724e8
.word 0x3e3f7f96
.word 0xbff4d4f4
.word 0x3eb724e8
.word 0x3e3f7f96
.word 0xbff4d4f4
.word 0x3eb724e8
.word 0x3e3f7f96
.word 0xbff4d4f4
.word 0x3eb724e8
.word 0x3e3f7f96
.word 0xbff4d4f4
.word 0x3eb724e8
.word 0x3e39d55e
.word 0xc04cdc02
.word 0x3f14b5bc
.word 0x3e39d55e
.word 0xc04cdc02
.word 0x3f14b5bc
.word 0x3e39d55e
.word 0xc04cdc02
.word 0x3f14b5bc
.word 0x3e39d55e
.word 0xc04cdc02
.word 0x3f14b5bc
.word 0x3e39d55e
.word 0xc04cdc02
.word 0x3f14b5bc
.word 0x3ed694c4
.word 0xbdcbc4fe
.word 0x3d2acd17
.word 0x3ed694c4
.word 0xbdcbc4fe
.word 0x3d2acd17
.word 0x3ed694c4
.word 0xbdcbc4fe
.word 0x3d2acd17
.word 0x3ed694c4
.word 0xbdcbc4fe
.word 0x3d2acd17
.word 0x3ed694c4
.word 0xbdcbc4fe
.word 0x3d2acd17
.word 0x3ee8d8cf
.word 0xbfb9efd7
.word 0x3f291ed4
.word 0x3ee8d8cf
.word 0xbfb9efd7
.word 0x3f291ed4
.word 0x3ee8d8cf
.word 0xbfb9efd7
.word 0x3f291ed4
.word 0x3ee8d8cf
.word 0xbfb9efd7
.word 0x3f291ed4
.word 0x3ee8d8cf
.word 0xbfb9efd7
.word 0x3f291ed4
.word 0x3ec5daed
.word 0xc015e97e
.word 0x3f67b9c4
.word 0x3ec5daed
.word 0xc015e97e
.word 0x3f67b9c4
.word 0x3ec5daed
.word 0xc015e97e
.word 0x3f67b9c4
.word 0x3ec5daed
.word 0xc015e97e
.word 0x3f67b9c4
.word 0x3ec5daed
.word 0xc015e97e
.word 0x3f67b9c4
.word 0x3f20496c
.word 0xbfc50fad
.word 0x3f76c4a2
.word 0x3f20496c
.word 0xbfc50fad
.word 0x3f76c4a2
.word 0x3f20496c
.word 0xbfc50fad
.word 0x3f76c4a2
.word 0x3f20496c
.word 0xbfc50fad
.word 0x3f76c4a2
.word 0x3f20496c
.word 0xbfc50fad
.word 0x3f76c4a2
.word 0x3f628a7b
.word 0xbe4321b9
.word 0x3e2cad53
.word 0x3f628a7b
.word 0xbe4321b9
.word 0x3e2cad53
.word 0x3f628a7b
.word 0xbe4321b9
.word 0x3e2cad53
.word 0x3f628a7b
.word 0xbe4321b9
.word 0x3e2cad53
.word 0x3f628a7b
.word 0xbe4321b9
.word 0x3e2cad53
.word 0x3f38b262
.word 0xbf5155b4
.word 0x3f170777
.word 0x3f38b262
.word 0xbf5155b4
.word 0x3f170777
.word 0x3f38b262
.word 0xbf5155b4
.word 0x3f170777
.word 0x3f38b262
.word 0xbf5155b4
.word 0x3f170777
.word 0x3f38b262
.word 0xbf5155b4
.word 0x3f170777
.word 0x3f7fd4b4
.word 0xbf18530e
.word 0x3f18394b
.word 0x3f7fd4b4
.word 0xbf18530e
.word 0x3f18394b
.word 0x3f7fd4b4
.word 0xbf18530e
.word 0x3f18394b
.word 0x3f7fd4b4
.word 0xbf18530e
.word 0x3f18394b
.word 0x3f7fd4b4
.word 0xbf18530e
.word 0x3f18394b
.word 0x3f431c7f
.word 0xbe02149a
.word 0x3dc64858
.word 0x3f431c7f
.word 0xbe02149a
.word 0x3dc64858
.word 0x3f431c7f
.word 0xbe02149a
.word 0x3dc64858
.word 0x3f431c7f
.word 0xbe02149a
.word 0x3dc64858
.word 0x3f431c7f
.word 0xbe02149a
.word 0x3dc64858
.word 0x3ec6c2f1
.word 0xbf8721b9
.word 0x3ed1d5f8
.word 0x3ec6c2f1
.word 0xbf8721b9
.word 0x3ed1d5f8
.word 0x3ec6c2f1
.word 0xbf8721b9
.word 0x3ed1d5f8
.word 0x3ec6c2f1
.word 0xbf8721b9
.word 0x3ed1d5f8
.word 0x3ec6c2f1
.word 0xbf8721b9
.word 0x3ed1d5f8
.word 0x3f08e01f
.word 0xbf945b43
.word 0x3f1ea4bc
.word 0x3f08e01f
.word 0xbf945b43
.word 0x3f1ea4bc
.word 0x3f08e01f
.word 0xbf945b43
.word 0x3f1ea4bc
.word 0x3f08e01f
.word 0xbf945b43
.word 0x3f1ea4bc
.word 0x3f08e01f
.word 0xbf945b43
.word 0x3f1ea4bc
.word 0x3f4e7ff3
.word 0xbf990653
.word 0x3f76df25
.word 0x3f4e7ff3
.word 0xbf990653
.word 0x3f76df25
.word 0x3f4e7ff3
.word 0xbf990653
.word 0x3f76df25
.word 0x3f4e7ff3
.word 0xbf990653
.word 0x3f76df25
.word 0x3f4e7ff3
.word 0xbf990653
.word 0x3f76df25
.word 0x3f2ec218
.word 0xbf9976bd
.word 0x3f51861f
.word 0x3f2ec218
.word 0xbf9976bd
.word 0x3f51861f
.word 0x3f2ec218
.word 0xbf9976bd
.word 0x3f51861f
.word 0x3f2ec218
.word 0xbf9976bd
.word 0x3f51861f
.word 0x3f2ec218
.word 0xbf9976bd
.word 0x3f51861f
.word 0x3f7223af
.word 0xbf6a83b2
.word 0x3f5dd12e
.word 0x3f7223af
.word 0xbf6a83b2
.word 0x3f5dd12e
.word 0x3f7223af
.word 0xbf6a83b2
.word 0x3f5dd12e
.word 0x3f7223af
.word 0xbf6a83b2
.word 0x3f5dd12e
.word 0x3f7223af
.word 0xbf6a83b2
.word 0x3f5dd12e
.word 0x3f07462c
.word 0xbfbb6e2f
.word 0x3f4614f7
.word 0x3f07462c
.word 0xbfbb6e2f
.word 0x3f4614f7
.word 0x3f07462c
.word 0xbfbb6e2f
.word 0x3f4614f7
.word 0x3f07462c
.word 0xbfbb6e2f
.word 0x3f4614f7
.word 0x3f07462c
.word 0xbfbb6e2f
.word 0x3f4614f7
.word 0x3ebcff3d
.word 0xc0261ed6
.word 0x3f75488d
.word 0x3ebcff3d
.word 0xc0261ed6
.word 0x3f75488d
.word 0x3ebcff3d
.word 0xc0261ed6
.word 0x3f75488d
.word 0x3ebcff3d
.word 0xc0261ed6
.word 0x3f75488d
.word 0x3ebcff3d
.word 0xc0261ed6
.word 0x3f75488d
.word 0x3f47ed1d
.word 0xbecde313
.word 0x3ea0ca36
.word 0x3f47ed1d
.word 0xbecde313
.word 0x3ea0ca36
.word 0x3f47ed1d
.word 0xbecde313
.word 0x3ea0ca36
.word 0x3f47ed1d
.word 0xbecde313
.word 0x3ea0ca36
.word 0x3f47ed1d
.word 0xbecde313
.word 0x3ea0ca36
.word 0x3f0f1623
.word 0xbf204092
.word 0x3eb323db
.word 0x3f0f1623
.word 0xbf204092
.word 0x3eb323db
.word 0x3f0f1623
.word 0xbf204092
.word 0x3eb323db
.word 0x3f0f1623
.word 0xbf204092
.word 0x3eb323db
.word 0x3f0f1623
.word 0xbf204092
.word 0x3eb323db
.word 0x3f78edc3
.word 0xbf5d247a
.word 0x3f5708ba
.word 0x3f78edc3
.word 0xbf5d247a
.word 0x3f5708ba
.word 0x3f78edc3
.word 0xbf5d247a
.word 0x3f5708ba
.word 0x3f78edc3
.word 0xbf5d247a
.word 0x3f5708ba
.word 0x3f78edc3
.word 0xbf5d247a
.word 0x3f5708ba
.word 0x3eb9ec9c
.word 0xbf4519d2
.word 0x3e8f25d5
.word 0x3eb9ec9c
.word 0xbf4519d2
.word 0x3e8f25d5
.word 0x3eb9ec9c
.word 0xbf4519d2
.word 0x3e8f25d5
.word 0x3eb9ec9c
.word 0xbf4519d2
.word 0x3e8f25d5
.word 0x3eb9ec9c
.word 0xbf4519d2
.word 0x3e8f25d5
.word 0x3ec0a588
.word 0xbf19490b
.word 0x3e66b3cc
.word 0x3ec0a588
.word 0xbf19490b
.word 0x3e66b3cc
.word 0x3ec0a588
.word 0xbf19490b
.word 0x3e66b3cc
.word 0x3ec0a588
.word 0xbf19490b
.word 0x3e66b3cc
.word 0x3ec0a588
.word 0xbf19490b
.word 0x3e66b3cc
.word 0x3eab3c36
.word 0xbfddad69
.word 0x3f1446f9
.word 0x3eab3c36
.word 0xbfddad69
.word 0x3f1446f9
.word 0x3eab3c36
.word 0xbfddad69
.word 0x3f1446f9
.word 0x3eab3c36
.word 0xbfddad69
.word 0x3f1446f9
.word 0x3eab3c36
.word 0xbfddad69
.word 0x3f1446f9
.word 0x3e60e642
.word 0xbff448d3
.word 0x3ed69b71
.word 0x3e60e642
.word 0xbff448d3
.word 0x3ed69b71
.word 0x3e60e642
.word 0xbff448d3
.word 0x3ed69b71
.word 0x3e60e642
.word 0xbff448d3
.word 0x3ed69b71
.word 0x3e60e642
.word 0xbff448d3
.word 0x3ed69b71
.word 0x3e8a0f1d
.word 0xc04490a5
.word 0x3f540329
.word 0x3e8a0f1d
.word 0xc04490a5
.word 0x3f540329
.word 0x3e8a0f1d
.word 0xc04490a5
.word 0x3f540329
.word 0x3e8a0f1d
.word 0xc04490a5
.word 0x3f540329
.word 0x3e8a0f1d
.word 0xc04490a5
.word 0x3f540329
.word 0x3e9dfd77
.word 0xbf688ddd
.word 0x3e8f8541
.word 0x3e9dfd77
.word 0xbf688ddd
.word 0x3e8f8541
.word 0x3e9dfd77
.word 0xbf688ddd
.word 0x3e8f8541
.word 0x3e9dfd77
.word 0xbf688ddd
.word 0x3e8f8541
.word 0x3e9dfd77
.word 0xbf688ddd
.word 0x3e8f8541
.word 0x3d803e07
.word 0xc10592f0
.word 0x3f05d3ab
.word 0x3d803e07
.word 0xc10592f0
.word 0x3f05d3ab
.word 0x3d803e07
.word 0xc10592f0
.word 0x3f05d3ab
.word 0x3d803e07
.word 0xc10592f0
.word 0x3f05d3ab
.word 0x3d803e07
.word 0xc10592f0
.word 0x3f05d3ab
.word 0x3f5575b6
.word 0xbe48a45d
.word 0x3e274d03
.word 0x3f5575b6
.word 0xbe48a45d
.word 0x3e274d03
.word 0x3f5575b6
.word 0xbe48a45d
.word 0x3e274d03
.word 0x3f5575b6
.word 0xbe48a45d
.word 0x3e274d03
.word 0x3f5575b6
.word 0xbe48a45d
.word 0x3e274d03
.word 0x3ef6b66d
.word 0xbf7a0ca4
.word 0x3ef0fa56
.word 0x3ef6b66d
.word 0xbf7a0ca4
.word 0x3ef0fa56
.word 0x3ef6b66d
.word 0xbf7a0ca4
.word 0x3ef0fa56
.word 0x3ef6b66d
.word 0xbf7a0ca4
.word 0x3ef0fa56
.word 0x3ef6b66d
.word 0xbf7a0ca4
.word 0x3ef0fa56
.word 0x3cc39b66
.word 0xbfe9194f
.word 0x3d321bc7
.word 0x3cc39b66
.word 0xbfe9194f
.word 0x3d321bc7
.word 0x3cc39b66
.word 0xbfe9194f
.word 0x3d321bc7
.word 0x3cc39b66
.word 0xbfe9194f
.word 0x3d321bc7
.word 0x3cc39b66
.word 0xbfe9194f
.word 0x3d321bc7
.word 0x3e0535fc
.word 0xc0195456
.word 0x3e9f924c
.word 0x3e0535fc
.word 0xc0195456
.word 0x3e9f924c
.word 0x3e0535fc
.word 0xc0195456
.word 0x3e9f924c
.word 0x3e0535fc
.word 0xc0195456
.word 0x3e9f924c
.word 0x3e0535fc
.word 0xc0195456
.word 0x3e9f924c
.word 0x3f266370
.word 0xbe778ad2
.word 0x3e20e42c
.word 0x3f266370
.word 0xbe778ad2
.word 0x3e20e42c
.word 0x3f266370
.word 0xbe778ad2
.word 0x3e20e42c
.word 0x3f266370
.word 0xbe778ad2
.word 0x3e20e42c
.word 0x3f266370
.word 0xbe778ad2
.word 0x3e20e42c
.word 0x3e863b7e
.word 0xbf27c423
.word 0x3e2fef4f
.word 0x3e863b7e
.word 0xbf27c423
.word 0x3e2fef4f
.word 0x3e863b7e
.word 0xbf27c423
.word 0x3e2fef4f
.word 0x3e863b7e
.word 0xbf27c423
.word 0x3e2fef4f
.word 0x3e863b7e
.word 0xbf27c423
.word 0x3e2fef4f
.word 0x3f26f10a
.word 0xbf0bbac8
.word 0x3eb63d5d
.word 0x3f26f10a
.word 0xbf0bbac8
.word 0x3eb63d5d
.word 0x3f26f10a
.word 0xbf0bbac8
.word 0x3eb63d5d
.word 0x3f26f10a
.word 0xbf0bbac8
.word 0x3eb63d5d
.word 0x3f26f10a
.word 0xbf0bbac8
.word 0x3eb63d5d
.word 0x3eb48325
.word 0xbf12f232
.word 0x3e4f3b24
.word 0x3eb48325
.word 0xbf12f232
.word 0x3e4f3b24
.word 0x3eb48325
.word 0xbf12f232
.word 0x3e4f3b24
.word 0x3eb48325
.word 0xbf12f232
.word 0x3e4f3b24
.word 0x3eb48325
.word 0xbf12f232
.word 0x3e4f3b24
.word 0x3f097cd4
.word 0xbeaec419
.word 0x3e3bb853
.word 0x3f097cd4
.word 0xbeaec419
.word 0x3e3bb853
.word 0x3f097cd4
.word 0xbeaec419
.word 0x3e3bb853
.word 0x3f097cd4
.word 0xbeaec419
.word 0x3e3bb853
.word 0x3f097cd4
.word 0xbeaec419
.word 0x3e3bb853
.word 0x3f3fd2a1
.word 0xbee05d93
.word 0x3ea81e6b
.word 0x3f3fd2a1
.word 0xbee05d93
.word 0x3ea81e6b
.word 0x3f3fd2a1
.word 0xbee05d93
.word 0x3ea81e6b
.word 0x3f3fd2a1
.word 0xbee05d93
.word 0x3ea81e6b
.word 0x3f3fd2a1
.word 0xbee05d93
.word 0x3ea81e6b
.word 0x3f7d090c
.word 0xbeeaa87d
.word 0x3ee7f0cf
.word 0x3f7d090c
.word 0xbeeaa87d
.word 0x3ee7f0cf
.word 0x3f7d090c
.word 0xbeeaa87d
.word 0x3ee7f0cf
.word 0x3f7d090c
.word 0xbeeaa87d
.word 0x3ee7f0cf
.word 0x3f7d090c
.word 0xbeeaa87d
.word 0x3ee7f0cf
.word 0x3eb35b8c
.word 0xbf99393a
.word 0x3ed6b39f
.word 0x3eb35b8c
.word 0xbf99393a
.word 0x3ed6b39f
.word 0x3eb35b8c
.word 0xbf99393a
.word 0x3ed6b39f
.word 0x3eb35b8c
.word 0xbf99393a
.word 0x3ed6b39f
.word 0x3eb35b8c
.word 0xbf99393a
.word 0x3ed6b39f
.word 0x3f34c61c
.word 0xbd9decde
.word 0x3d5f0987
.word 0x3f34c61c
.word 0xbd9decde
.word 0x3d5f0987
.word 0x3f34c61c
.word 0xbd9decde
.word 0x3d5f0987
.word 0x3f34c61c
.word 0xbd9decde
.word 0x3d5f0987
.word 0x3f34c61c
.word 0xbd9decde
.word 0x3d5f0987
.word 0x3e6bc751
.word 0xbfabd778
.word 0x3e9e4496
.word 0x3e6bc751
.word 0xbfabd778
.word 0x3e9e4496
.word 0x3e6bc751
.word 0xbfabd778
.word 0x3e9e4496
.word 0x3e6bc751
.word 0xbfabd778
.word 0x3e9e4496
.word 0x3e6bc751
.word 0xbfabd778
.word 0x3e9e4496
.word 0x3f381a14
.word 0xbf37158a
.word 0x3f03aa22
.word 0x3f381a14
.word 0xbf37158a
.word 0x3f03aa22
.word 0x3f381a14
.word 0xbf37158a
.word 0x3f03aa22
.word 0x3f381a14
.word 0xbf37158a
.word 0x3f03aa22
.word 0x3f381a14
.word 0xbf37158a
.word 0x3f03aa22
.word 0x3f22f622
.word 0xbeedb2eb
.word 0x3e974fc3
.word 0x3f22f622
.word 0xbeedb2eb
.word 0x3e974fc3
.word 0x3f22f622
.word 0xbeedb2eb
.word 0x3e974fc3
.word 0x3f22f622
.word 0xbeedb2eb
.word 0x3e974fc3
.word 0x3f22f622
.word 0xbeedb2eb
.word 0x3e974fc3
.word 0x3eac05c6
.word 0xbf372477
.word 0x3e762143
.word 0x3eac05c6
.word 0xbf372477
.word 0x3e762143
.word 0x3eac05c6
.word 0xbf372477
.word 0x3e762143
.word 0x3eac05c6
.word 0xbf372477
.word 0x3e762143
.word 0x3eac05c6
.word 0xbf372477
.word 0x3e762143
.word 0x3e66811d
.word 0xbfada96f
.word 0x3e9c5dd0
.word 0x3e66811d
.word 0xbfada96f
.word 0x3e9c5dd0
.word 0x3e66811d
.word 0xbfada96f
.word 0x3e9c5dd0
.word 0x3e66811d
.word 0xbfada96f
.word 0x3e9c5dd0
.word 0x3e66811d
.word 0xbfada96f
.word 0x3e9c5dd0
.word 0x3f23801f
.word 0xbeab8993
.word 0x3e5b1ce5
.word 0x3f23801f
.word 0xbeab8993
.word 0x3e5b1ce5
.word 0x3f23801f
.word 0xbeab8993
.word 0x3e5b1ce5
.word 0x3f23801f
.word 0xbeab8993
.word 0x3e5b1ce5
.word 0x3f23801f
.word 0xbeab8993
.word 0x3e5b1ce5
.word 0x3e5f366b
.word 0xbf1bbe28
.word 0x3e07cbc0
.word 0x3e5f366b
.word 0xbf1bbe28
.word 0x3e07cbc0
.word 0x3e5f366b
.word 0xbf1bbe28
.word 0x3e07cbc0
.word 0x3e5f366b
.word 0xbf1bbe28
.word 0x3e07cbc0
.word 0x3e5f366b
.word 0xbf1bbe28
.word 0x3e07cbc0
.word 0x3f692e4a
.word 0xbf4c84d6
.word 0x3f3a49e2
.word 0x3f692e4a
.word 0xbf4c84d6
.word 0x3f3a49e2
.word 0x3f692e4a
.word 0xbf4c84d6
.word 0x3f3a49e2
.word 0x3f692e4a
.word 0xbf4c84d6
.word 0x3f3a49e2
.word 0x3f692e4a
.word 0xbf4c84d6
.word 0x3f3a49e2
.word 0x3f002c67
.word 0xbfa91ec9
.word 0x3f295974
.word 0x3f002c67
.word 0xbfa91ec9
.word 0x3f295974
.word 0x3f002c67
.word 0xbfa91ec9
.word 0x3f295974
.word 0x3f002c67
.word 0xbfa91ec9
.word 0x3f295974
.word 0x3f002c67
.word 0xbfa91ec9
.word 0x3f295974
.word 0x3d249819
.word 0xc11487c4
.word 0x3ebefe72
.word 0x3d249819
.word 0xc11487c4
.word 0x3ebefe72
.word 0x3d249819
.word 0xc11487c4
.word 0x3ebefe72
.word 0x3d249819
.word 0xc11487c4
.word 0x3ebefe72
.word 0x3d249819
.word 0xc11487c4
.word 0x3ebefe72
.word 0x3f1f7ce1
.word 0xbc98b18b
.word 0x3c3e4183
.word 0x3f1f7ce1
.word 0xbc98b18b
.word 0x3c3e4183
.word 0x3f1f7ce1
.word 0xbc98b18b
.word 0x3c3e4183
.word 0x3f1f7ce1
.word 0xbc98b18b
.word 0x3c3e4183
.word 0x3f1f7ce1
.word 0xbc98b18b
.word 0x3c3e4183
.word 0x3f18a141
.word 0xbfb73c64
.word 0x3f5a7e8f
.word 0x3f18a141
.word 0xbfb73c64
.word 0x3f5a7e8f
.word 0x3f18a141
.word 0xbfb73c64
.word 0x3f5a7e8f
.word 0x3f18a141
.word 0xbfb73c64
.word 0x3f5a7e8f
.word 0x3f18a141
.word 0xbfb73c64
.word 0x3f5a7e8f
.word 0x3f055d79
.word 0xbfae325d
.word 0x3f357f8a
.word 0x3f055d79
.word 0xbfae325d
.word 0x3f357f8a
.word 0x3f055d79
.word 0xbfae325d
.word 0x3f357f8a
.word 0x3f055d79
.word 0xbfae325d
.word 0x3f357f8a
.word 0x3f055d79
.word 0xbfae325d
.word 0x3f357f8a
.word 0x3f030803
.word 0xbf074a1c
.word 0x3e8a7e51
.word 0x3f030803
.word 0xbf074a1c
.word 0x3e8a7e51
.word 0x3f030803
.word 0xbf074a1c
.word 0x3e8a7e51
.word 0x3f030803
.word 0xbf074a1c
.word 0x3e8a7e51
.word 0x3f030803
.word 0xbf074a1c
.word 0x3e8a7e51
.word 0x3cc48bc5
.word 0xc1b635f7
.word 0x3f0be4cd
.word 0x3cc48bc5
.word 0xc1b635f7
.word 0x3f0be4cd
.word 0x3cc48bc5
.word 0xc1b635f7
.word 0x3f0be4cd
.word 0x3cc48bc5
.word 0xc1b635f7
.word 0x3f0be4cd
.word 0x3cc48bc5
.word 0xc1b635f7
.word 0x3f0be4cd
.word 0x3a3783b0
.word 0xc3530d4c
.word 0x3e174b13
.word 0x3a3783b0
.word 0xc3530d4c
.word 0x3e174b13
.word 0x3a3783b0
.word 0xc3530d4c
.word 0x3e174b13
.word 0x3a3783b0
.word 0xc3530d4c
.word 0x3e174b13
.word 0x3a3783b0
.word 0xc3530d4c
.word 0x3e174b13
.word 0x3f348723
.word 0xbf46849d
.word 0x3f0bfe0a
.word 0x3f348723
.word 0xbf46849d
.word 0x3f0bfe0a
.word 0x3f348723
.word 0xbf46849d
.word 0x3f0bfe0a
.word 0x3f348723
.word 0xbf46849d
.word 0x3f0bfe0a
.word 0x3f348723
.word 0xbf46849d
.word 0x3f0bfe0a
.word 0x3f59cb0e
.word 0xbe3ae252
.word 0x3e1efe13
.word 0x3f59cb0e
.word 0xbe3ae252
.word 0x3e1efe13
.word 0x3f59cb0e
.word 0xbe3ae252
.word 0x3e1efe13
.word 0x3f59cb0e
.word 0xbe3ae252
.word 0x3e1efe13
.word 0x3f59cb0e
.word 0xbe3ae252
.word 0x3e1efe13
.word 0x3f64b3db
.word 0xbf220808
.word 0x3f10c0fd
.word 0x3f64b3db
.word 0xbf220808
.word 0x3f10c0fd
.word 0x3f64b3db
.word 0xbf220808
.word 0x3f10c0fd
.word 0x3f64b3db
.word 0xbf220808
.word 0x3f10c0fd
.word 0x3f64b3db
.word 0xbf220808
.word 0x3f10c0fd
.word 0x3ebd3c4d
.word 0xbf12d53b
.word 0x3e591406
.word 0x3ebd3c4d
.word 0xbf12d53b
.word 0x3e591406
.word 0x3ebd3c4d
.word 0xbf12d53b
.word 0x3e591406
.word 0x3ebd3c4d
.word 0xbf12d53b
.word 0x3e591406
.word 0x3ebd3c4d
.word 0xbf12d53b
.word 0x3e591406
.word 0x3e896347
.word 0xbe3f9316
.word 0x3d4da005
.word 0x3e896347
.word 0xbe3f9316
.word 0x3d4da005
.word 0x3e896347
.word 0xbe3f9316
.word 0x3d4da005
.word 0x3e896347
.word 0xbe3f9316
.word 0x3d4da005
.word 0x3e896347
.word 0xbe3f9316
.word 0x3d4da005
.word 0x3e2572cb
.word 0xc0ac31f8
.word 0x3f5e92d8
.word 0x3e2572cb
.word 0xc0ac31f8
.word 0x3f5e92d8
.word 0x3e2572cb
.word 0xc0ac31f8
.word 0x3f5e92d8
.word 0x3e2572cb
.word 0xc0ac31f8
.word 0x3f5e92d8
.word 0x3e2572cb
.word 0xc0ac31f8
.word 0x3f5e92d8
.word 0x3f779f95
.word 0xbf060886
.word 0x3f01a5c6
.word 0x3f779f95
.word 0xbf060886
.word 0x3f01a5c6
.word 0x3f779f95
.word 0xbf060886
.word 0x3f01a5c6
.word 0x3f779f95
.word 0xbf060886
.word 0x3f01a5c6
.word 0x3f779f95
.word 0xbf060886
.word 0x3f01a5c6
.word 0x3f71bd2b
.word 0xbdb607c7
.word 0x3dabe3d5
.word 0x3f71bd2b
.word 0xbdb607c7
.word 0x3dabe3d5
.word 0x3f71bd2b
.word 0xbdb607c7
.word 0x3dabe3d5
.word 0x3f71bd2b
.word 0xbdb607c7
.word 0x3dabe3d5
.word 0x3f71bd2b
.word 0xbdb607c7
.word 0x3dabe3d5
.word 0x3f0b5988
.word 0xbf87f930
.word 0x3f1407b6
.word 0x3f0b5988
.word 0xbf87f930
.word 0x3f1407b6
.word 0x3f0b5988
.word 0xbf87f930
.word 0x3f1407b6
.word 0x3f0b5988
.word 0xbf87f930
.word 0x3f1407b6
.word 0x3f0b5988
.word 0xbf87f930
.word 0x3f1407b6
.word 0x3ecfe472
.word 0xbedb08d1
.word 0x3e31df96
.word 0x3ecfe472
.word 0xbedb08d1
.word 0x3e31df96
.word 0x3ecfe472
.word 0xbedb08d1
.word 0x3e31df96
.word 0x3ecfe472
.word 0xbedb08d1
.word 0x3e31df96
.word 0x3ecfe472
.word 0xbedb08d1
.word 0x3e31df96
.word 0x3f1817b8
.word 0xbfa45062
.word 0x3f433de8
.word 0x3f1817b8
.word 0xbfa45062
.word 0x3f433de8
.word 0x3f1817b8
.word 0xbfa45062
.word 0x3f433de8
.word 0x3f1817b8
.word 0xbfa45062
.word 0x3f433de8
.word 0x3f1817b8
.word 0xbfa45062
.word 0x3f433de8
.word 0x3c59ebfb
.word 0xc20c4838
.word 0x3eeed50f
.word 0x3c59ebfb
.word 0xc20c4838
.word 0x3eeed50f
.word 0x3c59ebfb
.word 0xc20c4838
.word 0x3eeed50f
.word 0x3c59ebfb
.word 0xc20c4838
.word 0x3eeed50f
.word 0x3c59ebfb
.word 0xc20c4838
.word 0x3eeed50f
.word 0x3f56a601
.word 0xbf913f3a
.word 0x3f739215
.word 0x3f56a601
.word 0xbf913f3a
.word 0x3f739215
.word 0x3f56a601
.word 0xbf913f3a
.word 0x3f739215
.word 0x3f56a601
.word 0xbf913f3a
.word 0x3f739215
.word 0x3f56a601
.word 0xbf913f3a
.word 0x3f739215
.word 0x3e9f2482
.word 0xbc2c88a3
.word 0x3b5682f0
.word 0x3e9f2482
.word 0xbc2c88a3
.word 0x3b5682f0
.word 0x3e9f2482
.word 0xbc2c88a3
.word 0x3b5682f0
.word 0x3e9f2482
.word 0xbc2c88a3
.word 0x3b5682f0
.word 0x3e9f2482
.word 0xbc2c88a3
.word 0x3b5682f0
.word 0x3f6bfb54
.word 0xbf6c5f8f
.word 0x3f59e3c8
.word 0x3f6bfb54
.word 0xbf6c5f8f
.word 0x3f59e3c8
.word 0x3f6bfb54
.word 0xbf6c5f8f
.word 0x3f59e3c8
.word 0x3f6bfb54
.word 0xbf6c5f8f
.word 0x3f59e3c8
.word 0x3f6bfb54
.word 0xbf6c5f8f
.word 0x3f59e3c8
.word 0x3f2ee632
.word 0xbf9a1a3e
.word 0x3f5290d1
.word 0x3f2ee632
.word 0xbf9a1a3e
.word 0x3f5290d1
.word 0x3f2ee632
.word 0xbf9a1a3e
.word 0x3f5290d1
.word 0x3f2ee632
.word 0xbf9a1a3e
.word 0x3f5290d1
.word 0x3f2ee632
.word 0xbf9a1a3e
.word 0x3f5290d1
.word 0x3ee8e2e1
.word 0xbfc17b57
.word 0x3f300340
.word 0x3ee8e2e1
.word 0xbfc17b57
.word 0x3f300340
.word 0x3ee8e2e1
.word 0xbfc17b57
.word 0x3f300340
.word 0x3ee8e2e1
.word 0xbfc17b57
.word 0x3f300340
.word 0x3ee8e2e1
.word 0xbfc17b57
.word 0x3f300340
.word 0x3f28f869
.word 0xbdeb33e1
.word 0x3d9b3e47
.word 0x3f28f869
.word 0xbdeb33e1
.word 0x3d9b3e47
.word 0x3f28f869
.word 0xbdeb33e1
.word 0x3d9b3e47
.word 0x3f28f869
.word 0xbdeb33e1
.word 0x3d9b3e47
.word 0x3f28f869
.word 0xbdeb33e1
.word 0x3d9b3e47
.word 0x3ec7419c
.word 0xbe5787ee
.word 0x3da7c1e7
.word 0x3ec7419c
.word 0xbe5787ee
.word 0x3da7c1e7
.word 0x3ec7419c
.word 0xbe5787ee
.word 0x3da7c1e7
.word 0x3ec7419c
.word 0xbe5787ee
.word 0x3da7c1e7
.word 0x3ec7419c
.word 0xbe5787ee
.word 0x3da7c1e7
.word 0x3f68a86f
.word 0xbf39b3e9
.word 0x3f28c53a
.word 0x3f68a86f
.word 0xbf39b3e9
.word 0x3f28c53a
.word 0x3f68a86f
.word 0xbf39b3e9
.word 0x3f28c53a
.word 0x3f68a86f
.word 0xbf39b3e9
.word 0x3f28c53a
.word 0x3f68a86f
.word 0xbf39b3e9
.word 0x3f28c53a
.word 0x3f769f50
.word 0xbd6671a7
.word 0x3d5e00a0
.word 0x3f769f50
.word 0xbd6671a7
.word 0x3d5e00a0
.word 0x3f769f50
.word 0xbd6671a7
.word 0x3d5e00a0
.word 0x3f769f50
.word 0xbd6671a7
.word 0x3d5e00a0
.word 0x3f769f50
.word 0xbd6671a7
.word 0x3d5e00a0
.word 0x3e4fa3cf
.word 0xbf31228f
.word 0x3e0fac4a
.word 0x3e4fa3cf
.word 0xbf31228f
.word 0x3e0fac4a
.word 0x3e4fa3cf
.word 0xbf31228f
.word 0x3e0fac4a
.word 0x3e4fa3cf
.word 0xbf31228f
.word 0x3e0fac4a
.word 0x3e4fa3cf
.word 0xbf31228f
.word 0x3e0fac4a
.word 0x3f6456a5
.word 0xbe906d02
.word 0x3e80d1f8
.word 0x3f6456a5
.word 0xbe906d02
.word 0x3e80d1f8
.word 0x3f6456a5
.word 0xbe906d02
.word 0x3e80d1f8
.word 0x3f6456a5
.word 0xbe906d02
.word 0x3e80d1f8
.word 0x3f6456a5
.word 0xbe906d02
.word 0x3e80d1f8
.word 0x3ef35a48
.word 0xbef1b97e
.word 0x3e65c852
.word 0x3ef35a48
.word 0xbef1b97e
.word 0x3e65c852
.word 0x3ef35a48
.word 0xbef1b97e
.word 0x3e65c852
.word 0x3ef35a48
.word 0xbef1b97e
.word 0x3e65c852
.word 0x3ef35a48
.word 0xbef1b97e
.word 0x3e65c852
.word 0x3f27d697
.word 0xbf7bef45
.word 0x3f252c45
.word 0x3f27d697
.word 0xbf7bef45
.word 0x3f252c45
.word 0x3f27d697
.word 0xbf7bef45
.word 0x3f252c45
.word 0x3f27d697
.word 0xbf7bef45
.word 0x3f252c45
.word 0x3f27d697
.word 0xbf7bef45
.word 0x3f252c45
.word 0x3d9010df
.word 0xbf52ea5a
.word 0x3d6d6373
.word 0x3d9010df
.word 0xbf52ea5a
.word 0x3d6d6373
.word 0x3d9010df
.word 0xbf52ea5a
.word 0x3d6d6373
.word 0x3d9010df
.word 0xbf52ea5a
.word 0x3d6d6373
.word 0x3d9010df
.word 0xbf52ea5a
.word 0x3d6d6373
.word 0x3f4db0c1
.word 0xbe9ba6e5
.word 0x3e7a203b
.word 0x3f4db0c1
.word 0xbe9ba6e5
.word 0x3e7a203b
.word 0x3f4db0c1
.word 0xbe9ba6e5
.word 0x3e7a203b
.word 0x3f4db0c1
.word 0xbe9ba6e5
.word 0x3e7a203b
.word 0x3f4db0c1
.word 0xbe9ba6e5
.word 0x3e7a203b
.word 0x3f51af42
.word 0xbd602218
.word 0x3d379548
.word 0x3f51af42
.word 0xbd602218
.word 0x3d379548
.word 0x3f51af42
.word 0xbd602218
.word 0x3d379548
.word 0x3f51af42
.word 0xbd602218
.word 0x3d379548
.word 0x3f51af42
.word 0xbd602218
.word 0x3d379548
.word 0x3f7dad09
.word 0xbf76460c
.word 0x3f7409b1
.word 0x3f7dad09
.word 0xbf76460c
.word 0x3f7409b1
.word 0x3f7dad09
.word 0xbf76460c
.word 0x3f7409b1
.word 0x3f7dad09
.word 0xbf76460c
.word 0x3f7409b1
.word 0x3f7dad09
.word 0xbf76460c
.word 0x3f7409b1
.word 0x3f2241bb
.word 0xbf2a3ccd
.word 0x3ed7cc61
.word 0x3f2241bb
.word 0xbf2a3ccd
.word 0x3ed7cc61
.word 0x3f2241bb
.word 0xbf2a3ccd
.word 0x3ed7cc61
.word 0x3f2241bb
.word 0xbf2a3ccd
.word 0x3ed7cc61
.word 0x3f2241bb
.word 0xbf2a3ccd
.word 0x3ed7cc61
.word 0x3f7b5fed
.word 0xbe5d5af6
.word 0x3e595b21
.word 0x3f7b5fed
.word 0xbe5d5af6
.word 0x3e595b21
.word 0x3f7b5fed
.word 0xbe5d5af6
.word 0x3e595b21
.word 0x3f7b5fed
.word 0xbe5d5af6
.word 0x3e595b21
.word 0x3f7b5fed
.word 0xbe5d5af6
.word 0x3e595b21
.word 0x3e801add
.word 0xbf1eb63b
.word 0x3e1ed78b
.word 0x3e801add
.word 0xbf1eb63b
.word 0x3e1ed78b
.word 0x3e801add
.word 0xbf1eb63b
.word 0x3e1ed78b
.word 0x3e801add
.word 0xbf1eb63b
.word 0x3e1ed78b
.word 0x3e801add
.word 0xbf1eb63b
.word 0x3e1ed78b
.word 0x3ccbfc00
.word 0xc21cf775
.word 0x3f7a257b
.word 0x3ccbfc00
.word 0xc21cf775
.word 0x3f7a257b
.word 0x3ccbfc00
.word 0xc21cf775
.word 0x3f7a257b
.word 0x3ccbfc00
.word 0xc21cf775
.word 0x3f7a257b
.word 0x3ccbfc00
.word 0xc21cf775
.word 0x3f7a257b
.word 0x3e97359b
.word 0xc04c5a88
.word 0x3f716863
.word 0x3e97359b
.word 0xc04c5a88
.word 0x3f716863
.word 0x3e97359b
.word 0xc04c5a88
.word 0x3f716863
.word 0x3e97359b
.word 0xc04c5a88
.word 0x3f716863
.word 0x3e97359b
.word 0xc04c5a88
.word 0x3f716863
.word 0x3f2f282e
.word 0xbf421aec
.word 0x3f04cedf
.word 0x3f2f282e
.word 0xbf421aec
.word 0x3f04cedf
.word 0x3f2f282e
.word 0xbf421aec
.word 0x3f04cedf
.word 0x3f2f282e
.word 0xbf421aec
.word 0x3f04cedf
.word 0x3f2f282e
.word 0xbf421aec
.word 0x3f04cedf
.word 0x3e39d665
.word 0xc0371dc9
.word 0x3f04ede2
.word 0x3e39d665
.word 0xc0371dc9
.word 0x3f04ede2
.word 0x3e39d665
.word 0xc0371dc9
.word 0x3f04ede2
.word 0x3e39d665
.word 0xc0371dc9
.word 0x3f04ede2
.word 0x3e39d665
.word 0xc0371dc9
.word 0x3f04ede2
.word 0x3f297f97
.word 0xbf8566b8
.word 0x3f30a698
.word 0x3f297f97
.word 0xbf8566b8
.word 0x3f30a698
.word 0x3f297f97
.word 0xbf8566b8
.word 0x3f30a698
.word 0x3f297f97
.word 0xbf8566b8
.word 0x3f30a698
.word 0x3f297f97
.word 0xbf8566b8
.word 0x3f30a698
.word 0x3f7f2248
.word 0xbea57519
.word 0x3ea4e5cd
.word 0x3f7f2248
.word 0xbea57519
.word 0x3ea4e5cd
.word 0x3f7f2248
.word 0xbea57519
.word 0x3ea4e5cd
.word 0x3f7f2248
.word 0xbea57519
.word 0x3ea4e5cd
.word 0x3f7f2248
.word 0xbea57519
.word 0x3ea4e5cd
.word 0x3f32da21
.word 0xbf116e42
.word 0x3ecb352a
.word 0x3f32da21
.word 0xbf116e42
.word 0x3ecb352a
.word 0x3f32da21
.word 0xbf116e42
.word 0x3ecb352a
.word 0x3f32da21
.word 0xbf116e42
.word 0x3ecb352a
.word 0x3f32da21
.word 0xbf116e42
.word 0x3ecb352a
.word 0x3f5ab347
.word 0xbf8c1218
.word 0x3f6f5300
.word 0x3f5ab347
.word 0xbf8c1218
.word 0x3f6f5300
.word 0x3f5ab347
.word 0xbf8c1218
.word 0x3f6f5300
.word 0x3f5ab347
.word 0xbf8c1218
.word 0x3f6f5300
.word 0x3f5ab347
.word 0xbf8c1218
.word 0x3f6f5300
.word 0x3f23890e
.word 0xbfa71e98
.word 0x3f5583e7
.word 0x3f23890e
.word 0xbfa71e98
.word 0x3f5583e7
.word 0x3f23890e
.word 0xbfa71e98
.word 0x3f5583e7
.word 0x3f23890e
.word 0xbfa71e98
.word 0x3f5583e7
.word 0x3f23890e
.word 0xbfa71e98
.word 0x3f5583e7
.word 0x3dd99df6
.word 0xc0d32bf7
.word 0x3f338292
.word 0x3dd99df6
.word 0xc0d32bf7
.word 0x3f338292
.word 0x3dd99df6
.word 0xc0d32bf7
.word 0x3f338292
.word 0x3dd99df6
.word 0xc0d32bf7
.word 0x3f338292
.word 0x3dd99df6
.word 0xc0d32bf7
.word 0x3f338292
.word 0x3e9e642d
.word 0xbddd5980
.word 0x3d08f3dc
.word 0x3e9e642d
.word 0xbddd5980
.word 0x3d08f3dc
.word 0x3e9e642d
.word 0xbddd5980
.word 0x3d08f3dc
.word 0x3e9e642d
.word 0xbddd5980
.word 0x3d08f3dc
.word 0x3e9e642d
.word 0xbddd5980
.word 0x3d08f3dc
.word 0x3f4b9391
.word 0xbd980275
.word 0x3d71c326
.word 0x3f4b9391
.word 0xbd980275
.word 0x3d71c326
.word 0x3f4b9391
.word 0xbd980275
.word 0x3d71c326
.word 0x3f4b9391
.word 0xbd980275
.word 0x3d71c326
.word 0x3f4b9391
.word 0xbd980275
.word 0x3d71c326
.word 0x3eebeae6
.word 0xbf32fdff
.word 0x3ea4f367
.word 0x3eebeae6
.word 0xbf32fdff
.word 0x3ea4f367
.word 0x3eebeae6
.word 0xbf32fdff
.word 0x3ea4f367
.word 0x3eebeae6
.word 0xbf32fdff
.word 0x3ea4f367
.word 0x3eebeae6
.word 0xbf32fdff
.word 0x3ea4f367
.word 0x3f35f018
.word 0xbd5e0449
.word 0x3d1dc941
.word 0x3f35f018
.word 0xbd5e0449
.word 0x3d1dc941
.word 0x3f35f018
.word 0xbd5e0449
.word 0x3d1dc941
.word 0x3f35f018
.word 0xbd5e0449
.word 0x3d1dc941
.word 0x3f35f018
.word 0xbd5e0449
.word 0x3d1dc941
.word 0x3c90019b
.word 0xc0e843b3
.word 0x3e02a789
.word 0x3c90019b
.word 0xc0e843b3
.word 0x3e02a789
.word 0x3c90019b
.word 0xc0e843b3
.word 0x3e02a789
.word 0x3c90019b
.word 0xc0e843b3
.word 0x3e02a789
.word 0x3c90019b
.word 0xc0e843b3
.word 0x3e02a789
.word 0x3f4a6111
.word 0xbf7e0c8b
.word 0x3f48d639
.word 0x3f4a6111
.word 0xbf7e0c8b
.word 0x3f48d639
.word 0x3f4a6111
.word 0xbf7e0c8b
.word 0x3f48d639
.word 0x3f4a6111
.word 0xbf7e0c8b
.word 0x3f48d639
.word 0x3f4a6111
.word 0xbf7e0c8b
.word 0x3f48d639
.word 0x3f7f8bae
.word 0xbe03ea69
.word 0x3e03ae79
.word 0x3f7f8bae
.word 0xbe03ea69
.word 0x3e03ae79
.word 0x3f7f8bae
.word 0xbe03ea69
.word 0x3e03ae79
.word 0x3f7f8bae
.word 0xbe03ea69
.word 0x3e03ae79
.word 0x3f7f8bae
.word 0xbe03ea69
.word 0x3e03ae79
.word 0x3ec3dd43
.word 0xc0121a4f
.word 0x3f5f90a3
.word 0x3ec3dd43
.word 0xc0121a4f
.word 0x3f5f90a3
.word 0x3ec3dd43
.word 0xc0121a4f
.word 0x3f5f90a3
.word 0x3ec3dd43
.word 0xc0121a4f
.word 0x3f5f90a3
.word 0x3ec3dd43
.word 0xc0121a4f
.word 0x3f5f90a3
.word 0x3e4fb8b2
.word 0xc087dbf2
.word 0x3f5c79bd
.word 0x3e4fb8b2
.word 0xc087dbf2
.word 0x3f5c79bd
.word 0x3e4fb8b2
.word 0xc087dbf2
.word 0x3f5c79bd
.word 0x3e4fb8b2
.word 0xc087dbf2
.word 0x3f5c79bd
.word 0x3e4fb8b2
.word 0xc087dbf2
.word 0x3f5c79bd
.word 0x3e6fe5aa
.word 0xc065951d
.word 0x3f57242d
.word 0x3e6fe5aa
.word 0xc065951d
.word 0x3f57242d
.word 0x3e6fe5aa
.word 0xc065951d
.word 0x3f57242d
.word 0x3e6fe5aa
.word 0xc065951d
.word 0x3f57242d
.word 0x3e6fe5aa
.word 0xc065951d
.word 0x3f57242d
.word 0x3f3873d7
.word 0xbdedc7ad
.word 0x3dab531e
.word 0x3f3873d7
.word 0xbdedc7ad
.word 0x3dab531e
.word 0x3f3873d7
.word 0xbdedc7ad
.word 0x3dab531e
.word 0x3f3873d7
.word 0xbdedc7ad
.word 0x3dab531e
.word 0x3f3873d7
.word 0xbdedc7ad
.word 0x3dab531e
.word 0x3f7ca48c
.word 0xbf4b2e86
.word 0x3f488465
.word 0x3f7ca48c
.word 0xbf4b2e86
.word 0x3f488465
.word 0x3f7ca48c
.word 0xbf4b2e86
.word 0x3f488465
.word 0x3f7ca48c
.word 0xbf4b2e86
.word 0x3f488465
.word 0x3f7ca48c
.word 0xbf4b2e86
.word 0x3f488465
.word 0x3ee9982d
.word 0xbf6f10c7
.word 0x3eda2461
.word 0x3ee9982d
.word 0xbf6f10c7
.word 0x3eda2461
.word 0x3ee9982d
.word 0xbf6f10c7
.word 0x3eda2461
.word 0x3ee9982d
.word 0xbf6f10c7
.word 0x3eda2461
.word 0x3ee9982d
.word 0xbf6f10c7
.word 0x3eda2461
.word 0x3f07eb17
.word 0xbfb5a405
.word 0x3f40e09a
.word 0x3f07eb17
.word 0xbfb5a405
.word 0x3f40e09a
.word 0x3f07eb17
.word 0xbfb5a405
.word 0x3f40e09a
.word 0x3f07eb17
.word 0xbfb5a405
.word 0x3f40e09a
.word 0x3f07eb17
.word 0xbfb5a405
.word 0x3f40e09a
.word 0x3dcaf4ae
.word 0xc10f2d24
.word 0x3f6304ef
.word 0x3dcaf4ae
.word 0xc10f2d24
.word 0x3f6304ef
.word 0x3dcaf4ae
.word 0xc10f2d24
.word 0x3f6304ef
.word 0x3dcaf4ae
.word 0xc10f2d24
.word 0x3f6304ef
.word 0x3dcaf4ae
.word 0xc10f2d24
.word 0x3f6304ef
.word 0x3d6802c9
.word 0xc0c64ed6
.word 0x3eb3b99b
.word 0x3d6802c9
.word 0xc0c64ed6
.word 0x3eb3b99b
.word 0x3d6802c9
.word 0xc0c64ed6
.word 0x3eb3b99b
.word 0x3d6802c9
.word 0xc0c64ed6
.word 0x3eb3b99b
.word 0x3d6802c9
.word 0xc0c64ed6
.word 0x3eb3b99b
.word 0x3f78931d
.word 0xbf0ce316
.word 0x3f08ccf4
.word 0x3f78931d
.word 0xbf0ce316
.word 0x3f08ccf4
.word 0x3f78931d
.word 0xbf0ce316
.word 0x3f08ccf4
.word 0x3f78931d
.word 0xbf0ce316
.word 0x3f08ccf4
.word 0x3f78931d
.word 0xbf0ce316
.word 0x3f08ccf4
.word 0x3e852c03
.word 0xbe98e67e
.word 0x3d9f1412
.word 0x3e852c03
.word 0xbe98e67e
.word 0x3d9f1412
.word 0x3e852c03
.word 0xbe98e67e
.word 0x3d9f1412
.word 0x3e852c03
.word 0xbe98e67e
.word 0x3d9f1412
.word 0x3e852c03
.word 0xbe98e67e
.word 0x3d9f1412
.word 0x3e51b8c7
.word 0xbe8fdea9
.word 0x3d6bb940
.word 0x3e51b8c7
.word 0xbe8fdea9
.word 0x3d6bb940
.word 0x3e51b8c7
.word 0xbe8fdea9
.word 0x3d6bb940
.word 0x3e51b8c7
.word 0xbe8fdea9
.word 0x3d6bb940
.word 0x3e51b8c7
.word 0xbe8fdea9
.word 0x3d6bb940
.word 0x3ec11307
.word 0xbf2f4ae5
.word 0x3e84347e
.word 0x3ec11307
.word 0xbf2f4ae5
.word 0x3e84347e
.word 0x3ec11307
.word 0xbf2f4ae5
.word 0x3e84347e
.word 0x3ec11307
.word 0xbf2f4ae5
.word 0x3e84347e
.word 0x3ec11307
.word 0xbf2f4ae5
.word 0x3e84347e
.word 0x3f301bb2
.word 0xbf65aaff
.word 0x3f1dfe68
.word 0x3f301bb2
.word 0xbf65aaff
.word 0x3f1dfe68
.word 0x3f301bb2
.word 0xbf65aaff
.word 0x3f1dfe68
.word 0x3f2ec914
.word 0xbfb6678a
.word 0x3f79134b
.word 0x3f2ec914
.word 0xbfb6678a
.word 0x3f79134b
.word 0x3f2ec914
.word 0xbfb6678a
.word 0x3f79134b
.word 0x3f50b4e8
.word 0xbf3fd4a0
.word 0x3f1c6451
RVTEST_DATA_END

RVMODEL_DATA_BEGIN


signature_x15_0:
    .fill 0*(XLEN/32),4,0xdeadbeef


signature_x15_1:
    .fill 508*(XLEN/32),4,0xdeadbeef


signature_x15_2:
    .fill 508*(XLEN/32),4,0xdeadbeef


signature_x15_3:
    .fill 508*(XLEN/32),4,0xdeadbeef


signature_x15_4:
    .fill 508*(XLEN/32),4,0xdeadbeef


signature_x15_5:
    .fill 508*(XLEN/32),4,0xdeadbeef


signature_x15_6:
    .fill 508*(XLEN/32),4,0xdeadbeef


signature_x15_7:
    .fill 328*(XLEN/32),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*(XLEN/32),4,0xdeadbeef

#endif

RVMODEL_DATA_END
