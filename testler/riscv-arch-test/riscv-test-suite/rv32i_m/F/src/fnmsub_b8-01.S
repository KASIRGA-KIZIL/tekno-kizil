
// -----------
// This file was generated by riscv_ctg (https://gitlab.com/incoresemi/riscv-compliance/riscv_ctg)
// version   : 0.5.2
// timestamp : Tue Sep  7 16:08:13 2021 GMT
// usage     : riscv_ctg \
//                  -- cgf $cgf \
//                  -- xlen $xlen \
// -----------
//
// -----------
// Copyright (c) 2021. IIT Madras. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.s instruction of the RISC-V F extension for the fnmsub_b8 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fnmsub_b8)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x16,test_fp)
RVTEST_SIGBASE(x15,signature_x15_1)

inst_0:
// rs1 == rd != rs2 and rs1 == rd != rs3 and rs3 != rs2, rs1==f21, rs2==f1, rs3==f22, rd==f21, fs1 == 0 and fe1 == 0x7e and fm1 == 0x45f69a and fs2 == 1 and fe2 == 0x7a and fm2 == 0x47b766 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x1a7085 and rm_val == 0  
// opcode: fnmsub.s ; op1:f21; op2:f1; op3:f22; dest:f21; op1val:0x3f45f69a; op2val:0xbd47b766; op3val:0x3d1a7085; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f21, f21, f1, f22, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_1:
// rs3 == rd != rs1 and rs3 == rd != rs2 and rs2 != rs1, rs1==f25, rs2==f31, rs3==f26, rd==f26, fs1 == 0 and fe1 == 0x7e and fm1 == 0x381a34 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x04887b and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3e9f54 and rm_val == 4  
// opcode: fnmsub.s ; op1:f25; op2:f31; op3:f26; dest:f26; op1val:0x3f381a34; op2val:0xbf04887b; op3val:0x3ebe9f54; valaddr_reg:x16; val_offset:12; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f26, f25, f31, f26, 0x4, 0, x16, 12, x17, x15, 8, x18)

inst_2:
// rs1 != rs2 and rs1 != rd and rs1 != rs3 and rs2 != rs3 and rs2 != rd and rs3 != rd, rs1==f12, rs2==f13, rs3==f27, rd==f22, fs1 == 0 and fe1 == 0x7e and fm1 == 0x381a34 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x04887b and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3e9f54 and rm_val == 3  
// opcode: fnmsub.s ; op1:f12; op2:f13; op3:f27; dest:f22; op1val:0x3f381a34; op2val:0xbf04887b; op3val:0x3ebe9f54; valaddr_reg:x16; val_offset:24; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f22, f12, f13, f27, 0x3, 0, x16, 24, x17, x15, 16, x18)

inst_3:
// rs1 == rs2 != rs3 and rs1 == rs2 != rd and rd != rs3, rs1==f9, rs2==f9, rs3==f8, rd==f29, fs1 == 0 and fe1 == 0x7e and fm1 == 0x381a34 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x04887b and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3e9f54 and rm_val == 2  
// opcode: fnmsub.s ; op1:f9; op2:f9; op3:f8; dest:f29; op1val:0x3f381a34; op2val:0x3f381a34; op3val:0x3ebe9f54; valaddr_reg:x16; val_offset:36; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f29, f9, f9, f8, 0x2, 0, x16, 36, x17, x15, 24, x18)

inst_4:
// rs1 == rs2 == rs3 == rd, rs1==f4, rs2==f4, rs3==f4, rd==f4, fs1 == 0 and fe1 == 0x7e and fm1 == 0x381a34 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x04887b and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3e9f54 and rm_val == 1  
// opcode: fnmsub.s ; op1:f4; op2:f4; op3:f4; dest:f4; op1val:0x3f381a34; op2val:0x3f381a34; op3val:0x3f381a34; valaddr_reg:x16; val_offset:48; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f4, f4, f4, f4, 0x1, 0, x16, 48, x17, x15, 32, x18)

inst_5:
// rd == rs2 == rs3 != rs1, rs1==f23, rs2==f7, rs3==f7, rd==f7, fs1 == 0 and fe1 == 0x7e and fm1 == 0x381a34 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x04887b and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3e9f54 and rm_val == 0  
// opcode: fnmsub.s ; op1:f23; op2:f7; op3:f7; dest:f7; op1val:0x3f381a34; op2val:0xbf04887b; op3val:0xbf04887b; valaddr_reg:x16; val_offset:60; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f7, f23, f7, f7, 0x0, 0, x16, 60, x17, x15, 40, x18)

inst_6:
// rs1 == rs2 == rd != rs3, rs1==f2, rs2==f2, rs3==f1, rd==f2, fs1 == 0 and fe1 == 0x7b and fm1 == 0x29474d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e1a89 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7b68f0 and rm_val == 4  
// opcode: fnmsub.s ; op1:f2; op2:f2; op3:f1; dest:f2; op1val:0x3da9474d; op2val:0x3da9474d; op3val:0x3efb68f0; valaddr_reg:x16; val_offset:72; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f2, f2, f2, f1, 0x4, 0, x16, 72, x17, x15, 48, x18)

inst_7:
// rs1 == rs3 != rs2 and rs1 == rs3 != rd and rd != rs2, rs1==f0, rs2==f15, rs3==f0, rd==f23, fs1 == 0 and fe1 == 0x7b and fm1 == 0x29474d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e1a89 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7b68f0 and rm_val == 3  
// opcode: fnmsub.s ; op1:f0; op2:f15; op3:f0; dest:f23; op1val:0x3da9474d; op2val:0xc0be1a89; op3val:0x3da9474d; valaddr_reg:x16; val_offset:84; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f23, f0, f15, f0, 0x3, 0, x16, 84, x17, x15, 56, x18)

inst_8:
// rs2 == rs3 != rs1 and rs2 == rs3 != rd and rd != rs1, rs1==f31, rs2==f17, rs3==f17, rd==f8, fs1 == 0 and fe1 == 0x7b and fm1 == 0x29474d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e1a89 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7b68f0 and rm_val == 2  
// opcode: fnmsub.s ; op1:f31; op2:f17; op3:f17; dest:f8; op1val:0x3da9474d; op2val:0xc0be1a89; op3val:0xc0be1a89; valaddr_reg:x16; val_offset:96; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f8, f31, f17, f17, 0x2, 0, x16, 96, x17, x15, 64, x18)

inst_9:
// rs1 == rs2 == rs3 != rd, rs1==f28, rs2==f28, rs3==f28, rd==f30, fs1 == 0 and fe1 == 0x7b and fm1 == 0x29474d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e1a89 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7b68f0 and rm_val == 1  
// opcode: fnmsub.s ; op1:f28; op2:f28; op3:f28; dest:f30; op1val:0x3da9474d; op2val:0x3da9474d; op3val:0x3da9474d; valaddr_reg:x16; val_offset:108; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f30, f28, f28, f28, 0x1, 0, x16, 108, x17, x15, 72, x18)

inst_10:
// rs1 == rd == rs3 != rs2, rs1==f24, rs2==f10, rs3==f24, rd==f24, fs1 == 0 and fe1 == 0x7b and fm1 == 0x29474d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e1a89 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7b68f0 and rm_val == 0  
// opcode: fnmsub.s ; op1:f24; op2:f10; op3:f24; dest:f24; op1val:0x3da9474d; op2val:0xc0be1a89; op3val:0x3da9474d; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f24, f24, f10, f24, 0x0, 0, x16, 120, x17, x15, 80, x18)

inst_11:
// rs2 == rd != rs1 and rs2 == rd != rs3 and rs3 != rs1, rs1==f18, rs2==f5, rs3==f14, rd==f5, fs1 == 0 and fe1 == 0x79 and fm1 == 0x43fe9c and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2cfd14 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x0470d3 and rm_val == 4  
// opcode: fnmsub.s ; op1:f18; op2:f5; op3:f14; dest:f5; op1val:0x3cc3fe9c; op2val:0xc0acfd14; op3val:0x3e0470d3; valaddr_reg:x16; val_offset:132; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f5, f18, f5, f14, 0x4, 0, x16, 132, x17, x15, 88, x18)

inst_12:
// rs1==f3, rs2==f25, rs3==f6, rd==f18, fs1 == 0 and fe1 == 0x79 and fm1 == 0x43fe9c and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2cfd14 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x0470d3 and rm_val == 3  
// opcode: fnmsub.s ; op1:f3; op2:f25; op3:f6; dest:f18; op1val:0x3cc3fe9c; op2val:0xc0acfd14; op3val:0x3e0470d3; valaddr_reg:x16; val_offset:144; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f18, f3, f25, f6, 0x3, 0, x16, 144, x17, x15, 96, x18)

inst_13:
// rs1==f14, rs2==f12, rs3==f21, rd==f9, fs1 == 0 and fe1 == 0x79 and fm1 == 0x43fe9c and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2cfd14 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x0470d3 and rm_val == 2  
// opcode: fnmsub.s ; op1:f14; op2:f12; op3:f21; dest:f9; op1val:0x3cc3fe9c; op2val:0xc0acfd14; op3val:0x3e0470d3; valaddr_reg:x16; val_offset:156; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f9, f14, f12, f21, 0x2, 0, x16, 156, x17, x15, 104, x18)

inst_14:
// rs1==f17, rs2==f30, rs3==f9, rd==f25, fs1 == 0 and fe1 == 0x79 and fm1 == 0x43fe9c and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2cfd14 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x0470d3 and rm_val == 1  
// opcode: fnmsub.s ; op1:f17; op2:f30; op3:f9; dest:f25; op1val:0x3cc3fe9c; op2val:0xc0acfd14; op3val:0x3e0470d3; valaddr_reg:x16; val_offset:168; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f25, f17, f30, f9, 0x1, 0, x16, 168, x17, x15, 112, x18)

inst_15:
// rs1==f26, rs2==f18, rs3==f11, rd==f28, fs1 == 0 and fe1 == 0x79 and fm1 == 0x43fe9c and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2cfd14 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x0470d3 and rm_val == 0  
// opcode: fnmsub.s ; op1:f26; op2:f18; op3:f11; dest:f28; op1val:0x3cc3fe9c; op2val:0xc0acfd14; op3val:0x3e0470d3; valaddr_reg:x16; val_offset:180; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f28, f26, f18, f11, 0x0, 0, x16, 180, x17, x15, 120, x18)

inst_16:
// rs1==f16, rs2==f3, rs3==f13, rd==f14, fs1 == 0 and fe1 == 0x7e and fm1 == 0x242285 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x372b46 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6ae0d9 and rm_val == 4  
// opcode: fnmsub.s ; op1:f16; op2:f3; op3:f13; dest:f14; op1val:0x3f242285; op2val:0xbfb72b46; op3val:0x3f6ae0d9; valaddr_reg:x16; val_offset:192; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f14, f16, f3, f13, 0x4, 0, x16, 192, x17, x15, 128, x18)

inst_17:
// rs1==f5, rs2==f0, rs3==f19, rd==f31, fs1 == 0 and fe1 == 0x7e and fm1 == 0x242285 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x372b46 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6ae0d9 and rm_val == 3  
// opcode: fnmsub.s ; op1:f5; op2:f0; op3:f19; dest:f31; op1val:0x3f242285; op2val:0xbfb72b46; op3val:0x3f6ae0d9; valaddr_reg:x16; val_offset:204; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f31, f5, f0, f19, 0x3, 0, x16, 204, x17, x15, 136, x18)

inst_18:
// rs1==f15, rs2==f24, rs3==f2, rd==f3, fs1 == 0 and fe1 == 0x7e and fm1 == 0x242285 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x372b46 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6ae0d9 and rm_val == 2  
// opcode: fnmsub.s ; op1:f15; op2:f24; op3:f2; dest:f3; op1val:0x3f242285; op2val:0xbfb72b46; op3val:0x3f6ae0d9; valaddr_reg:x16; val_offset:216; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f3, f15, f24, f2, 0x2, 0, x16, 216, x17, x15, 144, x18)

inst_19:
// rs1==f27, rs2==f19, rs3==f30, rd==f10, fs1 == 0 and fe1 == 0x7e and fm1 == 0x242285 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x372b46 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6ae0d9 and rm_val == 1  
// opcode: fnmsub.s ; op1:f27; op2:f19; op3:f30; dest:f10; op1val:0x3f242285; op2val:0xbfb72b46; op3val:0x3f6ae0d9; valaddr_reg:x16; val_offset:228; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f10, f27, f19, f30, 0x1, 0, x16, 228, x17, x15, 152, x18)

inst_20:
// rs1==f13, rs2==f20, rs3==f16, rd==f27, fs1 == 0 and fe1 == 0x7e and fm1 == 0x242285 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x372b46 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6ae0d9 and rm_val == 0  
// opcode: fnmsub.s ; op1:f13; op2:f20; op3:f16; dest:f27; op1val:0x3f242285; op2val:0xbfb72b46; op3val:0x3f6ae0d9; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f27, f13, f20, f16, 0x0, 0, x16, 240, x17, x15, 160, x18)

inst_21:
// rs1==f29, rs2==f27, rs3==f31, rd==f15, fs1 == 0 and fe1 == 0x7c and fm1 == 0x4bee4d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x58d77c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2cbcba and rm_val == 4  
// opcode: fnmsub.s ; op1:f29; op2:f27; op3:f31; dest:f15; op1val:0x3e4bee4d; op2val:0xbfd8d77c; op3val:0x3eacbcba; valaddr_reg:x16; val_offset:252; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f15, f29, f27, f31, 0x4, 0, x16, 252, x17, x15, 168, x18)

inst_22:
// rs1==f10, rs2==f26, rs3==f3, rd==f11, fs1 == 0 and fe1 == 0x7c and fm1 == 0x4bee4d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x58d77c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2cbcba and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f26; op3:f3; dest:f11; op1val:0x3e4bee4d; op2val:0xbfd8d77c; op3val:0x3eacbcba; valaddr_reg:x16; val_offset:264; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f11, f10, f26, f3, 0x3, 0, x16, 264, x17, x15, 176, x18)

inst_23:
// rs1==f7, rs2==f14, rs3==f10, rd==f19, fs1 == 0 and fe1 == 0x7c and fm1 == 0x4bee4d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x58d77c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2cbcba and rm_val == 2  
// opcode: fnmsub.s ; op1:f7; op2:f14; op3:f10; dest:f19; op1val:0x3e4bee4d; op2val:0xbfd8d77c; op3val:0x3eacbcba; valaddr_reg:x16; val_offset:276; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f19, f7, f14, f10, 0x2, 0, x16, 276, x17, x15, 184, x18)

inst_24:
// rs1==f19, rs2==f6, rs3==f5, rd==f13, fs1 == 0 and fe1 == 0x7c and fm1 == 0x4bee4d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x58d77c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2cbcba and rm_val == 1  
// opcode: fnmsub.s ; op1:f19; op2:f6; op3:f5; dest:f13; op1val:0x3e4bee4d; op2val:0xbfd8d77c; op3val:0x3eacbcba; valaddr_reg:x16; val_offset:288; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f19, f6, f5, 0x1, 0, x16, 288, x17, x15, 192, x18)

inst_25:
// rs1==f6, rs2==f11, rs3==f29, rd==f20, fs1 == 0 and fe1 == 0x7c and fm1 == 0x4bee4d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x58d77c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2cbcba and rm_val == 0  
// opcode: fnmsub.s ; op1:f6; op2:f11; op3:f29; dest:f20; op1val:0x3e4bee4d; op2val:0xbfd8d77c; op3val:0x3eacbcba; valaddr_reg:x16; val_offset:300; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f20, f6, f11, f29, 0x0, 0, x16, 300, x17, x15, 200, x18)

inst_26:
// rs1==f20, rs2==f22, rs3==f23, rd==f16, fs1 == 0 and fe1 == 0x7e and fm1 == 0x237157 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x3b26d4 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x6ef92a and rm_val == 4  
// opcode: fnmsub.s ; op1:f20; op2:f22; op3:f23; dest:f16; op1val:0x3f237157; op2val:0xbe3b26d4; op3val:0x3deef92a; valaddr_reg:x16; val_offset:312; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f16, f20, f22, f23, 0x4, 0, x16, 312, x17, x15, 208, x18)

inst_27:
// rs1==f1, rs2==f16, rs3==f15, rd==f17, fs1 == 0 and fe1 == 0x7e and fm1 == 0x237157 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x3b26d4 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x6ef92a and rm_val == 3  
// opcode: fnmsub.s ; op1:f1; op2:f16; op3:f15; dest:f17; op1val:0x3f237157; op2val:0xbe3b26d4; op3val:0x3deef92a; valaddr_reg:x16; val_offset:324; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f17, f1, f16, f15, 0x3, 0, x16, 324, x17, x15, 216, x18)

inst_28:
// rs1==f30, rs2==f29, rs3==f12, rd==f0, fs1 == 0 and fe1 == 0x7e and fm1 == 0x237157 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x3b26d4 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x6ef92a and rm_val == 2  
// opcode: fnmsub.s ; op1:f30; op2:f29; op3:f12; dest:f0; op1val:0x3f237157; op2val:0xbe3b26d4; op3val:0x3deef92a; valaddr_reg:x16; val_offset:336; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f0, f30, f29, f12, 0x2, 0, x16, 336, x17, x15, 224, x18)

inst_29:
// rs1==f11, rs2==f8, rs3==f18, rd==f1, fs1 == 0 and fe1 == 0x7e and fm1 == 0x237157 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x3b26d4 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x6ef92a and rm_val == 1  
// opcode: fnmsub.s ; op1:f11; op2:f8; op3:f18; dest:f1; op1val:0x3f237157; op2val:0xbe3b26d4; op3val:0x3deef92a; valaddr_reg:x16; val_offset:348; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f1, f11, f8, f18, 0x1, 0, x16, 348, x17, x15, 232, x18)

inst_30:
// rs1==f8, rs2==f21, rs3==f25, rd==f12, fs1 == 0 and fe1 == 0x7e and fm1 == 0x237157 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x3b26d4 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x6ef92a and rm_val == 0  
// opcode: fnmsub.s ; op1:f8; op2:f21; op3:f25; dest:f12; op1val:0x3f237157; op2val:0xbe3b26d4; op3val:0x3deef92a; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f12, f8, f21, f25, 0x0, 0, x16, 360, x17, x15, 240, x18)

inst_31:
// rs1==f22, rs2==f23, rs3==f20, rd==f6, fs1 == 0 and fe1 == 0x7e and fm1 == 0x5cd914 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x58de2b and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3b16d3 and rm_val == 4  
// opcode: fnmsub.s ; op1:f22; op2:f23; op3:f20; dest:f6; op1val:0x3f5cd914; op2val:0xbe58de2b; op3val:0x3e3b16d3; valaddr_reg:x16; val_offset:372; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f6, f22, f23, f20, 0x4, 0, x16, 372, x17, x15, 248, x18)

inst_32:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5cd914 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x58de2b and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3b16d3 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5cd914; op2val:0xbe58de2b; op3val:0x3e3b16d3; valaddr_reg:x16; val_offset:384; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 384, x17, x15, 256, x18)

inst_33:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5cd914 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x58de2b and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3b16d3 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5cd914; op2val:0xbe58de2b; op3val:0x3e3b16d3; valaddr_reg:x16; val_offset:396; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 396, x17, x15, 264, x18)

inst_34:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5cd914 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x58de2b and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3b16d3 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5cd914; op2val:0xbe58de2b; op3val:0x3e3b16d3; valaddr_reg:x16; val_offset:408; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 408, x17, x15, 272, x18)

inst_35:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5cd914 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x58de2b and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3b16d3 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5cd914; op2val:0xbe58de2b; op3val:0x3e3b16d3; valaddr_reg:x16; val_offset:420; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 420, x17, x15, 280, x18)

inst_36:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0e3130 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4f4fb0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x664c12 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8e3130; op2val:0xc04f4fb0; op3val:0x3f664c12; valaddr_reg:x16; val_offset:432; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 432, x17, x15, 288, x18)

inst_37:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0e3130 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4f4fb0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x664c12 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8e3130; op2val:0xc04f4fb0; op3val:0x3f664c12; valaddr_reg:x16; val_offset:444; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 444, x17, x15, 296, x18)

inst_38:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0e3130 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4f4fb0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x664c12 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8e3130; op2val:0xc04f4fb0; op3val:0x3f664c12; valaddr_reg:x16; val_offset:456; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 456, x17, x15, 304, x18)

inst_39:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0e3130 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4f4fb0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x664c12 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8e3130; op2val:0xc04f4fb0; op3val:0x3f664c12; valaddr_reg:x16; val_offset:468; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 468, x17, x15, 312, x18)

inst_40:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0e3130 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4f4fb0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x664c12 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8e3130; op2val:0xc04f4fb0; op3val:0x3f664c12; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 320, x18)

inst_41:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7294e7 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x04c2e0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7b9ae1 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7294e7; op2val:0xbf84c2e0; op3val:0x3f7b9ae1; valaddr_reg:x16; val_offset:492; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 492, x17, x15, 328, x18)

inst_42:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7294e7 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x04c2e0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7b9ae1 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7294e7; op2val:0xbf84c2e0; op3val:0x3f7b9ae1; valaddr_reg:x16; val_offset:504; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 504, x17, x15, 336, x18)

inst_43:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7294e7 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x04c2e0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7b9ae1 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7294e7; op2val:0xbf84c2e0; op3val:0x3f7b9ae1; valaddr_reg:x16; val_offset:516; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 516, x17, x15, 344, x18)

inst_44:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7294e7 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x04c2e0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7b9ae1 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7294e7; op2val:0xbf84c2e0; op3val:0x3f7b9ae1; valaddr_reg:x16; val_offset:528; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 528, x17, x15, 352, x18)

inst_45:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7294e7 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x04c2e0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7b9ae1 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7294e7; op2val:0xbf84c2e0; op3val:0x3f7b9ae1; valaddr_reg:x16; val_offset:540; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 540, x17, x15, 360, x18)

inst_46:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x68c9c6 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x0b16d9 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x7cf4ac and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee8c9c6; op2val:0xbe0b16d9; op3val:0x3d7cf4ac; valaddr_reg:x16; val_offset:552; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 552, x17, x15, 368, x18)

inst_47:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x68c9c6 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x0b16d9 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x7cf4ac and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee8c9c6; op2val:0xbe0b16d9; op3val:0x3d7cf4ac; valaddr_reg:x16; val_offset:564; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 564, x17, x15, 376, x18)

inst_48:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x68c9c6 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x0b16d9 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x7cf4ac and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee8c9c6; op2val:0xbe0b16d9; op3val:0x3d7cf4ac; valaddr_reg:x16; val_offset:576; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 576, x17, x15, 384, x18)

inst_49:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x68c9c6 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x0b16d9 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x7cf4ac and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee8c9c6; op2val:0xbe0b16d9; op3val:0x3d7cf4ac; valaddr_reg:x16; val_offset:588; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 588, x17, x15, 392, x18)

inst_50:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x68c9c6 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x0b16d9 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x7cf4ac and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee8c9c6; op2val:0xbe0b16d9; op3val:0x3d7cf4ac; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 400, x18)

inst_51:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3e66ec and fs2 == 1 and fe2 == 0x7f and fm2 == 0x01afef and fs3 == 0 and fe3 == 0x7d and fm3 == 0x40e970 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ebe66ec; op2val:0xbf81afef; op3val:0x3ec0e970; valaddr_reg:x16; val_offset:612; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 612, x17, x15, 408, x18)

inst_52:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3e66ec and fs2 == 1 and fe2 == 0x7f and fm2 == 0x01afef and fs3 == 0 and fe3 == 0x7d and fm3 == 0x40e970 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ebe66ec; op2val:0xbf81afef; op3val:0x3ec0e970; valaddr_reg:x16; val_offset:624; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 624, x17, x15, 416, x18)

inst_53:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3e66ec and fs2 == 1 and fe2 == 0x7f and fm2 == 0x01afef and fs3 == 0 and fe3 == 0x7d and fm3 == 0x40e970 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ebe66ec; op2val:0xbf81afef; op3val:0x3ec0e970; valaddr_reg:x16; val_offset:636; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 636, x17, x15, 424, x18)

inst_54:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3e66ec and fs2 == 1 and fe2 == 0x7f and fm2 == 0x01afef and fs3 == 0 and fe3 == 0x7d and fm3 == 0x40e970 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ebe66ec; op2val:0xbf81afef; op3val:0x3ec0e970; valaddr_reg:x16; val_offset:648; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 648, x17, x15, 432, x18)

inst_55:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3e66ec and fs2 == 1 and fe2 == 0x7f and fm2 == 0x01afef and fs3 == 0 and fe3 == 0x7d and fm3 == 0x40e970 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ebe66ec; op2val:0xbf81afef; op3val:0x3ec0e970; valaddr_reg:x16; val_offset:660; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 660, x17, x15, 440, x18)

inst_56:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x186763 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4e2d8c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x757ca0 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e986763; op2val:0xc04e2d8c; op3val:0x3f757ca0; valaddr_reg:x16; val_offset:672; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 672, x17, x15, 448, x18)

inst_57:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x186763 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4e2d8c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x757ca0 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e986763; op2val:0xc04e2d8c; op3val:0x3f757ca0; valaddr_reg:x16; val_offset:684; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 684, x17, x15, 456, x18)

inst_58:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x186763 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4e2d8c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x757ca0 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e986763; op2val:0xc04e2d8c; op3val:0x3f757ca0; valaddr_reg:x16; val_offset:696; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 696, x17, x15, 464, x18)

inst_59:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x186763 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4e2d8c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x757ca0 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e986763; op2val:0xc04e2d8c; op3val:0x3f757ca0; valaddr_reg:x16; val_offset:708; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 708, x17, x15, 472, x18)

inst_60:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x186763 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4e2d8c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x757ca0 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e986763; op2val:0xc04e2d8c; op3val:0x3f757ca0; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 480, x18)

inst_61:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0cca0b and fs2 == 1 and fe2 == 0x78 and fm2 == 0x44f350 and fs3 == 0 and fe3 == 0x76 and fm3 == 0x58a101 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8cca0b; op2val:0xbc44f350; op3val:0x3b58a101; valaddr_reg:x16; val_offset:732; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 732, x17, x15, 488, x18)

inst_62:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0cca0b and fs2 == 1 and fe2 == 0x78 and fm2 == 0x44f350 and fs3 == 0 and fe3 == 0x76 and fm3 == 0x58a101 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8cca0b; op2val:0xbc44f350; op3val:0x3b58a101; valaddr_reg:x16; val_offset:744; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 744, x17, x15, 496, x18)

inst_63:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0cca0b and fs2 == 1 and fe2 == 0x78 and fm2 == 0x44f350 and fs3 == 0 and fe3 == 0x76 and fm3 == 0x58a101 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8cca0b; op2val:0xbc44f350; op3val:0x3b58a101; valaddr_reg:x16; val_offset:756; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 756, x17, x15, 504, x18)

inst_64:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0cca0b and fs2 == 1 and fe2 == 0x78 and fm2 == 0x44f350 and fs3 == 0 and fe3 == 0x76 and fm3 == 0x58a101 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8cca0b; op2val:0xbc44f350; op3val:0x3b58a101; valaddr_reg:x16; val_offset:768; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 768, x17, x15, 512, x18)

inst_65:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0cca0b and fs2 == 1 and fe2 == 0x78 and fm2 == 0x44f350 and fs3 == 0 and fe3 == 0x76 and fm3 == 0x58a101 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8cca0b; op2val:0xbc44f350; op3val:0x3b58a101; valaddr_reg:x16; val_offset:780; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 780, x17, x15, 520, x18)

inst_66:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x332c1b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5230a7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x131c3b and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb32c1b; op2val:0xbfd230a7; op3val:0x3f131c3b; valaddr_reg:x16; val_offset:792; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 792, x17, x15, 528, x18)

inst_67:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x332c1b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5230a7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x131c3b and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb32c1b; op2val:0xbfd230a7; op3val:0x3f131c3b; valaddr_reg:x16; val_offset:804; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 804, x17, x15, 536, x18)

inst_68:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x332c1b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5230a7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x131c3b and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb32c1b; op2val:0xbfd230a7; op3val:0x3f131c3b; valaddr_reg:x16; val_offset:816; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 816, x17, x15, 544, x18)

inst_69:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x332c1b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5230a7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x131c3b and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb32c1b; op2val:0xbfd230a7; op3val:0x3f131c3b; valaddr_reg:x16; val_offset:828; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 828, x17, x15, 552, x18)

inst_70:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x332c1b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5230a7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x131c3b and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb32c1b; op2val:0xbfd230a7; op3val:0x3f131c3b; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 560, x18)

inst_71:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x616be7 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5c597c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x420786 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee16be7; op2val:0xbf5c597c; op3val:0x3ec20786; valaddr_reg:x16; val_offset:852; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 852, x17, x15, 568, x18)

inst_72:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x616be7 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5c597c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x420786 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee16be7; op2val:0xbf5c597c; op3val:0x3ec20786; valaddr_reg:x16; val_offset:864; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 864, x17, x15, 576, x18)

inst_73:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x616be7 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5c597c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x420786 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee16be7; op2val:0xbf5c597c; op3val:0x3ec20786; valaddr_reg:x16; val_offset:876; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 876, x17, x15, 584, x18)

inst_74:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x616be7 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5c597c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x420786 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee16be7; op2val:0xbf5c597c; op3val:0x3ec20786; valaddr_reg:x16; val_offset:888; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 888, x17, x15, 592, x18)

inst_75:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x616be7 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5c597c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x420786 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee16be7; op2val:0xbf5c597c; op3val:0x3ec20786; valaddr_reg:x16; val_offset:900; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 900, x17, x15, 600, x18)

inst_76:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x57a1cc and fs2 == 1 and fe2 == 0x80 and fm2 == 0x088566 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x65fca3 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed7a1cc; op2val:0xc0088566; op3val:0x3f65fca3; valaddr_reg:x16; val_offset:912; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 912, x17, x15, 608, x18)

inst_77:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x57a1cc and fs2 == 1 and fe2 == 0x80 and fm2 == 0x088566 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x65fca3 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed7a1cc; op2val:0xc0088566; op3val:0x3f65fca3; valaddr_reg:x16; val_offset:924; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 924, x17, x15, 616, x18)

inst_78:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x57a1cc and fs2 == 1 and fe2 == 0x80 and fm2 == 0x088566 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x65fca3 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed7a1cc; op2val:0xc0088566; op3val:0x3f65fca3; valaddr_reg:x16; val_offset:936; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 936, x17, x15, 624, x18)

inst_79:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x57a1cc and fs2 == 1 and fe2 == 0x80 and fm2 == 0x088566 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x65fca3 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed7a1cc; op2val:0xc0088566; op3val:0x3f65fca3; valaddr_reg:x16; val_offset:948; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 948, x17, x15, 632, x18)

inst_80:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x57a1cc and fs2 == 1 and fe2 == 0x80 and fm2 == 0x088566 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x65fca3 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed7a1cc; op2val:0xc0088566; op3val:0x3f65fca3; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 640, x18)

inst_81:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x276a83 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0dfc5c and fs3 == 0 and fe3 == 0x7b and fm3 == 0x39b568 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ca76a83; op2val:0xc08dfc5c; op3val:0x3db9b568; valaddr_reg:x16; val_offset:972; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 972, x17, x15, 648, x18)

inst_82:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x276a83 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0dfc5c and fs3 == 0 and fe3 == 0x7b and fm3 == 0x39b568 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ca76a83; op2val:0xc08dfc5c; op3val:0x3db9b568; valaddr_reg:x16; val_offset:984; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 984, x17, x15, 656, x18)

inst_83:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x276a83 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0dfc5c and fs3 == 0 and fe3 == 0x7b and fm3 == 0x39b568 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ca76a83; op2val:0xc08dfc5c; op3val:0x3db9b568; valaddr_reg:x16; val_offset:996; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 996, x17, x15, 664, x18)

inst_84:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x276a83 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0dfc5c and fs3 == 0 and fe3 == 0x7b and fm3 == 0x39b568 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ca76a83; op2val:0xc08dfc5c; op3val:0x3db9b568; valaddr_reg:x16; val_offset:1008; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1008, x17, x15, 672, x18)

inst_85:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x276a83 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0dfc5c and fs3 == 0 and fe3 == 0x7b and fm3 == 0x39b568 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ca76a83; op2val:0xc08dfc5c; op3val:0x3db9b568; valaddr_reg:x16; val_offset:1020; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1020, x17, x15, 680, x18)

inst_86:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x09db5b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x240f70 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x30b1ad and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e89db5b; op2val:0xc0240f70; op3val:0x3f30b1ad; valaddr_reg:x16; val_offset:1032; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1032, x17, x15, 688, x18)

inst_87:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x09db5b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x240f70 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x30b1ad and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e89db5b; op2val:0xc0240f70; op3val:0x3f30b1ad; valaddr_reg:x16; val_offset:1044; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1044, x17, x15, 696, x18)

inst_88:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x09db5b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x240f70 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x30b1ad and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e89db5b; op2val:0xc0240f70; op3val:0x3f30b1ad; valaddr_reg:x16; val_offset:1056; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1056, x17, x15, 704, x18)

inst_89:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x09db5b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x240f70 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x30b1ad and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e89db5b; op2val:0xc0240f70; op3val:0x3f30b1ad; valaddr_reg:x16; val_offset:1068; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1068, x17, x15, 712, x18)

inst_90:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x09db5b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x240f70 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x30b1ad and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e89db5b; op2val:0xc0240f70; op3val:0x3f30b1ad; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 720, x18)

inst_91:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x00ce56 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x29459c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2a567b and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f00ce56; op2val:0xbfa9459c; op3val:0x3f2a567b; valaddr_reg:x16; val_offset:1092; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1092, x17, x15, 728, x18)

inst_92:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x00ce56 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x29459c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2a567b and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f00ce56; op2val:0xbfa9459c; op3val:0x3f2a567b; valaddr_reg:x16; val_offset:1104; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1104, x17, x15, 736, x18)

inst_93:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x00ce56 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x29459c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2a567b and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f00ce56; op2val:0xbfa9459c; op3val:0x3f2a567b; valaddr_reg:x16; val_offset:1116; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1116, x17, x15, 744, x18)

inst_94:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x00ce56 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x29459c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2a567b and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f00ce56; op2val:0xbfa9459c; op3val:0x3f2a567b; valaddr_reg:x16; val_offset:1128; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1128, x17, x15, 752, x18)

inst_95:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x00ce56 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x29459c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2a567b and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f00ce56; op2val:0xbfa9459c; op3val:0x3f2a567b; valaddr_reg:x16; val_offset:1140; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1140, x17, x15, 760, x18)

inst_96:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6cdeb3 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1a768e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0eebaa and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6cdeb3; op2val:0xbf1a768e; op3val:0x3f0eebaa; valaddr_reg:x16; val_offset:1152; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1152, x17, x15, 768, x18)

inst_97:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6cdeb3 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1a768e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0eebaa and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6cdeb3; op2val:0xbf1a768e; op3val:0x3f0eebaa; valaddr_reg:x16; val_offset:1164; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1164, x17, x15, 776, x18)

inst_98:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6cdeb3 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1a768e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0eebaa and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6cdeb3; op2val:0xbf1a768e; op3val:0x3f0eebaa; valaddr_reg:x16; val_offset:1176; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1176, x17, x15, 784, x18)

inst_99:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6cdeb3 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1a768e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0eebaa and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6cdeb3; op2val:0xbf1a768e; op3val:0x3f0eebaa; valaddr_reg:x16; val_offset:1188; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1188, x17, x15, 792, x18)

inst_100:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6cdeb3 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1a768e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0eebaa and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6cdeb3; op2val:0xbf1a768e; op3val:0x3f0eebaa; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 800, x18)

inst_101:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0f4a19 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2298f9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x360507 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0f4a19; op2val:0xbfa298f9; op3val:0x3f360507; valaddr_reg:x16; val_offset:1212; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1212, x17, x15, 808, x18)

inst_102:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0f4a19 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2298f9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x360507 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0f4a19; op2val:0xbfa298f9; op3val:0x3f360507; valaddr_reg:x16; val_offset:1224; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1224, x17, x15, 816, x18)

inst_103:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0f4a19 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2298f9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x360507 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0f4a19; op2val:0xbfa298f9; op3val:0x3f360507; valaddr_reg:x16; val_offset:1236; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1236, x17, x15, 824, x18)

inst_104:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0f4a19 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2298f9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x360507 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0f4a19; op2val:0xbfa298f9; op3val:0x3f360507; valaddr_reg:x16; val_offset:1248; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1248, x17, x15, 832, x18)

inst_105:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0f4a19 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2298f9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x360507 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0f4a19; op2val:0xbfa298f9; op3val:0x3f360507; valaddr_reg:x16; val_offset:1260; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1260, x17, x15, 840, x18)

inst_106:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x145d7e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0752c9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1cda90 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d945d7e; op2val:0xc10752c9; op3val:0x3f1cda90; valaddr_reg:x16; val_offset:1272; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1272, x17, x15, 848, x18)

inst_107:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x145d7e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0752c9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1cda90 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d945d7e; op2val:0xc10752c9; op3val:0x3f1cda90; valaddr_reg:x16; val_offset:1284; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1284, x17, x15, 856, x18)

inst_108:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x145d7e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0752c9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1cda90 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d945d7e; op2val:0xc10752c9; op3val:0x3f1cda90; valaddr_reg:x16; val_offset:1296; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1296, x17, x15, 864, x18)

inst_109:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x145d7e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0752c9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1cda90 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d945d7e; op2val:0xc10752c9; op3val:0x3f1cda90; valaddr_reg:x16; val_offset:1308; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1308, x17, x15, 872, x18)

inst_110:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x145d7e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0752c9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1cda90 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d945d7e; op2val:0xc10752c9; op3val:0x3f1cda90; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 880, x18)

inst_111:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5a6ec8 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x558318 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x362e08 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5a6ec8; op2val:0xbf558318; op3val:0x3f362e08; valaddr_reg:x16; val_offset:1332; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1332, x17, x15, 888, x18)

inst_112:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5a6ec8 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x558318 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x362e08 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5a6ec8; op2val:0xbf558318; op3val:0x3f362e08; valaddr_reg:x16; val_offset:1344; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1344, x17, x15, 896, x18)

inst_113:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5a6ec8 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x558318 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x362e08 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5a6ec8; op2val:0xbf558318; op3val:0x3f362e08; valaddr_reg:x16; val_offset:1356; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1356, x17, x15, 904, x18)

inst_114:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5a6ec8 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x558318 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x362e08 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5a6ec8; op2val:0xbf558318; op3val:0x3f362e08; valaddr_reg:x16; val_offset:1368; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1368, x17, x15, 912, x18)

inst_115:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5a6ec8 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x558318 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x362e08 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5a6ec8; op2val:0xbf558318; op3val:0x3f362e08; valaddr_reg:x16; val_offset:1380; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1380, x17, x15, 920, x18)

inst_116:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x1a7610 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x324fef and fs3 == 0 and fe3 == 0x7e and fm3 == 0x572ca5 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e1a7610; op2val:0xc0b24fef; op3val:0x3f572ca5; valaddr_reg:x16; val_offset:1392; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1392, x17, x15, 928, x18)

inst_117:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x1a7610 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x324fef and fs3 == 0 and fe3 == 0x7e and fm3 == 0x572ca5 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e1a7610; op2val:0xc0b24fef; op3val:0x3f572ca5; valaddr_reg:x16; val_offset:1404; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1404, x17, x15, 936, x18)

inst_118:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x1a7610 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x324fef and fs3 == 0 and fe3 == 0x7e and fm3 == 0x572ca5 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e1a7610; op2val:0xc0b24fef; op3val:0x3f572ca5; valaddr_reg:x16; val_offset:1416; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1416, x17, x15, 944, x18)

inst_119:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x1a7610 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x324fef and fs3 == 0 and fe3 == 0x7e and fm3 == 0x572ca5 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e1a7610; op2val:0xc0b24fef; op3val:0x3f572ca5; valaddr_reg:x16; val_offset:1428; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1428, x17, x15, 952, x18)

inst_120:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x1a7610 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x324fef and fs3 == 0 and fe3 == 0x7e and fm3 == 0x572ca5 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e1a7610; op2val:0xc0b24fef; op3val:0x3f572ca5; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 960, x18)

inst_121:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x4927b6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x7dc307 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x47657e and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dc927b6; op2val:0xc0fdc307; op3val:0x3f47657e; valaddr_reg:x16; val_offset:1452; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1452, x17, x15, 968, x18)

inst_122:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x4927b6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x7dc307 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x47657e and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dc927b6; op2val:0xc0fdc307; op3val:0x3f47657e; valaddr_reg:x16; val_offset:1464; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1464, x17, x15, 976, x18)

inst_123:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x4927b6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x7dc307 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x47657e and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dc927b6; op2val:0xc0fdc307; op3val:0x3f47657e; valaddr_reg:x16; val_offset:1476; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1476, x17, x15, 984, x18)

inst_124:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x4927b6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x7dc307 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x47657e and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dc927b6; op2val:0xc0fdc307; op3val:0x3f47657e; valaddr_reg:x16; val_offset:1488; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1488, x17, x15, 992, x18)

inst_125:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x4927b6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x7dc307 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x47657e and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dc927b6; op2val:0xc0fdc307; op3val:0x3f47657e; valaddr_reg:x16; val_offset:1500; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1500, x17, x15, 1000, x18)

inst_126:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x2b7908 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x1bf385 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x50eacb and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dab7908; op2val:0xc09bf385; op3val:0x3ed0eacb; valaddr_reg:x16; val_offset:1512; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1512, x17, x15, 1008, x18)

inst_127:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x2b7908 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x1bf385 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x50eacb and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dab7908; op2val:0xc09bf385; op3val:0x3ed0eacb; valaddr_reg:x16; val_offset:1524; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1524, x17, x15, 1016, x18)

inst_128:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x2b7908 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x1bf385 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x50eacb and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dab7908; op2val:0xc09bf385; op3val:0x3ed0eacb; valaddr_reg:x16; val_offset:1536; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1536, x17, x15, 1024, x18)

inst_129:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x2b7908 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x1bf385 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x50eacb and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dab7908; op2val:0xc09bf385; op3val:0x3ed0eacb; valaddr_reg:x16; val_offset:1548; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1548, x17, x15, 1032, x18)

inst_130:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x2b7908 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x1bf385 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x50eacb and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dab7908; op2val:0xc09bf385; op3val:0x3ed0eacb; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1040, x18)

inst_131:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3322c2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0ebfc4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x47c6f0 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3322c2; op2val:0xbf8ebfc4; op3val:0x3f47c6f0; valaddr_reg:x16; val_offset:1572; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1572, x17, x15, 1048, x18)

inst_132:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3322c2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0ebfc4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x47c6f0 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3322c2; op2val:0xbf8ebfc4; op3val:0x3f47c6f0; valaddr_reg:x16; val_offset:1584; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1584, x17, x15, 1056, x18)

inst_133:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3322c2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0ebfc4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x47c6f0 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3322c2; op2val:0xbf8ebfc4; op3val:0x3f47c6f0; valaddr_reg:x16; val_offset:1596; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1596, x17, x15, 1064, x18)

inst_134:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3322c2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0ebfc4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x47c6f0 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3322c2; op2val:0xbf8ebfc4; op3val:0x3f47c6f0; valaddr_reg:x16; val_offset:1608; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1608, x17, x15, 1072, x18)

inst_135:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3322c2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0ebfc4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x47c6f0 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3322c2; op2val:0xbf8ebfc4; op3val:0x3f47c6f0; valaddr_reg:x16; val_offset:1620; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1620, x17, x15, 1080, x18)

inst_136:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x121441 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x5195c2 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x6f2ffc and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e121441; op2val:0xbed195c2; op3val:0x3d6f2ffc; valaddr_reg:x16; val_offset:1632; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1632, x17, x15, 1088, x18)

inst_137:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x121441 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x5195c2 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x6f2ffc and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e121441; op2val:0xbed195c2; op3val:0x3d6f2ffc; valaddr_reg:x16; val_offset:1644; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1644, x17, x15, 1096, x18)

inst_138:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x121441 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x5195c2 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x6f2ffc and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e121441; op2val:0xbed195c2; op3val:0x3d6f2ffc; valaddr_reg:x16; val_offset:1656; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1656, x17, x15, 1104, x18)

inst_139:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x121441 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x5195c2 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x6f2ffc and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e121441; op2val:0xbed195c2; op3val:0x3d6f2ffc; valaddr_reg:x16; val_offset:1668; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1668, x17, x15, 1112, x18)

inst_140:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x121441 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x5195c2 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x6f2ffc and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e121441; op2val:0xbed195c2; op3val:0x3d6f2ffc; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1120, x18)

inst_141:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7d56be and fs2 == 1 and fe2 == 0x7e and fm2 == 0x629a42 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x603f3c and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3efd56be; op2val:0xbf629a42; op3val:0x3ee03f3c; valaddr_reg:x16; val_offset:1692; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1692, x17, x15, 1128, x18)

inst_142:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7d56be and fs2 == 1 and fe2 == 0x7e and fm2 == 0x629a42 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x603f3c and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3efd56be; op2val:0xbf629a42; op3val:0x3ee03f3c; valaddr_reg:x16; val_offset:1704; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1704, x17, x15, 1136, x18)

inst_143:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7d56be and fs2 == 1 and fe2 == 0x7e and fm2 == 0x629a42 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x603f3c and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3efd56be; op2val:0xbf629a42; op3val:0x3ee03f3c; valaddr_reg:x16; val_offset:1716; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1716, x17, x15, 1144, x18)

inst_144:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7d56be and fs2 == 1 and fe2 == 0x7e and fm2 == 0x629a42 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x603f3c and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3efd56be; op2val:0xbf629a42; op3val:0x3ee03f3c; valaddr_reg:x16; val_offset:1728; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1728, x17, x15, 1152, x18)

inst_145:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7d56be and fs2 == 1 and fe2 == 0x7e and fm2 == 0x629a42 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x603f3c and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3efd56be; op2val:0xbf629a42; op3val:0x3ee03f3c; valaddr_reg:x16; val_offset:1740; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1740, x17, x15, 1160, x18)

inst_146:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x22875e and fs2 == 1 and fe2 == 0x7d and fm2 == 0x227690 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4e49e0 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f22875e; op2val:0xbea27690; op3val:0x3e4e49e0; valaddr_reg:x16; val_offset:1752; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1752, x17, x15, 1168, x18)

inst_147:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x22875e and fs2 == 1 and fe2 == 0x7d and fm2 == 0x227690 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4e49e0 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f22875e; op2val:0xbea27690; op3val:0x3e4e49e0; valaddr_reg:x16; val_offset:1764; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1764, x17, x15, 1176, x18)

inst_148:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x22875e and fs2 == 1 and fe2 == 0x7d and fm2 == 0x227690 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4e49e0 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f22875e; op2val:0xbea27690; op3val:0x3e4e49e0; valaddr_reg:x16; val_offset:1776; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1776, x17, x15, 1184, x18)

inst_149:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x22875e and fs2 == 1 and fe2 == 0x7d and fm2 == 0x227690 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4e49e0 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f22875e; op2val:0xbea27690; op3val:0x3e4e49e0; valaddr_reg:x16; val_offset:1788; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1788, x17, x15, 1192, x18)

inst_150:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x22875e and fs2 == 1 and fe2 == 0x7d and fm2 == 0x227690 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4e49e0 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f22875e; op2val:0xbea27690; op3val:0x3e4e49e0; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1200, x18)

inst_151:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x62a642 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x0c9f19 and fs3 == 0 and fe3 == 0x78 and fm3 == 0x78ff90 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3de2a642; op2val:0xbe0c9f19; op3val:0x3c78ff90; valaddr_reg:x16; val_offset:1812; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1812, x17, x15, 1208, x18)

inst_152:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x62a642 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x0c9f19 and fs3 == 0 and fe3 == 0x78 and fm3 == 0x78ff90 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3de2a642; op2val:0xbe0c9f19; op3val:0x3c78ff90; valaddr_reg:x16; val_offset:1824; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1824, x17, x15, 1216, x18)

inst_153:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x62a642 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x0c9f19 and fs3 == 0 and fe3 == 0x78 and fm3 == 0x78ff90 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3de2a642; op2val:0xbe0c9f19; op3val:0x3c78ff90; valaddr_reg:x16; val_offset:1836; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1836, x17, x15, 1224, x18)

inst_154:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x62a642 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x0c9f19 and fs3 == 0 and fe3 == 0x78 and fm3 == 0x78ff90 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3de2a642; op2val:0xbe0c9f19; op3val:0x3c78ff90; valaddr_reg:x16; val_offset:1848; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1848, x17, x15, 1232, x18)

inst_155:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x62a642 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x0c9f19 and fs3 == 0 and fe3 == 0x78 and fm3 == 0x78ff90 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3de2a642; op2val:0xbe0c9f19; op3val:0x3c78ff90; valaddr_reg:x16; val_offset:1860; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1860, x17, x15, 1240, x18)

inst_156:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x2d7e0a and fs2 == 1 and fe2 == 0x83 and fm2 == 0x3ca529 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7fb0fd and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d2d7e0a; op2val:0xc1bca529; op3val:0x3f7fb0fd; valaddr_reg:x16; val_offset:1872; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1872, x17, x15, 1248, x18)

inst_157:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x2d7e0a and fs2 == 1 and fe2 == 0x83 and fm2 == 0x3ca529 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7fb0fd and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d2d7e0a; op2val:0xc1bca529; op3val:0x3f7fb0fd; valaddr_reg:x16; val_offset:1884; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1884, x17, x15, 1256, x18)

inst_158:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x2d7e0a and fs2 == 1 and fe2 == 0x83 and fm2 == 0x3ca529 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7fb0fd and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d2d7e0a; op2val:0xc1bca529; op3val:0x3f7fb0fd; valaddr_reg:x16; val_offset:1896; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1896, x17, x15, 1264, x18)

inst_159:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x2d7e0a and fs2 == 1 and fe2 == 0x83 and fm2 == 0x3ca529 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7fb0fd and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d2d7e0a; op2val:0xc1bca529; op3val:0x3f7fb0fd; valaddr_reg:x16; val_offset:1908; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1908, x17, x15, 1272, x18)

inst_160:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x2d7e0a and fs2 == 1 and fe2 == 0x83 and fm2 == 0x3ca529 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7fb0fd and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d2d7e0a; op2val:0xc1bca529; op3val:0x3f7fb0fd; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1280, x18)

inst_161:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x256498 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x287594 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x59abf5 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3da56498; op2val:0xc1287594; op3val:0x3f59abf5; valaddr_reg:x16; val_offset:1932; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1932, x17, x15, 1288, x18)

inst_162:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x256498 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x287594 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x59abf5 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3da56498; op2val:0xc1287594; op3val:0x3f59abf5; valaddr_reg:x16; val_offset:1944; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1944, x17, x15, 1296, x18)

inst_163:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x256498 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x287594 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x59abf5 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3da56498; op2val:0xc1287594; op3val:0x3f59abf5; valaddr_reg:x16; val_offset:1956; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1956, x17, x15, 1304, x18)

inst_164:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x256498 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x287594 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x59abf5 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3da56498; op2val:0xc1287594; op3val:0x3f59abf5; valaddr_reg:x16; val_offset:1968; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1968, x17, x15, 1312, x18)

inst_165:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x256498 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x287594 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x59abf5 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3da56498; op2val:0xc1287594; op3val:0x3f59abf5; valaddr_reg:x16; val_offset:1980; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1980, x17, x15, 1320, x18)

inst_166:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x60f056 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x41e617 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2a5f5e and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee0f056; op2val:0xbf41e617; op3val:0x3eaa5f5e; valaddr_reg:x16; val_offset:1992; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1992, x17, x15, 1328, x18)

inst_167:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x60f056 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x41e617 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2a5f5e and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee0f056; op2val:0xbf41e617; op3val:0x3eaa5f5e; valaddr_reg:x16; val_offset:2004; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 2004, x17, x15, 1336, x18)

inst_168:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x60f056 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x41e617 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2a5f5e and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee0f056; op2val:0xbf41e617; op3val:0x3eaa5f5e; valaddr_reg:x16; val_offset:2016; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 2016, x17, x15, 1344, x18)

inst_169:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x60f056 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x41e617 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2a5f5e and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee0f056; op2val:0xbf41e617; op3val:0x3eaa5f5e; valaddr_reg:x16; val_offset:2028; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 2028, x17, x15, 1352, x18)
addi x16,x16,2040

inst_170:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x60f056 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x41e617 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2a5f5e and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee0f056; op2val:0xbf41e617; op3val:0x3eaa5f5e; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 1360, x18)

inst_171:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0e5ddb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x269d16 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x395070 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0e5ddb; op2val:0xbfa69d16; op3val:0x3f395070; valaddr_reg:x16; val_offset:12; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 12, x17, x15, 1368, x18)

inst_172:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0e5ddb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x269d16 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x395070 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0e5ddb; op2val:0xbfa69d16; op3val:0x3f395070; valaddr_reg:x16; val_offset:24; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 24, x17, x15, 1376, x18)

inst_173:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0e5ddb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x269d16 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x395070 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0e5ddb; op2val:0xbfa69d16; op3val:0x3f395070; valaddr_reg:x16; val_offset:36; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 36, x17, x15, 1384, x18)

inst_174:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0e5ddb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x269d16 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x395070 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0e5ddb; op2val:0xbfa69d16; op3val:0x3f395070; valaddr_reg:x16; val_offset:48; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 48, x17, x15, 1392, x18)

inst_175:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0e5ddb and fs2 == 1 and fe2 == 0x7f and fm2 == 0x269d16 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x395070 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0e5ddb; op2val:0xbfa69d16; op3val:0x3f395070; valaddr_reg:x16; val_offset:60; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 60, x17, x15, 1400, x18)

inst_176:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6d0092 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6236b3 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x516d24 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6d0092; op2val:0xbf6236b3; op3val:0x3f516d24; valaddr_reg:x16; val_offset:72; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 72, x17, x15, 1408, x18)

inst_177:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6d0092 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6236b3 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x516d24 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6d0092; op2val:0xbf6236b3; op3val:0x3f516d24; valaddr_reg:x16; val_offset:84; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 84, x17, x15, 1416, x18)

inst_178:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6d0092 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6236b3 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x516d24 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6d0092; op2val:0xbf6236b3; op3val:0x3f516d24; valaddr_reg:x16; val_offset:96; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 96, x17, x15, 1424, x18)

inst_179:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6d0092 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6236b3 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x516d24 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6d0092; op2val:0xbf6236b3; op3val:0x3f516d24; valaddr_reg:x16; val_offset:108; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 108, x17, x15, 1432, x18)

inst_180:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6d0092 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6236b3 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x516d24 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6d0092; op2val:0xbf6236b3; op3val:0x3f516d24; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 1440, x18)

inst_181:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x150090 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x402733 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5fae7b and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f150090; op2val:0xbfc02733; op3val:0x3f5fae7b; valaddr_reg:x16; val_offset:132; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 132, x17, x15, 1448, x18)

inst_182:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x150090 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x402733 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5fae7b and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f150090; op2val:0xbfc02733; op3val:0x3f5fae7b; valaddr_reg:x16; val_offset:144; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 144, x17, x15, 1456, x18)

inst_183:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x150090 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x402733 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5fae7b and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f150090; op2val:0xbfc02733; op3val:0x3f5fae7b; valaddr_reg:x16; val_offset:156; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 156, x17, x15, 1464, x18)

inst_184:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x150090 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x402733 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5fae7b and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f150090; op2val:0xbfc02733; op3val:0x3f5fae7b; valaddr_reg:x16; val_offset:168; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 168, x17, x15, 1472, x18)

inst_185:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x150090 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x402733 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5fae7b and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f150090; op2val:0xbfc02733; op3val:0x3f5fae7b; valaddr_reg:x16; val_offset:180; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 180, x17, x15, 1480, x18)

inst_186:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x07a73d and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1c63cc and fs3 == 0 and fe3 == 0x7d and fm3 == 0x25bd96 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f07a73d; op2val:0xbf1c63cc; op3val:0x3ea5bd96; valaddr_reg:x16; val_offset:192; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 192, x17, x15, 1488, x18)

inst_187:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x07a73d and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1c63cc and fs3 == 0 and fe3 == 0x7d and fm3 == 0x25bd96 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f07a73d; op2val:0xbf1c63cc; op3val:0x3ea5bd96; valaddr_reg:x16; val_offset:204; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 204, x17, x15, 1496, x18)

inst_188:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x07a73d and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1c63cc and fs3 == 0 and fe3 == 0x7d and fm3 == 0x25bd96 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f07a73d; op2val:0xbf1c63cc; op3val:0x3ea5bd96; valaddr_reg:x16; val_offset:216; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 216, x17, x15, 1504, x18)

inst_189:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x07a73d and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1c63cc and fs3 == 0 and fe3 == 0x7d and fm3 == 0x25bd96 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f07a73d; op2val:0xbf1c63cc; op3val:0x3ea5bd96; valaddr_reg:x16; val_offset:228; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 228, x17, x15, 1512, x18)

inst_190:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x07a73d and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1c63cc and fs3 == 0 and fe3 == 0x7d and fm3 == 0x25bd96 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f07a73d; op2val:0xbf1c63cc; op3val:0x3ea5bd96; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 1520, x18)

inst_191:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4f85e0 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x07c8ad and fs3 == 0 and fe3 == 0x7c and fm3 == 0x5c248d and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ecf85e0; op2val:0xbf07c8ad; op3val:0x3e5c248d; valaddr_reg:x16; val_offset:252; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 252, x17, x15, 1528, x18)

inst_192:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4f85e0 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x07c8ad and fs3 == 0 and fe3 == 0x7c and fm3 == 0x5c248d and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ecf85e0; op2val:0xbf07c8ad; op3val:0x3e5c248d; valaddr_reg:x16; val_offset:264; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 264, x17, x15, 1536, x18)

inst_193:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4f85e0 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x07c8ad and fs3 == 0 and fe3 == 0x7c and fm3 == 0x5c248d and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ecf85e0; op2val:0xbf07c8ad; op3val:0x3e5c248d; valaddr_reg:x16; val_offset:276; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 276, x17, x15, 1544, x18)

inst_194:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4f85e0 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x07c8ad and fs3 == 0 and fe3 == 0x7c and fm3 == 0x5c248d and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ecf85e0; op2val:0xbf07c8ad; op3val:0x3e5c248d; valaddr_reg:x16; val_offset:288; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 288, x17, x15, 1552, x18)

inst_195:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4f85e0 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x07c8ad and fs3 == 0 and fe3 == 0x7c and fm3 == 0x5c248d and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ecf85e0; op2val:0xbf07c8ad; op3val:0x3e5c248d; valaddr_reg:x16; val_offset:300; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 300, x17, x15, 1560, x18)

inst_196:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x75b687 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x25644f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1ebeec and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef5b687; op2val:0xbf25644f; op3val:0x3e9ebeec; valaddr_reg:x16; val_offset:312; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 312, x17, x15, 1568, x18)

inst_197:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x75b687 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x25644f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1ebeec and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef5b687; op2val:0xbf25644f; op3val:0x3e9ebeec; valaddr_reg:x16; val_offset:324; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 324, x17, x15, 1576, x18)

inst_198:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x75b687 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x25644f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1ebeec and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef5b687; op2val:0xbf25644f; op3val:0x3e9ebeec; valaddr_reg:x16; val_offset:336; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 336, x17, x15, 1584, x18)

inst_199:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x75b687 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x25644f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1ebeec and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef5b687; op2val:0xbf25644f; op3val:0x3e9ebeec; valaddr_reg:x16; val_offset:348; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 348, x17, x15, 1592, x18)

inst_200:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x75b687 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x25644f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1ebeec and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef5b687; op2val:0xbf25644f; op3val:0x3e9ebeec; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 1600, x18)

inst_201:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0d4e12 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1aafe1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2ac417 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0d4e12; op2val:0xbf9aafe1; op3val:0x3f2ac417; valaddr_reg:x16; val_offset:372; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 372, x17, x15, 1608, x18)

inst_202:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0d4e12 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1aafe1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2ac417 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0d4e12; op2val:0xbf9aafe1; op3val:0x3f2ac417; valaddr_reg:x16; val_offset:384; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 384, x17, x15, 1616, x18)

inst_203:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0d4e12 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1aafe1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2ac417 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0d4e12; op2val:0xbf9aafe1; op3val:0x3f2ac417; valaddr_reg:x16; val_offset:396; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 396, x17, x15, 1624, x18)

inst_204:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0d4e12 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1aafe1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2ac417 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0d4e12; op2val:0xbf9aafe1; op3val:0x3f2ac417; valaddr_reg:x16; val_offset:408; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 408, x17, x15, 1632, x18)

inst_205:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0d4e12 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1aafe1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2ac417 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0d4e12; op2val:0xbf9aafe1; op3val:0x3f2ac417; valaddr_reg:x16; val_offset:420; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 420, x17, x15, 1640, x18)

inst_206:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x78e626 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6618b8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5fb6cf and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f78e626; op2val:0xbf6618b8; op3val:0x3f5fb6cf; valaddr_reg:x16; val_offset:432; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 432, x17, x15, 1648, x18)

inst_207:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x78e626 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6618b8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5fb6cf and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f78e626; op2val:0xbf6618b8; op3val:0x3f5fb6cf; valaddr_reg:x16; val_offset:444; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 444, x17, x15, 1656, x18)

inst_208:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x78e626 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6618b8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5fb6cf and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f78e626; op2val:0xbf6618b8; op3val:0x3f5fb6cf; valaddr_reg:x16; val_offset:456; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 456, x17, x15, 1664, x18)

inst_209:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x78e626 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6618b8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5fb6cf and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f78e626; op2val:0xbf6618b8; op3val:0x3f5fb6cf; valaddr_reg:x16; val_offset:468; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 468, x17, x15, 1672, x18)

inst_210:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x78e626 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6618b8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5fb6cf and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f78e626; op2val:0xbf6618b8; op3val:0x3f5fb6cf; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1680, x18)

inst_211:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x4dcb57 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x12e5ee and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x585b38 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x534dcb57; op2val:0xc192e5ee; op3val:0x54d85b38; valaddr_reg:x16; val_offset:492; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 492, x17, x15, 1688, x18)

inst_212:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x4dcb57 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x12e5ee and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x585b38 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x534dcb57; op2val:0xc192e5ee; op3val:0x54d85b38; valaddr_reg:x16; val_offset:504; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 504, x17, x15, 1696, x18)

inst_213:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x4dcb57 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x12e5ee and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x585b38 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x534dcb57; op2val:0xc192e5ee; op3val:0x54d85b38; valaddr_reg:x16; val_offset:516; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 516, x17, x15, 1704, x18)

inst_214:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x4dcb57 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x12e5ee and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x585b38 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x534dcb57; op2val:0xc192e5ee; op3val:0x54d85b38; valaddr_reg:x16; val_offset:528; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 528, x17, x15, 1712, x18)

inst_215:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x4dcb57 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x12e5ee and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x585b38 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x534dcb57; op2val:0xc192e5ee; op3val:0x54d85b38; valaddr_reg:x16; val_offset:540; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 540, x17, x15, 1720, x18)

inst_216:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x79182d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4e3852 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x115083 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5479182d; op2val:0xc04e3852; op3val:0x54915083; valaddr_reg:x16; val_offset:552; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 552, x17, x15, 1728, x18)

inst_217:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x79182d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4e3852 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x115083 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5479182d; op2val:0xc04e3852; op3val:0x54915083; valaddr_reg:x16; val_offset:564; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 564, x17, x15, 1736, x18)

inst_218:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x79182d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4e3852 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x115083 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5479182d; op2val:0xc04e3852; op3val:0x54915083; valaddr_reg:x16; val_offset:576; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 576, x17, x15, 1744, x18)

inst_219:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x79182d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4e3852 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x115083 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5479182d; op2val:0xc04e3852; op3val:0x54915083; valaddr_reg:x16; val_offset:588; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 588, x17, x15, 1752, x18)

inst_220:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x79182d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4e3852 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x115083 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5479182d; op2val:0xc04e3852; op3val:0x54915083; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1760, x18)

inst_221:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x598ea5 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x33bb46 and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x45ef23 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x53598ea5; op2val:0xc133bb46; op3val:0x53c5ef23; valaddr_reg:x16; val_offset:612; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 612, x17, x15, 1768, x18)

inst_222:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x598ea5 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x33bb46 and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x45ef23 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x53598ea5; op2val:0xc133bb46; op3val:0x53c5ef23; valaddr_reg:x16; val_offset:624; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 624, x17, x15, 1776, x18)

inst_223:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x598ea5 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x33bb46 and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x45ef23 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x53598ea5; op2val:0xc133bb46; op3val:0x53c5ef23; valaddr_reg:x16; val_offset:636; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 636, x17, x15, 1784, x18)

inst_224:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x598ea5 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x33bb46 and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x45ef23 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x53598ea5; op2val:0xc133bb46; op3val:0x53c5ef23; valaddr_reg:x16; val_offset:648; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 648, x17, x15, 1792, x18)

inst_225:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x598ea5 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x33bb46 and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x45ef23 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x53598ea5; op2val:0xc133bb46; op3val:0x53c5ef23; valaddr_reg:x16; val_offset:660; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 660, x17, x15, 1800, x18)

inst_226:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x3c7d3c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x66f57d and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x28350f and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x543c7d3c; op2val:0xc066f57d; op3val:0x5428350f; valaddr_reg:x16; val_offset:672; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 672, x17, x15, 1808, x18)

inst_227:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x3c7d3c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x66f57d and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x28350f and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x543c7d3c; op2val:0xc066f57d; op3val:0x5428350f; valaddr_reg:x16; val_offset:684; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 684, x17, x15, 1816, x18)

inst_228:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x3c7d3c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x66f57d and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x28350f and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x543c7d3c; op2val:0xc066f57d; op3val:0x5428350f; valaddr_reg:x16; val_offset:696; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 696, x17, x15, 1824, x18)

inst_229:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x3c7d3c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x66f57d and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x28350f and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x543c7d3c; op2val:0xc066f57d; op3val:0x5428350f; valaddr_reg:x16; val_offset:708; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 708, x17, x15, 1832, x18)

inst_230:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x3c7d3c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x66f57d and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x28350f and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x543c7d3c; op2val:0xc066f57d; op3val:0x5428350f; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1840, x18)

inst_231:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x154ef4 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1e67a4 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x63196c and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54954ef4; op2val:0xc01e67a4; op3val:0x5463196c; valaddr_reg:x16; val_offset:732; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 732, x17, x15, 1848, x18)

inst_232:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x154ef4 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1e67a4 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x63196c and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54954ef4; op2val:0xc01e67a4; op3val:0x5463196c; valaddr_reg:x16; val_offset:744; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 744, x17, x15, 1856, x18)

inst_233:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x154ef4 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1e67a4 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x63196c and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54954ef4; op2val:0xc01e67a4; op3val:0x5463196c; valaddr_reg:x16; val_offset:756; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 756, x17, x15, 1864, x18)

inst_234:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x154ef4 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1e67a4 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x63196c and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54954ef4; op2val:0xc01e67a4; op3val:0x5463196c; valaddr_reg:x16; val_offset:768; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 768, x17, x15, 1872, x18)

inst_235:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x154ef4 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1e67a4 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x63196c and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54954ef4; op2val:0xc01e67a4; op3val:0x5463196c; valaddr_reg:x16; val_offset:780; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 780, x17, x15, 1880, x18)

inst_236:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x0436e3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x42dc89 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x128df9 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x548436e3; op2val:0xc042dc89; op3val:0x54928df9; valaddr_reg:x16; val_offset:792; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 792, x17, x15, 1888, x18)

inst_237:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x0436e3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x42dc89 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x128df9 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x548436e3; op2val:0xc042dc89; op3val:0x54928df9; valaddr_reg:x16; val_offset:804; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 804, x17, x15, 1896, x18)

inst_238:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x0436e3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x42dc89 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x128df9 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x548436e3; op2val:0xc042dc89; op3val:0x54928df9; valaddr_reg:x16; val_offset:816; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 816, x17, x15, 1904, x18)

inst_239:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x0436e3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x42dc89 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x128df9 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x548436e3; op2val:0xc042dc89; op3val:0x54928df9; valaddr_reg:x16; val_offset:828; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 828, x17, x15, 1912, x18)

inst_240:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x0436e3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x42dc89 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x128df9 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x548436e3; op2val:0xc042dc89; op3val:0x54928df9; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1920, x18)

inst_241:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x32530e and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4dae06 and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x745bac and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5432530e; op2val:0xc04dae06; op3val:0x53745bac; valaddr_reg:x16; val_offset:852; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 852, x17, x15, 1928, x18)

inst_242:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x32530e and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4dae06 and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x745bac and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5432530e; op2val:0xc04dae06; op3val:0x53745bac; valaddr_reg:x16; val_offset:864; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 864, x17, x15, 1936, x18)

inst_243:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x32530e and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4dae06 and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x745bac and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5432530e; op2val:0xc04dae06; op3val:0x53745bac; valaddr_reg:x16; val_offset:876; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 876, x17, x15, 1944, x18)

inst_244:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x32530e and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4dae06 and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x745bac and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5432530e; op2val:0xc04dae06; op3val:0x53745bac; valaddr_reg:x16; val_offset:888; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 888, x17, x15, 1952, x18)

inst_245:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x32530e and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4dae06 and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x745bac and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5432530e; op2val:0xc04dae06; op3val:0x53745bac; valaddr_reg:x16; val_offset:900; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 900, x17, x15, 1960, x18)

inst_246:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x448a6f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2ba8d5 and fs3 == 0 and fe3 == 0xa4 and fm3 == 0x7285de and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54c48a6f; op2val:0xbfaba8d5; op3val:0x527285de; valaddr_reg:x16; val_offset:912; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 912, x17, x15, 1968, x18)

inst_247:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x448a6f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2ba8d5 and fs3 == 0 and fe3 == 0xa4 and fm3 == 0x7285de and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54c48a6f; op2val:0xbfaba8d5; op3val:0x527285de; valaddr_reg:x16; val_offset:924; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 924, x17, x15, 1976, x18)

inst_248:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x448a6f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2ba8d5 and fs3 == 0 and fe3 == 0xa4 and fm3 == 0x7285de and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54c48a6f; op2val:0xbfaba8d5; op3val:0x527285de; valaddr_reg:x16; val_offset:936; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 936, x17, x15, 1984, x18)

inst_249:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x448a6f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2ba8d5 and fs3 == 0 and fe3 == 0xa4 and fm3 == 0x7285de and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54c48a6f; op2val:0xbfaba8d5; op3val:0x527285de; valaddr_reg:x16; val_offset:948; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 948, x17, x15, 1992, x18)

inst_250:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x448a6f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2ba8d5 and fs3 == 0 and fe3 == 0xa4 and fm3 == 0x7285de and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54c48a6f; op2val:0xbfaba8d5; op3val:0x527285de; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 2000, x18)

inst_251:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x34bd6c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x025a6e and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x60404f and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54b4bd6c; op2val:0xc0025a6e; op3val:0x5460404f; valaddr_reg:x16; val_offset:972; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 972, x17, x15, 2008, x18)

inst_252:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x34bd6c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x025a6e and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x60404f and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54b4bd6c; op2val:0xc0025a6e; op3val:0x5460404f; valaddr_reg:x16; val_offset:984; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 984, x17, x15, 2016, x18)

inst_253:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x34bd6c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x025a6e and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x60404f and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54b4bd6c; op2val:0xc0025a6e; op3val:0x5460404f; valaddr_reg:x16; val_offset:996; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 996, x17, x15, 2024, x18)
RVTEST_SIGBASE(x15,signature_x15_2)

inst_254:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x34bd6c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x025a6e and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x60404f and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54b4bd6c; op2val:0xc0025a6e; op3val:0x5460404f; valaddr_reg:x16; val_offset:1008; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1008, x17, x15, 0, x18)

inst_255:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x34bd6c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x025a6e and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x60404f and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54b4bd6c; op2val:0xc0025a6e; op3val:0x5460404f; valaddr_reg:x16; val_offset:1020; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1020, x17, x15, 8, x18)

inst_256:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x788342 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4ed1c7 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x118a89 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54788342; op2val:0xc04ed1c7; op3val:0x54918a89; valaddr_reg:x16; val_offset:1032; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1032, x17, x15, 16, x18)

inst_257:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x788342 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4ed1c7 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x118a89 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54788342; op2val:0xc04ed1c7; op3val:0x54918a89; valaddr_reg:x16; val_offset:1044; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1044, x17, x15, 24, x18)

inst_258:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x788342 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4ed1c7 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x118a89 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54788342; op2val:0xc04ed1c7; op3val:0x54918a89; valaddr_reg:x16; val_offset:1056; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1056, x17, x15, 32, x18)

inst_259:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x788342 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4ed1c7 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x118a89 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54788342; op2val:0xc04ed1c7; op3val:0x54918a89; valaddr_reg:x16; val_offset:1068; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1068, x17, x15, 40, x18)

inst_260:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x788342 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4ed1c7 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x118a89 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54788342; op2val:0xc04ed1c7; op3val:0x54918a89; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 48, x18)

inst_261:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x7d89a0 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x190f1f and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x3cb1dc and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x537d89a0; op2val:0xc1190f1f; op3val:0x53bcb1dc; valaddr_reg:x16; val_offset:1092; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1092, x17, x15, 56, x18)

inst_262:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x7d89a0 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x190f1f and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x3cb1dc and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x537d89a0; op2val:0xc1190f1f; op3val:0x53bcb1dc; valaddr_reg:x16; val_offset:1104; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1104, x17, x15, 64, x18)

inst_263:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x7d89a0 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x190f1f and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x3cb1dc and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x537d89a0; op2val:0xc1190f1f; op3val:0x53bcb1dc; valaddr_reg:x16; val_offset:1116; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1116, x17, x15, 72, x18)

inst_264:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x7d89a0 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x190f1f and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x3cb1dc and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x537d89a0; op2val:0xc1190f1f; op3val:0x53bcb1dc; valaddr_reg:x16; val_offset:1128; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1128, x17, x15, 80, x18)

inst_265:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x7d89a0 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x190f1f and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x3cb1dc and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x537d89a0; op2val:0xc1190f1f; op3val:0x53bcb1dc; valaddr_reg:x16; val_offset:1140; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1140, x17, x15, 88, x18)

inst_266:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x39ce0c and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4238a6 and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x4f7431 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x53b9ce0c; op2val:0xc0c238a6; op3val:0x534f7431; valaddr_reg:x16; val_offset:1152; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1152, x17, x15, 96, x18)

inst_267:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x39ce0c and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4238a6 and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x4f7431 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x53b9ce0c; op2val:0xc0c238a6; op3val:0x534f7431; valaddr_reg:x16; val_offset:1164; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1164, x17, x15, 104, x18)

inst_268:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x39ce0c and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4238a6 and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x4f7431 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x53b9ce0c; op2val:0xc0c238a6; op3val:0x534f7431; valaddr_reg:x16; val_offset:1176; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1176, x17, x15, 112, x18)

inst_269:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x39ce0c and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4238a6 and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x4f7431 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x53b9ce0c; op2val:0xc0c238a6; op3val:0x534f7431; valaddr_reg:x16; val_offset:1188; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1188, x17, x15, 120, x18)

inst_270:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x39ce0c and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4238a6 and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x4f7431 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x53b9ce0c; op2val:0xc0c238a6; op3val:0x534f7431; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 128, x18)

inst_271:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x211cc4 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0369b5 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x15a1fb and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54a11cc4; op2val:0xc00369b5; op3val:0x5415a1fb; valaddr_reg:x16; val_offset:1212; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1212, x17, x15, 136, x18)

inst_272:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x211cc4 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0369b5 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x15a1fb and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54a11cc4; op2val:0xc00369b5; op3val:0x5415a1fb; valaddr_reg:x16; val_offset:1224; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1224, x17, x15, 144, x18)

inst_273:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x211cc4 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0369b5 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x15a1fb and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54a11cc4; op2val:0xc00369b5; op3val:0x5415a1fb; valaddr_reg:x16; val_offset:1236; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1236, x17, x15, 152, x18)

inst_274:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x211cc4 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0369b5 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x15a1fb and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54a11cc4; op2val:0xc00369b5; op3val:0x5415a1fb; valaddr_reg:x16; val_offset:1248; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1248, x17, x15, 160, x18)

inst_275:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x211cc4 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0369b5 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x15a1fb and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54a11cc4; op2val:0xc00369b5; op3val:0x5415a1fb; valaddr_reg:x16; val_offset:1260; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1260, x17, x15, 168, x18)

inst_276:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x0c4283 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x40ea56 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x26c91b and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x548c4283; op2val:0xc040ea56; op3val:0x54a6c91b; valaddr_reg:x16; val_offset:1272; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1272, x17, x15, 176, x18)

inst_277:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x0c4283 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x40ea56 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x26c91b and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x548c4283; op2val:0xc040ea56; op3val:0x54a6c91b; valaddr_reg:x16; val_offset:1284; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1284, x17, x15, 184, x18)

inst_278:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x0c4283 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x40ea56 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x26c91b and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x548c4283; op2val:0xc040ea56; op3val:0x54a6c91b; valaddr_reg:x16; val_offset:1296; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1296, x17, x15, 192, x18)

inst_279:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x0c4283 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x40ea56 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x26c91b and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x548c4283; op2val:0xc040ea56; op3val:0x54a6c91b; valaddr_reg:x16; val_offset:1308; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1308, x17, x15, 200, x18)

inst_280:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x0c4283 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x40ea56 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x26c91b and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x548c4283; op2val:0xc040ea56; op3val:0x54a6c91b; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 208, x18)

inst_281:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x3382f5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x59340b and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x427400 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54b382f5; op2val:0xbfd9340b; op3val:0x53c27400; valaddr_reg:x16; val_offset:1332; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1332, x17, x15, 216, x18)

inst_282:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x3382f5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x59340b and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x427400 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54b382f5; op2val:0xbfd9340b; op3val:0x53c27400; valaddr_reg:x16; val_offset:1344; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1344, x17, x15, 224, x18)

inst_283:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x3382f5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x59340b and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x427400 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54b382f5; op2val:0xbfd9340b; op3val:0x53c27400; valaddr_reg:x16; val_offset:1356; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1356, x17, x15, 232, x18)

inst_284:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x3382f5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x59340b and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x427400 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54b382f5; op2val:0xbfd9340b; op3val:0x53c27400; valaddr_reg:x16; val_offset:1368; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1368, x17, x15, 240, x18)

inst_285:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x3382f5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x59340b and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x427400 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54b382f5; op2val:0xbfd9340b; op3val:0x53c27400; valaddr_reg:x16; val_offset:1380; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1380, x17, x15, 248, x18)

inst_286:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x303b3b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x05b7f8 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x606b5a and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54b03b3b; op2val:0xc005b7f8; op3val:0x54606b5a; valaddr_reg:x16; val_offset:1392; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1392, x17, x15, 256, x18)

inst_287:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x303b3b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x05b7f8 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x606b5a and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54b03b3b; op2val:0xc005b7f8; op3val:0x54606b5a; valaddr_reg:x16; val_offset:1404; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1404, x17, x15, 264, x18)

inst_288:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x303b3b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x05b7f8 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x606b5a and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54b03b3b; op2val:0xc005b7f8; op3val:0x54606b5a; valaddr_reg:x16; val_offset:1416; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1416, x17, x15, 272, x18)

inst_289:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x303b3b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x05b7f8 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x606b5a and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54b03b3b; op2val:0xc005b7f8; op3val:0x54606b5a; valaddr_reg:x16; val_offset:1428; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1428, x17, x15, 280, x18)

inst_290:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x303b3b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x05b7f8 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x606b5a and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54b03b3b; op2val:0xc005b7f8; op3val:0x54606b5a; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 288, x18)

inst_291:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x0d4a71 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x46c9a2 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x36db72 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x548d4a71; op2val:0xc046c9a2; op3val:0x54b6db72; valaddr_reg:x16; val_offset:1452; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1452, x17, x15, 296, x18)

inst_292:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x0d4a71 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x46c9a2 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x36db72 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x548d4a71; op2val:0xc046c9a2; op3val:0x54b6db72; valaddr_reg:x16; val_offset:1464; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1464, x17, x15, 304, x18)

inst_293:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x0d4a71 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x46c9a2 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x36db72 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x548d4a71; op2val:0xc046c9a2; op3val:0x54b6db72; valaddr_reg:x16; val_offset:1476; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1476, x17, x15, 312, x18)

inst_294:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x0d4a71 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x46c9a2 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x36db72 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x548d4a71; op2val:0xc046c9a2; op3val:0x54b6db72; valaddr_reg:x16; val_offset:1488; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1488, x17, x15, 320, x18)

inst_295:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x0d4a71 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x46c9a2 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x36db72 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x548d4a71; op2val:0xc046c9a2; op3val:0x54b6db72; valaddr_reg:x16; val_offset:1500; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1500, x17, x15, 328, x18)

inst_296:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x0cf910 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5e23a3 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x694e72 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x540cf910; op2val:0xc0de23a3; op3val:0x54e94e72; valaddr_reg:x16; val_offset:1512; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1512, x17, x15, 336, x18)

inst_297:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x0cf910 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5e23a3 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x694e72 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x540cf910; op2val:0xc0de23a3; op3val:0x54e94e72; valaddr_reg:x16; val_offset:1524; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1524, x17, x15, 344, x18)

inst_298:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x0cf910 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5e23a3 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x694e72 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x540cf910; op2val:0xc0de23a3; op3val:0x54e94e72; valaddr_reg:x16; val_offset:1536; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1536, x17, x15, 352, x18)

inst_299:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x0cf910 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5e23a3 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x694e72 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x540cf910; op2val:0xc0de23a3; op3val:0x54e94e72; valaddr_reg:x16; val_offset:1548; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1548, x17, x15, 360, x18)

inst_300:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x0cf910 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5e23a3 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x694e72 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x540cf910; op2val:0xc0de23a3; op3val:0x54e94e72; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 368, x18)

inst_301:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x2db3a8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x178dc0 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x1b549c and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54adb3a8; op2val:0xc0178dc0; op3val:0x549b549c; valaddr_reg:x16; val_offset:1572; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1572, x17, x15, 376, x18)

inst_302:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x2db3a8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x178dc0 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x1b549c and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54adb3a8; op2val:0xc0178dc0; op3val:0x549b549c; valaddr_reg:x16; val_offset:1584; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1584, x17, x15, 384, x18)

inst_303:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x2db3a8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x178dc0 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x1b549c and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54adb3a8; op2val:0xc0178dc0; op3val:0x549b549c; valaddr_reg:x16; val_offset:1596; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1596, x17, x15, 392, x18)

inst_304:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x2db3a8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x178dc0 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x1b549c and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54adb3a8; op2val:0xc0178dc0; op3val:0x549b549c; valaddr_reg:x16; val_offset:1608; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1608, x17, x15, 400, x18)

inst_305:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x2db3a8 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x178dc0 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x1b549c and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54adb3a8; op2val:0xc0178dc0; op3val:0x549b549c; valaddr_reg:x16; val_offset:1620; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1620, x17, x15, 408, x18)

inst_306:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x36cf07 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x09094d and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x076dbd and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5436cf07; op2val:0xc089094d; op3val:0x54876dbd; valaddr_reg:x16; val_offset:1632; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1632, x17, x15, 416, x18)

inst_307:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x36cf07 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x09094d and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x076dbd and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5436cf07; op2val:0xc089094d; op3val:0x54876dbd; valaddr_reg:x16; val_offset:1644; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1644, x17, x15, 424, x18)

inst_308:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x36cf07 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x09094d and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x076dbd and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5436cf07; op2val:0xc089094d; op3val:0x54876dbd; valaddr_reg:x16; val_offset:1656; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1656, x17, x15, 432, x18)

inst_309:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x36cf07 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x09094d and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x076dbd and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5436cf07; op2val:0xc089094d; op3val:0x54876dbd; valaddr_reg:x16; val_offset:1668; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1668, x17, x15, 440, x18)

inst_310:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x36cf07 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x09094d and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x076dbd and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5436cf07; op2val:0xc089094d; op3val:0x54876dbd; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 448, x18)

inst_311:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x4ad8a7 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x192f18 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x658336 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54cad8a7; op2val:0xc0192f18; op3val:0x54e58336; valaddr_reg:x16; val_offset:1692; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1692, x17, x15, 456, x18)

inst_312:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x4ad8a7 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x192f18 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x658336 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54cad8a7; op2val:0xc0192f18; op3val:0x54e58336; valaddr_reg:x16; val_offset:1704; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1704, x17, x15, 464, x18)

inst_313:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x4ad8a7 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x192f18 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x658336 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54cad8a7; op2val:0xc0192f18; op3val:0x54e58336; valaddr_reg:x16; val_offset:1716; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1716, x17, x15, 472, x18)

inst_314:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x4ad8a7 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x192f18 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x658336 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54cad8a7; op2val:0xc0192f18; op3val:0x54e58336; valaddr_reg:x16; val_offset:1728; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1728, x17, x15, 480, x18)

inst_315:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x4ad8a7 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x192f18 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x658336 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54cad8a7; op2val:0xc0192f18; op3val:0x54e58336; valaddr_reg:x16; val_offset:1740; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1740, x17, x15, 488, x18)

inst_316:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x3b1509 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4b0d5a and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x231b80 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x53bb1509; op2val:0xc0cb0d5a; op3val:0x53a31b80; valaddr_reg:x16; val_offset:1752; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1752, x17, x15, 496, x18)

inst_317:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x3b1509 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4b0d5a and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x231b80 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x53bb1509; op2val:0xc0cb0d5a; op3val:0x53a31b80; valaddr_reg:x16; val_offset:1764; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1764, x17, x15, 504, x18)

inst_318:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x3b1509 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4b0d5a and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x231b80 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x53bb1509; op2val:0xc0cb0d5a; op3val:0x53a31b80; valaddr_reg:x16; val_offset:1776; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1776, x17, x15, 512, x18)

inst_319:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x3b1509 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4b0d5a and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x231b80 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x53bb1509; op2val:0xc0cb0d5a; op3val:0x53a31b80; valaddr_reg:x16; val_offset:1788; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1788, x17, x15, 520, x18)

inst_320:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x3b1509 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4b0d5a and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x231b80 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x53bb1509; op2val:0xc0cb0d5a; op3val:0x53a31b80; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 528, x18)

inst_321:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x1fc5ce and fs2 == 1 and fe2 == 0x80 and fm2 == 0x14590c and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x64af77 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x549fc5ce; op2val:0xc014590c; op3val:0x5464af77; valaddr_reg:x16; val_offset:1812; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1812, x17, x15, 536, x18)

inst_322:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x1fc5ce and fs2 == 1 and fe2 == 0x80 and fm2 == 0x14590c and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x64af77 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x549fc5ce; op2val:0xc014590c; op3val:0x5464af77; valaddr_reg:x16; val_offset:1824; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1824, x17, x15, 544, x18)

inst_323:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x1fc5ce and fs2 == 1 and fe2 == 0x80 and fm2 == 0x14590c and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x64af77 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x549fc5ce; op2val:0xc014590c; op3val:0x5464af77; valaddr_reg:x16; val_offset:1836; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1836, x17, x15, 552, x18)

inst_324:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x1fc5ce and fs2 == 1 and fe2 == 0x80 and fm2 == 0x14590c and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x64af77 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x549fc5ce; op2val:0xc014590c; op3val:0x5464af77; valaddr_reg:x16; val_offset:1848; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1848, x17, x15, 560, x18)

inst_325:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x1fc5ce and fs2 == 1 and fe2 == 0x80 and fm2 == 0x14590c and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x64af77 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x549fc5ce; op2val:0xc014590c; op3val:0x5464af77; valaddr_reg:x16; val_offset:1860; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1860, x17, x15, 568, x18)

inst_326:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x110520 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x5c8a9a and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x73bbb2 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54910520; op2val:0xc05c8a9a; op3val:0x54f3bbb2; valaddr_reg:x16; val_offset:1872; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1872, x17, x15, 576, x18)

inst_327:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x110520 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x5c8a9a and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x73bbb2 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54910520; op2val:0xc05c8a9a; op3val:0x54f3bbb2; valaddr_reg:x16; val_offset:1884; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1884, x17, x15, 584, x18)

inst_328:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x110520 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x5c8a9a and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x73bbb2 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54910520; op2val:0xc05c8a9a; op3val:0x54f3bbb2; valaddr_reg:x16; val_offset:1896; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1896, x17, x15, 592, x18)

inst_329:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x110520 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x5c8a9a and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x73bbb2 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54910520; op2val:0xc05c8a9a; op3val:0x54f3bbb2; valaddr_reg:x16; val_offset:1908; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1908, x17, x15, 600, x18)

inst_330:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x110520 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x5c8a9a and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x73bbb2 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54910520; op2val:0xc05c8a9a; op3val:0x54f3bbb2; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 608, x18)

inst_331:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x6a70f1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x72ad38 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x3c7acb and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54ea70f1; op2val:0xbff2ad38; op3val:0x54bc7acb; valaddr_reg:x16; val_offset:1932; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1932, x17, x15, 616, x18)

inst_332:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x6a70f1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x72ad38 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x3c7acb and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54ea70f1; op2val:0xbff2ad38; op3val:0x54bc7acb; valaddr_reg:x16; val_offset:1944; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1944, x17, x15, 624, x18)

inst_333:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x6a70f1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x72ad38 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x3c7acb and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54ea70f1; op2val:0xbff2ad38; op3val:0x54bc7acb; valaddr_reg:x16; val_offset:1956; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1956, x17, x15, 632, x18)

inst_334:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x6a70f1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x72ad38 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x3c7acb and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54ea70f1; op2val:0xbff2ad38; op3val:0x54bc7acb; valaddr_reg:x16; val_offset:1968; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1968, x17, x15, 640, x18)

inst_335:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x6a70f1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x72ad38 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x3c7acb and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54ea70f1; op2val:0xbff2ad38; op3val:0x54bc7acb; valaddr_reg:x16; val_offset:1980; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1980, x17, x15, 648, x18)

inst_336:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x02a347 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x54d12c and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x3267d4 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5482a347; op2val:0xc054d12c; op3val:0x54b267d4; valaddr_reg:x16; val_offset:1992; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1992, x17, x15, 656, x18)

inst_337:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x02a347 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x54d12c and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x3267d4 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5482a347; op2val:0xc054d12c; op3val:0x54b267d4; valaddr_reg:x16; val_offset:2004; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 2004, x17, x15, 664, x18)

inst_338:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x02a347 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x54d12c and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x3267d4 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5482a347; op2val:0xc054d12c; op3val:0x54b267d4; valaddr_reg:x16; val_offset:2016; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 2016, x17, x15, 672, x18)

inst_339:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x02a347 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x54d12c and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x3267d4 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5482a347; op2val:0xc054d12c; op3val:0x54b267d4; valaddr_reg:x16; val_offset:2028; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 2028, x17, x15, 680, x18)
addi x16,x16,2040

inst_340:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x02a347 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x54d12c and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x3267d4 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5482a347; op2val:0xc054d12c; op3val:0x54b267d4; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 688, x18)

inst_341:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x70f4b0 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x02c834 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x6c62c7 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5370f4b0; op2val:0xc182c834; op3val:0x54ec62c7; valaddr_reg:x16; val_offset:12; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 12, x17, x15, 696, x18)

inst_342:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x70f4b0 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x02c834 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x6c62c7 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5370f4b0; op2val:0xc182c834; op3val:0x54ec62c7; valaddr_reg:x16; val_offset:24; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 24, x17, x15, 704, x18)

inst_343:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x70f4b0 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x02c834 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x6c62c7 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5370f4b0; op2val:0xc182c834; op3val:0x54ec62c7; valaddr_reg:x16; val_offset:36; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 36, x17, x15, 712, x18)

inst_344:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x70f4b0 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x02c834 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x6c62c7 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5370f4b0; op2val:0xc182c834; op3val:0x54ec62c7; valaddr_reg:x16; val_offset:48; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 48, x17, x15, 720, x18)

inst_345:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x70f4b0 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x02c834 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x6c62c7 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5370f4b0; op2val:0xc182c834; op3val:0x54ec62c7; valaddr_reg:x16; val_offset:60; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 60, x17, x15, 728, x18)

inst_346:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x4d83d0 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x38ec27 and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x23a299 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54cd83d0; op2val:0xbfb8ec27; op3val:0x53a3a299; valaddr_reg:x16; val_offset:72; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 72, x17, x15, 736, x18)

inst_347:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x4d83d0 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x38ec27 and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x23a299 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54cd83d0; op2val:0xbfb8ec27; op3val:0x53a3a299; valaddr_reg:x16; val_offset:84; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 84, x17, x15, 744, x18)

inst_348:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x4d83d0 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x38ec27 and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x23a299 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54cd83d0; op2val:0xbfb8ec27; op3val:0x53a3a299; valaddr_reg:x16; val_offset:96; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 96, x17, x15, 752, x18)

inst_349:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x4d83d0 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x38ec27 and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x23a299 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54cd83d0; op2val:0xbfb8ec27; op3val:0x53a3a299; valaddr_reg:x16; val_offset:108; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 108, x17, x15, 760, x18)

inst_350:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x4d83d0 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x38ec27 and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x23a299 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54cd83d0; op2val:0xbfb8ec27; op3val:0x53a3a299; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 768, x18)

inst_351:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x65c518 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x5239b3 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x72bdde and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5465c518; op2val:0xc05239b3; op3val:0x5472bdde; valaddr_reg:x16; val_offset:132; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 132, x17, x15, 776, x18)

inst_352:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x65c518 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x5239b3 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x72bdde and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5465c518; op2val:0xc05239b3; op3val:0x5472bdde; valaddr_reg:x16; val_offset:144; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 144, x17, x15, 784, x18)

inst_353:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x65c518 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x5239b3 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x72bdde and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5465c518; op2val:0xc05239b3; op3val:0x5472bdde; valaddr_reg:x16; val_offset:156; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 156, x17, x15, 792, x18)

inst_354:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x65c518 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x5239b3 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x72bdde and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5465c518; op2val:0xc05239b3; op3val:0x5472bdde; valaddr_reg:x16; val_offset:168; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 168, x17, x15, 800, x18)

inst_355:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x65c518 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x5239b3 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x72bdde and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5465c518; op2val:0xc05239b3; op3val:0x5472bdde; valaddr_reg:x16; val_offset:180; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 180, x17, x15, 808, x18)

inst_356:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x021c6b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x306bec and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x4d531f and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54821c6b; op2val:0xc0306bec; op3val:0x544d531f; valaddr_reg:x16; val_offset:192; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 192, x17, x15, 816, x18)

inst_357:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x021c6b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x306bec and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x4d531f and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54821c6b; op2val:0xc0306bec; op3val:0x544d531f; valaddr_reg:x16; val_offset:204; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 204, x17, x15, 824, x18)

inst_358:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x021c6b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x306bec and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x4d531f and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54821c6b; op2val:0xc0306bec; op3val:0x544d531f; valaddr_reg:x16; val_offset:216; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 216, x17, x15, 832, x18)

inst_359:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x021c6b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x306bec and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x4d531f and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54821c6b; op2val:0xc0306bec; op3val:0x544d531f; valaddr_reg:x16; val_offset:228; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 228, x17, x15, 840, x18)

inst_360:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x021c6b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x306bec and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x4d531f and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54821c6b; op2val:0xc0306bec; op3val:0x544d531f; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 848, x18)

inst_361:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x30d594 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0c44fc and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x0391cf and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54b0d594; op2val:0xc00c44fc; op3val:0x548391cf; valaddr_reg:x16; val_offset:252; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 252, x17, x15, 856, x18)

inst_362:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x30d594 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0c44fc and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x0391cf and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54b0d594; op2val:0xc00c44fc; op3val:0x548391cf; valaddr_reg:x16; val_offset:264; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 264, x17, x15, 864, x18)

inst_363:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x30d594 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0c44fc and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x0391cf and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54b0d594; op2val:0xc00c44fc; op3val:0x548391cf; valaddr_reg:x16; val_offset:276; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 276, x17, x15, 872, x18)

inst_364:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x30d594 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0c44fc and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x0391cf and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54b0d594; op2val:0xc00c44fc; op3val:0x548391cf; valaddr_reg:x16; val_offset:288; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 288, x17, x15, 880, x18)

inst_365:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x30d594 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0c44fc and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x0391cf and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54b0d594; op2val:0xc00c44fc; op3val:0x548391cf; valaddr_reg:x16; val_offset:300; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 300, x17, x15, 888, x18)

inst_366:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x0a7ecd and fs2 == 1 and fe2 == 0x80 and fm2 == 0x453d98 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x2ad399 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x548a7ecd; op2val:0xc0453d98; op3val:0x54aad399; valaddr_reg:x16; val_offset:312; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 312, x17, x15, 896, x18)

inst_367:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x0a7ecd and fs2 == 1 and fe2 == 0x80 and fm2 == 0x453d98 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x2ad399 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x548a7ecd; op2val:0xc0453d98; op3val:0x54aad399; valaddr_reg:x16; val_offset:324; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 324, x17, x15, 904, x18)

inst_368:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x0a7ecd and fs2 == 1 and fe2 == 0x80 and fm2 == 0x453d98 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x2ad399 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x548a7ecd; op2val:0xc0453d98; op3val:0x54aad399; valaddr_reg:x16; val_offset:336; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 336, x17, x15, 912, x18)

inst_369:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x0a7ecd and fs2 == 1 and fe2 == 0x80 and fm2 == 0x453d98 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x2ad399 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x548a7ecd; op2val:0xc0453d98; op3val:0x54aad399; valaddr_reg:x16; val_offset:348; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 348, x17, x15, 920, x18)

inst_370:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x0a7ecd and fs2 == 1 and fe2 == 0x80 and fm2 == 0x453d98 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x2ad399 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x548a7ecd; op2val:0xc0453d98; op3val:0x54aad399; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 928, x18)

inst_371:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x433195 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1dc84e and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x61388c and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54c33195; op2val:0xc01dc84e; op3val:0x54e1388c; valaddr_reg:x16; val_offset:372; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 372, x17, x15, 936, x18)

inst_372:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x433195 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1dc84e and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x61388c and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54c33195; op2val:0xc01dc84e; op3val:0x54e1388c; valaddr_reg:x16; val_offset:384; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 384, x17, x15, 944, x18)

inst_373:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x433195 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1dc84e and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x61388c and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54c33195; op2val:0xc01dc84e; op3val:0x54e1388c; valaddr_reg:x16; val_offset:396; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 396, x17, x15, 952, x18)

inst_374:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x433195 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1dc84e and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x61388c and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54c33195; op2val:0xc01dc84e; op3val:0x54e1388c; valaddr_reg:x16; val_offset:408; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 408, x17, x15, 960, x18)

inst_375:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x433195 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1dc84e and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x61388c and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54c33195; op2val:0xc01dc84e; op3val:0x54e1388c; valaddr_reg:x16; val_offset:420; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 420, x17, x15, 968, x18)

inst_376:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x747ba9 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x44be05 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x6f9099 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54747ba9; op2val:0xc044be05; op3val:0x546f9099; valaddr_reg:x16; val_offset:432; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 432, x17, x15, 976, x18)

inst_377:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x747ba9 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x44be05 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x6f9099 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54747ba9; op2val:0xc044be05; op3val:0x546f9099; valaddr_reg:x16; val_offset:444; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 444, x17, x15, 984, x18)

inst_378:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x747ba9 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x44be05 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x6f9099 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54747ba9; op2val:0xc044be05; op3val:0x546f9099; valaddr_reg:x16; val_offset:456; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 456, x17, x15, 992, x18)

inst_379:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x747ba9 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x44be05 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x6f9099 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54747ba9; op2val:0xc044be05; op3val:0x546f9099; valaddr_reg:x16; val_offset:468; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 468, x17, x15, 1000, x18)

inst_380:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x747ba9 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x44be05 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x6f9099 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54747ba9; op2val:0xc044be05; op3val:0x546f9099; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1008, x18)

inst_381:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x785bd9 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x00a5a1 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x733a6f and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54f85bd9; op2val:0xc000a5a1; op3val:0x54f33a6f; valaddr_reg:x16; val_offset:492; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 492, x17, x15, 1016, x18)

inst_382:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x785bd9 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x00a5a1 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x733a6f and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54f85bd9; op2val:0xc000a5a1; op3val:0x54f33a6f; valaddr_reg:x16; val_offset:504; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 504, x17, x15, 1024, x18)

inst_383:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x785bd9 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x00a5a1 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x733a6f and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54f85bd9; op2val:0xc000a5a1; op3val:0x54f33a6f; valaddr_reg:x16; val_offset:516; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 516, x17, x15, 1032, x18)

inst_384:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x785bd9 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x00a5a1 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x733a6f and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54f85bd9; op2val:0xc000a5a1; op3val:0x54f33a6f; valaddr_reg:x16; val_offset:528; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 528, x17, x15, 1040, x18)

inst_385:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x785bd9 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x00a5a1 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x733a6f and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54f85bd9; op2val:0xc000a5a1; op3val:0x54f33a6f; valaddr_reg:x16; val_offset:540; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 540, x17, x15, 1048, x18)

inst_386:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x4bab41 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x03043e and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x20f00a and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54cbab41; op2val:0xc003043e; op3val:0x54a0f00a; valaddr_reg:x16; val_offset:552; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 552, x17, x15, 1056, x18)

inst_387:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x4bab41 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x03043e and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x20f00a and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54cbab41; op2val:0xc003043e; op3val:0x54a0f00a; valaddr_reg:x16; val_offset:564; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 564, x17, x15, 1064, x18)

inst_388:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x4bab41 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x03043e and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x20f00a and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54cbab41; op2val:0xc003043e; op3val:0x54a0f00a; valaddr_reg:x16; val_offset:576; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 576, x17, x15, 1072, x18)

inst_389:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x4bab41 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x03043e and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x20f00a and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54cbab41; op2val:0xc003043e; op3val:0x54a0f00a; valaddr_reg:x16; val_offset:588; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 588, x17, x15, 1080, x18)

inst_390:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x4bab41 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x03043e and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x20f00a and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54cbab41; op2val:0xc003043e; op3val:0x54a0f00a; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1088, x18)

inst_391:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x2206ab and fs2 == 1 and fe2 == 0x82 and fm2 == 0x16bc36 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x7b383d and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x53a206ab; op2val:0xc116bc36; op3val:0x547b383d; valaddr_reg:x16; val_offset:612; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 612, x17, x15, 1096, x18)

inst_392:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x2206ab and fs2 == 1 and fe2 == 0x82 and fm2 == 0x16bc36 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x7b383d and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x53a206ab; op2val:0xc116bc36; op3val:0x547b383d; valaddr_reg:x16; val_offset:624; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 624, x17, x15, 1104, x18)

inst_393:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x2206ab and fs2 == 1 and fe2 == 0x82 and fm2 == 0x16bc36 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x7b383d and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x53a206ab; op2val:0xc116bc36; op3val:0x547b383d; valaddr_reg:x16; val_offset:636; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 636, x17, x15, 1112, x18)

inst_394:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x2206ab and fs2 == 1 and fe2 == 0x82 and fm2 == 0x16bc36 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x7b383d and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x53a206ab; op2val:0xc116bc36; op3val:0x547b383d; valaddr_reg:x16; val_offset:648; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 648, x17, x15, 1120, x18)

inst_395:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x2206ab and fs2 == 1 and fe2 == 0x82 and fm2 == 0x16bc36 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x7b383d and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x53a206ab; op2val:0xc116bc36; op3val:0x547b383d; valaddr_reg:x16; val_offset:660; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 660, x17, x15, 1128, x18)

inst_396:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x203e5e and fs2 == 1 and fe2 == 0x81 and fm2 == 0x180f8a and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x797615 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54203e5e; op2val:0xc0980f8a; op3val:0x54797615; valaddr_reg:x16; val_offset:672; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 672, x17, x15, 1136, x18)

inst_397:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x203e5e and fs2 == 1 and fe2 == 0x81 and fm2 == 0x180f8a and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x797615 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54203e5e; op2val:0xc0980f8a; op3val:0x54797615; valaddr_reg:x16; val_offset:684; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 684, x17, x15, 1144, x18)

inst_398:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x203e5e and fs2 == 1 and fe2 == 0x81 and fm2 == 0x180f8a and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x797615 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54203e5e; op2val:0xc0980f8a; op3val:0x54797615; valaddr_reg:x16; val_offset:696; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 696, x17, x15, 1152, x18)

inst_399:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x203e5e and fs2 == 1 and fe2 == 0x81 and fm2 == 0x180f8a and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x797615 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54203e5e; op2val:0xc0980f8a; op3val:0x54797615; valaddr_reg:x16; val_offset:708; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 708, x17, x15, 1160, x18)

inst_400:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x203e5e and fs2 == 1 and fe2 == 0x81 and fm2 == 0x180f8a and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x797615 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54203e5e; op2val:0xc0980f8a; op3val:0x54797615; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1168, x18)

inst_401:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x2bb19d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x04225c and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x44f507 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x542bb19d; op2val:0xc084225c; op3val:0x5444f507; valaddr_reg:x16; val_offset:732; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 732, x17, x15, 1176, x18)

inst_402:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x2bb19d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x04225c and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x44f507 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x542bb19d; op2val:0xc084225c; op3val:0x5444f507; valaddr_reg:x16; val_offset:744; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 744, x17, x15, 1184, x18)

inst_403:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x2bb19d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x04225c and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x44f507 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x542bb19d; op2val:0xc084225c; op3val:0x5444f507; valaddr_reg:x16; val_offset:756; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 756, x17, x15, 1192, x18)

inst_404:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x2bb19d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x04225c and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x44f507 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x542bb19d; op2val:0xc084225c; op3val:0x5444f507; valaddr_reg:x16; val_offset:768; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 768, x17, x15, 1200, x18)

inst_405:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x2bb19d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x04225c and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x44f507 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x542bb19d; op2val:0xc084225c; op3val:0x5444f507; valaddr_reg:x16; val_offset:780; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 780, x17, x15, 1208, x18)

inst_406:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x21a10e and fs2 == 1 and fe2 == 0x7f and fm2 == 0x59dd5e and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x18d497 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54a1a10e; op2val:0xbfd9dd5e; op3val:0x5318d497; valaddr_reg:x16; val_offset:792; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 792, x17, x15, 1216, x18)

inst_407:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x21a10e and fs2 == 1 and fe2 == 0x7f and fm2 == 0x59dd5e and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x18d497 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54a1a10e; op2val:0xbfd9dd5e; op3val:0x5318d497; valaddr_reg:x16; val_offset:804; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 804, x17, x15, 1224, x18)

inst_408:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x21a10e and fs2 == 1 and fe2 == 0x7f and fm2 == 0x59dd5e and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x18d497 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54a1a10e; op2val:0xbfd9dd5e; op3val:0x5318d497; valaddr_reg:x16; val_offset:816; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 816, x17, x15, 1232, x18)

inst_409:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x21a10e and fs2 == 1 and fe2 == 0x7f and fm2 == 0x59dd5e and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x18d497 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54a1a10e; op2val:0xbfd9dd5e; op3val:0x5318d497; valaddr_reg:x16; val_offset:828; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 828, x17, x15, 1240, x18)

inst_410:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x21a10e and fs2 == 1 and fe2 == 0x7f and fm2 == 0x59dd5e and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x18d497 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54a1a10e; op2val:0xbfd9dd5e; op3val:0x5318d497; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1248, x18)

inst_411:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x0c290e and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0c12c4 and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x4b0ba0 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x548c290e; op2val:0xc00c12c4; op3val:0x53cb0ba0; valaddr_reg:x16; val_offset:852; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 852, x17, x15, 1256, x18)

inst_412:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x0c290e and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0c12c4 and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x4b0ba0 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x548c290e; op2val:0xc00c12c4; op3val:0x53cb0ba0; valaddr_reg:x16; val_offset:864; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 864, x17, x15, 1264, x18)

inst_413:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x0c290e and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0c12c4 and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x4b0ba0 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x548c290e; op2val:0xc00c12c4; op3val:0x53cb0ba0; valaddr_reg:x16; val_offset:876; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 876, x17, x15, 1272, x18)

inst_414:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x0c290e and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0c12c4 and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x4b0ba0 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x548c290e; op2val:0xc00c12c4; op3val:0x53cb0ba0; valaddr_reg:x16; val_offset:888; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 888, x17, x15, 1280, x18)

inst_415:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x0c290e and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0c12c4 and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x4b0ba0 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x548c290e; op2val:0xc00c12c4; op3val:0x53cb0ba0; valaddr_reg:x16; val_offset:900; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 900, x17, x15, 1288, x18)

inst_416:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x7fb20d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2384d1 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x0d4c1f and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54ffb20d; op2val:0xbfa384d1; op3val:0x540d4c1f; valaddr_reg:x16; val_offset:912; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 912, x17, x15, 1296, x18)

inst_417:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x7fb20d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2384d1 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x0d4c1f and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54ffb20d; op2val:0xbfa384d1; op3val:0x540d4c1f; valaddr_reg:x16; val_offset:924; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 924, x17, x15, 1304, x18)

inst_418:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x7fb20d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2384d1 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x0d4c1f and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54ffb20d; op2val:0xbfa384d1; op3val:0x540d4c1f; valaddr_reg:x16; val_offset:936; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 936, x17, x15, 1312, x18)

inst_419:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x7fb20d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2384d1 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x0d4c1f and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54ffb20d; op2val:0xbfa384d1; op3val:0x540d4c1f; valaddr_reg:x16; val_offset:948; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 948, x17, x15, 1320, x18)

inst_420:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x7fb20d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2384d1 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x0d4c1f and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54ffb20d; op2val:0xbfa384d1; op3val:0x540d4c1f; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 1328, x18)

inst_421:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x46f4cb and fs2 == 1 and fe2 == 0x80 and fm2 == 0x11ecc6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x62d155 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec6f4cb; op2val:0xc011ecc6; op3val:0x3f62d155; valaddr_reg:x16; val_offset:972; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 972, x17, x15, 1336, x18)

inst_422:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x46f4cb and fs2 == 1 and fe2 == 0x80 and fm2 == 0x11ecc6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x62d155 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec6f4cb; op2val:0xc011ecc6; op3val:0x3f62d155; valaddr_reg:x16; val_offset:984; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 984, x17, x15, 1344, x18)

inst_423:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x46f4cb and fs2 == 1 and fe2 == 0x80 and fm2 == 0x11ecc6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x62d155 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec6f4cb; op2val:0xc011ecc6; op3val:0x3f62d155; valaddr_reg:x16; val_offset:996; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 996, x17, x15, 1352, x18)

inst_424:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x46f4cb and fs2 == 1 and fe2 == 0x80 and fm2 == 0x11ecc6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x62d155 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec6f4cb; op2val:0xc011ecc6; op3val:0x3f62d155; valaddr_reg:x16; val_offset:1008; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1008, x17, x15, 1360, x18)

inst_425:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x46f4cb and fs2 == 1 and fe2 == 0x80 and fm2 == 0x11ecc6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x62d155 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec6f4cb; op2val:0xc011ecc6; op3val:0x3f62d155; valaddr_reg:x16; val_offset:1020; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1020, x17, x15, 1368, x18)

inst_426:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x041622 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x500e54 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x56b2c0 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f041622; op2val:0xbf500e54; op3val:0x3ed6b2c0; valaddr_reg:x16; val_offset:1032; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1032, x17, x15, 1376, x18)

inst_427:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x041622 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x500e54 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x56b2c0 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f041622; op2val:0xbf500e54; op3val:0x3ed6b2c0; valaddr_reg:x16; val_offset:1044; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1044, x17, x15, 1384, x18)

inst_428:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x041622 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x500e54 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x56b2c0 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f041622; op2val:0xbf500e54; op3val:0x3ed6b2c0; valaddr_reg:x16; val_offset:1056; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1056, x17, x15, 1392, x18)

inst_429:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x041622 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x500e54 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x56b2c0 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f041622; op2val:0xbf500e54; op3val:0x3ed6b2c0; valaddr_reg:x16; val_offset:1068; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1068, x17, x15, 1400, x18)

inst_430:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x041622 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x500e54 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x56b2c0 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f041622; op2val:0xbf500e54; op3val:0x3ed6b2c0; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 1408, x18)

inst_431:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7fc274 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x20c8df and fs3 == 0 and fe3 == 0x7e and fm3 == 0x20a238 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3effc274; op2val:0xbfa0c8df; op3val:0x3f20a238; valaddr_reg:x16; val_offset:1092; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1092, x17, x15, 1416, x18)

inst_432:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7fc274 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x20c8df and fs3 == 0 and fe3 == 0x7e and fm3 == 0x20a238 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3effc274; op2val:0xbfa0c8df; op3val:0x3f20a238; valaddr_reg:x16; val_offset:1104; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1104, x17, x15, 1424, x18)

inst_433:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7fc274 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x20c8df and fs3 == 0 and fe3 == 0x7e and fm3 == 0x20a238 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3effc274; op2val:0xbfa0c8df; op3val:0x3f20a238; valaddr_reg:x16; val_offset:1116; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1116, x17, x15, 1432, x18)

inst_434:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7fc274 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x20c8df and fs3 == 0 and fe3 == 0x7e and fm3 == 0x20a238 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3effc274; op2val:0xbfa0c8df; op3val:0x3f20a238; valaddr_reg:x16; val_offset:1128; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1128, x17, x15, 1440, x18)

inst_435:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7fc274 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x20c8df and fs3 == 0 and fe3 == 0x7e and fm3 == 0x20a238 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3effc274; op2val:0xbfa0c8df; op3val:0x3f20a238; valaddr_reg:x16; val_offset:1140; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1140, x17, x15, 1448, x18)

inst_436:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x627d58 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x634503 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x491234 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d627d58; op2val:0xc0e34503; op3val:0x3ec91234; valaddr_reg:x16; val_offset:1152; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1152, x17, x15, 1456, x18)

inst_437:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x627d58 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x634503 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x491234 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d627d58; op2val:0xc0e34503; op3val:0x3ec91234; valaddr_reg:x16; val_offset:1164; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1164, x17, x15, 1464, x18)

inst_438:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x627d58 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x634503 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x491234 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d627d58; op2val:0xc0e34503; op3val:0x3ec91234; valaddr_reg:x16; val_offset:1176; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1176, x17, x15, 1472, x18)

inst_439:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x627d58 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x634503 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x491234 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d627d58; op2val:0xc0e34503; op3val:0x3ec91234; valaddr_reg:x16; val_offset:1188; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1188, x17, x15, 1480, x18)

inst_440:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x627d58 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x634503 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x491234 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d627d58; op2val:0xc0e34503; op3val:0x3ec91234; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 1488, x18)

inst_441:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4cb6f9 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x1cd08b and fs3 == 0 and fe3 == 0x7c and fm3 == 0x7acc88 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4cb6f9; op2val:0xbe9cd08b; op3val:0x3e7acc88; valaddr_reg:x16; val_offset:1212; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1212, x17, x15, 1496, x18)

inst_442:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4cb6f9 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x1cd08b and fs3 == 0 and fe3 == 0x7c and fm3 == 0x7acc88 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4cb6f9; op2val:0xbe9cd08b; op3val:0x3e7acc88; valaddr_reg:x16; val_offset:1224; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1224, x17, x15, 1504, x18)

inst_443:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4cb6f9 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x1cd08b and fs3 == 0 and fe3 == 0x7c and fm3 == 0x7acc88 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4cb6f9; op2val:0xbe9cd08b; op3val:0x3e7acc88; valaddr_reg:x16; val_offset:1236; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1236, x17, x15, 1512, x18)

inst_444:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4cb6f9 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x1cd08b and fs3 == 0 and fe3 == 0x7c and fm3 == 0x7acc88 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4cb6f9; op2val:0xbe9cd08b; op3val:0x3e7acc88; valaddr_reg:x16; val_offset:1248; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1248, x17, x15, 1520, x18)

inst_445:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4cb6f9 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x1cd08b and fs3 == 0 and fe3 == 0x7c and fm3 == 0x7acc88 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4cb6f9; op2val:0xbe9cd08b; op3val:0x3e7acc88; valaddr_reg:x16; val_offset:1260; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1260, x17, x15, 1528, x18)

inst_446:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x6d7224 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x571875 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x47818c and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ded7224; op2val:0xbe571875; op3val:0x3cc7818c; valaddr_reg:x16; val_offset:1272; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1272, x17, x15, 1536, x18)

inst_447:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x6d7224 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x571875 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x47818c and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ded7224; op2val:0xbe571875; op3val:0x3cc7818c; valaddr_reg:x16; val_offset:1284; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1284, x17, x15, 1544, x18)

inst_448:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x6d7224 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x571875 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x47818c and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ded7224; op2val:0xbe571875; op3val:0x3cc7818c; valaddr_reg:x16; val_offset:1296; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1296, x17, x15, 1552, x18)

inst_449:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x6d7224 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x571875 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x47818c and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ded7224; op2val:0xbe571875; op3val:0x3cc7818c; valaddr_reg:x16; val_offset:1308; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1308, x17, x15, 1560, x18)

inst_450:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x6d7224 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x571875 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x47818c and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ded7224; op2val:0xbe571875; op3val:0x3cc7818c; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 1568, x18)

inst_451:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0336f2 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x61c854 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6773f3 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0336f2; op2val:0xbf61c854; op3val:0x3ee773f3; valaddr_reg:x16; val_offset:1332; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1332, x17, x15, 1576, x18)

inst_452:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0336f2 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x61c854 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6773f3 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0336f2; op2val:0xbf61c854; op3val:0x3ee773f3; valaddr_reg:x16; val_offset:1344; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1344, x17, x15, 1584, x18)

inst_453:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0336f2 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x61c854 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6773f3 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0336f2; op2val:0xbf61c854; op3val:0x3ee773f3; valaddr_reg:x16; val_offset:1356; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1356, x17, x15, 1592, x18)

inst_454:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0336f2 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x61c854 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6773f3 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0336f2; op2val:0xbf61c854; op3val:0x3ee773f3; valaddr_reg:x16; val_offset:1368; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1368, x17, x15, 1600, x18)

inst_455:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0336f2 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x61c854 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6773f3 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0336f2; op2val:0xbf61c854; op3val:0x3ee773f3; valaddr_reg:x16; val_offset:1380; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1380, x17, x15, 1608, x18)

inst_456:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0da925 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x39b54f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4d8721 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0da925; op2val:0xbf39b54f; op3val:0x3ecd8721; valaddr_reg:x16; val_offset:1392; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1392, x17, x15, 1616, x18)

inst_457:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0da925 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x39b54f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4d8721 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0da925; op2val:0xbf39b54f; op3val:0x3ecd8721; valaddr_reg:x16; val_offset:1404; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1404, x17, x15, 1624, x18)

inst_458:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0da925 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x39b54f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4d8721 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0da925; op2val:0xbf39b54f; op3val:0x3ecd8721; valaddr_reg:x16; val_offset:1416; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1416, x17, x15, 1632, x18)

inst_459:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0da925 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x39b54f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4d8721 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0da925; op2val:0xbf39b54f; op3val:0x3ecd8721; valaddr_reg:x16; val_offset:1428; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1428, x17, x15, 1640, x18)

inst_460:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0da925 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x39b54f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4d8721 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0da925; op2val:0xbf39b54f; op3val:0x3ecd8721; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 1648, x18)

inst_461:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x12849c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x15d4cb and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2b81f2 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e12849c; op2val:0xc015d4cb; op3val:0x3eab81f2; valaddr_reg:x16; val_offset:1452; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1452, x17, x15, 1656, x18)

inst_462:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x12849c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x15d4cb and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2b81f2 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e12849c; op2val:0xc015d4cb; op3val:0x3eab81f2; valaddr_reg:x16; val_offset:1464; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1464, x17, x15, 1664, x18)

inst_463:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x12849c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x15d4cb and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2b81f2 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e12849c; op2val:0xc015d4cb; op3val:0x3eab81f2; valaddr_reg:x16; val_offset:1476; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1476, x17, x15, 1672, x18)

inst_464:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x12849c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x15d4cb and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2b81f2 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e12849c; op2val:0xc015d4cb; op3val:0x3eab81f2; valaddr_reg:x16; val_offset:1488; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1488, x17, x15, 1680, x18)

inst_465:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x12849c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x15d4cb and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2b81f2 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e12849c; op2val:0xc015d4cb; op3val:0x3eab81f2; valaddr_reg:x16; val_offset:1500; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1500, x17, x15, 1688, x18)

inst_466:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x61a9af and fs2 == 1 and fe2 == 0x7e and fm2 == 0x324500 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1d24cf and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f61a9af; op2val:0xbf324500; op3val:0x3f1d24cf; valaddr_reg:x16; val_offset:1512; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1512, x17, x15, 1696, x18)

inst_467:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x61a9af and fs2 == 1 and fe2 == 0x7e and fm2 == 0x324500 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1d24cf and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f61a9af; op2val:0xbf324500; op3val:0x3f1d24cf; valaddr_reg:x16; val_offset:1524; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1524, x17, x15, 1704, x18)

inst_468:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x61a9af and fs2 == 1 and fe2 == 0x7e and fm2 == 0x324500 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1d24cf and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f61a9af; op2val:0xbf324500; op3val:0x3f1d24cf; valaddr_reg:x16; val_offset:1536; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1536, x17, x15, 1712, x18)

inst_469:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x61a9af and fs2 == 1 and fe2 == 0x7e and fm2 == 0x324500 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1d24cf and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f61a9af; op2val:0xbf324500; op3val:0x3f1d24cf; valaddr_reg:x16; val_offset:1548; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1548, x17, x15, 1720, x18)

inst_470:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x61a9af and fs2 == 1 and fe2 == 0x7e and fm2 == 0x324500 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1d24cf and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f61a9af; op2val:0xbf324500; op3val:0x3f1d24cf; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1728, x18)

inst_471:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x19d02d and fs2 == 1 and fe2 == 0x7d and fm2 == 0x44f701 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x6caf96 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f19d02d; op2val:0xbec4f701; op3val:0x3e6caf96; valaddr_reg:x16; val_offset:1572; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1572, x17, x15, 1736, x18)

inst_472:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x19d02d and fs2 == 1 and fe2 == 0x7d and fm2 == 0x44f701 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x6caf96 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f19d02d; op2val:0xbec4f701; op3val:0x3e6caf96; valaddr_reg:x16; val_offset:1584; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1584, x17, x15, 1744, x18)

inst_473:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x19d02d and fs2 == 1 and fe2 == 0x7d and fm2 == 0x44f701 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x6caf96 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f19d02d; op2val:0xbec4f701; op3val:0x3e6caf96; valaddr_reg:x16; val_offset:1596; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1596, x17, x15, 1752, x18)

inst_474:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x19d02d and fs2 == 1 and fe2 == 0x7d and fm2 == 0x44f701 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x6caf96 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f19d02d; op2val:0xbec4f701; op3val:0x3e6caf96; valaddr_reg:x16; val_offset:1608; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1608, x17, x15, 1760, x18)

inst_475:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x19d02d and fs2 == 1 and fe2 == 0x7d and fm2 == 0x44f701 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x6caf96 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f19d02d; op2val:0xbec4f701; op3val:0x3e6caf96; valaddr_reg:x16; val_offset:1620; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1620, x17, x15, 1768, x18)

inst_476:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x23e9e4 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x7a6a88 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x20569f and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e23e9e4; op2val:0xbefa6a88; op3val:0x3da0569f; valaddr_reg:x16; val_offset:1632; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1632, x17, x15, 1776, x18)

inst_477:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x23e9e4 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x7a6a88 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x20569f and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e23e9e4; op2val:0xbefa6a88; op3val:0x3da0569f; valaddr_reg:x16; val_offset:1644; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1644, x17, x15, 1784, x18)

inst_478:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x23e9e4 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x7a6a88 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x20569f and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e23e9e4; op2val:0xbefa6a88; op3val:0x3da0569f; valaddr_reg:x16; val_offset:1656; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1656, x17, x15, 1792, x18)

inst_479:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x23e9e4 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x7a6a88 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x20569f and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e23e9e4; op2val:0xbefa6a88; op3val:0x3da0569f; valaddr_reg:x16; val_offset:1668; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1668, x17, x15, 1800, x18)

inst_480:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x23e9e4 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x7a6a88 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x20569f and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e23e9e4; op2val:0xbefa6a88; op3val:0x3da0569f; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1808, x18)

inst_481:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x436c81 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x083778 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4ff7f9 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f436c81; op2val:0xbf083778; op3val:0x3ecff7f9; valaddr_reg:x16; val_offset:1692; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1692, x17, x15, 1816, x18)

inst_482:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x436c81 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x083778 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4ff7f9 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f436c81; op2val:0xbf083778; op3val:0x3ecff7f9; valaddr_reg:x16; val_offset:1704; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1704, x17, x15, 1824, x18)

inst_483:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x436c81 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x083778 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4ff7f9 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f436c81; op2val:0xbf083778; op3val:0x3ecff7f9; valaddr_reg:x16; val_offset:1716; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1716, x17, x15, 1832, x18)

inst_484:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x436c81 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x083778 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4ff7f9 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f436c81; op2val:0xbf083778; op3val:0x3ecff7f9; valaddr_reg:x16; val_offset:1728; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1728, x17, x15, 1840, x18)

inst_485:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x436c81 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x083778 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4ff7f9 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f436c81; op2val:0xbf083778; op3val:0x3ecff7f9; valaddr_reg:x16; val_offset:1740; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1740, x17, x15, 1848, x18)

inst_486:
// fs1 == 0 and fe1 == 0x77 and fm1 == 0x701276 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x6a7f69 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5be85c and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3bf01276; op2val:0xc2ea7f69; op3val:0x3f5be85c; valaddr_reg:x16; val_offset:1752; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1752, x17, x15, 1856, x18)

inst_487:
// fs1 == 0 and fe1 == 0x77 and fm1 == 0x701276 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x6a7f69 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5be85c and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3bf01276; op2val:0xc2ea7f69; op3val:0x3f5be85c; valaddr_reg:x16; val_offset:1764; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1764, x17, x15, 1864, x18)

inst_488:
// fs1 == 0 and fe1 == 0x77 and fm1 == 0x701276 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x6a7f69 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5be85c and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3bf01276; op2val:0xc2ea7f69; op3val:0x3f5be85c; valaddr_reg:x16; val_offset:1776; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1776, x17, x15, 1872, x18)

inst_489:
// fs1 == 0 and fe1 == 0x77 and fm1 == 0x701276 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x6a7f69 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5be85c and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3bf01276; op2val:0xc2ea7f69; op3val:0x3f5be85c; valaddr_reg:x16; val_offset:1788; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1788, x17, x15, 1880, x18)

inst_490:
// fs1 == 0 and fe1 == 0x77 and fm1 == 0x701276 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x6a7f69 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5be85c and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3bf01276; op2val:0xc2ea7f69; op3val:0x3f5be85c; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1888, x18)

inst_491:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3bc05c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x41e408 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0e3343 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3bc05c; op2val:0xbf41e408; op3val:0x3f0e3343; valaddr_reg:x16; val_offset:1812; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1812, x17, x15, 1896, x18)

inst_492:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3bc05c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x41e408 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0e3343 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3bc05c; op2val:0xbf41e408; op3val:0x3f0e3343; valaddr_reg:x16; val_offset:1824; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1824, x17, x15, 1904, x18)

inst_493:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3bc05c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x41e408 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0e3343 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3bc05c; op2val:0xbf41e408; op3val:0x3f0e3343; valaddr_reg:x16; val_offset:1836; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1836, x17, x15, 1912, x18)

inst_494:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3bc05c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x41e408 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0e3343 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3bc05c; op2val:0xbf41e408; op3val:0x3f0e3343; valaddr_reg:x16; val_offset:1848; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1848, x17, x15, 1920, x18)

inst_495:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3bc05c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x41e408 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0e3343 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3bc05c; op2val:0xbf41e408; op3val:0x3f0e3343; valaddr_reg:x16; val_offset:1860; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1860, x17, x15, 1928, x18)

inst_496:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1ff234 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x32ec29 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5f93eb and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e9ff234; op2val:0xbfb2ec29; op3val:0x3edf93eb; valaddr_reg:x16; val_offset:1872; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1872, x17, x15, 1936, x18)

inst_497:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1ff234 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x32ec29 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5f93eb and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e9ff234; op2val:0xbfb2ec29; op3val:0x3edf93eb; valaddr_reg:x16; val_offset:1884; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1884, x17, x15, 1944, x18)

inst_498:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1ff234 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x32ec29 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5f93eb and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e9ff234; op2val:0xbfb2ec29; op3val:0x3edf93eb; valaddr_reg:x16; val_offset:1896; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1896, x17, x15, 1952, x18)

inst_499:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1ff234 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x32ec29 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5f93eb and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e9ff234; op2val:0xbfb2ec29; op3val:0x3edf93eb; valaddr_reg:x16; val_offset:1908; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1908, x17, x15, 1960, x18)

inst_500:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1ff234 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x32ec29 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5f93eb and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e9ff234; op2val:0xbfb2ec29; op3val:0x3edf93eb; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1968, x18)

inst_501:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4e236f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7e07c9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4c8d6e and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ece236f; op2val:0xbffe07c9; op3val:0x3f4c8d6e; valaddr_reg:x16; val_offset:1932; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1932, x17, x15, 1976, x18)

inst_502:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4e236f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7e07c9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4c8d6e and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ece236f; op2val:0xbffe07c9; op3val:0x3f4c8d6e; valaddr_reg:x16; val_offset:1944; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1944, x17, x15, 1984, x18)

inst_503:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4e236f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7e07c9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4c8d6e and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ece236f; op2val:0xbffe07c9; op3val:0x3f4c8d6e; valaddr_reg:x16; val_offset:1956; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1956, x17, x15, 1992, x18)

inst_504:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4e236f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7e07c9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4c8d6e and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ece236f; op2val:0xbffe07c9; op3val:0x3f4c8d6e; valaddr_reg:x16; val_offset:1968; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1968, x17, x15, 2000, x18)

inst_505:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4e236f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7e07c9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4c8d6e and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ece236f; op2val:0xbffe07c9; op3val:0x3f4c8d6e; valaddr_reg:x16; val_offset:1980; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1980, x17, x15, 2008, x18)

inst_506:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4775e5 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x363b8c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0dfc36 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4775e5; op2val:0xbeb63b8c; op3val:0x3e8dfc36; valaddr_reg:x16; val_offset:1992; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1992, x17, x15, 2016, x18)

inst_507:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4775e5 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x363b8c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0dfc36 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4775e5; op2val:0xbeb63b8c; op3val:0x3e8dfc36; valaddr_reg:x16; val_offset:2004; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 2004, x17, x15, 2024, x18)
RVTEST_SIGBASE(x15,signature_x15_3)

inst_508:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4775e5 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x363b8c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0dfc36 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4775e5; op2val:0xbeb63b8c; op3val:0x3e8dfc36; valaddr_reg:x16; val_offset:2016; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 2016, x17, x15, 0, x18)

inst_509:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4775e5 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x363b8c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0dfc36 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4775e5; op2val:0xbeb63b8c; op3val:0x3e8dfc36; valaddr_reg:x16; val_offset:2028; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 2028, x17, x15, 8, x18)
addi x16,x16,2040

inst_510:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4775e5 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x363b8c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0dfc36 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4775e5; op2val:0xbeb63b8c; op3val:0x3e8dfc36; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 16, x18)

inst_511:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x569a97 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x681b80 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x429327 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f569a97; op2val:0xbf681b80; op3val:0x3f429327; valaddr_reg:x16; val_offset:12; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 12, x17, x15, 24, x18)

inst_512:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x569a97 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x681b80 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x429327 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f569a97; op2val:0xbf681b80; op3val:0x3f429327; valaddr_reg:x16; val_offset:24; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 24, x17, x15, 32, x18)

inst_513:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x569a97 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x681b80 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x429327 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f569a97; op2val:0xbf681b80; op3val:0x3f429327; valaddr_reg:x16; val_offset:36; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 36, x17, x15, 40, x18)

inst_514:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x569a97 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x681b80 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x429327 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f569a97; op2val:0xbf681b80; op3val:0x3f429327; valaddr_reg:x16; val_offset:48; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 48, x17, x15, 48, x18)

inst_515:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x569a97 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x681b80 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x429327 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f569a97; op2val:0xbf681b80; op3val:0x3f429327; valaddr_reg:x16; val_offset:60; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 60, x17, x15, 56, x18)

inst_516:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x504c8a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x752d9f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x477e60 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e504c8a; op2val:0xbff52d9f; op3val:0x3ec77e60; valaddr_reg:x16; val_offset:72; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 72, x17, x15, 64, x18)

inst_517:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x504c8a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x752d9f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x477e60 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e504c8a; op2val:0xbff52d9f; op3val:0x3ec77e60; valaddr_reg:x16; val_offset:84; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 84, x17, x15, 72, x18)

inst_518:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x504c8a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x752d9f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x477e60 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e504c8a; op2val:0xbff52d9f; op3val:0x3ec77e60; valaddr_reg:x16; val_offset:96; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 96, x17, x15, 80, x18)

inst_519:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x504c8a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x752d9f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x477e60 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e504c8a; op2val:0xbff52d9f; op3val:0x3ec77e60; valaddr_reg:x16; val_offset:108; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 108, x17, x15, 88, x18)

inst_520:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x504c8a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x752d9f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x477e60 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e504c8a; op2val:0xbff52d9f; op3val:0x3ec77e60; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 96, x18)

inst_521:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x07f6b2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3bb21d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x475f9b and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f07f6b2; op2val:0xbfbbb21d; op3val:0x3f475f9b; valaddr_reg:x16; val_offset:132; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 132, x17, x15, 104, x18)

inst_522:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x07f6b2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3bb21d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x475f9b and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f07f6b2; op2val:0xbfbbb21d; op3val:0x3f475f9b; valaddr_reg:x16; val_offset:144; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 144, x17, x15, 112, x18)

inst_523:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x07f6b2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3bb21d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x475f9b and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f07f6b2; op2val:0xbfbbb21d; op3val:0x3f475f9b; valaddr_reg:x16; val_offset:156; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 156, x17, x15, 120, x18)

inst_524:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x07f6b2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3bb21d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x475f9b and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f07f6b2; op2val:0xbfbbb21d; op3val:0x3f475f9b; valaddr_reg:x16; val_offset:168; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 168, x17, x15, 128, x18)

inst_525:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x07f6b2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3bb21d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x475f9b and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f07f6b2; op2val:0xbfbbb21d; op3val:0x3f475f9b; valaddr_reg:x16; val_offset:180; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 180, x17, x15, 136, x18)

inst_526:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x43cc0c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0044db and fs3 == 0 and fe3 == 0x7d and fm3 == 0x443560 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec3cc0c; op2val:0xbf8044db; op3val:0x3ec43560; valaddr_reg:x16; val_offset:192; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 192, x17, x15, 144, x18)

inst_527:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x43cc0c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0044db and fs3 == 0 and fe3 == 0x7d and fm3 == 0x443560 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec3cc0c; op2val:0xbf8044db; op3val:0x3ec43560; valaddr_reg:x16; val_offset:204; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 204, x17, x15, 152, x18)

inst_528:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x43cc0c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0044db and fs3 == 0 and fe3 == 0x7d and fm3 == 0x443560 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec3cc0c; op2val:0xbf8044db; op3val:0x3ec43560; valaddr_reg:x16; val_offset:216; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 216, x17, x15, 160, x18)

inst_529:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x43cc0c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0044db and fs3 == 0 and fe3 == 0x7d and fm3 == 0x443560 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec3cc0c; op2val:0xbf8044db; op3val:0x3ec43560; valaddr_reg:x16; val_offset:228; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 228, x17, x15, 168, x18)

inst_530:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x43cc0c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0044db and fs3 == 0 and fe3 == 0x7d and fm3 == 0x443560 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec3cc0c; op2val:0xbf8044db; op3val:0x3ec43560; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 176, x18)

inst_531:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x05d901 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x65429f and fs3 == 0 and fe3 == 0x79 and fm3 == 0x6fbbe6 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e05d901; op2val:0xbe65429f; op3val:0x3cefbbe6; valaddr_reg:x16; val_offset:252; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 252, x17, x15, 184, x18)

inst_532:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x05d901 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x65429f and fs3 == 0 and fe3 == 0x79 and fm3 == 0x6fbbe6 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e05d901; op2val:0xbe65429f; op3val:0x3cefbbe6; valaddr_reg:x16; val_offset:264; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 264, x17, x15, 192, x18)

inst_533:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x05d901 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x65429f and fs3 == 0 and fe3 == 0x79 and fm3 == 0x6fbbe6 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e05d901; op2val:0xbe65429f; op3val:0x3cefbbe6; valaddr_reg:x16; val_offset:276; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 276, x17, x15, 200, x18)

inst_534:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x05d901 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x65429f and fs3 == 0 and fe3 == 0x79 and fm3 == 0x6fbbe6 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e05d901; op2val:0xbe65429f; op3val:0x3cefbbe6; valaddr_reg:x16; val_offset:288; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 288, x17, x15, 208, x18)

inst_535:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x05d901 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x65429f and fs3 == 0 and fe3 == 0x79 and fm3 == 0x6fbbe6 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e05d901; op2val:0xbe65429f; op3val:0x3cefbbe6; valaddr_reg:x16; val_offset:300; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 300, x17, x15, 216, x18)

inst_536:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x21dfae and fs2 == 1 and fe2 == 0x7d and fm2 == 0x135347 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x3a5033 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ea1dfae; op2val:0xbe935347; op3val:0x3dba5033; valaddr_reg:x16; val_offset:312; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 312, x17, x15, 224, x18)

inst_537:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x21dfae and fs2 == 1 and fe2 == 0x7d and fm2 == 0x135347 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x3a5033 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ea1dfae; op2val:0xbe935347; op3val:0x3dba5033; valaddr_reg:x16; val_offset:324; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 324, x17, x15, 232, x18)

inst_538:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x21dfae and fs2 == 1 and fe2 == 0x7d and fm2 == 0x135347 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x3a5033 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ea1dfae; op2val:0xbe935347; op3val:0x3dba5033; valaddr_reg:x16; val_offset:336; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 336, x17, x15, 240, x18)

inst_539:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x21dfae and fs2 == 1 and fe2 == 0x7d and fm2 == 0x135347 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x3a5033 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ea1dfae; op2val:0xbe935347; op3val:0x3dba5033; valaddr_reg:x16; val_offset:348; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 348, x17, x15, 248, x18)

inst_540:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x21dfae and fs2 == 1 and fe2 == 0x7d and fm2 == 0x135347 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x3a5033 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ea1dfae; op2val:0xbe935347; op3val:0x3dba5033; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 256, x18)

inst_541:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7ce776 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x6d2670 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x6a4842 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3efce776; op2val:0xbe6d2670; op3val:0x3dea4842; valaddr_reg:x16; val_offset:372; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 372, x17, x15, 264, x18)

inst_542:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7ce776 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x6d2670 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x6a4842 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3efce776; op2val:0xbe6d2670; op3val:0x3dea4842; valaddr_reg:x16; val_offset:384; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 384, x17, x15, 272, x18)

inst_543:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7ce776 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x6d2670 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x6a4842 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3efce776; op2val:0xbe6d2670; op3val:0x3dea4842; valaddr_reg:x16; val_offset:396; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 396, x17, x15, 280, x18)

inst_544:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7ce776 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x6d2670 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x6a4842 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3efce776; op2val:0xbe6d2670; op3val:0x3dea4842; valaddr_reg:x16; val_offset:408; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 408, x17, x15, 288, x18)

inst_545:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7ce776 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x6d2670 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x6a4842 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3efce776; op2val:0xbe6d2670; op3val:0x3dea4842; valaddr_reg:x16; val_offset:420; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 420, x17, x15, 296, x18)

inst_546:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6aeb6b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3679e7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x27733b and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6aeb6b; op2val:0xbf3679e7; op3val:0x3f27733b; valaddr_reg:x16; val_offset:432; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 432, x17, x15, 304, x18)

inst_547:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6aeb6b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3679e7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x27733b and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6aeb6b; op2val:0xbf3679e7; op3val:0x3f27733b; valaddr_reg:x16; val_offset:444; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 444, x17, x15, 312, x18)

inst_548:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6aeb6b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3679e7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x27733b and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6aeb6b; op2val:0xbf3679e7; op3val:0x3f27733b; valaddr_reg:x16; val_offset:456; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 456, x17, x15, 320, x18)

inst_549:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6aeb6b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3679e7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x27733b and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6aeb6b; op2val:0xbf3679e7; op3val:0x3f27733b; valaddr_reg:x16; val_offset:468; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 468, x17, x15, 328, x18)

inst_550:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6aeb6b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3679e7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x27733b and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6aeb6b; op2val:0xbf3679e7; op3val:0x3f27733b; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 336, x18)

inst_551:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2f7d93 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0163be and fs3 == 0 and fe3 == 0x7d and fm3 == 0x31654e and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2f7d93; op2val:0xbf0163be; op3val:0x3eb1654e; valaddr_reg:x16; val_offset:492; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 492, x17, x15, 344, x18)

inst_552:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2f7d93 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0163be and fs3 == 0 and fe3 == 0x7d and fm3 == 0x31654e and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2f7d93; op2val:0xbf0163be; op3val:0x3eb1654e; valaddr_reg:x16; val_offset:504; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 504, x17, x15, 352, x18)

inst_553:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2f7d93 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0163be and fs3 == 0 and fe3 == 0x7d and fm3 == 0x31654e and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2f7d93; op2val:0xbf0163be; op3val:0x3eb1654e; valaddr_reg:x16; val_offset:516; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 516, x17, x15, 360, x18)

inst_554:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2f7d93 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0163be and fs3 == 0 and fe3 == 0x7d and fm3 == 0x31654e and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2f7d93; op2val:0xbf0163be; op3val:0x3eb1654e; valaddr_reg:x16; val_offset:528; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 528, x17, x15, 368, x18)

inst_555:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2f7d93 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0163be and fs3 == 0 and fe3 == 0x7d and fm3 == 0x31654e and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2f7d93; op2val:0xbf0163be; op3val:0x3eb1654e; valaddr_reg:x16; val_offset:540; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 540, x17, x15, 376, x18)

inst_556:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0172b8 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0fe99a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x118a68 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0172b8; op2val:0xbf0fe99a; op3val:0x3e918a68; valaddr_reg:x16; val_offset:552; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 552, x17, x15, 384, x18)

inst_557:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0172b8 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0fe99a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x118a68 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0172b8; op2val:0xbf0fe99a; op3val:0x3e918a68; valaddr_reg:x16; val_offset:564; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 564, x17, x15, 392, x18)

inst_558:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0172b8 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0fe99a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x118a68 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0172b8; op2val:0xbf0fe99a; op3val:0x3e918a68; valaddr_reg:x16; val_offset:576; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 576, x17, x15, 400, x18)

inst_559:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0172b8 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0fe99a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x118a68 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0172b8; op2val:0xbf0fe99a; op3val:0x3e918a68; valaddr_reg:x16; val_offset:588; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 588, x17, x15, 408, x18)

inst_560:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0172b8 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0fe99a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x118a68 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0172b8; op2val:0xbf0fe99a; op3val:0x3e918a68; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 416, x18)

inst_561:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x08bb98 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x52b5e6 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x611616 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e08bb98; op2val:0xbfd2b5e6; op3val:0x3e611616; valaddr_reg:x16; val_offset:612; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 612, x17, x15, 424, x18)

inst_562:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x08bb98 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x52b5e6 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x611616 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e08bb98; op2val:0xbfd2b5e6; op3val:0x3e611616; valaddr_reg:x16; val_offset:624; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 624, x17, x15, 432, x18)

inst_563:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x08bb98 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x52b5e6 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x611616 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e08bb98; op2val:0xbfd2b5e6; op3val:0x3e611616; valaddr_reg:x16; val_offset:636; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 636, x17, x15, 440, x18)

inst_564:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x08bb98 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x52b5e6 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x611616 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e08bb98; op2val:0xbfd2b5e6; op3val:0x3e611616; valaddr_reg:x16; val_offset:648; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 648, x17, x15, 448, x18)

inst_565:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x08bb98 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x52b5e6 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x611616 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e08bb98; op2val:0xbfd2b5e6; op3val:0x3e611616; valaddr_reg:x16; val_offset:660; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 660, x17, x15, 456, x18)

inst_566:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x4549f4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x650811 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x30815f and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e4549f4; op2val:0xbfe50811; op3val:0x3eb0815f; valaddr_reg:x16; val_offset:672; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 672, x17, x15, 464, x18)

inst_567:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x4549f4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x650811 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x30815f and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e4549f4; op2val:0xbfe50811; op3val:0x3eb0815f; valaddr_reg:x16; val_offset:684; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 684, x17, x15, 472, x18)

inst_568:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x4549f4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x650811 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x30815f and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e4549f4; op2val:0xbfe50811; op3val:0x3eb0815f; valaddr_reg:x16; val_offset:696; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 696, x17, x15, 480, x18)

inst_569:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x4549f4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x650811 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x30815f and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e4549f4; op2val:0xbfe50811; op3val:0x3eb0815f; valaddr_reg:x16; val_offset:708; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 708, x17, x15, 488, x18)

inst_570:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x4549f4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x650811 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x30815f and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e4549f4; op2val:0xbfe50811; op3val:0x3eb0815f; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 496, x18)

inst_571:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x190e08 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2da27f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4f9f45 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e990e08; op2val:0xc02da27f; op3val:0x3f4f9f45; valaddr_reg:x16; val_offset:732; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 732, x17, x15, 504, x18)

inst_572:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x190e08 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2da27f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4f9f45 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e990e08; op2val:0xc02da27f; op3val:0x3f4f9f45; valaddr_reg:x16; val_offset:744; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 744, x17, x15, 512, x18)

inst_573:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x190e08 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2da27f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4f9f45 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e990e08; op2val:0xc02da27f; op3val:0x3f4f9f45; valaddr_reg:x16; val_offset:756; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 756, x17, x15, 520, x18)

inst_574:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x190e08 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2da27f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4f9f45 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e990e08; op2val:0xc02da27f; op3val:0x3f4f9f45; valaddr_reg:x16; val_offset:768; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 768, x17, x15, 528, x18)

inst_575:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x190e08 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2da27f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4f9f45 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e990e08; op2val:0xc02da27f; op3val:0x3f4f9f45; valaddr_reg:x16; val_offset:780; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 780, x17, x15, 536, x18)

inst_576:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4aa35a and fs2 == 1 and fe2 == 0x7d and fm2 == 0x46c584 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1d56b0 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4aa35a; op2val:0xbec6c584; op3val:0x3e9d56b0; valaddr_reg:x16; val_offset:792; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 792, x17, x15, 544, x18)

inst_577:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4aa35a and fs2 == 1 and fe2 == 0x7d and fm2 == 0x46c584 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1d56b0 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4aa35a; op2val:0xbec6c584; op3val:0x3e9d56b0; valaddr_reg:x16; val_offset:804; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 804, x17, x15, 552, x18)

inst_578:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4aa35a and fs2 == 1 and fe2 == 0x7d and fm2 == 0x46c584 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1d56b0 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4aa35a; op2val:0xbec6c584; op3val:0x3e9d56b0; valaddr_reg:x16; val_offset:816; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 816, x17, x15, 560, x18)

inst_579:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4aa35a and fs2 == 1 and fe2 == 0x7d and fm2 == 0x46c584 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1d56b0 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4aa35a; op2val:0xbec6c584; op3val:0x3e9d56b0; valaddr_reg:x16; val_offset:828; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 828, x17, x15, 568, x18)

inst_580:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4aa35a and fs2 == 1 and fe2 == 0x7d and fm2 == 0x46c584 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1d56b0 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4aa35a; op2val:0xbec6c584; op3val:0x3e9d56b0; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 576, x18)

inst_581:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4b50be and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3f73bd and fs3 == 0 and fe3 == 0x7e and fm3 == 0x180d2a and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ecb50be; op2val:0xbfbf73bd; op3val:0x3f180d2a; valaddr_reg:x16; val_offset:852; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 852, x17, x15, 584, x18)

inst_582:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4b50be and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3f73bd and fs3 == 0 and fe3 == 0x7e and fm3 == 0x180d2a and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ecb50be; op2val:0xbfbf73bd; op3val:0x3f180d2a; valaddr_reg:x16; val_offset:864; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 864, x17, x15, 592, x18)

inst_583:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4b50be and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3f73bd and fs3 == 0 and fe3 == 0x7e and fm3 == 0x180d2a and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ecb50be; op2val:0xbfbf73bd; op3val:0x3f180d2a; valaddr_reg:x16; val_offset:876; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 876, x17, x15, 600, x18)

inst_584:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4b50be and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3f73bd and fs3 == 0 and fe3 == 0x7e and fm3 == 0x180d2a and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ecb50be; op2val:0xbfbf73bd; op3val:0x3f180d2a; valaddr_reg:x16; val_offset:888; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 888, x17, x15, 608, x18)

inst_585:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4b50be and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3f73bd and fs3 == 0 and fe3 == 0x7e and fm3 == 0x180d2a and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ecb50be; op2val:0xbfbf73bd; op3val:0x3f180d2a; valaddr_reg:x16; val_offset:900; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 900, x17, x15, 616, x18)

inst_586:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3ca498 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x25f38e and fs3 == 0 and fe3 == 0x7d and fm3 == 0x74931e and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3ca498; op2val:0xbf25f38e; op3val:0x3ef4931e; valaddr_reg:x16; val_offset:912; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 912, x17, x15, 624, x18)

inst_587:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3ca498 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x25f38e and fs3 == 0 and fe3 == 0x7d and fm3 == 0x74931e and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3ca498; op2val:0xbf25f38e; op3val:0x3ef4931e; valaddr_reg:x16; val_offset:924; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 924, x17, x15, 632, x18)

inst_588:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3ca498 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x25f38e and fs3 == 0 and fe3 == 0x7d and fm3 == 0x74931e and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3ca498; op2val:0xbf25f38e; op3val:0x3ef4931e; valaddr_reg:x16; val_offset:936; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 936, x17, x15, 640, x18)

inst_589:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3ca498 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x25f38e and fs3 == 0 and fe3 == 0x7d and fm3 == 0x74931e and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3ca498; op2val:0xbf25f38e; op3val:0x3ef4931e; valaddr_reg:x16; val_offset:948; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 948, x17, x15, 648, x18)

inst_590:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3ca498 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x25f38e and fs3 == 0 and fe3 == 0x7d and fm3 == 0x74931e and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3ca498; op2val:0xbf25f38e; op3val:0x3ef4931e; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 656, x18)

inst_591:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1a664a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0245fb and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1d244d and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1a664a; op2val:0xbf0245fb; op3val:0x3e9d244d; valaddr_reg:x16; val_offset:972; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 972, x17, x15, 664, x18)

inst_592:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1a664a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0245fb and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1d244d and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1a664a; op2val:0xbf0245fb; op3val:0x3e9d244d; valaddr_reg:x16; val_offset:984; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 984, x17, x15, 672, x18)

inst_593:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1a664a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0245fb and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1d244d and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1a664a; op2val:0xbf0245fb; op3val:0x3e9d244d; valaddr_reg:x16; val_offset:996; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 996, x17, x15, 680, x18)

inst_594:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1a664a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0245fb and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1d244d and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1a664a; op2val:0xbf0245fb; op3val:0x3e9d244d; valaddr_reg:x16; val_offset:1008; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1008, x17, x15, 688, x18)

inst_595:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1a664a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0245fb and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1d244d and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1a664a; op2val:0xbf0245fb; op3val:0x3e9d244d; valaddr_reg:x16; val_offset:1020; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1020, x17, x15, 696, x18)

inst_596:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1ba1c5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x230f6b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4642c1 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e9ba1c5; op2val:0xc0230f6b; op3val:0x3f4642c1; valaddr_reg:x16; val_offset:1032; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1032, x17, x15, 704, x18)

inst_597:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1ba1c5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x230f6b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4642c1 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e9ba1c5; op2val:0xc0230f6b; op3val:0x3f4642c1; valaddr_reg:x16; val_offset:1044; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1044, x17, x15, 712, x18)

inst_598:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1ba1c5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x230f6b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4642c1 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e9ba1c5; op2val:0xc0230f6b; op3val:0x3f4642c1; valaddr_reg:x16; val_offset:1056; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1056, x17, x15, 720, x18)

inst_599:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1ba1c5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x230f6b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4642c1 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e9ba1c5; op2val:0xc0230f6b; op3val:0x3f4642c1; valaddr_reg:x16; val_offset:1068; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1068, x17, x15, 728, x18)

inst_600:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1ba1c5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x230f6b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4642c1 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e9ba1c5; op2val:0xc0230f6b; op3val:0x3f4642c1; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 736, x18)

inst_601:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6f8cc3 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0c00c5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0301b3 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6f8cc3; op2val:0xbf0c00c5; op3val:0x3f0301b3; valaddr_reg:x16; val_offset:1092; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1092, x17, x15, 744, x18)

inst_602:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6f8cc3 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0c00c5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0301b3 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6f8cc3; op2val:0xbf0c00c5; op3val:0x3f0301b3; valaddr_reg:x16; val_offset:1104; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1104, x17, x15, 752, x18)

inst_603:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6f8cc3 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0c00c5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0301b3 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6f8cc3; op2val:0xbf0c00c5; op3val:0x3f0301b3; valaddr_reg:x16; val_offset:1116; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1116, x17, x15, 760, x18)

inst_604:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6f8cc3 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0c00c5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0301b3 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6f8cc3; op2val:0xbf0c00c5; op3val:0x3f0301b3; valaddr_reg:x16; val_offset:1128; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1128, x17, x15, 768, x18)

inst_605:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6f8cc3 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0c00c5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0301b3 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6f8cc3; op2val:0xbf0c00c5; op3val:0x3f0301b3; valaddr_reg:x16; val_offset:1140; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1140, x17, x15, 776, x18)

inst_606:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4d0554 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1b63d4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x78e45a and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4d0554; op2val:0xbf9b63d4; op3val:0x3f78e45a; valaddr_reg:x16; val_offset:1152; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1152, x17, x15, 784, x18)

inst_607:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4d0554 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1b63d4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x78e45a and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4d0554; op2val:0xbf9b63d4; op3val:0x3f78e45a; valaddr_reg:x16; val_offset:1164; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1164, x17, x15, 792, x18)

inst_608:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4d0554 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1b63d4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x78e45a and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4d0554; op2val:0xbf9b63d4; op3val:0x3f78e45a; valaddr_reg:x16; val_offset:1176; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1176, x17, x15, 800, x18)

inst_609:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4d0554 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1b63d4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x78e45a and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4d0554; op2val:0xbf9b63d4; op3val:0x3f78e45a; valaddr_reg:x16; val_offset:1188; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1188, x17, x15, 808, x18)

inst_610:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4d0554 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1b63d4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x78e45a and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4d0554; op2val:0xbf9b63d4; op3val:0x3f78e45a; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 816, x18)

inst_611:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3f3af2 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x51be3a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1cad39 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3f3af2; op2val:0xbed1be3a; op3val:0x3e9cad39; valaddr_reg:x16; val_offset:1212; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1212, x17, x15, 824, x18)

inst_612:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3f3af2 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x51be3a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1cad39 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3f3af2; op2val:0xbed1be3a; op3val:0x3e9cad39; valaddr_reg:x16; val_offset:1224; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1224, x17, x15, 832, x18)

inst_613:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3f3af2 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x51be3a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1cad39 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3f3af2; op2val:0xbed1be3a; op3val:0x3e9cad39; valaddr_reg:x16; val_offset:1236; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1236, x17, x15, 840, x18)

inst_614:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3f3af2 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x51be3a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1cad39 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3f3af2; op2val:0xbed1be3a; op3val:0x3e9cad39; valaddr_reg:x16; val_offset:1248; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1248, x17, x15, 848, x18)

inst_615:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3f3af2 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x51be3a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1cad39 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3f3af2; op2val:0xbed1be3a; op3val:0x3e9cad39; valaddr_reg:x16; val_offset:1260; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1260, x17, x15, 856, x18)

inst_616:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4e3594 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5a1e04 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2fb1ce and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ece3594; op2val:0xbf5a1e04; op3val:0x3eafb1ce; valaddr_reg:x16; val_offset:1272; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1272, x17, x15, 864, x18)

inst_617:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4e3594 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5a1e04 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2fb1ce and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ece3594; op2val:0xbf5a1e04; op3val:0x3eafb1ce; valaddr_reg:x16; val_offset:1284; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1284, x17, x15, 872, x18)

inst_618:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4e3594 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5a1e04 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2fb1ce and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ece3594; op2val:0xbf5a1e04; op3val:0x3eafb1ce; valaddr_reg:x16; val_offset:1296; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1296, x17, x15, 880, x18)

inst_619:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4e3594 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5a1e04 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2fb1ce and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ece3594; op2val:0xbf5a1e04; op3val:0x3eafb1ce; valaddr_reg:x16; val_offset:1308; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1308, x17, x15, 888, x18)

inst_620:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4e3594 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5a1e04 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2fb1ce and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ece3594; op2val:0xbf5a1e04; op3val:0x3eafb1ce; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 896, x18)

inst_621:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2b84f4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x79cce2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x275d97 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eab84f4; op2val:0xbff9cce2; op3val:0x3f275d97; valaddr_reg:x16; val_offset:1332; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1332, x17, x15, 904, x18)

inst_622:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2b84f4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x79cce2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x275d97 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eab84f4; op2val:0xbff9cce2; op3val:0x3f275d97; valaddr_reg:x16; val_offset:1344; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1344, x17, x15, 912, x18)

inst_623:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2b84f4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x79cce2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x275d97 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eab84f4; op2val:0xbff9cce2; op3val:0x3f275d97; valaddr_reg:x16; val_offset:1356; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1356, x17, x15, 920, x18)

inst_624:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2b84f4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x79cce2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x275d97 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eab84f4; op2val:0xbff9cce2; op3val:0x3f275d97; valaddr_reg:x16; val_offset:1368; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1368, x17, x15, 928, x18)

inst_625:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2b84f4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x79cce2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x275d97 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eab84f4; op2val:0xbff9cce2; op3val:0x3f275d97; valaddr_reg:x16; val_offset:1380; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1380, x17, x15, 936, x18)

inst_626:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x14c4b6 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x2bcaff and fs3 == 0 and fe3 == 0x7a and fm3 == 0x47aaba and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e94c4b6; op2val:0xbe2bcaff; op3val:0x3d47aaba; valaddr_reg:x16; val_offset:1392; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1392, x17, x15, 944, x18)

inst_627:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x14c4b6 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x2bcaff and fs3 == 0 and fe3 == 0x7a and fm3 == 0x47aaba and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e94c4b6; op2val:0xbe2bcaff; op3val:0x3d47aaba; valaddr_reg:x16; val_offset:1404; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1404, x17, x15, 952, x18)

inst_628:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x14c4b6 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x2bcaff and fs3 == 0 and fe3 == 0x7a and fm3 == 0x47aaba and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e94c4b6; op2val:0xbe2bcaff; op3val:0x3d47aaba; valaddr_reg:x16; val_offset:1416; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1416, x17, x15, 960, x18)

inst_629:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x14c4b6 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x2bcaff and fs3 == 0 and fe3 == 0x7a and fm3 == 0x47aaba and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e94c4b6; op2val:0xbe2bcaff; op3val:0x3d47aaba; valaddr_reg:x16; val_offset:1428; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1428, x17, x15, 968, x18)

inst_630:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x14c4b6 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x2bcaff and fs3 == 0 and fe3 == 0x7a and fm3 == 0x47aaba and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e94c4b6; op2val:0xbe2bcaff; op3val:0x3d47aaba; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 976, x18)

inst_631:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5a2c44 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0046ff and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5aa547 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5a2c44; op2val:0xbf8046ff; op3val:0x3f5aa547; valaddr_reg:x16; val_offset:1452; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1452, x17, x15, 984, x18)

inst_632:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5a2c44 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0046ff and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5aa547 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5a2c44; op2val:0xbf8046ff; op3val:0x3f5aa547; valaddr_reg:x16; val_offset:1464; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1464, x17, x15, 992, x18)

inst_633:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5a2c44 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0046ff and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5aa547 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5a2c44; op2val:0xbf8046ff; op3val:0x3f5aa547; valaddr_reg:x16; val_offset:1476; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1476, x17, x15, 1000, x18)

inst_634:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5a2c44 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0046ff and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5aa547 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5a2c44; op2val:0xbf8046ff; op3val:0x3f5aa547; valaddr_reg:x16; val_offset:1488; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1488, x17, x15, 1008, x18)

inst_635:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5a2c44 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0046ff and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5aa547 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5a2c44; op2val:0xbf8046ff; op3val:0x3f5aa547; valaddr_reg:x16; val_offset:1500; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1500, x17, x15, 1016, x18)

inst_636:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x4102e6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4332b1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x132b6e and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dc102e6; op2val:0xc0c332b1; op3val:0x3f132b6e; valaddr_reg:x16; val_offset:1512; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1512, x17, x15, 1024, x18)

inst_637:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x4102e6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4332b1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x132b6e and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dc102e6; op2val:0xc0c332b1; op3val:0x3f132b6e; valaddr_reg:x16; val_offset:1524; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1524, x17, x15, 1032, x18)

inst_638:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x4102e6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4332b1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x132b6e and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dc102e6; op2val:0xc0c332b1; op3val:0x3f132b6e; valaddr_reg:x16; val_offset:1536; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1536, x17, x15, 1040, x18)

inst_639:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x4102e6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4332b1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x132b6e and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dc102e6; op2val:0xc0c332b1; op3val:0x3f132b6e; valaddr_reg:x16; val_offset:1548; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1548, x17, x15, 1048, x18)

inst_640:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x4102e6 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x4332b1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x132b6e and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dc102e6; op2val:0xc0c332b1; op3val:0x3f132b6e; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1056, x18)

inst_641:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x10f9ce and fs2 == 1 and fe2 == 0x7b and fm2 == 0x02dde3 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x143906 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e90f9ce; op2val:0xbd82dde3; op3val:0x3c943906; valaddr_reg:x16; val_offset:1572; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1572, x17, x15, 1064, x18)

inst_642:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x10f9ce and fs2 == 1 and fe2 == 0x7b and fm2 == 0x02dde3 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x143906 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e90f9ce; op2val:0xbd82dde3; op3val:0x3c943906; valaddr_reg:x16; val_offset:1584; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1584, x17, x15, 1072, x18)

inst_643:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x10f9ce and fs2 == 1 and fe2 == 0x7b and fm2 == 0x02dde3 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x143906 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e90f9ce; op2val:0xbd82dde3; op3val:0x3c943906; valaddr_reg:x16; val_offset:1596; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1596, x17, x15, 1080, x18)

inst_644:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x10f9ce and fs2 == 1 and fe2 == 0x7b and fm2 == 0x02dde3 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x143906 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e90f9ce; op2val:0xbd82dde3; op3val:0x3c943906; valaddr_reg:x16; val_offset:1608; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1608, x17, x15, 1088, x18)

inst_645:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x10f9ce and fs2 == 1 and fe2 == 0x7b and fm2 == 0x02dde3 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x143906 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e90f9ce; op2val:0xbd82dde3; op3val:0x3c943906; valaddr_reg:x16; val_offset:1620; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1620, x17, x15, 1096, x18)

inst_646:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x04ba18 and fs2 == 1 and fe2 == 0x79 and fm2 == 0x5846d2 and fs3 == 0 and fe3 == 0x78 and fm3 == 0x604379 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f04ba18; op2val:0xbcd846d2; op3val:0x3c604379; valaddr_reg:x16; val_offset:1632; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1632, x17, x15, 1104, x18)

inst_647:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x04ba18 and fs2 == 1 and fe2 == 0x79 and fm2 == 0x5846d2 and fs3 == 0 and fe3 == 0x78 and fm3 == 0x604379 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f04ba18; op2val:0xbcd846d2; op3val:0x3c604379; valaddr_reg:x16; val_offset:1644; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1644, x17, x15, 1112, x18)

inst_648:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x04ba18 and fs2 == 1 and fe2 == 0x79 and fm2 == 0x5846d2 and fs3 == 0 and fe3 == 0x78 and fm3 == 0x604379 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f04ba18; op2val:0xbcd846d2; op3val:0x3c604379; valaddr_reg:x16; val_offset:1656; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1656, x17, x15, 1120, x18)

inst_649:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x04ba18 and fs2 == 1 and fe2 == 0x79 and fm2 == 0x5846d2 and fs3 == 0 and fe3 == 0x78 and fm3 == 0x604379 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f04ba18; op2val:0xbcd846d2; op3val:0x3c604379; valaddr_reg:x16; val_offset:1668; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1668, x17, x15, 1128, x18)

inst_650:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x04ba18 and fs2 == 1 and fe2 == 0x79 and fm2 == 0x5846d2 and fs3 == 0 and fe3 == 0x78 and fm3 == 0x604379 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f04ba18; op2val:0xbcd846d2; op3val:0x3c604379; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1136, x18)

inst_651:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6776dc and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0a75c9 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7a6124 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6776dc; op2val:0xbf0a75c9; op3val:0x3efa6124; valaddr_reg:x16; val_offset:1692; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1692, x17, x15, 1144, x18)

inst_652:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6776dc and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0a75c9 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7a6124 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6776dc; op2val:0xbf0a75c9; op3val:0x3efa6124; valaddr_reg:x16; val_offset:1704; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1704, x17, x15, 1152, x18)

inst_653:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6776dc and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0a75c9 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7a6124 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6776dc; op2val:0xbf0a75c9; op3val:0x3efa6124; valaddr_reg:x16; val_offset:1716; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1716, x17, x15, 1160, x18)

inst_654:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6776dc and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0a75c9 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7a6124 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6776dc; op2val:0xbf0a75c9; op3val:0x3efa6124; valaddr_reg:x16; val_offset:1728; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1728, x17, x15, 1168, x18)

inst_655:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6776dc and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0a75c9 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7a6124 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6776dc; op2val:0xbf0a75c9; op3val:0x3efa6124; valaddr_reg:x16; val_offset:1740; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1740, x17, x15, 1176, x18)

inst_656:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7fe221 and fs2 == 1 and fe2 == 0x79 and fm2 == 0x20a7ab and fs3 == 0 and fe3 == 0x79 and fm3 == 0x2094ed and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7fe221; op2val:0xbca0a7ab; op3val:0x3ca094ed; valaddr_reg:x16; val_offset:1752; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1752, x17, x15, 1184, x18)

inst_657:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7fe221 and fs2 == 1 and fe2 == 0x79 and fm2 == 0x20a7ab and fs3 == 0 and fe3 == 0x79 and fm3 == 0x2094ed and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7fe221; op2val:0xbca0a7ab; op3val:0x3ca094ed; valaddr_reg:x16; val_offset:1764; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1764, x17, x15, 1192, x18)

inst_658:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7fe221 and fs2 == 1 and fe2 == 0x79 and fm2 == 0x20a7ab and fs3 == 0 and fe3 == 0x79 and fm3 == 0x2094ed and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7fe221; op2val:0xbca0a7ab; op3val:0x3ca094ed; valaddr_reg:x16; val_offset:1776; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1776, x17, x15, 1200, x18)

inst_659:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7fe221 and fs2 == 1 and fe2 == 0x79 and fm2 == 0x20a7ab and fs3 == 0 and fe3 == 0x79 and fm3 == 0x2094ed and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7fe221; op2val:0xbca0a7ab; op3val:0x3ca094ed; valaddr_reg:x16; val_offset:1788; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1788, x17, x15, 1208, x18)

inst_660:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7fe221 and fs2 == 1 and fe2 == 0x79 and fm2 == 0x20a7ab and fs3 == 0 and fe3 == 0x79 and fm3 == 0x2094ed and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7fe221; op2val:0xbca0a7ab; op3val:0x3ca094ed; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1216, x18)

inst_661:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x15e339 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x1b2952 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x35b18b and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f15e339; op2val:0xbe1b2952; op3val:0x3db5b18b; valaddr_reg:x16; val_offset:1812; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1812, x17, x15, 1224, x18)

inst_662:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x15e339 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x1b2952 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x35b18b and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f15e339; op2val:0xbe1b2952; op3val:0x3db5b18b; valaddr_reg:x16; val_offset:1824; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1824, x17, x15, 1232, x18)

inst_663:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x15e339 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x1b2952 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x35b18b and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f15e339; op2val:0xbe1b2952; op3val:0x3db5b18b; valaddr_reg:x16; val_offset:1836; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1836, x17, x15, 1240, x18)

inst_664:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x15e339 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x1b2952 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x35b18b and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f15e339; op2val:0xbe1b2952; op3val:0x3db5b18b; valaddr_reg:x16; val_offset:1848; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1848, x17, x15, 1248, x18)

inst_665:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x15e339 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x1b2952 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x35b18b and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f15e339; op2val:0xbe1b2952; op3val:0x3db5b18b; valaddr_reg:x16; val_offset:1860; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1860, x17, x15, 1256, x18)

inst_666:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2bc219 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x5dd70a and fs3 == 0 and fe3 == 0x7c and fm3 == 0x14d6d6 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2bc219; op2val:0xbe5dd70a; op3val:0x3e14d6d6; valaddr_reg:x16; val_offset:1872; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1872, x17, x15, 1264, x18)

inst_667:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2bc219 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x5dd70a and fs3 == 0 and fe3 == 0x7c and fm3 == 0x14d6d6 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2bc219; op2val:0xbe5dd70a; op3val:0x3e14d6d6; valaddr_reg:x16; val_offset:1884; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1884, x17, x15, 1272, x18)

inst_668:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2bc219 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x5dd70a and fs3 == 0 and fe3 == 0x7c and fm3 == 0x14d6d6 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2bc219; op2val:0xbe5dd70a; op3val:0x3e14d6d6; valaddr_reg:x16; val_offset:1896; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1896, x17, x15, 1280, x18)

inst_669:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2bc219 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x5dd70a and fs3 == 0 and fe3 == 0x7c and fm3 == 0x14d6d6 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2bc219; op2val:0xbe5dd70a; op3val:0x3e14d6d6; valaddr_reg:x16; val_offset:1908; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1908, x17, x15, 1288, x18)

inst_670:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2bc219 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x5dd70a and fs3 == 0 and fe3 == 0x7c and fm3 == 0x14d6d6 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2bc219; op2val:0xbe5dd70a; op3val:0x3e14d6d6; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1296, x18)

inst_671:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7d2c2b and fs2 == 1 and fe2 == 0x7c and fm2 == 0x4216ac and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3ff1e5 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7d2c2b; op2val:0xbe4216ac; op3val:0x3e3ff1e5; valaddr_reg:x16; val_offset:1932; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1932, x17, x15, 1304, x18)

inst_672:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7d2c2b and fs2 == 1 and fe2 == 0x7c and fm2 == 0x4216ac and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3ff1e5 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7d2c2b; op2val:0xbe4216ac; op3val:0x3e3ff1e5; valaddr_reg:x16; val_offset:1944; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1944, x17, x15, 1312, x18)

inst_673:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7d2c2b and fs2 == 1 and fe2 == 0x7c and fm2 == 0x4216ac and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3ff1e5 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7d2c2b; op2val:0xbe4216ac; op3val:0x3e3ff1e5; valaddr_reg:x16; val_offset:1956; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1956, x17, x15, 1320, x18)

inst_674:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7d2c2b and fs2 == 1 and fe2 == 0x7c and fm2 == 0x4216ac and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3ff1e5 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7d2c2b; op2val:0xbe4216ac; op3val:0x3e3ff1e5; valaddr_reg:x16; val_offset:1968; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1968, x17, x15, 1328, x18)

inst_675:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7d2c2b and fs2 == 1 and fe2 == 0x7c and fm2 == 0x4216ac and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3ff1e5 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7d2c2b; op2val:0xbe4216ac; op3val:0x3e3ff1e5; valaddr_reg:x16; val_offset:1980; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1980, x17, x15, 1336, x18)

inst_676:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x592409 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x58f21d and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3803c5 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed92409; op2val:0xbf58f21d; op3val:0x3eb803c5; valaddr_reg:x16; val_offset:1992; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1992, x17, x15, 1344, x18)

inst_677:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x592409 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x58f21d and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3803c5 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed92409; op2val:0xbf58f21d; op3val:0x3eb803c5; valaddr_reg:x16; val_offset:2004; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 2004, x17, x15, 1352, x18)

inst_678:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x592409 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x58f21d and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3803c5 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed92409; op2val:0xbf58f21d; op3val:0x3eb803c5; valaddr_reg:x16; val_offset:2016; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 2016, x17, x15, 1360, x18)

inst_679:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x592409 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x58f21d and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3803c5 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed92409; op2val:0xbf58f21d; op3val:0x3eb803c5; valaddr_reg:x16; val_offset:2028; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 2028, x17, x15, 1368, x18)
addi x16,x16,2040

inst_680:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x592409 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x58f21d and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3803c5 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed92409; op2val:0xbf58f21d; op3val:0x3eb803c5; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 1376, x18)

inst_681:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0720b2 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7e8529 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0658bb and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8720b2; op2val:0xbf7e8529; op3val:0x3e8658bb; valaddr_reg:x16; val_offset:12; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 12, x17, x15, 1384, x18)

inst_682:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0720b2 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7e8529 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0658bb and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8720b2; op2val:0xbf7e8529; op3val:0x3e8658bb; valaddr_reg:x16; val_offset:24; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 24, x17, x15, 1392, x18)

inst_683:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0720b2 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7e8529 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0658bb and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8720b2; op2val:0xbf7e8529; op3val:0x3e8658bb; valaddr_reg:x16; val_offset:36; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 36, x17, x15, 1400, x18)

inst_684:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0720b2 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7e8529 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0658bb and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8720b2; op2val:0xbf7e8529; op3val:0x3e8658bb; valaddr_reg:x16; val_offset:48; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 48, x17, x15, 1408, x18)

inst_685:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0720b2 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7e8529 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0658bb and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8720b2; op2val:0xbf7e8529; op3val:0x3e8658bb; valaddr_reg:x16; val_offset:60; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 60, x17, x15, 1416, x18)

inst_686:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2f8a33 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x0993f7 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x3cacd7 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2f8a33; op2val:0xbd0993f7; op3val:0x3cbcacd7; valaddr_reg:x16; val_offset:72; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 72, x17, x15, 1424, x18)

inst_687:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2f8a33 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x0993f7 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x3cacd7 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2f8a33; op2val:0xbd0993f7; op3val:0x3cbcacd7; valaddr_reg:x16; val_offset:84; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 84, x17, x15, 1432, x18)

inst_688:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2f8a33 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x0993f7 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x3cacd7 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2f8a33; op2val:0xbd0993f7; op3val:0x3cbcacd7; valaddr_reg:x16; val_offset:96; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 96, x17, x15, 1440, x18)

inst_689:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2f8a33 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x0993f7 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x3cacd7 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2f8a33; op2val:0xbd0993f7; op3val:0x3cbcacd7; valaddr_reg:x16; val_offset:108; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 108, x17, x15, 1448, x18)

inst_690:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2f8a33 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x0993f7 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x3cacd7 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2f8a33; op2val:0xbd0993f7; op3val:0x3cbcacd7; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 1456, x18)

inst_691:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x101ddf and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3334fd and fs3 == 0 and fe3 == 0x7e and fm3 == 0x49c56f and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e901ddf; op2val:0xc03334fd; op3val:0x3f49c56f; valaddr_reg:x16; val_offset:132; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 132, x17, x15, 1464, x18)

inst_692:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x101ddf and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3334fd and fs3 == 0 and fe3 == 0x7e and fm3 == 0x49c56f and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e901ddf; op2val:0xc03334fd; op3val:0x3f49c56f; valaddr_reg:x16; val_offset:144; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 144, x17, x15, 1472, x18)

inst_693:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x101ddf and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3334fd and fs3 == 0 and fe3 == 0x7e and fm3 == 0x49c56f and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e901ddf; op2val:0xc03334fd; op3val:0x3f49c56f; valaddr_reg:x16; val_offset:156; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 156, x17, x15, 1480, x18)

inst_694:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x101ddf and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3334fd and fs3 == 0 and fe3 == 0x7e and fm3 == 0x49c56f and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e901ddf; op2val:0xc03334fd; op3val:0x3f49c56f; valaddr_reg:x16; val_offset:168; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 168, x17, x15, 1488, x18)

inst_695:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x101ddf and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3334fd and fs3 == 0 and fe3 == 0x7e and fm3 == 0x49c56f and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e901ddf; op2val:0xc03334fd; op3val:0x3f49c56f; valaddr_reg:x16; val_offset:180; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 180, x17, x15, 1496, x18)

inst_696:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x626356 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0b7235 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x76a1df and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f626356; op2val:0xbf8b7235; op3val:0x3f76a1df; valaddr_reg:x16; val_offset:192; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 192, x17, x15, 1504, x18)

inst_697:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x626356 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0b7235 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x76a1df and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f626356; op2val:0xbf8b7235; op3val:0x3f76a1df; valaddr_reg:x16; val_offset:204; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 204, x17, x15, 1512, x18)

inst_698:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x626356 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0b7235 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x76a1df and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f626356; op2val:0xbf8b7235; op3val:0x3f76a1df; valaddr_reg:x16; val_offset:216; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 216, x17, x15, 1520, x18)

inst_699:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x626356 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0b7235 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x76a1df and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f626356; op2val:0xbf8b7235; op3val:0x3f76a1df; valaddr_reg:x16; val_offset:228; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 228, x17, x15, 1528, x18)

inst_700:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x626356 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0b7235 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x76a1df and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f626356; op2val:0xbf8b7235; op3val:0x3f76a1df; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 1536, x18)

inst_701:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x725e12 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x590c74 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4d7d88 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3df25e12; op2val:0xc0d90c74; op3val:0x3f4d7d88; valaddr_reg:x16; val_offset:252; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 252, x17, x15, 1544, x18)

inst_702:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x725e12 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x590c74 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4d7d88 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3df25e12; op2val:0xc0d90c74; op3val:0x3f4d7d88; valaddr_reg:x16; val_offset:264; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 264, x17, x15, 1552, x18)

inst_703:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x725e12 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x590c74 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4d7d88 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3df25e12; op2val:0xc0d90c74; op3val:0x3f4d7d88; valaddr_reg:x16; val_offset:276; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 276, x17, x15, 1560, x18)

inst_704:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x725e12 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x590c74 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4d7d88 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3df25e12; op2val:0xc0d90c74; op3val:0x3f4d7d88; valaddr_reg:x16; val_offset:288; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 288, x17, x15, 1568, x18)

inst_705:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x725e12 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x590c74 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4d7d88 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3df25e12; op2val:0xc0d90c74; op3val:0x3f4d7d88; valaddr_reg:x16; val_offset:300; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 300, x17, x15, 1576, x18)

inst_706:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3a5a35 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x034722 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3f1fe2 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eba5a35; op2val:0xc0034722; op3val:0x3f3f1fe2; valaddr_reg:x16; val_offset:312; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 312, x17, x15, 1584, x18)

inst_707:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3a5a35 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x034722 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3f1fe2 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eba5a35; op2val:0xc0034722; op3val:0x3f3f1fe2; valaddr_reg:x16; val_offset:324; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 324, x17, x15, 1592, x18)

inst_708:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3a5a35 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x034722 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3f1fe2 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eba5a35; op2val:0xc0034722; op3val:0x3f3f1fe2; valaddr_reg:x16; val_offset:336; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 336, x17, x15, 1600, x18)

inst_709:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3a5a35 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x034722 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3f1fe2 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eba5a35; op2val:0xc0034722; op3val:0x3f3f1fe2; valaddr_reg:x16; val_offset:348; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 348, x17, x15, 1608, x18)

inst_710:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3a5a35 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x034722 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3f1fe2 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eba5a35; op2val:0xc0034722; op3val:0x3f3f1fe2; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 1616, x18)

inst_711:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x76b1d4 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4fd5b5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4847bb and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e76b1d4; op2val:0xc04fd5b5; op3val:0x3f4847bb; valaddr_reg:x16; val_offset:372; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 372, x17, x15, 1624, x18)

inst_712:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x76b1d4 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4fd5b5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4847bb and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e76b1d4; op2val:0xc04fd5b5; op3val:0x3f4847bb; valaddr_reg:x16; val_offset:384; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 384, x17, x15, 1632, x18)

inst_713:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x76b1d4 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4fd5b5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4847bb and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e76b1d4; op2val:0xc04fd5b5; op3val:0x3f4847bb; valaddr_reg:x16; val_offset:396; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 396, x17, x15, 1640, x18)

inst_714:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x76b1d4 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4fd5b5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4847bb and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e76b1d4; op2val:0xc04fd5b5; op3val:0x3f4847bb; valaddr_reg:x16; val_offset:408; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 408, x17, x15, 1648, x18)

inst_715:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x76b1d4 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4fd5b5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4847bb and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e76b1d4; op2val:0xc04fd5b5; op3val:0x3f4847bb; valaddr_reg:x16; val_offset:420; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 420, x17, x15, 1656, x18)

inst_716:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x69589a and fs2 == 1 and fe2 == 0x7c and fm2 == 0x6872d0 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x53e0f3 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f69589a; op2val:0xbe6872d0; op3val:0x3e53e0f3; valaddr_reg:x16; val_offset:432; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 432, x17, x15, 1664, x18)

inst_717:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x69589a and fs2 == 1 and fe2 == 0x7c and fm2 == 0x6872d0 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x53e0f3 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f69589a; op2val:0xbe6872d0; op3val:0x3e53e0f3; valaddr_reg:x16; val_offset:444; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 444, x17, x15, 1672, x18)

inst_718:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x69589a and fs2 == 1 and fe2 == 0x7c and fm2 == 0x6872d0 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x53e0f3 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f69589a; op2val:0xbe6872d0; op3val:0x3e53e0f3; valaddr_reg:x16; val_offset:456; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 456, x17, x15, 1680, x18)

inst_719:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x69589a and fs2 == 1 and fe2 == 0x7c and fm2 == 0x6872d0 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x53e0f3 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f69589a; op2val:0xbe6872d0; op3val:0x3e53e0f3; valaddr_reg:x16; val_offset:468; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 468, x17, x15, 1688, x18)

inst_720:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x69589a and fs2 == 1 and fe2 == 0x7c and fm2 == 0x6872d0 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x53e0f3 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f69589a; op2val:0xbe6872d0; op3val:0x3e53e0f3; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1696, x18)

inst_721:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5a98f0 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x53faae and fs3 == 0 and fe3 == 0x7c and fm3 == 0x35021c and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5a98f0; op2val:0xbe53faae; op3val:0x3e35021c; valaddr_reg:x16; val_offset:492; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 492, x17, x15, 1704, x18)

inst_722:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5a98f0 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x53faae and fs3 == 0 and fe3 == 0x7c and fm3 == 0x35021c and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5a98f0; op2val:0xbe53faae; op3val:0x3e35021c; valaddr_reg:x16; val_offset:504; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 504, x17, x15, 1712, x18)

inst_723:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5a98f0 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x53faae and fs3 == 0 and fe3 == 0x7c and fm3 == 0x35021c and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5a98f0; op2val:0xbe53faae; op3val:0x3e35021c; valaddr_reg:x16; val_offset:516; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 516, x17, x15, 1720, x18)

inst_724:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5a98f0 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x53faae and fs3 == 0 and fe3 == 0x7c and fm3 == 0x35021c and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5a98f0; op2val:0xbe53faae; op3val:0x3e35021c; valaddr_reg:x16; val_offset:528; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 528, x17, x15, 1728, x18)

inst_725:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5a98f0 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x53faae and fs3 == 0 and fe3 == 0x7c and fm3 == 0x35021c and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5a98f0; op2val:0xbe53faae; op3val:0x3e35021c; valaddr_reg:x16; val_offset:540; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 540, x17, x15, 1736, x18)

inst_726:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x14d173 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x35eef4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5385ff and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e94d173; op2val:0xc035eef4; op3val:0x3f5385ff; valaddr_reg:x16; val_offset:552; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 552, x17, x15, 1744, x18)

inst_727:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x14d173 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x35eef4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5385ff and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e94d173; op2val:0xc035eef4; op3val:0x3f5385ff; valaddr_reg:x16; val_offset:564; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 564, x17, x15, 1752, x18)

inst_728:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x14d173 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x35eef4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5385ff and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e94d173; op2val:0xc035eef4; op3val:0x3f5385ff; valaddr_reg:x16; val_offset:576; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 576, x17, x15, 1760, x18)

inst_729:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x14d173 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x35eef4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5385ff and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e94d173; op2val:0xc035eef4; op3val:0x3f5385ff; valaddr_reg:x16; val_offset:588; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 588, x17, x15, 1768, x18)

inst_730:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x14d173 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x35eef4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5385ff and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e94d173; op2val:0xc035eef4; op3val:0x3f5385ff; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1776, x18)

inst_731:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1dcac6 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3c4ca3 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x68204c and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1dcac6; op2val:0xbf3c4ca3; op3val:0x3ee8204c; valaddr_reg:x16; val_offset:612; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 612, x17, x15, 1784, x18)

inst_732:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1dcac6 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3c4ca3 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x68204c and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1dcac6; op2val:0xbf3c4ca3; op3val:0x3ee8204c; valaddr_reg:x16; val_offset:624; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 624, x17, x15, 1792, x18)

inst_733:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1dcac6 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3c4ca3 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x68204c and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1dcac6; op2val:0xbf3c4ca3; op3val:0x3ee8204c; valaddr_reg:x16; val_offset:636; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 636, x17, x15, 1800, x18)

inst_734:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1dcac6 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3c4ca3 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x68204c and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1dcac6; op2val:0xbf3c4ca3; op3val:0x3ee8204c; valaddr_reg:x16; val_offset:648; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 648, x17, x15, 1808, x18)

inst_735:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1dcac6 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3c4ca3 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x68204c and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1dcac6; op2val:0xbf3c4ca3; op3val:0x3ee8204c; valaddr_reg:x16; val_offset:660; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 660, x17, x15, 1816, x18)

inst_736:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0b2724 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7998b9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x07ac16 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0b2724; op2val:0xbf7998b9; op3val:0x3f07ac16; valaddr_reg:x16; val_offset:672; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 672, x17, x15, 1824, x18)

inst_737:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0b2724 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7998b9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x07ac16 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0b2724; op2val:0xbf7998b9; op3val:0x3f07ac16; valaddr_reg:x16; val_offset:684; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 684, x17, x15, 1832, x18)

inst_738:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0b2724 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7998b9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x07ac16 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0b2724; op2val:0xbf7998b9; op3val:0x3f07ac16; valaddr_reg:x16; val_offset:696; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 696, x17, x15, 1840, x18)

inst_739:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0b2724 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7998b9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x07ac16 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0b2724; op2val:0xbf7998b9; op3val:0x3f07ac16; valaddr_reg:x16; val_offset:708; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 708, x17, x15, 1848, x18)

inst_740:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0b2724 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7998b9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x07ac16 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0b2724; op2val:0xbf7998b9; op3val:0x3f07ac16; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1856, x18)

inst_741:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x237d3e and fs2 == 1 and fe2 == 0x7e and fm2 == 0x202884 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4c904d and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f237d3e; op2val:0xbf202884; op3val:0x3ecc904d; valaddr_reg:x16; val_offset:732; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 732, x17, x15, 1864, x18)

inst_742:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x237d3e and fs2 == 1 and fe2 == 0x7e and fm2 == 0x202884 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4c904d and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f237d3e; op2val:0xbf202884; op3val:0x3ecc904d; valaddr_reg:x16; val_offset:744; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 744, x17, x15, 1872, x18)

inst_743:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x237d3e and fs2 == 1 and fe2 == 0x7e and fm2 == 0x202884 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4c904d and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f237d3e; op2val:0xbf202884; op3val:0x3ecc904d; valaddr_reg:x16; val_offset:756; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 756, x17, x15, 1880, x18)

inst_744:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x237d3e and fs2 == 1 and fe2 == 0x7e and fm2 == 0x202884 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4c904d and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f237d3e; op2val:0xbf202884; op3val:0x3ecc904d; valaddr_reg:x16; val_offset:768; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 768, x17, x15, 1888, x18)

inst_745:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x237d3e and fs2 == 1 and fe2 == 0x7e and fm2 == 0x202884 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4c904d and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f237d3e; op2val:0xbf202884; op3val:0x3ecc904d; valaddr_reg:x16; val_offset:780; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 780, x17, x15, 1896, x18)

inst_746:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x57dd42 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1ff5a4 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x06e18d and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed7dd42; op2val:0xbf1ff5a4; op3val:0x3e86e18d; valaddr_reg:x16; val_offset:792; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 792, x17, x15, 1904, x18)

inst_747:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x57dd42 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1ff5a4 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x06e18d and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed7dd42; op2val:0xbf1ff5a4; op3val:0x3e86e18d; valaddr_reg:x16; val_offset:804; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 804, x17, x15, 1912, x18)

inst_748:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x57dd42 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1ff5a4 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x06e18d and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed7dd42; op2val:0xbf1ff5a4; op3val:0x3e86e18d; valaddr_reg:x16; val_offset:816; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 816, x17, x15, 1920, x18)

inst_749:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x57dd42 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1ff5a4 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x06e18d and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed7dd42; op2val:0xbf1ff5a4; op3val:0x3e86e18d; valaddr_reg:x16; val_offset:828; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 828, x17, x15, 1928, x18)

inst_750:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x57dd42 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1ff5a4 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x06e18d and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed7dd42; op2val:0xbf1ff5a4; op3val:0x3e86e18d; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1936, x18)

inst_751:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x313928 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x73af45 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x28b297 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb13928; op2val:0xbff3af45; op3val:0x3f28b297; valaddr_reg:x16; val_offset:852; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 852, x17, x15, 1944, x18)

inst_752:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x313928 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x73af45 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x28b297 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb13928; op2val:0xbff3af45; op3val:0x3f28b297; valaddr_reg:x16; val_offset:864; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 864, x17, x15, 1952, x18)

inst_753:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x313928 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x73af45 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x28b297 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb13928; op2val:0xbff3af45; op3val:0x3f28b297; valaddr_reg:x16; val_offset:876; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 876, x17, x15, 1960, x18)

inst_754:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x313928 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x73af45 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x28b297 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb13928; op2val:0xbff3af45; op3val:0x3f28b297; valaddr_reg:x16; val_offset:888; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 888, x17, x15, 1968, x18)

inst_755:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x313928 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x73af45 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x28b297 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb13928; op2val:0xbff3af45; op3val:0x3f28b297; valaddr_reg:x16; val_offset:900; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 900, x17, x15, 1976, x18)

inst_756:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3dd90b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2cdcdc and fs3 == 0 and fe3 == 0x7e and fm3 == 0x00319e and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ebdd90b; op2val:0xbfacdcdc; op3val:0x3f00319e; valaddr_reg:x16; val_offset:912; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 912, x17, x15, 1984, x18)

inst_757:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3dd90b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2cdcdc and fs3 == 0 and fe3 == 0x7e and fm3 == 0x00319e and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ebdd90b; op2val:0xbfacdcdc; op3val:0x3f00319e; valaddr_reg:x16; val_offset:924; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 924, x17, x15, 1992, x18)

inst_758:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3dd90b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2cdcdc and fs3 == 0 and fe3 == 0x7e and fm3 == 0x00319e and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ebdd90b; op2val:0xbfacdcdc; op3val:0x3f00319e; valaddr_reg:x16; val_offset:936; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 936, x17, x15, 2000, x18)

inst_759:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3dd90b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2cdcdc and fs3 == 0 and fe3 == 0x7e and fm3 == 0x00319e and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ebdd90b; op2val:0xbfacdcdc; op3val:0x3f00319e; valaddr_reg:x16; val_offset:948; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 948, x17, x15, 2008, x18)

inst_760:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3dd90b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2cdcdc and fs3 == 0 and fe3 == 0x7e and fm3 == 0x00319e and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ebdd90b; op2val:0xbfacdcdc; op3val:0x3f00319e; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 2016, x18)

inst_761:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0f4697 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7ce392 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0d88db and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e0f4697; op2val:0xc07ce392; op3val:0x3f0d88db; valaddr_reg:x16; val_offset:972; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 972, x17, x15, 2024, x18)
RVTEST_SIGBASE(x15,signature_x15_4)

inst_762:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0f4697 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7ce392 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0d88db and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e0f4697; op2val:0xc07ce392; op3val:0x3f0d88db; valaddr_reg:x16; val_offset:984; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 984, x17, x15, 0, x18)

inst_763:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0f4697 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7ce392 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0d88db and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e0f4697; op2val:0xc07ce392; op3val:0x3f0d88db; valaddr_reg:x16; val_offset:996; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 996, x17, x15, 8, x18)

inst_764:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0f4697 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7ce392 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0d88db and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e0f4697; op2val:0xc07ce392; op3val:0x3f0d88db; valaddr_reg:x16; val_offset:1008; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1008, x17, x15, 16, x18)

inst_765:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0f4697 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7ce392 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0d88db and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e0f4697; op2val:0xc07ce392; op3val:0x3f0d88db; valaddr_reg:x16; val_offset:1020; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1020, x17, x15, 24, x18)

inst_766:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x225f21 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0f5e5e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x35ddfe and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e225f21; op2val:0xc08f5e5e; op3val:0x3f35ddfe; valaddr_reg:x16; val_offset:1032; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1032, x17, x15, 32, x18)

inst_767:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x225f21 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0f5e5e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x35ddfe and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e225f21; op2val:0xc08f5e5e; op3val:0x3f35ddfe; valaddr_reg:x16; val_offset:1044; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1044, x17, x15, 40, x18)

inst_768:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x225f21 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0f5e5e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x35ddfe and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e225f21; op2val:0xc08f5e5e; op3val:0x3f35ddfe; valaddr_reg:x16; val_offset:1056; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1056, x17, x15, 48, x18)

inst_769:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x225f21 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0f5e5e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x35ddfe and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e225f21; op2val:0xc08f5e5e; op3val:0x3f35ddfe; valaddr_reg:x16; val_offset:1068; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1068, x17, x15, 56, x18)

inst_770:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x225f21 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0f5e5e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x35ddfe and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e225f21; op2val:0xc08f5e5e; op3val:0x3f35ddfe; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 64, x18)

inst_771:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x54f69d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x637a1d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3d3c43 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed4f69d; op2val:0xbfe37a1d; op3val:0x3f3d3c43; valaddr_reg:x16; val_offset:1092; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1092, x17, x15, 72, x18)

inst_772:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x54f69d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x637a1d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3d3c43 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed4f69d; op2val:0xbfe37a1d; op3val:0x3f3d3c43; valaddr_reg:x16; val_offset:1104; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1104, x17, x15, 80, x18)

inst_773:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x54f69d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x637a1d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3d3c43 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed4f69d; op2val:0xbfe37a1d; op3val:0x3f3d3c43; valaddr_reg:x16; val_offset:1116; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1116, x17, x15, 88, x18)

inst_774:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x54f69d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x637a1d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3d3c43 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed4f69d; op2val:0xbfe37a1d; op3val:0x3f3d3c43; valaddr_reg:x16; val_offset:1128; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1128, x17, x15, 96, x18)

inst_775:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x54f69d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x637a1d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3d3c43 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed4f69d; op2val:0xbfe37a1d; op3val:0x3f3d3c43; valaddr_reg:x16; val_offset:1140; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1140, x17, x15, 104, x18)

inst_776:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5dfb78 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x18ac4c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0462b6 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e5dfb78; op2val:0xbf98ac4c; op3val:0x3e8462b6; valaddr_reg:x16; val_offset:1152; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1152, x17, x15, 112, x18)

inst_777:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5dfb78 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x18ac4c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0462b6 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e5dfb78; op2val:0xbf98ac4c; op3val:0x3e8462b6; valaddr_reg:x16; val_offset:1164; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1164, x17, x15, 120, x18)

inst_778:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5dfb78 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x18ac4c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0462b6 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e5dfb78; op2val:0xbf98ac4c; op3val:0x3e8462b6; valaddr_reg:x16; val_offset:1176; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1176, x17, x15, 128, x18)

inst_779:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5dfb78 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x18ac4c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0462b6 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e5dfb78; op2val:0xbf98ac4c; op3val:0x3e8462b6; valaddr_reg:x16; val_offset:1188; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1188, x17, x15, 136, x18)

inst_780:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5dfb78 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x18ac4c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0462b6 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e5dfb78; op2val:0xbf98ac4c; op3val:0x3e8462b6; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 144, x18)

inst_781:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x34b7eb and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1b44fa and fs3 == 0 and fe3 == 0x7c and fm3 == 0x5b381a and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb4b7eb; op2val:0xbf1b44fa; op3val:0x3e5b381a; valaddr_reg:x16; val_offset:1212; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1212, x17, x15, 152, x18)

inst_782:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x34b7eb and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1b44fa and fs3 == 0 and fe3 == 0x7c and fm3 == 0x5b381a and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb4b7eb; op2val:0xbf1b44fa; op3val:0x3e5b381a; valaddr_reg:x16; val_offset:1224; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1224, x17, x15, 160, x18)

inst_783:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x34b7eb and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1b44fa and fs3 == 0 and fe3 == 0x7c and fm3 == 0x5b381a and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb4b7eb; op2val:0xbf1b44fa; op3val:0x3e5b381a; valaddr_reg:x16; val_offset:1236; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1236, x17, x15, 168, x18)

inst_784:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x34b7eb and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1b44fa and fs3 == 0 and fe3 == 0x7c and fm3 == 0x5b381a and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb4b7eb; op2val:0xbf1b44fa; op3val:0x3e5b381a; valaddr_reg:x16; val_offset:1248; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1248, x17, x15, 176, x18)

inst_785:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x34b7eb and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1b44fa and fs3 == 0 and fe3 == 0x7c and fm3 == 0x5b381a and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb4b7eb; op2val:0xbf1b44fa; op3val:0x3e5b381a; valaddr_reg:x16; val_offset:1260; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1260, x17, x15, 184, x18)

inst_786:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x608373 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4bd36d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x32c1a8 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee08373; op2val:0xbfcbd36d; op3val:0x3f32c1a8; valaddr_reg:x16; val_offset:1272; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1272, x17, x15, 192, x18)

inst_787:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x608373 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4bd36d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x32c1a8 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee08373; op2val:0xbfcbd36d; op3val:0x3f32c1a8; valaddr_reg:x16; val_offset:1284; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1284, x17, x15, 200, x18)

inst_788:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x608373 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4bd36d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x32c1a8 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee08373; op2val:0xbfcbd36d; op3val:0x3f32c1a8; valaddr_reg:x16; val_offset:1296; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1296, x17, x15, 208, x18)

inst_789:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x608373 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4bd36d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x32c1a8 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee08373; op2val:0xbfcbd36d; op3val:0x3f32c1a8; valaddr_reg:x16; val_offset:1308; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1308, x17, x15, 216, x18)

inst_790:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x608373 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4bd36d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x32c1a8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee08373; op2val:0xbfcbd36d; op3val:0x3f32c1a8; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 224, x18)

inst_791:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x23b693 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7da066 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x223204 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f23b693; op2val:0xbf7da066; op3val:0x3f223204; valaddr_reg:x16; val_offset:1332; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1332, x17, x15, 232, x18)

inst_792:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x23b693 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7da066 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x223204 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f23b693; op2val:0xbf7da066; op3val:0x3f223204; valaddr_reg:x16; val_offset:1344; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1344, x17, x15, 240, x18)

inst_793:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x23b693 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7da066 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x223204 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f23b693; op2val:0xbf7da066; op3val:0x3f223204; valaddr_reg:x16; val_offset:1356; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1356, x17, x15, 248, x18)

inst_794:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x23b693 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7da066 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x223204 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f23b693; op2val:0xbf7da066; op3val:0x3f223204; valaddr_reg:x16; val_offset:1368; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1368, x17, x15, 256, x18)

inst_795:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x23b693 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7da066 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x223204 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f23b693; op2val:0xbf7da066; op3val:0x3f223204; valaddr_reg:x16; val_offset:1380; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1380, x17, x15, 264, x18)

inst_796:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x77b145 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4b0a06 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x447345 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f77b145; op2val:0xbf4b0a06; op3val:0x3f447345; valaddr_reg:x16; val_offset:1392; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1392, x17, x15, 272, x18)

inst_797:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x77b145 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4b0a06 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x447345 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f77b145; op2val:0xbf4b0a06; op3val:0x3f447345; valaddr_reg:x16; val_offset:1404; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1404, x17, x15, 280, x18)

inst_798:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x77b145 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4b0a06 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x447345 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f77b145; op2val:0xbf4b0a06; op3val:0x3f447345; valaddr_reg:x16; val_offset:1416; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1416, x17, x15, 288, x18)

inst_799:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x77b145 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4b0a06 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x447345 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f77b145; op2val:0xbf4b0a06; op3val:0x3f447345; valaddr_reg:x16; val_offset:1428; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1428, x17, x15, 296, x18)

inst_800:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x77b145 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4b0a06 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x447345 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f77b145; op2val:0xbf4b0a06; op3val:0x3f447345; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 304, x18)

inst_801:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x601743 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x48e0b4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2fd6df and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3de01743; op2val:0xc0c8e0b4; op3val:0x3f2fd6df; valaddr_reg:x16; val_offset:1452; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1452, x17, x15, 312, x18)

inst_802:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x601743 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x48e0b4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2fd6df and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3de01743; op2val:0xc0c8e0b4; op3val:0x3f2fd6df; valaddr_reg:x16; val_offset:1464; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1464, x17, x15, 320, x18)

inst_803:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x601743 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x48e0b4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2fd6df and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3de01743; op2val:0xc0c8e0b4; op3val:0x3f2fd6df; valaddr_reg:x16; val_offset:1476; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1476, x17, x15, 328, x18)

inst_804:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x601743 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x48e0b4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2fd6df and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3de01743; op2val:0xc0c8e0b4; op3val:0x3f2fd6df; valaddr_reg:x16; val_offset:1488; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1488, x17, x15, 336, x18)

inst_805:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x601743 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x48e0b4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2fd6df and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3de01743; op2val:0xc0c8e0b4; op3val:0x3f2fd6df; valaddr_reg:x16; val_offset:1500; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1500, x17, x15, 344, x18)

inst_806:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5bfb4f and fs2 == 1 and fe2 == 0x7d and fm2 == 0x2cd687 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x148532 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5bfb4f; op2val:0xbeacd687; op3val:0x3e948532; valaddr_reg:x16; val_offset:1512; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1512, x17, x15, 352, x18)

inst_807:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5bfb4f and fs2 == 1 and fe2 == 0x7d and fm2 == 0x2cd687 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x148532 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5bfb4f; op2val:0xbeacd687; op3val:0x3e948532; valaddr_reg:x16; val_offset:1524; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1524, x17, x15, 360, x18)

inst_808:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5bfb4f and fs2 == 1 and fe2 == 0x7d and fm2 == 0x2cd687 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x148532 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5bfb4f; op2val:0xbeacd687; op3val:0x3e948532; valaddr_reg:x16; val_offset:1536; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1536, x17, x15, 368, x18)

inst_809:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5bfb4f and fs2 == 1 and fe2 == 0x7d and fm2 == 0x2cd687 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x148532 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5bfb4f; op2val:0xbeacd687; op3val:0x3e948532; valaddr_reg:x16; val_offset:1548; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1548, x17, x15, 376, x18)

inst_810:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5bfb4f and fs2 == 1 and fe2 == 0x7d and fm2 == 0x2cd687 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x148532 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5bfb4f; op2val:0xbeacd687; op3val:0x3e948532; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 384, x18)

inst_811:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3e1cec and fs2 == 1 and fe2 == 0x80 and fm2 == 0x25b5f5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x761f8a and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ebe1cec; op2val:0xc025b5f5; op3val:0x3f761f8a; valaddr_reg:x16; val_offset:1572; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1572, x17, x15, 392, x18)

inst_812:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3e1cec and fs2 == 1 and fe2 == 0x80 and fm2 == 0x25b5f5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x761f8a and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ebe1cec; op2val:0xc025b5f5; op3val:0x3f761f8a; valaddr_reg:x16; val_offset:1584; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1584, x17, x15, 400, x18)

inst_813:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3e1cec and fs2 == 1 and fe2 == 0x80 and fm2 == 0x25b5f5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x761f8a and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ebe1cec; op2val:0xc025b5f5; op3val:0x3f761f8a; valaddr_reg:x16; val_offset:1596; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1596, x17, x15, 408, x18)

inst_814:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3e1cec and fs2 == 1 and fe2 == 0x80 and fm2 == 0x25b5f5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x761f8a and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ebe1cec; op2val:0xc025b5f5; op3val:0x3f761f8a; valaddr_reg:x16; val_offset:1608; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1608, x17, x15, 416, x18)

inst_815:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3e1cec and fs2 == 1 and fe2 == 0x80 and fm2 == 0x25b5f5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x761f8a and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ebe1cec; op2val:0xc025b5f5; op3val:0x3f761f8a; valaddr_reg:x16; val_offset:1620; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1620, x17, x15, 424, x18)

inst_816:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x44832d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x50768e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x200596 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e44832d; op2val:0xc050768e; op3val:0x3f200596; valaddr_reg:x16; val_offset:1632; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1632, x17, x15, 432, x18)

inst_817:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x44832d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x50768e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x200596 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e44832d; op2val:0xc050768e; op3val:0x3f200596; valaddr_reg:x16; val_offset:1644; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1644, x17, x15, 440, x18)

inst_818:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x44832d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x50768e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x200596 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e44832d; op2val:0xc050768e; op3val:0x3f200596; valaddr_reg:x16; val_offset:1656; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1656, x17, x15, 448, x18)

inst_819:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x44832d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x50768e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x200596 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e44832d; op2val:0xc050768e; op3val:0x3f200596; valaddr_reg:x16; val_offset:1668; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1668, x17, x15, 456, x18)

inst_820:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x44832d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x50768e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x200596 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e44832d; op2val:0xc050768e; op3val:0x3f200596; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 464, x18)

inst_821:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x275a62 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7606e8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x20d55e and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f275a62; op2val:0xbf7606e8; op3val:0x3f20d55e; valaddr_reg:x16; val_offset:1692; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1692, x17, x15, 472, x18)

inst_822:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x275a62 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7606e8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x20d55e and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f275a62; op2val:0xbf7606e8; op3val:0x3f20d55e; valaddr_reg:x16; val_offset:1704; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1704, x17, x15, 480, x18)

inst_823:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x275a62 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7606e8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x20d55e and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f275a62; op2val:0xbf7606e8; op3val:0x3f20d55e; valaddr_reg:x16; val_offset:1716; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1716, x17, x15, 488, x18)

inst_824:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x275a62 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7606e8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x20d55e and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f275a62; op2val:0xbf7606e8; op3val:0x3f20d55e; valaddr_reg:x16; val_offset:1728; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1728, x17, x15, 496, x18)

inst_825:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x275a62 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7606e8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x20d55e and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f275a62; op2val:0xbf7606e8; op3val:0x3f20d55e; valaddr_reg:x16; val_offset:1740; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1740, x17, x15, 504, x18)

inst_826:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x43a4e5 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x54a5d1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x228347 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f43a4e5; op2val:0xbf54a5d1; op3val:0x3f228347; valaddr_reg:x16; val_offset:1752; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1752, x17, x15, 512, x18)

inst_827:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x43a4e5 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x54a5d1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x228347 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f43a4e5; op2val:0xbf54a5d1; op3val:0x3f228347; valaddr_reg:x16; val_offset:1764; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1764, x17, x15, 520, x18)

inst_828:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x43a4e5 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x54a5d1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x228347 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f43a4e5; op2val:0xbf54a5d1; op3val:0x3f228347; valaddr_reg:x16; val_offset:1776; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1776, x17, x15, 528, x18)

inst_829:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x43a4e5 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x54a5d1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x228347 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f43a4e5; op2val:0xbf54a5d1; op3val:0x3f228347; valaddr_reg:x16; val_offset:1788; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1788, x17, x15, 536, x18)

inst_830:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x43a4e5 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x54a5d1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x228347 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f43a4e5; op2val:0xbf54a5d1; op3val:0x3f228347; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 544, x18)

inst_831:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x05f998 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4b110a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x548bae and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f05f998; op2val:0xbfcb110a; op3val:0x3f548bae; valaddr_reg:x16; val_offset:1812; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1812, x17, x15, 552, x18)

inst_832:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x05f998 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4b110a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x548bae and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f05f998; op2val:0xbfcb110a; op3val:0x3f548bae; valaddr_reg:x16; val_offset:1824; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1824, x17, x15, 560, x18)

inst_833:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x05f998 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4b110a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x548bae and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f05f998; op2val:0xbfcb110a; op3val:0x3f548bae; valaddr_reg:x16; val_offset:1836; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1836, x17, x15, 568, x18)

inst_834:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x05f998 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4b110a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x548bae and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f05f998; op2val:0xbfcb110a; op3val:0x3f548bae; valaddr_reg:x16; val_offset:1848; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1848, x17, x15, 576, x18)

inst_835:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x05f998 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4b110a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x548bae and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f05f998; op2val:0xbfcb110a; op3val:0x3f548bae; valaddr_reg:x16; val_offset:1860; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1860, x17, x15, 584, x18)

inst_836:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x5a1497 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x523d13 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3318eb and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d5a1497; op2val:0xc0d23d13; op3val:0x3eb318eb; valaddr_reg:x16; val_offset:1872; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1872, x17, x15, 592, x18)

inst_837:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x5a1497 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x523d13 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3318eb and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d5a1497; op2val:0xc0d23d13; op3val:0x3eb318eb; valaddr_reg:x16; val_offset:1884; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1884, x17, x15, 600, x18)

inst_838:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x5a1497 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x523d13 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3318eb and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d5a1497; op2val:0xc0d23d13; op3val:0x3eb318eb; valaddr_reg:x16; val_offset:1896; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1896, x17, x15, 608, x18)

inst_839:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x5a1497 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x523d13 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3318eb and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d5a1497; op2val:0xc0d23d13; op3val:0x3eb318eb; valaddr_reg:x16; val_offset:1908; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1908, x17, x15, 616, x18)

inst_840:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x5a1497 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x523d13 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3318eb and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d5a1497; op2val:0xc0d23d13; op3val:0x3eb318eb; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 624, x18)

inst_841:
// fs1 == 0 and fe1 == 0x78 and fm1 == 0x67de18 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x356b46 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x245130 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3c67de18; op2val:0xc2356b46; op3val:0x3f245130; valaddr_reg:x16; val_offset:1932; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1932, x17, x15, 632, x18)

inst_842:
// fs1 == 0 and fe1 == 0x78 and fm1 == 0x67de18 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x356b46 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x245130 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3c67de18; op2val:0xc2356b46; op3val:0x3f245130; valaddr_reg:x16; val_offset:1944; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1944, x17, x15, 640, x18)

inst_843:
// fs1 == 0 and fe1 == 0x78 and fm1 == 0x67de18 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x356b46 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x245130 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3c67de18; op2val:0xc2356b46; op3val:0x3f245130; valaddr_reg:x16; val_offset:1956; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1956, x17, x15, 648, x18)

inst_844:
// fs1 == 0 and fe1 == 0x78 and fm1 == 0x67de18 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x356b46 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x245130 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3c67de18; op2val:0xc2356b46; op3val:0x3f245130; valaddr_reg:x16; val_offset:1968; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1968, x17, x15, 656, x18)

inst_845:
// fs1 == 0 and fe1 == 0x78 and fm1 == 0x67de18 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x356b46 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x245130 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3c67de18; op2val:0xc2356b46; op3val:0x3f245130; valaddr_reg:x16; val_offset:1980; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1980, x17, x15, 664, x18)

inst_846:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4c29ac and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5ce4f1 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x302a65 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ecc29ac; op2val:0xbf5ce4f1; op3val:0x3eb02a65; valaddr_reg:x16; val_offset:1992; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1992, x17, x15, 672, x18)

inst_847:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4c29ac and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5ce4f1 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x302a65 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ecc29ac; op2val:0xbf5ce4f1; op3val:0x3eb02a65; valaddr_reg:x16; val_offset:2004; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 2004, x17, x15, 680, x18)

inst_848:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4c29ac and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5ce4f1 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x302a65 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ecc29ac; op2val:0xbf5ce4f1; op3val:0x3eb02a65; valaddr_reg:x16; val_offset:2016; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 2016, x17, x15, 688, x18)

inst_849:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4c29ac and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5ce4f1 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x302a65 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ecc29ac; op2val:0xbf5ce4f1; op3val:0x3eb02a65; valaddr_reg:x16; val_offset:2028; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 2028, x17, x15, 696, x18)
addi x16,x16,2040

inst_850:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4c29ac and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5ce4f1 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x302a65 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ecc29ac; op2val:0xbf5ce4f1; op3val:0x3eb02a65; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 704, x18)

inst_851:
// fs1 == 0 and fe1 == 0x74 and fm1 == 0x71d4bf and fs2 == 1 and fe2 == 0x89 and fm2 == 0x022226 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x75dc97 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3a71d4bf; op2val:0xc4822226; op3val:0x3f75dc97; valaddr_reg:x16; val_offset:12; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 12, x17, x15, 712, x18)

inst_852:
// fs1 == 0 and fe1 == 0x74 and fm1 == 0x71d4bf and fs2 == 1 and fe2 == 0x89 and fm2 == 0x022226 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x75dc97 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3a71d4bf; op2val:0xc4822226; op3val:0x3f75dc97; valaddr_reg:x16; val_offset:24; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 24, x17, x15, 720, x18)

inst_853:
// fs1 == 0 and fe1 == 0x74 and fm1 == 0x71d4bf and fs2 == 1 and fe2 == 0x89 and fm2 == 0x022226 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x75dc97 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3a71d4bf; op2val:0xc4822226; op3val:0x3f75dc97; valaddr_reg:x16; val_offset:36; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 36, x17, x15, 728, x18)

inst_854:
// fs1 == 0 and fe1 == 0x74 and fm1 == 0x71d4bf and fs2 == 1 and fe2 == 0x89 and fm2 == 0x022226 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x75dc97 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3a71d4bf; op2val:0xc4822226; op3val:0x3f75dc97; valaddr_reg:x16; val_offset:48; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 48, x17, x15, 736, x18)

inst_855:
// fs1 == 0 and fe1 == 0x74 and fm1 == 0x71d4bf and fs2 == 1 and fe2 == 0x89 and fm2 == 0x022226 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x75dc97 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3a71d4bf; op2val:0xc4822226; op3val:0x3f75dc97; valaddr_reg:x16; val_offset:60; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 60, x17, x15, 744, x18)

inst_856:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x0ed628 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x4c9fa6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x645777 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d0ed628; op2val:0xc1cc9fa6; op3val:0x3f645777; valaddr_reg:x16; val_offset:72; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 72, x17, x15, 752, x18)

inst_857:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x0ed628 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x4c9fa6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x645777 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d0ed628; op2val:0xc1cc9fa6; op3val:0x3f645777; valaddr_reg:x16; val_offset:84; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 84, x17, x15, 760, x18)

inst_858:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x0ed628 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x4c9fa6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x645777 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d0ed628; op2val:0xc1cc9fa6; op3val:0x3f645777; valaddr_reg:x16; val_offset:96; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 96, x17, x15, 768, x18)

inst_859:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x0ed628 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x4c9fa6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x645777 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d0ed628; op2val:0xc1cc9fa6; op3val:0x3f645777; valaddr_reg:x16; val_offset:108; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 108, x17, x15, 776, x18)

inst_860:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x0ed628 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x4c9fa6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x645777 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d0ed628; op2val:0xc1cc9fa6; op3val:0x3f645777; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 784, x18)

inst_861:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1310ac and fs2 == 1 and fe2 == 0x7e and fm2 == 0x24c160 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3d4b8a and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1310ac; op2val:0xbf24c160; op3val:0x3ebd4b8a; valaddr_reg:x16; val_offset:132; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 132, x17, x15, 792, x18)

inst_862:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1310ac and fs2 == 1 and fe2 == 0x7e and fm2 == 0x24c160 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3d4b8a and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1310ac; op2val:0xbf24c160; op3val:0x3ebd4b8a; valaddr_reg:x16; val_offset:144; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 144, x17, x15, 800, x18)

inst_863:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1310ac and fs2 == 1 and fe2 == 0x7e and fm2 == 0x24c160 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3d4b8a and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1310ac; op2val:0xbf24c160; op3val:0x3ebd4b8a; valaddr_reg:x16; val_offset:156; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 156, x17, x15, 808, x18)

inst_864:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1310ac and fs2 == 1 and fe2 == 0x7e and fm2 == 0x24c160 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3d4b8a and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1310ac; op2val:0xbf24c160; op3val:0x3ebd4b8a; valaddr_reg:x16; val_offset:168; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 168, x17, x15, 816, x18)

inst_865:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1310ac and fs2 == 1 and fe2 == 0x7e and fm2 == 0x24c160 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3d4b8a and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1310ac; op2val:0xbf24c160; op3val:0x3ebd4b8a; valaddr_reg:x16; val_offset:180; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 180, x17, x15, 824, x18)

inst_866:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5f627b and fs2 == 1 and fe2 == 0x7a and fm2 == 0x26cf21 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x118e9a and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5f627b; op2val:0xbd26cf21; op3val:0x3d118e9a; valaddr_reg:x16; val_offset:192; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 192, x17, x15, 832, x18)

inst_867:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5f627b and fs2 == 1 and fe2 == 0x7a and fm2 == 0x26cf21 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x118e9a and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5f627b; op2val:0xbd26cf21; op3val:0x3d118e9a; valaddr_reg:x16; val_offset:204; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 204, x17, x15, 840, x18)

inst_868:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5f627b and fs2 == 1 and fe2 == 0x7a and fm2 == 0x26cf21 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x118e9a and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5f627b; op2val:0xbd26cf21; op3val:0x3d118e9a; valaddr_reg:x16; val_offset:216; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 216, x17, x15, 848, x18)

inst_869:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5f627b and fs2 == 1 and fe2 == 0x7a and fm2 == 0x26cf21 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x118e9a and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5f627b; op2val:0xbd26cf21; op3val:0x3d118e9a; valaddr_reg:x16; val_offset:228; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 228, x17, x15, 856, x18)

inst_870:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5f627b and fs2 == 1 and fe2 == 0x7a and fm2 == 0x26cf21 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x118e9a and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5f627b; op2val:0xbd26cf21; op3val:0x3d118e9a; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 864, x18)

inst_871:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x50ba82 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x03e580 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x571520 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f50ba82; op2val:0xbf03e580; op3val:0x3ed71520; valaddr_reg:x16; val_offset:252; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 252, x17, x15, 872, x18)

inst_872:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x50ba82 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x03e580 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x571520 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f50ba82; op2val:0xbf03e580; op3val:0x3ed71520; valaddr_reg:x16; val_offset:264; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 264, x17, x15, 880, x18)

inst_873:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x50ba82 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x03e580 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x571520 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f50ba82; op2val:0xbf03e580; op3val:0x3ed71520; valaddr_reg:x16; val_offset:276; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 276, x17, x15, 888, x18)

inst_874:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x50ba82 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x03e580 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x571520 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f50ba82; op2val:0xbf03e580; op3val:0x3ed71520; valaddr_reg:x16; val_offset:288; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 288, x17, x15, 896, x18)

inst_875:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x50ba82 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x03e580 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x571520 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f50ba82; op2val:0xbf03e580; op3val:0x3ed71520; valaddr_reg:x16; val_offset:300; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 300, x17, x15, 904, x18)

inst_876:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1f8a28 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3d04d5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6b9805 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e9f8a28; op2val:0xc03d04d5; op3val:0x3f6b9805; valaddr_reg:x16; val_offset:312; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 312, x17, x15, 912, x18)

inst_877:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1f8a28 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3d04d5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6b9805 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e9f8a28; op2val:0xc03d04d5; op3val:0x3f6b9805; valaddr_reg:x16; val_offset:324; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 324, x17, x15, 920, x18)

inst_878:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1f8a28 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3d04d5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6b9805 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e9f8a28; op2val:0xc03d04d5; op3val:0x3f6b9805; valaddr_reg:x16; val_offset:336; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 336, x17, x15, 928, x18)

inst_879:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1f8a28 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3d04d5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6b9805 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e9f8a28; op2val:0xc03d04d5; op3val:0x3f6b9805; valaddr_reg:x16; val_offset:348; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 348, x17, x15, 936, x18)

inst_880:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1f8a28 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3d04d5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6b9805 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e9f8a28; op2val:0xc03d04d5; op3val:0x3f6b9805; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 944, x18)

inst_881:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x41d3f5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x10d7fa and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5b5581 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec1d3f5; op2val:0xc010d7fa; op3val:0x3f5b5581; valaddr_reg:x16; val_offset:372; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 372, x17, x15, 952, x18)

inst_882:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x41d3f5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x10d7fa and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5b5581 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec1d3f5; op2val:0xc010d7fa; op3val:0x3f5b5581; valaddr_reg:x16; val_offset:384; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 384, x17, x15, 960, x18)

inst_883:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x41d3f5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x10d7fa and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5b5581 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec1d3f5; op2val:0xc010d7fa; op3val:0x3f5b5581; valaddr_reg:x16; val_offset:396; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 396, x17, x15, 968, x18)

inst_884:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x41d3f5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x10d7fa and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5b5581 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec1d3f5; op2val:0xc010d7fa; op3val:0x3f5b5581; valaddr_reg:x16; val_offset:408; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 408, x17, x15, 976, x18)

inst_885:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x41d3f5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x10d7fa and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5b5581 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec1d3f5; op2val:0xc010d7fa; op3val:0x3f5b5581; valaddr_reg:x16; val_offset:420; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 420, x17, x15, 984, x18)

inst_886:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x272814 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6c1159 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1a2447 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f272814; op2val:0xbeec1159; op3val:0x3e9a2447; valaddr_reg:x16; val_offset:432; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 432, x17, x15, 992, x18)

inst_887:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x272814 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6c1159 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1a2447 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f272814; op2val:0xbeec1159; op3val:0x3e9a2447; valaddr_reg:x16; val_offset:444; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 444, x17, x15, 1000, x18)

inst_888:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x272814 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6c1159 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1a2447 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f272814; op2val:0xbeec1159; op3val:0x3e9a2447; valaddr_reg:x16; val_offset:456; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 456, x17, x15, 1008, x18)

inst_889:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x272814 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6c1159 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1a2447 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f272814; op2val:0xbeec1159; op3val:0x3e9a2447; valaddr_reg:x16; val_offset:468; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 468, x17, x15, 1016, x18)

inst_890:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x272814 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6c1159 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1a2447 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f272814; op2val:0xbeec1159; op3val:0x3e9a2447; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1024, x18)

inst_891:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x20e64e and fs2 == 1 and fe2 == 0x7b and fm2 == 0x3408ca and fs3 == 0 and fe3 == 0x7a and fm3 == 0x624eeb and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f20e64e; op2val:0xbdb408ca; op3val:0x3d624eeb; valaddr_reg:x16; val_offset:492; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 492, x17, x15, 1032, x18)

inst_892:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x20e64e and fs2 == 1 and fe2 == 0x7b and fm2 == 0x3408ca and fs3 == 0 and fe3 == 0x7a and fm3 == 0x624eeb and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f20e64e; op2val:0xbdb408ca; op3val:0x3d624eeb; valaddr_reg:x16; val_offset:504; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 504, x17, x15, 1040, x18)

inst_893:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x20e64e and fs2 == 1 and fe2 == 0x7b and fm2 == 0x3408ca and fs3 == 0 and fe3 == 0x7a and fm3 == 0x624eeb and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f20e64e; op2val:0xbdb408ca; op3val:0x3d624eeb; valaddr_reg:x16; val_offset:516; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 516, x17, x15, 1048, x18)

inst_894:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x20e64e and fs2 == 1 and fe2 == 0x7b and fm2 == 0x3408ca and fs3 == 0 and fe3 == 0x7a and fm3 == 0x624eeb and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f20e64e; op2val:0xbdb408ca; op3val:0x3d624eeb; valaddr_reg:x16; val_offset:528; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 528, x17, x15, 1056, x18)

inst_895:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x20e64e and fs2 == 1 and fe2 == 0x7b and fm2 == 0x3408ca and fs3 == 0 and fe3 == 0x7a and fm3 == 0x624eeb and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f20e64e; op2val:0xbdb408ca; op3val:0x3d624eeb; valaddr_reg:x16; val_offset:540; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 540, x17, x15, 1064, x18)

inst_896:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1b1dea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4bdd2f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x770d7c and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1b1dea; op2val:0xbfcbdd2f; op3val:0x3f770d7c; valaddr_reg:x16; val_offset:552; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 552, x17, x15, 1072, x18)

inst_897:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1b1dea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4bdd2f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x770d7c and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1b1dea; op2val:0xbfcbdd2f; op3val:0x3f770d7c; valaddr_reg:x16; val_offset:564; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 564, x17, x15, 1080, x18)

inst_898:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1b1dea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4bdd2f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x770d7c and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1b1dea; op2val:0xbfcbdd2f; op3val:0x3f770d7c; valaddr_reg:x16; val_offset:576; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 576, x17, x15, 1088, x18)

inst_899:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1b1dea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4bdd2f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x770d7c and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1b1dea; op2val:0xbfcbdd2f; op3val:0x3f770d7c; valaddr_reg:x16; val_offset:588; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 588, x17, x15, 1096, x18)

inst_900:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1b1dea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4bdd2f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x770d7c and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1b1dea; op2val:0xbfcbdd2f; op3val:0x3f770d7c; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1104, x18)

inst_901:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x34831d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1ef863 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x603021 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb4831d; op2val:0xc01ef863; op3val:0x3f603021; valaddr_reg:x16; val_offset:612; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 612, x17, x15, 1112, x18)

inst_902:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x34831d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1ef863 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x603021 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb4831d; op2val:0xc01ef863; op3val:0x3f603021; valaddr_reg:x16; val_offset:624; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 624, x17, x15, 1120, x18)

inst_903:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x34831d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1ef863 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x603021 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb4831d; op2val:0xc01ef863; op3val:0x3f603021; valaddr_reg:x16; val_offset:636; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 636, x17, x15, 1128, x18)

inst_904:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x34831d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1ef863 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x603021 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb4831d; op2val:0xc01ef863; op3val:0x3f603021; valaddr_reg:x16; val_offset:648; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 648, x17, x15, 1136, x18)

inst_905:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x34831d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1ef863 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x603021 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb4831d; op2val:0xc01ef863; op3val:0x3f603021; valaddr_reg:x16; val_offset:660; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 660, x17, x15, 1144, x18)

inst_906:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x6edfc9 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x403002 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3354a3 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e6edfc9; op2val:0xbf403002; op3val:0x3e3354a3; valaddr_reg:x16; val_offset:672; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 672, x17, x15, 1152, x18)

inst_907:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x6edfc9 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x403002 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3354a3 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e6edfc9; op2val:0xbf403002; op3val:0x3e3354a3; valaddr_reg:x16; val_offset:684; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 684, x17, x15, 1160, x18)

inst_908:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x6edfc9 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x403002 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3354a3 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e6edfc9; op2val:0xbf403002; op3val:0x3e3354a3; valaddr_reg:x16; val_offset:696; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 696, x17, x15, 1168, x18)

inst_909:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x6edfc9 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x403002 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3354a3 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e6edfc9; op2val:0xbf403002; op3val:0x3e3354a3; valaddr_reg:x16; val_offset:708; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 708, x17, x15, 1176, x18)

inst_910:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x6edfc9 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x403002 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3354a3 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e6edfc9; op2val:0xbf403002; op3val:0x3e3354a3; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1184, x18)

inst_911:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x485250 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1ae7c8 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x726dc7 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f485250; op2val:0xbf1ae7c8; op3val:0x3ef26dc7; valaddr_reg:x16; val_offset:732; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 732, x17, x15, 1192, x18)

inst_912:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x485250 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1ae7c8 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x726dc7 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f485250; op2val:0xbf1ae7c8; op3val:0x3ef26dc7; valaddr_reg:x16; val_offset:744; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 744, x17, x15, 1200, x18)

inst_913:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x485250 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1ae7c8 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x726dc7 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f485250; op2val:0xbf1ae7c8; op3val:0x3ef26dc7; valaddr_reg:x16; val_offset:756; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 756, x17, x15, 1208, x18)

inst_914:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x485250 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1ae7c8 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x726dc7 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f485250; op2val:0xbf1ae7c8; op3val:0x3ef26dc7; valaddr_reg:x16; val_offset:768; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 768, x17, x15, 1216, x18)

inst_915:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x485250 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1ae7c8 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x726dc7 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f485250; op2val:0xbf1ae7c8; op3val:0x3ef26dc7; valaddr_reg:x16; val_offset:780; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 780, x17, x15, 1224, x18)

inst_916:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x01584e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x34167f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x35faea and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d81584e; op2val:0xc134167f; op3val:0x3f35faea; valaddr_reg:x16; val_offset:792; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 792, x17, x15, 1232, x18)

inst_917:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x01584e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x34167f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x35faea and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d81584e; op2val:0xc134167f; op3val:0x3f35faea; valaddr_reg:x16; val_offset:804; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 804, x17, x15, 1240, x18)

inst_918:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x01584e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x34167f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x35faea and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d81584e; op2val:0xc134167f; op3val:0x3f35faea; valaddr_reg:x16; val_offset:816; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 816, x17, x15, 1248, x18)

inst_919:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x01584e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x34167f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x35faea and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d81584e; op2val:0xc134167f; op3val:0x3f35faea; valaddr_reg:x16; val_offset:828; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 828, x17, x15, 1256, x18)

inst_920:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x01584e and fs2 == 1 and fe2 == 0x82 and fm2 == 0x34167f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x35faea and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d81584e; op2val:0xc134167f; op3val:0x3f35faea; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1264, x18)

inst_921:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x68eae9 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x0336b1 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6ec3f0 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ce8eae9; op2val:0xc18336b1; op3val:0x3eeec3f0; valaddr_reg:x16; val_offset:852; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 852, x17, x15, 1272, x18)

inst_922:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x68eae9 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x0336b1 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6ec3f0 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ce8eae9; op2val:0xc18336b1; op3val:0x3eeec3f0; valaddr_reg:x16; val_offset:864; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 864, x17, x15, 1280, x18)

inst_923:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x68eae9 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x0336b1 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6ec3f0 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ce8eae9; op2val:0xc18336b1; op3val:0x3eeec3f0; valaddr_reg:x16; val_offset:876; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 876, x17, x15, 1288, x18)

inst_924:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x68eae9 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x0336b1 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6ec3f0 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ce8eae9; op2val:0xc18336b1; op3val:0x3eeec3f0; valaddr_reg:x16; val_offset:888; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 888, x17, x15, 1296, x18)

inst_925:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x68eae9 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x0336b1 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6ec3f0 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ce8eae9; op2val:0xc18336b1; op3val:0x3eeec3f0; valaddr_reg:x16; val_offset:900; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 900, x17, x15, 1304, x18)

inst_926:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x260dc5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x455af1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x000396 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e260dc5; op2val:0xc0455af1; op3val:0x3f000396; valaddr_reg:x16; val_offset:912; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 912, x17, x15, 1312, x18)

inst_927:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x260dc5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x455af1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x000396 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e260dc5; op2val:0xc0455af1; op3val:0x3f000396; valaddr_reg:x16; val_offset:924; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 924, x17, x15, 1320, x18)

inst_928:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x260dc5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x455af1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x000396 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e260dc5; op2val:0xc0455af1; op3val:0x3f000396; valaddr_reg:x16; val_offset:936; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 936, x17, x15, 1328, x18)

inst_929:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x260dc5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x455af1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x000396 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e260dc5; op2val:0xc0455af1; op3val:0x3f000396; valaddr_reg:x16; val_offset:948; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 948, x17, x15, 1336, x18)

inst_930:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x260dc5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x455af1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x000396 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e260dc5; op2val:0xc0455af1; op3val:0x3f000396; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 1344, x18)

inst_931:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x062d29 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x54fbae and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5f429f and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f062d29; op2val:0xbfd4fbae; op3val:0x3f5f429f; valaddr_reg:x16; val_offset:972; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 972, x17, x15, 1352, x18)

inst_932:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x062d29 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x54fbae and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5f429f and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f062d29; op2val:0xbfd4fbae; op3val:0x3f5f429f; valaddr_reg:x16; val_offset:984; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 984, x17, x15, 1360, x18)

inst_933:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x062d29 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x54fbae and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5f429f and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f062d29; op2val:0xbfd4fbae; op3val:0x3f5f429f; valaddr_reg:x16; val_offset:996; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 996, x17, x15, 1368, x18)

inst_934:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x062d29 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x54fbae and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5f429f and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f062d29; op2val:0xbfd4fbae; op3val:0x3f5f429f; valaddr_reg:x16; val_offset:1008; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1008, x17, x15, 1376, x18)

inst_935:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x062d29 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x54fbae and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5f429f and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f062d29; op2val:0xbfd4fbae; op3val:0x3f5f429f; valaddr_reg:x16; val_offset:1020; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1020, x17, x15, 1384, x18)

inst_936:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x30f157 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6cf2b1 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x23c63b and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f30f157; op2val:0xbeecf2b1; op3val:0x3ea3c63b; valaddr_reg:x16; val_offset:1032; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1032, x17, x15, 1392, x18)

inst_937:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x30f157 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6cf2b1 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x23c63b and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f30f157; op2val:0xbeecf2b1; op3val:0x3ea3c63b; valaddr_reg:x16; val_offset:1044; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1044, x17, x15, 1400, x18)

inst_938:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x30f157 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6cf2b1 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x23c63b and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f30f157; op2val:0xbeecf2b1; op3val:0x3ea3c63b; valaddr_reg:x16; val_offset:1056; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1056, x17, x15, 1408, x18)

inst_939:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x30f157 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6cf2b1 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x23c63b and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f30f157; op2val:0xbeecf2b1; op3val:0x3ea3c63b; valaddr_reg:x16; val_offset:1068; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1068, x17, x15, 1416, x18)

inst_940:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x30f157 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6cf2b1 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x23c63b and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f30f157; op2val:0xbeecf2b1; op3val:0x3ea3c63b; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 1424, x18)

inst_941:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x1fbdc5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x41a606 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x71ab54 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e1fbdc5; op2val:0xc041a606; op3val:0x3ef1ab54; valaddr_reg:x16; val_offset:1092; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1092, x17, x15, 1432, x18)

inst_942:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x1fbdc5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x41a606 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x71ab54 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e1fbdc5; op2val:0xc041a606; op3val:0x3ef1ab54; valaddr_reg:x16; val_offset:1104; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1104, x17, x15, 1440, x18)

inst_943:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x1fbdc5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x41a606 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x71ab54 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e1fbdc5; op2val:0xc041a606; op3val:0x3ef1ab54; valaddr_reg:x16; val_offset:1116; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1116, x17, x15, 1448, x18)

inst_944:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x1fbdc5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x41a606 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x71ab54 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e1fbdc5; op2val:0xc041a606; op3val:0x3ef1ab54; valaddr_reg:x16; val_offset:1128; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1128, x17, x15, 1456, x18)

inst_945:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x1fbdc5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x41a606 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x71ab54 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e1fbdc5; op2val:0xc041a606; op3val:0x3ef1ab54; valaddr_reg:x16; val_offset:1140; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1140, x17, x15, 1464, x18)

inst_946:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x02a7b0 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1ede60 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2229fa and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f02a7b0; op2val:0xbf9ede60; op3val:0x3f2229fa; valaddr_reg:x16; val_offset:1152; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1152, x17, x15, 1472, x18)

inst_947:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x02a7b0 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1ede60 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2229fa and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f02a7b0; op2val:0xbf9ede60; op3val:0x3f2229fa; valaddr_reg:x16; val_offset:1164; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1164, x17, x15, 1480, x18)

inst_948:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x02a7b0 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1ede60 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2229fa and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f02a7b0; op2val:0xbf9ede60; op3val:0x3f2229fa; valaddr_reg:x16; val_offset:1176; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1176, x17, x15, 1488, x18)

inst_949:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x02a7b0 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1ede60 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2229fa and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f02a7b0; op2val:0xbf9ede60; op3val:0x3f2229fa; valaddr_reg:x16; val_offset:1188; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1188, x17, x15, 1496, x18)

inst_950:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x02a7b0 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1ede60 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2229fa and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f02a7b0; op2val:0xbf9ede60; op3val:0x3f2229fa; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 1504, x18)

inst_951:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1da2aa and fs2 == 1 and fe2 == 0x7a and fm2 == 0x5d4efe and fs3 == 0 and fe3 == 0x79 and fm3 == 0x084611 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e9da2aa; op2val:0xbd5d4efe; op3val:0x3c884611; valaddr_reg:x16; val_offset:1212; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1212, x17, x15, 1512, x18)

inst_952:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1da2aa and fs2 == 1 and fe2 == 0x7a and fm2 == 0x5d4efe and fs3 == 0 and fe3 == 0x79 and fm3 == 0x084611 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e9da2aa; op2val:0xbd5d4efe; op3val:0x3c884611; valaddr_reg:x16; val_offset:1224; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1224, x17, x15, 1520, x18)

inst_953:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1da2aa and fs2 == 1 and fe2 == 0x7a and fm2 == 0x5d4efe and fs3 == 0 and fe3 == 0x79 and fm3 == 0x084611 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e9da2aa; op2val:0xbd5d4efe; op3val:0x3c884611; valaddr_reg:x16; val_offset:1236; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1236, x17, x15, 1528, x18)

inst_954:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1da2aa and fs2 == 1 and fe2 == 0x7a and fm2 == 0x5d4efe and fs3 == 0 and fe3 == 0x79 and fm3 == 0x084611 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e9da2aa; op2val:0xbd5d4efe; op3val:0x3c884611; valaddr_reg:x16; val_offset:1248; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1248, x17, x15, 1536, x18)

inst_955:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1da2aa and fs2 == 1 and fe2 == 0x7a and fm2 == 0x5d4efe and fs3 == 0 and fe3 == 0x79 and fm3 == 0x084611 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e9da2aa; op2val:0xbd5d4efe; op3val:0x3c884611; valaddr_reg:x16; val_offset:1260; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1260, x17, x15, 1544, x18)

inst_956:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x53db2c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3f4fca and fs3 == 0 and fe3 == 0x7b and fm3 == 0x1e528e and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dd3db2c; op2val:0xbf3f4fca; op3val:0x3d9e528e; valaddr_reg:x16; val_offset:1272; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1272, x17, x15, 1552, x18)

inst_957:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x53db2c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3f4fca and fs3 == 0 and fe3 == 0x7b and fm3 == 0x1e528e and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dd3db2c; op2val:0xbf3f4fca; op3val:0x3d9e528e; valaddr_reg:x16; val_offset:1284; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1284, x17, x15, 1560, x18)

inst_958:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x53db2c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3f4fca and fs3 == 0 and fe3 == 0x7b and fm3 == 0x1e528e and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dd3db2c; op2val:0xbf3f4fca; op3val:0x3d9e528e; valaddr_reg:x16; val_offset:1296; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1296, x17, x15, 1568, x18)

inst_959:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x53db2c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3f4fca and fs3 == 0 and fe3 == 0x7b and fm3 == 0x1e528e and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dd3db2c; op2val:0xbf3f4fca; op3val:0x3d9e528e; valaddr_reg:x16; val_offset:1308; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1308, x17, x15, 1576, x18)

inst_960:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x53db2c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3f4fca and fs3 == 0 and fe3 == 0x7b and fm3 == 0x1e528e and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dd3db2c; op2val:0xbf3f4fca; op3val:0x3d9e528e; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 1584, x18)

inst_961:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x020622 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5486e7 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x57e333 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d820622; op2val:0xc0d486e7; op3val:0x3ed7e333; valaddr_reg:x16; val_offset:1332; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1332, x17, x15, 1592, x18)

inst_962:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x020622 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5486e7 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x57e333 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d820622; op2val:0xc0d486e7; op3val:0x3ed7e333; valaddr_reg:x16; val_offset:1344; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1344, x17, x15, 1600, x18)

inst_963:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x020622 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5486e7 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x57e333 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d820622; op2val:0xc0d486e7; op3val:0x3ed7e333; valaddr_reg:x16; val_offset:1356; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1356, x17, x15, 1608, x18)

inst_964:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x020622 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5486e7 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x57e333 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d820622; op2val:0xc0d486e7; op3val:0x3ed7e333; valaddr_reg:x16; val_offset:1368; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1368, x17, x15, 1616, x18)

inst_965:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x020622 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5486e7 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x57e333 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d820622; op2val:0xc0d486e7; op3val:0x3ed7e333; valaddr_reg:x16; val_offset:1380; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1380, x17, x15, 1624, x18)

inst_966:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x45c0dd and fs2 == 1 and fe2 == 0x7f and fm2 == 0x41ed03 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x15cd7d and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec5c0dd; op2val:0xbfc1ed03; op3val:0x3f15cd7d; valaddr_reg:x16; val_offset:1392; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1392, x17, x15, 1632, x18)

inst_967:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x45c0dd and fs2 == 1 and fe2 == 0x7f and fm2 == 0x41ed03 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x15cd7d and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec5c0dd; op2val:0xbfc1ed03; op3val:0x3f15cd7d; valaddr_reg:x16; val_offset:1404; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1404, x17, x15, 1640, x18)

inst_968:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x45c0dd and fs2 == 1 and fe2 == 0x7f and fm2 == 0x41ed03 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x15cd7d and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec5c0dd; op2val:0xbfc1ed03; op3val:0x3f15cd7d; valaddr_reg:x16; val_offset:1416; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1416, x17, x15, 1648, x18)

inst_969:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x45c0dd and fs2 == 1 and fe2 == 0x7f and fm2 == 0x41ed03 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x15cd7d and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec5c0dd; op2val:0xbfc1ed03; op3val:0x3f15cd7d; valaddr_reg:x16; val_offset:1428; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1428, x17, x15, 1656, x18)

inst_970:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x45c0dd and fs2 == 1 and fe2 == 0x7f and fm2 == 0x41ed03 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x15cd7d and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec5c0dd; op2val:0xbfc1ed03; op3val:0x3f15cd7d; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 1664, x18)

inst_971:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x667fb9 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x6bab2f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x543161 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3de67fb9; op2val:0xc06bab2f; op3val:0x3ed43161; valaddr_reg:x16; val_offset:1452; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1452, x17, x15, 1672, x18)

inst_972:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x667fb9 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x6bab2f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x543161 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3de67fb9; op2val:0xc06bab2f; op3val:0x3ed43161; valaddr_reg:x16; val_offset:1464; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1464, x17, x15, 1680, x18)

inst_973:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x667fb9 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x6bab2f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x543161 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3de67fb9; op2val:0xc06bab2f; op3val:0x3ed43161; valaddr_reg:x16; val_offset:1476; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1476, x17, x15, 1688, x18)

inst_974:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x667fb9 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x6bab2f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x543161 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3de67fb9; op2val:0xc06bab2f; op3val:0x3ed43161; valaddr_reg:x16; val_offset:1488; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1488, x17, x15, 1696, x18)

inst_975:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x667fb9 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x6bab2f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x543161 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3de67fb9; op2val:0xc06bab2f; op3val:0x3ed43161; valaddr_reg:x16; val_offset:1500; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1500, x17, x15, 1704, x18)

inst_976:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x73a83f and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7c9a25 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x706c55 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e73a83f; op2val:0xc07c9a25; op3val:0x3f706c55; valaddr_reg:x16; val_offset:1512; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1512, x17, x15, 1712, x18)

inst_977:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x73a83f and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7c9a25 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x706c55 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e73a83f; op2val:0xc07c9a25; op3val:0x3f706c55; valaddr_reg:x16; val_offset:1524; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1524, x17, x15, 1720, x18)

inst_978:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x73a83f and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7c9a25 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x706c55 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e73a83f; op2val:0xc07c9a25; op3val:0x3f706c55; valaddr_reg:x16; val_offset:1536; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1536, x17, x15, 1728, x18)

inst_979:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x73a83f and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7c9a25 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x706c55 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e73a83f; op2val:0xc07c9a25; op3val:0x3f706c55; valaddr_reg:x16; val_offset:1548; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1548, x17, x15, 1736, x18)

inst_980:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x73a83f and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7c9a25 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x706c55 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e73a83f; op2val:0xc07c9a25; op3val:0x3f706c55; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1744, x18)

inst_981:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1798fa and fs2 == 1 and fe2 == 0x7f and fm2 == 0x33a14b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x54bef5 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1798fa; op2val:0xbfb3a14b; op3val:0x3f54bef5; valaddr_reg:x16; val_offset:1572; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1572, x17, x15, 1752, x18)

inst_982:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1798fa and fs2 == 1 and fe2 == 0x7f and fm2 == 0x33a14b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x54bef5 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1798fa; op2val:0xbfb3a14b; op3val:0x3f54bef5; valaddr_reg:x16; val_offset:1584; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1584, x17, x15, 1760, x18)

inst_983:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1798fa and fs2 == 1 and fe2 == 0x7f and fm2 == 0x33a14b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x54bef5 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1798fa; op2val:0xbfb3a14b; op3val:0x3f54bef5; valaddr_reg:x16; val_offset:1596; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1596, x17, x15, 1768, x18)

inst_984:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1798fa and fs2 == 1 and fe2 == 0x7f and fm2 == 0x33a14b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x54bef5 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1798fa; op2val:0xbfb3a14b; op3val:0x3f54bef5; valaddr_reg:x16; val_offset:1608; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1608, x17, x15, 1776, x18)

inst_985:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1798fa and fs2 == 1 and fe2 == 0x7f and fm2 == 0x33a14b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x54bef5 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1798fa; op2val:0xbfb3a14b; op3val:0x3f54bef5; valaddr_reg:x16; val_offset:1620; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1620, x17, x15, 1784, x18)

inst_986:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5e0a61 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x46af73 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2c5434 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5e0a61; op2val:0xbf46af73; op3val:0x3f2c5434; valaddr_reg:x16; val_offset:1632; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1632, x17, x15, 1792, x18)

inst_987:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5e0a61 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x46af73 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2c5434 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5e0a61; op2val:0xbf46af73; op3val:0x3f2c5434; valaddr_reg:x16; val_offset:1644; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1644, x17, x15, 1800, x18)

inst_988:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5e0a61 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x46af73 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2c5434 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5e0a61; op2val:0xbf46af73; op3val:0x3f2c5434; valaddr_reg:x16; val_offset:1656; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1656, x17, x15, 1808, x18)

inst_989:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5e0a61 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x46af73 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2c5434 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5e0a61; op2val:0xbf46af73; op3val:0x3f2c5434; valaddr_reg:x16; val_offset:1668; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1668, x17, x15, 1816, x18)

inst_990:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5e0a61 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x46af73 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2c5434 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5e0a61; op2val:0xbf46af73; op3val:0x3f2c5434; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1824, x18)

inst_991:
// fs1 == 0 and fe1 == 0x76 and fm1 == 0x2d39bb and fs2 == 1 and fe2 == 0x83 and fm2 == 0x5017e0 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x0ccf10 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3b2d39bb; op2val:0xc1d017e0; op3val:0x3d8ccf10; valaddr_reg:x16; val_offset:1692; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1692, x17, x15, 1832, x18)

inst_992:
// fs1 == 0 and fe1 == 0x76 and fm1 == 0x2d39bb and fs2 == 1 and fe2 == 0x83 and fm2 == 0x5017e0 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x0ccf10 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3b2d39bb; op2val:0xc1d017e0; op3val:0x3d8ccf10; valaddr_reg:x16; val_offset:1704; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1704, x17, x15, 1840, x18)

inst_993:
// fs1 == 0 and fe1 == 0x76 and fm1 == 0x2d39bb and fs2 == 1 and fe2 == 0x83 and fm2 == 0x5017e0 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x0ccf10 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3b2d39bb; op2val:0xc1d017e0; op3val:0x3d8ccf10; valaddr_reg:x16; val_offset:1716; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1716, x17, x15, 1848, x18)

inst_994:
// fs1 == 0 and fe1 == 0x76 and fm1 == 0x2d39bb and fs2 == 1 and fe2 == 0x83 and fm2 == 0x5017e0 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x0ccf10 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3b2d39bb; op2val:0xc1d017e0; op3val:0x3d8ccf10; valaddr_reg:x16; val_offset:1728; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1728, x17, x15, 1856, x18)

inst_995:
// fs1 == 0 and fe1 == 0x76 and fm1 == 0x2d39bb and fs2 == 1 and fe2 == 0x83 and fm2 == 0x5017e0 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x0ccf10 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3b2d39bb; op2val:0xc1d017e0; op3val:0x3d8ccf10; valaddr_reg:x16; val_offset:1740; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1740, x17, x15, 1864, x18)

inst_996:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5fd383 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x15ca94 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x02f739 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3edfd383; op2val:0xbe15ca94; op3val:0x3d82f739; valaddr_reg:x16; val_offset:1752; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1752, x17, x15, 1872, x18)

inst_997:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5fd383 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x15ca94 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x02f739 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3edfd383; op2val:0xbe15ca94; op3val:0x3d82f739; valaddr_reg:x16; val_offset:1764; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1764, x17, x15, 1880, x18)

inst_998:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5fd383 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x15ca94 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x02f739 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3edfd383; op2val:0xbe15ca94; op3val:0x3d82f739; valaddr_reg:x16; val_offset:1776; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1776, x17, x15, 1888, x18)

inst_999:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5fd383 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x15ca94 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x02f739 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3edfd383; op2val:0xbe15ca94; op3val:0x3d82f739; valaddr_reg:x16; val_offset:1788; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1788, x17, x15, 1896, x18)

inst_1000:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5fd383 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x15ca94 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x02f739 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3edfd383; op2val:0xbe15ca94; op3val:0x3d82f739; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1904, x18)

inst_1001:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x07179f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7ccd19 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x05677c and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e87179f; op2val:0xbffccd19; op3val:0x3f05677c; valaddr_reg:x16; val_offset:1812; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1812, x17, x15, 1912, x18)

inst_1002:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x07179f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7ccd19 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x05677c and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e87179f; op2val:0xbffccd19; op3val:0x3f05677c; valaddr_reg:x16; val_offset:1824; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1824, x17, x15, 1920, x18)

inst_1003:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x07179f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7ccd19 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x05677c and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e87179f; op2val:0xbffccd19; op3val:0x3f05677c; valaddr_reg:x16; val_offset:1836; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1836, x17, x15, 1928, x18)

inst_1004:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x07179f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7ccd19 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x05677c and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e87179f; op2val:0xbffccd19; op3val:0x3f05677c; valaddr_reg:x16; val_offset:1848; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1848, x17, x15, 1936, x18)

inst_1005:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x07179f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7ccd19 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x05677c and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e87179f; op2val:0xbffccd19; op3val:0x3f05677c; valaddr_reg:x16; val_offset:1860; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1860, x17, x15, 1944, x18)

inst_1006:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2c5956 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x33a120 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x71dde2 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2c5956; op2val:0xbe33a120; op3val:0x3df1dde2; valaddr_reg:x16; val_offset:1872; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1872, x17, x15, 1952, x18)

inst_1007:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2c5956 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x33a120 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x71dde2 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2c5956; op2val:0xbe33a120; op3val:0x3df1dde2; valaddr_reg:x16; val_offset:1884; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1884, x17, x15, 1960, x18)

inst_1008:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2c5956 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x33a120 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x71dde2 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2c5956; op2val:0xbe33a120; op3val:0x3df1dde2; valaddr_reg:x16; val_offset:1896; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1896, x17, x15, 1968, x18)

inst_1009:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2c5956 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x33a120 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x71dde2 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2c5956; op2val:0xbe33a120; op3val:0x3df1dde2; valaddr_reg:x16; val_offset:1908; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1908, x17, x15, 1976, x18)

inst_1010:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2c5956 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x33a120 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x71dde2 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2c5956; op2val:0xbe33a120; op3val:0x3df1dde2; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1984, x18)

inst_1011:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x331eda and fs2 == 1 and fe2 == 0x80 and fm2 == 0x212d3a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x618c1a and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e331eda; op2val:0xc0212d3a; op3val:0x3ee18c1a; valaddr_reg:x16; val_offset:1932; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1932, x17, x15, 1992, x18)

inst_1012:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x331eda and fs2 == 1 and fe2 == 0x80 and fm2 == 0x212d3a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x618c1a and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e331eda; op2val:0xc0212d3a; op3val:0x3ee18c1a; valaddr_reg:x16; val_offset:1944; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1944, x17, x15, 2000, x18)

inst_1013:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x331eda and fs2 == 1 and fe2 == 0x80 and fm2 == 0x212d3a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x618c1a and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e331eda; op2val:0xc0212d3a; op3val:0x3ee18c1a; valaddr_reg:x16; val_offset:1956; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1956, x17, x15, 2008, x18)

inst_1014:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x331eda and fs2 == 1 and fe2 == 0x80 and fm2 == 0x212d3a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x618c1a and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e331eda; op2val:0xc0212d3a; op3val:0x3ee18c1a; valaddr_reg:x16; val_offset:1968; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1968, x17, x15, 2016, x18)

inst_1015:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x331eda and fs2 == 1 and fe2 == 0x80 and fm2 == 0x212d3a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x618c1a and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e331eda; op2val:0xc0212d3a; op3val:0x3ee18c1a; valaddr_reg:x16; val_offset:1980; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1980, x17, x15, 2024, x18)
RVTEST_SIGBASE(x15,signature_x15_5)

inst_1016:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x636734 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x18113f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x071499 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee36734; op2val:0xbf18113f; op3val:0x3e871499; valaddr_reg:x16; val_offset:1992; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1992, x17, x15, 0, x18)

inst_1017:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x636734 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x18113f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x071499 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee36734; op2val:0xbf18113f; op3val:0x3e871499; valaddr_reg:x16; val_offset:2004; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 2004, x17, x15, 8, x18)

inst_1018:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x636734 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x18113f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x071499 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee36734; op2val:0xbf18113f; op3val:0x3e871499; valaddr_reg:x16; val_offset:2016; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 2016, x17, x15, 16, x18)

inst_1019:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x636734 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x18113f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x071499 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee36734; op2val:0xbf18113f; op3val:0x3e871499; valaddr_reg:x16; val_offset:2028; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 2028, x17, x15, 24, x18)
addi x16,x16,2040

inst_1020:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x636734 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x18113f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x071499 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee36734; op2val:0xbf18113f; op3val:0x3e871499; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 32, x18)

inst_1021:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6417ec and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0859f1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x72f9b3 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6417ec; op2val:0xbf8859f1; op3val:0x3f72f9b3; valaddr_reg:x16; val_offset:12; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 12, x17, x15, 40, x18)

inst_1022:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6417ec and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0859f1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x72f9b3 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6417ec; op2val:0xbf8859f1; op3val:0x3f72f9b3; valaddr_reg:x16; val_offset:24; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 24, x17, x15, 48, x18)

inst_1023:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6417ec and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0859f1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x72f9b3 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6417ec; op2val:0xbf8859f1; op3val:0x3f72f9b3; valaddr_reg:x16; val_offset:36; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 36, x17, x15, 56, x18)

inst_1024:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6417ec and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0859f1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x72f9b3 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6417ec; op2val:0xbf8859f1; op3val:0x3f72f9b3; valaddr_reg:x16; val_offset:48; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 48, x17, x15, 64, x18)

inst_1025:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6417ec and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0859f1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x72f9b3 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6417ec; op2val:0xbf8859f1; op3val:0x3f72f9b3; valaddr_reg:x16; val_offset:60; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 60, x17, x15, 72, x18)

inst_1026:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x52c4d7 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x1bd6a3 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x004de5 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f52c4d7; op2val:0xbe9bd6a3; op3val:0x3e804de5; valaddr_reg:x16; val_offset:72; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 72, x17, x15, 80, x18)

inst_1027:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x52c4d7 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x1bd6a3 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x004de5 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f52c4d7; op2val:0xbe9bd6a3; op3val:0x3e804de5; valaddr_reg:x16; val_offset:84; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 84, x17, x15, 88, x18)

inst_1028:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x52c4d7 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x1bd6a3 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x004de5 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f52c4d7; op2val:0xbe9bd6a3; op3val:0x3e804de5; valaddr_reg:x16; val_offset:96; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 96, x17, x15, 96, x18)

inst_1029:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x52c4d7 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x1bd6a3 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x004de5 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f52c4d7; op2val:0xbe9bd6a3; op3val:0x3e804de5; valaddr_reg:x16; val_offset:108; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 108, x17, x15, 104, x18)

inst_1030:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x52c4d7 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x1bd6a3 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x004de5 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f52c4d7; op2val:0xbe9bd6a3; op3val:0x3e804de5; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 112, x18)

inst_1031:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x470376 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x68c419 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x34f396 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f470376; op2val:0xbf68c419; op3val:0x3f34f396; valaddr_reg:x16; val_offset:132; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 132, x17, x15, 120, x18)

inst_1032:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x470376 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x68c419 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x34f396 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f470376; op2val:0xbf68c419; op3val:0x3f34f396; valaddr_reg:x16; val_offset:144; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 144, x17, x15, 128, x18)

inst_1033:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x470376 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x68c419 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x34f396 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f470376; op2val:0xbf68c419; op3val:0x3f34f396; valaddr_reg:x16; val_offset:156; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 156, x17, x15, 136, x18)

inst_1034:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x470376 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x68c419 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x34f396 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f470376; op2val:0xbf68c419; op3val:0x3f34f396; valaddr_reg:x16; val_offset:168; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 168, x17, x15, 144, x18)

inst_1035:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x470376 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x68c419 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x34f396 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f470376; op2val:0xbf68c419; op3val:0x3f34f396; valaddr_reg:x16; val_offset:180; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 180, x17, x15, 152, x18)

inst_1036:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5f0628 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x044423 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x667512 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e5f0628; op2val:0xc0844423; op3val:0x3f667512; valaddr_reg:x16; val_offset:192; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 192, x17, x15, 160, x18)

inst_1037:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5f0628 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x044423 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x667512 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e5f0628; op2val:0xc0844423; op3val:0x3f667512; valaddr_reg:x16; val_offset:204; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 204, x17, x15, 168, x18)

inst_1038:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5f0628 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x044423 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x667512 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e5f0628; op2val:0xc0844423; op3val:0x3f667512; valaddr_reg:x16; val_offset:216; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 216, x17, x15, 176, x18)

inst_1039:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5f0628 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x044423 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x667512 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e5f0628; op2val:0xc0844423; op3val:0x3f667512; valaddr_reg:x16; val_offset:228; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 228, x17, x15, 184, x18)

inst_1040:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5f0628 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x044423 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x667512 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e5f0628; op2val:0xc0844423; op3val:0x3f667512; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 192, x18)

inst_1041:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1c5755 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6e6c19 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x119b36 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1c5755; op2val:0xbf6e6c19; op3val:0x3f119b36; valaddr_reg:x16; val_offset:252; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 252, x17, x15, 200, x18)

inst_1042:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1c5755 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6e6c19 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x119b36 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1c5755; op2val:0xbf6e6c19; op3val:0x3f119b36; valaddr_reg:x16; val_offset:264; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 264, x17, x15, 208, x18)

inst_1043:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1c5755 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6e6c19 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x119b36 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1c5755; op2val:0xbf6e6c19; op3val:0x3f119b36; valaddr_reg:x16; val_offset:276; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 276, x17, x15, 216, x18)

inst_1044:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1c5755 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6e6c19 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x119b36 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1c5755; op2val:0xbf6e6c19; op3val:0x3f119b36; valaddr_reg:x16; val_offset:288; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 288, x17, x15, 224, x18)

inst_1045:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1c5755 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6e6c19 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x119b36 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1c5755; op2val:0xbf6e6c19; op3val:0x3f119b36; valaddr_reg:x16; val_offset:300; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 300, x17, x15, 232, x18)

inst_1046:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x571b6c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6300ba and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3ebdee and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f571b6c; op2val:0xbf6300ba; op3val:0x3f3ebdee; valaddr_reg:x16; val_offset:312; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 312, x17, x15, 240, x18)

inst_1047:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x571b6c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6300ba and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3ebdee and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f571b6c; op2val:0xbf6300ba; op3val:0x3f3ebdee; valaddr_reg:x16; val_offset:324; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 324, x17, x15, 248, x18)

inst_1048:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x571b6c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6300ba and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3ebdee and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f571b6c; op2val:0xbf6300ba; op3val:0x3f3ebdee; valaddr_reg:x16; val_offset:336; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 336, x17, x15, 256, x18)

inst_1049:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x571b6c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6300ba and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3ebdee and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f571b6c; op2val:0xbf6300ba; op3val:0x3f3ebdee; valaddr_reg:x16; val_offset:348; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 348, x17, x15, 264, x18)

inst_1050:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x571b6c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6300ba and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3ebdee and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f571b6c; op2val:0xbf6300ba; op3val:0x3f3ebdee; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 272, x18)

inst_1051:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0ea6d3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x15c202 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x26e66a and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8ea6d3; op2val:0xc015c202; op3val:0x3f26e66a; valaddr_reg:x16; val_offset:372; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 372, x17, x15, 280, x18)

inst_1052:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0ea6d3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x15c202 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x26e66a and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8ea6d3; op2val:0xc015c202; op3val:0x3f26e66a; valaddr_reg:x16; val_offset:384; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 384, x17, x15, 288, x18)

inst_1053:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0ea6d3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x15c202 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x26e66a and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8ea6d3; op2val:0xc015c202; op3val:0x3f26e66a; valaddr_reg:x16; val_offset:396; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 396, x17, x15, 296, x18)

inst_1054:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0ea6d3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x15c202 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x26e66a and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8ea6d3; op2val:0xc015c202; op3val:0x3f26e66a; valaddr_reg:x16; val_offset:408; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 408, x17, x15, 304, x18)

inst_1055:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0ea6d3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x15c202 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x26e66a and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8ea6d3; op2val:0xc015c202; op3val:0x3f26e66a; valaddr_reg:x16; val_offset:420; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 420, x17, x15, 312, x18)

inst_1056:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x75bb79 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6c4b7b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x62d148 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef5bb79; op2val:0xbfec4b7b; op3val:0x3f62d148; valaddr_reg:x16; val_offset:432; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 432, x17, x15, 320, x18)

inst_1057:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x75bb79 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6c4b7b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x62d148 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef5bb79; op2val:0xbfec4b7b; op3val:0x3f62d148; valaddr_reg:x16; val_offset:444; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 444, x17, x15, 328, x18)

inst_1058:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x75bb79 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6c4b7b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x62d148 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef5bb79; op2val:0xbfec4b7b; op3val:0x3f62d148; valaddr_reg:x16; val_offset:456; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 456, x17, x15, 336, x18)

inst_1059:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x75bb79 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6c4b7b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x62d148 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef5bb79; op2val:0xbfec4b7b; op3val:0x3f62d148; valaddr_reg:x16; val_offset:468; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 468, x17, x15, 344, x18)

inst_1060:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x75bb79 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6c4b7b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x62d148 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef5bb79; op2val:0xbfec4b7b; op3val:0x3f62d148; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 352, x18)

inst_1061:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x247b71 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x061db6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2c5768 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f247b71; op2val:0xbf861db6; op3val:0x3f2c5768; valaddr_reg:x16; val_offset:492; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 492, x17, x15, 360, x18)

inst_1062:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x247b71 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x061db6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2c5768 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f247b71; op2val:0xbf861db6; op3val:0x3f2c5768; valaddr_reg:x16; val_offset:504; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 504, x17, x15, 368, x18)

inst_1063:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x247b71 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x061db6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2c5768 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f247b71; op2val:0xbf861db6; op3val:0x3f2c5768; valaddr_reg:x16; val_offset:516; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 516, x17, x15, 376, x18)

inst_1064:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x247b71 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x061db6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2c5768 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f247b71; op2val:0xbf861db6; op3val:0x3f2c5768; valaddr_reg:x16; val_offset:528; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 528, x17, x15, 384, x18)

inst_1065:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x247b71 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x061db6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2c5768 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f247b71; op2val:0xbf861db6; op3val:0x3f2c5768; valaddr_reg:x16; val_offset:540; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 540, x17, x15, 392, x18)

inst_1066:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2e42b8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0444b6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x34125a and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2e42b8; op2val:0xbf8444b6; op3val:0x3f34125a; valaddr_reg:x16; val_offset:552; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 552, x17, x15, 400, x18)

inst_1067:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2e42b8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0444b6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x34125a and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2e42b8; op2val:0xbf8444b6; op3val:0x3f34125a; valaddr_reg:x16; val_offset:564; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 564, x17, x15, 408, x18)

inst_1068:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2e42b8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0444b6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x34125a and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2e42b8; op2val:0xbf8444b6; op3val:0x3f34125a; valaddr_reg:x16; val_offset:576; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 576, x17, x15, 416, x18)

inst_1069:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2e42b8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0444b6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x34125a and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2e42b8; op2val:0xbf8444b6; op3val:0x3f34125a; valaddr_reg:x16; val_offset:588; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 588, x17, x15, 424, x18)

inst_1070:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2e42b8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0444b6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x34125a and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2e42b8; op2val:0xbf8444b6; op3val:0x3f34125a; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 432, x18)

inst_1071:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0cf22b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3a1c70 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4cef37 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8cf22b; op2val:0xbfba1c70; op3val:0x3eccef37; valaddr_reg:x16; val_offset:612; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 612, x17, x15, 440, x18)

inst_1072:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0cf22b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3a1c70 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4cef37 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8cf22b; op2val:0xbfba1c70; op3val:0x3eccef37; valaddr_reg:x16; val_offset:624; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 624, x17, x15, 448, x18)

inst_1073:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0cf22b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3a1c70 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4cef37 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8cf22b; op2val:0xbfba1c70; op3val:0x3eccef37; valaddr_reg:x16; val_offset:636; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 636, x17, x15, 456, x18)

inst_1074:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0cf22b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3a1c70 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4cef37 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8cf22b; op2val:0xbfba1c70; op3val:0x3eccef37; valaddr_reg:x16; val_offset:648; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 648, x17, x15, 464, x18)

inst_1075:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0cf22b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3a1c70 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4cef37 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8cf22b; op2val:0xbfba1c70; op3val:0x3eccef37; valaddr_reg:x16; val_offset:660; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 660, x17, x15, 472, x18)

inst_1076:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2fac36 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0a2d5d and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3da3ed and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e2fac36; op2val:0xbf8a2d5d; op3val:0x3e3da3ed; valaddr_reg:x16; val_offset:672; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 672, x17, x15, 480, x18)

inst_1077:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2fac36 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0a2d5d and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3da3ed and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e2fac36; op2val:0xbf8a2d5d; op3val:0x3e3da3ed; valaddr_reg:x16; val_offset:684; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 684, x17, x15, 488, x18)

inst_1078:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2fac36 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0a2d5d and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3da3ed and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e2fac36; op2val:0xbf8a2d5d; op3val:0x3e3da3ed; valaddr_reg:x16; val_offset:696; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 696, x17, x15, 496, x18)

inst_1079:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2fac36 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0a2d5d and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3da3ed and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e2fac36; op2val:0xbf8a2d5d; op3val:0x3e3da3ed; valaddr_reg:x16; val_offset:708; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 708, x17, x15, 504, x18)

inst_1080:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2fac36 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0a2d5d and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3da3ed and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e2fac36; op2val:0xbf8a2d5d; op3val:0x3e3da3ed; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 512, x18)

inst_1081:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3155cf and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6a3571 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x223d75 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb155cf; op2val:0xbfea3571; op3val:0x3f223d75; valaddr_reg:x16; val_offset:732; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 732, x17, x15, 520, x18)

inst_1082:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3155cf and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6a3571 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x223d75 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb155cf; op2val:0xbfea3571; op3val:0x3f223d75; valaddr_reg:x16; val_offset:744; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 744, x17, x15, 528, x18)

inst_1083:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3155cf and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6a3571 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x223d75 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb155cf; op2val:0xbfea3571; op3val:0x3f223d75; valaddr_reg:x16; val_offset:756; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 756, x17, x15, 536, x18)

inst_1084:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3155cf and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6a3571 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x223d75 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb155cf; op2val:0xbfea3571; op3val:0x3f223d75; valaddr_reg:x16; val_offset:768; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 768, x17, x15, 544, x18)

inst_1085:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3155cf and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6a3571 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x223d75 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb155cf; op2val:0xbfea3571; op3val:0x3f223d75; valaddr_reg:x16; val_offset:780; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 780, x17, x15, 552, x18)

inst_1086:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x2443ca and fs2 == 1 and fe2 == 0x7f and fm2 == 0x60e846 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x10505c and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3da443ca; op2val:0xbfe0e846; op3val:0x3e10505c; valaddr_reg:x16; val_offset:792; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 792, x17, x15, 560, x18)

inst_1087:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x2443ca and fs2 == 1 and fe2 == 0x7f and fm2 == 0x60e846 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x10505c and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3da443ca; op2val:0xbfe0e846; op3val:0x3e10505c; valaddr_reg:x16; val_offset:804; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 804, x17, x15, 568, x18)

inst_1088:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x2443ca and fs2 == 1 and fe2 == 0x7f and fm2 == 0x60e846 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x10505c and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3da443ca; op2val:0xbfe0e846; op3val:0x3e10505c; valaddr_reg:x16; val_offset:816; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 816, x17, x15, 576, x18)

inst_1089:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x2443ca and fs2 == 1 and fe2 == 0x7f and fm2 == 0x60e846 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x10505c and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3da443ca; op2val:0xbfe0e846; op3val:0x3e10505c; valaddr_reg:x16; val_offset:828; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 828, x17, x15, 584, x18)

inst_1090:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x2443ca and fs2 == 1 and fe2 == 0x7f and fm2 == 0x60e846 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x10505c and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3da443ca; op2val:0xbfe0e846; op3val:0x3e10505c; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 592, x18)

inst_1091:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2e19c1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x34ed54 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x761706 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2e19c1; op2val:0xbfb4ed54; op3val:0x3f761706; valaddr_reg:x16; val_offset:852; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 852, x17, x15, 600, x18)

inst_1092:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2e19c1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x34ed54 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x761706 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2e19c1; op2val:0xbfb4ed54; op3val:0x3f761706; valaddr_reg:x16; val_offset:864; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 864, x17, x15, 608, x18)

inst_1093:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2e19c1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x34ed54 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x761706 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2e19c1; op2val:0xbfb4ed54; op3val:0x3f761706; valaddr_reg:x16; val_offset:876; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 876, x17, x15, 616, x18)

inst_1094:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2e19c1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x34ed54 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x761706 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2e19c1; op2val:0xbfb4ed54; op3val:0x3f761706; valaddr_reg:x16; val_offset:888; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 888, x17, x15, 624, x18)

inst_1095:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2e19c1 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x34ed54 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x761706 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2e19c1; op2val:0xbfb4ed54; op3val:0x3f761706; valaddr_reg:x16; val_offset:900; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 900, x17, x15, 632, x18)

inst_1096:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0a3ab5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x24a785 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x31d020 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e0a3ab5; op2val:0xc024a785; op3val:0x3eb1d020; valaddr_reg:x16; val_offset:912; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 912, x17, x15, 640, x18)

inst_1097:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0a3ab5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x24a785 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x31d020 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e0a3ab5; op2val:0xc024a785; op3val:0x3eb1d020; valaddr_reg:x16; val_offset:924; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 924, x17, x15, 648, x18)

inst_1098:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0a3ab5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x24a785 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x31d020 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e0a3ab5; op2val:0xc024a785; op3val:0x3eb1d020; valaddr_reg:x16; val_offset:936; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 936, x17, x15, 656, x18)

inst_1099:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0a3ab5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x24a785 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x31d020 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e0a3ab5; op2val:0xc024a785; op3val:0x3eb1d020; valaddr_reg:x16; val_offset:948; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 948, x17, x15, 664, x18)

inst_1100:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0a3ab5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x24a785 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x31d020 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e0a3ab5; op2val:0xc024a785; op3val:0x3eb1d020; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 672, x18)

inst_1101:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6844ff and fs2 == 1 and fe2 == 0x7d and fm2 == 0x5db999 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x492bf5 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6844ff; op2val:0xbeddb999; op3val:0x3ec92bf5; valaddr_reg:x16; val_offset:972; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 972, x17, x15, 680, x18)

inst_1102:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6844ff and fs2 == 1 and fe2 == 0x7d and fm2 == 0x5db999 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x492bf5 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6844ff; op2val:0xbeddb999; op3val:0x3ec92bf5; valaddr_reg:x16; val_offset:984; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 984, x17, x15, 688, x18)

inst_1103:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6844ff and fs2 == 1 and fe2 == 0x7d and fm2 == 0x5db999 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x492bf5 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6844ff; op2val:0xbeddb999; op3val:0x3ec92bf5; valaddr_reg:x16; val_offset:996; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 996, x17, x15, 696, x18)

inst_1104:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6844ff and fs2 == 1 and fe2 == 0x7d and fm2 == 0x5db999 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x492bf5 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6844ff; op2val:0xbeddb999; op3val:0x3ec92bf5; valaddr_reg:x16; val_offset:1008; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1008, x17, x15, 704, x18)

inst_1105:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6844ff and fs2 == 1 and fe2 == 0x7d and fm2 == 0x5db999 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x492bf5 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6844ff; op2val:0xbeddb999; op3val:0x3ec92bf5; valaddr_reg:x16; val_offset:1020; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1020, x17, x15, 712, x18)

inst_1106:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x41ae84 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4a2b5f and fs3 == 0 and fe3 == 0x7b and fm3 == 0x18f485 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dc1ae84; op2val:0xbf4a2b5f; op3val:0x3d98f485; valaddr_reg:x16; val_offset:1032; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1032, x17, x15, 720, x18)

inst_1107:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x41ae84 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4a2b5f and fs3 == 0 and fe3 == 0x7b and fm3 == 0x18f485 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dc1ae84; op2val:0xbf4a2b5f; op3val:0x3d98f485; valaddr_reg:x16; val_offset:1044; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1044, x17, x15, 728, x18)

inst_1108:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x41ae84 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4a2b5f and fs3 == 0 and fe3 == 0x7b and fm3 == 0x18f485 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dc1ae84; op2val:0xbf4a2b5f; op3val:0x3d98f485; valaddr_reg:x16; val_offset:1056; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1056, x17, x15, 736, x18)

inst_1109:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x41ae84 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4a2b5f and fs3 == 0 and fe3 == 0x7b and fm3 == 0x18f485 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dc1ae84; op2val:0xbf4a2b5f; op3val:0x3d98f485; valaddr_reg:x16; val_offset:1068; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1068, x17, x15, 744, x18)

inst_1110:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x41ae84 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4a2b5f and fs3 == 0 and fe3 == 0x7b and fm3 == 0x18f485 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dc1ae84; op2val:0xbf4a2b5f; op3val:0x3d98f485; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 752, x18)

inst_1111:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x098d15 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x7a3532 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x06705c and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f098d15; op2val:0xbe7a3532; op3val:0x3e06705c; valaddr_reg:x16; val_offset:1092; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1092, x17, x15, 760, x18)

inst_1112:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x098d15 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x7a3532 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x06705c and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f098d15; op2val:0xbe7a3532; op3val:0x3e06705c; valaddr_reg:x16; val_offset:1104; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1104, x17, x15, 768, x18)

inst_1113:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x098d15 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x7a3532 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x06705c and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f098d15; op2val:0xbe7a3532; op3val:0x3e06705c; valaddr_reg:x16; val_offset:1116; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1116, x17, x15, 776, x18)

inst_1114:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x098d15 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x7a3532 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x06705c and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f098d15; op2val:0xbe7a3532; op3val:0x3e06705c; valaddr_reg:x16; val_offset:1128; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1128, x17, x15, 784, x18)

inst_1115:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x098d15 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x7a3532 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x06705c and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f098d15; op2val:0xbe7a3532; op3val:0x3e06705c; valaddr_reg:x16; val_offset:1140; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1140, x17, x15, 792, x18)

inst_1116:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x214287 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x398330 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x69b76e and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ea14287; op2val:0xc0398330; op3val:0x3f69b76e; valaddr_reg:x16; val_offset:1152; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1152, x17, x15, 800, x18)

inst_1117:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x214287 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x398330 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x69b76e and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ea14287; op2val:0xc0398330; op3val:0x3f69b76e; valaddr_reg:x16; val_offset:1164; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1164, x17, x15, 808, x18)

inst_1118:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x214287 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x398330 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x69b76e and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ea14287; op2val:0xc0398330; op3val:0x3f69b76e; valaddr_reg:x16; val_offset:1176; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1176, x17, x15, 816, x18)

inst_1119:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x214287 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x398330 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x69b76e and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ea14287; op2val:0xc0398330; op3val:0x3f69b76e; valaddr_reg:x16; val_offset:1188; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1188, x17, x15, 824, x18)

inst_1120:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x214287 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x398330 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x69b76e and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ea14287; op2val:0xc0398330; op3val:0x3f69b76e; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 832, x18)

inst_1121:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5cfa56 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x672839 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x47889c and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5cfa56; op2val:0xbee72839; op3val:0x3ec7889c; valaddr_reg:x16; val_offset:1212; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1212, x17, x15, 840, x18)

inst_1122:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5cfa56 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x672839 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x47889c and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5cfa56; op2val:0xbee72839; op3val:0x3ec7889c; valaddr_reg:x16; val_offset:1224; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1224, x17, x15, 848, x18)

inst_1123:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5cfa56 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x672839 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x47889c and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5cfa56; op2val:0xbee72839; op3val:0x3ec7889c; valaddr_reg:x16; val_offset:1236; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1236, x17, x15, 856, x18)

inst_1124:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5cfa56 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x672839 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x47889c and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5cfa56; op2val:0xbee72839; op3val:0x3ec7889c; valaddr_reg:x16; val_offset:1248; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1248, x17, x15, 864, x18)

inst_1125:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5cfa56 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x672839 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x47889c and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5cfa56; op2val:0xbee72839; op3val:0x3ec7889c; valaddr_reg:x16; val_offset:1260; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1260, x17, x15, 872, x18)

inst_1126:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x22ea8b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2bf854 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x5ae169 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3da2ea8b; op2val:0xc02bf854; op3val:0x3e5ae169; valaddr_reg:x16; val_offset:1272; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1272, x17, x15, 880, x18)

inst_1127:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x22ea8b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2bf854 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x5ae169 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3da2ea8b; op2val:0xc02bf854; op3val:0x3e5ae169; valaddr_reg:x16; val_offset:1284; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1284, x17, x15, 888, x18)

inst_1128:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x22ea8b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2bf854 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x5ae169 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3da2ea8b; op2val:0xc02bf854; op3val:0x3e5ae169; valaddr_reg:x16; val_offset:1296; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1296, x17, x15, 896, x18)

inst_1129:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x22ea8b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2bf854 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x5ae169 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3da2ea8b; op2val:0xc02bf854; op3val:0x3e5ae169; valaddr_reg:x16; val_offset:1308; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1308, x17, x15, 904, x18)

inst_1130:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x22ea8b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2bf854 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x5ae169 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3da2ea8b; op2val:0xc02bf854; op3val:0x3e5ae169; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 912, x18)

inst_1131:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x6108ba and fs2 == 1 and fe2 == 0x7a and fm2 == 0x00ec8c and fs3 == 0 and fe3 == 0x77 and fm3 == 0x62a899 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e6108ba; op2val:0xbd00ec8c; op3val:0x3be2a899; valaddr_reg:x16; val_offset:1332; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1332, x17, x15, 920, x18)

inst_1132:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x6108ba and fs2 == 1 and fe2 == 0x7a and fm2 == 0x00ec8c and fs3 == 0 and fe3 == 0x77 and fm3 == 0x62a899 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e6108ba; op2val:0xbd00ec8c; op3val:0x3be2a899; valaddr_reg:x16; val_offset:1344; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1344, x17, x15, 928, x18)

inst_1133:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x6108ba and fs2 == 1 and fe2 == 0x7a and fm2 == 0x00ec8c and fs3 == 0 and fe3 == 0x77 and fm3 == 0x62a899 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e6108ba; op2val:0xbd00ec8c; op3val:0x3be2a899; valaddr_reg:x16; val_offset:1356; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1356, x17, x15, 936, x18)

inst_1134:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x6108ba and fs2 == 1 and fe2 == 0x7a and fm2 == 0x00ec8c and fs3 == 0 and fe3 == 0x77 and fm3 == 0x62a899 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e6108ba; op2val:0xbd00ec8c; op3val:0x3be2a899; valaddr_reg:x16; val_offset:1368; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1368, x17, x15, 944, x18)

inst_1135:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x6108ba and fs2 == 1 and fe2 == 0x7a and fm2 == 0x00ec8c and fs3 == 0 and fe3 == 0x77 and fm3 == 0x62a899 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e6108ba; op2val:0xbd00ec8c; op3val:0x3be2a899; valaddr_reg:x16; val_offset:1380; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1380, x17, x15, 952, x18)

inst_1136:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1cafed and fs2 == 1 and fe2 == 0x7e and fm2 == 0x106dbe and fs3 == 0 and fe3 == 0x7d and fm3 == 0x30cc42 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1cafed; op2val:0xbf106dbe; op3val:0x3eb0cc42; valaddr_reg:x16; val_offset:1392; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1392, x17, x15, 960, x18)

inst_1137:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1cafed and fs2 == 1 and fe2 == 0x7e and fm2 == 0x106dbe and fs3 == 0 and fe3 == 0x7d and fm3 == 0x30cc42 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1cafed; op2val:0xbf106dbe; op3val:0x3eb0cc42; valaddr_reg:x16; val_offset:1404; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1404, x17, x15, 968, x18)

inst_1138:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1cafed and fs2 == 1 and fe2 == 0x7e and fm2 == 0x106dbe and fs3 == 0 and fe3 == 0x7d and fm3 == 0x30cc42 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1cafed; op2val:0xbf106dbe; op3val:0x3eb0cc42; valaddr_reg:x16; val_offset:1416; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1416, x17, x15, 976, x18)

inst_1139:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1cafed and fs2 == 1 and fe2 == 0x7e and fm2 == 0x106dbe and fs3 == 0 and fe3 == 0x7d and fm3 == 0x30cc42 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1cafed; op2val:0xbf106dbe; op3val:0x3eb0cc42; valaddr_reg:x16; val_offset:1428; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1428, x17, x15, 984, x18)

inst_1140:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1cafed and fs2 == 1 and fe2 == 0x7e and fm2 == 0x106dbe and fs3 == 0 and fe3 == 0x7d and fm3 == 0x30cc42 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1cafed; op2val:0xbf106dbe; op3val:0x3eb0cc42; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 992, x18)

inst_1141:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x607ecb and fs2 == 1 and fe2 == 0x7e and fm2 == 0x713414 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x538509 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e607ecb; op2val:0xbf713414; op3val:0x3e538509; valaddr_reg:x16; val_offset:1452; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1452, x17, x15, 1000, x18)

inst_1142:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x607ecb and fs2 == 1 and fe2 == 0x7e and fm2 == 0x713414 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x538509 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e607ecb; op2val:0xbf713414; op3val:0x3e538509; valaddr_reg:x16; val_offset:1464; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1464, x17, x15, 1008, x18)

inst_1143:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x607ecb and fs2 == 1 and fe2 == 0x7e and fm2 == 0x713414 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x538509 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e607ecb; op2val:0xbf713414; op3val:0x3e538509; valaddr_reg:x16; val_offset:1476; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1476, x17, x15, 1016, x18)

inst_1144:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x607ecb and fs2 == 1 and fe2 == 0x7e and fm2 == 0x713414 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x538509 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e607ecb; op2val:0xbf713414; op3val:0x3e538509; valaddr_reg:x16; val_offset:1488; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1488, x17, x15, 1024, x18)

inst_1145:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x607ecb and fs2 == 1 and fe2 == 0x7e and fm2 == 0x713414 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x538509 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e607ecb; op2val:0xbf713414; op3val:0x3e538509; valaddr_reg:x16; val_offset:1500; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1500, x17, x15, 1032, x18)

inst_1146:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2e5c9a and fs2 == 1 and fe2 == 0x80 and fm2 == 0x6d913d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x21cea7 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e2e5c9a; op2val:0xc06d913d; op3val:0x3f21cea7; valaddr_reg:x16; val_offset:1512; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1512, x17, x15, 1040, x18)

inst_1147:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2e5c9a and fs2 == 1 and fe2 == 0x80 and fm2 == 0x6d913d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x21cea7 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e2e5c9a; op2val:0xc06d913d; op3val:0x3f21cea7; valaddr_reg:x16; val_offset:1524; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1524, x17, x15, 1048, x18)

inst_1148:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2e5c9a and fs2 == 1 and fe2 == 0x80 and fm2 == 0x6d913d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x21cea7 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e2e5c9a; op2val:0xc06d913d; op3val:0x3f21cea7; valaddr_reg:x16; val_offset:1536; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1536, x17, x15, 1056, x18)

inst_1149:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2e5c9a and fs2 == 1 and fe2 == 0x80 and fm2 == 0x6d913d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x21cea7 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e2e5c9a; op2val:0xc06d913d; op3val:0x3f21cea7; valaddr_reg:x16; val_offset:1548; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1548, x17, x15, 1064, x18)

inst_1150:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2e5c9a and fs2 == 1 and fe2 == 0x80 and fm2 == 0x6d913d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x21cea7 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e2e5c9a; op2val:0xc06d913d; op3val:0x3f21cea7; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1072, x18)

inst_1151:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x3f3558 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0a43a7 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4e8a93 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e3f3558; op2val:0xc00a43a7; op3val:0x3ece8a93; valaddr_reg:x16; val_offset:1572; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1572, x17, x15, 1080, x18)

inst_1152:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x3f3558 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0a43a7 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4e8a93 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e3f3558; op2val:0xc00a43a7; op3val:0x3ece8a93; valaddr_reg:x16; val_offset:1584; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1584, x17, x15, 1088, x18)

inst_1153:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x3f3558 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0a43a7 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4e8a93 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e3f3558; op2val:0xc00a43a7; op3val:0x3ece8a93; valaddr_reg:x16; val_offset:1596; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1596, x17, x15, 1096, x18)

inst_1154:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x3f3558 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0a43a7 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4e8a93 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e3f3558; op2val:0xc00a43a7; op3val:0x3ece8a93; valaddr_reg:x16; val_offset:1608; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1608, x17, x15, 1104, x18)

inst_1155:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x3f3558 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0a43a7 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4e8a93 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e3f3558; op2val:0xc00a43a7; op3val:0x3ece8a93; valaddr_reg:x16; val_offset:1620; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1620, x17, x15, 1112, x18)

inst_1156:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x01568d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3e0a0a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x40069e and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e81568d; op2val:0xc03e0a0a; op3val:0x3f40069e; valaddr_reg:x16; val_offset:1632; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1632, x17, x15, 1120, x18)

inst_1157:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x01568d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3e0a0a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x40069e and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e81568d; op2val:0xc03e0a0a; op3val:0x3f40069e; valaddr_reg:x16; val_offset:1644; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1644, x17, x15, 1128, x18)

inst_1158:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x01568d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3e0a0a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x40069e and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e81568d; op2val:0xc03e0a0a; op3val:0x3f40069e; valaddr_reg:x16; val_offset:1656; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1656, x17, x15, 1136, x18)

inst_1159:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x01568d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3e0a0a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x40069e and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e81568d; op2val:0xc03e0a0a; op3val:0x3f40069e; valaddr_reg:x16; val_offset:1668; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1668, x17, x15, 1144, x18)

inst_1160:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x01568d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x3e0a0a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x40069e and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e81568d; op2val:0xc03e0a0a; op3val:0x3f40069e; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1152, x18)

inst_1161:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x0d88e7 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x42534c and fs3 == 0 and fe3 == 0x7c and fm3 == 0x56df9a and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d0d88e7; op2val:0xc0c2534c; op3val:0x3e56df9a; valaddr_reg:x16; val_offset:1692; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1692, x17, x15, 1160, x18)

inst_1162:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x0d88e7 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x42534c and fs3 == 0 and fe3 == 0x7c and fm3 == 0x56df9a and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d0d88e7; op2val:0xc0c2534c; op3val:0x3e56df9a; valaddr_reg:x16; val_offset:1704; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1704, x17, x15, 1168, x18)

inst_1163:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x0d88e7 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x42534c and fs3 == 0 and fe3 == 0x7c and fm3 == 0x56df9a and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d0d88e7; op2val:0xc0c2534c; op3val:0x3e56df9a; valaddr_reg:x16; val_offset:1716; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1716, x17, x15, 1176, x18)

inst_1164:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x0d88e7 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x42534c and fs3 == 0 and fe3 == 0x7c and fm3 == 0x56df9a and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d0d88e7; op2val:0xc0c2534c; op3val:0x3e56df9a; valaddr_reg:x16; val_offset:1728; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1728, x17, x15, 1184, x18)

inst_1165:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x0d88e7 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x42534c and fs3 == 0 and fe3 == 0x7c and fm3 == 0x56df9a and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d0d88e7; op2val:0xc0c2534c; op3val:0x3e56df9a; valaddr_reg:x16; val_offset:1740; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1740, x17, x15, 1192, x18)

inst_1166:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x169415 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0afa1b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x237de0 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f169415; op2val:0xbf8afa1b; op3val:0x3f237de0; valaddr_reg:x16; val_offset:1752; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1752, x17, x15, 1200, x18)

inst_1167:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x169415 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0afa1b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x237de0 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f169415; op2val:0xbf8afa1b; op3val:0x3f237de0; valaddr_reg:x16; val_offset:1764; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1764, x17, x15, 1208, x18)

inst_1168:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x169415 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0afa1b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x237de0 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f169415; op2val:0xbf8afa1b; op3val:0x3f237de0; valaddr_reg:x16; val_offset:1776; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1776, x17, x15, 1216, x18)

inst_1169:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x169415 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0afa1b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x237de0 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f169415; op2val:0xbf8afa1b; op3val:0x3f237de0; valaddr_reg:x16; val_offset:1788; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1788, x17, x15, 1224, x18)

inst_1170:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x169415 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0afa1b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x237de0 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f169415; op2val:0xbf8afa1b; op3val:0x3f237de0; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1232, x18)

inst_1171:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3900f5 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x1e230c and fs3 == 0 and fe3 == 0x7b and fm3 == 0x648fd7 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3900f5; op2val:0xbe1e230c; op3val:0x3de48fd7; valaddr_reg:x16; val_offset:1812; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1812, x17, x15, 1240, x18)

inst_1172:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3900f5 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x1e230c and fs3 == 0 and fe3 == 0x7b and fm3 == 0x648fd7 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3900f5; op2val:0xbe1e230c; op3val:0x3de48fd7; valaddr_reg:x16; val_offset:1824; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1824, x17, x15, 1248, x18)

inst_1173:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3900f5 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x1e230c and fs3 == 0 and fe3 == 0x7b and fm3 == 0x648fd7 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3900f5; op2val:0xbe1e230c; op3val:0x3de48fd7; valaddr_reg:x16; val_offset:1836; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1836, x17, x15, 1256, x18)

inst_1174:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3900f5 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x1e230c and fs3 == 0 and fe3 == 0x7b and fm3 == 0x648fd7 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3900f5; op2val:0xbe1e230c; op3val:0x3de48fd7; valaddr_reg:x16; val_offset:1848; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1848, x17, x15, 1264, x18)

inst_1175:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3900f5 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x1e230c and fs3 == 0 and fe3 == 0x7b and fm3 == 0x648fd7 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3900f5; op2val:0xbe1e230c; op3val:0x3de48fd7; valaddr_reg:x16; val_offset:1860; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1860, x17, x15, 1272, x18)

inst_1176:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x48796a and fs2 == 1 and fe2 == 0x80 and fm2 == 0x221144 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7dd4b5 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e48796a; op2val:0xc0221144; op3val:0x3efdd4b5; valaddr_reg:x16; val_offset:1872; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1872, x17, x15, 1280, x18)

inst_1177:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x48796a and fs2 == 1 and fe2 == 0x80 and fm2 == 0x221144 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7dd4b5 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e48796a; op2val:0xc0221144; op3val:0x3efdd4b5; valaddr_reg:x16; val_offset:1884; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1884, x17, x15, 1288, x18)

inst_1178:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x48796a and fs2 == 1 and fe2 == 0x80 and fm2 == 0x221144 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7dd4b5 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e48796a; op2val:0xc0221144; op3val:0x3efdd4b5; valaddr_reg:x16; val_offset:1896; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1896, x17, x15, 1296, x18)

inst_1179:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x48796a and fs2 == 1 and fe2 == 0x80 and fm2 == 0x221144 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7dd4b5 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e48796a; op2val:0xc0221144; op3val:0x3efdd4b5; valaddr_reg:x16; val_offset:1908; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1908, x17, x15, 1304, x18)

inst_1180:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x48796a and fs2 == 1 and fe2 == 0x80 and fm2 == 0x221144 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7dd4b5 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e48796a; op2val:0xc0221144; op3val:0x3efdd4b5; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1312, x18)

inst_1181:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x39ded3 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x79c21c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3556ab and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f39ded3; op2val:0xbf79c21c; op3val:0x3f3556ab; valaddr_reg:x16; val_offset:1932; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1932, x17, x15, 1320, x18)

inst_1182:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x39ded3 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x79c21c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3556ab and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f39ded3; op2val:0xbf79c21c; op3val:0x3f3556ab; valaddr_reg:x16; val_offset:1944; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1944, x17, x15, 1328, x18)

inst_1183:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x39ded3 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x79c21c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3556ab and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f39ded3; op2val:0xbf79c21c; op3val:0x3f3556ab; valaddr_reg:x16; val_offset:1956; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1956, x17, x15, 1336, x18)

inst_1184:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x39ded3 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x79c21c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3556ab and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f39ded3; op2val:0xbf79c21c; op3val:0x3f3556ab; valaddr_reg:x16; val_offset:1968; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1968, x17, x15, 1344, x18)

inst_1185:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x39ded3 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x79c21c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3556ab and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f39ded3; op2val:0xbf79c21c; op3val:0x3f3556ab; valaddr_reg:x16; val_offset:1980; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1980, x17, x15, 1352, x18)

inst_1186:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x620980 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x45edc2 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x2ec33f and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f620980; op2val:0xbe45edc2; op3val:0x3e2ec33f; valaddr_reg:x16; val_offset:1992; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1992, x17, x15, 1360, x18)

inst_1187:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x620980 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x45edc2 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x2ec33f and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f620980; op2val:0xbe45edc2; op3val:0x3e2ec33f; valaddr_reg:x16; val_offset:2004; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 2004, x17, x15, 1368, x18)

inst_1188:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x620980 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x45edc2 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x2ec33f and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f620980; op2val:0xbe45edc2; op3val:0x3e2ec33f; valaddr_reg:x16; val_offset:2016; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 2016, x17, x15, 1376, x18)

inst_1189:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x620980 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x45edc2 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x2ec33f and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f620980; op2val:0xbe45edc2; op3val:0x3e2ec33f; valaddr_reg:x16; val_offset:2028; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 2028, x17, x15, 1384, x18)
addi x16,x16,2040

inst_1190:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x620980 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x45edc2 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x2ec33f and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f620980; op2val:0xbe45edc2; op3val:0x3e2ec33f; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 1392, x18)

inst_1191:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3aa762 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4bbc92 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x148c38 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3aa762; op2val:0xbf4bbc92; op3val:0x3f148c38; valaddr_reg:x16; val_offset:12; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 12, x17, x15, 1400, x18)

inst_1192:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3aa762 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4bbc92 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x148c38 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3aa762; op2val:0xbf4bbc92; op3val:0x3f148c38; valaddr_reg:x16; val_offset:24; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 24, x17, x15, 1408, x18)

inst_1193:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3aa762 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4bbc92 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x148c38 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3aa762; op2val:0xbf4bbc92; op3val:0x3f148c38; valaddr_reg:x16; val_offset:36; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 36, x17, x15, 1416, x18)

inst_1194:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3aa762 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4bbc92 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x148c38 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3aa762; op2val:0xbf4bbc92; op3val:0x3f148c38; valaddr_reg:x16; val_offset:48; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 48, x17, x15, 1424, x18)

inst_1195:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3aa762 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4bbc92 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x148c38 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3aa762; op2val:0xbf4bbc92; op3val:0x3f148c38; valaddr_reg:x16; val_offset:60; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 60, x17, x15, 1432, x18)

inst_1196:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6e6e6f and fs2 == 1 and fe2 == 0x7d and fm2 == 0x12b4be and fs3 == 0 and fe3 == 0x7d and fm3 == 0x08a352 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6e6e6f; op2val:0xbe92b4be; op3val:0x3e88a352; valaddr_reg:x16; val_offset:72; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 72, x17, x15, 1440, x18)

inst_1197:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6e6e6f and fs2 == 1 and fe2 == 0x7d and fm2 == 0x12b4be and fs3 == 0 and fe3 == 0x7d and fm3 == 0x08a352 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6e6e6f; op2val:0xbe92b4be; op3val:0x3e88a352; valaddr_reg:x16; val_offset:84; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 84, x17, x15, 1448, x18)

inst_1198:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6e6e6f and fs2 == 1 and fe2 == 0x7d and fm2 == 0x12b4be and fs3 == 0 and fe3 == 0x7d and fm3 == 0x08a352 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6e6e6f; op2val:0xbe92b4be; op3val:0x3e88a352; valaddr_reg:x16; val_offset:96; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 96, x17, x15, 1456, x18)

inst_1199:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6e6e6f and fs2 == 1 and fe2 == 0x7d and fm2 == 0x12b4be and fs3 == 0 and fe3 == 0x7d and fm3 == 0x08a352 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6e6e6f; op2val:0xbe92b4be; op3val:0x3e88a352; valaddr_reg:x16; val_offset:108; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 108, x17, x15, 1464, x18)

inst_1200:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6e6e6f and fs2 == 1 and fe2 == 0x7d and fm2 == 0x12b4be and fs3 == 0 and fe3 == 0x7d and fm3 == 0x08a352 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6e6e6f; op2val:0xbe92b4be; op3val:0x3e88a352; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 1472, x18)

inst_1201:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x25b0c0 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x109906 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3b2ced and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e25b0c0; op2val:0xc0909906; op3val:0x3f3b2ced; valaddr_reg:x16; val_offset:132; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 132, x17, x15, 1480, x18)

inst_1202:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x25b0c0 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x109906 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3b2ced and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e25b0c0; op2val:0xc0909906; op3val:0x3f3b2ced; valaddr_reg:x16; val_offset:144; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 144, x17, x15, 1488, x18)

inst_1203:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x25b0c0 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x109906 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3b2ced and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e25b0c0; op2val:0xc0909906; op3val:0x3f3b2ced; valaddr_reg:x16; val_offset:156; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 156, x17, x15, 1496, x18)

inst_1204:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x25b0c0 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x109906 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3b2ced and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e25b0c0; op2val:0xc0909906; op3val:0x3f3b2ced; valaddr_reg:x16; val_offset:168; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 168, x17, x15, 1504, x18)

inst_1205:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x25b0c0 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x109906 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3b2ced and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e25b0c0; op2val:0xc0909906; op3val:0x3f3b2ced; valaddr_reg:x16; val_offset:180; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 180, x17, x15, 1512, x18)

inst_1206:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x029324 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6c6e15 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x712f98 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f029324; op2val:0xbf6c6e15; op3val:0x3ef12f98; valaddr_reg:x16; val_offset:192; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 192, x17, x15, 1520, x18)

inst_1207:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x029324 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6c6e15 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x712f98 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f029324; op2val:0xbf6c6e15; op3val:0x3ef12f98; valaddr_reg:x16; val_offset:204; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 204, x17, x15, 1528, x18)

inst_1208:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x029324 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6c6e15 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x712f98 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f029324; op2val:0xbf6c6e15; op3val:0x3ef12f98; valaddr_reg:x16; val_offset:216; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 216, x17, x15, 1536, x18)

inst_1209:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x029324 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6c6e15 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x712f98 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f029324; op2val:0xbf6c6e15; op3val:0x3ef12f98; valaddr_reg:x16; val_offset:228; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 228, x17, x15, 1544, x18)

inst_1210:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x029324 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6c6e15 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x712f98 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f029324; op2val:0xbf6c6e15; op3val:0x3ef12f98; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 1552, x18)

inst_1211:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2347f7 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x65c881 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x128f43 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2347f7; op2val:0xbf65c881; op3val:0x3f128f43; valaddr_reg:x16; val_offset:252; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 252, x17, x15, 1560, x18)

inst_1212:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2347f7 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x65c881 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x128f43 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2347f7; op2val:0xbf65c881; op3val:0x3f128f43; valaddr_reg:x16; val_offset:264; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 264, x17, x15, 1568, x18)

inst_1213:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2347f7 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x65c881 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x128f43 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2347f7; op2val:0xbf65c881; op3val:0x3f128f43; valaddr_reg:x16; val_offset:276; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 276, x17, x15, 1576, x18)

inst_1214:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2347f7 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x65c881 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x128f43 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2347f7; op2val:0xbf65c881; op3val:0x3f128f43; valaddr_reg:x16; val_offset:288; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 288, x17, x15, 1584, x18)

inst_1215:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2347f7 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x65c881 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x128f43 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2347f7; op2val:0xbf65c881; op3val:0x3f128f43; valaddr_reg:x16; val_offset:300; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 300, x17, x15, 1592, x18)

inst_1216:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x37602e and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0d30ac and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4a45ae and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e37602e; op2val:0xc00d30ac; op3val:0x3eca45ae; valaddr_reg:x16; val_offset:312; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 312, x17, x15, 1600, x18)

inst_1217:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x37602e and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0d30ac and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4a45ae and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e37602e; op2val:0xc00d30ac; op3val:0x3eca45ae; valaddr_reg:x16; val_offset:324; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 324, x17, x15, 1608, x18)

inst_1218:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x37602e and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0d30ac and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4a45ae and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e37602e; op2val:0xc00d30ac; op3val:0x3eca45ae; valaddr_reg:x16; val_offset:336; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 336, x17, x15, 1616, x18)

inst_1219:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x37602e and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0d30ac and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4a45ae and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e37602e; op2val:0xc00d30ac; op3val:0x3eca45ae; valaddr_reg:x16; val_offset:348; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 348, x17, x15, 1624, x18)

inst_1220:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x37602e and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0d30ac and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4a45ae and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e37602e; op2val:0xc00d30ac; op3val:0x3eca45ae; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 1632, x18)

inst_1221:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x02f8c0 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x081673 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0b3f45 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d82f8c0; op2val:0xc0881673; op3val:0x3e8b3f45; valaddr_reg:x16; val_offset:372; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 372, x17, x15, 1640, x18)

inst_1222:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x02f8c0 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x081673 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0b3f45 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d82f8c0; op2val:0xc0881673; op3val:0x3e8b3f45; valaddr_reg:x16; val_offset:384; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 384, x17, x15, 1648, x18)

inst_1223:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x02f8c0 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x081673 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0b3f45 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d82f8c0; op2val:0xc0881673; op3val:0x3e8b3f45; valaddr_reg:x16; val_offset:396; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 396, x17, x15, 1656, x18)

inst_1224:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x02f8c0 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x081673 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0b3f45 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d82f8c0; op2val:0xc0881673; op3val:0x3e8b3f45; valaddr_reg:x16; val_offset:408; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 408, x17, x15, 1664, x18)

inst_1225:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x02f8c0 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x081673 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0b3f45 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d82f8c0; op2val:0xc0881673; op3val:0x3e8b3f45; valaddr_reg:x16; val_offset:420; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 420, x17, x15, 1672, x18)

inst_1226:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x212396 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x00617d and fs3 == 0 and fe3 == 0x7d and fm3 == 0x219e51 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e212396; op2val:0xc000617d; op3val:0x3ea19e51; valaddr_reg:x16; val_offset:432; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 432, x17, x15, 1680, x18)

inst_1227:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x212396 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x00617d and fs3 == 0 and fe3 == 0x7d and fm3 == 0x219e51 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e212396; op2val:0xc000617d; op3val:0x3ea19e51; valaddr_reg:x16; val_offset:444; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 444, x17, x15, 1688, x18)

inst_1228:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x212396 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x00617d and fs3 == 0 and fe3 == 0x7d and fm3 == 0x219e51 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e212396; op2val:0xc000617d; op3val:0x3ea19e51; valaddr_reg:x16; val_offset:456; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 456, x17, x15, 1696, x18)

inst_1229:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x212396 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x00617d and fs3 == 0 and fe3 == 0x7d and fm3 == 0x219e51 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e212396; op2val:0xc000617d; op3val:0x3ea19e51; valaddr_reg:x16; val_offset:468; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 468, x17, x15, 1704, x18)

inst_1230:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x212396 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x00617d and fs3 == 0 and fe3 == 0x7d and fm3 == 0x219e51 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e212396; op2val:0xc000617d; op3val:0x3ea19e51; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1712, x18)

inst_1231:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x35a219 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0b9f95 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x46207b and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f35a219; op2val:0xbf0b9f95; op3val:0x3ec6207b; valaddr_reg:x16; val_offset:492; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 492, x17, x15, 1720, x18)

inst_1232:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x35a219 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0b9f95 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x46207b and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f35a219; op2val:0xbf0b9f95; op3val:0x3ec6207b; valaddr_reg:x16; val_offset:504; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 504, x17, x15, 1728, x18)

inst_1233:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x35a219 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0b9f95 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x46207b and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f35a219; op2val:0xbf0b9f95; op3val:0x3ec6207b; valaddr_reg:x16; val_offset:516; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 516, x17, x15, 1736, x18)

inst_1234:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x35a219 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0b9f95 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x46207b and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f35a219; op2val:0xbf0b9f95; op3val:0x3ec6207b; valaddr_reg:x16; val_offset:528; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 528, x17, x15, 1744, x18)

inst_1235:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x35a219 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0b9f95 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x46207b and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f35a219; op2val:0xbf0b9f95; op3val:0x3ec6207b; valaddr_reg:x16; val_offset:540; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 540, x17, x15, 1752, x18)

inst_1236:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x1c9d81 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0ff30d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x302159 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e1c9d81; op2val:0xc08ff30d; op3val:0x3f302159; valaddr_reg:x16; val_offset:552; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 552, x17, x15, 1760, x18)

inst_1237:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x1c9d81 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0ff30d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x302159 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e1c9d81; op2val:0xc08ff30d; op3val:0x3f302159; valaddr_reg:x16; val_offset:564; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 564, x17, x15, 1768, x18)

inst_1238:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x1c9d81 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0ff30d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x302159 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e1c9d81; op2val:0xc08ff30d; op3val:0x3f302159; valaddr_reg:x16; val_offset:576; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 576, x17, x15, 1776, x18)

inst_1239:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x1c9d81 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0ff30d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x302159 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e1c9d81; op2val:0xc08ff30d; op3val:0x3f302159; valaddr_reg:x16; val_offset:588; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 588, x17, x15, 1784, x18)

inst_1240:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x1c9d81 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0ff30d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x302159 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e1c9d81; op2val:0xc08ff30d; op3val:0x3f302159; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1792, x18)

inst_1241:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x214980 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x06a161 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x29a44a and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f214980; op2val:0xbd86a161; op3val:0x3d29a44a; valaddr_reg:x16; val_offset:612; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 612, x17, x15, 1800, x18)

inst_1242:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x214980 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x06a161 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x29a44a and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f214980; op2val:0xbd86a161; op3val:0x3d29a44a; valaddr_reg:x16; val_offset:624; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 624, x17, x15, 1808, x18)

inst_1243:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x214980 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x06a161 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x29a44a and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f214980; op2val:0xbd86a161; op3val:0x3d29a44a; valaddr_reg:x16; val_offset:636; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 636, x17, x15, 1816, x18)

inst_1244:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x214980 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x06a161 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x29a44a and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f214980; op2val:0xbd86a161; op3val:0x3d29a44a; valaddr_reg:x16; val_offset:648; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 648, x17, x15, 1824, x18)

inst_1245:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x214980 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x06a161 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x29a44a and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f214980; op2val:0xbd86a161; op3val:0x3d29a44a; valaddr_reg:x16; val_offset:660; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 660, x17, x15, 1832, x18)

inst_1246:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x1dfc75 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x26cfd1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4de3e9 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e1dfc75; op2val:0xc0a6cfd1; op3val:0x3f4de3e9; valaddr_reg:x16; val_offset:672; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 672, x17, x15, 1840, x18)

inst_1247:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x1dfc75 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x26cfd1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4de3e9 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e1dfc75; op2val:0xc0a6cfd1; op3val:0x3f4de3e9; valaddr_reg:x16; val_offset:684; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 684, x17, x15, 1848, x18)

inst_1248:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x1dfc75 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x26cfd1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4de3e9 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e1dfc75; op2val:0xc0a6cfd1; op3val:0x3f4de3e9; valaddr_reg:x16; val_offset:696; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 696, x17, x15, 1856, x18)

inst_1249:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x1dfc75 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x26cfd1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4de3e9 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e1dfc75; op2val:0xc0a6cfd1; op3val:0x3f4de3e9; valaddr_reg:x16; val_offset:708; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 708, x17, x15, 1864, x18)

inst_1250:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x1dfc75 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x26cfd1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4de3e9 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e1dfc75; op2val:0xc0a6cfd1; op3val:0x3f4de3e9; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1872, x18)

inst_1251:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5ded93 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4ff1c1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3444ae and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e5ded93; op2val:0xc04ff1c1; op3val:0x3f3444ae; valaddr_reg:x16; val_offset:732; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 732, x17, x15, 1880, x18)

inst_1252:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5ded93 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4ff1c1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3444ae and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e5ded93; op2val:0xc04ff1c1; op3val:0x3f3444ae; valaddr_reg:x16; val_offset:744; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 744, x17, x15, 1888, x18)

inst_1253:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5ded93 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4ff1c1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3444ae and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e5ded93; op2val:0xc04ff1c1; op3val:0x3f3444ae; valaddr_reg:x16; val_offset:756; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 756, x17, x15, 1896, x18)

inst_1254:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5ded93 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4ff1c1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3444ae and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e5ded93; op2val:0xc04ff1c1; op3val:0x3f3444ae; valaddr_reg:x16; val_offset:768; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 768, x17, x15, 1904, x18)

inst_1255:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5ded93 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4ff1c1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3444ae and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e5ded93; op2val:0xc04ff1c1; op3val:0x3f3444ae; valaddr_reg:x16; val_offset:780; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 780, x17, x15, 1912, x18)

inst_1256:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3ff14c and fs2 == 1 and fe2 == 0x7b and fm2 == 0x6a9f75 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x2fea1f and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ebff14c; op2val:0xbdea9f75; op3val:0x3d2fea1f; valaddr_reg:x16; val_offset:792; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 792, x17, x15, 1920, x18)

inst_1257:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3ff14c and fs2 == 1 and fe2 == 0x7b and fm2 == 0x6a9f75 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x2fea1f and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ebff14c; op2val:0xbdea9f75; op3val:0x3d2fea1f; valaddr_reg:x16; val_offset:804; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 804, x17, x15, 1928, x18)

inst_1258:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3ff14c and fs2 == 1 and fe2 == 0x7b and fm2 == 0x6a9f75 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x2fea1f and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ebff14c; op2val:0xbdea9f75; op3val:0x3d2fea1f; valaddr_reg:x16; val_offset:816; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 816, x17, x15, 1936, x18)

inst_1259:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3ff14c and fs2 == 1 and fe2 == 0x7b and fm2 == 0x6a9f75 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x2fea1f and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ebff14c; op2val:0xbdea9f75; op3val:0x3d2fea1f; valaddr_reg:x16; val_offset:828; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 828, x17, x15, 1944, x18)

inst_1260:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3ff14c and fs2 == 1 and fe2 == 0x7b and fm2 == 0x6a9f75 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x2fea1f and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ebff14c; op2val:0xbdea9f75; op3val:0x3d2fea1f; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1952, x18)

inst_1261:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x191b1b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4f0e46 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x77aae9 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e191b1b; op2val:0xc04f0e46; op3val:0x3ef7aae9; valaddr_reg:x16; val_offset:852; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 852, x17, x15, 1960, x18)

inst_1262:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x191b1b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4f0e46 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x77aae9 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e191b1b; op2val:0xc04f0e46; op3val:0x3ef7aae9; valaddr_reg:x16; val_offset:864; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 864, x17, x15, 1968, x18)

inst_1263:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x191b1b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4f0e46 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x77aae9 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e191b1b; op2val:0xc04f0e46; op3val:0x3ef7aae9; valaddr_reg:x16; val_offset:876; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 876, x17, x15, 1976, x18)

inst_1264:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x191b1b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4f0e46 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x77aae9 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e191b1b; op2val:0xc04f0e46; op3val:0x3ef7aae9; valaddr_reg:x16; val_offset:888; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 888, x17, x15, 1984, x18)

inst_1265:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x191b1b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4f0e46 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x77aae9 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e191b1b; op2val:0xc04f0e46; op3val:0x3ef7aae9; valaddr_reg:x16; val_offset:900; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 900, x17, x15, 1992, x18)

inst_1266:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x217896 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x3e3244 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x6fee68 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f217896; op2val:0xbdbe3244; op3val:0x3d6fee68; valaddr_reg:x16; val_offset:912; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 912, x17, x15, 2000, x18)

inst_1267:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x217896 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x3e3244 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x6fee68 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f217896; op2val:0xbdbe3244; op3val:0x3d6fee68; valaddr_reg:x16; val_offset:924; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 924, x17, x15, 2008, x18)

inst_1268:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x217896 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x3e3244 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x6fee68 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f217896; op2val:0xbdbe3244; op3val:0x3d6fee68; valaddr_reg:x16; val_offset:936; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 936, x17, x15, 2016, x18)

inst_1269:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x217896 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x3e3244 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x6fee68 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f217896; op2val:0xbdbe3244; op3val:0x3d6fee68; valaddr_reg:x16; val_offset:948; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 948, x17, x15, 2024, x18)
RVTEST_SIGBASE(x15,signature_x15_6)

inst_1270:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x217896 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x3e3244 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x6fee68 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f217896; op2val:0xbdbe3244; op3val:0x3d6fee68; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 0, x18)

inst_1271:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x67c33c and fs2 == 1 and fe2 == 0x7a and fm2 == 0x51e608 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x3e06a5 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee7c33c; op2val:0xbd51e608; op3val:0x3cbe06a5; valaddr_reg:x16; val_offset:972; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 972, x17, x15, 8, x18)

inst_1272:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x67c33c and fs2 == 1 and fe2 == 0x7a and fm2 == 0x51e608 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x3e06a5 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee7c33c; op2val:0xbd51e608; op3val:0x3cbe06a5; valaddr_reg:x16; val_offset:984; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 984, x17, x15, 16, x18)

inst_1273:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x67c33c and fs2 == 1 and fe2 == 0x7a and fm2 == 0x51e608 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x3e06a5 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee7c33c; op2val:0xbd51e608; op3val:0x3cbe06a5; valaddr_reg:x16; val_offset:996; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 996, x17, x15, 24, x18)

inst_1274:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x67c33c and fs2 == 1 and fe2 == 0x7a and fm2 == 0x51e608 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x3e06a5 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee7c33c; op2val:0xbd51e608; op3val:0x3cbe06a5; valaddr_reg:x16; val_offset:1008; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1008, x17, x15, 32, x18)

inst_1275:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x67c33c and fs2 == 1 and fe2 == 0x7a and fm2 == 0x51e608 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x3e06a5 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee7c33c; op2val:0xbd51e608; op3val:0x3cbe06a5; valaddr_reg:x16; val_offset:1020; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1020, x17, x15, 40, x18)

inst_1276:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x46bdaf and fs2 == 1 and fe2 == 0x7e and fm2 == 0x680286 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x341ddc and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f46bdaf; op2val:0xbf680286; op3val:0x3f341ddc; valaddr_reg:x16; val_offset:1032; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1032, x17, x15, 48, x18)

inst_1277:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x46bdaf and fs2 == 1 and fe2 == 0x7e and fm2 == 0x680286 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x341ddc and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f46bdaf; op2val:0xbf680286; op3val:0x3f341ddc; valaddr_reg:x16; val_offset:1044; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1044, x17, x15, 56, x18)

inst_1278:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x46bdaf and fs2 == 1 and fe2 == 0x7e and fm2 == 0x680286 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x341ddc and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f46bdaf; op2val:0xbf680286; op3val:0x3f341ddc; valaddr_reg:x16; val_offset:1056; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1056, x17, x15, 64, x18)

inst_1279:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x46bdaf and fs2 == 1 and fe2 == 0x7e and fm2 == 0x680286 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x341ddc and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f46bdaf; op2val:0xbf680286; op3val:0x3f341ddc; valaddr_reg:x16; val_offset:1068; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1068, x17, x15, 72, x18)

inst_1280:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x46bdaf and fs2 == 1 and fe2 == 0x7e and fm2 == 0x680286 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x341ddc and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f46bdaf; op2val:0xbf680286; op3val:0x3f341ddc; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 80, x18)

inst_1281:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x1450f1 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x0128de and fs3 == 0 and fe3 == 0x79 and fm3 == 0x15a8ee and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d9450f1; op2val:0xbe8128de; op3val:0x3c95a8ee; valaddr_reg:x16; val_offset:1092; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1092, x17, x15, 88, x18)

inst_1282:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x1450f1 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x0128de and fs3 == 0 and fe3 == 0x79 and fm3 == 0x15a8ee and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d9450f1; op2val:0xbe8128de; op3val:0x3c95a8ee; valaddr_reg:x16; val_offset:1104; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1104, x17, x15, 96, x18)

inst_1283:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x1450f1 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x0128de and fs3 == 0 and fe3 == 0x79 and fm3 == 0x15a8ee and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d9450f1; op2val:0xbe8128de; op3val:0x3c95a8ee; valaddr_reg:x16; val_offset:1116; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1116, x17, x15, 104, x18)

inst_1284:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x1450f1 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x0128de and fs3 == 0 and fe3 == 0x79 and fm3 == 0x15a8ee and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d9450f1; op2val:0xbe8128de; op3val:0x3c95a8ee; valaddr_reg:x16; val_offset:1128; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1128, x17, x15, 112, x18)

inst_1285:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x1450f1 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x0128de and fs3 == 0 and fe3 == 0x79 and fm3 == 0x15a8ee and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d9450f1; op2val:0xbe8128de; op3val:0x3c95a8ee; valaddr_reg:x16; val_offset:1140; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1140, x17, x15, 120, x18)

inst_1286:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x3aac32 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x343fa7 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x036f7e and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dbaac32; op2val:0xc0343fa7; op3val:0x3e836f7e; valaddr_reg:x16; val_offset:1152; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1152, x17, x15, 128, x18)

inst_1287:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x3aac32 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x343fa7 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x036f7e and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dbaac32; op2val:0xc0343fa7; op3val:0x3e836f7e; valaddr_reg:x16; val_offset:1164; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1164, x17, x15, 136, x18)

inst_1288:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x3aac32 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x343fa7 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x036f7e and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dbaac32; op2val:0xc0343fa7; op3val:0x3e836f7e; valaddr_reg:x16; val_offset:1176; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1176, x17, x15, 144, x18)

inst_1289:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x3aac32 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x343fa7 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x036f7e and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dbaac32; op2val:0xc0343fa7; op3val:0x3e836f7e; valaddr_reg:x16; val_offset:1188; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1188, x17, x15, 152, x18)

inst_1290:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x3aac32 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x343fa7 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x036f7e and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dbaac32; op2val:0xc0343fa7; op3val:0x3e836f7e; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 160, x18)

inst_1291:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7e49e0 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x4763fa and fs3 == 0 and fe3 == 0x7d and fm3 == 0x460ebc and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7e49e0; op2val:0xbec763fa; op3val:0x3ec60ebc; valaddr_reg:x16; val_offset:1212; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1212, x17, x15, 168, x18)

inst_1292:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7e49e0 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x4763fa and fs3 == 0 and fe3 == 0x7d and fm3 == 0x460ebc and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7e49e0; op2val:0xbec763fa; op3val:0x3ec60ebc; valaddr_reg:x16; val_offset:1224; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1224, x17, x15, 176, x18)

inst_1293:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7e49e0 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x4763fa and fs3 == 0 and fe3 == 0x7d and fm3 == 0x460ebc and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7e49e0; op2val:0xbec763fa; op3val:0x3ec60ebc; valaddr_reg:x16; val_offset:1236; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1236, x17, x15, 184, x18)

inst_1294:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7e49e0 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x4763fa and fs3 == 0 and fe3 == 0x7d and fm3 == 0x460ebc and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7e49e0; op2val:0xbec763fa; op3val:0x3ec60ebc; valaddr_reg:x16; val_offset:1248; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1248, x17, x15, 192, x18)

inst_1295:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7e49e0 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x4763fa and fs3 == 0 and fe3 == 0x7d and fm3 == 0x460ebc and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7e49e0; op2val:0xbec763fa; op3val:0x3ec60ebc; valaddr_reg:x16; val_offset:1260; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1260, x17, x15, 200, x18)

inst_1296:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0318d9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x305496 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3498cc and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8318d9; op2val:0xbfb05496; op3val:0x3eb498cc; valaddr_reg:x16; val_offset:1272; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1272, x17, x15, 208, x18)

inst_1297:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0318d9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x305496 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3498cc and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8318d9; op2val:0xbfb05496; op3val:0x3eb498cc; valaddr_reg:x16; val_offset:1284; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1284, x17, x15, 216, x18)

inst_1298:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0318d9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x305496 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3498cc and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8318d9; op2val:0xbfb05496; op3val:0x3eb498cc; valaddr_reg:x16; val_offset:1296; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1296, x17, x15, 224, x18)

inst_1299:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0318d9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x305496 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3498cc and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8318d9; op2val:0xbfb05496; op3val:0x3eb498cc; valaddr_reg:x16; val_offset:1308; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1308, x17, x15, 232, x18)

inst_1300:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0318d9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x305496 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3498cc and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8318d9; op2val:0xbfb05496; op3val:0x3eb498cc; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 240, x18)

inst_1301:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4543c9 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1d8f5e and fs3 == 0 and fe3 == 0x7d and fm3 == 0x72d218 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4543c9; op2val:0xbf1d8f5e; op3val:0x3ef2d218; valaddr_reg:x16; val_offset:1332; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1332, x17, x15, 248, x18)

inst_1302:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4543c9 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1d8f5e and fs3 == 0 and fe3 == 0x7d and fm3 == 0x72d218 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4543c9; op2val:0xbf1d8f5e; op3val:0x3ef2d218; valaddr_reg:x16; val_offset:1344; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1344, x17, x15, 256, x18)

inst_1303:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4543c9 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1d8f5e and fs3 == 0 and fe3 == 0x7d and fm3 == 0x72d218 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4543c9; op2val:0xbf1d8f5e; op3val:0x3ef2d218; valaddr_reg:x16; val_offset:1356; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1356, x17, x15, 264, x18)

inst_1304:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4543c9 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1d8f5e and fs3 == 0 and fe3 == 0x7d and fm3 == 0x72d218 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4543c9; op2val:0xbf1d8f5e; op3val:0x3ef2d218; valaddr_reg:x16; val_offset:1368; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1368, x17, x15, 272, x18)

inst_1305:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4543c9 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1d8f5e and fs3 == 0 and fe3 == 0x7d and fm3 == 0x72d218 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4543c9; op2val:0xbf1d8f5e; op3val:0x3ef2d218; valaddr_reg:x16; val_offset:1380; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1380, x17, x15, 280, x18)

inst_1306:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x16f3db and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2d8356 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4ca079 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e96f3db; op2val:0xc02d8356; op3val:0x3f4ca079; valaddr_reg:x16; val_offset:1392; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1392, x17, x15, 288, x18)

inst_1307:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x16f3db and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2d8356 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4ca079 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e96f3db; op2val:0xc02d8356; op3val:0x3f4ca079; valaddr_reg:x16; val_offset:1404; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1404, x17, x15, 296, x18)

inst_1308:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x16f3db and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2d8356 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4ca079 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e96f3db; op2val:0xc02d8356; op3val:0x3f4ca079; valaddr_reg:x16; val_offset:1416; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1416, x17, x15, 304, x18)

inst_1309:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x16f3db and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2d8356 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4ca079 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e96f3db; op2val:0xc02d8356; op3val:0x3f4ca079; valaddr_reg:x16; val_offset:1428; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1428, x17, x15, 312, x18)

inst_1310:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x16f3db and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2d8356 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4ca079 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e96f3db; op2val:0xc02d8356; op3val:0x3f4ca079; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 320, x18)

inst_1311:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x7a3bd1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0245f2 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7ead7e and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e7a3bd1; op2val:0xc00245f2; op3val:0x3efead7e; valaddr_reg:x16; val_offset:1452; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1452, x17, x15, 328, x18)

inst_1312:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x7a3bd1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0245f2 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7ead7e and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e7a3bd1; op2val:0xc00245f2; op3val:0x3efead7e; valaddr_reg:x16; val_offset:1464; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1464, x17, x15, 336, x18)

inst_1313:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x7a3bd1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0245f2 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7ead7e and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e7a3bd1; op2val:0xc00245f2; op3val:0x3efead7e; valaddr_reg:x16; val_offset:1476; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1476, x17, x15, 344, x18)

inst_1314:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x7a3bd1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0245f2 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7ead7e and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e7a3bd1; op2val:0xc00245f2; op3val:0x3efead7e; valaddr_reg:x16; val_offset:1488; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1488, x17, x15, 352, x18)

inst_1315:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x7a3bd1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0245f2 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7ead7e and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e7a3bd1; op2val:0xc00245f2; op3val:0x3efead7e; valaddr_reg:x16; val_offset:1500; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1500, x17, x15, 360, x18)

inst_1316:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x681b27 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x1188aa and fs3 == 0 and fe3 == 0x7a and fm3 == 0x03f34a and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f681b27; op2val:0xbd1188aa; op3val:0x3d03f34a; valaddr_reg:x16; val_offset:1512; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1512, x17, x15, 368, x18)

inst_1317:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x681b27 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x1188aa and fs3 == 0 and fe3 == 0x7a and fm3 == 0x03f34a and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f681b27; op2val:0xbd1188aa; op3val:0x3d03f34a; valaddr_reg:x16; val_offset:1524; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1524, x17, x15, 376, x18)

inst_1318:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x681b27 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x1188aa and fs3 == 0 and fe3 == 0x7a and fm3 == 0x03f34a and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f681b27; op2val:0xbd1188aa; op3val:0x3d03f34a; valaddr_reg:x16; val_offset:1536; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1536, x17, x15, 384, x18)

inst_1319:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x681b27 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x1188aa and fs3 == 0 and fe3 == 0x7a and fm3 == 0x03f34a and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f681b27; op2val:0xbd1188aa; op3val:0x3d03f34a; valaddr_reg:x16; val_offset:1548; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1548, x17, x15, 392, x18)

inst_1320:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x681b27 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x1188aa and fs3 == 0 and fe3 == 0x7a and fm3 == 0x03f34a and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f681b27; op2val:0xbd1188aa; op3val:0x3d03f34a; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 400, x18)

inst_1321:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x22ca77 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x647ebd and fs3 == 0 and fe3 == 0x7e and fm3 == 0x114cea and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f22ca77; op2val:0xbf647ebd; op3val:0x3f114cea; valaddr_reg:x16; val_offset:1572; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1572, x17, x15, 408, x18)

inst_1322:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x22ca77 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x647ebd and fs3 == 0 and fe3 == 0x7e and fm3 == 0x114cea and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f22ca77; op2val:0xbf647ebd; op3val:0x3f114cea; valaddr_reg:x16; val_offset:1584; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1584, x17, x15, 416, x18)

inst_1323:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x22ca77 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x647ebd and fs3 == 0 and fe3 == 0x7e and fm3 == 0x114cea and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f22ca77; op2val:0xbf647ebd; op3val:0x3f114cea; valaddr_reg:x16; val_offset:1596; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1596, x17, x15, 424, x18)

inst_1324:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x22ca77 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x647ebd and fs3 == 0 and fe3 == 0x7e and fm3 == 0x114cea and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f22ca77; op2val:0xbf647ebd; op3val:0x3f114cea; valaddr_reg:x16; val_offset:1608; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1608, x17, x15, 432, x18)

inst_1325:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x22ca77 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x647ebd and fs3 == 0 and fe3 == 0x7e and fm3 == 0x114cea and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f22ca77; op2val:0xbf647ebd; op3val:0x3f114cea; valaddr_reg:x16; val_offset:1620; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1620, x17, x15, 440, x18)

inst_1326:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x46e711 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x210492 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7a35be and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec6e711; op2val:0xc0210492; op3val:0x3f7a35be; valaddr_reg:x16; val_offset:1632; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1632, x17, x15, 448, x18)

inst_1327:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x46e711 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x210492 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7a35be and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec6e711; op2val:0xc0210492; op3val:0x3f7a35be; valaddr_reg:x16; val_offset:1644; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1644, x17, x15, 456, x18)

inst_1328:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x46e711 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x210492 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7a35be and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec6e711; op2val:0xc0210492; op3val:0x3f7a35be; valaddr_reg:x16; val_offset:1656; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1656, x17, x15, 464, x18)

inst_1329:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x46e711 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x210492 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7a35be and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec6e711; op2val:0xc0210492; op3val:0x3f7a35be; valaddr_reg:x16; val_offset:1668; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1668, x17, x15, 472, x18)

inst_1330:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x46e711 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x210492 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7a35be and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec6e711; op2val:0xc0210492; op3val:0x3f7a35be; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 480, x18)

inst_1331:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0cba51 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x07d539 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1556ef and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8cba51; op2val:0xbf87d539; op3val:0x3e9556ef; valaddr_reg:x16; val_offset:1692; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1692, x17, x15, 488, x18)

inst_1332:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0cba51 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x07d539 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1556ef and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8cba51; op2val:0xbf87d539; op3val:0x3e9556ef; valaddr_reg:x16; val_offset:1704; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1704, x17, x15, 496, x18)

inst_1333:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0cba51 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x07d539 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1556ef and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8cba51; op2val:0xbf87d539; op3val:0x3e9556ef; valaddr_reg:x16; val_offset:1716; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1716, x17, x15, 504, x18)

inst_1334:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0cba51 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x07d539 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1556ef and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8cba51; op2val:0xbf87d539; op3val:0x3e9556ef; valaddr_reg:x16; val_offset:1728; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1728, x17, x15, 512, x18)

inst_1335:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0cba51 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x07d539 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1556ef and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8cba51; op2val:0xbf87d539; op3val:0x3e9556ef; valaddr_reg:x16; val_offset:1740; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1740, x17, x15, 520, x18)

inst_1336:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0dc46f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4e224a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x644e1d and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0dc46f; op2val:0xbfce224a; op3val:0x3f644e1d; valaddr_reg:x16; val_offset:1752; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1752, x17, x15, 528, x18)

inst_1337:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0dc46f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4e224a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x644e1d and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0dc46f; op2val:0xbfce224a; op3val:0x3f644e1d; valaddr_reg:x16; val_offset:1764; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1764, x17, x15, 536, x18)

inst_1338:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0dc46f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4e224a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x644e1d and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0dc46f; op2val:0xbfce224a; op3val:0x3f644e1d; valaddr_reg:x16; val_offset:1776; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1776, x17, x15, 544, x18)

inst_1339:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0dc46f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4e224a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x644e1d and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0dc46f; op2val:0xbfce224a; op3val:0x3f644e1d; valaddr_reg:x16; val_offset:1788; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1788, x17, x15, 552, x18)

inst_1340:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0dc46f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4e224a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x644e1d and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0dc46f; op2val:0xbfce224a; op3val:0x3f644e1d; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 560, x18)

inst_1341:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x464458 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x04a136 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4d7030 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f464458; op2val:0xbf84a136; op3val:0x3f4d7030; valaddr_reg:x16; val_offset:1812; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1812, x17, x15, 568, x18)

inst_1342:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x464458 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x04a136 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4d7030 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f464458; op2val:0xbf84a136; op3val:0x3f4d7030; valaddr_reg:x16; val_offset:1824; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1824, x17, x15, 576, x18)

inst_1343:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x464458 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x04a136 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4d7030 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f464458; op2val:0xbf84a136; op3val:0x3f4d7030; valaddr_reg:x16; val_offset:1836; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1836, x17, x15, 584, x18)

inst_1344:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x464458 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x04a136 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4d7030 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f464458; op2val:0xbf84a136; op3val:0x3f4d7030; valaddr_reg:x16; val_offset:1848; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1848, x17, x15, 592, x18)

inst_1345:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x464458 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x04a136 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4d7030 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f464458; op2val:0xbf84a136; op3val:0x3f4d7030; valaddr_reg:x16; val_offset:1860; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1860, x17, x15, 600, x18)

inst_1346:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1b3302 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x06f4b1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x23a216 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1b3302; op2val:0xbf86f4b1; op3val:0x3f23a216; valaddr_reg:x16; val_offset:1872; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1872, x17, x15, 608, x18)

inst_1347:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1b3302 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x06f4b1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x23a216 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1b3302; op2val:0xbf86f4b1; op3val:0x3f23a216; valaddr_reg:x16; val_offset:1884; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1884, x17, x15, 616, x18)

inst_1348:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1b3302 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x06f4b1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x23a216 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1b3302; op2val:0xbf86f4b1; op3val:0x3f23a216; valaddr_reg:x16; val_offset:1896; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1896, x17, x15, 624, x18)

inst_1349:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1b3302 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x06f4b1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x23a216 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1b3302; op2val:0xbf86f4b1; op3val:0x3f23a216; valaddr_reg:x16; val_offset:1908; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1908, x17, x15, 632, x18)

inst_1350:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1b3302 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x06f4b1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x23a216 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1b3302; op2val:0xbf86f4b1; op3val:0x3f23a216; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 640, x18)

inst_1351:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x11ab5f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6ddc4b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x075901 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e91ab5f; op2val:0xbfeddc4b; op3val:0x3f075901; valaddr_reg:x16; val_offset:1932; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1932, x17, x15, 648, x18)

inst_1352:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x11ab5f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6ddc4b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x075901 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e91ab5f; op2val:0xbfeddc4b; op3val:0x3f075901; valaddr_reg:x16; val_offset:1944; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1944, x17, x15, 656, x18)

inst_1353:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x11ab5f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6ddc4b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x075901 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e91ab5f; op2val:0xbfeddc4b; op3val:0x3f075901; valaddr_reg:x16; val_offset:1956; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1956, x17, x15, 664, x18)

inst_1354:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x11ab5f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6ddc4b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x075901 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e91ab5f; op2val:0xbfeddc4b; op3val:0x3f075901; valaddr_reg:x16; val_offset:1968; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1968, x17, x15, 672, x18)

inst_1355:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x11ab5f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6ddc4b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x075901 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e91ab5f; op2val:0xbfeddc4b; op3val:0x3f075901; valaddr_reg:x16; val_offset:1980; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1980, x17, x15, 680, x18)

inst_1356:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0f7e00 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x7ab7d5 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0c8816 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0f7e00; op2val:0xbefab7d5; op3val:0x3e8c8816; valaddr_reg:x16; val_offset:1992; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1992, x17, x15, 688, x18)

inst_1357:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0f7e00 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x7ab7d5 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0c8816 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0f7e00; op2val:0xbefab7d5; op3val:0x3e8c8816; valaddr_reg:x16; val_offset:2004; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 2004, x17, x15, 696, x18)

inst_1358:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0f7e00 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x7ab7d5 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0c8816 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0f7e00; op2val:0xbefab7d5; op3val:0x3e8c8816; valaddr_reg:x16; val_offset:2016; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 2016, x17, x15, 704, x18)

inst_1359:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0f7e00 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x7ab7d5 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0c8816 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0f7e00; op2val:0xbefab7d5; op3val:0x3e8c8816; valaddr_reg:x16; val_offset:2028; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 2028, x17, x15, 712, x18)
addi x16,x16,2040

inst_1360:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0f7e00 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x7ab7d5 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0c8816 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0f7e00; op2val:0xbefab7d5; op3val:0x3e8c8816; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 720, x18)

inst_1361:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0c1c8f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4c4c20 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5fa0d9 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0c1c8f; op2val:0xbfcc4c20; op3val:0x3f5fa0d9; valaddr_reg:x16; val_offset:12; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 12, x17, x15, 728, x18)

inst_1362:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0c1c8f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4c4c20 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5fa0d9 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0c1c8f; op2val:0xbfcc4c20; op3val:0x3f5fa0d9; valaddr_reg:x16; val_offset:24; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 24, x17, x15, 736, x18)

inst_1363:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0c1c8f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4c4c20 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5fa0d9 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0c1c8f; op2val:0xbfcc4c20; op3val:0x3f5fa0d9; valaddr_reg:x16; val_offset:36; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 36, x17, x15, 744, x18)

inst_1364:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0c1c8f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4c4c20 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5fa0d9 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0c1c8f; op2val:0xbfcc4c20; op3val:0x3f5fa0d9; valaddr_reg:x16; val_offset:48; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 48, x17, x15, 752, x18)

inst_1365:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0c1c8f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4c4c20 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5fa0d9 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0c1c8f; op2val:0xbfcc4c20; op3val:0x3f5fa0d9; valaddr_reg:x16; val_offset:60; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 60, x17, x15, 760, x18)

inst_1366:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x60c32a and fs2 == 1 and fe2 == 0x7d and fm2 == 0x747f36 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x56a9b4 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f60c32a; op2val:0xbef47f36; op3val:0x3ed6a9b4; valaddr_reg:x16; val_offset:72; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 72, x17, x15, 768, x18)

inst_1367:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x60c32a and fs2 == 1 and fe2 == 0x7d and fm2 == 0x747f36 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x56a9b4 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f60c32a; op2val:0xbef47f36; op3val:0x3ed6a9b4; valaddr_reg:x16; val_offset:84; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 84, x17, x15, 776, x18)

inst_1368:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x60c32a and fs2 == 1 and fe2 == 0x7d and fm2 == 0x747f36 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x56a9b4 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f60c32a; op2val:0xbef47f36; op3val:0x3ed6a9b4; valaddr_reg:x16; val_offset:96; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 96, x17, x15, 784, x18)

inst_1369:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x60c32a and fs2 == 1 and fe2 == 0x7d and fm2 == 0x747f36 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x56a9b4 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f60c32a; op2val:0xbef47f36; op3val:0x3ed6a9b4; valaddr_reg:x16; val_offset:108; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 108, x17, x15, 792, x18)

inst_1370:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x60c32a and fs2 == 1 and fe2 == 0x7d and fm2 == 0x747f36 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x56a9b4 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f60c32a; op2val:0xbef47f36; op3val:0x3ed6a9b4; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 800, x18)

inst_1371:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x06dd2b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4d6d55 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x587169 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f06dd2b; op2val:0xbfcd6d55; op3val:0x3f587169; valaddr_reg:x16; val_offset:132; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 132, x17, x15, 808, x18)

inst_1372:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x06dd2b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4d6d55 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x587169 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f06dd2b; op2val:0xbfcd6d55; op3val:0x3f587169; valaddr_reg:x16; val_offset:144; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 144, x17, x15, 816, x18)

inst_1373:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x06dd2b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4d6d55 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x587169 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f06dd2b; op2val:0xbfcd6d55; op3val:0x3f587169; valaddr_reg:x16; val_offset:156; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 156, x17, x15, 824, x18)

inst_1374:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x06dd2b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4d6d55 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x587169 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f06dd2b; op2val:0xbfcd6d55; op3val:0x3f587169; valaddr_reg:x16; val_offset:168; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 168, x17, x15, 832, x18)

inst_1375:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x06dd2b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4d6d55 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x587169 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f06dd2b; op2val:0xbfcd6d55; op3val:0x3f587169; valaddr_reg:x16; val_offset:180; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 180, x17, x15, 840, x18)

inst_1376:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4a08c7 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x23188f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x00b6f9 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eca08c7; op2val:0xbfa3188f; op3val:0x3f00b6f9; valaddr_reg:x16; val_offset:192; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 192, x17, x15, 848, x18)

inst_1377:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4a08c7 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x23188f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x00b6f9 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eca08c7; op2val:0xbfa3188f; op3val:0x3f00b6f9; valaddr_reg:x16; val_offset:204; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 204, x17, x15, 856, x18)

inst_1378:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4a08c7 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x23188f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x00b6f9 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eca08c7; op2val:0xbfa3188f; op3val:0x3f00b6f9; valaddr_reg:x16; val_offset:216; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 216, x17, x15, 864, x18)

inst_1379:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4a08c7 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x23188f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x00b6f9 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eca08c7; op2val:0xbfa3188f; op3val:0x3f00b6f9; valaddr_reg:x16; val_offset:228; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 228, x17, x15, 872, x18)

inst_1380:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4a08c7 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x23188f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x00b6f9 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eca08c7; op2val:0xbfa3188f; op3val:0x3f00b6f9; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 880, x18)

inst_1381:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0ef84a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x521731 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6aa942 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0ef84a; op2val:0xbfd21731; op3val:0x3f6aa942; valaddr_reg:x16; val_offset:252; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 252, x17, x15, 888, x18)

inst_1382:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0ef84a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x521731 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6aa942 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0ef84a; op2val:0xbfd21731; op3val:0x3f6aa942; valaddr_reg:x16; val_offset:264; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 264, x17, x15, 896, x18)

inst_1383:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0ef84a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x521731 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6aa942 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0ef84a; op2val:0xbfd21731; op3val:0x3f6aa942; valaddr_reg:x16; val_offset:276; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 276, x17, x15, 904, x18)

inst_1384:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0ef84a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x521731 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6aa942 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0ef84a; op2val:0xbfd21731; op3val:0x3f6aa942; valaddr_reg:x16; val_offset:288; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 288, x17, x15, 912, x18)

inst_1385:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0ef84a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x521731 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6aa942 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0ef84a; op2val:0xbfd21731; op3val:0x3f6aa942; valaddr_reg:x16; val_offset:300; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 300, x17, x15, 920, x18)

inst_1386:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x527bd3 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x161b26 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x76d5c2 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f527bd3; op2val:0xbd161b26; op3val:0x3cf6d5c2; valaddr_reg:x16; val_offset:312; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 312, x17, x15, 928, x18)

inst_1387:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x527bd3 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x161b26 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x76d5c2 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f527bd3; op2val:0xbd161b26; op3val:0x3cf6d5c2; valaddr_reg:x16; val_offset:324; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 324, x17, x15, 936, x18)

inst_1388:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x527bd3 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x161b26 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x76d5c2 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f527bd3; op2val:0xbd161b26; op3val:0x3cf6d5c2; valaddr_reg:x16; val_offset:336; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 336, x17, x15, 944, x18)

inst_1389:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x527bd3 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x161b26 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x76d5c2 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f527bd3; op2val:0xbd161b26; op3val:0x3cf6d5c2; valaddr_reg:x16; val_offset:348; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 348, x17, x15, 952, x18)

inst_1390:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x527bd3 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x161b26 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x76d5c2 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f527bd3; op2val:0xbd161b26; op3val:0x3cf6d5c2; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 960, x18)

inst_1391:
// fs1 == 0 and fe1 == 0x78 and fm1 == 0x1c4e31 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x301850 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x570934 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3c1c4e31; op2val:0xc2301850; op3val:0x3ed70934; valaddr_reg:x16; val_offset:372; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 372, x17, x15, 968, x18)

inst_1392:
// fs1 == 0 and fe1 == 0x78 and fm1 == 0x1c4e31 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x301850 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x570934 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3c1c4e31; op2val:0xc2301850; op3val:0x3ed70934; valaddr_reg:x16; val_offset:384; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 384, x17, x15, 976, x18)

inst_1393:
// fs1 == 0 and fe1 == 0x78 and fm1 == 0x1c4e31 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x301850 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x570934 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3c1c4e31; op2val:0xc2301850; op3val:0x3ed70934; valaddr_reg:x16; val_offset:396; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 396, x17, x15, 984, x18)

inst_1394:
// fs1 == 0 and fe1 == 0x78 and fm1 == 0x1c4e31 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x301850 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x570934 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3c1c4e31; op2val:0xc2301850; op3val:0x3ed70934; valaddr_reg:x16; val_offset:408; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 408, x17, x15, 992, x18)

inst_1395:
// fs1 == 0 and fe1 == 0x78 and fm1 == 0x1c4e31 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x301850 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x570934 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3c1c4e31; op2val:0xc2301850; op3val:0x3ed70934; valaddr_reg:x16; val_offset:420; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 420, x17, x15, 1000, x18)

inst_1396:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x0eb16e and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5d068a and fs3 == 0 and fe3 == 0x7c and fm3 == 0x7665a3 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d0eb16e; op2val:0xc0dd068a; op3val:0x3e7665a3; valaddr_reg:x16; val_offset:432; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 432, x17, x15, 1008, x18)

inst_1397:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x0eb16e and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5d068a and fs3 == 0 and fe3 == 0x7c and fm3 == 0x7665a3 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d0eb16e; op2val:0xc0dd068a; op3val:0x3e7665a3; valaddr_reg:x16; val_offset:444; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 444, x17, x15, 1016, x18)

inst_1398:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x0eb16e and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5d068a and fs3 == 0 and fe3 == 0x7c and fm3 == 0x7665a3 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d0eb16e; op2val:0xc0dd068a; op3val:0x3e7665a3; valaddr_reg:x16; val_offset:456; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 456, x17, x15, 1024, x18)

inst_1399:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x0eb16e and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5d068a and fs3 == 0 and fe3 == 0x7c and fm3 == 0x7665a3 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d0eb16e; op2val:0xc0dd068a; op3val:0x3e7665a3; valaddr_reg:x16; val_offset:468; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 468, x17, x15, 1032, x18)

inst_1400:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x0eb16e and fs2 == 1 and fe2 == 0x81 and fm2 == 0x5d068a and fs3 == 0 and fe3 == 0x7c and fm3 == 0x7665a3 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d0eb16e; op2val:0xc0dd068a; op3val:0x3e7665a3; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1040, x18)

inst_1401:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x7fa20e and fs2 == 1 and fe2 == 0x81 and fm2 == 0x77e050 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x77855a and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dffa20e; op2val:0xc0f7e050; op3val:0x3f77855a; valaddr_reg:x16; val_offset:492; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 492, x17, x15, 1048, x18)

inst_1402:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x7fa20e and fs2 == 1 and fe2 == 0x81 and fm2 == 0x77e050 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x77855a and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dffa20e; op2val:0xc0f7e050; op3val:0x3f77855a; valaddr_reg:x16; val_offset:504; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 504, x17, x15, 1056, x18)

inst_1403:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x7fa20e and fs2 == 1 and fe2 == 0x81 and fm2 == 0x77e050 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x77855a and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dffa20e; op2val:0xc0f7e050; op3val:0x3f77855a; valaddr_reg:x16; val_offset:516; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 516, x17, x15, 1064, x18)

inst_1404:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x7fa20e and fs2 == 1 and fe2 == 0x81 and fm2 == 0x77e050 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x77855a and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dffa20e; op2val:0xc0f7e050; op3val:0x3f77855a; valaddr_reg:x16; val_offset:528; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 528, x17, x15, 1072, x18)

inst_1405:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x7fa20e and fs2 == 1 and fe2 == 0x81 and fm2 == 0x77e050 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x77855a and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dffa20e; op2val:0xc0f7e050; op3val:0x3f77855a; valaddr_reg:x16; val_offset:540; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 540, x17, x15, 1080, x18)

inst_1406:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2843e8 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x19d428 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4a3811 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e2843e8; op2val:0xc099d428; op3val:0x3f4a3811; valaddr_reg:x16; val_offset:552; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 552, x17, x15, 1088, x18)

inst_1407:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2843e8 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x19d428 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4a3811 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e2843e8; op2val:0xc099d428; op3val:0x3f4a3811; valaddr_reg:x16; val_offset:564; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 564, x17, x15, 1096, x18)

inst_1408:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2843e8 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x19d428 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4a3811 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e2843e8; op2val:0xc099d428; op3val:0x3f4a3811; valaddr_reg:x16; val_offset:576; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 576, x17, x15, 1104, x18)

inst_1409:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2843e8 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x19d428 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4a3811 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e2843e8; op2val:0xc099d428; op3val:0x3f4a3811; valaddr_reg:x16; val_offset:588; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 588, x17, x15, 1112, x18)

inst_1410:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2843e8 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x19d428 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4a3811 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e2843e8; op2val:0xc099d428; op3val:0x3f4a3811; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1120, x18)

inst_1411:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x0f83e7 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x63a721 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7f3f4f and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d0f83e7; op2val:0xc1e3a721; op3val:0x3f7f3f4f; valaddr_reg:x16; val_offset:612; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 612, x17, x15, 1128, x18)

inst_1412:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x0f83e7 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x63a721 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7f3f4f and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d0f83e7; op2val:0xc1e3a721; op3val:0x3f7f3f4f; valaddr_reg:x16; val_offset:624; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 624, x17, x15, 1136, x18)

inst_1413:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x0f83e7 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x63a721 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7f3f4f and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d0f83e7; op2val:0xc1e3a721; op3val:0x3f7f3f4f; valaddr_reg:x16; val_offset:636; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 636, x17, x15, 1144, x18)

inst_1414:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x0f83e7 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x63a721 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7f3f4f and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d0f83e7; op2val:0xc1e3a721; op3val:0x3f7f3f4f; valaddr_reg:x16; val_offset:648; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 648, x17, x15, 1152, x18)

inst_1415:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x0f83e7 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x63a721 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7f3f4f and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d0f83e7; op2val:0xc1e3a721; op3val:0x3f7f3f4f; valaddr_reg:x16; val_offset:660; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 660, x17, x15, 1160, x18)

inst_1416:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0332f2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x21fb62 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2607bf and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8332f2; op2val:0xc021fb62; op3val:0x3f2607bf; valaddr_reg:x16; val_offset:672; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 672, x17, x15, 1168, x18)

inst_1417:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0332f2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x21fb62 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2607bf and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8332f2; op2val:0xc021fb62; op3val:0x3f2607bf; valaddr_reg:x16; val_offset:684; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 684, x17, x15, 1176, x18)

inst_1418:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0332f2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x21fb62 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2607bf and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8332f2; op2val:0xc021fb62; op3val:0x3f2607bf; valaddr_reg:x16; val_offset:696; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 696, x17, x15, 1184, x18)

inst_1419:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0332f2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x21fb62 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2607bf and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8332f2; op2val:0xc021fb62; op3val:0x3f2607bf; valaddr_reg:x16; val_offset:708; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 708, x17, x15, 1192, x18)

inst_1420:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0332f2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x21fb62 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2607bf and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8332f2; op2val:0xc021fb62; op3val:0x3f2607bf; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1200, x18)

inst_1421:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1d1948 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x31d966 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5a47c9 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1d1948; op2val:0xbf31d966; op3val:0x3eda47c9; valaddr_reg:x16; val_offset:732; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 732, x17, x15, 1208, x18)

inst_1422:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1d1948 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x31d966 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5a47c9 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1d1948; op2val:0xbf31d966; op3val:0x3eda47c9; valaddr_reg:x16; val_offset:744; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 744, x17, x15, 1216, x18)

inst_1423:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1d1948 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x31d966 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5a47c9 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1d1948; op2val:0xbf31d966; op3val:0x3eda47c9; valaddr_reg:x16; val_offset:756; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 756, x17, x15, 1224, x18)

inst_1424:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1d1948 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x31d966 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5a47c9 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1d1948; op2val:0xbf31d966; op3val:0x3eda47c9; valaddr_reg:x16; val_offset:768; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 768, x17, x15, 1232, x18)

inst_1425:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1d1948 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x31d966 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5a47c9 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1d1948; op2val:0xbf31d966; op3val:0x3eda47c9; valaddr_reg:x16; val_offset:780; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 780, x17, x15, 1240, x18)

inst_1426:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7ba9ad and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5fda3f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5c0f5a and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7ba9ad; op2val:0xbf5fda3f; op3val:0x3f5c0f5a; valaddr_reg:x16; val_offset:792; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 792, x17, x15, 1248, x18)

inst_1427:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7ba9ad and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5fda3f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5c0f5a and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7ba9ad; op2val:0xbf5fda3f; op3val:0x3f5c0f5a; valaddr_reg:x16; val_offset:804; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 804, x17, x15, 1256, x18)

inst_1428:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7ba9ad and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5fda3f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5c0f5a and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7ba9ad; op2val:0xbf5fda3f; op3val:0x3f5c0f5a; valaddr_reg:x16; val_offset:816; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 816, x17, x15, 1264, x18)

inst_1429:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7ba9ad and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5fda3f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5c0f5a and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7ba9ad; op2val:0xbf5fda3f; op3val:0x3f5c0f5a; valaddr_reg:x16; val_offset:828; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 828, x17, x15, 1272, x18)

inst_1430:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7ba9ad and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5fda3f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5c0f5a and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7ba9ad; op2val:0xbf5fda3f; op3val:0x3f5c0f5a; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1280, x18)

inst_1431:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x2340f5 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x3c1405 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6fe0f1 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ca340f5; op2val:0xc23c1405; op3val:0x3f6fe0f1; valaddr_reg:x16; val_offset:852; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 852, x17, x15, 1288, x18)

inst_1432:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x2340f5 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x3c1405 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6fe0f1 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ca340f5; op2val:0xc23c1405; op3val:0x3f6fe0f1; valaddr_reg:x16; val_offset:864; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 864, x17, x15, 1296, x18)

inst_1433:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x2340f5 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x3c1405 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6fe0f1 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ca340f5; op2val:0xc23c1405; op3val:0x3f6fe0f1; valaddr_reg:x16; val_offset:876; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 876, x17, x15, 1304, x18)

inst_1434:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x2340f5 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x3c1405 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6fe0f1 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ca340f5; op2val:0xc23c1405; op3val:0x3f6fe0f1; valaddr_reg:x16; val_offset:888; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 888, x17, x15, 1312, x18)

inst_1435:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x2340f5 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x3c1405 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6fe0f1 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ca340f5; op2val:0xc23c1405; op3val:0x3f6fe0f1; valaddr_reg:x16; val_offset:900; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 900, x17, x15, 1320, x18)

inst_1436:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7d7ab1 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x16e627 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1569c7 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3efd7ab1; op2val:0xbf16e627; op3val:0x3e9569c7; valaddr_reg:x16; val_offset:912; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 912, x17, x15, 1328, x18)

inst_1437:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7d7ab1 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x16e627 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1569c7 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3efd7ab1; op2val:0xbf16e627; op3val:0x3e9569c7; valaddr_reg:x16; val_offset:924; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 924, x17, x15, 1336, x18)

inst_1438:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7d7ab1 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x16e627 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1569c7 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3efd7ab1; op2val:0xbf16e627; op3val:0x3e9569c7; valaddr_reg:x16; val_offset:936; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 936, x17, x15, 1344, x18)

inst_1439:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7d7ab1 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x16e627 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1569c7 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3efd7ab1; op2val:0xbf16e627; op3val:0x3e9569c7; valaddr_reg:x16; val_offset:948; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 948, x17, x15, 1352, x18)

inst_1440:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7d7ab1 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x16e627 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1569c7 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3efd7ab1; op2val:0xbf16e627; op3val:0x3e9569c7; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 1360, x18)

inst_1441:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x23cc4c and fs2 == 1 and fe2 == 0x7d and fm2 == 0x19e12a and fs3 == 0 and fe3 == 0x7c and fm3 == 0x44ea56 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f23cc4c; op2val:0xbe99e12a; op3val:0x3e44ea56; valaddr_reg:x16; val_offset:972; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 972, x17, x15, 1368, x18)

inst_1442:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x23cc4c and fs2 == 1 and fe2 == 0x7d and fm2 == 0x19e12a and fs3 == 0 and fe3 == 0x7c and fm3 == 0x44ea56 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f23cc4c; op2val:0xbe99e12a; op3val:0x3e44ea56; valaddr_reg:x16; val_offset:984; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 984, x17, x15, 1376, x18)

inst_1443:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x23cc4c and fs2 == 1 and fe2 == 0x7d and fm2 == 0x19e12a and fs3 == 0 and fe3 == 0x7c and fm3 == 0x44ea56 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f23cc4c; op2val:0xbe99e12a; op3val:0x3e44ea56; valaddr_reg:x16; val_offset:996; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 996, x17, x15, 1384, x18)

inst_1444:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x23cc4c and fs2 == 1 and fe2 == 0x7d and fm2 == 0x19e12a and fs3 == 0 and fe3 == 0x7c and fm3 == 0x44ea56 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f23cc4c; op2val:0xbe99e12a; op3val:0x3e44ea56; valaddr_reg:x16; val_offset:1008; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1008, x17, x15, 1392, x18)

inst_1445:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x23cc4c and fs2 == 1 and fe2 == 0x7d and fm2 == 0x19e12a and fs3 == 0 and fe3 == 0x7c and fm3 == 0x44ea56 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f23cc4c; op2val:0xbe99e12a; op3val:0x3e44ea56; valaddr_reg:x16; val_offset:1020; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1020, x17, x15, 1400, x18)

inst_1446:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x64bae1 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x094272 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7546c2 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f64bae1; op2val:0xbf094272; op3val:0x3ef546c2; valaddr_reg:x16; val_offset:1032; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1032, x17, x15, 1408, x18)

inst_1447:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x64bae1 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x094272 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7546c2 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f64bae1; op2val:0xbf094272; op3val:0x3ef546c2; valaddr_reg:x16; val_offset:1044; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1044, x17, x15, 1416, x18)

inst_1448:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x64bae1 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x094272 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7546c2 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f64bae1; op2val:0xbf094272; op3val:0x3ef546c2; valaddr_reg:x16; val_offset:1056; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1056, x17, x15, 1424, x18)

inst_1449:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x64bae1 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x094272 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7546c2 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f64bae1; op2val:0xbf094272; op3val:0x3ef546c2; valaddr_reg:x16; val_offset:1068; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1068, x17, x15, 1432, x18)

inst_1450:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x64bae1 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x094272 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7546c2 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f64bae1; op2val:0xbf094272; op3val:0x3ef546c2; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 1440, x18)

inst_1451:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x67a6c2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0164e6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6a2cab and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f67a6c2; op2val:0xbf8164e6; op3val:0x3f6a2cab; valaddr_reg:x16; val_offset:1092; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1092, x17, x15, 1448, x18)

inst_1452:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x67a6c2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0164e6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6a2cab and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f67a6c2; op2val:0xbf8164e6; op3val:0x3f6a2cab; valaddr_reg:x16; val_offset:1104; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1104, x17, x15, 1456, x18)

inst_1453:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x67a6c2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0164e6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6a2cab and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f67a6c2; op2val:0xbf8164e6; op3val:0x3f6a2cab; valaddr_reg:x16; val_offset:1116; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1116, x17, x15, 1464, x18)

inst_1454:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x67a6c2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0164e6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6a2cab and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f67a6c2; op2val:0xbf8164e6; op3val:0x3f6a2cab; valaddr_reg:x16; val_offset:1128; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1128, x17, x15, 1472, x18)

inst_1455:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x67a6c2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0164e6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6a2cab and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f67a6c2; op2val:0xbf8164e6; op3val:0x3f6a2cab; valaddr_reg:x16; val_offset:1140; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1140, x17, x15, 1480, x18)

inst_1456:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x52aefc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5d3eee and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3614da and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed2aefc; op2val:0xbfdd3eee; op3val:0x3f3614da; valaddr_reg:x16; val_offset:1152; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1152, x17, x15, 1488, x18)

inst_1457:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x52aefc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5d3eee and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3614da and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed2aefc; op2val:0xbfdd3eee; op3val:0x3f3614da; valaddr_reg:x16; val_offset:1164; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1164, x17, x15, 1496, x18)

inst_1458:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x52aefc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5d3eee and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3614da and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed2aefc; op2val:0xbfdd3eee; op3val:0x3f3614da; valaddr_reg:x16; val_offset:1176; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1176, x17, x15, 1504, x18)

inst_1459:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x52aefc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5d3eee and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3614da and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed2aefc; op2val:0xbfdd3eee; op3val:0x3f3614da; valaddr_reg:x16; val_offset:1188; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1188, x17, x15, 1512, x18)

inst_1460:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x52aefc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5d3eee and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3614da and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed2aefc; op2val:0xbfdd3eee; op3val:0x3f3614da; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 1520, x18)

inst_1461:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0dcf72 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x067dbc and fs3 == 0 and fe3 == 0x7e and fm3 == 0x150078 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0dcf72; op2val:0xbf867dbc; op3val:0x3f150078; valaddr_reg:x16; val_offset:1212; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1212, x17, x15, 1528, x18)

inst_1462:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0dcf72 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x067dbc and fs3 == 0 and fe3 == 0x7e and fm3 == 0x150078 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0dcf72; op2val:0xbf867dbc; op3val:0x3f150078; valaddr_reg:x16; val_offset:1224; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1224, x17, x15, 1536, x18)

inst_1463:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0dcf72 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x067dbc and fs3 == 0 and fe3 == 0x7e and fm3 == 0x150078 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0dcf72; op2val:0xbf867dbc; op3val:0x3f150078; valaddr_reg:x16; val_offset:1236; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1236, x17, x15, 1544, x18)

inst_1464:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0dcf72 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x067dbc and fs3 == 0 and fe3 == 0x7e and fm3 == 0x150078 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0dcf72; op2val:0xbf867dbc; op3val:0x3f150078; valaddr_reg:x16; val_offset:1248; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1248, x17, x15, 1552, x18)

inst_1465:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0dcf72 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x067dbc and fs3 == 0 and fe3 == 0x7e and fm3 == 0x150078 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0dcf72; op2val:0xbf867dbc; op3val:0x3f150078; valaddr_reg:x16; val_offset:1260; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1260, x17, x15, 1560, x18)

inst_1466:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x44ae0b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x448fa7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x17039f and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f44ae0b; op2val:0xbf448fa7; op3val:0x3f17039f; valaddr_reg:x16; val_offset:1272; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1272, x17, x15, 1568, x18)

inst_1467:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x44ae0b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x448fa7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x17039f and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f44ae0b; op2val:0xbf448fa7; op3val:0x3f17039f; valaddr_reg:x16; val_offset:1284; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1284, x17, x15, 1576, x18)

inst_1468:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x44ae0b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x448fa7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x17039f and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f44ae0b; op2val:0xbf448fa7; op3val:0x3f17039f; valaddr_reg:x16; val_offset:1296; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1296, x17, x15, 1584, x18)

inst_1469:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x44ae0b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x448fa7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x17039f and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f44ae0b; op2val:0xbf448fa7; op3val:0x3f17039f; valaddr_reg:x16; val_offset:1308; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1308, x17, x15, 1592, x18)

inst_1470:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x44ae0b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x448fa7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x17039f and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f44ae0b; op2val:0xbf448fa7; op3val:0x3f17039f; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 1600, x18)

inst_1471:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x547096 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2e1c55 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x107c0a and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f547096; op2val:0xbf2e1c55; op3val:0x3f107c0a; valaddr_reg:x16; val_offset:1332; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1332, x17, x15, 1608, x18)

inst_1472:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x547096 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2e1c55 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x107c0a and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f547096; op2val:0xbf2e1c55; op3val:0x3f107c0a; valaddr_reg:x16; val_offset:1344; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1344, x17, x15, 1616, x18)

inst_1473:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x547096 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2e1c55 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x107c0a and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f547096; op2val:0xbf2e1c55; op3val:0x3f107c0a; valaddr_reg:x16; val_offset:1356; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1356, x17, x15, 1624, x18)

inst_1474:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x547096 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2e1c55 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x107c0a and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f547096; op2val:0xbf2e1c55; op3val:0x3f107c0a; valaddr_reg:x16; val_offset:1368; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1368, x17, x15, 1632, x18)

inst_1475:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x547096 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2e1c55 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x107c0a and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f547096; op2val:0xbf2e1c55; op3val:0x3f107c0a; valaddr_reg:x16; val_offset:1380; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1380, x17, x15, 1640, x18)

inst_1476:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x715bd2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x32b765 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x287ec0 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e715bd2; op2val:0xc032b765; op3val:0x3f287ec0; valaddr_reg:x16; val_offset:1392; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1392, x17, x15, 1648, x18)

inst_1477:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x715bd2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x32b765 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x287ec0 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e715bd2; op2val:0xc032b765; op3val:0x3f287ec0; valaddr_reg:x16; val_offset:1404; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1404, x17, x15, 1656, x18)

inst_1478:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x715bd2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x32b765 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x287ec0 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e715bd2; op2val:0xc032b765; op3val:0x3f287ec0; valaddr_reg:x16; val_offset:1416; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1416, x17, x15, 1664, x18)

inst_1479:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x715bd2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x32b765 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x287ec0 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e715bd2; op2val:0xc032b765; op3val:0x3f287ec0; valaddr_reg:x16; val_offset:1428; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1428, x17, x15, 1672, x18)

inst_1480:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x715bd2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x32b765 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x287ec0 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e715bd2; op2val:0xc032b765; op3val:0x3f287ec0; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 1680, x18)

inst_1481:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x333044 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3473a5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7c9dc5 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f333044; op2val:0xbfb473a5; op3val:0x3f7c9dc5; valaddr_reg:x16; val_offset:1452; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1452, x17, x15, 1688, x18)

inst_1482:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x333044 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3473a5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7c9dc5 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f333044; op2val:0xbfb473a5; op3val:0x3f7c9dc5; valaddr_reg:x16; val_offset:1464; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1464, x17, x15, 1696, x18)

inst_1483:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x333044 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3473a5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7c9dc5 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f333044; op2val:0xbfb473a5; op3val:0x3f7c9dc5; valaddr_reg:x16; val_offset:1476; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1476, x17, x15, 1704, x18)

inst_1484:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x333044 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3473a5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7c9dc5 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f333044; op2val:0xbfb473a5; op3val:0x3f7c9dc5; valaddr_reg:x16; val_offset:1488; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1488, x17, x15, 1712, x18)

inst_1485:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x333044 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3473a5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7c9dc5 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f333044; op2val:0xbfb473a5; op3val:0x3f7c9dc5; valaddr_reg:x16; val_offset:1500; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1500, x17, x15, 1720, x18)

inst_1486:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4c564b and fs2 == 1 and fe2 == 0x7d and fm2 == 0x15cb74 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x6f213e and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4c564b; op2val:0xbe95cb74; op3val:0x3e6f213e; valaddr_reg:x16; val_offset:1512; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1512, x17, x15, 1728, x18)

inst_1487:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4c564b and fs2 == 1 and fe2 == 0x7d and fm2 == 0x15cb74 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x6f213e and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4c564b; op2val:0xbe95cb74; op3val:0x3e6f213e; valaddr_reg:x16; val_offset:1524; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1524, x17, x15, 1736, x18)

inst_1488:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4c564b and fs2 == 1 and fe2 == 0x7d and fm2 == 0x15cb74 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x6f213e and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4c564b; op2val:0xbe95cb74; op3val:0x3e6f213e; valaddr_reg:x16; val_offset:1536; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1536, x17, x15, 1744, x18)

inst_1489:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4c564b and fs2 == 1 and fe2 == 0x7d and fm2 == 0x15cb74 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x6f213e and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4c564b; op2val:0xbe95cb74; op3val:0x3e6f213e; valaddr_reg:x16; val_offset:1548; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1548, x17, x15, 1752, x18)

inst_1490:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4c564b and fs2 == 1 and fe2 == 0x7d and fm2 == 0x15cb74 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x6f213e and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4c564b; op2val:0xbe95cb74; op3val:0x3e6f213e; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1760, x18)

inst_1491:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2c74cb and fs2 == 1 and fe2 == 0x7b and fm2 == 0x18f201 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x4e10bf and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eac74cb; op2val:0xbd98f201; op3val:0x3cce10bf; valaddr_reg:x16; val_offset:1572; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1572, x17, x15, 1768, x18)

inst_1492:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2c74cb and fs2 == 1 and fe2 == 0x7b and fm2 == 0x18f201 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x4e10bf and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eac74cb; op2val:0xbd98f201; op3val:0x3cce10bf; valaddr_reg:x16; val_offset:1584; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1584, x17, x15, 1776, x18)

inst_1493:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2c74cb and fs2 == 1 and fe2 == 0x7b and fm2 == 0x18f201 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x4e10bf and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eac74cb; op2val:0xbd98f201; op3val:0x3cce10bf; valaddr_reg:x16; val_offset:1596; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1596, x17, x15, 1784, x18)

inst_1494:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2c74cb and fs2 == 1 and fe2 == 0x7b and fm2 == 0x18f201 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x4e10bf and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eac74cb; op2val:0xbd98f201; op3val:0x3cce10bf; valaddr_reg:x16; val_offset:1608; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1608, x17, x15, 1792, x18)

inst_1495:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2c74cb and fs2 == 1 and fe2 == 0x7b and fm2 == 0x18f201 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x4e10bf and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eac74cb; op2val:0xbd98f201; op3val:0x3cce10bf; valaddr_reg:x16; val_offset:1620; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1620, x17, x15, 1800, x18)

inst_1496:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1a8e72 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x30c7cd and fs3 == 0 and fe3 == 0x7e and fm3 == 0x55751e and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1a8e72; op2val:0xbfb0c7cd; op3val:0x3f55751e; valaddr_reg:x16; val_offset:1632; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1632, x17, x15, 1808, x18)

inst_1497:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1a8e72 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x30c7cd and fs3 == 0 and fe3 == 0x7e and fm3 == 0x55751e and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1a8e72; op2val:0xbfb0c7cd; op3val:0x3f55751e; valaddr_reg:x16; val_offset:1644; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1644, x17, x15, 1816, x18)

inst_1498:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1a8e72 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x30c7cd and fs3 == 0 and fe3 == 0x7e and fm3 == 0x55751e and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1a8e72; op2val:0xbfb0c7cd; op3val:0x3f55751e; valaddr_reg:x16; val_offset:1656; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1656, x17, x15, 1824, x18)

inst_1499:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1a8e72 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x30c7cd and fs3 == 0 and fe3 == 0x7e and fm3 == 0x55751e and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1a8e72; op2val:0xbfb0c7cd; op3val:0x3f55751e; valaddr_reg:x16; val_offset:1668; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1668, x17, x15, 1832, x18)

inst_1500:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1a8e72 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x30c7cd and fs3 == 0 and fe3 == 0x7e and fm3 == 0x55751e and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1a8e72; op2val:0xbfb0c7cd; op3val:0x3f55751e; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1840, x18)

inst_1501:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x5e462c and fs2 == 1 and fe2 == 0x81 and fm2 == 0x732bed and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5322c0 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dde462c; op2val:0xc0f32bed; op3val:0x3f5322c0; valaddr_reg:x16; val_offset:1692; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1692, x17, x15, 1848, x18)

inst_1502:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x5e462c and fs2 == 1 and fe2 == 0x81 and fm2 == 0x732bed and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5322c0 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dde462c; op2val:0xc0f32bed; op3val:0x3f5322c0; valaddr_reg:x16; val_offset:1704; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1704, x17, x15, 1856, x18)

inst_1503:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x5e462c and fs2 == 1 and fe2 == 0x81 and fm2 == 0x732bed and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5322c0 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dde462c; op2val:0xc0f32bed; op3val:0x3f5322c0; valaddr_reg:x16; val_offset:1716; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1716, x17, x15, 1864, x18)

inst_1504:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x5e462c and fs2 == 1 and fe2 == 0x81 and fm2 == 0x732bed and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5322c0 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dde462c; op2val:0xc0f32bed; op3val:0x3f5322c0; valaddr_reg:x16; val_offset:1728; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1728, x17, x15, 1872, x18)

inst_1505:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x5e462c and fs2 == 1 and fe2 == 0x81 and fm2 == 0x732bed and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5322c0 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dde462c; op2val:0xc0f32bed; op3val:0x3f5322c0; valaddr_reg:x16; val_offset:1740; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1740, x17, x15, 1880, x18)

inst_1506:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1f81c6 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x0825d1 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x29a903 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1f81c6; op2val:0xbe8825d1; op3val:0x3e29a903; valaddr_reg:x16; val_offset:1752; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1752, x17, x15, 1888, x18)

inst_1507:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1f81c6 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x0825d1 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x29a903 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1f81c6; op2val:0xbe8825d1; op3val:0x3e29a903; valaddr_reg:x16; val_offset:1764; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1764, x17, x15, 1896, x18)

inst_1508:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1f81c6 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x0825d1 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x29a903 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1f81c6; op2val:0xbe8825d1; op3val:0x3e29a903; valaddr_reg:x16; val_offset:1776; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1776, x17, x15, 1904, x18)

inst_1509:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1f81c6 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x0825d1 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x29a903 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1f81c6; op2val:0xbe8825d1; op3val:0x3e29a903; valaddr_reg:x16; val_offset:1788; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1788, x17, x15, 1912, x18)

inst_1510:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1f81c6 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x0825d1 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x29a903 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1f81c6; op2val:0xbe8825d1; op3val:0x3e29a903; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1920, x18)

inst_1511:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3bb039 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x495558 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x139bef and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3bb039; op2val:0xbf495558; op3val:0x3f139bef; valaddr_reg:x16; val_offset:1812; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1812, x17, x15, 1928, x18)

inst_1512:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3bb039 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x495558 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x139bef and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3bb039; op2val:0xbf495558; op3val:0x3f139bef; valaddr_reg:x16; val_offset:1824; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1824, x17, x15, 1936, x18)

inst_1513:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3bb039 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x495558 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x139bef and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3bb039; op2val:0xbf495558; op3val:0x3f139bef; valaddr_reg:x16; val_offset:1836; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1836, x17, x15, 1944, x18)

inst_1514:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3bb039 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x495558 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x139bef and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3bb039; op2val:0xbf495558; op3val:0x3f139bef; valaddr_reg:x16; val_offset:1848; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1848, x17, x15, 1952, x18)

inst_1515:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3bb039 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x495558 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x139bef and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3bb039; op2val:0xbf495558; op3val:0x3f139bef; valaddr_reg:x16; val_offset:1860; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1860, x17, x15, 1960, x18)

inst_1516:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7cf30f and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2a2913 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2821fe and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7cf30f; op2val:0xbf2a2913; op3val:0x3f2821fe; valaddr_reg:x16; val_offset:1872; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1872, x17, x15, 1968, x18)

inst_1517:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7cf30f and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2a2913 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2821fe and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7cf30f; op2val:0xbf2a2913; op3val:0x3f2821fe; valaddr_reg:x16; val_offset:1884; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1884, x17, x15, 1976, x18)

inst_1518:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7cf30f and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2a2913 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2821fe and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7cf30f; op2val:0xbf2a2913; op3val:0x3f2821fe; valaddr_reg:x16; val_offset:1896; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1896, x17, x15, 1984, x18)

inst_1519:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7cf30f and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2a2913 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2821fe and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7cf30f; op2val:0xbf2a2913; op3val:0x3f2821fe; valaddr_reg:x16; val_offset:1908; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1908, x17, x15, 1992, x18)

inst_1520:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7cf30f and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2a2913 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2821fe and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7cf30f; op2val:0xbf2a2913; op3val:0x3f2821fe; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 2000, x18)

inst_1521:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x47b106 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x782566 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4190ab and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f47b106; op2val:0xbf782566; op3val:0x3f4190ab; valaddr_reg:x16; val_offset:1932; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1932, x17, x15, 2008, x18)

inst_1522:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x47b106 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x782566 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4190ab and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f47b106; op2val:0xbf782566; op3val:0x3f4190ab; valaddr_reg:x16; val_offset:1944; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1944, x17, x15, 2016, x18)

inst_1523:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x47b106 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x782566 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4190ab and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f47b106; op2val:0xbf782566; op3val:0x3f4190ab; valaddr_reg:x16; val_offset:1956; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1956, x17, x15, 2024, x18)
RVTEST_SIGBASE(x15,signature_x15_7)

inst_1524:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x47b106 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x782566 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4190ab and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f47b106; op2val:0xbf782566; op3val:0x3f4190ab; valaddr_reg:x16; val_offset:1968; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1968, x17, x15, 0, x18)

inst_1525:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x47b106 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x782566 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4190ab and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f47b106; op2val:0xbf782566; op3val:0x3f4190ab; valaddr_reg:x16; val_offset:1980; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1980, x17, x15, 8, x18)

inst_1526:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7c33cf and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1b3d6f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x18efe4 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3efc33cf; op2val:0xbf1b3d6f; op3val:0x3e98efe4; valaddr_reg:x16; val_offset:1992; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1992, x17, x15, 16, x18)

inst_1527:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7c33cf and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1b3d6f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x18efe4 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3efc33cf; op2val:0xbf1b3d6f; op3val:0x3e98efe4; valaddr_reg:x16; val_offset:2004; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 2004, x17, x15, 24, x18)

inst_1528:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7c33cf and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1b3d6f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x18efe4 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3efc33cf; op2val:0xbf1b3d6f; op3val:0x3e98efe4; valaddr_reg:x16; val_offset:2016; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 2016, x17, x15, 32, x18)

inst_1529:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7c33cf and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1b3d6f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x18efe4 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3efc33cf; op2val:0xbf1b3d6f; op3val:0x3e98efe4; valaddr_reg:x16; val_offset:2028; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 2028, x17, x15, 40, x18)
addi x16,x16,2040

inst_1530:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7c33cf and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1b3d6f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x18efe4 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3efc33cf; op2val:0xbf1b3d6f; op3val:0x3e98efe4; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 48, x18)

inst_1531:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6db75d and fs2 == 1 and fe2 == 0x7b and fm2 == 0x5572e7 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x463443 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6db75d; op2val:0xbdd572e7; op3val:0x3dc63443; valaddr_reg:x16; val_offset:12; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 12, x17, x15, 56, x18)

inst_1532:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6db75d and fs2 == 1 and fe2 == 0x7b and fm2 == 0x5572e7 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x463443 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6db75d; op2val:0xbdd572e7; op3val:0x3dc63443; valaddr_reg:x16; val_offset:24; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 24, x17, x15, 64, x18)

inst_1533:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6db75d and fs2 == 1 and fe2 == 0x7b and fm2 == 0x5572e7 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x463443 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6db75d; op2val:0xbdd572e7; op3val:0x3dc63443; valaddr_reg:x16; val_offset:36; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 36, x17, x15, 72, x18)

inst_1534:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6db75d and fs2 == 1 and fe2 == 0x7b and fm2 == 0x5572e7 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x463443 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6db75d; op2val:0xbdd572e7; op3val:0x3dc63443; valaddr_reg:x16; val_offset:48; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 48, x17, x15, 80, x18)

inst_1535:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6db75d and fs2 == 1 and fe2 == 0x7b and fm2 == 0x5572e7 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x463443 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6db75d; op2val:0xbdd572e7; op3val:0x3dc63443; valaddr_reg:x16; val_offset:60; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 60, x17, x15, 88, x18)

inst_1536:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x714b96 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x052427 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7afcb2 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef14b96; op2val:0xbf852427; op3val:0x3efafcb2; valaddr_reg:x16; val_offset:72; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 72, x17, x15, 96, x18)

inst_1537:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x714b96 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x052427 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7afcb2 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef14b96; op2val:0xbf852427; op3val:0x3efafcb2; valaddr_reg:x16; val_offset:84; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 84, x17, x15, 104, x18)

inst_1538:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x714b96 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x052427 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7afcb2 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef14b96; op2val:0xbf852427; op3val:0x3efafcb2; valaddr_reg:x16; val_offset:96; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 96, x17, x15, 112, x18)

inst_1539:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x714b96 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x052427 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7afcb2 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef14b96; op2val:0xbf852427; op3val:0x3efafcb2; valaddr_reg:x16; val_offset:108; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 108, x17, x15, 120, x18)

inst_1540:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x714b96 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x052427 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7afcb2 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef14b96; op2val:0xbf852427; op3val:0x3efafcb2; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 128, x18)

inst_1541:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4d66ee and fs2 == 1 and fe2 == 0x7f and fm2 == 0x07936b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x598f1f and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4d66ee; op2val:0xbf87936b; op3val:0x3f598f1f; valaddr_reg:x16; val_offset:132; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 132, x17, x15, 136, x18)

inst_1542:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4d66ee and fs2 == 1 and fe2 == 0x7f and fm2 == 0x07936b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x598f1f and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4d66ee; op2val:0xbf87936b; op3val:0x3f598f1f; valaddr_reg:x16; val_offset:144; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 144, x17, x15, 144, x18)

inst_1543:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4d66ee and fs2 == 1 and fe2 == 0x7f and fm2 == 0x07936b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x598f1f and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4d66ee; op2val:0xbf87936b; op3val:0x3f598f1f; valaddr_reg:x16; val_offset:156; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 156, x17, x15, 152, x18)

inst_1544:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4d66ee and fs2 == 1 and fe2 == 0x7f and fm2 == 0x07936b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x598f1f and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4d66ee; op2val:0xbf87936b; op3val:0x3f598f1f; valaddr_reg:x16; val_offset:168; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 168, x17, x15, 160, x18)

inst_1545:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4d66ee and fs2 == 1 and fe2 == 0x7f and fm2 == 0x07936b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x598f1f and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4d66ee; op2val:0xbf87936b; op3val:0x3f598f1f; valaddr_reg:x16; val_offset:180; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 180, x17, x15, 168, x18)

inst_1546:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x204361 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4afb96 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7e2555 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e204361; op2val:0xc04afb96; op3val:0x3efe2555; valaddr_reg:x16; val_offset:192; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 192, x17, x15, 176, x18)

inst_1547:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x204361 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4afb96 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7e2555 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e204361; op2val:0xc04afb96; op3val:0x3efe2555; valaddr_reg:x16; val_offset:204; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 204, x17, x15, 184, x18)

inst_1548:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x204361 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4afb96 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7e2555 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e204361; op2val:0xc04afb96; op3val:0x3efe2555; valaddr_reg:x16; val_offset:216; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 216, x17, x15, 192, x18)

inst_1549:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x204361 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4afb96 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7e2555 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e204361; op2val:0xc04afb96; op3val:0x3efe2555; valaddr_reg:x16; val_offset:228; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 228, x17, x15, 200, x18)

inst_1550:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x204361 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4afb96 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7e2555 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e204361; op2val:0xc04afb96; op3val:0x3efe2555; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 208, x18)

inst_1551:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x188065 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x2be59a and fs3 == 0 and fe3 == 0x7a and fm3 == 0x4ccd14 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e988065; op2val:0xbe2be59a; op3val:0x3d4ccd14; valaddr_reg:x16; val_offset:252; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 252, x17, x15, 216, x18)

inst_1552:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x188065 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x2be59a and fs3 == 0 and fe3 == 0x7a and fm3 == 0x4ccd14 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e988065; op2val:0xbe2be59a; op3val:0x3d4ccd14; valaddr_reg:x16; val_offset:264; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 264, x17, x15, 224, x18)

inst_1553:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x188065 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x2be59a and fs3 == 0 and fe3 == 0x7a and fm3 == 0x4ccd14 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e988065; op2val:0xbe2be59a; op3val:0x3d4ccd14; valaddr_reg:x16; val_offset:276; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 276, x17, x15, 232, x18)

inst_1554:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x188065 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x2be59a and fs3 == 0 and fe3 == 0x7a and fm3 == 0x4ccd14 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e988065; op2val:0xbe2be59a; op3val:0x3d4ccd14; valaddr_reg:x16; val_offset:288; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 288, x17, x15, 240, x18)

inst_1555:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x188065 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x2be59a and fs3 == 0 and fe3 == 0x7a and fm3 == 0x4ccd14 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e988065; op2val:0xbe2be59a; op3val:0x3d4ccd14; valaddr_reg:x16; val_offset:300; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 300, x17, x15, 248, x18)

inst_1556:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x67029b and fs2 == 1 and fe2 == 0x7d and fm2 == 0x2fc972 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1ea08f and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f67029b; op2val:0xbeafc972; op3val:0x3e9ea08f; valaddr_reg:x16; val_offset:312; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 312, x17, x15, 256, x18)

inst_1557:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x67029b and fs2 == 1 and fe2 == 0x7d and fm2 == 0x2fc972 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1ea08f and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f67029b; op2val:0xbeafc972; op3val:0x3e9ea08f; valaddr_reg:x16; val_offset:324; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 324, x17, x15, 264, x18)

inst_1558:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x67029b and fs2 == 1 and fe2 == 0x7d and fm2 == 0x2fc972 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1ea08f and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f67029b; op2val:0xbeafc972; op3val:0x3e9ea08f; valaddr_reg:x16; val_offset:336; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 336, x17, x15, 272, x18)

inst_1559:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x67029b and fs2 == 1 and fe2 == 0x7d and fm2 == 0x2fc972 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1ea08f and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f67029b; op2val:0xbeafc972; op3val:0x3e9ea08f; valaddr_reg:x16; val_offset:348; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 348, x17, x15, 280, x18)

inst_1560:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x67029b and fs2 == 1 and fe2 == 0x7d and fm2 == 0x2fc972 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1ea08f and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f67029b; op2val:0xbeafc972; op3val:0x3e9ea08f; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 288, x18)

inst_1561:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5d723a and fs2 == 1 and fe2 == 0x7d and fm2 == 0x0b82ef and fs3 == 0 and fe3 == 0x7c and fm3 == 0x715c92 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5d723a; op2val:0xbe8b82ef; op3val:0x3e715c92; valaddr_reg:x16; val_offset:372; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 372, x17, x15, 296, x18)

inst_1562:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5d723a and fs2 == 1 and fe2 == 0x7d and fm2 == 0x0b82ef and fs3 == 0 and fe3 == 0x7c and fm3 == 0x715c92 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5d723a; op2val:0xbe8b82ef; op3val:0x3e715c92; valaddr_reg:x16; val_offset:384; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 384, x17, x15, 304, x18)

inst_1563:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5d723a and fs2 == 1 and fe2 == 0x7d and fm2 == 0x0b82ef and fs3 == 0 and fe3 == 0x7c and fm3 == 0x715c92 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5d723a; op2val:0xbe8b82ef; op3val:0x3e715c92; valaddr_reg:x16; val_offset:396; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 396, x17, x15, 312, x18)

inst_1564:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5d723a and fs2 == 1 and fe2 == 0x7d and fm2 == 0x0b82ef and fs3 == 0 and fe3 == 0x7c and fm3 == 0x715c92 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5d723a; op2val:0xbe8b82ef; op3val:0x3e715c92; valaddr_reg:x16; val_offset:408; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 408, x17, x15, 320, x18)

inst_1565:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5d723a and fs2 == 1 and fe2 == 0x7d and fm2 == 0x0b82ef and fs3 == 0 and fe3 == 0x7c and fm3 == 0x715c92 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5d723a; op2val:0xbe8b82ef; op3val:0x3e715c92; valaddr_reg:x16; val_offset:420; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 420, x17, x15, 328, x18)

inst_1566:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x24af85 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x42136e and fs3 == 0 and fe3 == 0x7b and fm3 == 0x79b306 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f24af85; op2val:0xbe42136e; op3val:0x3df9b306; valaddr_reg:x16; val_offset:432; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 432, x17, x15, 336, x18)

inst_1567:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x24af85 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x42136e and fs3 == 0 and fe3 == 0x7b and fm3 == 0x79b306 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f24af85; op2val:0xbe42136e; op3val:0x3df9b306; valaddr_reg:x16; val_offset:444; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 444, x17, x15, 344, x18)

inst_1568:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x24af85 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x42136e and fs3 == 0 and fe3 == 0x7b and fm3 == 0x79b306 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f24af85; op2val:0xbe42136e; op3val:0x3df9b306; valaddr_reg:x16; val_offset:456; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 456, x17, x15, 352, x18)

inst_1569:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x24af85 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x42136e and fs3 == 0 and fe3 == 0x7b and fm3 == 0x79b306 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f24af85; op2val:0xbe42136e; op3val:0x3df9b306; valaddr_reg:x16; val_offset:468; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 468, x17, x15, 360, x18)

inst_1570:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x24af85 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x42136e and fs3 == 0 and fe3 == 0x7b and fm3 == 0x79b306 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f24af85; op2val:0xbe42136e; op3val:0x3df9b306; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 368, x18)

inst_1571:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x73cb68 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x400737 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x36df6e and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3df3cb68; op2val:0xc0c00737; op3val:0x3f36df6e; valaddr_reg:x16; val_offset:492; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 492, x17, x15, 376, x18)

inst_1572:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x73cb68 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x400737 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x36df6e and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3df3cb68; op2val:0xc0c00737; op3val:0x3f36df6e; valaddr_reg:x16; val_offset:504; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 504, x17, x15, 384, x18)

inst_1573:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x73cb68 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x400737 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x36df6e and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3df3cb68; op2val:0xc0c00737; op3val:0x3f36df6e; valaddr_reg:x16; val_offset:516; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 516, x17, x15, 392, x18)

inst_1574:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x73cb68 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x400737 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x36df6e and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3df3cb68; op2val:0xc0c00737; op3val:0x3f36df6e; valaddr_reg:x16; val_offset:528; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 528, x17, x15, 400, x18)

inst_1575:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x73cb68 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x400737 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x36df6e and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3df3cb68; op2val:0xc0c00737; op3val:0x3f36df6e; valaddr_reg:x16; val_offset:540; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 540, x17, x15, 408, x18)

inst_1576:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x579252 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x24cf2a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0ac82f and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed79252; op2val:0xbf24cf2a; op3val:0x3e8ac82f; valaddr_reg:x16; val_offset:552; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 552, x17, x15, 416, x18)

inst_1577:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x579252 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x24cf2a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0ac82f and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed79252; op2val:0xbf24cf2a; op3val:0x3e8ac82f; valaddr_reg:x16; val_offset:564; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 564, x17, x15, 424, x18)

inst_1578:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x579252 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x24cf2a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0ac82f and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed79252; op2val:0xbf24cf2a; op3val:0x3e8ac82f; valaddr_reg:x16; val_offset:576; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 576, x17, x15, 432, x18)

inst_1579:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x579252 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x24cf2a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0ac82f and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed79252; op2val:0xbf24cf2a; op3val:0x3e8ac82f; valaddr_reg:x16; val_offset:588; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 588, x17, x15, 440, x18)

inst_1580:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x579252 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x24cf2a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0ac82f and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed79252; op2val:0xbf24cf2a; op3val:0x3e8ac82f; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 448, x18)

inst_1581:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4e5f95 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x0912ce and fs3 == 0 and fe3 == 0x7a and fm3 == 0x5d00a0 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4e5f95; op2val:0xbd8912ce; op3val:0x3d5d00a0; valaddr_reg:x16; val_offset:612; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 612, x17, x15, 456, x18)

inst_1582:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4e5f95 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x0912ce and fs3 == 0 and fe3 == 0x7a and fm3 == 0x5d00a0 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4e5f95; op2val:0xbd8912ce; op3val:0x3d5d00a0; valaddr_reg:x16; val_offset:624; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 624, x17, x15, 464, x18)

inst_1583:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4e5f95 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x0912ce and fs3 == 0 and fe3 == 0x7a and fm3 == 0x5d00a0 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4e5f95; op2val:0xbd8912ce; op3val:0x3d5d00a0; valaddr_reg:x16; val_offset:636; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 636, x17, x15, 472, x18)

inst_1584:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4e5f95 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x0912ce and fs3 == 0 and fe3 == 0x7a and fm3 == 0x5d00a0 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4e5f95; op2val:0xbd8912ce; op3val:0x3d5d00a0; valaddr_reg:x16; val_offset:648; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 648, x17, x15, 480, x18)

inst_1585:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4e5f95 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x0912ce and fs3 == 0 and fe3 == 0x7a and fm3 == 0x5d00a0 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4e5f95; op2val:0xbd8912ce; op3val:0x3d5d00a0; valaddr_reg:x16; val_offset:660; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 660, x17, x15, 488, x18)

inst_1586:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x5cf92b and fs2 == 1 and fe2 == 0x82 and fm2 == 0x17a68b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x02e6bb and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d5cf92b; op2val:0xc117a68b; op3val:0x3f02e6bb; valaddr_reg:x16; val_offset:672; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 672, x17, x15, 496, x18)

inst_1587:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x5cf92b and fs2 == 1 and fe2 == 0x82 and fm2 == 0x17a68b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x02e6bb and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d5cf92b; op2val:0xc117a68b; op3val:0x3f02e6bb; valaddr_reg:x16; val_offset:684; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 684, x17, x15, 504, x18)

inst_1588:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x5cf92b and fs2 == 1 and fe2 == 0x82 and fm2 == 0x17a68b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x02e6bb and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d5cf92b; op2val:0xc117a68b; op3val:0x3f02e6bb; valaddr_reg:x16; val_offset:696; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 696, x17, x15, 512, x18)

inst_1589:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x5cf92b and fs2 == 1 and fe2 == 0x82 and fm2 == 0x17a68b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x02e6bb and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d5cf92b; op2val:0xc117a68b; op3val:0x3f02e6bb; valaddr_reg:x16; val_offset:708; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 708, x17, x15, 520, x18)

inst_1590:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x5cf92b and fs2 == 1 and fe2 == 0x82 and fm2 == 0x17a68b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x02e6bb and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d5cf92b; op2val:0xc117a68b; op3val:0x3f02e6bb; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 528, x18)

inst_1591:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5b9cd8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0b9a64 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6f8537 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5b9cd8; op2val:0xbf8b9a64; op3val:0x3f6f8537; valaddr_reg:x16; val_offset:732; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 732, x17, x15, 536, x18)

inst_1592:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5b9cd8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0b9a64 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6f8537 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5b9cd8; op2val:0xbf8b9a64; op3val:0x3f6f8537; valaddr_reg:x16; val_offset:744; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 744, x17, x15, 544, x18)

inst_1593:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5b9cd8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0b9a64 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6f8537 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5b9cd8; op2val:0xbf8b9a64; op3val:0x3f6f8537; valaddr_reg:x16; val_offset:756; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 756, x17, x15, 552, x18)

inst_1594:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5b9cd8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0b9a64 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6f8537 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5b9cd8; op2val:0xbf8b9a64; op3val:0x3f6f8537; valaddr_reg:x16; val_offset:768; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 768, x17, x15, 560, x18)

inst_1595:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5b9cd8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0b9a64 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6f8537 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5b9cd8; op2val:0xbf8b9a64; op3val:0x3f6f8537; valaddr_reg:x16; val_offset:780; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 780, x17, x15, 568, x18)

inst_1596:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x49fbec and fs2 == 1 and fe2 == 0x81 and fm2 == 0x07c670 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5640d7 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dc9fbec; op2val:0xc087c670; op3val:0x3ed640d7; valaddr_reg:x16; val_offset:792; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 792, x17, x15, 576, x18)

inst_1597:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x49fbec and fs2 == 1 and fe2 == 0x81 and fm2 == 0x07c670 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5640d7 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dc9fbec; op2val:0xc087c670; op3val:0x3ed640d7; valaddr_reg:x16; val_offset:804; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 804, x17, x15, 584, x18)

inst_1598:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x49fbec and fs2 == 1 and fe2 == 0x81 and fm2 == 0x07c670 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5640d7 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dc9fbec; op2val:0xc087c670; op3val:0x3ed640d7; valaddr_reg:x16; val_offset:816; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 816, x17, x15, 592, x18)

inst_1599:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x49fbec and fs2 == 1 and fe2 == 0x81 and fm2 == 0x07c670 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5640d7 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dc9fbec; op2val:0xc087c670; op3val:0x3ed640d7; valaddr_reg:x16; val_offset:828; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 828, x17, x15, 600, x18)

inst_1600:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x49fbec and fs2 == 1 and fe2 == 0x81 and fm2 == 0x07c670 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5640d7 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dc9fbec; op2val:0xc087c670; op3val:0x3ed640d7; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 608, x18)

inst_1601:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x009e8f and fs2 == 1 and fe2 == 0x7e and fm2 == 0x327aa0 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3357b8 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f009e8f; op2val:0xbf327aa0; op3val:0x3eb357b8; valaddr_reg:x16; val_offset:852; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 852, x17, x15, 616, x18)

inst_1602:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x009e8f and fs2 == 1 and fe2 == 0x7e and fm2 == 0x327aa0 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3357b8 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f009e8f; op2val:0xbf327aa0; op3val:0x3eb357b8; valaddr_reg:x16; val_offset:864; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 864, x17, x15, 624, x18)

inst_1603:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x009e8f and fs2 == 1 and fe2 == 0x7e and fm2 == 0x327aa0 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3357b8 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f009e8f; op2val:0xbf327aa0; op3val:0x3eb357b8; valaddr_reg:x16; val_offset:876; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 876, x17, x15, 632, x18)

inst_1604:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x009e8f and fs2 == 1 and fe2 == 0x7e and fm2 == 0x327aa0 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3357b8 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f009e8f; op2val:0xbf327aa0; op3val:0x3eb357b8; valaddr_reg:x16; val_offset:888; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 888, x17, x15, 640, x18)

inst_1605:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x009e8f and fs2 == 1 and fe2 == 0x7e and fm2 == 0x327aa0 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3357b8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f009e8f; op2val:0xbf327aa0; op3val:0x3eb357b8; valaddr_reg:x16; val_offset:900; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 900, x17, x15, 648, x18)

inst_1606:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x295c16 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6ee924 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1e0dd9 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f295c16; op2val:0xbeeee924; op3val:0x3e9e0dd9; valaddr_reg:x16; val_offset:912; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 912, x17, x15, 656, x18)

inst_1607:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x295c16 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6ee924 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1e0dd9 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f295c16; op2val:0xbeeee924; op3val:0x3e9e0dd9; valaddr_reg:x16; val_offset:924; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 924, x17, x15, 664, x18)

inst_1608:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x295c16 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6ee924 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1e0dd9 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f295c16; op2val:0xbeeee924; op3val:0x3e9e0dd9; valaddr_reg:x16; val_offset:936; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 936, x17, x15, 672, x18)

inst_1609:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x295c16 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6ee924 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1e0dd9 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f295c16; op2val:0xbeeee924; op3val:0x3e9e0dd9; valaddr_reg:x16; val_offset:948; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 948, x17, x15, 680, x18)

inst_1610:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x295c16 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6ee924 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1e0dd9 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f295c16; op2val:0xbeeee924; op3val:0x3e9e0dd9; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 688, x18)

inst_1611:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1f6f7b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0b6916 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2da5f6 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1f6f7b; op2val:0xbf0b6916; op3val:0x3eada5f6; valaddr_reg:x16; val_offset:972; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 972, x17, x15, 696, x18)

inst_1612:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1f6f7b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0b6916 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2da5f6 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1f6f7b; op2val:0xbf0b6916; op3val:0x3eada5f6; valaddr_reg:x16; val_offset:984; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 984, x17, x15, 704, x18)

inst_1613:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1f6f7b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0b6916 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2da5f6 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1f6f7b; op2val:0xbf0b6916; op3val:0x3eada5f6; valaddr_reg:x16; val_offset:996; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 996, x17, x15, 712, x18)

inst_1614:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1f6f7b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0b6916 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2da5f6 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1f6f7b; op2val:0xbf0b6916; op3val:0x3eada5f6; valaddr_reg:x16; val_offset:1008; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1008, x17, x15, 720, x18)

inst_1615:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1f6f7b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0b6916 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2da5f6 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1f6f7b; op2val:0xbf0b6916; op3val:0x3eada5f6; valaddr_reg:x16; val_offset:1020; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1020, x17, x15, 728, x18)

inst_1616:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6fd96b and fs2 == 1 and fe2 == 0x7d and fm2 == 0x4f91bc and fs3 == 0 and fe3 == 0x7d and fm3 == 0x427958 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6fd96b; op2val:0xbecf91bc; op3val:0x3ec27958; valaddr_reg:x16; val_offset:1032; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1032, x17, x15, 736, x18)

inst_1617:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6fd96b and fs2 == 1 and fe2 == 0x7d and fm2 == 0x4f91bc and fs3 == 0 and fe3 == 0x7d and fm3 == 0x427958 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6fd96b; op2val:0xbecf91bc; op3val:0x3ec27958; valaddr_reg:x16; val_offset:1044; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1044, x17, x15, 744, x18)

inst_1618:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6fd96b and fs2 == 1 and fe2 == 0x7d and fm2 == 0x4f91bc and fs3 == 0 and fe3 == 0x7d and fm3 == 0x427958 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6fd96b; op2val:0xbecf91bc; op3val:0x3ec27958; valaddr_reg:x16; val_offset:1056; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1056, x17, x15, 752, x18)

inst_1619:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6fd96b and fs2 == 1 and fe2 == 0x7d and fm2 == 0x4f91bc and fs3 == 0 and fe3 == 0x7d and fm3 == 0x427958 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6fd96b; op2val:0xbecf91bc; op3val:0x3ec27958; valaddr_reg:x16; val_offset:1068; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1068, x17, x15, 760, x18)

inst_1620:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6fd96b and fs2 == 1 and fe2 == 0x7d and fm2 == 0x4f91bc and fs3 == 0 and fe3 == 0x7d and fm3 == 0x427958 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6fd96b; op2val:0xbecf91bc; op3val:0x3ec27958; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 768, x18)

inst_1621:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3ddc55 and fs2 == 1 and fe2 == 0x78 and fm2 == 0x3983f7 and fs3 == 0 and fe3 == 0x78 and fm3 == 0x099619 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3ddc55; op2val:0xbc3983f7; op3val:0x3c099619; valaddr_reg:x16; val_offset:1092; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1092, x17, x15, 776, x18)

inst_1622:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3ddc55 and fs2 == 1 and fe2 == 0x78 and fm2 == 0x3983f7 and fs3 == 0 and fe3 == 0x78 and fm3 == 0x099619 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3ddc55; op2val:0xbc3983f7; op3val:0x3c099619; valaddr_reg:x16; val_offset:1104; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1104, x17, x15, 784, x18)

inst_1623:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3ddc55 and fs2 == 1 and fe2 == 0x78 and fm2 == 0x3983f7 and fs3 == 0 and fe3 == 0x78 and fm3 == 0x099619 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3ddc55; op2val:0xbc3983f7; op3val:0x3c099619; valaddr_reg:x16; val_offset:1116; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1116, x17, x15, 792, x18)

inst_1624:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3ddc55 and fs2 == 1 and fe2 == 0x78 and fm2 == 0x3983f7 and fs3 == 0 and fe3 == 0x78 and fm3 == 0x099619 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3ddc55; op2val:0xbc3983f7; op3val:0x3c099619; valaddr_reg:x16; val_offset:1128; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1128, x17, x15, 800, x18)

inst_1625:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3ddc55 and fs2 == 1 and fe2 == 0x78 and fm2 == 0x3983f7 and fs3 == 0 and fe3 == 0x78 and fm3 == 0x099619 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3ddc55; op2val:0xbc3983f7; op3val:0x3c099619; valaddr_reg:x16; val_offset:1140; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1140, x17, x15, 808, x18)

inst_1626:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1ef4e9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x36b300 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x62e287 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1ef4e9; op2val:0xbfb6b300; op3val:0x3f62e287; valaddr_reg:x16; val_offset:1152; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1152, x17, x15, 816, x18)

inst_1627:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1ef4e9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x36b300 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x62e287 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1ef4e9; op2val:0xbfb6b300; op3val:0x3f62e287; valaddr_reg:x16; val_offset:1164; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1164, x17, x15, 824, x18)

inst_1628:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1ef4e9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x36b300 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x62e287 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1ef4e9; op2val:0xbfb6b300; op3val:0x3f62e287; valaddr_reg:x16; val_offset:1176; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1176, x17, x15, 832, x18)

inst_1629:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1ef4e9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x36b300 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x62e287 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1ef4e9; op2val:0xbfb6b300; op3val:0x3f62e287; valaddr_reg:x16; val_offset:1188; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1188, x17, x15, 840, x18)

inst_1630:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1ef4e9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x36b300 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x62e287 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1ef4e9; op2val:0xbfb6b300; op3val:0x3f62e287; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 848, x18)

inst_1631:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x17a357 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x294e60 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x489283 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f17a357; op2val:0xbe294e60; op3val:0x3dc89283; valaddr_reg:x16; val_offset:1212; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1212, x17, x15, 856, x18)

inst_1632:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x17a357 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x294e60 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x489283 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f17a357; op2val:0xbe294e60; op3val:0x3dc89283; valaddr_reg:x16; val_offset:1224; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1224, x17, x15, 864, x18)

inst_1633:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x17a357 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x294e60 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x489283 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f17a357; op2val:0xbe294e60; op3val:0x3dc89283; valaddr_reg:x16; val_offset:1236; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1236, x17, x15, 872, x18)

inst_1634:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x17a357 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x294e60 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x489283 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f17a357; op2val:0xbe294e60; op3val:0x3dc89283; valaddr_reg:x16; val_offset:1248; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1248, x17, x15, 880, x18)

inst_1635:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x17a357 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x294e60 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x489283 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f17a357; op2val:0xbe294e60; op3val:0x3dc89283; valaddr_reg:x16; val_offset:1260; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1260, x17, x15, 888, x18)

inst_1636:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7ae1d9 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3f895e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3bb520 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7ae1d9; op2val:0xbf3f895e; op3val:0x3f3bb520; valaddr_reg:x16; val_offset:1272; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1272, x17, x15, 896, x18)

inst_1637:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7ae1d9 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3f895e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3bb520 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7ae1d9; op2val:0xbf3f895e; op3val:0x3f3bb520; valaddr_reg:x16; val_offset:1284; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1284, x17, x15, 904, x18)

inst_1638:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7ae1d9 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3f895e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3bb520 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7ae1d9; op2val:0xbf3f895e; op3val:0x3f3bb520; valaddr_reg:x16; val_offset:1296; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1296, x17, x15, 912, x18)

inst_1639:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7ae1d9 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3f895e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3bb520 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7ae1d9; op2val:0xbf3f895e; op3val:0x3f3bb520; valaddr_reg:x16; val_offset:1308; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1308, x17, x15, 920, x18)

inst_1640:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7ae1d9 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3f895e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3bb520 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7ae1d9; op2val:0xbf3f895e; op3val:0x3f3bb520; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 928, x18)

inst_1641:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x69123a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5755fa and fs3 == 0 and fe3 == 0x7e and fm3 == 0x440c95 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f69123a; op2val:0xbf5755fa; op3val:0x3f440c95; valaddr_reg:x16; val_offset:1332; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1332, x17, x15, 936, x18)

inst_1642:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x69123a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5755fa and fs3 == 0 and fe3 == 0x7e and fm3 == 0x440c95 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f69123a; op2val:0xbf5755fa; op3val:0x3f440c95; valaddr_reg:x16; val_offset:1344; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1344, x17, x15, 944, x18)

inst_1643:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x69123a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5755fa and fs3 == 0 and fe3 == 0x7e and fm3 == 0x440c95 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f69123a; op2val:0xbf5755fa; op3val:0x3f440c95; valaddr_reg:x16; val_offset:1356; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1356, x17, x15, 952, x18)

inst_1644:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x69123a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5755fa and fs3 == 0 and fe3 == 0x7e and fm3 == 0x440c95 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f69123a; op2val:0xbf5755fa; op3val:0x3f440c95; valaddr_reg:x16; val_offset:1368; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1368, x17, x15, 960, x18)

inst_1645:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x69123a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5755fa and fs3 == 0 and fe3 == 0x7e and fm3 == 0x440c95 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f69123a; op2val:0xbf5755fa; op3val:0x3f440c95; valaddr_reg:x16; val_offset:1380; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1380, x17, x15, 968, x18)

inst_1646:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4ec9f5 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x56d8a7 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x2d8bd4 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4ec9f5; op2val:0xbe56d8a7; op3val:0x3e2d8bd4; valaddr_reg:x16; val_offset:1392; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1392, x17, x15, 976, x18)

inst_1647:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4ec9f5 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x56d8a7 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x2d8bd4 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4ec9f5; op2val:0xbe56d8a7; op3val:0x3e2d8bd4; valaddr_reg:x16; val_offset:1404; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1404, x17, x15, 984, x18)

inst_1648:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4ec9f5 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x56d8a7 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x2d8bd4 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4ec9f5; op2val:0xbe56d8a7; op3val:0x3e2d8bd4; valaddr_reg:x16; val_offset:1416; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1416, x17, x15, 992, x18)

inst_1649:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4ec9f5 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x56d8a7 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x2d8bd4 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4ec9f5; op2val:0xbe56d8a7; op3val:0x3e2d8bd4; valaddr_reg:x16; val_offset:1428; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1428, x17, x15, 1000, x18)

inst_1650:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4ec9f5 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x56d8a7 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x2d8bd4 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4ec9f5; op2val:0xbe56d8a7; op3val:0x3e2d8bd4; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 1008, x18)

inst_1651:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0bff83 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6c68b6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0148d0 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0bff83; op2val:0xbf6c68b6; op3val:0x3f0148d0; valaddr_reg:x16; val_offset:1452; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1452, x17, x15, 1016, x18)

inst_1652:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0bff83 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6c68b6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0148d0 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0bff83; op2val:0xbf6c68b6; op3val:0x3f0148d0; valaddr_reg:x16; val_offset:1464; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1464, x17, x15, 1024, x18)

inst_1653:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0bff83 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6c68b6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0148d0 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0bff83; op2val:0xbf6c68b6; op3val:0x3f0148d0; valaddr_reg:x16; val_offset:1476; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1476, x17, x15, 1032, x18)

inst_1654:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0bff83 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6c68b6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0148d0 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0bff83; op2val:0xbf6c68b6; op3val:0x3f0148d0; valaddr_reg:x16; val_offset:1488; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1488, x17, x15, 1040, x18)

inst_1655:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0bff83 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6c68b6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0148d0 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0bff83; op2val:0xbf6c68b6; op3val:0x3f0148d0; valaddr_reg:x16; val_offset:1500; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1500, x17, x15, 1048, x18)

inst_1656:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x375d05 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x414fb1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0a7635 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb75d05; op2val:0xbfc14fb1; op3val:0x3f0a7635; valaddr_reg:x16; val_offset:1512; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1512, x17, x15, 1056, x18)

inst_1657:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x375d05 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x414fb1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0a7635 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb75d05; op2val:0xbfc14fb1; op3val:0x3f0a7635; valaddr_reg:x16; val_offset:1524; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1524, x17, x15, 1064, x18)

inst_1658:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x375d05 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x414fb1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0a7635 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb75d05; op2val:0xbfc14fb1; op3val:0x3f0a7635; valaddr_reg:x16; val_offset:1536; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1536, x17, x15, 1072, x18)

inst_1659:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x375d05 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x414fb1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0a7635 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb75d05; op2val:0xbfc14fb1; op3val:0x3f0a7635; valaddr_reg:x16; val_offset:1548; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1548, x17, x15, 1080, x18)

inst_1660:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x375d05 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x414fb1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0a7635 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb75d05; op2val:0xbfc14fb1; op3val:0x3f0a7635; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1088, x18)

inst_1661:
// fs1 == 0 and fe1 == 0x74 and fm1 == 0x6472bf and fs2 == 1 and fe2 == 0x88 and fm2 == 0x62cdc3 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4a64ea and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3a6472bf; op2val:0xc462cdc3; op3val:0x3f4a64ea; valaddr_reg:x16; val_offset:1572; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1572, x17, x15, 1096, x18)

inst_1662:
// fs1 == 0 and fe1 == 0x74 and fm1 == 0x6472bf and fs2 == 1 and fe2 == 0x88 and fm2 == 0x62cdc3 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4a64ea and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3a6472bf; op2val:0xc462cdc3; op3val:0x3f4a64ea; valaddr_reg:x16; val_offset:1584; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1584, x17, x15, 1104, x18)

inst_1663:
// fs1 == 0 and fe1 == 0x74 and fm1 == 0x6472bf and fs2 == 1 and fe2 == 0x88 and fm2 == 0x62cdc3 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4a64ea and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3a6472bf; op2val:0xc462cdc3; op3val:0x3f4a64ea; valaddr_reg:x16; val_offset:1596; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1596, x17, x15, 1112, x18)

inst_1664:
// fs1 == 0 and fe1 == 0x74 and fm1 == 0x6472bf and fs2 == 1 and fe2 == 0x88 and fm2 == 0x62cdc3 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4a64ea and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3a6472bf; op2val:0xc462cdc3; op3val:0x3f4a64ea; valaddr_reg:x16; val_offset:1608; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1608, x17, x15, 1120, x18)

inst_1665:
// fs1 == 0 and fe1 == 0x74 and fm1 == 0x6472bf and fs2 == 1 and fe2 == 0x88 and fm2 == 0x62cdc3 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4a64ea and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3a6472bf; op2val:0xc462cdc3; op3val:0x3f4a64ea; valaddr_reg:x16; val_offset:1620; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1620, x17, x15, 1128, x18)

inst_1666:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6a314c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x52983c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x40a7b5 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6a314c; op2val:0xbf52983c; op3val:0x3f40a7b5; valaddr_reg:x16; val_offset:1632; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1632, x17, x15, 1136, x18)

inst_1667:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6a314c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x52983c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x40a7b5 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6a314c; op2val:0xbf52983c; op3val:0x3f40a7b5; valaddr_reg:x16; val_offset:1644; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1644, x17, x15, 1144, x18)

inst_1668:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6a314c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x52983c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x40a7b5 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6a314c; op2val:0xbf52983c; op3val:0x3f40a7b5; valaddr_reg:x16; val_offset:1656; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1656, x17, x15, 1152, x18)

inst_1669:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6a314c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x52983c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x40a7b5 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6a314c; op2val:0xbf52983c; op3val:0x3f40a7b5; valaddr_reg:x16; val_offset:1668; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1668, x17, x15, 1160, x18)

inst_1670:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6a314c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x52983c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x40a7b5 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6a314c; op2val:0xbf52983c; op3val:0x3f40a7b5; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1168, x18)

inst_1671:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5fa8c7 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x2cfcc5 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x17223c and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5fa8c7; op2val:0xbeacfcc5; op3val:0x3e97223c; valaddr_reg:x16; val_offset:1692; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1692, x17, x15, 1176, x18)

inst_1672:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5fa8c7 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x2cfcc5 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x17223c and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5fa8c7; op2val:0xbeacfcc5; op3val:0x3e97223c; valaddr_reg:x16; val_offset:1704; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1704, x17, x15, 1184, x18)

inst_1673:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5fa8c7 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x2cfcc5 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x17223c and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5fa8c7; op2val:0xbeacfcc5; op3val:0x3e97223c; valaddr_reg:x16; val_offset:1716; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1716, x17, x15, 1192, x18)

inst_1674:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5fa8c7 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x2cfcc5 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x17223c and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5fa8c7; op2val:0xbeacfcc5; op3val:0x3e97223c; valaddr_reg:x16; val_offset:1728; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1728, x17, x15, 1200, x18)

inst_1675:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5fa8c7 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x2cfcc5 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x17223c and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5fa8c7; op2val:0xbeacfcc5; op3val:0x3e97223c; valaddr_reg:x16; val_offset:1740; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1740, x17, x15, 1208, x18)

inst_1676:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x45f69a and fs2 == 1 and fe2 == 0x7a and fm2 == 0x47b766 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x1a7085 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f45f69a; op2val:0xbd47b766; op3val:0x3d1a7085; valaddr_reg:x16; val_offset:1752; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1752, x17, x15, 1216, x18)

inst_1677:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x45f69a and fs2 == 1 and fe2 == 0x7a and fm2 == 0x47b766 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x1a7085 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f45f69a; op2val:0xbd47b766; op3val:0x3d1a7085; valaddr_reg:x16; val_offset:1764; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1764, x17, x15, 1224, x18)

inst_1678:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x45f69a and fs2 == 1 and fe2 == 0x7a and fm2 == 0x47b766 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x1a7085 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f45f69a; op2val:0xbd47b766; op3val:0x3d1a7085; valaddr_reg:x16; val_offset:1776; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1776, x17, x15, 1232, x18)

inst_1679:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x45f69a and fs2 == 1 and fe2 == 0x7a and fm2 == 0x47b766 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x1a7085 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f45f69a; op2val:0xbd47b766; op3val:0x3d1a7085; valaddr_reg:x16; val_offset:1788; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1788, x17, x15, 1240, x18)

inst_1680:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x381a34 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x04887b and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3e9f54 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f381a34; op2val:0xbf04887b; op3val:0x3ebe9f54; valaddr_reg:x16; val_offset:1800; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1800, x17, x15, 1248, x18)

inst_1681:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x381a34 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x04887b and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3e9f54 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f381a34; op2val:0xbf04887b; op3val:0x3ebe9f54; valaddr_reg:x16; val_offset:1812; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1812, x17, x15, 1256, x18)

inst_1682:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x381a34 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x04887b and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3e9f54 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f381a34; op2val:0xbf04887b; op3val:0x3ebe9f54; valaddr_reg:x16; val_offset:1824; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1824, x17, x15, 1264, x18)

inst_1683:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x29474d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e1a89 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7b68f0 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3da9474d; op2val:0xc0be1a89; op3val:0x3efb68f0; valaddr_reg:x16; val_offset:1836; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1836, x17, x15, 1272, x18)

inst_1684:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x29474d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e1a89 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7b68f0 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3da9474d; op2val:0xc0be1a89; op3val:0x3efb68f0; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 1280, x18)

inst_1685:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x29474d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e1a89 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7b68f0 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3da9474d; op2val:0xc0be1a89; op3val:0x3efb68f0; valaddr_reg:x16; val_offset:1860; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1860, x17, x15, 1288, x18)

inst_1686:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x29474d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e1a89 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7b68f0 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3da9474d; op2val:0xc0be1a89; op3val:0x3efb68f0; valaddr_reg:x16; val_offset:1872; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1872, x17, x15, 1296, x18)

inst_1687:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x29474d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3e1a89 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7b68f0 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3da9474d; op2val:0xc0be1a89; op3val:0x3efb68f0; valaddr_reg:x16; val_offset:1884; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1884, x17, x15, 1304, x18)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
test_fp:
.word 0x3f45f69a
.word 0xbd47b766
.word 0x3d1a7085
.word 0x3f381a34
.word 0xbf04887b
.word 0x3ebe9f54
.word 0x3f381a34
.word 0xbf04887b
.word 0x3ebe9f54
.word 0x3f381a34
.word 0x3f381a34
.word 0x3ebe9f54
.word 0x3f381a34
.word 0x3f381a34
.word 0x3f381a34
.word 0x3f381a34
.word 0xbf04887b
.word 0xbf04887b
.word 0x3da9474d
.word 0x3da9474d
.word 0x3efb68f0
.word 0x3da9474d
.word 0xc0be1a89
.word 0x3da9474d
.word 0x3da9474d
.word 0xc0be1a89
.word 0xc0be1a89
.word 0x3da9474d
.word 0x3da9474d
.word 0x3da9474d
.word 0x3da9474d
.word 0xc0be1a89
.word 0x3da9474d
.word 0x3cc3fe9c
.word 0xc0acfd14
.word 0x3e0470d3
.word 0x3cc3fe9c
.word 0xc0acfd14
.word 0x3e0470d3
.word 0x3cc3fe9c
.word 0xc0acfd14
.word 0x3e0470d3
.word 0x3cc3fe9c
.word 0xc0acfd14
.word 0x3e0470d3
.word 0x3cc3fe9c
.word 0xc0acfd14
.word 0x3e0470d3
.word 0x3f242285
.word 0xbfb72b46
.word 0x3f6ae0d9
.word 0x3f242285
.word 0xbfb72b46
.word 0x3f6ae0d9
.word 0x3f242285
.word 0xbfb72b46
.word 0x3f6ae0d9
.word 0x3f242285
.word 0xbfb72b46
.word 0x3f6ae0d9
.word 0x3f242285
.word 0xbfb72b46
.word 0x3f6ae0d9
.word 0x3e4bee4d
.word 0xbfd8d77c
.word 0x3eacbcba
.word 0x3e4bee4d
.word 0xbfd8d77c
.word 0x3eacbcba
.word 0x3e4bee4d
.word 0xbfd8d77c
.word 0x3eacbcba
.word 0x3e4bee4d
.word 0xbfd8d77c
.word 0x3eacbcba
.word 0x3e4bee4d
.word 0xbfd8d77c
.word 0x3eacbcba
.word 0x3f237157
.word 0xbe3b26d4
.word 0x3deef92a
.word 0x3f237157
.word 0xbe3b26d4
.word 0x3deef92a
.word 0x3f237157
.word 0xbe3b26d4
.word 0x3deef92a
.word 0x3f237157
.word 0xbe3b26d4
.word 0x3deef92a
.word 0x3f237157
.word 0xbe3b26d4
.word 0x3deef92a
.word 0x3f5cd914
.word 0xbe58de2b
.word 0x3e3b16d3
.word 0x3f5cd914
.word 0xbe58de2b
.word 0x3e3b16d3
.word 0x3f5cd914
.word 0xbe58de2b
.word 0x3e3b16d3
.word 0x3f5cd914
.word 0xbe58de2b
.word 0x3e3b16d3
.word 0x3f5cd914
.word 0xbe58de2b
.word 0x3e3b16d3
.word 0x3e8e3130
.word 0xc04f4fb0
.word 0x3f664c12
.word 0x3e8e3130
.word 0xc04f4fb0
.word 0x3f664c12
.word 0x3e8e3130
.word 0xc04f4fb0
.word 0x3f664c12
.word 0x3e8e3130
.word 0xc04f4fb0
.word 0x3f664c12
.word 0x3e8e3130
.word 0xc04f4fb0
.word 0x3f664c12
.word 0x3f7294e7
.word 0xbf84c2e0
.word 0x3f7b9ae1
.word 0x3f7294e7
.word 0xbf84c2e0
.word 0x3f7b9ae1
.word 0x3f7294e7
.word 0xbf84c2e0
.word 0x3f7b9ae1
.word 0x3f7294e7
.word 0xbf84c2e0
.word 0x3f7b9ae1
.word 0x3f7294e7
.word 0xbf84c2e0
.word 0x3f7b9ae1
.word 0x3ee8c9c6
.word 0xbe0b16d9
.word 0x3d7cf4ac
.word 0x3ee8c9c6
.word 0xbe0b16d9
.word 0x3d7cf4ac
.word 0x3ee8c9c6
.word 0xbe0b16d9
.word 0x3d7cf4ac
.word 0x3ee8c9c6
.word 0xbe0b16d9
.word 0x3d7cf4ac
.word 0x3ee8c9c6
.word 0xbe0b16d9
.word 0x3d7cf4ac
.word 0x3ebe66ec
.word 0xbf81afef
.word 0x3ec0e970
.word 0x3ebe66ec
.word 0xbf81afef
.word 0x3ec0e970
.word 0x3ebe66ec
.word 0xbf81afef
.word 0x3ec0e970
.word 0x3ebe66ec
.word 0xbf81afef
.word 0x3ec0e970
.word 0x3ebe66ec
.word 0xbf81afef
.word 0x3ec0e970
.word 0x3e986763
.word 0xc04e2d8c
.word 0x3f757ca0
.word 0x3e986763
.word 0xc04e2d8c
.word 0x3f757ca0
.word 0x3e986763
.word 0xc04e2d8c
.word 0x3f757ca0
.word 0x3e986763
.word 0xc04e2d8c
.word 0x3f757ca0
.word 0x3e986763
.word 0xc04e2d8c
.word 0x3f757ca0
.word 0x3e8cca0b
.word 0xbc44f350
.word 0x3b58a101
.word 0x3e8cca0b
.word 0xbc44f350
.word 0x3b58a101
.word 0x3e8cca0b
.word 0xbc44f350
.word 0x3b58a101
.word 0x3e8cca0b
.word 0xbc44f350
.word 0x3b58a101
.word 0x3e8cca0b
.word 0xbc44f350
.word 0x3b58a101
.word 0x3eb32c1b
.word 0xbfd230a7
.word 0x3f131c3b
.word 0x3eb32c1b
.word 0xbfd230a7
.word 0x3f131c3b
.word 0x3eb32c1b
.word 0xbfd230a7
.word 0x3f131c3b
.word 0x3eb32c1b
.word 0xbfd230a7
.word 0x3f131c3b
.word 0x3eb32c1b
.word 0xbfd230a7
.word 0x3f131c3b
.word 0x3ee16be7
.word 0xbf5c597c
.word 0x3ec20786
.word 0x3ee16be7
.word 0xbf5c597c
.word 0x3ec20786
.word 0x3ee16be7
.word 0xbf5c597c
.word 0x3ec20786
.word 0x3ee16be7
.word 0xbf5c597c
.word 0x3ec20786
.word 0x3ee16be7
.word 0xbf5c597c
.word 0x3ec20786
.word 0x3ed7a1cc
.word 0xc0088566
.word 0x3f65fca3
.word 0x3ed7a1cc
.word 0xc0088566
.word 0x3f65fca3
.word 0x3ed7a1cc
.word 0xc0088566
.word 0x3f65fca3
.word 0x3ed7a1cc
.word 0xc0088566
.word 0x3f65fca3
.word 0x3ed7a1cc
.word 0xc0088566
.word 0x3f65fca3
.word 0x3ca76a83
.word 0xc08dfc5c
.word 0x3db9b568
.word 0x3ca76a83
.word 0xc08dfc5c
.word 0x3db9b568
.word 0x3ca76a83
.word 0xc08dfc5c
.word 0x3db9b568
.word 0x3ca76a83
.word 0xc08dfc5c
.word 0x3db9b568
.word 0x3ca76a83
.word 0xc08dfc5c
.word 0x3db9b568
.word 0x3e89db5b
.word 0xc0240f70
.word 0x3f30b1ad
.word 0x3e89db5b
.word 0xc0240f70
.word 0x3f30b1ad
.word 0x3e89db5b
.word 0xc0240f70
.word 0x3f30b1ad
.word 0x3e89db5b
.word 0xc0240f70
.word 0x3f30b1ad
.word 0x3e89db5b
.word 0xc0240f70
.word 0x3f30b1ad
.word 0x3f00ce56
.word 0xbfa9459c
.word 0x3f2a567b
.word 0x3f00ce56
.word 0xbfa9459c
.word 0x3f2a567b
.word 0x3f00ce56
.word 0xbfa9459c
.word 0x3f2a567b
.word 0x3f00ce56
.word 0xbfa9459c
.word 0x3f2a567b
.word 0x3f00ce56
.word 0xbfa9459c
.word 0x3f2a567b
.word 0x3f6cdeb3
.word 0xbf1a768e
.word 0x3f0eebaa
.word 0x3f6cdeb3
.word 0xbf1a768e
.word 0x3f0eebaa
.word 0x3f6cdeb3
.word 0xbf1a768e
.word 0x3f0eebaa
.word 0x3f6cdeb3
.word 0xbf1a768e
.word 0x3f0eebaa
.word 0x3f6cdeb3
.word 0xbf1a768e
.word 0x3f0eebaa
.word 0x3f0f4a19
.word 0xbfa298f9
.word 0x3f360507
.word 0x3f0f4a19
.word 0xbfa298f9
.word 0x3f360507
.word 0x3f0f4a19
.word 0xbfa298f9
.word 0x3f360507
.word 0x3f0f4a19
.word 0xbfa298f9
.word 0x3f360507
.word 0x3f0f4a19
.word 0xbfa298f9
.word 0x3f360507
.word 0x3d945d7e
.word 0xc10752c9
.word 0x3f1cda90
.word 0x3d945d7e
.word 0xc10752c9
.word 0x3f1cda90
.word 0x3d945d7e
.word 0xc10752c9
.word 0x3f1cda90
.word 0x3d945d7e
.word 0xc10752c9
.word 0x3f1cda90
.word 0x3d945d7e
.word 0xc10752c9
.word 0x3f1cda90
.word 0x3f5a6ec8
.word 0xbf558318
.word 0x3f362e08
.word 0x3f5a6ec8
.word 0xbf558318
.word 0x3f362e08
.word 0x3f5a6ec8
.word 0xbf558318
.word 0x3f362e08
.word 0x3f5a6ec8
.word 0xbf558318
.word 0x3f362e08
.word 0x3f5a6ec8
.word 0xbf558318
.word 0x3f362e08
.word 0x3e1a7610
.word 0xc0b24fef
.word 0x3f572ca5
.word 0x3e1a7610
.word 0xc0b24fef
.word 0x3f572ca5
.word 0x3e1a7610
.word 0xc0b24fef
.word 0x3f572ca5
.word 0x3e1a7610
.word 0xc0b24fef
.word 0x3f572ca5
.word 0x3e1a7610
.word 0xc0b24fef
.word 0x3f572ca5
.word 0x3dc927b6
.word 0xc0fdc307
.word 0x3f47657e
.word 0x3dc927b6
.word 0xc0fdc307
.word 0x3f47657e
.word 0x3dc927b6
.word 0xc0fdc307
.word 0x3f47657e
.word 0x3dc927b6
.word 0xc0fdc307
.word 0x3f47657e
.word 0x3dc927b6
.word 0xc0fdc307
.word 0x3f47657e
.word 0x3dab7908
.word 0xc09bf385
.word 0x3ed0eacb
.word 0x3dab7908
.word 0xc09bf385
.word 0x3ed0eacb
.word 0x3dab7908
.word 0xc09bf385
.word 0x3ed0eacb
.word 0x3dab7908
.word 0xc09bf385
.word 0x3ed0eacb
.word 0x3dab7908
.word 0xc09bf385
.word 0x3ed0eacb
.word 0x3f3322c2
.word 0xbf8ebfc4
.word 0x3f47c6f0
.word 0x3f3322c2
.word 0xbf8ebfc4
.word 0x3f47c6f0
.word 0x3f3322c2
.word 0xbf8ebfc4
.word 0x3f47c6f0
.word 0x3f3322c2
.word 0xbf8ebfc4
.word 0x3f47c6f0
.word 0x3f3322c2
.word 0xbf8ebfc4
.word 0x3f47c6f0
.word 0x3e121441
.word 0xbed195c2
.word 0x3d6f2ffc
.word 0x3e121441
.word 0xbed195c2
.word 0x3d6f2ffc
.word 0x3e121441
.word 0xbed195c2
.word 0x3d6f2ffc
.word 0x3e121441
.word 0xbed195c2
.word 0x3d6f2ffc
.word 0x3e121441
.word 0xbed195c2
.word 0x3d6f2ffc
.word 0x3efd56be
.word 0xbf629a42
.word 0x3ee03f3c
.word 0x3efd56be
.word 0xbf629a42
.word 0x3ee03f3c
.word 0x3efd56be
.word 0xbf629a42
.word 0x3ee03f3c
.word 0x3efd56be
.word 0xbf629a42
.word 0x3ee03f3c
.word 0x3efd56be
.word 0xbf629a42
.word 0x3ee03f3c
.word 0x3f22875e
.word 0xbea27690
.word 0x3e4e49e0
.word 0x3f22875e
.word 0xbea27690
.word 0x3e4e49e0
.word 0x3f22875e
.word 0xbea27690
.word 0x3e4e49e0
.word 0x3f22875e
.word 0xbea27690
.word 0x3e4e49e0
.word 0x3f22875e
.word 0xbea27690
.word 0x3e4e49e0
.word 0x3de2a642
.word 0xbe0c9f19
.word 0x3c78ff90
.word 0x3de2a642
.word 0xbe0c9f19
.word 0x3c78ff90
.word 0x3de2a642
.word 0xbe0c9f19
.word 0x3c78ff90
.word 0x3de2a642
.word 0xbe0c9f19
.word 0x3c78ff90
.word 0x3de2a642
.word 0xbe0c9f19
.word 0x3c78ff90
.word 0x3d2d7e0a
.word 0xc1bca529
.word 0x3f7fb0fd
.word 0x3d2d7e0a
.word 0xc1bca529
.word 0x3f7fb0fd
.word 0x3d2d7e0a
.word 0xc1bca529
.word 0x3f7fb0fd
.word 0x3d2d7e0a
.word 0xc1bca529
.word 0x3f7fb0fd
.word 0x3d2d7e0a
.word 0xc1bca529
.word 0x3f7fb0fd
.word 0x3da56498
.word 0xc1287594
.word 0x3f59abf5
.word 0x3da56498
.word 0xc1287594
.word 0x3f59abf5
.word 0x3da56498
.word 0xc1287594
.word 0x3f59abf5
.word 0x3da56498
.word 0xc1287594
.word 0x3f59abf5
.word 0x3da56498
.word 0xc1287594
.word 0x3f59abf5
.word 0x3ee0f056
.word 0xbf41e617
.word 0x3eaa5f5e
.word 0x3ee0f056
.word 0xbf41e617
.word 0x3eaa5f5e
.word 0x3ee0f056
.word 0xbf41e617
.word 0x3eaa5f5e
.word 0x3ee0f056
.word 0xbf41e617
.word 0x3eaa5f5e
.word 0x3ee0f056
.word 0xbf41e617
.word 0x3eaa5f5e
.word 0x3f0e5ddb
.word 0xbfa69d16
.word 0x3f395070
.word 0x3f0e5ddb
.word 0xbfa69d16
.word 0x3f395070
.word 0x3f0e5ddb
.word 0xbfa69d16
.word 0x3f395070
.word 0x3f0e5ddb
.word 0xbfa69d16
.word 0x3f395070
.word 0x3f0e5ddb
.word 0xbfa69d16
.word 0x3f395070
.word 0x3f6d0092
.word 0xbf6236b3
.word 0x3f516d24
.word 0x3f6d0092
.word 0xbf6236b3
.word 0x3f516d24
.word 0x3f6d0092
.word 0xbf6236b3
.word 0x3f516d24
.word 0x3f6d0092
.word 0xbf6236b3
.word 0x3f516d24
.word 0x3f6d0092
.word 0xbf6236b3
.word 0x3f516d24
.word 0x3f150090
.word 0xbfc02733
.word 0x3f5fae7b
.word 0x3f150090
.word 0xbfc02733
.word 0x3f5fae7b
.word 0x3f150090
.word 0xbfc02733
.word 0x3f5fae7b
.word 0x3f150090
.word 0xbfc02733
.word 0x3f5fae7b
.word 0x3f150090
.word 0xbfc02733
.word 0x3f5fae7b
.word 0x3f07a73d
.word 0xbf1c63cc
.word 0x3ea5bd96
.word 0x3f07a73d
.word 0xbf1c63cc
.word 0x3ea5bd96
.word 0x3f07a73d
.word 0xbf1c63cc
.word 0x3ea5bd96
.word 0x3f07a73d
.word 0xbf1c63cc
.word 0x3ea5bd96
.word 0x3f07a73d
.word 0xbf1c63cc
.word 0x3ea5bd96
.word 0x3ecf85e0
.word 0xbf07c8ad
.word 0x3e5c248d
.word 0x3ecf85e0
.word 0xbf07c8ad
.word 0x3e5c248d
.word 0x3ecf85e0
.word 0xbf07c8ad
.word 0x3e5c248d
.word 0x3ecf85e0
.word 0xbf07c8ad
.word 0x3e5c248d
.word 0x3ecf85e0
.word 0xbf07c8ad
.word 0x3e5c248d
.word 0x3ef5b687
.word 0xbf25644f
.word 0x3e9ebeec
.word 0x3ef5b687
.word 0xbf25644f
.word 0x3e9ebeec
.word 0x3ef5b687
.word 0xbf25644f
.word 0x3e9ebeec
.word 0x3ef5b687
.word 0xbf25644f
.word 0x3e9ebeec
.word 0x3ef5b687
.word 0xbf25644f
.word 0x3e9ebeec
.word 0x3f0d4e12
.word 0xbf9aafe1
.word 0x3f2ac417
.word 0x3f0d4e12
.word 0xbf9aafe1
.word 0x3f2ac417
.word 0x3f0d4e12
.word 0xbf9aafe1
.word 0x3f2ac417
.word 0x3f0d4e12
.word 0xbf9aafe1
.word 0x3f2ac417
.word 0x3f0d4e12
.word 0xbf9aafe1
.word 0x3f2ac417
.word 0x3f78e626
.word 0xbf6618b8
.word 0x3f5fb6cf
.word 0x3f78e626
.word 0xbf6618b8
.word 0x3f5fb6cf
.word 0x3f78e626
.word 0xbf6618b8
.word 0x3f5fb6cf
.word 0x3f78e626
.word 0xbf6618b8
.word 0x3f5fb6cf
.word 0x3f78e626
.word 0xbf6618b8
.word 0x3f5fb6cf
.word 0x534dcb57
.word 0xc192e5ee
.word 0x54d85b38
.word 0x534dcb57
.word 0xc192e5ee
.word 0x54d85b38
.word 0x534dcb57
.word 0xc192e5ee
.word 0x54d85b38
.word 0x534dcb57
.word 0xc192e5ee
.word 0x54d85b38
.word 0x534dcb57
.word 0xc192e5ee
.word 0x54d85b38
.word 0x5479182d
.word 0xc04e3852
.word 0x54915083
.word 0x5479182d
.word 0xc04e3852
.word 0x54915083
.word 0x5479182d
.word 0xc04e3852
.word 0x54915083
.word 0x5479182d
.word 0xc04e3852
.word 0x54915083
.word 0x5479182d
.word 0xc04e3852
.word 0x54915083
.word 0x53598ea5
.word 0xc133bb46
.word 0x53c5ef23
.word 0x53598ea5
.word 0xc133bb46
.word 0x53c5ef23
.word 0x53598ea5
.word 0xc133bb46
.word 0x53c5ef23
.word 0x53598ea5
.word 0xc133bb46
.word 0x53c5ef23
.word 0x53598ea5
.word 0xc133bb46
.word 0x53c5ef23
.word 0x543c7d3c
.word 0xc066f57d
.word 0x5428350f
.word 0x543c7d3c
.word 0xc066f57d
.word 0x5428350f
.word 0x543c7d3c
.word 0xc066f57d
.word 0x5428350f
.word 0x543c7d3c
.word 0xc066f57d
.word 0x5428350f
.word 0x543c7d3c
.word 0xc066f57d
.word 0x5428350f
.word 0x54954ef4
.word 0xc01e67a4
.word 0x5463196c
.word 0x54954ef4
.word 0xc01e67a4
.word 0x5463196c
.word 0x54954ef4
.word 0xc01e67a4
.word 0x5463196c
.word 0x54954ef4
.word 0xc01e67a4
.word 0x5463196c
.word 0x54954ef4
.word 0xc01e67a4
.word 0x5463196c
.word 0x548436e3
.word 0xc042dc89
.word 0x54928df9
.word 0x548436e3
.word 0xc042dc89
.word 0x54928df9
.word 0x548436e3
.word 0xc042dc89
.word 0x54928df9
.word 0x548436e3
.word 0xc042dc89
.word 0x54928df9
.word 0x548436e3
.word 0xc042dc89
.word 0x54928df9
.word 0x5432530e
.word 0xc04dae06
.word 0x53745bac
.word 0x5432530e
.word 0xc04dae06
.word 0x53745bac
.word 0x5432530e
.word 0xc04dae06
.word 0x53745bac
.word 0x5432530e
.word 0xc04dae06
.word 0x53745bac
.word 0x5432530e
.word 0xc04dae06
.word 0x53745bac
.word 0x54c48a6f
.word 0xbfaba8d5
.word 0x527285de
.word 0x54c48a6f
.word 0xbfaba8d5
.word 0x527285de
.word 0x54c48a6f
.word 0xbfaba8d5
.word 0x527285de
.word 0x54c48a6f
.word 0xbfaba8d5
.word 0x527285de
.word 0x54c48a6f
.word 0xbfaba8d5
.word 0x527285de
.word 0x54b4bd6c
.word 0xc0025a6e
.word 0x5460404f
.word 0x54b4bd6c
.word 0xc0025a6e
.word 0x5460404f
.word 0x54b4bd6c
.word 0xc0025a6e
.word 0x5460404f
.word 0x54b4bd6c
.word 0xc0025a6e
.word 0x5460404f
.word 0x54b4bd6c
.word 0xc0025a6e
.word 0x5460404f
.word 0x54788342
.word 0xc04ed1c7
.word 0x54918a89
.word 0x54788342
.word 0xc04ed1c7
.word 0x54918a89
.word 0x54788342
.word 0xc04ed1c7
.word 0x54918a89
.word 0x54788342
.word 0xc04ed1c7
.word 0x54918a89
.word 0x54788342
.word 0xc04ed1c7
.word 0x54918a89
.word 0x537d89a0
.word 0xc1190f1f
.word 0x53bcb1dc
.word 0x537d89a0
.word 0xc1190f1f
.word 0x53bcb1dc
.word 0x537d89a0
.word 0xc1190f1f
.word 0x53bcb1dc
.word 0x537d89a0
.word 0xc1190f1f
.word 0x53bcb1dc
.word 0x537d89a0
.word 0xc1190f1f
.word 0x53bcb1dc
.word 0x53b9ce0c
.word 0xc0c238a6
.word 0x534f7431
.word 0x53b9ce0c
.word 0xc0c238a6
.word 0x534f7431
.word 0x53b9ce0c
.word 0xc0c238a6
.word 0x534f7431
.word 0x53b9ce0c
.word 0xc0c238a6
.word 0x534f7431
.word 0x53b9ce0c
.word 0xc0c238a6
.word 0x534f7431
.word 0x54a11cc4
.word 0xc00369b5
.word 0x5415a1fb
.word 0x54a11cc4
.word 0xc00369b5
.word 0x5415a1fb
.word 0x54a11cc4
.word 0xc00369b5
.word 0x5415a1fb
.word 0x54a11cc4
.word 0xc00369b5
.word 0x5415a1fb
.word 0x54a11cc4
.word 0xc00369b5
.word 0x5415a1fb
.word 0x548c4283
.word 0xc040ea56
.word 0x54a6c91b
.word 0x548c4283
.word 0xc040ea56
.word 0x54a6c91b
.word 0x548c4283
.word 0xc040ea56
.word 0x54a6c91b
.word 0x548c4283
.word 0xc040ea56
.word 0x54a6c91b
.word 0x548c4283
.word 0xc040ea56
.word 0x54a6c91b
.word 0x54b382f5
.word 0xbfd9340b
.word 0x53c27400
.word 0x54b382f5
.word 0xbfd9340b
.word 0x53c27400
.word 0x54b382f5
.word 0xbfd9340b
.word 0x53c27400
.word 0x54b382f5
.word 0xbfd9340b
.word 0x53c27400
.word 0x54b382f5
.word 0xbfd9340b
.word 0x53c27400
.word 0x54b03b3b
.word 0xc005b7f8
.word 0x54606b5a
.word 0x54b03b3b
.word 0xc005b7f8
.word 0x54606b5a
.word 0x54b03b3b
.word 0xc005b7f8
.word 0x54606b5a
.word 0x54b03b3b
.word 0xc005b7f8
.word 0x54606b5a
.word 0x54b03b3b
.word 0xc005b7f8
.word 0x54606b5a
.word 0x548d4a71
.word 0xc046c9a2
.word 0x54b6db72
.word 0x548d4a71
.word 0xc046c9a2
.word 0x54b6db72
.word 0x548d4a71
.word 0xc046c9a2
.word 0x54b6db72
.word 0x548d4a71
.word 0xc046c9a2
.word 0x54b6db72
.word 0x548d4a71
.word 0xc046c9a2
.word 0x54b6db72
.word 0x540cf910
.word 0xc0de23a3
.word 0x54e94e72
.word 0x540cf910
.word 0xc0de23a3
.word 0x54e94e72
.word 0x540cf910
.word 0xc0de23a3
.word 0x54e94e72
.word 0x540cf910
.word 0xc0de23a3
.word 0x54e94e72
.word 0x540cf910
.word 0xc0de23a3
.word 0x54e94e72
.word 0x54adb3a8
.word 0xc0178dc0
.word 0x549b549c
.word 0x54adb3a8
.word 0xc0178dc0
.word 0x549b549c
.word 0x54adb3a8
.word 0xc0178dc0
.word 0x549b549c
.word 0x54adb3a8
.word 0xc0178dc0
.word 0x549b549c
.word 0x54adb3a8
.word 0xc0178dc0
.word 0x549b549c
.word 0x5436cf07
.word 0xc089094d
.word 0x54876dbd
.word 0x5436cf07
.word 0xc089094d
.word 0x54876dbd
.word 0x5436cf07
.word 0xc089094d
.word 0x54876dbd
.word 0x5436cf07
.word 0xc089094d
.word 0x54876dbd
.word 0x5436cf07
.word 0xc089094d
.word 0x54876dbd
.word 0x54cad8a7
.word 0xc0192f18
.word 0x54e58336
.word 0x54cad8a7
.word 0xc0192f18
.word 0x54e58336
.word 0x54cad8a7
.word 0xc0192f18
.word 0x54e58336
.word 0x54cad8a7
.word 0xc0192f18
.word 0x54e58336
.word 0x54cad8a7
.word 0xc0192f18
.word 0x54e58336
.word 0x53bb1509
.word 0xc0cb0d5a
.word 0x53a31b80
.word 0x53bb1509
.word 0xc0cb0d5a
.word 0x53a31b80
.word 0x53bb1509
.word 0xc0cb0d5a
.word 0x53a31b80
.word 0x53bb1509
.word 0xc0cb0d5a
.word 0x53a31b80
.word 0x53bb1509
.word 0xc0cb0d5a
.word 0x53a31b80
.word 0x549fc5ce
.word 0xc014590c
.word 0x5464af77
.word 0x549fc5ce
.word 0xc014590c
.word 0x5464af77
.word 0x549fc5ce
.word 0xc014590c
.word 0x5464af77
.word 0x549fc5ce
.word 0xc014590c
.word 0x5464af77
.word 0x549fc5ce
.word 0xc014590c
.word 0x5464af77
.word 0x54910520
.word 0xc05c8a9a
.word 0x54f3bbb2
.word 0x54910520
.word 0xc05c8a9a
.word 0x54f3bbb2
.word 0x54910520
.word 0xc05c8a9a
.word 0x54f3bbb2
.word 0x54910520
.word 0xc05c8a9a
.word 0x54f3bbb2
.word 0x54910520
.word 0xc05c8a9a
.word 0x54f3bbb2
.word 0x54ea70f1
.word 0xbff2ad38
.word 0x54bc7acb
.word 0x54ea70f1
.word 0xbff2ad38
.word 0x54bc7acb
.word 0x54ea70f1
.word 0xbff2ad38
.word 0x54bc7acb
.word 0x54ea70f1
.word 0xbff2ad38
.word 0x54bc7acb
.word 0x54ea70f1
.word 0xbff2ad38
.word 0x54bc7acb
.word 0x5482a347
.word 0xc054d12c
.word 0x54b267d4
.word 0x5482a347
.word 0xc054d12c
.word 0x54b267d4
.word 0x5482a347
.word 0xc054d12c
.word 0x54b267d4
.word 0x5482a347
.word 0xc054d12c
.word 0x54b267d4
.word 0x5482a347
.word 0xc054d12c
.word 0x54b267d4
.word 0x5370f4b0
.word 0xc182c834
.word 0x54ec62c7
.word 0x5370f4b0
.word 0xc182c834
.word 0x54ec62c7
.word 0x5370f4b0
.word 0xc182c834
.word 0x54ec62c7
.word 0x5370f4b0
.word 0xc182c834
.word 0x54ec62c7
.word 0x5370f4b0
.word 0xc182c834
.word 0x54ec62c7
.word 0x54cd83d0
.word 0xbfb8ec27
.word 0x53a3a299
.word 0x54cd83d0
.word 0xbfb8ec27
.word 0x53a3a299
.word 0x54cd83d0
.word 0xbfb8ec27
.word 0x53a3a299
.word 0x54cd83d0
.word 0xbfb8ec27
.word 0x53a3a299
.word 0x54cd83d0
.word 0xbfb8ec27
.word 0x53a3a299
.word 0x5465c518
.word 0xc05239b3
.word 0x5472bdde
.word 0x5465c518
.word 0xc05239b3
.word 0x5472bdde
.word 0x5465c518
.word 0xc05239b3
.word 0x5472bdde
.word 0x5465c518
.word 0xc05239b3
.word 0x5472bdde
.word 0x5465c518
.word 0xc05239b3
.word 0x5472bdde
.word 0x54821c6b
.word 0xc0306bec
.word 0x544d531f
.word 0x54821c6b
.word 0xc0306bec
.word 0x544d531f
.word 0x54821c6b
.word 0xc0306bec
.word 0x544d531f
.word 0x54821c6b
.word 0xc0306bec
.word 0x544d531f
.word 0x54821c6b
.word 0xc0306bec
.word 0x544d531f
.word 0x54b0d594
.word 0xc00c44fc
.word 0x548391cf
.word 0x54b0d594
.word 0xc00c44fc
.word 0x548391cf
.word 0x54b0d594
.word 0xc00c44fc
.word 0x548391cf
.word 0x54b0d594
.word 0xc00c44fc
.word 0x548391cf
.word 0x54b0d594
.word 0xc00c44fc
.word 0x548391cf
.word 0x548a7ecd
.word 0xc0453d98
.word 0x54aad399
.word 0x548a7ecd
.word 0xc0453d98
.word 0x54aad399
.word 0x548a7ecd
.word 0xc0453d98
.word 0x54aad399
.word 0x548a7ecd
.word 0xc0453d98
.word 0x54aad399
.word 0x548a7ecd
.word 0xc0453d98
.word 0x54aad399
.word 0x54c33195
.word 0xc01dc84e
.word 0x54e1388c
.word 0x54c33195
.word 0xc01dc84e
.word 0x54e1388c
.word 0x54c33195
.word 0xc01dc84e
.word 0x54e1388c
.word 0x54c33195
.word 0xc01dc84e
.word 0x54e1388c
.word 0x54c33195
.word 0xc01dc84e
.word 0x54e1388c
.word 0x54747ba9
.word 0xc044be05
.word 0x546f9099
.word 0x54747ba9
.word 0xc044be05
.word 0x546f9099
.word 0x54747ba9
.word 0xc044be05
.word 0x546f9099
.word 0x54747ba9
.word 0xc044be05
.word 0x546f9099
.word 0x54747ba9
.word 0xc044be05
.word 0x546f9099
.word 0x54f85bd9
.word 0xc000a5a1
.word 0x54f33a6f
.word 0x54f85bd9
.word 0xc000a5a1
.word 0x54f33a6f
.word 0x54f85bd9
.word 0xc000a5a1
.word 0x54f33a6f
.word 0x54f85bd9
.word 0xc000a5a1
.word 0x54f33a6f
.word 0x54f85bd9
.word 0xc000a5a1
.word 0x54f33a6f
.word 0x54cbab41
.word 0xc003043e
.word 0x54a0f00a
.word 0x54cbab41
.word 0xc003043e
.word 0x54a0f00a
.word 0x54cbab41
.word 0xc003043e
.word 0x54a0f00a
.word 0x54cbab41
.word 0xc003043e
.word 0x54a0f00a
.word 0x54cbab41
.word 0xc003043e
.word 0x54a0f00a
.word 0x53a206ab
.word 0xc116bc36
.word 0x547b383d
.word 0x53a206ab
.word 0xc116bc36
.word 0x547b383d
.word 0x53a206ab
.word 0xc116bc36
.word 0x547b383d
.word 0x53a206ab
.word 0xc116bc36
.word 0x547b383d
.word 0x53a206ab
.word 0xc116bc36
.word 0x547b383d
.word 0x54203e5e
.word 0xc0980f8a
.word 0x54797615
.word 0x54203e5e
.word 0xc0980f8a
.word 0x54797615
.word 0x54203e5e
.word 0xc0980f8a
.word 0x54797615
.word 0x54203e5e
.word 0xc0980f8a
.word 0x54797615
.word 0x54203e5e
.word 0xc0980f8a
.word 0x54797615
.word 0x542bb19d
.word 0xc084225c
.word 0x5444f507
.word 0x542bb19d
.word 0xc084225c
.word 0x5444f507
.word 0x542bb19d
.word 0xc084225c
.word 0x5444f507
.word 0x542bb19d
.word 0xc084225c
.word 0x5444f507
.word 0x542bb19d
.word 0xc084225c
.word 0x5444f507
.word 0x54a1a10e
.word 0xbfd9dd5e
.word 0x5318d497
.word 0x54a1a10e
.word 0xbfd9dd5e
.word 0x5318d497
.word 0x54a1a10e
.word 0xbfd9dd5e
.word 0x5318d497
.word 0x54a1a10e
.word 0xbfd9dd5e
.word 0x5318d497
.word 0x54a1a10e
.word 0xbfd9dd5e
.word 0x5318d497
.word 0x548c290e
.word 0xc00c12c4
.word 0x53cb0ba0
.word 0x548c290e
.word 0xc00c12c4
.word 0x53cb0ba0
.word 0x548c290e
.word 0xc00c12c4
.word 0x53cb0ba0
.word 0x548c290e
.word 0xc00c12c4
.word 0x53cb0ba0
.word 0x548c290e
.word 0xc00c12c4
.word 0x53cb0ba0
.word 0x54ffb20d
.word 0xbfa384d1
.word 0x540d4c1f
.word 0x54ffb20d
.word 0xbfa384d1
.word 0x540d4c1f
.word 0x54ffb20d
.word 0xbfa384d1
.word 0x540d4c1f
.word 0x54ffb20d
.word 0xbfa384d1
.word 0x540d4c1f
.word 0x54ffb20d
.word 0xbfa384d1
.word 0x540d4c1f
.word 0x3ec6f4cb
.word 0xc011ecc6
.word 0x3f62d155
.word 0x3ec6f4cb
.word 0xc011ecc6
.word 0x3f62d155
.word 0x3ec6f4cb
.word 0xc011ecc6
.word 0x3f62d155
.word 0x3ec6f4cb
.word 0xc011ecc6
.word 0x3f62d155
.word 0x3ec6f4cb
.word 0xc011ecc6
.word 0x3f62d155
.word 0x3f041622
.word 0xbf500e54
.word 0x3ed6b2c0
.word 0x3f041622
.word 0xbf500e54
.word 0x3ed6b2c0
.word 0x3f041622
.word 0xbf500e54
.word 0x3ed6b2c0
.word 0x3f041622
.word 0xbf500e54
.word 0x3ed6b2c0
.word 0x3f041622
.word 0xbf500e54
.word 0x3ed6b2c0
.word 0x3effc274
.word 0xbfa0c8df
.word 0x3f20a238
.word 0x3effc274
.word 0xbfa0c8df
.word 0x3f20a238
.word 0x3effc274
.word 0xbfa0c8df
.word 0x3f20a238
.word 0x3effc274
.word 0xbfa0c8df
.word 0x3f20a238
.word 0x3effc274
.word 0xbfa0c8df
.word 0x3f20a238
.word 0x3d627d58
.word 0xc0e34503
.word 0x3ec91234
.word 0x3d627d58
.word 0xc0e34503
.word 0x3ec91234
.word 0x3d627d58
.word 0xc0e34503
.word 0x3ec91234
.word 0x3d627d58
.word 0xc0e34503
.word 0x3ec91234
.word 0x3d627d58
.word 0xc0e34503
.word 0x3ec91234
.word 0x3f4cb6f9
.word 0xbe9cd08b
.word 0x3e7acc88
.word 0x3f4cb6f9
.word 0xbe9cd08b
.word 0x3e7acc88
.word 0x3f4cb6f9
.word 0xbe9cd08b
.word 0x3e7acc88
.word 0x3f4cb6f9
.word 0xbe9cd08b
.word 0x3e7acc88
.word 0x3f4cb6f9
.word 0xbe9cd08b
.word 0x3e7acc88
.word 0x3ded7224
.word 0xbe571875
.word 0x3cc7818c
.word 0x3ded7224
.word 0xbe571875
.word 0x3cc7818c
.word 0x3ded7224
.word 0xbe571875
.word 0x3cc7818c
.word 0x3ded7224
.word 0xbe571875
.word 0x3cc7818c
.word 0x3ded7224
.word 0xbe571875
.word 0x3cc7818c
.word 0x3f0336f2
.word 0xbf61c854
.word 0x3ee773f3
.word 0x3f0336f2
.word 0xbf61c854
.word 0x3ee773f3
.word 0x3f0336f2
.word 0xbf61c854
.word 0x3ee773f3
.word 0x3f0336f2
.word 0xbf61c854
.word 0x3ee773f3
.word 0x3f0336f2
.word 0xbf61c854
.word 0x3ee773f3
.word 0x3f0da925
.word 0xbf39b54f
.word 0x3ecd8721
.word 0x3f0da925
.word 0xbf39b54f
.word 0x3ecd8721
.word 0x3f0da925
.word 0xbf39b54f
.word 0x3ecd8721
.word 0x3f0da925
.word 0xbf39b54f
.word 0x3ecd8721
.word 0x3f0da925
.word 0xbf39b54f
.word 0x3ecd8721
.word 0x3e12849c
.word 0xc015d4cb
.word 0x3eab81f2
.word 0x3e12849c
.word 0xc015d4cb
.word 0x3eab81f2
.word 0x3e12849c
.word 0xc015d4cb
.word 0x3eab81f2
.word 0x3e12849c
.word 0xc015d4cb
.word 0x3eab81f2
.word 0x3e12849c
.word 0xc015d4cb
.word 0x3eab81f2
.word 0x3f61a9af
.word 0xbf324500
.word 0x3f1d24cf
.word 0x3f61a9af
.word 0xbf324500
.word 0x3f1d24cf
.word 0x3f61a9af
.word 0xbf324500
.word 0x3f1d24cf
.word 0x3f61a9af
.word 0xbf324500
.word 0x3f1d24cf
.word 0x3f61a9af
.word 0xbf324500
.word 0x3f1d24cf
.word 0x3f19d02d
.word 0xbec4f701
.word 0x3e6caf96
.word 0x3f19d02d
.word 0xbec4f701
.word 0x3e6caf96
.word 0x3f19d02d
.word 0xbec4f701
.word 0x3e6caf96
.word 0x3f19d02d
.word 0xbec4f701
.word 0x3e6caf96
.word 0x3f19d02d
.word 0xbec4f701
.word 0x3e6caf96
.word 0x3e23e9e4
.word 0xbefa6a88
.word 0x3da0569f
.word 0x3e23e9e4
.word 0xbefa6a88
.word 0x3da0569f
.word 0x3e23e9e4
.word 0xbefa6a88
.word 0x3da0569f
.word 0x3e23e9e4
.word 0xbefa6a88
.word 0x3da0569f
.word 0x3e23e9e4
.word 0xbefa6a88
.word 0x3da0569f
.word 0x3f436c81
.word 0xbf083778
.word 0x3ecff7f9
.word 0x3f436c81
.word 0xbf083778
.word 0x3ecff7f9
.word 0x3f436c81
.word 0xbf083778
.word 0x3ecff7f9
.word 0x3f436c81
.word 0xbf083778
.word 0x3ecff7f9
.word 0x3f436c81
.word 0xbf083778
.word 0x3ecff7f9
.word 0x3bf01276
.word 0xc2ea7f69
.word 0x3f5be85c
.word 0x3bf01276
.word 0xc2ea7f69
.word 0x3f5be85c
.word 0x3bf01276
.word 0xc2ea7f69
.word 0x3f5be85c
.word 0x3bf01276
.word 0xc2ea7f69
.word 0x3f5be85c
.word 0x3bf01276
.word 0xc2ea7f69
.word 0x3f5be85c
.word 0x3f3bc05c
.word 0xbf41e408
.word 0x3f0e3343
.word 0x3f3bc05c
.word 0xbf41e408
.word 0x3f0e3343
.word 0x3f3bc05c
.word 0xbf41e408
.word 0x3f0e3343
.word 0x3f3bc05c
.word 0xbf41e408
.word 0x3f0e3343
.word 0x3f3bc05c
.word 0xbf41e408
.word 0x3f0e3343
.word 0x3e9ff234
.word 0xbfb2ec29
.word 0x3edf93eb
.word 0x3e9ff234
.word 0xbfb2ec29
.word 0x3edf93eb
.word 0x3e9ff234
.word 0xbfb2ec29
.word 0x3edf93eb
.word 0x3e9ff234
.word 0xbfb2ec29
.word 0x3edf93eb
.word 0x3e9ff234
.word 0xbfb2ec29
.word 0x3edf93eb
.word 0x3ece236f
.word 0xbffe07c9
.word 0x3f4c8d6e
.word 0x3ece236f
.word 0xbffe07c9
.word 0x3f4c8d6e
.word 0x3ece236f
.word 0xbffe07c9
.word 0x3f4c8d6e
.word 0x3ece236f
.word 0xbffe07c9
.word 0x3f4c8d6e
.word 0x3ece236f
.word 0xbffe07c9
.word 0x3f4c8d6e
.word 0x3f4775e5
.word 0xbeb63b8c
.word 0x3e8dfc36
.word 0x3f4775e5
.word 0xbeb63b8c
.word 0x3e8dfc36
.word 0x3f4775e5
.word 0xbeb63b8c
.word 0x3e8dfc36
.word 0x3f4775e5
.word 0xbeb63b8c
.word 0x3e8dfc36
.word 0x3f4775e5
.word 0xbeb63b8c
.word 0x3e8dfc36
.word 0x3f569a97
.word 0xbf681b80
.word 0x3f429327
.word 0x3f569a97
.word 0xbf681b80
.word 0x3f429327
.word 0x3f569a97
.word 0xbf681b80
.word 0x3f429327
.word 0x3f569a97
.word 0xbf681b80
.word 0x3f429327
.word 0x3f569a97
.word 0xbf681b80
.word 0x3f429327
.word 0x3e504c8a
.word 0xbff52d9f
.word 0x3ec77e60
.word 0x3e504c8a
.word 0xbff52d9f
.word 0x3ec77e60
.word 0x3e504c8a
.word 0xbff52d9f
.word 0x3ec77e60
.word 0x3e504c8a
.word 0xbff52d9f
.word 0x3ec77e60
.word 0x3e504c8a
.word 0xbff52d9f
.word 0x3ec77e60
.word 0x3f07f6b2
.word 0xbfbbb21d
.word 0x3f475f9b
.word 0x3f07f6b2
.word 0xbfbbb21d
.word 0x3f475f9b
.word 0x3f07f6b2
.word 0xbfbbb21d
.word 0x3f475f9b
.word 0x3f07f6b2
.word 0xbfbbb21d
.word 0x3f475f9b
.word 0x3f07f6b2
.word 0xbfbbb21d
.word 0x3f475f9b
.word 0x3ec3cc0c
.word 0xbf8044db
.word 0x3ec43560
.word 0x3ec3cc0c
.word 0xbf8044db
.word 0x3ec43560
.word 0x3ec3cc0c
.word 0xbf8044db
.word 0x3ec43560
.word 0x3ec3cc0c
.word 0xbf8044db
.word 0x3ec43560
.word 0x3ec3cc0c
.word 0xbf8044db
.word 0x3ec43560
.word 0x3e05d901
.word 0xbe65429f
.word 0x3cefbbe6
.word 0x3e05d901
.word 0xbe65429f
.word 0x3cefbbe6
.word 0x3e05d901
.word 0xbe65429f
.word 0x3cefbbe6
.word 0x3e05d901
.word 0xbe65429f
.word 0x3cefbbe6
.word 0x3e05d901
.word 0xbe65429f
.word 0x3cefbbe6
.word 0x3ea1dfae
.word 0xbe935347
.word 0x3dba5033
.word 0x3ea1dfae
.word 0xbe935347
.word 0x3dba5033
.word 0x3ea1dfae
.word 0xbe935347
.word 0x3dba5033
.word 0x3ea1dfae
.word 0xbe935347
.word 0x3dba5033
.word 0x3ea1dfae
.word 0xbe935347
.word 0x3dba5033
.word 0x3efce776
.word 0xbe6d2670
.word 0x3dea4842
.word 0x3efce776
.word 0xbe6d2670
.word 0x3dea4842
.word 0x3efce776
.word 0xbe6d2670
.word 0x3dea4842
.word 0x3efce776
.word 0xbe6d2670
.word 0x3dea4842
.word 0x3efce776
.word 0xbe6d2670
.word 0x3dea4842
.word 0x3f6aeb6b
.word 0xbf3679e7
.word 0x3f27733b
.word 0x3f6aeb6b
.word 0xbf3679e7
.word 0x3f27733b
.word 0x3f6aeb6b
.word 0xbf3679e7
.word 0x3f27733b
.word 0x3f6aeb6b
.word 0xbf3679e7
.word 0x3f27733b
.word 0x3f6aeb6b
.word 0xbf3679e7
.word 0x3f27733b
.word 0x3f2f7d93
.word 0xbf0163be
.word 0x3eb1654e
.word 0x3f2f7d93
.word 0xbf0163be
.word 0x3eb1654e
.word 0x3f2f7d93
.word 0xbf0163be
.word 0x3eb1654e
.word 0x3f2f7d93
.word 0xbf0163be
.word 0x3eb1654e
.word 0x3f2f7d93
.word 0xbf0163be
.word 0x3eb1654e
.word 0x3f0172b8
.word 0xbf0fe99a
.word 0x3e918a68
.word 0x3f0172b8
.word 0xbf0fe99a
.word 0x3e918a68
.word 0x3f0172b8
.word 0xbf0fe99a
.word 0x3e918a68
.word 0x3f0172b8
.word 0xbf0fe99a
.word 0x3e918a68
.word 0x3f0172b8
.word 0xbf0fe99a
.word 0x3e918a68
.word 0x3e08bb98
.word 0xbfd2b5e6
.word 0x3e611616
.word 0x3e08bb98
.word 0xbfd2b5e6
.word 0x3e611616
.word 0x3e08bb98
.word 0xbfd2b5e6
.word 0x3e611616
.word 0x3e08bb98
.word 0xbfd2b5e6
.word 0x3e611616
.word 0x3e08bb98
.word 0xbfd2b5e6
.word 0x3e611616
.word 0x3e4549f4
.word 0xbfe50811
.word 0x3eb0815f
.word 0x3e4549f4
.word 0xbfe50811
.word 0x3eb0815f
.word 0x3e4549f4
.word 0xbfe50811
.word 0x3eb0815f
.word 0x3e4549f4
.word 0xbfe50811
.word 0x3eb0815f
.word 0x3e4549f4
.word 0xbfe50811
.word 0x3eb0815f
.word 0x3e990e08
.word 0xc02da27f
.word 0x3f4f9f45
.word 0x3e990e08
.word 0xc02da27f
.word 0x3f4f9f45
.word 0x3e990e08
.word 0xc02da27f
.word 0x3f4f9f45
.word 0x3e990e08
.word 0xc02da27f
.word 0x3f4f9f45
.word 0x3e990e08
.word 0xc02da27f
.word 0x3f4f9f45
.word 0x3f4aa35a
.word 0xbec6c584
.word 0x3e9d56b0
.word 0x3f4aa35a
.word 0xbec6c584
.word 0x3e9d56b0
.word 0x3f4aa35a
.word 0xbec6c584
.word 0x3e9d56b0
.word 0x3f4aa35a
.word 0xbec6c584
.word 0x3e9d56b0
.word 0x3f4aa35a
.word 0xbec6c584
.word 0x3e9d56b0
.word 0x3ecb50be
.word 0xbfbf73bd
.word 0x3f180d2a
.word 0x3ecb50be
.word 0xbfbf73bd
.word 0x3f180d2a
.word 0x3ecb50be
.word 0xbfbf73bd
.word 0x3f180d2a
.word 0x3ecb50be
.word 0xbfbf73bd
.word 0x3f180d2a
.word 0x3ecb50be
.word 0xbfbf73bd
.word 0x3f180d2a
.word 0x3f3ca498
.word 0xbf25f38e
.word 0x3ef4931e
.word 0x3f3ca498
.word 0xbf25f38e
.word 0x3ef4931e
.word 0x3f3ca498
.word 0xbf25f38e
.word 0x3ef4931e
.word 0x3f3ca498
.word 0xbf25f38e
.word 0x3ef4931e
.word 0x3f3ca498
.word 0xbf25f38e
.word 0x3ef4931e
.word 0x3f1a664a
.word 0xbf0245fb
.word 0x3e9d244d
.word 0x3f1a664a
.word 0xbf0245fb
.word 0x3e9d244d
.word 0x3f1a664a
.word 0xbf0245fb
.word 0x3e9d244d
.word 0x3f1a664a
.word 0xbf0245fb
.word 0x3e9d244d
.word 0x3f1a664a
.word 0xbf0245fb
.word 0x3e9d244d
.word 0x3e9ba1c5
.word 0xc0230f6b
.word 0x3f4642c1
.word 0x3e9ba1c5
.word 0xc0230f6b
.word 0x3f4642c1
.word 0x3e9ba1c5
.word 0xc0230f6b
.word 0x3f4642c1
.word 0x3e9ba1c5
.word 0xc0230f6b
.word 0x3f4642c1
.word 0x3e9ba1c5
.word 0xc0230f6b
.word 0x3f4642c1
.word 0x3f6f8cc3
.word 0xbf0c00c5
.word 0x3f0301b3
.word 0x3f6f8cc3
.word 0xbf0c00c5
.word 0x3f0301b3
.word 0x3f6f8cc3
.word 0xbf0c00c5
.word 0x3f0301b3
.word 0x3f6f8cc3
.word 0xbf0c00c5
.word 0x3f0301b3
.word 0x3f6f8cc3
.word 0xbf0c00c5
.word 0x3f0301b3
.word 0x3f4d0554
.word 0xbf9b63d4
.word 0x3f78e45a
.word 0x3f4d0554
.word 0xbf9b63d4
.word 0x3f78e45a
.word 0x3f4d0554
.word 0xbf9b63d4
.word 0x3f78e45a
.word 0x3f4d0554
.word 0xbf9b63d4
.word 0x3f78e45a
.word 0x3f4d0554
.word 0xbf9b63d4
.word 0x3f78e45a
.word 0x3f3f3af2
.word 0xbed1be3a
.word 0x3e9cad39
.word 0x3f3f3af2
.word 0xbed1be3a
.word 0x3e9cad39
.word 0x3f3f3af2
.word 0xbed1be3a
.word 0x3e9cad39
.word 0x3f3f3af2
.word 0xbed1be3a
.word 0x3e9cad39
.word 0x3f3f3af2
.word 0xbed1be3a
.word 0x3e9cad39
.word 0x3ece3594
.word 0xbf5a1e04
.word 0x3eafb1ce
.word 0x3ece3594
.word 0xbf5a1e04
.word 0x3eafb1ce
.word 0x3ece3594
.word 0xbf5a1e04
.word 0x3eafb1ce
.word 0x3ece3594
.word 0xbf5a1e04
.word 0x3eafb1ce
.word 0x3ece3594
.word 0xbf5a1e04
.word 0x3eafb1ce
.word 0x3eab84f4
.word 0xbff9cce2
.word 0x3f275d97
.word 0x3eab84f4
.word 0xbff9cce2
.word 0x3f275d97
.word 0x3eab84f4
.word 0xbff9cce2
.word 0x3f275d97
.word 0x3eab84f4
.word 0xbff9cce2
.word 0x3f275d97
.word 0x3eab84f4
.word 0xbff9cce2
.word 0x3f275d97
.word 0x3e94c4b6
.word 0xbe2bcaff
.word 0x3d47aaba
.word 0x3e94c4b6
.word 0xbe2bcaff
.word 0x3d47aaba
.word 0x3e94c4b6
.word 0xbe2bcaff
.word 0x3d47aaba
.word 0x3e94c4b6
.word 0xbe2bcaff
.word 0x3d47aaba
.word 0x3e94c4b6
.word 0xbe2bcaff
.word 0x3d47aaba
.word 0x3f5a2c44
.word 0xbf8046ff
.word 0x3f5aa547
.word 0x3f5a2c44
.word 0xbf8046ff
.word 0x3f5aa547
.word 0x3f5a2c44
.word 0xbf8046ff
.word 0x3f5aa547
.word 0x3f5a2c44
.word 0xbf8046ff
.word 0x3f5aa547
.word 0x3f5a2c44
.word 0xbf8046ff
.word 0x3f5aa547
.word 0x3dc102e6
.word 0xc0c332b1
.word 0x3f132b6e
.word 0x3dc102e6
.word 0xc0c332b1
.word 0x3f132b6e
.word 0x3dc102e6
.word 0xc0c332b1
.word 0x3f132b6e
.word 0x3dc102e6
.word 0xc0c332b1
.word 0x3f132b6e
.word 0x3dc102e6
.word 0xc0c332b1
.word 0x3f132b6e
.word 0x3e90f9ce
.word 0xbd82dde3
.word 0x3c943906
.word 0x3e90f9ce
.word 0xbd82dde3
.word 0x3c943906
.word 0x3e90f9ce
.word 0xbd82dde3
.word 0x3c943906
.word 0x3e90f9ce
.word 0xbd82dde3
.word 0x3c943906
.word 0x3e90f9ce
.word 0xbd82dde3
.word 0x3c943906
.word 0x3f04ba18
.word 0xbcd846d2
.word 0x3c604379
.word 0x3f04ba18
.word 0xbcd846d2
.word 0x3c604379
.word 0x3f04ba18
.word 0xbcd846d2
.word 0x3c604379
.word 0x3f04ba18
.word 0xbcd846d2
.word 0x3c604379
.word 0x3f04ba18
.word 0xbcd846d2
.word 0x3c604379
.word 0x3f6776dc
.word 0xbf0a75c9
.word 0x3efa6124
.word 0x3f6776dc
.word 0xbf0a75c9
.word 0x3efa6124
.word 0x3f6776dc
.word 0xbf0a75c9
.word 0x3efa6124
.word 0x3f6776dc
.word 0xbf0a75c9
.word 0x3efa6124
.word 0x3f6776dc
.word 0xbf0a75c9
.word 0x3efa6124
.word 0x3f7fe221
.word 0xbca0a7ab
.word 0x3ca094ed
.word 0x3f7fe221
.word 0xbca0a7ab
.word 0x3ca094ed
.word 0x3f7fe221
.word 0xbca0a7ab
.word 0x3ca094ed
.word 0x3f7fe221
.word 0xbca0a7ab
.word 0x3ca094ed
.word 0x3f7fe221
.word 0xbca0a7ab
.word 0x3ca094ed
.word 0x3f15e339
.word 0xbe1b2952
.word 0x3db5b18b
.word 0x3f15e339
.word 0xbe1b2952
.word 0x3db5b18b
.word 0x3f15e339
.word 0xbe1b2952
.word 0x3db5b18b
.word 0x3f15e339
.word 0xbe1b2952
.word 0x3db5b18b
.word 0x3f15e339
.word 0xbe1b2952
.word 0x3db5b18b
.word 0x3f2bc219
.word 0xbe5dd70a
.word 0x3e14d6d6
.word 0x3f2bc219
.word 0xbe5dd70a
.word 0x3e14d6d6
.word 0x3f2bc219
.word 0xbe5dd70a
.word 0x3e14d6d6
.word 0x3f2bc219
.word 0xbe5dd70a
.word 0x3e14d6d6
.word 0x3f2bc219
.word 0xbe5dd70a
.word 0x3e14d6d6
.word 0x3f7d2c2b
.word 0xbe4216ac
.word 0x3e3ff1e5
.word 0x3f7d2c2b
.word 0xbe4216ac
.word 0x3e3ff1e5
.word 0x3f7d2c2b
.word 0xbe4216ac
.word 0x3e3ff1e5
.word 0x3f7d2c2b
.word 0xbe4216ac
.word 0x3e3ff1e5
.word 0x3f7d2c2b
.word 0xbe4216ac
.word 0x3e3ff1e5
.word 0x3ed92409
.word 0xbf58f21d
.word 0x3eb803c5
.word 0x3ed92409
.word 0xbf58f21d
.word 0x3eb803c5
.word 0x3ed92409
.word 0xbf58f21d
.word 0x3eb803c5
.word 0x3ed92409
.word 0xbf58f21d
.word 0x3eb803c5
.word 0x3ed92409
.word 0xbf58f21d
.word 0x3eb803c5
.word 0x3e8720b2
.word 0xbf7e8529
.word 0x3e8658bb
.word 0x3e8720b2
.word 0xbf7e8529
.word 0x3e8658bb
.word 0x3e8720b2
.word 0xbf7e8529
.word 0x3e8658bb
.word 0x3e8720b2
.word 0xbf7e8529
.word 0x3e8658bb
.word 0x3e8720b2
.word 0xbf7e8529
.word 0x3e8658bb
.word 0x3f2f8a33
.word 0xbd0993f7
.word 0x3cbcacd7
.word 0x3f2f8a33
.word 0xbd0993f7
.word 0x3cbcacd7
.word 0x3f2f8a33
.word 0xbd0993f7
.word 0x3cbcacd7
.word 0x3f2f8a33
.word 0xbd0993f7
.word 0x3cbcacd7
.word 0x3f2f8a33
.word 0xbd0993f7
.word 0x3cbcacd7
.word 0x3e901ddf
.word 0xc03334fd
.word 0x3f49c56f
.word 0x3e901ddf
.word 0xc03334fd
.word 0x3f49c56f
.word 0x3e901ddf
.word 0xc03334fd
.word 0x3f49c56f
.word 0x3e901ddf
.word 0xc03334fd
.word 0x3f49c56f
.word 0x3e901ddf
.word 0xc03334fd
.word 0x3f49c56f
.word 0x3f626356
.word 0xbf8b7235
.word 0x3f76a1df
.word 0x3f626356
.word 0xbf8b7235
.word 0x3f76a1df
.word 0x3f626356
.word 0xbf8b7235
.word 0x3f76a1df
.word 0x3f626356
.word 0xbf8b7235
.word 0x3f76a1df
.word 0x3f626356
.word 0xbf8b7235
.word 0x3f76a1df
.word 0x3df25e12
.word 0xc0d90c74
.word 0x3f4d7d88
.word 0x3df25e12
.word 0xc0d90c74
.word 0x3f4d7d88
.word 0x3df25e12
.word 0xc0d90c74
.word 0x3f4d7d88
.word 0x3df25e12
.word 0xc0d90c74
.word 0x3f4d7d88
.word 0x3df25e12
.word 0xc0d90c74
.word 0x3f4d7d88
.word 0x3eba5a35
.word 0xc0034722
.word 0x3f3f1fe2
.word 0x3eba5a35
.word 0xc0034722
.word 0x3f3f1fe2
.word 0x3eba5a35
.word 0xc0034722
.word 0x3f3f1fe2
.word 0x3eba5a35
.word 0xc0034722
.word 0x3f3f1fe2
.word 0x3eba5a35
.word 0xc0034722
.word 0x3f3f1fe2
.word 0x3e76b1d4
.word 0xc04fd5b5
.word 0x3f4847bb
.word 0x3e76b1d4
.word 0xc04fd5b5
.word 0x3f4847bb
.word 0x3e76b1d4
.word 0xc04fd5b5
.word 0x3f4847bb
.word 0x3e76b1d4
.word 0xc04fd5b5
.word 0x3f4847bb
.word 0x3e76b1d4
.word 0xc04fd5b5
.word 0x3f4847bb
.word 0x3f69589a
.word 0xbe6872d0
.word 0x3e53e0f3
.word 0x3f69589a
.word 0xbe6872d0
.word 0x3e53e0f3
.word 0x3f69589a
.word 0xbe6872d0
.word 0x3e53e0f3
.word 0x3f69589a
.word 0xbe6872d0
.word 0x3e53e0f3
.word 0x3f69589a
.word 0xbe6872d0
.word 0x3e53e0f3
.word 0x3f5a98f0
.word 0xbe53faae
.word 0x3e35021c
.word 0x3f5a98f0
.word 0xbe53faae
.word 0x3e35021c
.word 0x3f5a98f0
.word 0xbe53faae
.word 0x3e35021c
.word 0x3f5a98f0
.word 0xbe53faae
.word 0x3e35021c
.word 0x3f5a98f0
.word 0xbe53faae
.word 0x3e35021c
.word 0x3e94d173
.word 0xc035eef4
.word 0x3f5385ff
.word 0x3e94d173
.word 0xc035eef4
.word 0x3f5385ff
.word 0x3e94d173
.word 0xc035eef4
.word 0x3f5385ff
.word 0x3e94d173
.word 0xc035eef4
.word 0x3f5385ff
.word 0x3e94d173
.word 0xc035eef4
.word 0x3f5385ff
.word 0x3f1dcac6
.word 0xbf3c4ca3
.word 0x3ee8204c
.word 0x3f1dcac6
.word 0xbf3c4ca3
.word 0x3ee8204c
.word 0x3f1dcac6
.word 0xbf3c4ca3
.word 0x3ee8204c
.word 0x3f1dcac6
.word 0xbf3c4ca3
.word 0x3ee8204c
.word 0x3f1dcac6
.word 0xbf3c4ca3
.word 0x3ee8204c
.word 0x3f0b2724
.word 0xbf7998b9
.word 0x3f07ac16
.word 0x3f0b2724
.word 0xbf7998b9
.word 0x3f07ac16
.word 0x3f0b2724
.word 0xbf7998b9
.word 0x3f07ac16
.word 0x3f0b2724
.word 0xbf7998b9
.word 0x3f07ac16
.word 0x3f0b2724
.word 0xbf7998b9
.word 0x3f07ac16
.word 0x3f237d3e
.word 0xbf202884
.word 0x3ecc904d
.word 0x3f237d3e
.word 0xbf202884
.word 0x3ecc904d
.word 0x3f237d3e
.word 0xbf202884
.word 0x3ecc904d
.word 0x3f237d3e
.word 0xbf202884
.word 0x3ecc904d
.word 0x3f237d3e
.word 0xbf202884
.word 0x3ecc904d
.word 0x3ed7dd42
.word 0xbf1ff5a4
.word 0x3e86e18d
.word 0x3ed7dd42
.word 0xbf1ff5a4
.word 0x3e86e18d
.word 0x3ed7dd42
.word 0xbf1ff5a4
.word 0x3e86e18d
.word 0x3ed7dd42
.word 0xbf1ff5a4
.word 0x3e86e18d
.word 0x3ed7dd42
.word 0xbf1ff5a4
.word 0x3e86e18d
.word 0x3eb13928
.word 0xbff3af45
.word 0x3f28b297
.word 0x3eb13928
.word 0xbff3af45
.word 0x3f28b297
.word 0x3eb13928
.word 0xbff3af45
.word 0x3f28b297
.word 0x3eb13928
.word 0xbff3af45
.word 0x3f28b297
.word 0x3eb13928
.word 0xbff3af45
.word 0x3f28b297
.word 0x3ebdd90b
.word 0xbfacdcdc
.word 0x3f00319e
.word 0x3ebdd90b
.word 0xbfacdcdc
.word 0x3f00319e
.word 0x3ebdd90b
.word 0xbfacdcdc
.word 0x3f00319e
.word 0x3ebdd90b
.word 0xbfacdcdc
.word 0x3f00319e
.word 0x3ebdd90b
.word 0xbfacdcdc
.word 0x3f00319e
.word 0x3e0f4697
.word 0xc07ce392
.word 0x3f0d88db
.word 0x3e0f4697
.word 0xc07ce392
.word 0x3f0d88db
.word 0x3e0f4697
.word 0xc07ce392
.word 0x3f0d88db
.word 0x3e0f4697
.word 0xc07ce392
.word 0x3f0d88db
.word 0x3e0f4697
.word 0xc07ce392
.word 0x3f0d88db
.word 0x3e225f21
.word 0xc08f5e5e
.word 0x3f35ddfe
.word 0x3e225f21
.word 0xc08f5e5e
.word 0x3f35ddfe
.word 0x3e225f21
.word 0xc08f5e5e
.word 0x3f35ddfe
.word 0x3e225f21
.word 0xc08f5e5e
.word 0x3f35ddfe
.word 0x3e225f21
.word 0xc08f5e5e
.word 0x3f35ddfe
.word 0x3ed4f69d
.word 0xbfe37a1d
.word 0x3f3d3c43
.word 0x3ed4f69d
.word 0xbfe37a1d
.word 0x3f3d3c43
.word 0x3ed4f69d
.word 0xbfe37a1d
.word 0x3f3d3c43
.word 0x3ed4f69d
.word 0xbfe37a1d
.word 0x3f3d3c43
.word 0x3ed4f69d
.word 0xbfe37a1d
.word 0x3f3d3c43
.word 0x3e5dfb78
.word 0xbf98ac4c
.word 0x3e8462b6
.word 0x3e5dfb78
.word 0xbf98ac4c
.word 0x3e8462b6
.word 0x3e5dfb78
.word 0xbf98ac4c
.word 0x3e8462b6
.word 0x3e5dfb78
.word 0xbf98ac4c
.word 0x3e8462b6
.word 0x3e5dfb78
.word 0xbf98ac4c
.word 0x3e8462b6
.word 0x3eb4b7eb
.word 0xbf1b44fa
.word 0x3e5b381a
.word 0x3eb4b7eb
.word 0xbf1b44fa
.word 0x3e5b381a
.word 0x3eb4b7eb
.word 0xbf1b44fa
.word 0x3e5b381a
.word 0x3eb4b7eb
.word 0xbf1b44fa
.word 0x3e5b381a
.word 0x3eb4b7eb
.word 0xbf1b44fa
.word 0x3e5b381a
.word 0x3ee08373
.word 0xbfcbd36d
.word 0x3f32c1a8
.word 0x3ee08373
.word 0xbfcbd36d
.word 0x3f32c1a8
.word 0x3ee08373
.word 0xbfcbd36d
.word 0x3f32c1a8
.word 0x3ee08373
.word 0xbfcbd36d
.word 0x3f32c1a8
.word 0x3ee08373
.word 0xbfcbd36d
.word 0x3f32c1a8
.word 0x3f23b693
.word 0xbf7da066
.word 0x3f223204
.word 0x3f23b693
.word 0xbf7da066
.word 0x3f223204
.word 0x3f23b693
.word 0xbf7da066
.word 0x3f223204
.word 0x3f23b693
.word 0xbf7da066
.word 0x3f223204
.word 0x3f23b693
.word 0xbf7da066
.word 0x3f223204
.word 0x3f77b145
.word 0xbf4b0a06
.word 0x3f447345
.word 0x3f77b145
.word 0xbf4b0a06
.word 0x3f447345
.word 0x3f77b145
.word 0xbf4b0a06
.word 0x3f447345
.word 0x3f77b145
.word 0xbf4b0a06
.word 0x3f447345
.word 0x3f77b145
.word 0xbf4b0a06
.word 0x3f447345
.word 0x3de01743
.word 0xc0c8e0b4
.word 0x3f2fd6df
.word 0x3de01743
.word 0xc0c8e0b4
.word 0x3f2fd6df
.word 0x3de01743
.word 0xc0c8e0b4
.word 0x3f2fd6df
.word 0x3de01743
.word 0xc0c8e0b4
.word 0x3f2fd6df
.word 0x3de01743
.word 0xc0c8e0b4
.word 0x3f2fd6df
.word 0x3f5bfb4f
.word 0xbeacd687
.word 0x3e948532
.word 0x3f5bfb4f
.word 0xbeacd687
.word 0x3e948532
.word 0x3f5bfb4f
.word 0xbeacd687
.word 0x3e948532
.word 0x3f5bfb4f
.word 0xbeacd687
.word 0x3e948532
.word 0x3f5bfb4f
.word 0xbeacd687
.word 0x3e948532
.word 0x3ebe1cec
.word 0xc025b5f5
.word 0x3f761f8a
.word 0x3ebe1cec
.word 0xc025b5f5
.word 0x3f761f8a
.word 0x3ebe1cec
.word 0xc025b5f5
.word 0x3f761f8a
.word 0x3ebe1cec
.word 0xc025b5f5
.word 0x3f761f8a
.word 0x3ebe1cec
.word 0xc025b5f5
.word 0x3f761f8a
.word 0x3e44832d
.word 0xc050768e
.word 0x3f200596
.word 0x3e44832d
.word 0xc050768e
.word 0x3f200596
.word 0x3e44832d
.word 0xc050768e
.word 0x3f200596
.word 0x3e44832d
.word 0xc050768e
.word 0x3f200596
.word 0x3e44832d
.word 0xc050768e
.word 0x3f200596
.word 0x3f275a62
.word 0xbf7606e8
.word 0x3f20d55e
.word 0x3f275a62
.word 0xbf7606e8
.word 0x3f20d55e
.word 0x3f275a62
.word 0xbf7606e8
.word 0x3f20d55e
.word 0x3f275a62
.word 0xbf7606e8
.word 0x3f20d55e
.word 0x3f275a62
.word 0xbf7606e8
.word 0x3f20d55e
.word 0x3f43a4e5
.word 0xbf54a5d1
.word 0x3f228347
.word 0x3f43a4e5
.word 0xbf54a5d1
.word 0x3f228347
.word 0x3f43a4e5
.word 0xbf54a5d1
.word 0x3f228347
.word 0x3f43a4e5
.word 0xbf54a5d1
.word 0x3f228347
.word 0x3f43a4e5
.word 0xbf54a5d1
.word 0x3f228347
.word 0x3f05f998
.word 0xbfcb110a
.word 0x3f548bae
.word 0x3f05f998
.word 0xbfcb110a
.word 0x3f548bae
.word 0x3f05f998
.word 0xbfcb110a
.word 0x3f548bae
.word 0x3f05f998
.word 0xbfcb110a
.word 0x3f548bae
.word 0x3f05f998
.word 0xbfcb110a
.word 0x3f548bae
.word 0x3d5a1497
.word 0xc0d23d13
.word 0x3eb318eb
.word 0x3d5a1497
.word 0xc0d23d13
.word 0x3eb318eb
.word 0x3d5a1497
.word 0xc0d23d13
.word 0x3eb318eb
.word 0x3d5a1497
.word 0xc0d23d13
.word 0x3eb318eb
.word 0x3d5a1497
.word 0xc0d23d13
.word 0x3eb318eb
.word 0x3c67de18
.word 0xc2356b46
.word 0x3f245130
.word 0x3c67de18
.word 0xc2356b46
.word 0x3f245130
.word 0x3c67de18
.word 0xc2356b46
.word 0x3f245130
.word 0x3c67de18
.word 0xc2356b46
.word 0x3f245130
.word 0x3c67de18
.word 0xc2356b46
.word 0x3f245130
.word 0x3ecc29ac
.word 0xbf5ce4f1
.word 0x3eb02a65
.word 0x3ecc29ac
.word 0xbf5ce4f1
.word 0x3eb02a65
.word 0x3ecc29ac
.word 0xbf5ce4f1
.word 0x3eb02a65
.word 0x3ecc29ac
.word 0xbf5ce4f1
.word 0x3eb02a65
.word 0x3ecc29ac
.word 0xbf5ce4f1
.word 0x3eb02a65
.word 0x3a71d4bf
.word 0xc4822226
.word 0x3f75dc97
.word 0x3a71d4bf
.word 0xc4822226
.word 0x3f75dc97
.word 0x3a71d4bf
.word 0xc4822226
.word 0x3f75dc97
.word 0x3a71d4bf
.word 0xc4822226
.word 0x3f75dc97
.word 0x3a71d4bf
.word 0xc4822226
.word 0x3f75dc97
.word 0x3d0ed628
.word 0xc1cc9fa6
.word 0x3f645777
.word 0x3d0ed628
.word 0xc1cc9fa6
.word 0x3f645777
.word 0x3d0ed628
.word 0xc1cc9fa6
.word 0x3f645777
.word 0x3d0ed628
.word 0xc1cc9fa6
.word 0x3f645777
.word 0x3d0ed628
.word 0xc1cc9fa6
.word 0x3f645777
.word 0x3f1310ac
.word 0xbf24c160
.word 0x3ebd4b8a
.word 0x3f1310ac
.word 0xbf24c160
.word 0x3ebd4b8a
.word 0x3f1310ac
.word 0xbf24c160
.word 0x3ebd4b8a
.word 0x3f1310ac
.word 0xbf24c160
.word 0x3ebd4b8a
.word 0x3f1310ac
.word 0xbf24c160
.word 0x3ebd4b8a
.word 0x3f5f627b
.word 0xbd26cf21
.word 0x3d118e9a
.word 0x3f5f627b
.word 0xbd26cf21
.word 0x3d118e9a
.word 0x3f5f627b
.word 0xbd26cf21
.word 0x3d118e9a
.word 0x3f5f627b
.word 0xbd26cf21
.word 0x3d118e9a
.word 0x3f5f627b
.word 0xbd26cf21
.word 0x3d118e9a
.word 0x3f50ba82
.word 0xbf03e580
.word 0x3ed71520
.word 0x3f50ba82
.word 0xbf03e580
.word 0x3ed71520
.word 0x3f50ba82
.word 0xbf03e580
.word 0x3ed71520
.word 0x3f50ba82
.word 0xbf03e580
.word 0x3ed71520
.word 0x3f50ba82
.word 0xbf03e580
.word 0x3ed71520
.word 0x3e9f8a28
.word 0xc03d04d5
.word 0x3f6b9805
.word 0x3e9f8a28
.word 0xc03d04d5
.word 0x3f6b9805
.word 0x3e9f8a28
.word 0xc03d04d5
.word 0x3f6b9805
.word 0x3e9f8a28
.word 0xc03d04d5
.word 0x3f6b9805
.word 0x3e9f8a28
.word 0xc03d04d5
.word 0x3f6b9805
.word 0x3ec1d3f5
.word 0xc010d7fa
.word 0x3f5b5581
.word 0x3ec1d3f5
.word 0xc010d7fa
.word 0x3f5b5581
.word 0x3ec1d3f5
.word 0xc010d7fa
.word 0x3f5b5581
.word 0x3ec1d3f5
.word 0xc010d7fa
.word 0x3f5b5581
.word 0x3ec1d3f5
.word 0xc010d7fa
.word 0x3f5b5581
.word 0x3f272814
.word 0xbeec1159
.word 0x3e9a2447
.word 0x3f272814
.word 0xbeec1159
.word 0x3e9a2447
.word 0x3f272814
.word 0xbeec1159
.word 0x3e9a2447
.word 0x3f272814
.word 0xbeec1159
.word 0x3e9a2447
.word 0x3f272814
.word 0xbeec1159
.word 0x3e9a2447
.word 0x3f20e64e
.word 0xbdb408ca
.word 0x3d624eeb
.word 0x3f20e64e
.word 0xbdb408ca
.word 0x3d624eeb
.word 0x3f20e64e
.word 0xbdb408ca
.word 0x3d624eeb
.word 0x3f20e64e
.word 0xbdb408ca
.word 0x3d624eeb
.word 0x3f20e64e
.word 0xbdb408ca
.word 0x3d624eeb
.word 0x3f1b1dea
.word 0xbfcbdd2f
.word 0x3f770d7c
.word 0x3f1b1dea
.word 0xbfcbdd2f
.word 0x3f770d7c
.word 0x3f1b1dea
.word 0xbfcbdd2f
.word 0x3f770d7c
.word 0x3f1b1dea
.word 0xbfcbdd2f
.word 0x3f770d7c
.word 0x3f1b1dea
.word 0xbfcbdd2f
.word 0x3f770d7c
.word 0x3eb4831d
.word 0xc01ef863
.word 0x3f603021
.word 0x3eb4831d
.word 0xc01ef863
.word 0x3f603021
.word 0x3eb4831d
.word 0xc01ef863
.word 0x3f603021
.word 0x3eb4831d
.word 0xc01ef863
.word 0x3f603021
.word 0x3eb4831d
.word 0xc01ef863
.word 0x3f603021
.word 0x3e6edfc9
.word 0xbf403002
.word 0x3e3354a3
.word 0x3e6edfc9
.word 0xbf403002
.word 0x3e3354a3
.word 0x3e6edfc9
.word 0xbf403002
.word 0x3e3354a3
.word 0x3e6edfc9
.word 0xbf403002
.word 0x3e3354a3
.word 0x3e6edfc9
.word 0xbf403002
.word 0x3e3354a3
.word 0x3f485250
.word 0xbf1ae7c8
.word 0x3ef26dc7
.word 0x3f485250
.word 0xbf1ae7c8
.word 0x3ef26dc7
.word 0x3f485250
.word 0xbf1ae7c8
.word 0x3ef26dc7
.word 0x3f485250
.word 0xbf1ae7c8
.word 0x3ef26dc7
.word 0x3f485250
.word 0xbf1ae7c8
.word 0x3ef26dc7
.word 0x3d81584e
.word 0xc134167f
.word 0x3f35faea
.word 0x3d81584e
.word 0xc134167f
.word 0x3f35faea
.word 0x3d81584e
.word 0xc134167f
.word 0x3f35faea
.word 0x3d81584e
.word 0xc134167f
.word 0x3f35faea
.word 0x3d81584e
.word 0xc134167f
.word 0x3f35faea
.word 0x3ce8eae9
.word 0xc18336b1
.word 0x3eeec3f0
.word 0x3ce8eae9
.word 0xc18336b1
.word 0x3eeec3f0
.word 0x3ce8eae9
.word 0xc18336b1
.word 0x3eeec3f0
.word 0x3ce8eae9
.word 0xc18336b1
.word 0x3eeec3f0
.word 0x3ce8eae9
.word 0xc18336b1
.word 0x3eeec3f0
.word 0x3e260dc5
.word 0xc0455af1
.word 0x3f000396
.word 0x3e260dc5
.word 0xc0455af1
.word 0x3f000396
.word 0x3e260dc5
.word 0xc0455af1
.word 0x3f000396
.word 0x3e260dc5
.word 0xc0455af1
.word 0x3f000396
.word 0x3e260dc5
.word 0xc0455af1
.word 0x3f000396
.word 0x3f062d29
.word 0xbfd4fbae
.word 0x3f5f429f
.word 0x3f062d29
.word 0xbfd4fbae
.word 0x3f5f429f
.word 0x3f062d29
.word 0xbfd4fbae
.word 0x3f5f429f
.word 0x3f062d29
.word 0xbfd4fbae
.word 0x3f5f429f
.word 0x3f062d29
.word 0xbfd4fbae
.word 0x3f5f429f
.word 0x3f30f157
.word 0xbeecf2b1
.word 0x3ea3c63b
.word 0x3f30f157
.word 0xbeecf2b1
.word 0x3ea3c63b
.word 0x3f30f157
.word 0xbeecf2b1
.word 0x3ea3c63b
.word 0x3f30f157
.word 0xbeecf2b1
.word 0x3ea3c63b
.word 0x3f30f157
.word 0xbeecf2b1
.word 0x3ea3c63b
.word 0x3e1fbdc5
.word 0xc041a606
.word 0x3ef1ab54
.word 0x3e1fbdc5
.word 0xc041a606
.word 0x3ef1ab54
.word 0x3e1fbdc5
.word 0xc041a606
.word 0x3ef1ab54
.word 0x3e1fbdc5
.word 0xc041a606
.word 0x3ef1ab54
.word 0x3e1fbdc5
.word 0xc041a606
.word 0x3ef1ab54
.word 0x3f02a7b0
.word 0xbf9ede60
.word 0x3f2229fa
.word 0x3f02a7b0
.word 0xbf9ede60
.word 0x3f2229fa
.word 0x3f02a7b0
.word 0xbf9ede60
.word 0x3f2229fa
.word 0x3f02a7b0
.word 0xbf9ede60
.word 0x3f2229fa
.word 0x3f02a7b0
.word 0xbf9ede60
.word 0x3f2229fa
.word 0x3e9da2aa
.word 0xbd5d4efe
.word 0x3c884611
.word 0x3e9da2aa
.word 0xbd5d4efe
.word 0x3c884611
.word 0x3e9da2aa
.word 0xbd5d4efe
.word 0x3c884611
.word 0x3e9da2aa
.word 0xbd5d4efe
.word 0x3c884611
.word 0x3e9da2aa
.word 0xbd5d4efe
.word 0x3c884611
.word 0x3dd3db2c
.word 0xbf3f4fca
.word 0x3d9e528e
.word 0x3dd3db2c
.word 0xbf3f4fca
.word 0x3d9e528e
.word 0x3dd3db2c
.word 0xbf3f4fca
.word 0x3d9e528e
.word 0x3dd3db2c
.word 0xbf3f4fca
.word 0x3d9e528e
.word 0x3dd3db2c
.word 0xbf3f4fca
.word 0x3d9e528e
.word 0x3d820622
.word 0xc0d486e7
.word 0x3ed7e333
.word 0x3d820622
.word 0xc0d486e7
.word 0x3ed7e333
.word 0x3d820622
.word 0xc0d486e7
.word 0x3ed7e333
.word 0x3d820622
.word 0xc0d486e7
.word 0x3ed7e333
.word 0x3d820622
.word 0xc0d486e7
.word 0x3ed7e333
.word 0x3ec5c0dd
.word 0xbfc1ed03
.word 0x3f15cd7d
.word 0x3ec5c0dd
.word 0xbfc1ed03
.word 0x3f15cd7d
.word 0x3ec5c0dd
.word 0xbfc1ed03
.word 0x3f15cd7d
.word 0x3ec5c0dd
.word 0xbfc1ed03
.word 0x3f15cd7d
.word 0x3ec5c0dd
.word 0xbfc1ed03
.word 0x3f15cd7d
.word 0x3de67fb9
.word 0xc06bab2f
.word 0x3ed43161
.word 0x3de67fb9
.word 0xc06bab2f
.word 0x3ed43161
.word 0x3de67fb9
.word 0xc06bab2f
.word 0x3ed43161
.word 0x3de67fb9
.word 0xc06bab2f
.word 0x3ed43161
.word 0x3de67fb9
.word 0xc06bab2f
.word 0x3ed43161
.word 0x3e73a83f
.word 0xc07c9a25
.word 0x3f706c55
.word 0x3e73a83f
.word 0xc07c9a25
.word 0x3f706c55
.word 0x3e73a83f
.word 0xc07c9a25
.word 0x3f706c55
.word 0x3e73a83f
.word 0xc07c9a25
.word 0x3f706c55
.word 0x3e73a83f
.word 0xc07c9a25
.word 0x3f706c55
.word 0x3f1798fa
.word 0xbfb3a14b
.word 0x3f54bef5
.word 0x3f1798fa
.word 0xbfb3a14b
.word 0x3f54bef5
.word 0x3f1798fa
.word 0xbfb3a14b
.word 0x3f54bef5
.word 0x3f1798fa
.word 0xbfb3a14b
.word 0x3f54bef5
.word 0x3f1798fa
.word 0xbfb3a14b
.word 0x3f54bef5
.word 0x3f5e0a61
.word 0xbf46af73
.word 0x3f2c5434
.word 0x3f5e0a61
.word 0xbf46af73
.word 0x3f2c5434
.word 0x3f5e0a61
.word 0xbf46af73
.word 0x3f2c5434
.word 0x3f5e0a61
.word 0xbf46af73
.word 0x3f2c5434
.word 0x3f5e0a61
.word 0xbf46af73
.word 0x3f2c5434
.word 0x3b2d39bb
.word 0xc1d017e0
.word 0x3d8ccf10
.word 0x3b2d39bb
.word 0xc1d017e0
.word 0x3d8ccf10
.word 0x3b2d39bb
.word 0xc1d017e0
.word 0x3d8ccf10
.word 0x3b2d39bb
.word 0xc1d017e0
.word 0x3d8ccf10
.word 0x3b2d39bb
.word 0xc1d017e0
.word 0x3d8ccf10
.word 0x3edfd383
.word 0xbe15ca94
.word 0x3d82f739
.word 0x3edfd383
.word 0xbe15ca94
.word 0x3d82f739
.word 0x3edfd383
.word 0xbe15ca94
.word 0x3d82f739
.word 0x3edfd383
.word 0xbe15ca94
.word 0x3d82f739
.word 0x3edfd383
.word 0xbe15ca94
.word 0x3d82f739
.word 0x3e87179f
.word 0xbffccd19
.word 0x3f05677c
.word 0x3e87179f
.word 0xbffccd19
.word 0x3f05677c
.word 0x3e87179f
.word 0xbffccd19
.word 0x3f05677c
.word 0x3e87179f
.word 0xbffccd19
.word 0x3f05677c
.word 0x3e87179f
.word 0xbffccd19
.word 0x3f05677c
.word 0x3f2c5956
.word 0xbe33a120
.word 0x3df1dde2
.word 0x3f2c5956
.word 0xbe33a120
.word 0x3df1dde2
.word 0x3f2c5956
.word 0xbe33a120
.word 0x3df1dde2
.word 0x3f2c5956
.word 0xbe33a120
.word 0x3df1dde2
.word 0x3f2c5956
.word 0xbe33a120
.word 0x3df1dde2
.word 0x3e331eda
.word 0xc0212d3a
.word 0x3ee18c1a
.word 0x3e331eda
.word 0xc0212d3a
.word 0x3ee18c1a
.word 0x3e331eda
.word 0xc0212d3a
.word 0x3ee18c1a
.word 0x3e331eda
.word 0xc0212d3a
.word 0x3ee18c1a
.word 0x3e331eda
.word 0xc0212d3a
.word 0x3ee18c1a
.word 0x3ee36734
.word 0xbf18113f
.word 0x3e871499
.word 0x3ee36734
.word 0xbf18113f
.word 0x3e871499
.word 0x3ee36734
.word 0xbf18113f
.word 0x3e871499
.word 0x3ee36734
.word 0xbf18113f
.word 0x3e871499
.word 0x3ee36734
.word 0xbf18113f
.word 0x3e871499
.word 0x3f6417ec
.word 0xbf8859f1
.word 0x3f72f9b3
.word 0x3f6417ec
.word 0xbf8859f1
.word 0x3f72f9b3
.word 0x3f6417ec
.word 0xbf8859f1
.word 0x3f72f9b3
.word 0x3f6417ec
.word 0xbf8859f1
.word 0x3f72f9b3
.word 0x3f6417ec
.word 0xbf8859f1
.word 0x3f72f9b3
.word 0x3f52c4d7
.word 0xbe9bd6a3
.word 0x3e804de5
.word 0x3f52c4d7
.word 0xbe9bd6a3
.word 0x3e804de5
.word 0x3f52c4d7
.word 0xbe9bd6a3
.word 0x3e804de5
.word 0x3f52c4d7
.word 0xbe9bd6a3
.word 0x3e804de5
.word 0x3f52c4d7
.word 0xbe9bd6a3
.word 0x3e804de5
.word 0x3f470376
.word 0xbf68c419
.word 0x3f34f396
.word 0x3f470376
.word 0xbf68c419
.word 0x3f34f396
.word 0x3f470376
.word 0xbf68c419
.word 0x3f34f396
.word 0x3f470376
.word 0xbf68c419
.word 0x3f34f396
.word 0x3f470376
.word 0xbf68c419
.word 0x3f34f396
.word 0x3e5f0628
.word 0xc0844423
.word 0x3f667512
.word 0x3e5f0628
.word 0xc0844423
.word 0x3f667512
.word 0x3e5f0628
.word 0xc0844423
.word 0x3f667512
.word 0x3e5f0628
.word 0xc0844423
.word 0x3f667512
.word 0x3e5f0628
.word 0xc0844423
.word 0x3f667512
.word 0x3f1c5755
.word 0xbf6e6c19
.word 0x3f119b36
.word 0x3f1c5755
.word 0xbf6e6c19
.word 0x3f119b36
.word 0x3f1c5755
.word 0xbf6e6c19
.word 0x3f119b36
.word 0x3f1c5755
.word 0xbf6e6c19
.word 0x3f119b36
.word 0x3f1c5755
.word 0xbf6e6c19
.word 0x3f119b36
.word 0x3f571b6c
.word 0xbf6300ba
.word 0x3f3ebdee
.word 0x3f571b6c
.word 0xbf6300ba
.word 0x3f3ebdee
.word 0x3f571b6c
.word 0xbf6300ba
.word 0x3f3ebdee
.word 0x3f571b6c
.word 0xbf6300ba
.word 0x3f3ebdee
.word 0x3f571b6c
.word 0xbf6300ba
.word 0x3f3ebdee
.word 0x3e8ea6d3
.word 0xc015c202
.word 0x3f26e66a
.word 0x3e8ea6d3
.word 0xc015c202
.word 0x3f26e66a
.word 0x3e8ea6d3
.word 0xc015c202
.word 0x3f26e66a
.word 0x3e8ea6d3
.word 0xc015c202
.word 0x3f26e66a
.word 0x3e8ea6d3
.word 0xc015c202
.word 0x3f26e66a
.word 0x3ef5bb79
.word 0xbfec4b7b
.word 0x3f62d148
.word 0x3ef5bb79
.word 0xbfec4b7b
.word 0x3f62d148
.word 0x3ef5bb79
.word 0xbfec4b7b
.word 0x3f62d148
.word 0x3ef5bb79
.word 0xbfec4b7b
.word 0x3f62d148
.word 0x3ef5bb79
.word 0xbfec4b7b
.word 0x3f62d148
.word 0x3f247b71
.word 0xbf861db6
.word 0x3f2c5768
.word 0x3f247b71
.word 0xbf861db6
.word 0x3f2c5768
.word 0x3f247b71
.word 0xbf861db6
.word 0x3f2c5768
.word 0x3f247b71
.word 0xbf861db6
.word 0x3f2c5768
.word 0x3f247b71
.word 0xbf861db6
.word 0x3f2c5768
.word 0x3f2e42b8
.word 0xbf8444b6
.word 0x3f34125a
.word 0x3f2e42b8
.word 0xbf8444b6
.word 0x3f34125a
.word 0x3f2e42b8
.word 0xbf8444b6
.word 0x3f34125a
.word 0x3f2e42b8
.word 0xbf8444b6
.word 0x3f34125a
.word 0x3f2e42b8
.word 0xbf8444b6
.word 0x3f34125a
.word 0x3e8cf22b
.word 0xbfba1c70
.word 0x3eccef37
.word 0x3e8cf22b
.word 0xbfba1c70
.word 0x3eccef37
.word 0x3e8cf22b
.word 0xbfba1c70
.word 0x3eccef37
.word 0x3e8cf22b
.word 0xbfba1c70
.word 0x3eccef37
.word 0x3e8cf22b
.word 0xbfba1c70
.word 0x3eccef37
.word 0x3e2fac36
.word 0xbf8a2d5d
.word 0x3e3da3ed
.word 0x3e2fac36
.word 0xbf8a2d5d
.word 0x3e3da3ed
.word 0x3e2fac36
.word 0xbf8a2d5d
.word 0x3e3da3ed
.word 0x3e2fac36
.word 0xbf8a2d5d
.word 0x3e3da3ed
.word 0x3e2fac36
.word 0xbf8a2d5d
.word 0x3e3da3ed
.word 0x3eb155cf
.word 0xbfea3571
.word 0x3f223d75
.word 0x3eb155cf
.word 0xbfea3571
.word 0x3f223d75
.word 0x3eb155cf
.word 0xbfea3571
.word 0x3f223d75
.word 0x3eb155cf
.word 0xbfea3571
.word 0x3f223d75
.word 0x3eb155cf
.word 0xbfea3571
.word 0x3f223d75
.word 0x3da443ca
.word 0xbfe0e846
.word 0x3e10505c
.word 0x3da443ca
.word 0xbfe0e846
.word 0x3e10505c
.word 0x3da443ca
.word 0xbfe0e846
.word 0x3e10505c
.word 0x3da443ca
.word 0xbfe0e846
.word 0x3e10505c
.word 0x3da443ca
.word 0xbfe0e846
.word 0x3e10505c
.word 0x3f2e19c1
.word 0xbfb4ed54
.word 0x3f761706
.word 0x3f2e19c1
.word 0xbfb4ed54
.word 0x3f761706
.word 0x3f2e19c1
.word 0xbfb4ed54
.word 0x3f761706
.word 0x3f2e19c1
.word 0xbfb4ed54
.word 0x3f761706
.word 0x3f2e19c1
.word 0xbfb4ed54
.word 0x3f761706
.word 0x3e0a3ab5
.word 0xc024a785
.word 0x3eb1d020
.word 0x3e0a3ab5
.word 0xc024a785
.word 0x3eb1d020
.word 0x3e0a3ab5
.word 0xc024a785
.word 0x3eb1d020
.word 0x3e0a3ab5
.word 0xc024a785
.word 0x3eb1d020
.word 0x3e0a3ab5
.word 0xc024a785
.word 0x3eb1d020
.word 0x3f6844ff
.word 0xbeddb999
.word 0x3ec92bf5
.word 0x3f6844ff
.word 0xbeddb999
.word 0x3ec92bf5
.word 0x3f6844ff
.word 0xbeddb999
.word 0x3ec92bf5
.word 0x3f6844ff
.word 0xbeddb999
.word 0x3ec92bf5
.word 0x3f6844ff
.word 0xbeddb999
.word 0x3ec92bf5
.word 0x3dc1ae84
.word 0xbf4a2b5f
.word 0x3d98f485
.word 0x3dc1ae84
.word 0xbf4a2b5f
.word 0x3d98f485
.word 0x3dc1ae84
.word 0xbf4a2b5f
.word 0x3d98f485
.word 0x3dc1ae84
.word 0xbf4a2b5f
.word 0x3d98f485
.word 0x3dc1ae84
.word 0xbf4a2b5f
.word 0x3d98f485
.word 0x3f098d15
.word 0xbe7a3532
.word 0x3e06705c
.word 0x3f098d15
.word 0xbe7a3532
.word 0x3e06705c
.word 0x3f098d15
.word 0xbe7a3532
.word 0x3e06705c
.word 0x3f098d15
.word 0xbe7a3532
.word 0x3e06705c
.word 0x3f098d15
.word 0xbe7a3532
.word 0x3e06705c
.word 0x3ea14287
.word 0xc0398330
.word 0x3f69b76e
.word 0x3ea14287
.word 0xc0398330
.word 0x3f69b76e
.word 0x3ea14287
.word 0xc0398330
.word 0x3f69b76e
.word 0x3ea14287
.word 0xc0398330
.word 0x3f69b76e
.word 0x3ea14287
.word 0xc0398330
.word 0x3f69b76e
.word 0x3f5cfa56
.word 0xbee72839
.word 0x3ec7889c
.word 0x3f5cfa56
.word 0xbee72839
.word 0x3ec7889c
.word 0x3f5cfa56
.word 0xbee72839
.word 0x3ec7889c
.word 0x3f5cfa56
.word 0xbee72839
.word 0x3ec7889c
.word 0x3f5cfa56
.word 0xbee72839
.word 0x3ec7889c
.word 0x3da2ea8b
.word 0xc02bf854
.word 0x3e5ae169
.word 0x3da2ea8b
.word 0xc02bf854
.word 0x3e5ae169
.word 0x3da2ea8b
.word 0xc02bf854
.word 0x3e5ae169
.word 0x3da2ea8b
.word 0xc02bf854
.word 0x3e5ae169
.word 0x3da2ea8b
.word 0xc02bf854
.word 0x3e5ae169
.word 0x3e6108ba
.word 0xbd00ec8c
.word 0x3be2a899
.word 0x3e6108ba
.word 0xbd00ec8c
.word 0x3be2a899
.word 0x3e6108ba
.word 0xbd00ec8c
.word 0x3be2a899
.word 0x3e6108ba
.word 0xbd00ec8c
.word 0x3be2a899
.word 0x3e6108ba
.word 0xbd00ec8c
.word 0x3be2a899
.word 0x3f1cafed
.word 0xbf106dbe
.word 0x3eb0cc42
.word 0x3f1cafed
.word 0xbf106dbe
.word 0x3eb0cc42
.word 0x3f1cafed
.word 0xbf106dbe
.word 0x3eb0cc42
.word 0x3f1cafed
.word 0xbf106dbe
.word 0x3eb0cc42
.word 0x3f1cafed
.word 0xbf106dbe
.word 0x3eb0cc42
.word 0x3e607ecb
.word 0xbf713414
.word 0x3e538509
.word 0x3e607ecb
.word 0xbf713414
.word 0x3e538509
.word 0x3e607ecb
.word 0xbf713414
.word 0x3e538509
.word 0x3e607ecb
.word 0xbf713414
.word 0x3e538509
.word 0x3e607ecb
.word 0xbf713414
.word 0x3e538509
.word 0x3e2e5c9a
.word 0xc06d913d
.word 0x3f21cea7
.word 0x3e2e5c9a
.word 0xc06d913d
.word 0x3f21cea7
.word 0x3e2e5c9a
.word 0xc06d913d
.word 0x3f21cea7
.word 0x3e2e5c9a
.word 0xc06d913d
.word 0x3f21cea7
.word 0x3e2e5c9a
.word 0xc06d913d
.word 0x3f21cea7
.word 0x3e3f3558
.word 0xc00a43a7
.word 0x3ece8a93
.word 0x3e3f3558
.word 0xc00a43a7
.word 0x3ece8a93
.word 0x3e3f3558
.word 0xc00a43a7
.word 0x3ece8a93
.word 0x3e3f3558
.word 0xc00a43a7
.word 0x3ece8a93
.word 0x3e3f3558
.word 0xc00a43a7
.word 0x3ece8a93
.word 0x3e81568d
.word 0xc03e0a0a
.word 0x3f40069e
.word 0x3e81568d
.word 0xc03e0a0a
.word 0x3f40069e
.word 0x3e81568d
.word 0xc03e0a0a
.word 0x3f40069e
.word 0x3e81568d
.word 0xc03e0a0a
.word 0x3f40069e
.word 0x3e81568d
.word 0xc03e0a0a
.word 0x3f40069e
.word 0x3d0d88e7
.word 0xc0c2534c
.word 0x3e56df9a
.word 0x3d0d88e7
.word 0xc0c2534c
.word 0x3e56df9a
.word 0x3d0d88e7
.word 0xc0c2534c
.word 0x3e56df9a
.word 0x3d0d88e7
.word 0xc0c2534c
.word 0x3e56df9a
.word 0x3d0d88e7
.word 0xc0c2534c
.word 0x3e56df9a
.word 0x3f169415
.word 0xbf8afa1b
.word 0x3f237de0
.word 0x3f169415
.word 0xbf8afa1b
.word 0x3f237de0
.word 0x3f169415
.word 0xbf8afa1b
.word 0x3f237de0
.word 0x3f169415
.word 0xbf8afa1b
.word 0x3f237de0
.word 0x3f169415
.word 0xbf8afa1b
.word 0x3f237de0
.word 0x3f3900f5
.word 0xbe1e230c
.word 0x3de48fd7
.word 0x3f3900f5
.word 0xbe1e230c
.word 0x3de48fd7
.word 0x3f3900f5
.word 0xbe1e230c
.word 0x3de48fd7
.word 0x3f3900f5
.word 0xbe1e230c
.word 0x3de48fd7
.word 0x3f3900f5
.word 0xbe1e230c
.word 0x3de48fd7
.word 0x3e48796a
.word 0xc0221144
.word 0x3efdd4b5
.word 0x3e48796a
.word 0xc0221144
.word 0x3efdd4b5
.word 0x3e48796a
.word 0xc0221144
.word 0x3efdd4b5
.word 0x3e48796a
.word 0xc0221144
.word 0x3efdd4b5
.word 0x3e48796a
.word 0xc0221144
.word 0x3efdd4b5
.word 0x3f39ded3
.word 0xbf79c21c
.word 0x3f3556ab
.word 0x3f39ded3
.word 0xbf79c21c
.word 0x3f3556ab
.word 0x3f39ded3
.word 0xbf79c21c
.word 0x3f3556ab
.word 0x3f39ded3
.word 0xbf79c21c
.word 0x3f3556ab
.word 0x3f39ded3
.word 0xbf79c21c
.word 0x3f3556ab
.word 0x3f620980
.word 0xbe45edc2
.word 0x3e2ec33f
.word 0x3f620980
.word 0xbe45edc2
.word 0x3e2ec33f
.word 0x3f620980
.word 0xbe45edc2
.word 0x3e2ec33f
.word 0x3f620980
.word 0xbe45edc2
.word 0x3e2ec33f
.word 0x3f620980
.word 0xbe45edc2
.word 0x3e2ec33f
.word 0x3f3aa762
.word 0xbf4bbc92
.word 0x3f148c38
.word 0x3f3aa762
.word 0xbf4bbc92
.word 0x3f148c38
.word 0x3f3aa762
.word 0xbf4bbc92
.word 0x3f148c38
.word 0x3f3aa762
.word 0xbf4bbc92
.word 0x3f148c38
.word 0x3f3aa762
.word 0xbf4bbc92
.word 0x3f148c38
.word 0x3f6e6e6f
.word 0xbe92b4be
.word 0x3e88a352
.word 0x3f6e6e6f
.word 0xbe92b4be
.word 0x3e88a352
.word 0x3f6e6e6f
.word 0xbe92b4be
.word 0x3e88a352
.word 0x3f6e6e6f
.word 0xbe92b4be
.word 0x3e88a352
.word 0x3f6e6e6f
.word 0xbe92b4be
.word 0x3e88a352
.word 0x3e25b0c0
.word 0xc0909906
.word 0x3f3b2ced
.word 0x3e25b0c0
.word 0xc0909906
.word 0x3f3b2ced
.word 0x3e25b0c0
.word 0xc0909906
.word 0x3f3b2ced
.word 0x3e25b0c0
.word 0xc0909906
.word 0x3f3b2ced
.word 0x3e25b0c0
.word 0xc0909906
.word 0x3f3b2ced
.word 0x3f029324
.word 0xbf6c6e15
.word 0x3ef12f98
.word 0x3f029324
.word 0xbf6c6e15
.word 0x3ef12f98
.word 0x3f029324
.word 0xbf6c6e15
.word 0x3ef12f98
.word 0x3f029324
.word 0xbf6c6e15
.word 0x3ef12f98
.word 0x3f029324
.word 0xbf6c6e15
.word 0x3ef12f98
.word 0x3f2347f7
.word 0xbf65c881
.word 0x3f128f43
.word 0x3f2347f7
.word 0xbf65c881
.word 0x3f128f43
.word 0x3f2347f7
.word 0xbf65c881
.word 0x3f128f43
.word 0x3f2347f7
.word 0xbf65c881
.word 0x3f128f43
.word 0x3f2347f7
.word 0xbf65c881
.word 0x3f128f43
.word 0x3e37602e
.word 0xc00d30ac
.word 0x3eca45ae
.word 0x3e37602e
.word 0xc00d30ac
.word 0x3eca45ae
.word 0x3e37602e
.word 0xc00d30ac
.word 0x3eca45ae
.word 0x3e37602e
.word 0xc00d30ac
.word 0x3eca45ae
.word 0x3e37602e
.word 0xc00d30ac
.word 0x3eca45ae
.word 0x3d82f8c0
.word 0xc0881673
.word 0x3e8b3f45
.word 0x3d82f8c0
.word 0xc0881673
.word 0x3e8b3f45
.word 0x3d82f8c0
.word 0xc0881673
.word 0x3e8b3f45
.word 0x3d82f8c0
.word 0xc0881673
.word 0x3e8b3f45
.word 0x3d82f8c0
.word 0xc0881673
.word 0x3e8b3f45
.word 0x3e212396
.word 0xc000617d
.word 0x3ea19e51
.word 0x3e212396
.word 0xc000617d
.word 0x3ea19e51
.word 0x3e212396
.word 0xc000617d
.word 0x3ea19e51
.word 0x3e212396
.word 0xc000617d
.word 0x3ea19e51
.word 0x3e212396
.word 0xc000617d
.word 0x3ea19e51
.word 0x3f35a219
.word 0xbf0b9f95
.word 0x3ec6207b
.word 0x3f35a219
.word 0xbf0b9f95
.word 0x3ec6207b
.word 0x3f35a219
.word 0xbf0b9f95
.word 0x3ec6207b
.word 0x3f35a219
.word 0xbf0b9f95
.word 0x3ec6207b
.word 0x3f35a219
.word 0xbf0b9f95
.word 0x3ec6207b
.word 0x3e1c9d81
.word 0xc08ff30d
.word 0x3f302159
.word 0x3e1c9d81
.word 0xc08ff30d
.word 0x3f302159
.word 0x3e1c9d81
.word 0xc08ff30d
.word 0x3f302159
.word 0x3e1c9d81
.word 0xc08ff30d
.word 0x3f302159
.word 0x3e1c9d81
.word 0xc08ff30d
.word 0x3f302159
.word 0x3f214980
.word 0xbd86a161
.word 0x3d29a44a
.word 0x3f214980
.word 0xbd86a161
.word 0x3d29a44a
.word 0x3f214980
.word 0xbd86a161
.word 0x3d29a44a
.word 0x3f214980
.word 0xbd86a161
.word 0x3d29a44a
.word 0x3f214980
.word 0xbd86a161
.word 0x3d29a44a
.word 0x3e1dfc75
.word 0xc0a6cfd1
.word 0x3f4de3e9
.word 0x3e1dfc75
.word 0xc0a6cfd1
.word 0x3f4de3e9
.word 0x3e1dfc75
.word 0xc0a6cfd1
.word 0x3f4de3e9
.word 0x3e1dfc75
.word 0xc0a6cfd1
.word 0x3f4de3e9
.word 0x3e1dfc75
.word 0xc0a6cfd1
.word 0x3f4de3e9
.word 0x3e5ded93
.word 0xc04ff1c1
.word 0x3f3444ae
.word 0x3e5ded93
.word 0xc04ff1c1
.word 0x3f3444ae
.word 0x3e5ded93
.word 0xc04ff1c1
.word 0x3f3444ae
.word 0x3e5ded93
.word 0xc04ff1c1
.word 0x3f3444ae
.word 0x3e5ded93
.word 0xc04ff1c1
.word 0x3f3444ae
.word 0x3ebff14c
.word 0xbdea9f75
.word 0x3d2fea1f
.word 0x3ebff14c
.word 0xbdea9f75
.word 0x3d2fea1f
.word 0x3ebff14c
.word 0xbdea9f75
.word 0x3d2fea1f
.word 0x3ebff14c
.word 0xbdea9f75
.word 0x3d2fea1f
.word 0x3ebff14c
.word 0xbdea9f75
.word 0x3d2fea1f
.word 0x3e191b1b
.word 0xc04f0e46
.word 0x3ef7aae9
.word 0x3e191b1b
.word 0xc04f0e46
.word 0x3ef7aae9
.word 0x3e191b1b
.word 0xc04f0e46
.word 0x3ef7aae9
.word 0x3e191b1b
.word 0xc04f0e46
.word 0x3ef7aae9
.word 0x3e191b1b
.word 0xc04f0e46
.word 0x3ef7aae9
.word 0x3f217896
.word 0xbdbe3244
.word 0x3d6fee68
.word 0x3f217896
.word 0xbdbe3244
.word 0x3d6fee68
.word 0x3f217896
.word 0xbdbe3244
.word 0x3d6fee68
.word 0x3f217896
.word 0xbdbe3244
.word 0x3d6fee68
.word 0x3f217896
.word 0xbdbe3244
.word 0x3d6fee68
.word 0x3ee7c33c
.word 0xbd51e608
.word 0x3cbe06a5
.word 0x3ee7c33c
.word 0xbd51e608
.word 0x3cbe06a5
.word 0x3ee7c33c
.word 0xbd51e608
.word 0x3cbe06a5
.word 0x3ee7c33c
.word 0xbd51e608
.word 0x3cbe06a5
.word 0x3ee7c33c
.word 0xbd51e608
.word 0x3cbe06a5
.word 0x3f46bdaf
.word 0xbf680286
.word 0x3f341ddc
.word 0x3f46bdaf
.word 0xbf680286
.word 0x3f341ddc
.word 0x3f46bdaf
.word 0xbf680286
.word 0x3f341ddc
.word 0x3f46bdaf
.word 0xbf680286
.word 0x3f341ddc
.word 0x3f46bdaf
.word 0xbf680286
.word 0x3f341ddc
.word 0x3d9450f1
.word 0xbe8128de
.word 0x3c95a8ee
.word 0x3d9450f1
.word 0xbe8128de
.word 0x3c95a8ee
.word 0x3d9450f1
.word 0xbe8128de
.word 0x3c95a8ee
.word 0x3d9450f1
.word 0xbe8128de
.word 0x3c95a8ee
.word 0x3d9450f1
.word 0xbe8128de
.word 0x3c95a8ee
.word 0x3dbaac32
.word 0xc0343fa7
.word 0x3e836f7e
.word 0x3dbaac32
.word 0xc0343fa7
.word 0x3e836f7e
.word 0x3dbaac32
.word 0xc0343fa7
.word 0x3e836f7e
.word 0x3dbaac32
.word 0xc0343fa7
.word 0x3e836f7e
.word 0x3dbaac32
.word 0xc0343fa7
.word 0x3e836f7e
.word 0x3f7e49e0
.word 0xbec763fa
.word 0x3ec60ebc
.word 0x3f7e49e0
.word 0xbec763fa
.word 0x3ec60ebc
.word 0x3f7e49e0
.word 0xbec763fa
.word 0x3ec60ebc
.word 0x3f7e49e0
.word 0xbec763fa
.word 0x3ec60ebc
.word 0x3f7e49e0
.word 0xbec763fa
.word 0x3ec60ebc
.word 0x3e8318d9
.word 0xbfb05496
.word 0x3eb498cc
.word 0x3e8318d9
.word 0xbfb05496
.word 0x3eb498cc
.word 0x3e8318d9
.word 0xbfb05496
.word 0x3eb498cc
.word 0x3e8318d9
.word 0xbfb05496
.word 0x3eb498cc
.word 0x3e8318d9
.word 0xbfb05496
.word 0x3eb498cc
.word 0x3f4543c9
.word 0xbf1d8f5e
.word 0x3ef2d218
.word 0x3f4543c9
.word 0xbf1d8f5e
.word 0x3ef2d218
.word 0x3f4543c9
.word 0xbf1d8f5e
.word 0x3ef2d218
.word 0x3f4543c9
.word 0xbf1d8f5e
.word 0x3ef2d218
.word 0x3f4543c9
.word 0xbf1d8f5e
.word 0x3ef2d218
.word 0x3e96f3db
.word 0xc02d8356
.word 0x3f4ca079
.word 0x3e96f3db
.word 0xc02d8356
.word 0x3f4ca079
.word 0x3e96f3db
.word 0xc02d8356
.word 0x3f4ca079
.word 0x3e96f3db
.word 0xc02d8356
.word 0x3f4ca079
.word 0x3e96f3db
.word 0xc02d8356
.word 0x3f4ca079
.word 0x3e7a3bd1
.word 0xc00245f2
.word 0x3efead7e
.word 0x3e7a3bd1
.word 0xc00245f2
.word 0x3efead7e
.word 0x3e7a3bd1
.word 0xc00245f2
.word 0x3efead7e
.word 0x3e7a3bd1
.word 0xc00245f2
.word 0x3efead7e
.word 0x3e7a3bd1
.word 0xc00245f2
.word 0x3efead7e
.word 0x3f681b27
.word 0xbd1188aa
.word 0x3d03f34a
.word 0x3f681b27
.word 0xbd1188aa
.word 0x3d03f34a
.word 0x3f681b27
.word 0xbd1188aa
.word 0x3d03f34a
.word 0x3f681b27
.word 0xbd1188aa
.word 0x3d03f34a
.word 0x3f681b27
.word 0xbd1188aa
.word 0x3d03f34a
.word 0x3f22ca77
.word 0xbf647ebd
.word 0x3f114cea
.word 0x3f22ca77
.word 0xbf647ebd
.word 0x3f114cea
.word 0x3f22ca77
.word 0xbf647ebd
.word 0x3f114cea
.word 0x3f22ca77
.word 0xbf647ebd
.word 0x3f114cea
.word 0x3f22ca77
.word 0xbf647ebd
.word 0x3f114cea
.word 0x3ec6e711
.word 0xc0210492
.word 0x3f7a35be
.word 0x3ec6e711
.word 0xc0210492
.word 0x3f7a35be
.word 0x3ec6e711
.word 0xc0210492
.word 0x3f7a35be
.word 0x3ec6e711
.word 0xc0210492
.word 0x3f7a35be
.word 0x3ec6e711
.word 0xc0210492
.word 0x3f7a35be
.word 0x3e8cba51
.word 0xbf87d539
.word 0x3e9556ef
.word 0x3e8cba51
.word 0xbf87d539
.word 0x3e9556ef
.word 0x3e8cba51
.word 0xbf87d539
.word 0x3e9556ef
.word 0x3e8cba51
.word 0xbf87d539
.word 0x3e9556ef
.word 0x3e8cba51
.word 0xbf87d539
.word 0x3e9556ef
.word 0x3f0dc46f
.word 0xbfce224a
.word 0x3f644e1d
.word 0x3f0dc46f
.word 0xbfce224a
.word 0x3f644e1d
.word 0x3f0dc46f
.word 0xbfce224a
.word 0x3f644e1d
.word 0x3f0dc46f
.word 0xbfce224a
.word 0x3f644e1d
.word 0x3f0dc46f
.word 0xbfce224a
.word 0x3f644e1d
.word 0x3f464458
.word 0xbf84a136
.word 0x3f4d7030
.word 0x3f464458
.word 0xbf84a136
.word 0x3f4d7030
.word 0x3f464458
.word 0xbf84a136
.word 0x3f4d7030
.word 0x3f464458
.word 0xbf84a136
.word 0x3f4d7030
.word 0x3f464458
.word 0xbf84a136
.word 0x3f4d7030
.word 0x3f1b3302
.word 0xbf86f4b1
.word 0x3f23a216
.word 0x3f1b3302
.word 0xbf86f4b1
.word 0x3f23a216
.word 0x3f1b3302
.word 0xbf86f4b1
.word 0x3f23a216
.word 0x3f1b3302
.word 0xbf86f4b1
.word 0x3f23a216
.word 0x3f1b3302
.word 0xbf86f4b1
.word 0x3f23a216
.word 0x3e91ab5f
.word 0xbfeddc4b
.word 0x3f075901
.word 0x3e91ab5f
.word 0xbfeddc4b
.word 0x3f075901
.word 0x3e91ab5f
.word 0xbfeddc4b
.word 0x3f075901
.word 0x3e91ab5f
.word 0xbfeddc4b
.word 0x3f075901
.word 0x3e91ab5f
.word 0xbfeddc4b
.word 0x3f075901
.word 0x3f0f7e00
.word 0xbefab7d5
.word 0x3e8c8816
.word 0x3f0f7e00
.word 0xbefab7d5
.word 0x3e8c8816
.word 0x3f0f7e00
.word 0xbefab7d5
.word 0x3e8c8816
.word 0x3f0f7e00
.word 0xbefab7d5
.word 0x3e8c8816
.word 0x3f0f7e00
.word 0xbefab7d5
.word 0x3e8c8816
.word 0x3f0c1c8f
.word 0xbfcc4c20
.word 0x3f5fa0d9
.word 0x3f0c1c8f
.word 0xbfcc4c20
.word 0x3f5fa0d9
.word 0x3f0c1c8f
.word 0xbfcc4c20
.word 0x3f5fa0d9
.word 0x3f0c1c8f
.word 0xbfcc4c20
.word 0x3f5fa0d9
.word 0x3f0c1c8f
.word 0xbfcc4c20
.word 0x3f5fa0d9
.word 0x3f60c32a
.word 0xbef47f36
.word 0x3ed6a9b4
.word 0x3f60c32a
.word 0xbef47f36
.word 0x3ed6a9b4
.word 0x3f60c32a
.word 0xbef47f36
.word 0x3ed6a9b4
.word 0x3f60c32a
.word 0xbef47f36
.word 0x3ed6a9b4
.word 0x3f60c32a
.word 0xbef47f36
.word 0x3ed6a9b4
.word 0x3f06dd2b
.word 0xbfcd6d55
.word 0x3f587169
.word 0x3f06dd2b
.word 0xbfcd6d55
.word 0x3f587169
.word 0x3f06dd2b
.word 0xbfcd6d55
.word 0x3f587169
.word 0x3f06dd2b
.word 0xbfcd6d55
.word 0x3f587169
.word 0x3f06dd2b
.word 0xbfcd6d55
.word 0x3f587169
.word 0x3eca08c7
.word 0xbfa3188f
.word 0x3f00b6f9
.word 0x3eca08c7
.word 0xbfa3188f
.word 0x3f00b6f9
.word 0x3eca08c7
.word 0xbfa3188f
.word 0x3f00b6f9
.word 0x3eca08c7
.word 0xbfa3188f
.word 0x3f00b6f9
.word 0x3eca08c7
.word 0xbfa3188f
.word 0x3f00b6f9
.word 0x3f0ef84a
.word 0xbfd21731
.word 0x3f6aa942
.word 0x3f0ef84a
.word 0xbfd21731
.word 0x3f6aa942
.word 0x3f0ef84a
.word 0xbfd21731
.word 0x3f6aa942
.word 0x3f0ef84a
.word 0xbfd21731
.word 0x3f6aa942
.word 0x3f0ef84a
.word 0xbfd21731
.word 0x3f6aa942
.word 0x3f527bd3
.word 0xbd161b26
.word 0x3cf6d5c2
.word 0x3f527bd3
.word 0xbd161b26
.word 0x3cf6d5c2
.word 0x3f527bd3
.word 0xbd161b26
.word 0x3cf6d5c2
.word 0x3f527bd3
.word 0xbd161b26
.word 0x3cf6d5c2
.word 0x3f527bd3
.word 0xbd161b26
.word 0x3cf6d5c2
.word 0x3c1c4e31
.word 0xc2301850
.word 0x3ed70934
.word 0x3c1c4e31
.word 0xc2301850
.word 0x3ed70934
.word 0x3c1c4e31
.word 0xc2301850
.word 0x3ed70934
.word 0x3c1c4e31
.word 0xc2301850
.word 0x3ed70934
.word 0x3c1c4e31
.word 0xc2301850
.word 0x3ed70934
.word 0x3d0eb16e
.word 0xc0dd068a
.word 0x3e7665a3
.word 0x3d0eb16e
.word 0xc0dd068a
.word 0x3e7665a3
.word 0x3d0eb16e
.word 0xc0dd068a
.word 0x3e7665a3
.word 0x3d0eb16e
.word 0xc0dd068a
.word 0x3e7665a3
.word 0x3d0eb16e
.word 0xc0dd068a
.word 0x3e7665a3
.word 0x3dffa20e
.word 0xc0f7e050
.word 0x3f77855a
.word 0x3dffa20e
.word 0xc0f7e050
.word 0x3f77855a
.word 0x3dffa20e
.word 0xc0f7e050
.word 0x3f77855a
.word 0x3dffa20e
.word 0xc0f7e050
.word 0x3f77855a
.word 0x3dffa20e
.word 0xc0f7e050
.word 0x3f77855a
.word 0x3e2843e8
.word 0xc099d428
.word 0x3f4a3811
.word 0x3e2843e8
.word 0xc099d428
.word 0x3f4a3811
.word 0x3e2843e8
.word 0xc099d428
.word 0x3f4a3811
.word 0x3e2843e8
.word 0xc099d428
.word 0x3f4a3811
.word 0x3e2843e8
.word 0xc099d428
.word 0x3f4a3811
.word 0x3d0f83e7
.word 0xc1e3a721
.word 0x3f7f3f4f
.word 0x3d0f83e7
.word 0xc1e3a721
.word 0x3f7f3f4f
.word 0x3d0f83e7
.word 0xc1e3a721
.word 0x3f7f3f4f
.word 0x3d0f83e7
.word 0xc1e3a721
.word 0x3f7f3f4f
.word 0x3d0f83e7
.word 0xc1e3a721
.word 0x3f7f3f4f
.word 0x3e8332f2
.word 0xc021fb62
.word 0x3f2607bf
.word 0x3e8332f2
.word 0xc021fb62
.word 0x3f2607bf
.word 0x3e8332f2
.word 0xc021fb62
.word 0x3f2607bf
.word 0x3e8332f2
.word 0xc021fb62
.word 0x3f2607bf
.word 0x3e8332f2
.word 0xc021fb62
.word 0x3f2607bf
.word 0x3f1d1948
.word 0xbf31d966
.word 0x3eda47c9
.word 0x3f1d1948
.word 0xbf31d966
.word 0x3eda47c9
.word 0x3f1d1948
.word 0xbf31d966
.word 0x3eda47c9
.word 0x3f1d1948
.word 0xbf31d966
.word 0x3eda47c9
.word 0x3f1d1948
.word 0xbf31d966
.word 0x3eda47c9
.word 0x3f7ba9ad
.word 0xbf5fda3f
.word 0x3f5c0f5a
.word 0x3f7ba9ad
.word 0xbf5fda3f
.word 0x3f5c0f5a
.word 0x3f7ba9ad
.word 0xbf5fda3f
.word 0x3f5c0f5a
.word 0x3f7ba9ad
.word 0xbf5fda3f
.word 0x3f5c0f5a
.word 0x3f7ba9ad
.word 0xbf5fda3f
.word 0x3f5c0f5a
.word 0x3ca340f5
.word 0xc23c1405
.word 0x3f6fe0f1
.word 0x3ca340f5
.word 0xc23c1405
.word 0x3f6fe0f1
.word 0x3ca340f5
.word 0xc23c1405
.word 0x3f6fe0f1
.word 0x3ca340f5
.word 0xc23c1405
.word 0x3f6fe0f1
.word 0x3ca340f5
.word 0xc23c1405
.word 0x3f6fe0f1
.word 0x3efd7ab1
.word 0xbf16e627
.word 0x3e9569c7
.word 0x3efd7ab1
.word 0xbf16e627
.word 0x3e9569c7
.word 0x3efd7ab1
.word 0xbf16e627
.word 0x3e9569c7
.word 0x3efd7ab1
.word 0xbf16e627
.word 0x3e9569c7
.word 0x3efd7ab1
.word 0xbf16e627
.word 0x3e9569c7
.word 0x3f23cc4c
.word 0xbe99e12a
.word 0x3e44ea56
.word 0x3f23cc4c
.word 0xbe99e12a
.word 0x3e44ea56
.word 0x3f23cc4c
.word 0xbe99e12a
.word 0x3e44ea56
.word 0x3f23cc4c
.word 0xbe99e12a
.word 0x3e44ea56
.word 0x3f23cc4c
.word 0xbe99e12a
.word 0x3e44ea56
.word 0x3f64bae1
.word 0xbf094272
.word 0x3ef546c2
.word 0x3f64bae1
.word 0xbf094272
.word 0x3ef546c2
.word 0x3f64bae1
.word 0xbf094272
.word 0x3ef546c2
.word 0x3f64bae1
.word 0xbf094272
.word 0x3ef546c2
.word 0x3f64bae1
.word 0xbf094272
.word 0x3ef546c2
.word 0x3f67a6c2
.word 0xbf8164e6
.word 0x3f6a2cab
.word 0x3f67a6c2
.word 0xbf8164e6
.word 0x3f6a2cab
.word 0x3f67a6c2
.word 0xbf8164e6
.word 0x3f6a2cab
.word 0x3f67a6c2
.word 0xbf8164e6
.word 0x3f6a2cab
.word 0x3f67a6c2
.word 0xbf8164e6
.word 0x3f6a2cab
.word 0x3ed2aefc
.word 0xbfdd3eee
.word 0x3f3614da
.word 0x3ed2aefc
.word 0xbfdd3eee
.word 0x3f3614da
.word 0x3ed2aefc
.word 0xbfdd3eee
.word 0x3f3614da
.word 0x3ed2aefc
.word 0xbfdd3eee
.word 0x3f3614da
.word 0x3ed2aefc
.word 0xbfdd3eee
.word 0x3f3614da
.word 0x3f0dcf72
.word 0xbf867dbc
.word 0x3f150078
.word 0x3f0dcf72
.word 0xbf867dbc
.word 0x3f150078
.word 0x3f0dcf72
.word 0xbf867dbc
.word 0x3f150078
.word 0x3f0dcf72
.word 0xbf867dbc
.word 0x3f150078
.word 0x3f0dcf72
.word 0xbf867dbc
.word 0x3f150078
.word 0x3f44ae0b
.word 0xbf448fa7
.word 0x3f17039f
.word 0x3f44ae0b
.word 0xbf448fa7
.word 0x3f17039f
.word 0x3f44ae0b
.word 0xbf448fa7
.word 0x3f17039f
.word 0x3f44ae0b
.word 0xbf448fa7
.word 0x3f17039f
.word 0x3f44ae0b
.word 0xbf448fa7
.word 0x3f17039f
.word 0x3f547096
.word 0xbf2e1c55
.word 0x3f107c0a
.word 0x3f547096
.word 0xbf2e1c55
.word 0x3f107c0a
.word 0x3f547096
.word 0xbf2e1c55
.word 0x3f107c0a
.word 0x3f547096
.word 0xbf2e1c55
.word 0x3f107c0a
.word 0x3f547096
.word 0xbf2e1c55
.word 0x3f107c0a
.word 0x3e715bd2
.word 0xc032b765
.word 0x3f287ec0
.word 0x3e715bd2
.word 0xc032b765
.word 0x3f287ec0
.word 0x3e715bd2
.word 0xc032b765
.word 0x3f287ec0
.word 0x3e715bd2
.word 0xc032b765
.word 0x3f287ec0
.word 0x3e715bd2
.word 0xc032b765
.word 0x3f287ec0
.word 0x3f333044
.word 0xbfb473a5
.word 0x3f7c9dc5
.word 0x3f333044
.word 0xbfb473a5
.word 0x3f7c9dc5
.word 0x3f333044
.word 0xbfb473a5
.word 0x3f7c9dc5
.word 0x3f333044
.word 0xbfb473a5
.word 0x3f7c9dc5
.word 0x3f333044
.word 0xbfb473a5
.word 0x3f7c9dc5
.word 0x3f4c564b
.word 0xbe95cb74
.word 0x3e6f213e
.word 0x3f4c564b
.word 0xbe95cb74
.word 0x3e6f213e
.word 0x3f4c564b
.word 0xbe95cb74
.word 0x3e6f213e
.word 0x3f4c564b
.word 0xbe95cb74
.word 0x3e6f213e
.word 0x3f4c564b
.word 0xbe95cb74
.word 0x3e6f213e
.word 0x3eac74cb
.word 0xbd98f201
.word 0x3cce10bf
.word 0x3eac74cb
.word 0xbd98f201
.word 0x3cce10bf
.word 0x3eac74cb
.word 0xbd98f201
.word 0x3cce10bf
.word 0x3eac74cb
.word 0xbd98f201
.word 0x3cce10bf
.word 0x3eac74cb
.word 0xbd98f201
.word 0x3cce10bf
.word 0x3f1a8e72
.word 0xbfb0c7cd
.word 0x3f55751e
.word 0x3f1a8e72
.word 0xbfb0c7cd
.word 0x3f55751e
.word 0x3f1a8e72
.word 0xbfb0c7cd
.word 0x3f55751e
.word 0x3f1a8e72
.word 0xbfb0c7cd
.word 0x3f55751e
.word 0x3f1a8e72
.word 0xbfb0c7cd
.word 0x3f55751e
.word 0x3dde462c
.word 0xc0f32bed
.word 0x3f5322c0
.word 0x3dde462c
.word 0xc0f32bed
.word 0x3f5322c0
.word 0x3dde462c
.word 0xc0f32bed
.word 0x3f5322c0
.word 0x3dde462c
.word 0xc0f32bed
.word 0x3f5322c0
.word 0x3dde462c
.word 0xc0f32bed
.word 0x3f5322c0
.word 0x3f1f81c6
.word 0xbe8825d1
.word 0x3e29a903
.word 0x3f1f81c6
.word 0xbe8825d1
.word 0x3e29a903
.word 0x3f1f81c6
.word 0xbe8825d1
.word 0x3e29a903
.word 0x3f1f81c6
.word 0xbe8825d1
.word 0x3e29a903
.word 0x3f1f81c6
.word 0xbe8825d1
.word 0x3e29a903
.word 0x3f3bb039
.word 0xbf495558
.word 0x3f139bef
.word 0x3f3bb039
.word 0xbf495558
.word 0x3f139bef
.word 0x3f3bb039
.word 0xbf495558
.word 0x3f139bef
.word 0x3f3bb039
.word 0xbf495558
.word 0x3f139bef
.word 0x3f3bb039
.word 0xbf495558
.word 0x3f139bef
.word 0x3f7cf30f
.word 0xbf2a2913
.word 0x3f2821fe
.word 0x3f7cf30f
.word 0xbf2a2913
.word 0x3f2821fe
.word 0x3f7cf30f
.word 0xbf2a2913
.word 0x3f2821fe
.word 0x3f7cf30f
.word 0xbf2a2913
.word 0x3f2821fe
.word 0x3f7cf30f
.word 0xbf2a2913
.word 0x3f2821fe
.word 0x3f47b106
.word 0xbf782566
.word 0x3f4190ab
.word 0x3f47b106
.word 0xbf782566
.word 0x3f4190ab
.word 0x3f47b106
.word 0xbf782566
.word 0x3f4190ab
.word 0x3f47b106
.word 0xbf782566
.word 0x3f4190ab
.word 0x3f47b106
.word 0xbf782566
.word 0x3f4190ab
.word 0x3efc33cf
.word 0xbf1b3d6f
.word 0x3e98efe4
.word 0x3efc33cf
.word 0xbf1b3d6f
.word 0x3e98efe4
.word 0x3efc33cf
.word 0xbf1b3d6f
.word 0x3e98efe4
.word 0x3efc33cf
.word 0xbf1b3d6f
.word 0x3e98efe4
.word 0x3efc33cf
.word 0xbf1b3d6f
.word 0x3e98efe4
.word 0x3f6db75d
.word 0xbdd572e7
.word 0x3dc63443
.word 0x3f6db75d
.word 0xbdd572e7
.word 0x3dc63443
.word 0x3f6db75d
.word 0xbdd572e7
.word 0x3dc63443
.word 0x3f6db75d
.word 0xbdd572e7
.word 0x3dc63443
.word 0x3f6db75d
.word 0xbdd572e7
.word 0x3dc63443
.word 0x3ef14b96
.word 0xbf852427
.word 0x3efafcb2
.word 0x3ef14b96
.word 0xbf852427
.word 0x3efafcb2
.word 0x3ef14b96
.word 0xbf852427
.word 0x3efafcb2
.word 0x3ef14b96
.word 0xbf852427
.word 0x3efafcb2
.word 0x3ef14b96
.word 0xbf852427
.word 0x3efafcb2
.word 0x3f4d66ee
.word 0xbf87936b
.word 0x3f598f1f
.word 0x3f4d66ee
.word 0xbf87936b
.word 0x3f598f1f
.word 0x3f4d66ee
.word 0xbf87936b
.word 0x3f598f1f
.word 0x3f4d66ee
.word 0xbf87936b
.word 0x3f598f1f
.word 0x3f4d66ee
.word 0xbf87936b
.word 0x3f598f1f
.word 0x3e204361
.word 0xc04afb96
.word 0x3efe2555
.word 0x3e204361
.word 0xc04afb96
.word 0x3efe2555
.word 0x3e204361
.word 0xc04afb96
.word 0x3efe2555
.word 0x3e204361
.word 0xc04afb96
.word 0x3efe2555
.word 0x3e204361
.word 0xc04afb96
.word 0x3efe2555
.word 0x3e988065
.word 0xbe2be59a
.word 0x3d4ccd14
.word 0x3e988065
.word 0xbe2be59a
.word 0x3d4ccd14
.word 0x3e988065
.word 0xbe2be59a
.word 0x3d4ccd14
.word 0x3e988065
.word 0xbe2be59a
.word 0x3d4ccd14
.word 0x3e988065
.word 0xbe2be59a
.word 0x3d4ccd14
.word 0x3f67029b
.word 0xbeafc972
.word 0x3e9ea08f
.word 0x3f67029b
.word 0xbeafc972
.word 0x3e9ea08f
.word 0x3f67029b
.word 0xbeafc972
.word 0x3e9ea08f
.word 0x3f67029b
.word 0xbeafc972
.word 0x3e9ea08f
.word 0x3f67029b
.word 0xbeafc972
.word 0x3e9ea08f
.word 0x3f5d723a
.word 0xbe8b82ef
.word 0x3e715c92
.word 0x3f5d723a
.word 0xbe8b82ef
.word 0x3e715c92
.word 0x3f5d723a
.word 0xbe8b82ef
.word 0x3e715c92
.word 0x3f5d723a
.word 0xbe8b82ef
.word 0x3e715c92
.word 0x3f5d723a
.word 0xbe8b82ef
.word 0x3e715c92
.word 0x3f24af85
.word 0xbe42136e
.word 0x3df9b306
.word 0x3f24af85
.word 0xbe42136e
.word 0x3df9b306
.word 0x3f24af85
.word 0xbe42136e
.word 0x3df9b306
.word 0x3f24af85
.word 0xbe42136e
.word 0x3df9b306
.word 0x3f24af85
.word 0xbe42136e
.word 0x3df9b306
.word 0x3df3cb68
.word 0xc0c00737
.word 0x3f36df6e
.word 0x3df3cb68
.word 0xc0c00737
.word 0x3f36df6e
.word 0x3df3cb68
.word 0xc0c00737
.word 0x3f36df6e
.word 0x3df3cb68
.word 0xc0c00737
.word 0x3f36df6e
.word 0x3df3cb68
.word 0xc0c00737
.word 0x3f36df6e
.word 0x3ed79252
.word 0xbf24cf2a
.word 0x3e8ac82f
.word 0x3ed79252
.word 0xbf24cf2a
.word 0x3e8ac82f
.word 0x3ed79252
.word 0xbf24cf2a
.word 0x3e8ac82f
.word 0x3ed79252
.word 0xbf24cf2a
.word 0x3e8ac82f
.word 0x3ed79252
.word 0xbf24cf2a
.word 0x3e8ac82f
.word 0x3f4e5f95
.word 0xbd8912ce
.word 0x3d5d00a0
.word 0x3f4e5f95
.word 0xbd8912ce
.word 0x3d5d00a0
.word 0x3f4e5f95
.word 0xbd8912ce
.word 0x3d5d00a0
.word 0x3f4e5f95
.word 0xbd8912ce
.word 0x3d5d00a0
.word 0x3f4e5f95
.word 0xbd8912ce
.word 0x3d5d00a0
.word 0x3d5cf92b
.word 0xc117a68b
.word 0x3f02e6bb
.word 0x3d5cf92b
.word 0xc117a68b
.word 0x3f02e6bb
.word 0x3d5cf92b
.word 0xc117a68b
.word 0x3f02e6bb
.word 0x3d5cf92b
.word 0xc117a68b
.word 0x3f02e6bb
.word 0x3d5cf92b
.word 0xc117a68b
.word 0x3f02e6bb
.word 0x3f5b9cd8
.word 0xbf8b9a64
.word 0x3f6f8537
.word 0x3f5b9cd8
.word 0xbf8b9a64
.word 0x3f6f8537
.word 0x3f5b9cd8
.word 0xbf8b9a64
.word 0x3f6f8537
.word 0x3f5b9cd8
.word 0xbf8b9a64
.word 0x3f6f8537
.word 0x3f5b9cd8
.word 0xbf8b9a64
.word 0x3f6f8537
.word 0x3dc9fbec
.word 0xc087c670
.word 0x3ed640d7
.word 0x3dc9fbec
.word 0xc087c670
.word 0x3ed640d7
.word 0x3dc9fbec
.word 0xc087c670
.word 0x3ed640d7
.word 0x3dc9fbec
.word 0xc087c670
.word 0x3ed640d7
.word 0x3dc9fbec
.word 0xc087c670
.word 0x3ed640d7
.word 0x3f009e8f
.word 0xbf327aa0
.word 0x3eb357b8
.word 0x3f009e8f
.word 0xbf327aa0
.word 0x3eb357b8
.word 0x3f009e8f
.word 0xbf327aa0
.word 0x3eb357b8
.word 0x3f009e8f
.word 0xbf327aa0
.word 0x3eb357b8
.word 0x3f009e8f
.word 0xbf327aa0
.word 0x3eb357b8
.word 0x3f295c16
.word 0xbeeee924
.word 0x3e9e0dd9
.word 0x3f295c16
.word 0xbeeee924
.word 0x3e9e0dd9
.word 0x3f295c16
.word 0xbeeee924
.word 0x3e9e0dd9
.word 0x3f295c16
.word 0xbeeee924
.word 0x3e9e0dd9
.word 0x3f295c16
.word 0xbeeee924
.word 0x3e9e0dd9
.word 0x3f1f6f7b
.word 0xbf0b6916
.word 0x3eada5f6
.word 0x3f1f6f7b
.word 0xbf0b6916
.word 0x3eada5f6
.word 0x3f1f6f7b
.word 0xbf0b6916
.word 0x3eada5f6
.word 0x3f1f6f7b
.word 0xbf0b6916
.word 0x3eada5f6
.word 0x3f1f6f7b
.word 0xbf0b6916
.word 0x3eada5f6
.word 0x3f6fd96b
.word 0xbecf91bc
.word 0x3ec27958
.word 0x3f6fd96b
.word 0xbecf91bc
.word 0x3ec27958
.word 0x3f6fd96b
.word 0xbecf91bc
.word 0x3ec27958
.word 0x3f6fd96b
.word 0xbecf91bc
.word 0x3ec27958
.word 0x3f6fd96b
.word 0xbecf91bc
.word 0x3ec27958
.word 0x3f3ddc55
.word 0xbc3983f7
.word 0x3c099619
.word 0x3f3ddc55
.word 0xbc3983f7
.word 0x3c099619
.word 0x3f3ddc55
.word 0xbc3983f7
.word 0x3c099619
.word 0x3f3ddc55
.word 0xbc3983f7
.word 0x3c099619
.word 0x3f3ddc55
.word 0xbc3983f7
.word 0x3c099619
.word 0x3f1ef4e9
.word 0xbfb6b300
.word 0x3f62e287
.word 0x3f1ef4e9
.word 0xbfb6b300
.word 0x3f62e287
.word 0x3f1ef4e9
.word 0xbfb6b300
.word 0x3f62e287
.word 0x3f1ef4e9
.word 0xbfb6b300
.word 0x3f62e287
.word 0x3f1ef4e9
.word 0xbfb6b300
.word 0x3f62e287
.word 0x3f17a357
.word 0xbe294e60
.word 0x3dc89283
.word 0x3f17a357
.word 0xbe294e60
.word 0x3dc89283
.word 0x3f17a357
.word 0xbe294e60
.word 0x3dc89283
.word 0x3f17a357
.word 0xbe294e60
.word 0x3dc89283
.word 0x3f17a357
.word 0xbe294e60
.word 0x3dc89283
.word 0x3f7ae1d9
.word 0xbf3f895e
.word 0x3f3bb520
.word 0x3f7ae1d9
.word 0xbf3f895e
.word 0x3f3bb520
.word 0x3f7ae1d9
.word 0xbf3f895e
.word 0x3f3bb520
.word 0x3f7ae1d9
.word 0xbf3f895e
.word 0x3f3bb520
.word 0x3f7ae1d9
.word 0xbf3f895e
.word 0x3f3bb520
.word 0x3f69123a
.word 0xbf5755fa
.word 0x3f440c95
.word 0x3f69123a
.word 0xbf5755fa
.word 0x3f440c95
.word 0x3f69123a
.word 0xbf5755fa
.word 0x3f440c95
.word 0x3f69123a
.word 0xbf5755fa
.word 0x3f440c95
.word 0x3f69123a
.word 0xbf5755fa
.word 0x3f440c95
.word 0x3f4ec9f5
.word 0xbe56d8a7
.word 0x3e2d8bd4
.word 0x3f4ec9f5
.word 0xbe56d8a7
.word 0x3e2d8bd4
.word 0x3f4ec9f5
.word 0xbe56d8a7
.word 0x3e2d8bd4
.word 0x3f4ec9f5
.word 0xbe56d8a7
.word 0x3e2d8bd4
.word 0x3f4ec9f5
.word 0xbe56d8a7
.word 0x3e2d8bd4
.word 0x3f0bff83
.word 0xbf6c68b6
.word 0x3f0148d0
.word 0x3f0bff83
.word 0xbf6c68b6
.word 0x3f0148d0
.word 0x3f0bff83
.word 0xbf6c68b6
.word 0x3f0148d0
.word 0x3f0bff83
.word 0xbf6c68b6
.word 0x3f0148d0
.word 0x3f0bff83
.word 0xbf6c68b6
.word 0x3f0148d0
.word 0x3eb75d05
.word 0xbfc14fb1
.word 0x3f0a7635
.word 0x3eb75d05
.word 0xbfc14fb1
.word 0x3f0a7635
.word 0x3eb75d05
.word 0xbfc14fb1
.word 0x3f0a7635
.word 0x3eb75d05
.word 0xbfc14fb1
.word 0x3f0a7635
.word 0x3eb75d05
.word 0xbfc14fb1
.word 0x3f0a7635
.word 0x3a6472bf
.word 0xc462cdc3
.word 0x3f4a64ea
.word 0x3a6472bf
.word 0xc462cdc3
.word 0x3f4a64ea
.word 0x3a6472bf
.word 0xc462cdc3
.word 0x3f4a64ea
.word 0x3a6472bf
.word 0xc462cdc3
.word 0x3f4a64ea
.word 0x3a6472bf
.word 0xc462cdc3
.word 0x3f4a64ea
.word 0x3f6a314c
.word 0xbf52983c
.word 0x3f40a7b5
.word 0x3f6a314c
.word 0xbf52983c
.word 0x3f40a7b5
.word 0x3f6a314c
.word 0xbf52983c
.word 0x3f40a7b5
.word 0x3f6a314c
.word 0xbf52983c
.word 0x3f40a7b5
.word 0x3f6a314c
.word 0xbf52983c
.word 0x3f40a7b5
.word 0x3f5fa8c7
.word 0xbeacfcc5
.word 0x3e97223c
.word 0x3f5fa8c7
.word 0xbeacfcc5
.word 0x3e97223c
.word 0x3f5fa8c7
.word 0xbeacfcc5
.word 0x3e97223c
.word 0x3f5fa8c7
.word 0xbeacfcc5
.word 0x3e97223c
.word 0x3f5fa8c7
.word 0xbeacfcc5
.word 0x3e97223c
.word 0x3f45f69a
.word 0xbd47b766
.word 0x3d1a7085
.word 0x3f45f69a
.word 0xbd47b766
.word 0x3d1a7085
.word 0x3f45f69a
.word 0xbd47b766
.word 0x3d1a7085
.word 0x3f45f69a
.word 0xbd47b766
.word 0x3d1a7085
.word 0x3f381a34
.word 0xbf04887b
.word 0x3ebe9f54
.word 0x3f381a34
.word 0xbf04887b
.word 0x3ebe9f54
.word 0x3f381a34
.word 0xbf04887b
.word 0x3ebe9f54
.word 0x3da9474d
.word 0xc0be1a89
.word 0x3efb68f0
.word 0x3da9474d
.word 0xc0be1a89
.word 0x3efb68f0
.word 0x3da9474d
.word 0xc0be1a89
.word 0x3efb68f0
.word 0x3da9474d
.word 0xc0be1a89
.word 0x3efb68f0
.word 0x3da9474d
.word 0xc0be1a89
.word 0x3efb68f0
RVTEST_DATA_END

RVMODEL_DATA_BEGIN


signature_x15_0:
    .fill 0*(XLEN/32),4,0xdeadbeef


signature_x15_1:
    .fill 508*(XLEN/32),4,0xdeadbeef


signature_x15_2:
    .fill 508*(XLEN/32),4,0xdeadbeef


signature_x15_3:
    .fill 508*(XLEN/32),4,0xdeadbeef


signature_x15_4:
    .fill 508*(XLEN/32),4,0xdeadbeef


signature_x15_5:
    .fill 508*(XLEN/32),4,0xdeadbeef


signature_x15_6:
    .fill 508*(XLEN/32),4,0xdeadbeef


signature_x15_7:
    .fill 328*(XLEN/32),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*(XLEN/32),4,0xdeadbeef

#endif

RVMODEL_DATA_END
