
// -----------
// This file was generated by riscv_ctg (https://gitlab.com/incoresemi/riscv-compliance/riscv_ctg)
// version   : 0.5.2
// timestamp : Tue Sep  7 16:08:09 2021 GMT
// usage     : riscv_ctg \
//                  -- cgf $cgf \
//                  -- xlen $xlen \
// -----------
//
// -----------
// Copyright (c) 2021. IIT Madras. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.s instruction of the RISC-V F extension for the fmsub_b4 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fmsub_b4)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x16,test_fp)
RVTEST_SIGBASE(x15,signature_x15_1)

inst_0:
// rs1 == rs2 == rs3 != rd, rs1==f1, rs2==f1, rs3==f1, rd==f17, fs1 == 0 and fe1 == 0xfc and fm1 == 0x78b41c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x637214 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x67b44e and rm_val == 0  
// opcode: fmsub.s ; op1:f1; op2:f1; op3:f1; dest:f17; op1val:0x7e78b41c; op2val:0x7e78b41c; op3val:0x7e78b41c; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f17, f1, f1, f1, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_1:
// rs1 == rd == rs3 != rs2, rs1==f15, rs2==f17, rs3==f15, rd==f15, fs1 == 0 and fe1 == 0xfb and fm1 == 0x6972bf and fs2 == 1 and fe2 == 0x84 and fm2 == 0x45add1 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3bc306 and rm_val == 4  
// opcode: fmsub.s ; op1:f15; op2:f17; op3:f15; dest:f15; op1val:0x7de972bf; op2val:0xc245add1; op3val:0x7de972bf; valaddr_reg:x16; val_offset:12; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f15, f15, f17, f15, 0x4, 0, x16, 12, x17, x15, 8, x18)

inst_2:
// rs1 == rs3 != rs2 and rs1 == rs3 != rd and rd != rs2, rs1==f25, rs2==f12, rs3==f25, rd==f1, fs1 == 0 and fe1 == 0xfb and fm1 == 0x6972bf and fs2 == 1 and fe2 == 0x84 and fm2 == 0x45add1 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3bc306 and rm_val == 3  
// opcode: fmsub.s ; op1:f25; op2:f12; op3:f25; dest:f1; op1val:0x7de972bf; op2val:0xc245add1; op3val:0x7de972bf; valaddr_reg:x16; val_offset:24; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f1, f25, f12, f25, 0x3, 0, x16, 24, x17, x15, 16, x18)

inst_3:
// rs2 == rd != rs1 and rs2 == rd != rs3 and rs3 != rs1, rs1==f13, rs2==f4, rs3==f9, rd==f4, fs1 == 0 and fe1 == 0xfb and fm1 == 0x6972bf and fs2 == 1 and fe2 == 0x84 and fm2 == 0x45add1 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3bc306 and rm_val == 2  
// opcode: fmsub.s ; op1:f13; op2:f4; op3:f9; dest:f4; op1val:0x7de972bf; op2val:0xc245add1; op3val:0x7ebbc306; valaddr_reg:x16; val_offset:36; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f4, f13, f4, f9, 0x2, 0, x16, 36, x17, x15, 24, x18)

inst_4:
// rs2 == rs3 != rs1 and rs2 == rs3 != rd and rd != rs1, rs1==f26, rs2==f0, rs3==f0, rd==f25, fs1 == 0 and fe1 == 0xfb and fm1 == 0x6972bf and fs2 == 1 and fe2 == 0x84 and fm2 == 0x45add1 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3bc306 and rm_val == 1  
// opcode: fmsub.s ; op1:f26; op2:f0; op3:f0; dest:f25; op1val:0x7de972bf; op2val:0xc245add1; op3val:0xc245add1; valaddr_reg:x16; val_offset:48; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f25, f26, f0, f0, 0x1, 0, x16, 48, x17, x15, 32, x18)

inst_5:
// rd == rs2 == rs3 != rs1, rs1==f28, rs2==f22, rs3==f22, rd==f22, fs1 == 0 and fe1 == 0xfb and fm1 == 0x6972bf and fs2 == 1 and fe2 == 0x84 and fm2 == 0x45add1 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3bc306 and rm_val == 0  
// opcode: fmsub.s ; op1:f28; op2:f22; op3:f22; dest:f22; op1val:0x7de972bf; op2val:0xc245add1; op3val:0xc245add1; valaddr_reg:x16; val_offset:60; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f22, f28, f22, f22, 0x0, 0, x16, 60, x17, x15, 40, x18)

inst_6:
// rs1 == rs2 != rs3 and rs1 == rs2 != rd and rd != rs3, rs1==f9, rs2==f9, rs3==f18, rd==f0, fs1 == 0 and fe1 == 0xfd and fm1 == 0x208f24 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x278d32 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x115efd and rm_val == 4  
// opcode: fmsub.s ; op1:f9; op2:f9; op3:f18; dest:f0; op1val:0x7ea08f24; op2val:0x7ea08f24; op3val:0x7f115efd; valaddr_reg:x16; val_offset:72; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f0, f9, f9, f18, 0x4, 0, x16, 72, x17, x15, 48, x18)

inst_7:
// rs1 == rs2 == rd != rs3, rs1==f6, rs2==f6, rs3==f8, rd==f6, fs1 == 0 and fe1 == 0xfd and fm1 == 0x208f24 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x278d32 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x115efd and rm_val == 3  
// opcode: fmsub.s ; op1:f6; op2:f6; op3:f8; dest:f6; op1val:0x7ea08f24; op2val:0x7ea08f24; op3val:0x7f115efd; valaddr_reg:x16; val_offset:84; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f6, f6, f6, f8, 0x3, 0, x16, 84, x17, x15, 56, x18)

inst_8:
// rs1 == rs2 == rs3 == rd, rs1==f10, rs2==f10, rs3==f10, rd==f10, fs1 == 0 and fe1 == 0xfd and fm1 == 0x208f24 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x278d32 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x115efd and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f10; op3:f10; dest:f10; op1val:0x7ea08f24; op2val:0x7ea08f24; op3val:0x7ea08f24; valaddr_reg:x16; val_offset:96; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f10, f10, f10, f10, 0x2, 0, x16, 96, x17, x15, 64, x18)

inst_9:
// rs3 == rd != rs1 and rs3 == rd != rs2 and rs2 != rs1, rs1==f24, rs2==f3, rs3==f5, rd==f5, fs1 == 0 and fe1 == 0xfd and fm1 == 0x208f24 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x278d32 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x115efd and rm_val == 1  
// opcode: fmsub.s ; op1:f24; op2:f3; op3:f5; dest:f5; op1val:0x7ea08f24; op2val:0x41a78d32; op3val:0x7f115efd; valaddr_reg:x16; val_offset:108; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f5, f24, f3, f5, 0x1, 0, x16, 108, x17, x15, 72, x18)

inst_10:
// rs1 != rs2 and rs1 != rd and rs1 != rs3 and rs2 != rs3 and rs2 != rd and rs3 != rd, rs1==f7, rs2==f20, rs3==f24, rd==f21, fs1 == 0 and fe1 == 0xfd and fm1 == 0x208f24 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x278d32 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x115efd and rm_val == 0  
// opcode: fmsub.s ; op1:f7; op2:f20; op3:f24; dest:f21; op1val:0x7ea08f24; op2val:0x41a78d32; op3val:0x7f115efd; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f21, f7, f20, f24, 0x0, 0, x16, 120, x17, x15, 80, x18)

inst_11:
// rs1 == rd != rs2 and rs1 == rd != rs3 and rs3 != rs2, rs1==f2, rs2==f13, rs3==f30, rd==f2, fs1 == 0 and fe1 == 0xfe and fm1 == 0x3c318d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7d7805 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x355959 and rm_val == 4  
// opcode: fmsub.s ; op1:f2; op2:f13; op3:f30; dest:f2; op1val:0x7f3c318d; op2val:0xc07d7805; op3val:0x7db55959; valaddr_reg:x16; val_offset:132; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f2, f2, f13, f30, 0x4, 0, x16, 132, x17, x15, 88, x18)

inst_12:
// rs1==f27, rs2==f21, rs3==f28, rd==f14, fs1 == 0 and fe1 == 0xfe and fm1 == 0x3c318d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7d7805 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x355959 and rm_val == 3  
// opcode: fmsub.s ; op1:f27; op2:f21; op3:f28; dest:f14; op1val:0x7f3c318d; op2val:0xc07d7805; op3val:0x7db55959; valaddr_reg:x16; val_offset:144; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f14, f27, f21, f28, 0x3, 0, x16, 144, x17, x15, 96, x18)

inst_13:
// rs1==f17, rs2==f11, rs3==f13, rd==f26, fs1 == 0 and fe1 == 0xfe and fm1 == 0x3c318d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7d7805 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x355959 and rm_val == 2  
// opcode: fmsub.s ; op1:f17; op2:f11; op3:f13; dest:f26; op1val:0x7f3c318d; op2val:0xc07d7805; op3val:0x7db55959; valaddr_reg:x16; val_offset:156; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f26, f17, f11, f13, 0x2, 0, x16, 156, x17, x15, 104, x18)

inst_14:
// rs1==f3, rs2==f8, rs3==f29, rd==f16, fs1 == 0 and fe1 == 0xfe and fm1 == 0x3c318d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7d7805 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x355959 and rm_val == 1  
// opcode: fmsub.s ; op1:f3; op2:f8; op3:f29; dest:f16; op1val:0x7f3c318d; op2val:0xc07d7805; op3val:0x7db55959; valaddr_reg:x16; val_offset:168; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f16, f3, f8, f29, 0x1, 0, x16, 168, x17, x15, 112, x18)

inst_15:
// rs1==f30, rs2==f18, rs3==f4, rd==f23, fs1 == 0 and fe1 == 0xfe and fm1 == 0x3c318d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7d7805 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x355959 and rm_val == 0  
// opcode: fmsub.s ; op1:f30; op2:f18; op3:f4; dest:f23; op1val:0x7f3c318d; op2val:0xc07d7805; op3val:0x7db55959; valaddr_reg:x16; val_offset:180; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f23, f30, f18, f4, 0x0, 0, x16, 180, x17, x15, 120, x18)

inst_16:
// rs1==f21, rs2==f26, rs3==f2, rd==f30, fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c0db1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x3c1b7a and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5d22dd and rm_val == 4  
// opcode: fmsub.s ; op1:f21; op2:f26; op3:f2; dest:f30; op1val:0x7f0c0db1; op2val:0x40bc1b7a; op3val:0x7e5d22dd; valaddr_reg:x16; val_offset:192; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f30, f21, f26, f2, 0x4, 0, x16, 192, x17, x15, 128, x18)

inst_17:
// rs1==f8, rs2==f2, rs3==f20, rd==f18, fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c0db1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x3c1b7a and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5d22dd and rm_val == 3  
// opcode: fmsub.s ; op1:f8; op2:f2; op3:f20; dest:f18; op1val:0x7f0c0db1; op2val:0x40bc1b7a; op3val:0x7e5d22dd; valaddr_reg:x16; val_offset:204; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f18, f8, f2, f20, 0x3, 0, x16, 204, x17, x15, 136, x18)

inst_18:
// rs1==f14, rs2==f29, rs3==f31, rd==f7, fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c0db1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x3c1b7a and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5d22dd and rm_val == 2  
// opcode: fmsub.s ; op1:f14; op2:f29; op3:f31; dest:f7; op1val:0x7f0c0db1; op2val:0x40bc1b7a; op3val:0x7e5d22dd; valaddr_reg:x16; val_offset:216; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f7, f14, f29, f31, 0x2, 0, x16, 216, x17, x15, 144, x18)

inst_19:
// rs1==f5, rs2==f30, rs3==f21, rd==f13, fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c0db1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x3c1b7a and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5d22dd and rm_val == 1  
// opcode: fmsub.s ; op1:f5; op2:f30; op3:f21; dest:f13; op1val:0x7f0c0db1; op2val:0x40bc1b7a; op3val:0x7e5d22dd; valaddr_reg:x16; val_offset:228; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f5, f30, f21, 0x1, 0, x16, 228, x17, x15, 152, x18)

inst_20:
// rs1==f31, rs2==f23, rs3==f16, rd==f11, fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c0db1 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x3c1b7a and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5d22dd and rm_val == 0  
// opcode: fmsub.s ; op1:f31; op2:f23; op3:f16; dest:f11; op1val:0x7f0c0db1; op2val:0x40bc1b7a; op3val:0x7e5d22dd; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f11, f31, f23, f16, 0x0, 0, x16, 240, x17, x15, 160, x18)

inst_21:
// rs1==f18, rs2==f25, rs3==f14, rd==f31, fs1 == 0 and fe1 == 0xfd and fm1 == 0x49acea and fs2 == 1 and fe2 == 0x80 and fm2 == 0x091324 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2806c1 and rm_val == 4  
// opcode: fmsub.s ; op1:f18; op2:f25; op3:f14; dest:f31; op1val:0x7ec9acea; op2val:0xc0091324; op3val:0x7f2806c1; valaddr_reg:x16; val_offset:252; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f31, f18, f25, f14, 0x4, 0, x16, 252, x17, x15, 168, x18)

inst_22:
// rs1==f12, rs2==f19, rs3==f17, rd==f3, fs1 == 0 and fe1 == 0xfd and fm1 == 0x49acea and fs2 == 1 and fe2 == 0x80 and fm2 == 0x091324 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2806c1 and rm_val == 3  
// opcode: fmsub.s ; op1:f12; op2:f19; op3:f17; dest:f3; op1val:0x7ec9acea; op2val:0xc0091324; op3val:0x7f2806c1; valaddr_reg:x16; val_offset:264; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f3, f12, f19, f17, 0x3, 0, x16, 264, x17, x15, 176, x18)

inst_23:
// rs1==f4, rs2==f14, rs3==f26, rd==f24, fs1 == 0 and fe1 == 0xfd and fm1 == 0x49acea and fs2 == 1 and fe2 == 0x80 and fm2 == 0x091324 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2806c1 and rm_val == 2  
// opcode: fmsub.s ; op1:f4; op2:f14; op3:f26; dest:f24; op1val:0x7ec9acea; op2val:0xc0091324; op3val:0x7f2806c1; valaddr_reg:x16; val_offset:276; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f24, f4, f14, f26, 0x2, 0, x16, 276, x17, x15, 184, x18)

inst_24:
// rs1==f29, rs2==f31, rs3==f7, rd==f9, fs1 == 0 and fe1 == 0xfd and fm1 == 0x49acea and fs2 == 1 and fe2 == 0x80 and fm2 == 0x091324 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2806c1 and rm_val == 1  
// opcode: fmsub.s ; op1:f29; op2:f31; op3:f7; dest:f9; op1val:0x7ec9acea; op2val:0xc0091324; op3val:0x7f2806c1; valaddr_reg:x16; val_offset:288; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f9, f29, f31, f7, 0x1, 0, x16, 288, x17, x15, 192, x18)

inst_25:
// rs1==f0, rs2==f24, rs3==f19, rd==f20, fs1 == 0 and fe1 == 0xfd and fm1 == 0x49acea and fs2 == 1 and fe2 == 0x80 and fm2 == 0x091324 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2806c1 and rm_val == 0  
// opcode: fmsub.s ; op1:f0; op2:f24; op3:f19; dest:f20; op1val:0x7ec9acea; op2val:0xc0091324; op3val:0x7f2806c1; valaddr_reg:x16; val_offset:300; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f20, f0, f24, f19, 0x0, 0, x16, 300, x17, x15, 200, x18)

inst_26:
// rs1==f23, rs2==f7, rs3==f11, rd==f28, fs1 == 0 and fe1 == 0xfc and fm1 == 0x3b7753 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x28bf77 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5c9425 and rm_val == 4  
// opcode: fmsub.s ; op1:f23; op2:f7; op3:f11; dest:f28; op1val:0x7e3b7753; op2val:0x4128bf77; op3val:0x7edc9425; valaddr_reg:x16; val_offset:312; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f28, f23, f7, f11, 0x4, 0, x16, 312, x17, x15, 208, x18)

inst_27:
// rs1==f20, rs2==f16, rs3==f27, rd==f29, fs1 == 0 and fe1 == 0xfc and fm1 == 0x3b7753 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x28bf77 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5c9425 and rm_val == 3  
// opcode: fmsub.s ; op1:f20; op2:f16; op3:f27; dest:f29; op1val:0x7e3b7753; op2val:0x4128bf77; op3val:0x7edc9425; valaddr_reg:x16; val_offset:324; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f29, f20, f16, f27, 0x3, 0, x16, 324, x17, x15, 216, x18)

inst_28:
// rs1==f16, rs2==f15, rs3==f6, rd==f19, fs1 == 0 and fe1 == 0xfc and fm1 == 0x3b7753 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x28bf77 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5c9425 and rm_val == 2  
// opcode: fmsub.s ; op1:f16; op2:f15; op3:f6; dest:f19; op1val:0x7e3b7753; op2val:0x4128bf77; op3val:0x7edc9425; valaddr_reg:x16; val_offset:336; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f19, f16, f15, f6, 0x2, 0, x16, 336, x17, x15, 224, x18)

inst_29:
// rs1==f11, rs2==f27, rs3==f23, rd==f8, fs1 == 0 and fe1 == 0xfc and fm1 == 0x3b7753 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x28bf77 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5c9425 and rm_val == 1  
// opcode: fmsub.s ; op1:f11; op2:f27; op3:f23; dest:f8; op1val:0x7e3b7753; op2val:0x4128bf77; op3val:0x7edc9425; valaddr_reg:x16; val_offset:348; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f8, f11, f27, f23, 0x1, 0, x16, 348, x17, x15, 232, x18)

inst_30:
// rs1==f22, rs2==f5, rs3==f3, rd==f12, fs1 == 0 and fe1 == 0xfc and fm1 == 0x3b7753 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x28bf77 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5c9425 and rm_val == 0  
// opcode: fmsub.s ; op1:f22; op2:f5; op3:f3; dest:f12; op1val:0x7e3b7753; op2val:0x4128bf77; op3val:0x7edc9425; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f12, f22, f5, f3, 0x0, 0, x16, 360, x17, x15, 240, x18)

inst_31:
// rs1==f19, rs2==f28, rs3==f12, rd==f27, fs1 == 0 and fe1 == 0xfe and fm1 == 0x188556 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x4201ad and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0634f9 and rm_val == 4  
// opcode: fmsub.s ; op1:f19; op2:f28; op3:f12; dest:f27; op1val:0x7f188556; op2val:0xbec201ad; op3val:0x7f0634f9; valaddr_reg:x16; val_offset:372; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f27, f19, f28, f12, 0x4, 0, x16, 372, x17, x15, 248, x18)

inst_32:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x188556 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x4201ad and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0634f9 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f188556; op2val:0xbec201ad; op3val:0x7f0634f9; valaddr_reg:x16; val_offset:384; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 384, x17, x15, 256, x18)

inst_33:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x188556 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x4201ad and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0634f9 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f188556; op2val:0xbec201ad; op3val:0x7f0634f9; valaddr_reg:x16; val_offset:396; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 396, x17, x15, 264, x18)

inst_34:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x188556 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x4201ad and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0634f9 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f188556; op2val:0xbec201ad; op3val:0x7f0634f9; valaddr_reg:x16; val_offset:408; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 408, x17, x15, 272, x18)

inst_35:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x188556 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x4201ad and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0634f9 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f188556; op2val:0xbec201ad; op3val:0x7f0634f9; valaddr_reg:x16; val_offset:420; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 420, x17, x15, 280, x18)

inst_36:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e05d5 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x378e8c and fs3 == 0 and fe3 == 0xfc and fm3 == 0x663896 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eae05d5; op2val:0x40378e8c; op3val:0x7e663896; valaddr_reg:x16; val_offset:432; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 432, x17, x15, 288, x18)

inst_37:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e05d5 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x378e8c and fs3 == 0 and fe3 == 0xfc and fm3 == 0x663896 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eae05d5; op2val:0x40378e8c; op3val:0x7e663896; valaddr_reg:x16; val_offset:444; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 444, x17, x15, 296, x18)

inst_38:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e05d5 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x378e8c and fs3 == 0 and fe3 == 0xfc and fm3 == 0x663896 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eae05d5; op2val:0x40378e8c; op3val:0x7e663896; valaddr_reg:x16; val_offset:456; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 456, x17, x15, 304, x18)

inst_39:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e05d5 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x378e8c and fs3 == 0 and fe3 == 0xfc and fm3 == 0x663896 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eae05d5; op2val:0x40378e8c; op3val:0x7e663896; valaddr_reg:x16; val_offset:468; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 468, x17, x15, 312, x18)

inst_40:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e05d5 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x378e8c and fs3 == 0 and fe3 == 0xfc and fm3 == 0x663896 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eae05d5; op2val:0x40378e8c; op3val:0x7e663896; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 320, x18)

inst_41:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7143d8 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x0b7316 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x60db12 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e7143d8; op2val:0x3e8b7316; op3val:0x7ee0db12; valaddr_reg:x16; val_offset:492; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 492, x17, x15, 328, x18)

inst_42:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7143d8 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x0b7316 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x60db12 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e7143d8; op2val:0x3e8b7316; op3val:0x7ee0db12; valaddr_reg:x16; val_offset:504; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 504, x17, x15, 336, x18)

inst_43:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7143d8 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x0b7316 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x60db12 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e7143d8; op2val:0x3e8b7316; op3val:0x7ee0db12; valaddr_reg:x16; val_offset:516; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 516, x17, x15, 344, x18)

inst_44:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7143d8 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x0b7316 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x60db12 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e7143d8; op2val:0x3e8b7316; op3val:0x7ee0db12; valaddr_reg:x16; val_offset:528; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 528, x17, x15, 352, x18)

inst_45:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7143d8 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x0b7316 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x60db12 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e7143d8; op2val:0x3e8b7316; op3val:0x7ee0db12; valaddr_reg:x16; val_offset:540; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 540, x17, x15, 360, x18)

inst_46:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02a304 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2e80c2 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x243208 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f02a304; op2val:0x3fae80c2; op3val:0x7ea43208; valaddr_reg:x16; val_offset:552; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 552, x17, x15, 368, x18)

inst_47:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02a304 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2e80c2 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x243208 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f02a304; op2val:0x3fae80c2; op3val:0x7ea43208; valaddr_reg:x16; val_offset:564; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 564, x17, x15, 376, x18)

inst_48:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02a304 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2e80c2 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x243208 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f02a304; op2val:0x3fae80c2; op3val:0x7ea43208; valaddr_reg:x16; val_offset:576; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 576, x17, x15, 384, x18)

inst_49:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02a304 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2e80c2 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x243208 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f02a304; op2val:0x3fae80c2; op3val:0x7ea43208; valaddr_reg:x16; val_offset:588; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 588, x17, x15, 392, x18)

inst_50:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02a304 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2e80c2 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x243208 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f02a304; op2val:0x3fae80c2; op3val:0x7ea43208; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 400, x18)

inst_51:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x371843 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3d2ab8 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x1e2d21 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d371843; op2val:0xbf3d2ab8; op3val:0x7e1e2d21; valaddr_reg:x16; val_offset:612; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 612, x17, x15, 408, x18)

inst_52:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x371843 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3d2ab8 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x1e2d21 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d371843; op2val:0xbf3d2ab8; op3val:0x7e1e2d21; valaddr_reg:x16; val_offset:624; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 624, x17, x15, 416, x18)

inst_53:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x371843 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3d2ab8 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x1e2d21 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d371843; op2val:0xbf3d2ab8; op3val:0x7e1e2d21; valaddr_reg:x16; val_offset:636; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 636, x17, x15, 424, x18)

inst_54:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x371843 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3d2ab8 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x1e2d21 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d371843; op2val:0xbf3d2ab8; op3val:0x7e1e2d21; valaddr_reg:x16; val_offset:648; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 648, x17, x15, 432, x18)

inst_55:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x371843 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3d2ab8 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x1e2d21 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d371843; op2val:0xbf3d2ab8; op3val:0x7e1e2d21; valaddr_reg:x16; val_offset:660; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 660, x17, x15, 440, x18)

inst_56:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x525578 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x123045 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x40e341 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ed25578; op2val:0x3f123045; op3val:0x7d40e341; valaddr_reg:x16; val_offset:672; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 672, x17, x15, 448, x18)

inst_57:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x525578 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x123045 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x40e341 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ed25578; op2val:0x3f123045; op3val:0x7d40e341; valaddr_reg:x16; val_offset:684; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 684, x17, x15, 456, x18)

inst_58:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x525578 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x123045 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x40e341 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ed25578; op2val:0x3f123045; op3val:0x7d40e341; valaddr_reg:x16; val_offset:696; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 696, x17, x15, 464, x18)

inst_59:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x525578 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x123045 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x40e341 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ed25578; op2val:0x3f123045; op3val:0x7d40e341; valaddr_reg:x16; val_offset:708; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 708, x17, x15, 472, x18)

inst_60:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x525578 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x123045 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x40e341 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ed25578; op2val:0x3f123045; op3val:0x7d40e341; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 480, x18)

inst_61:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7557bf and fs2 == 0 and fe2 == 0x7d and fm2 == 0x46412e and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0f002a and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef557bf; op2val:0x3ec6412e; op3val:0x7e8f002a; valaddr_reg:x16; val_offset:732; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 732, x17, x15, 488, x18)

inst_62:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7557bf and fs2 == 0 and fe2 == 0x7d and fm2 == 0x46412e and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0f002a and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef557bf; op2val:0x3ec6412e; op3val:0x7e8f002a; valaddr_reg:x16; val_offset:744; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 744, x17, x15, 496, x18)

inst_63:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7557bf and fs2 == 0 and fe2 == 0x7d and fm2 == 0x46412e and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0f002a and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef557bf; op2val:0x3ec6412e; op3val:0x7e8f002a; valaddr_reg:x16; val_offset:756; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 756, x17, x15, 504, x18)

inst_64:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7557bf and fs2 == 0 and fe2 == 0x7d and fm2 == 0x46412e and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0f002a and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef557bf; op2val:0x3ec6412e; op3val:0x7e8f002a; valaddr_reg:x16; val_offset:768; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 768, x17, x15, 512, x18)

inst_65:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7557bf and fs2 == 0 and fe2 == 0x7d and fm2 == 0x46412e and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0f002a and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef557bf; op2val:0x3ec6412e; op3val:0x7e8f002a; valaddr_reg:x16; val_offset:780; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 780, x17, x15, 520, x18)

inst_66:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0acc40 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x7a39d0 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5f559e and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e0acc40; op2val:0x407a39d0; op3val:0x7edf559e; valaddr_reg:x16; val_offset:792; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 792, x17, x15, 528, x18)

inst_67:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0acc40 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x7a39d0 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5f559e and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e0acc40; op2val:0x407a39d0; op3val:0x7edf559e; valaddr_reg:x16; val_offset:804; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 804, x17, x15, 536, x18)

inst_68:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0acc40 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x7a39d0 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5f559e and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e0acc40; op2val:0x407a39d0; op3val:0x7edf559e; valaddr_reg:x16; val_offset:816; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 816, x17, x15, 544, x18)

inst_69:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0acc40 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x7a39d0 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5f559e and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e0acc40; op2val:0x407a39d0; op3val:0x7edf559e; valaddr_reg:x16; val_offset:828; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 828, x17, x15, 552, x18)

inst_70:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0acc40 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x7a39d0 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5f559e and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e0acc40; op2val:0x407a39d0; op3val:0x7edf559e; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 560, x18)

inst_71:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6ce9fd and fs2 == 0 and fe2 == 0x81 and fm2 == 0x3c64cb and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1cb23d and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e6ce9fd; op2val:0x40bc64cb; op3val:0x7f1cb23d; valaddr_reg:x16; val_offset:852; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 852, x17, x15, 568, x18)

inst_72:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6ce9fd and fs2 == 0 and fe2 == 0x81 and fm2 == 0x3c64cb and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1cb23d and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e6ce9fd; op2val:0x40bc64cb; op3val:0x7f1cb23d; valaddr_reg:x16; val_offset:864; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 864, x17, x15, 576, x18)

inst_73:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6ce9fd and fs2 == 0 and fe2 == 0x81 and fm2 == 0x3c64cb and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1cb23d and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e6ce9fd; op2val:0x40bc64cb; op3val:0x7f1cb23d; valaddr_reg:x16; val_offset:876; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 876, x17, x15, 584, x18)

inst_74:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6ce9fd and fs2 == 0 and fe2 == 0x81 and fm2 == 0x3c64cb and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1cb23d and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e6ce9fd; op2val:0x40bc64cb; op3val:0x7f1cb23d; valaddr_reg:x16; val_offset:888; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 888, x17, x15, 592, x18)

inst_75:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6ce9fd and fs2 == 0 and fe2 == 0x81 and fm2 == 0x3c64cb and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1cb23d and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e6ce9fd; op2val:0x40bc64cb; op3val:0x7f1cb23d; valaddr_reg:x16; val_offset:900; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 900, x17, x15, 600, x18)

inst_76:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5d9367 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x77f583 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x34edca and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ddd9367; op2val:0x40f7f583; op3val:0x7db4edca; valaddr_reg:x16; val_offset:912; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 912, x17, x15, 608, x18)

inst_77:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5d9367 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x77f583 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x34edca and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ddd9367; op2val:0x40f7f583; op3val:0x7db4edca; valaddr_reg:x16; val_offset:924; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 924, x17, x15, 616, x18)

inst_78:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5d9367 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x77f583 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x34edca and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ddd9367; op2val:0x40f7f583; op3val:0x7db4edca; valaddr_reg:x16; val_offset:936; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 936, x17, x15, 624, x18)

inst_79:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5d9367 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x77f583 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x34edca and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ddd9367; op2val:0x40f7f583; op3val:0x7db4edca; valaddr_reg:x16; val_offset:948; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 948, x17, x15, 632, x18)

inst_80:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5d9367 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x77f583 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x34edca and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ddd9367; op2val:0x40f7f583; op3val:0x7db4edca; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 640, x18)

inst_81:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24d370 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4048c6 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5e6b80 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f24d370; op2val:0x3fc048c6; op3val:0x7e5e6b80; valaddr_reg:x16; val_offset:972; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 972, x17, x15, 648, x18)

inst_82:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24d370 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4048c6 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5e6b80 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f24d370; op2val:0x3fc048c6; op3val:0x7e5e6b80; valaddr_reg:x16; val_offset:984; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 984, x17, x15, 656, x18)

inst_83:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24d370 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4048c6 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5e6b80 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f24d370; op2val:0x3fc048c6; op3val:0x7e5e6b80; valaddr_reg:x16; val_offset:996; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 996, x17, x15, 664, x18)

inst_84:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24d370 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4048c6 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5e6b80 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f24d370; op2val:0x3fc048c6; op3val:0x7e5e6b80; valaddr_reg:x16; val_offset:1008; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1008, x17, x15, 672, x18)

inst_85:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24d370 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4048c6 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5e6b80 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f24d370; op2val:0x3fc048c6; op3val:0x7e5e6b80; valaddr_reg:x16; val_offset:1020; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1020, x17, x15, 680, x18)

inst_86:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b70e3 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x09388b and fs3 == 0 and fe3 == 0xfa and fm3 == 0x0f1a1b and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3b70e3; op2val:0x3f89388b; op3val:0x7d0f1a1b; valaddr_reg:x16; val_offset:1032; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1032, x17, x15, 688, x18)

inst_87:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b70e3 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x09388b and fs3 == 0 and fe3 == 0xfa and fm3 == 0x0f1a1b and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3b70e3; op2val:0x3f89388b; op3val:0x7d0f1a1b; valaddr_reg:x16; val_offset:1044; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1044, x17, x15, 696, x18)

inst_88:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b70e3 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x09388b and fs3 == 0 and fe3 == 0xfa and fm3 == 0x0f1a1b and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3b70e3; op2val:0x3f89388b; op3val:0x7d0f1a1b; valaddr_reg:x16; val_offset:1056; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1056, x17, x15, 704, x18)

inst_89:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b70e3 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x09388b and fs3 == 0 and fe3 == 0xfa and fm3 == 0x0f1a1b and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3b70e3; op2val:0x3f89388b; op3val:0x7d0f1a1b; valaddr_reg:x16; val_offset:1068; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1068, x17, x15, 712, x18)

inst_90:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b70e3 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x09388b and fs3 == 0 and fe3 == 0xfa and fm3 == 0x0f1a1b and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3b70e3; op2val:0x3f89388b; op3val:0x7d0f1a1b; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 720, x18)

inst_91:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d9b86 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1ae3df and fs3 == 0 and fe3 == 0xfd and fm3 == 0x185346 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7edd9b86; op2val:0x401ae3df; op3val:0x7e985346; valaddr_reg:x16; val_offset:1092; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1092, x17, x15, 728, x18)

inst_92:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d9b86 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1ae3df and fs3 == 0 and fe3 == 0xfd and fm3 == 0x185346 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7edd9b86; op2val:0x401ae3df; op3val:0x7e985346; valaddr_reg:x16; val_offset:1104; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1104, x17, x15, 736, x18)

inst_93:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d9b86 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1ae3df and fs3 == 0 and fe3 == 0xfd and fm3 == 0x185346 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7edd9b86; op2val:0x401ae3df; op3val:0x7e985346; valaddr_reg:x16; val_offset:1116; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1116, x17, x15, 744, x18)

inst_94:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d9b86 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1ae3df and fs3 == 0 and fe3 == 0xfd and fm3 == 0x185346 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7edd9b86; op2val:0x401ae3df; op3val:0x7e985346; valaddr_reg:x16; val_offset:1128; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1128, x17, x15, 752, x18)

inst_95:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d9b86 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1ae3df and fs3 == 0 and fe3 == 0xfd and fm3 == 0x185346 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7edd9b86; op2val:0x401ae3df; op3val:0x7e985346; valaddr_reg:x16; val_offset:1140; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1140, x17, x15, 760, x18)

inst_96:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x70ef31 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x46ac03 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x35f5c9 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef0ef31; op2val:0x4046ac03; op3val:0x7f35f5c9; valaddr_reg:x16; val_offset:1152; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1152, x17, x15, 768, x18)

inst_97:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x70ef31 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x46ac03 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x35f5c9 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef0ef31; op2val:0x4046ac03; op3val:0x7f35f5c9; valaddr_reg:x16; val_offset:1164; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1164, x17, x15, 776, x18)

inst_98:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x70ef31 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x46ac03 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x35f5c9 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef0ef31; op2val:0x4046ac03; op3val:0x7f35f5c9; valaddr_reg:x16; val_offset:1176; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1176, x17, x15, 784, x18)

inst_99:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x70ef31 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x46ac03 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x35f5c9 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef0ef31; op2val:0x4046ac03; op3val:0x7f35f5c9; valaddr_reg:x16; val_offset:1188; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1188, x17, x15, 792, x18)

inst_100:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x70ef31 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x46ac03 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x35f5c9 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef0ef31; op2val:0x4046ac03; op3val:0x7f35f5c9; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 800, x18)

inst_101:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e28e8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x1e16fa and fs3 == 0 and fe3 == 0xfc and fm3 == 0x2b7290 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7dbe28e8; op2val:0x411e16fa; op3val:0x7e2b7290; valaddr_reg:x16; val_offset:1212; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1212, x17, x15, 808, x18)

inst_102:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e28e8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x1e16fa and fs3 == 0 and fe3 == 0xfc and fm3 == 0x2b7290 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7dbe28e8; op2val:0x411e16fa; op3val:0x7e2b7290; valaddr_reg:x16; val_offset:1224; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1224, x17, x15, 816, x18)

inst_103:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e28e8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x1e16fa and fs3 == 0 and fe3 == 0xfc and fm3 == 0x2b7290 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7dbe28e8; op2val:0x411e16fa; op3val:0x7e2b7290; valaddr_reg:x16; val_offset:1236; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1236, x17, x15, 824, x18)

inst_104:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e28e8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x1e16fa and fs3 == 0 and fe3 == 0xfc and fm3 == 0x2b7290 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7dbe28e8; op2val:0x411e16fa; op3val:0x7e2b7290; valaddr_reg:x16; val_offset:1248; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1248, x17, x15, 832, x18)

inst_105:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e28e8 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x1e16fa and fs3 == 0 and fe3 == 0xfc and fm3 == 0x2b7290 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7dbe28e8; op2val:0x411e16fa; op3val:0x7e2b7290; valaddr_reg:x16; val_offset:1260; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1260, x17, x15, 840, x18)

inst_106:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2303ee and fs2 == 0 and fe2 == 0x81 and fm2 == 0x09b4fe and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1ec16f and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ea303ee; op2val:0x4089b4fe; op3val:0x7f1ec16f; valaddr_reg:x16; val_offset:1272; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1272, x17, x15, 848, x18)

inst_107:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2303ee and fs2 == 0 and fe2 == 0x81 and fm2 == 0x09b4fe and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1ec16f and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ea303ee; op2val:0x4089b4fe; op3val:0x7f1ec16f; valaddr_reg:x16; val_offset:1284; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1284, x17, x15, 856, x18)

inst_108:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2303ee and fs2 == 0 and fe2 == 0x81 and fm2 == 0x09b4fe and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1ec16f and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ea303ee; op2val:0x4089b4fe; op3val:0x7f1ec16f; valaddr_reg:x16; val_offset:1296; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1296, x17, x15, 864, x18)

inst_109:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2303ee and fs2 == 0 and fe2 == 0x81 and fm2 == 0x09b4fe and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1ec16f and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ea303ee; op2val:0x4089b4fe; op3val:0x7f1ec16f; valaddr_reg:x16; val_offset:1308; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1308, x17, x15, 872, x18)

inst_110:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2303ee and fs2 == 0 and fe2 == 0x81 and fm2 == 0x09b4fe and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1ec16f and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ea303ee; op2val:0x4089b4fe; op3val:0x7f1ec16f; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 880, x18)

inst_111:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x569889 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x79d261 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x0b55ce and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d569889; op2val:0x4179d261; op3val:0x7d8b55ce; valaddr_reg:x16; val_offset:1332; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1332, x17, x15, 888, x18)

inst_112:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x569889 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x79d261 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x0b55ce and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d569889; op2val:0x4179d261; op3val:0x7d8b55ce; valaddr_reg:x16; val_offset:1344; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1344, x17, x15, 896, x18)

inst_113:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x569889 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x79d261 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x0b55ce and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d569889; op2val:0x4179d261; op3val:0x7d8b55ce; valaddr_reg:x16; val_offset:1356; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1356, x17, x15, 904, x18)

inst_114:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x569889 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x79d261 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x0b55ce and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d569889; op2val:0x4179d261; op3val:0x7d8b55ce; valaddr_reg:x16; val_offset:1368; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1368, x17, x15, 912, x18)

inst_115:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x569889 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x79d261 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x0b55ce and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d569889; op2val:0x4179d261; op3val:0x7d8b55ce; valaddr_reg:x16; val_offset:1380; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1380, x17, x15, 920, x18)

inst_116:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x665f91 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x18f09e and fs3 == 0 and fe3 == 0xfd and fm3 == 0x26851a and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ce65f91; op2val:0x4218f09e; op3val:0x7ea6851a; valaddr_reg:x16; val_offset:1392; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1392, x17, x15, 928, x18)

inst_117:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x665f91 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x18f09e and fs3 == 0 and fe3 == 0xfd and fm3 == 0x26851a and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ce65f91; op2val:0x4218f09e; op3val:0x7ea6851a; valaddr_reg:x16; val_offset:1404; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1404, x17, x15, 936, x18)

inst_118:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x665f91 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x18f09e and fs3 == 0 and fe3 == 0xfd and fm3 == 0x26851a and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ce65f91; op2val:0x4218f09e; op3val:0x7ea6851a; valaddr_reg:x16; val_offset:1416; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1416, x17, x15, 944, x18)

inst_119:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x665f91 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x18f09e and fs3 == 0 and fe3 == 0xfd and fm3 == 0x26851a and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ce65f91; op2val:0x4218f09e; op3val:0x7ea6851a; valaddr_reg:x16; val_offset:1428; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1428, x17, x15, 952, x18)

inst_120:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x665f91 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x18f09e and fs3 == 0 and fe3 == 0xfd and fm3 == 0x26851a and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ce65f91; op2val:0x4218f09e; op3val:0x7ea6851a; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 960, x18)

inst_121:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x322c35 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x4fed0f and fs3 == 0 and fe3 == 0xfd and fm3 == 0x42daf5 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d322c35; op2val:0x41cfed0f; op3val:0x7ec2daf5; valaddr_reg:x16; val_offset:1452; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1452, x17, x15, 968, x18)

inst_122:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x322c35 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x4fed0f and fs3 == 0 and fe3 == 0xfd and fm3 == 0x42daf5 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d322c35; op2val:0x41cfed0f; op3val:0x7ec2daf5; valaddr_reg:x16; val_offset:1464; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1464, x17, x15, 976, x18)

inst_123:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x322c35 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x4fed0f and fs3 == 0 and fe3 == 0xfd and fm3 == 0x42daf5 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d322c35; op2val:0x41cfed0f; op3val:0x7ec2daf5; valaddr_reg:x16; val_offset:1476; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1476, x17, x15, 984, x18)

inst_124:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x322c35 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x4fed0f and fs3 == 0 and fe3 == 0xfd and fm3 == 0x42daf5 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d322c35; op2val:0x41cfed0f; op3val:0x7ec2daf5; valaddr_reg:x16; val_offset:1488; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1488, x17, x15, 992, x18)

inst_125:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x322c35 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x4fed0f and fs3 == 0 and fe3 == 0xfd and fm3 == 0x42daf5 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d322c35; op2val:0x41cfed0f; op3val:0x7ec2daf5; valaddr_reg:x16; val_offset:1500; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1500, x17, x15, 1000, x18)

inst_126:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4dc757 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x231a6d and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0c6cae and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ecdc757; op2val:0x40231a6d; op3val:0x7e8c6cae; valaddr_reg:x16; val_offset:1512; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1512, x17, x15, 1008, x18)

inst_127:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4dc757 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x231a6d and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0c6cae and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ecdc757; op2val:0x40231a6d; op3val:0x7e8c6cae; valaddr_reg:x16; val_offset:1524; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1524, x17, x15, 1016, x18)

inst_128:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4dc757 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x231a6d and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0c6cae and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ecdc757; op2val:0x40231a6d; op3val:0x7e8c6cae; valaddr_reg:x16; val_offset:1536; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1536, x17, x15, 1024, x18)

inst_129:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4dc757 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x231a6d and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0c6cae and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ecdc757; op2val:0x40231a6d; op3val:0x7e8c6cae; valaddr_reg:x16; val_offset:1548; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1548, x17, x15, 1032, x18)

inst_130:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4dc757 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x231a6d and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0c6cae and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ecdc757; op2val:0x40231a6d; op3val:0x7e8c6cae; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1040, x18)

inst_131:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79f575 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x52e25f and fs3 == 0 and fe3 == 0xfa and fm3 == 0x5e8636 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef9f575; op2val:0x3fd2e25f; op3val:0x7d5e8636; valaddr_reg:x16; val_offset:1572; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1572, x17, x15, 1048, x18)

inst_132:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79f575 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x52e25f and fs3 == 0 and fe3 == 0xfa and fm3 == 0x5e8636 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef9f575; op2val:0x3fd2e25f; op3val:0x7d5e8636; valaddr_reg:x16; val_offset:1584; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1584, x17, x15, 1056, x18)

inst_133:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79f575 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x52e25f and fs3 == 0 and fe3 == 0xfa and fm3 == 0x5e8636 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef9f575; op2val:0x3fd2e25f; op3val:0x7d5e8636; valaddr_reg:x16; val_offset:1596; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1596, x17, x15, 1064, x18)

inst_134:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79f575 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x52e25f and fs3 == 0 and fe3 == 0xfa and fm3 == 0x5e8636 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef9f575; op2val:0x3fd2e25f; op3val:0x7d5e8636; valaddr_reg:x16; val_offset:1608; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1608, x17, x15, 1072, x18)

inst_135:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79f575 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x52e25f and fs3 == 0 and fe3 == 0xfa and fm3 == 0x5e8636 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef9f575; op2val:0x3fd2e25f; op3val:0x7d5e8636; valaddr_reg:x16; val_offset:1620; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1620, x17, x15, 1080, x18)

inst_136:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x78b41c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x637214 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x67b44e and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e78b41c; op2val:0x40637214; op3val:0x7de7b44e; valaddr_reg:x16; val_offset:1632; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1632, x17, x15, 1088, x18)

inst_137:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x78b41c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x637214 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x67b44e and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e78b41c; op2val:0x40637214; op3val:0x7de7b44e; valaddr_reg:x16; val_offset:1644; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1644, x17, x15, 1096, x18)

inst_138:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x78b41c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x637214 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x67b44e and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e78b41c; op2val:0x40637214; op3val:0x7de7b44e; valaddr_reg:x16; val_offset:1656; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1656, x17, x15, 1104, x18)

inst_139:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x78b41c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x637214 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x67b44e and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e78b41c; op2val:0x40637214; op3val:0x7de7b44e; valaddr_reg:x16; val_offset:1668; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1668, x17, x15, 1112, x18)

inst_140:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x78b41c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x637214 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x67b44e and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e78b41c; op2val:0x40637214; op3val:0x7de7b44e; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1120, x18)

inst_141:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6972bf and fs2 == 1 and fe2 == 0x84 and fm2 == 0x45add1 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3bc306 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7de972bf; op2val:0xc245add1; op3val:0x7ebbc306; valaddr_reg:x16; val_offset:1692; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1692, x17, x15, 1128, x18)

inst_142:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6972bf and fs2 == 1 and fe2 == 0x84 and fm2 == 0x45add1 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3bc306 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7de972bf; op2val:0xc245add1; op3val:0x7ebbc306; valaddr_reg:x16; val_offset:1704; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1704, x17, x15, 1136, x18)

inst_143:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6972bf and fs2 == 1 and fe2 == 0x84 and fm2 == 0x45add1 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3bc306 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7de972bf; op2val:0xc245add1; op3val:0x7ebbc306; valaddr_reg:x16; val_offset:1716; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1716, x17, x15, 1144, x18)

inst_144:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6972bf and fs2 == 1 and fe2 == 0x84 and fm2 == 0x45add1 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3bc306 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7de972bf; op2val:0xc245add1; op3val:0x7ebbc306; valaddr_reg:x16; val_offset:1728; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1728, x17, x15, 1152, x18)

inst_145:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x208f24 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x278d32 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x115efd and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ea08f24; op2val:0x41a78d32; op3val:0x7f115efd; valaddr_reg:x16; val_offset:1740; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1740, x17, x15, 1160, x18)

inst_146:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x208f24 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x278d32 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x115efd and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ea08f24; op2val:0x41a78d32; op3val:0x7f115efd; valaddr_reg:x16; val_offset:1752; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1752, x17, x15, 1168, x18)

inst_147:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x208f24 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x278d32 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x115efd and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ea08f24; op2val:0x41a78d32; op3val:0x7f115efd; valaddr_reg:x16; val_offset:1764; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1764, x17, x15, 1176, x18)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
test_fp:
.word 0x7e78b41c
.word 0x7e78b41c
.word 0x7e78b41c
.word 0x7de972bf
.word 0xc245add1
.word 0x7de972bf
.word 0x7de972bf
.word 0xc245add1
.word 0x7de972bf
.word 0x7de972bf
.word 0xc245add1
.word 0x7ebbc306
.word 0x7de972bf
.word 0xc245add1
.word 0xc245add1
.word 0x7de972bf
.word 0xc245add1
.word 0xc245add1
.word 0x7ea08f24
.word 0x7ea08f24
.word 0x7f115efd
.word 0x7ea08f24
.word 0x7ea08f24
.word 0x7f115efd
.word 0x7ea08f24
.word 0x7ea08f24
.word 0x7ea08f24
.word 0x7ea08f24
.word 0x41a78d32
.word 0x7f115efd
.word 0x7ea08f24
.word 0x41a78d32
.word 0x7f115efd
.word 0x7f3c318d
.word 0xc07d7805
.word 0x7db55959
.word 0x7f3c318d
.word 0xc07d7805
.word 0x7db55959
.word 0x7f3c318d
.word 0xc07d7805
.word 0x7db55959
.word 0x7f3c318d
.word 0xc07d7805
.word 0x7db55959
.word 0x7f3c318d
.word 0xc07d7805
.word 0x7db55959
.word 0x7f0c0db1
.word 0x40bc1b7a
.word 0x7e5d22dd
.word 0x7f0c0db1
.word 0x40bc1b7a
.word 0x7e5d22dd
.word 0x7f0c0db1
.word 0x40bc1b7a
.word 0x7e5d22dd
.word 0x7f0c0db1
.word 0x40bc1b7a
.word 0x7e5d22dd
.word 0x7f0c0db1
.word 0x40bc1b7a
.word 0x7e5d22dd
.word 0x7ec9acea
.word 0xc0091324
.word 0x7f2806c1
.word 0x7ec9acea
.word 0xc0091324
.word 0x7f2806c1
.word 0x7ec9acea
.word 0xc0091324
.word 0x7f2806c1
.word 0x7ec9acea
.word 0xc0091324
.word 0x7f2806c1
.word 0x7ec9acea
.word 0xc0091324
.word 0x7f2806c1
.word 0x7e3b7753
.word 0x4128bf77
.word 0x7edc9425
.word 0x7e3b7753
.word 0x4128bf77
.word 0x7edc9425
.word 0x7e3b7753
.word 0x4128bf77
.word 0x7edc9425
.word 0x7e3b7753
.word 0x4128bf77
.word 0x7edc9425
.word 0x7e3b7753
.word 0x4128bf77
.word 0x7edc9425
.word 0x7f188556
.word 0xbec201ad
.word 0x7f0634f9
.word 0x7f188556
.word 0xbec201ad
.word 0x7f0634f9
.word 0x7f188556
.word 0xbec201ad
.word 0x7f0634f9
.word 0x7f188556
.word 0xbec201ad
.word 0x7f0634f9
.word 0x7f188556
.word 0xbec201ad
.word 0x7f0634f9
.word 0x7eae05d5
.word 0x40378e8c
.word 0x7e663896
.word 0x7eae05d5
.word 0x40378e8c
.word 0x7e663896
.word 0x7eae05d5
.word 0x40378e8c
.word 0x7e663896
.word 0x7eae05d5
.word 0x40378e8c
.word 0x7e663896
.word 0x7eae05d5
.word 0x40378e8c
.word 0x7e663896
.word 0x7e7143d8
.word 0x3e8b7316
.word 0x7ee0db12
.word 0x7e7143d8
.word 0x3e8b7316
.word 0x7ee0db12
.word 0x7e7143d8
.word 0x3e8b7316
.word 0x7ee0db12
.word 0x7e7143d8
.word 0x3e8b7316
.word 0x7ee0db12
.word 0x7e7143d8
.word 0x3e8b7316
.word 0x7ee0db12
.word 0x7f02a304
.word 0x3fae80c2
.word 0x7ea43208
.word 0x7f02a304
.word 0x3fae80c2
.word 0x7ea43208
.word 0x7f02a304
.word 0x3fae80c2
.word 0x7ea43208
.word 0x7f02a304
.word 0x3fae80c2
.word 0x7ea43208
.word 0x7f02a304
.word 0x3fae80c2
.word 0x7ea43208
.word 0x7d371843
.word 0xbf3d2ab8
.word 0x7e1e2d21
.word 0x7d371843
.word 0xbf3d2ab8
.word 0x7e1e2d21
.word 0x7d371843
.word 0xbf3d2ab8
.word 0x7e1e2d21
.word 0x7d371843
.word 0xbf3d2ab8
.word 0x7e1e2d21
.word 0x7d371843
.word 0xbf3d2ab8
.word 0x7e1e2d21
.word 0x7ed25578
.word 0x3f123045
.word 0x7d40e341
.word 0x7ed25578
.word 0x3f123045
.word 0x7d40e341
.word 0x7ed25578
.word 0x3f123045
.word 0x7d40e341
.word 0x7ed25578
.word 0x3f123045
.word 0x7d40e341
.word 0x7ed25578
.word 0x3f123045
.word 0x7d40e341
.word 0x7ef557bf
.word 0x3ec6412e
.word 0x7e8f002a
.word 0x7ef557bf
.word 0x3ec6412e
.word 0x7e8f002a
.word 0x7ef557bf
.word 0x3ec6412e
.word 0x7e8f002a
.word 0x7ef557bf
.word 0x3ec6412e
.word 0x7e8f002a
.word 0x7ef557bf
.word 0x3ec6412e
.word 0x7e8f002a
.word 0x7e0acc40
.word 0x407a39d0
.word 0x7edf559e
.word 0x7e0acc40
.word 0x407a39d0
.word 0x7edf559e
.word 0x7e0acc40
.word 0x407a39d0
.word 0x7edf559e
.word 0x7e0acc40
.word 0x407a39d0
.word 0x7edf559e
.word 0x7e0acc40
.word 0x407a39d0
.word 0x7edf559e
.word 0x7e6ce9fd
.word 0x40bc64cb
.word 0x7f1cb23d
.word 0x7e6ce9fd
.word 0x40bc64cb
.word 0x7f1cb23d
.word 0x7e6ce9fd
.word 0x40bc64cb
.word 0x7f1cb23d
.word 0x7e6ce9fd
.word 0x40bc64cb
.word 0x7f1cb23d
.word 0x7e6ce9fd
.word 0x40bc64cb
.word 0x7f1cb23d
.word 0x7ddd9367
.word 0x40f7f583
.word 0x7db4edca
.word 0x7ddd9367
.word 0x40f7f583
.word 0x7db4edca
.word 0x7ddd9367
.word 0x40f7f583
.word 0x7db4edca
.word 0x7ddd9367
.word 0x40f7f583
.word 0x7db4edca
.word 0x7ddd9367
.word 0x40f7f583
.word 0x7db4edca
.word 0x7f24d370
.word 0x3fc048c6
.word 0x7e5e6b80
.word 0x7f24d370
.word 0x3fc048c6
.word 0x7e5e6b80
.word 0x7f24d370
.word 0x3fc048c6
.word 0x7e5e6b80
.word 0x7f24d370
.word 0x3fc048c6
.word 0x7e5e6b80
.word 0x7f24d370
.word 0x3fc048c6
.word 0x7e5e6b80
.word 0x7f3b70e3
.word 0x3f89388b
.word 0x7d0f1a1b
.word 0x7f3b70e3
.word 0x3f89388b
.word 0x7d0f1a1b
.word 0x7f3b70e3
.word 0x3f89388b
.word 0x7d0f1a1b
.word 0x7f3b70e3
.word 0x3f89388b
.word 0x7d0f1a1b
.word 0x7f3b70e3
.word 0x3f89388b
.word 0x7d0f1a1b
.word 0x7edd9b86
.word 0x401ae3df
.word 0x7e985346
.word 0x7edd9b86
.word 0x401ae3df
.word 0x7e985346
.word 0x7edd9b86
.word 0x401ae3df
.word 0x7e985346
.word 0x7edd9b86
.word 0x401ae3df
.word 0x7e985346
.word 0x7edd9b86
.word 0x401ae3df
.word 0x7e985346
.word 0x7ef0ef31
.word 0x4046ac03
.word 0x7f35f5c9
.word 0x7ef0ef31
.word 0x4046ac03
.word 0x7f35f5c9
.word 0x7ef0ef31
.word 0x4046ac03
.word 0x7f35f5c9
.word 0x7ef0ef31
.word 0x4046ac03
.word 0x7f35f5c9
.word 0x7ef0ef31
.word 0x4046ac03
.word 0x7f35f5c9
.word 0x7dbe28e8
.word 0x411e16fa
.word 0x7e2b7290
.word 0x7dbe28e8
.word 0x411e16fa
.word 0x7e2b7290
.word 0x7dbe28e8
.word 0x411e16fa
.word 0x7e2b7290
.word 0x7dbe28e8
.word 0x411e16fa
.word 0x7e2b7290
.word 0x7dbe28e8
.word 0x411e16fa
.word 0x7e2b7290
.word 0x7ea303ee
.word 0x4089b4fe
.word 0x7f1ec16f
.word 0x7ea303ee
.word 0x4089b4fe
.word 0x7f1ec16f
.word 0x7ea303ee
.word 0x4089b4fe
.word 0x7f1ec16f
.word 0x7ea303ee
.word 0x4089b4fe
.word 0x7f1ec16f
.word 0x7ea303ee
.word 0x4089b4fe
.word 0x7f1ec16f
.word 0x7d569889
.word 0x4179d261
.word 0x7d8b55ce
.word 0x7d569889
.word 0x4179d261
.word 0x7d8b55ce
.word 0x7d569889
.word 0x4179d261
.word 0x7d8b55ce
.word 0x7d569889
.word 0x4179d261
.word 0x7d8b55ce
.word 0x7d569889
.word 0x4179d261
.word 0x7d8b55ce
.word 0x7ce65f91
.word 0x4218f09e
.word 0x7ea6851a
.word 0x7ce65f91
.word 0x4218f09e
.word 0x7ea6851a
.word 0x7ce65f91
.word 0x4218f09e
.word 0x7ea6851a
.word 0x7ce65f91
.word 0x4218f09e
.word 0x7ea6851a
.word 0x7ce65f91
.word 0x4218f09e
.word 0x7ea6851a
.word 0x7d322c35
.word 0x41cfed0f
.word 0x7ec2daf5
.word 0x7d322c35
.word 0x41cfed0f
.word 0x7ec2daf5
.word 0x7d322c35
.word 0x41cfed0f
.word 0x7ec2daf5
.word 0x7d322c35
.word 0x41cfed0f
.word 0x7ec2daf5
.word 0x7d322c35
.word 0x41cfed0f
.word 0x7ec2daf5
.word 0x7ecdc757
.word 0x40231a6d
.word 0x7e8c6cae
.word 0x7ecdc757
.word 0x40231a6d
.word 0x7e8c6cae
.word 0x7ecdc757
.word 0x40231a6d
.word 0x7e8c6cae
.word 0x7ecdc757
.word 0x40231a6d
.word 0x7e8c6cae
.word 0x7ecdc757
.word 0x40231a6d
.word 0x7e8c6cae
.word 0x7ef9f575
.word 0x3fd2e25f
.word 0x7d5e8636
.word 0x7ef9f575
.word 0x3fd2e25f
.word 0x7d5e8636
.word 0x7ef9f575
.word 0x3fd2e25f
.word 0x7d5e8636
.word 0x7ef9f575
.word 0x3fd2e25f
.word 0x7d5e8636
.word 0x7ef9f575
.word 0x3fd2e25f
.word 0x7d5e8636
.word 0x7e78b41c
.word 0x40637214
.word 0x7de7b44e
.word 0x7e78b41c
.word 0x40637214
.word 0x7de7b44e
.word 0x7e78b41c
.word 0x40637214
.word 0x7de7b44e
.word 0x7e78b41c
.word 0x40637214
.word 0x7de7b44e
.word 0x7e78b41c
.word 0x40637214
.word 0x7de7b44e
.word 0x7de972bf
.word 0xc245add1
.word 0x7ebbc306
.word 0x7de972bf
.word 0xc245add1
.word 0x7ebbc306
.word 0x7de972bf
.word 0xc245add1
.word 0x7ebbc306
.word 0x7de972bf
.word 0xc245add1
.word 0x7ebbc306
.word 0x7ea08f24
.word 0x41a78d32
.word 0x7f115efd
.word 0x7ea08f24
.word 0x41a78d32
.word 0x7f115efd
.word 0x7ea08f24
.word 0x41a78d32
.word 0x7f115efd
RVTEST_DATA_END

RVMODEL_DATA_BEGIN


signature_x15_0:
    .fill 0*(XLEN/32),4,0xdeadbeef


signature_x15_1:
    .fill 296*(XLEN/32),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*(XLEN/32),4,0xdeadbeef

#endif

RVMODEL_DATA_END
