
// -----------
// This file was generated by riscv_ctg (https://gitlab.com/incoresemi/riscv-compliance/riscv_ctg)
// version   : 0.5.2
// timestamp : Tue Sep  7 16:08:09 2021 GMT
// usage     : riscv_ctg \
//                  -- cgf $cgf \
//                  -- xlen $xlen \
// -----------
//
// -----------
// Copyright (c) 2021. IIT Madras. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.s instruction of the RISC-V F extension for the fmsub_b2 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fmsub_b2)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x16,test_fp)
RVTEST_SIGBASE(x15,signature_x15_1)

inst_0:
// rs1 == rs2 == rs3 != rd, rs1==f26, rs2==f26, rs3==f26, rd==f19, fs1 == 0 and fe1 == 0x00 and fm1 == 0x00002a and fs2 == 0 and fe2 == 0x7e and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000014 and rm_val == 0  
// opcode: fmsub.s ; op1:f26; op2:f26; op3:f26; dest:f19; op1val:0x2a; op2val:0x2a; op3val:0x2a; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f19, f26, f26, f26, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_1:
// rs1 == rd == rs3 != rs2, rs1==f27, rs2==f21, rs3==f27, rd==f27, fs1 == 0 and fe1 == 0xfe and fm1 == 0x00003b and fs2 == 1 and fe2 == 0x7d and fm2 == 0x7fff7e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000002 and rm_val == 0  
// opcode: fmsub.s ; op1:f27; op2:f21; op3:f27; dest:f27; op1val:0x7f00003b; op2val:0xbeffff7e; op3val:0x7f00003b; valaddr_reg:x16; val_offset:12; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f27, f27, f21, f27, 0x0, 0, x16, 12, x17, x15, 8, x18)

inst_2:
// rs1 == rs3 != rs2 and rs1 == rs3 != rd and rd != rs2, rs1==f16, rs2==f0, rs3==f16, rd==f23, fs1 == 0 and fe1 == 0xfe and fm1 == 0x000022 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3fffab and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000010 and rm_val == 0  
// opcode: fmsub.s ; op1:f16; op2:f0; op3:f16; dest:f23; op1val:0x7f000022; op2val:0xbf3fffab; op3val:0x7f000022; valaddr_reg:x16; val_offset:24; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f23, f16, f0, f16, 0x0, 0, x16, 24, x17, x15, 16, x18)

inst_3:
// rs2 == rd != rs1 and rs2 == rd != rs3 and rs3 != rs1, rs1==f24, rs2==f2, rs3==f0, rd==f2, fs1 == 0 and fe1 == 0xfe and fm1 == 0x00001d and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5fffb9 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000009 and rm_val == 0  
// opcode: fmsub.s ; op1:f24; op2:f2; op3:f0; dest:f2; op1val:0x7f00001d; op2val:0xbf5fffb9; op3val:0x7f000009; valaddr_reg:x16; val_offset:36; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f2, f24, f2, f0, 0x0, 0, x16, 36, x17, x15, 24, x18)

inst_4:
// rs2 == rs3 != rs1 and rs2 == rs3 != rd and rd != rs1, rs1==f29, rs2==f24, rs3==f24, rd==f21, fs1 == 0 and fe1 == 0xfe and fm1 == 0x00000b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6fff4d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x00004e and rm_val == 0  
// opcode: fmsub.s ; op1:f29; op2:f24; op3:f24; dest:f21; op1val:0x7f00000b; op2val:0xbf6fff4d; op3val:0xbf6fff4d; valaddr_reg:x16; val_offset:48; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f21, f29, f24, f24, 0x0, 0, x16, 48, x17, x15, 32, x18)

inst_5:
// rd == rs2 == rs3 != rs1, rs1==f10, rs2==f11, rs3==f11, rd==f11, fs1 == 0 and fe1 == 0xfe and fm1 == 0x00000c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x77ffa3 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000022 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f11; dest:f11; op1val:0x7f00000c; op2val:0xbf77ffa3; op3val:0xbf77ffa3; valaddr_reg:x16; val_offset:60; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f11, f10, f11, f11, 0x0, 0, x16, 60, x17, x15, 40, x18)

inst_6:
// rs1 == rs2 != rs3 and rs1 == rs2 != rd and rd != rs3, rs1==f9, rs2==f9, rs3==f5, rd==f6, fs1 == 0 and fe1 == 0xfe and fm1 == 0x000003 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7bff54 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000052 and rm_val == 0  
// opcode: fmsub.s ; op1:f9; op2:f9; op3:f5; dest:f6; op1val:0x7f000003; op2val:0x7f000003; op3val:0x7f000052; valaddr_reg:x16; val_offset:72; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f6, f9, f9, f5, 0x0, 0, x16, 72, x17, x15, 48, x18)

inst_7:
// rs1 == rs2 == rd != rs3, rs1==f14, rs2==f14, rs3==f29, rd==f14, fs1 == 0 and fe1 == 0xfe and fm1 == 0x00000a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7dffa4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000023 and rm_val == 0  
// opcode: fmsub.s ; op1:f14; op2:f14; op3:f29; dest:f14; op1val:0x7f00000a; op2val:0x7f00000a; op3val:0x7f000023; valaddr_reg:x16; val_offset:84; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f14, f14, f14, f29, 0x0, 0, x16, 84, x17, x15, 56, x18)

inst_8:
// rs1 == rs2 == rs3 == rd, rs1==f20, rs2==f20, rs3==f20, rd==f20, fs1 == 0 and fe1 == 0xfe and fm1 == 0x000018 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7eff60 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000037 and rm_val == 0  
// opcode: fmsub.s ; op1:f20; op2:f20; op3:f20; dest:f20; op1val:0x7f000018; op2val:0x7f000018; op3val:0x7f000018; valaddr_reg:x16; val_offset:96; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f20, f20, f20, f20, 0x0, 0, x16, 96, x17, x15, 64, x18)

inst_9:
// rs3 == rd != rs1 and rs3 == rd != rs2 and rs2 != rs1, rs1==f8, rs2==f17, rs3==f13, rd==f13, fs1 == 0 and fe1 == 0xfe and fm1 == 0x000008 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7f7f3c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000059 and rm_val == 0  
// opcode: fmsub.s ; op1:f8; op2:f17; op3:f13; dest:f13; op1val:0x7f000008; op2val:0xbf7f7f3c; op3val:0x7f000059; valaddr_reg:x16; val_offset:108; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f8, f17, f13, 0x0, 0, x16, 108, x17, x15, 72, x18)

inst_10:
// rs1 != rs2 and rs1 != rd and rs1 != rs3 and rs2 != rs3 and rs2 != rd and rs3 != rd, rs1==f25, rs2==f1, rs3==f14, rd==f17, fs1 == 0 and fe1 == 0xfe and fm1 == 0x00000c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7fbf9e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000024 and rm_val == 0  
// opcode: fmsub.s ; op1:f25; op2:f1; op3:f14; dest:f17; op1val:0x7f00000c; op2val:0xbf7fbf9e; op3val:0x7f000024; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f17, f25, f1, f14, 0x0, 0, x16, 120, x17, x15, 80, x18)

inst_11:
// rs1 == rd != rs2 and rs1 == rd != rs3 and rs3 != rs2, rs1==f28, rs2==f16, rs3==f18, rd==f28, fs1 == 0 and fe1 == 0xfe and fm1 == 0x00005a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7fdef6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x00002a and rm_val == 0  
// opcode: fmsub.s ; op1:f28; op2:f16; op3:f18; dest:f28; op1val:0x7f00005a; op2val:0xbf7fdef6; op3val:0x7f00002a; valaddr_reg:x16; val_offset:132; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f28, f28, f16, f18, 0x0, 0, x16, 132, x17, x15, 88, x18)

inst_12:
// rs1==f0, rs2==f19, rs3==f15, rd==f30, fs1 == 0 and fe1 == 0xfe and fm1 == 0x00004a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7feeea and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000040 and rm_val == 0  
// opcode: fmsub.s ; op1:f0; op2:f19; op3:f15; dest:f30; op1val:0x7f00004a; op2val:0xbf7feeea; op3val:0x7f000040; valaddr_reg:x16; val_offset:144; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f30, f0, f19, f15, 0x0, 0, x16, 144, x17, x15, 96, x18)

inst_13:
// rs1==f7, rs2==f3, rs3==f25, rd==f15, fs1 == 0 and fe1 == 0xfe and fm1 == 0x000045 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7ff6f0 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000042 and rm_val == 0  
// opcode: fmsub.s ; op1:f7; op2:f3; op3:f25; dest:f15; op1val:0x7f000045; op2val:0xbf7ff6f0; op3val:0x7f000042; valaddr_reg:x16; val_offset:156; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f15, f7, f3, f25, 0x0, 0, x16, 156, x17, x15, 104, x18)

inst_14:
// rs1==f1, rs2==f13, rs3==f21, rd==f5, fs1 == 0 and fe1 == 0xfe and fm1 == 0x000034 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7ffb6e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000014 and rm_val == 0  
// opcode: fmsub.s ; op1:f1; op2:f13; op3:f21; dest:f5; op1val:0x7f000034; op2val:0xbf7ffb6e; op3val:0x7f000014; valaddr_reg:x16; val_offset:168; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f5, f1, f13, f21, 0x0, 0, x16, 168, x17, x15, 112, x18)

inst_15:
// rs1==f15, rs2==f10, rs3==f17, rd==f18, fs1 == 0 and fe1 == 0xfe and fm1 == 0x000057 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7ffd0c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000022 and rm_val == 0  
// opcode: fmsub.s ; op1:f15; op2:f10; op3:f17; dest:f18; op1val:0x7f000057; op2val:0xbf7ffd0c; op3val:0x7f000022; valaddr_reg:x16; val_offset:180; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f18, f15, f10, f17, 0x0, 0, x16, 180, x17, x15, 120, x18)

inst_16:
// rs1==f23, rs2==f25, rs3==f12, rd==f29, fs1 == 0 and fe1 == 0xfe and fm1 == 0x000011 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7ffe6e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000037 and rm_val == 0  
// opcode: fmsub.s ; op1:f23; op2:f25; op3:f12; dest:f29; op1val:0x7f000011; op2val:0xbf7ffe6e; op3val:0x7f000037; valaddr_reg:x16; val_offset:192; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f29, f23, f25, f12, 0x0, 0, x16, 192, x17, x15, 128, x18)

inst_17:
// rs1==f19, rs2==f5, rs3==f1, rd==f4, fs1 == 0 and fe1 == 0xfe and fm1 == 0x000023 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7ffe76 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000061 and rm_val == 0  
// opcode: fmsub.s ; op1:f19; op2:f5; op3:f1; dest:f4; op1val:0x7f000023; op2val:0xbf7ffe76; op3val:0x7f000061; valaddr_reg:x16; val_offset:204; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f4, f19, f5, f1, 0x0, 0, x16, 204, x17, x15, 136, x18)

inst_18:
// rs1==f30, rs2==f12, rs3==f2, rd==f3, fs1 == 0 and fe1 == 0xfe and fm1 == 0x000006 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7fff82 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000018 and rm_val == 0  
// opcode: fmsub.s ; op1:f30; op2:f12; op3:f2; dest:f3; op1val:0x7f000006; op2val:0xbf7fff82; op3val:0x7f000018; valaddr_reg:x16; val_offset:216; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f3, f30, f12, f2, 0x0, 0, x16, 216, x17, x15, 144, x18)

inst_19:
// rs1==f31, rs2==f6, rs3==f23, rd==f22, fs1 == 0 and fe1 == 0xfe and fm1 == 0x000022 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7fff54 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000023 and rm_val == 0  
// opcode: fmsub.s ; op1:f31; op2:f6; op3:f23; dest:f22; op1val:0x7f000022; op2val:0xbf7fff54; op3val:0x7f000023; valaddr_reg:x16; val_offset:228; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f22, f31, f6, f23, 0x0, 0, x16, 228, x17, x15, 152, x18)

inst_20:
// rs1==f18, rs2==f31, rs3==f30, rd==f26, fs1 == 0 and fe1 == 0xfe and fm1 == 0x00000e and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7fffbc and fs3 == 0 and fe3 == 0xfe and fm3 == 0x00000b and rm_val == 0  
// opcode: fmsub.s ; op1:f18; op2:f31; op3:f30; dest:f26; op1val:0x7f00000e; op2val:0xbf7fffbc; op3val:0x7f00000b; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f26, f18, f31, f30, 0x0, 0, x16, 240, x17, x15, 160, x18)

inst_21:
// rs1==f2, rs2==f15, rs3==f28, rd==f12, fs1 == 0 and fe1 == 0xfe and fm1 == 0x00000f and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7fff9c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x00001e and rm_val == 0  
// opcode: fmsub.s ; op1:f2; op2:f15; op3:f28; dest:f12; op1val:0x7f00000f; op2val:0xbf7fff9c; op3val:0x7f00001e; valaddr_reg:x16; val_offset:252; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f12, f2, f15, f28, 0x0, 0, x16, 252, x17, x15, 168, x18)

inst_22:
// rs1==f17, rs2==f4, rs3==f9, rd==f10, fs1 == 0 and fe1 == 0xfe and fm1 == 0x000042 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7fff64 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000009 and rm_val == 0  
// opcode: fmsub.s ; op1:f17; op2:f4; op3:f9; dest:f10; op1val:0x7f000042; op2val:0xbf7fff64; op3val:0x7f000009; valaddr_reg:x16; val_offset:264; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f10, f17, f4, f9, 0x0, 0, x16, 264, x17, x15, 176, x18)

inst_23:
// rs1==f22, rs2==f8, rs3==f4, rd==f7, fs1 == 0 and fe1 == 0xfe and fm1 == 0x000050 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7fff10 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000026 and rm_val == 0  
// opcode: fmsub.s ; op1:f22; op2:f8; op3:f4; dest:f7; op1val:0x7f000050; op2val:0xbf7fff10; op3val:0x7f000026; valaddr_reg:x16; val_offset:276; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f7, f22, f8, f4, 0x0, 0, x16, 276, x17, x15, 184, x18)

inst_24:
// rs1==f4, rs2==f30, rs3==f7, rd==f0, fs1 == 0 and fe1 == 0xfe and fm1 == 0x00002b and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1fffeb and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000043 and rm_val == 0  
// opcode: fmsub.s ; op1:f4; op2:f30; op3:f7; dest:f0; op1val:0x7f00002b; op2val:0x401fffeb; op3val:0x7f000043; valaddr_reg:x16; val_offset:288; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f0, f4, f30, f7, 0x0, 0, x16, 288, x17, x15, 192, x18)

inst_25:
// rs1==f3, rs2==f7, rs3==f22, rd==f25, fs1 == 0 and fe1 == 0xfe and fm1 == 0x000003 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x300014 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000032 and rm_val == 0  
// opcode: fmsub.s ; op1:f3; op2:f7; op3:f22; dest:f25; op1val:0x7f000003; op2val:0x40300014; op3val:0x7f000032; valaddr_reg:x16; val_offset:300; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f25, f3, f7, f22, 0x0, 0, x16, 300, x17, x15, 200, x18)

inst_26:
// rs1==f13, rs2==f27, rs3==f10, rd==f16, fs1 == 0 and fe1 == 0xfe and fm1 == 0x000039 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x37ffdb and fs3 == 0 and fe3 == 0xfe and fm3 == 0x00005b and rm_val == 0  
// opcode: fmsub.s ; op1:f13; op2:f27; op3:f10; dest:f16; op1val:0x7f000039; op2val:0x4037ffdb; op3val:0x7f00005b; valaddr_reg:x16; val_offset:312; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f16, f13, f27, f10, 0x0, 0, x16, 312, x17, x15, 208, x18)

inst_27:
// rs1==f6, rs2==f29, rs3==f19, rd==f1, fs1 == 0 and fe1 == 0xfe and fm1 == 0x000047 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3bffb5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x00003b and rm_val == 0  
// opcode: fmsub.s ; op1:f6; op2:f29; op3:f19; dest:f1; op1val:0x7f000047; op2val:0x403bffb5; op3val:0x7f00003b; valaddr_reg:x16; val_offset:324; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f1, f6, f29, f19, 0x0, 0, x16, 324, x17, x15, 216, x18)

inst_28:
// rs1==f21, rs2==f23, rs3==f3, rd==f31, fs1 == 0 and fe1 == 0xfe and fm1 == 0x000003 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3e0011 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x00002c and rm_val == 0  
// opcode: fmsub.s ; op1:f21; op2:f23; op3:f3; dest:f31; op1val:0x7f000003; op2val:0x403e0011; op3val:0x7f00002c; valaddr_reg:x16; val_offset:336; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f31, f21, f23, f3, 0x0, 0, x16, 336, x17, x15, 224, x18)

inst_29:
// rs1==f12, rs2==f18, rs3==f8, rd==f24, fs1 == 0 and fe1 == 0xfe and fm1 == 0x00005d and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3eff8c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x00002f and rm_val == 0  
// opcode: fmsub.s ; op1:f12; op2:f18; op3:f8; dest:f24; op1val:0x7f00005d; op2val:0x403eff8c; op3val:0x7f00002f; valaddr_reg:x16; val_offset:348; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f24, f12, f18, f8, 0x0, 0, x16, 348, x17, x15, 232, x18)

inst_30:
// rs1==f11, rs2==f22, rs3==f6, rd==f9, fs1 == 0 and fe1 == 0xfe and fm1 == 0x000029 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3f7fc8 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x00000c and rm_val == 0  
// opcode: fmsub.s ; op1:f11; op2:f22; op3:f6; dest:f9; op1val:0x7f000029; op2val:0x403f7fc8; op3val:0x7f00000c; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f9, f11, f22, f6, 0x0, 0, x16, 360, x17, x15, 240, x18)

inst_31:
// rs1==f5, rs2==f28, rs3==f31, rd==f8, fs1 == 0 and fe1 == 0xfe and fm1 == 0x00001a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3fbff0 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x00002e and rm_val == 0  
// opcode: fmsub.s ; op1:f5; op2:f28; op3:f31; dest:f8; op1val:0x7f00001a; op2val:0x403fbff0; op3val:0x7f00002e; valaddr_reg:x16; val_offset:372; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f8, f5, f28, f31, 0x0, 0, x16, 372, x17, x15, 248, x18)

inst_32:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x00002c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3fdfd9 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000036 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f00002c; op2val:0x403fdfd9; op3val:0x7f000036; valaddr_reg:x16; val_offset:384; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 384, x17, x15, 256, x18)

inst_33:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000042 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3fefb7 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000034 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f000042; op2val:0x403fefb7; op3val:0x7f000034; valaddr_reg:x16; val_offset:396; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 396, x17, x15, 264, x18)

inst_34:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x00005b and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3ff793 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000038 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f00005b; op2val:0x403ff793; op3val:0x7f000038; valaddr_reg:x16; val_offset:408; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 408, x17, x15, 272, x18)

inst_35:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x00001d and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3ffbdf and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000015 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f00001d; op2val:0x403ffbdf; op3val:0x7f000015; valaddr_reg:x16; val_offset:420; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 420, x17, x15, 280, x18)

inst_36:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000015 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3ffe0b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000056 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f000015; op2val:0x403ffe0b; op3val:0x7f000056; valaddr_reg:x16; val_offset:432; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 432, x17, x15, 288, x18)

inst_37:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000033 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3ffed3 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x00003f and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f000033; op2val:0x403ffed3; op3val:0x7f00003f; valaddr_reg:x16; val_offset:444; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 444, x17, x15, 296, x18)

inst_38:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000060 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3ffef6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x00000d and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f000060; op2val:0x403ffef6; op3val:0x7f00000d; valaddr_reg:x16; val_offset:456; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 456, x17, x15, 304, x18)

inst_39:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x00003c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3fff74 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x00001d and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f00003c; op2val:0x403fff74; op3val:0x7f00001d; valaddr_reg:x16; val_offset:468; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 468, x17, x15, 312, x18)

inst_40:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000021 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3fffb7 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000012 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f000021; op2val:0x403fffb7; op3val:0x7f000012; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 320, x18)

inst_41:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x00002f and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3fffb3 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000013 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f00002f; op2val:0x403fffb3; op3val:0x7f000013; valaddr_reg:x16; val_offset:492; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 492, x17, x15, 328, x18)

inst_42:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000053 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3fffa6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000055 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f000053; op2val:0x403fffa6; op3val:0x7f000055; valaddr_reg:x16; val_offset:504; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 504, x17, x15, 336, x18)

inst_43:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000014 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x40000b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x00005c and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f000014; op2val:0x4040000b; op3val:0x7f00005c; valaddr_reg:x16; val_offset:516; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 516, x17, x15, 344, x18)

inst_44:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000027 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3fffcb and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000010 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f000027; op2val:0x403fffcb; op3val:0x7f000010; valaddr_reg:x16; val_offset:528; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 528, x17, x15, 352, x18)

inst_45:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x00001c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x400000 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000056 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f00001c; op2val:0x40400000; op3val:0x7f000056; valaddr_reg:x16; val_offset:540; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 540, x17, x15, 360, x18)

inst_46:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000037 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3fffb2 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x00000a and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f000037; op2val:0x403fffb2; op3val:0x7f00000a; valaddr_reg:x16; val_offset:552; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 552, x17, x15, 368, x18)

inst_47:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000056 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x7ffed8 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x00001f and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x800056; op2val:0xbefffed8; op3val:0x80001f; valaddr_reg:x16; val_offset:564; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 564, x17, x15, 376, x18)

inst_48:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000029 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x7fff5e and fs3 == 0 and fe3 == 0x01 and fm3 == 0x00000a and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x800029; op2val:0xbe7fff5e; op3val:0x80000a; valaddr_reg:x16; val_offset:576; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 576, x17, x15, 384, x18)

inst_49:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000033 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x7ffc0a and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000039 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x800033; op2val:0xbdfffc0a; op3val:0x800039; valaddr_reg:x16; val_offset:588; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 588, x17, x15, 392, x18)

inst_50:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000036 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x7ffd94 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000010 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x800036; op2val:0xbd7ffd94; op3val:0x800010; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 400, x18)

inst_51:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x00003a and fs2 == 1 and fe2 == 0x79 and fm2 == 0x7ffb0c and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000012 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x80003a; op2val:0xbcfffb0c; op3val:0x800012; valaddr_reg:x16; val_offset:612; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 612, x17, x15, 408, x18)

inst_52:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000048 and fs2 == 1 and fe2 == 0x78 and fm2 == 0x7ff270 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x00001a and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x800048; op2val:0xbc7ff270; op3val:0x80001a; valaddr_reg:x16; val_offset:624; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 624, x17, x15, 416, x18)

inst_53:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000043 and fs2 == 1 and fe2 == 0x77 and fm2 == 0x7fdd7a and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000022 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x800043; op2val:0xbbffdd7a; op3val:0x800022; valaddr_reg:x16; val_offset:636; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 636, x17, x15, 424, x18)

inst_54:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000020 and fs2 == 1 and fe2 == 0x76 and fm2 == 0x7f4bc0 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x00005a and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x800020; op2val:0xbb7f4bc0; op3val:0x80005a; valaddr_reg:x16; val_offset:648; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 648, x17, x15, 432, x18)

inst_55:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x00003e and fs2 == 1 and fe2 == 0x75 and fm2 == 0x7efb84 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000041 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x80003e; op2val:0xbafefb84; op3val:0x800041; valaddr_reg:x16; val_offset:660; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 660, x17, x15, 440, x18)

inst_56:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000042 and fs2 == 1 and fe2 == 0x74 and fm2 == 0x7dd77d and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000045 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x800042; op2val:0xba7dd77d; op3val:0x800045; valaddr_reg:x16; val_offset:672; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 672, x17, x15, 448, x18)

inst_57:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000024 and fs2 == 1 and fe2 == 0x73 and fm2 == 0x7c5fb9 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x00003a and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x800024; op2val:0xb9fc5fb9; op3val:0x80003a; valaddr_reg:x16; val_offset:684; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 684, x17, x15, 456, x18)

inst_58:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x00001a and fs2 == 1 and fe2 == 0x72 and fm2 == 0x74dfce and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000059 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x80001a; op2val:0xb974dfce; op3val:0x800059; valaddr_reg:x16; val_offset:696; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 696, x17, x15, 464, x18)

inst_59:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x00004e and fs2 == 1 and fe2 == 0x71 and fm2 == 0x6f7f6e and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000042 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x80004e; op2val:0xb8ef7f6e; op3val:0x800042; valaddr_reg:x16; val_offset:708; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 708, x17, x15, 472, x18)

inst_60:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x00004f and fs2 == 1 and fe2 == 0x70 and fm2 == 0x5f7f76 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000041 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x80004f; op2val:0xb85f7f76; op3val:0x800041; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 480, x18)

inst_61:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000039 and fs2 == 1 and fe2 == 0x6f and fm2 == 0x55ffa1 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x00002a and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x800039; op2val:0xb7d5ffa1; op3val:0x80002a; valaddr_reg:x16; val_offset:732; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 732, x17, x15, 488, x18)

inst_62:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000062 and fs2 == 1 and fe2 == 0x6e and fm2 == 0x6dff4a and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000009 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x800062; op2val:0xb76dff4a; op3val:0x800009; valaddr_reg:x16; val_offset:744; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 744, x17, x15, 496, x18)

inst_63:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000048 and fs2 == 1 and fe2 == 0x6d and fm2 == 0x6fff79 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000004 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x800048; op2val:0xb6efff79; op3val:0x800004; valaddr_reg:x16; val_offset:756; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 756, x17, x15, 504, x18)

inst_64:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000041 and fs2 == 0 and fe2 == 0x6c and fm2 == 0x4fff96 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x00003a and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x800041; op2val:0x364fff96; op3val:0x80003a; valaddr_reg:x16; val_offset:768; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 768, x17, x15, 512, x18)

inst_65:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000063 and fs2 == 1 and fe2 == 0x69 and fm2 == 0x3fff6c and fs3 == 0 and fe3 == 0x01 and fm3 == 0x00000d and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x800063; op2val:0xb4bfff6c; op3val:0x80000d; valaddr_reg:x16; val_offset:780; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 780, x17, x15, 520, x18)

inst_66:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000024 and fs2 == 1 and fe2 == 0x68 and fm2 == 0x7fffb8 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000006 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x800024; op2val:0xb47fffb8; op3val:0x800006; valaddr_reg:x16; val_offset:792; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 792, x17, x15, 528, x18)

inst_67:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000020 and fs2 == 0 and fe2 == 0x6c and fm2 == 0x27ffd6 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000019 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x800020; op2val:0x3627ffd6; op3val:0x800019; valaddr_reg:x16; val_offset:804; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 804, x17, x15, 536, x18)

inst_68:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000048 and fs2 == 0 and fe2 == 0x6a and fm2 == 0x3fff94 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000008 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x800048; op2val:0x353fff94; op3val:0x800008; valaddr_reg:x16; val_offset:816; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 816, x17, x15, 544, x18)

inst_69:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x00003e and fs2 == 0 and fe2 == 0x6b and fm2 == 0x4fff9b and fs3 == 0 and fe3 == 0x01 and fm3 == 0x00000e and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x80003e; op2val:0x35cfff9b; op3val:0x80000e; valaddr_reg:x16; val_offset:828; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 828, x17, x15, 552, x18)

inst_70:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000044 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1fffcf and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000048 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x800044; op2val:0x401fffcf; op3val:0x800048; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 560, x18)

inst_71:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000058 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0fffbf and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000043 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x800058; op2val:0x400fffbf; op3val:0x800043; valaddr_reg:x16; val_offset:852; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 852, x17, x15, 568, x18)

inst_72:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000008 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x08000c and fs3 == 0 and fe3 == 0x01 and fm3 == 0x00002a and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x800008; op2val:0x4008000c; op3val:0x80002a; valaddr_reg:x16; val_offset:864; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 864, x17, x15, 576, x18)

inst_73:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000010 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x040013 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000048 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x800010; op2val:0x40040013; op3val:0x800048; valaddr_reg:x16; val_offset:876; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 876, x17, x15, 584, x18)

inst_74:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000050 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x01ffdd and fs3 == 0 and fe3 == 0x01 and fm3 == 0x00005d and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x800050; op2val:0x4001ffdd; op3val:0x80005d; valaddr_reg:x16; val_offset:888; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 888, x17, x15, 592, x18)

inst_75:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000013 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x01000b and fs3 == 0 and fe3 == 0x01 and fm3 == 0x00003d and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x800013; op2val:0x4001000b; op3val:0x80003d; valaddr_reg:x16; val_offset:900; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 900, x17, x15, 600, x18)

inst_76:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000014 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x007ff7 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000017 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x800014; op2val:0x40007ff7; op3val:0x800017; valaddr_reg:x16; val_offset:912; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 912, x17, x15, 608, x18)

inst_77:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x00004e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x003fb2 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000001 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x80004e; op2val:0x40003fb2; op3val:0x800001; valaddr_reg:x16; val_offset:924; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 924, x17, x15, 616, x18)

inst_78:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000039 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x001fd3 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000018 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x800039; op2val:0x40001fd3; op3val:0x800018; valaddr_reg:x16; val_offset:936; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 936, x17, x15, 624, x18)

inst_79:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000042 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x000fbf and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000003 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x800042; op2val:0x40000fbf; op3val:0x800003; valaddr_reg:x16; val_offset:948; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 948, x17, x15, 632, x18)

inst_80:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000014 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x00080e and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000044 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x800014; op2val:0x4000080e; op3val:0x800044; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 640, x18)

inst_81:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000011 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x000411 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000045 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x800011; op2val:0x40000411; op3val:0x800045; valaddr_reg:x16; val_offset:972; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 972, x17, x15, 648, x18)

inst_82:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000036 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0001ea and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000041 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x800036; op2val:0x400001ea; op3val:0x800041; valaddr_reg:x16; val_offset:984; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 984, x17, x15, 656, x18)

inst_83:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x00004b and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0000d6 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000043 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x80004b; op2val:0x400000d6; op3val:0x800043; valaddr_reg:x16; val_offset:996; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 996, x17, x15, 664, x18)

inst_84:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x00003b and fs2 == 0 and fe2 == 0x80 and fm2 == 0x00006f and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000055 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x80003b; op2val:0x4000006f; op3val:0x800055; valaddr_reg:x16; val_offset:1008; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1008, x17, x15, 672, x18)

inst_85:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x00005f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7ffff0 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x00002e and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x80005f; op2val:0x3ffffff0; op3val:0x80002e; valaddr_reg:x16; val_offset:1020; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1020, x17, x15, 680, x18)

inst_86:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000011 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x000013 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000008 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x800011; op2val:0x40000013; op3val:0x800008; valaddr_reg:x16; val_offset:1032; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1032, x17, x15, 688, x18)

inst_87:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000046 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7fffca and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000036 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x800046; op2val:0x3fffffca; op3val:0x800036; valaddr_reg:x16; val_offset:1044; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1044, x17, x15, 696, x18)

inst_88:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x00002a and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7fffde and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000022 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x80002a; op2val:0x3fffffde; op3val:0x800022; valaddr_reg:x16; val_offset:1056; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1056, x17, x15, 704, x18)

inst_89:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000062 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7fff90 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x00004c and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x800062; op2val:0x3fffff90; op3val:0x80004c; valaddr_reg:x16; val_offset:1068; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1068, x17, x15, 712, x18)

inst_90:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000041 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7fffa1 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x00001f and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x800041; op2val:0x3fffffa1; op3val:0x80001f; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 720, x18)

inst_91:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x00001c and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7ffff0 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000026 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x80001c; op2val:0x3ffffff0; op3val:0x800026; valaddr_reg:x16; val_offset:1092; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1092, x17, x15, 728, x18)

inst_92:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000004 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x00000d and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000021 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x800004; op2val:0x4000000d; op3val:0x800021; valaddr_reg:x16; val_offset:1104; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1104, x17, x15, 736, x18)

inst_93:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000019 and fs2 == 1 and fe2 == 0x90 and fm2 == 0x23d6c0 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00001c and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x19; op2val:0xc823d6c0; op3val:0x1c; valaddr_reg:x16; val_offset:1116; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1116, x17, x15, 744, x18)

inst_94:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000012 and fs2 == 1 and fe2 == 0x91 and fm2 == 0x2aaa45 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000038 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x12; op2val:0xc8aaaa45; op3val:0x38; valaddr_reg:x16; val_offset:1128; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1128, x17, x15, 752, x18)

inst_95:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000044 and fs2 == 1 and fe2 == 0x8f and fm2 == 0x52d21c and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000060 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x44; op2val:0xc7d2d21c; op3val:0x60; valaddr_reg:x16; val_offset:1140; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1140, x17, x15, 760, x18)

inst_96:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000054 and fs2 == 1 and fe2 == 0x8f and fm2 == 0x36db57 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00000e and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54; op2val:0xc7b6db57; op3val:0xe; valaddr_reg:x16; val_offset:1152; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1152, x17, x15, 768, x18)

inst_97:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000002 and fs2 == 1 and fe2 == 0x94 and fm2 == 0x77ff44 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00005d and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x2; op2val:0xca77ff44; op3val:0x5d; valaddr_reg:x16; val_offset:1164; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1164, x17, x15, 776, x18)

inst_98:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000011 and fs2 == 1 and fe2 == 0x91 and fm2 == 0x6d2d26 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000003 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x11; op2val:0xc8ed2d26; op3val:0x3; valaddr_reg:x16; val_offset:1176; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1176, x17, x15, 784, x18)

inst_99:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000047 and fs2 == 1 and fe2 == 0x8f and fm2 == 0x64f4ad and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000047 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x47; op2val:0xc7e4f4ad; op3val:0x47; valaddr_reg:x16; val_offset:1188; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1188, x17, x15, 792, x18)

inst_100:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00002d and fs2 == 1 and fe2 == 0x90 and fm2 == 0x355537 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000014 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x2d; op2val:0xc8355537; op3val:0x14; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 800, x18)

inst_101:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00003d and fs2 == 1 and fe2 == 0x90 and fm2 == 0x06080a and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000055 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d; op2val:0xc806080a; op3val:0x55; valaddr_reg:x16; val_offset:1212; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1212, x17, x15, 808, x18)

inst_102:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00004f and fs2 == 1 and fe2 == 0x8f and fm2 == 0x4f301d and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00004d and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x4f; op2val:0xc7cf301d; op3val:0x4d; valaddr_reg:x16; val_offset:1224; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1224, x17, x15, 816, x18)

inst_103:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000054 and fs2 == 1 and fe2 == 0x8f and fm2 == 0x42f3b1 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000013 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54; op2val:0xc7c2f3b1; op3val:0x13; valaddr_reg:x16; val_offset:1236; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1236, x17, x15, 824, x18)

inst_104:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00004c and fs2 == 1 and fe2 == 0x8f and fm2 == 0x578656 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00003c and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x4c; op2val:0xc7d78656; op3val:0x3c; valaddr_reg:x16; val_offset:1248; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1248, x17, x15, 832, x18)

inst_105:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000004 and fs2 == 1 and fe2 == 0x93 and fm2 == 0x7ff7d6 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000014 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x4; op2val:0xc9fff7d6; op3val:0x14; valaddr_reg:x16; val_offset:1260; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1260, x17, x15, 840, x18)

inst_106:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000016 and fs2 == 1 and fe2 == 0x91 and fm2 == 0x3a2b89 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000011 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x16; op2val:0xc8ba2b89; op3val:0x11; valaddr_reg:x16; val_offset:1272; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1272, x17, x15, 848, x18)

inst_107:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00005d and fs2 == 1 and fe2 == 0x8f and fm2 == 0x302a8c and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000015 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5d; op2val:0xc7b02a8c; op3val:0x15; valaddr_reg:x16; val_offset:1284; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1284, x17, x15, 856, x18)

inst_108:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000060 and fs2 == 1 and fe2 == 0x8f and fm2 == 0x2aa9f0 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00000b and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x60; op2val:0xc7aaa9f0; op3val:0xb; valaddr_reg:x16; val_offset:1296; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1296, x17, x15, 864, x18)

inst_109:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00003c and fs2 == 1 and fe2 == 0x90 and fm2 == 0x08880c and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000034 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3c; op2val:0xc808880c; op3val:0x34; valaddr_reg:x16; val_offset:1308; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1308, x17, x15, 872, x18)

inst_110:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00005d and fs2 == 1 and fe2 == 0x8f and fm2 == 0x302b97 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000033 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5d; op2val:0xc7b02b97; op3val:0x33; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 880, x18)

inst_111:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00002b and fs2 == 1 and fe2 == 0x90 and fm2 == 0x3e82cf and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00000c and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x2b; op2val:0xc83e82cf; op3val:0xc; valaddr_reg:x16; val_offset:1332; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1332, x17, x15, 888, x18)

inst_112:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000038 and fs2 == 1 and fe2 == 0x90 and fm2 == 0x1248bd and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000052 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x38; op2val:0xc81248bd; op3val:0x52; valaddr_reg:x16; val_offset:1344; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1344, x17, x15, 896, x18)

inst_113:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00003e and fs2 == 1 and fe2 == 0x90 and fm2 == 0x0420eb and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000017 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e; op2val:0xc80420eb; op3val:0x17; valaddr_reg:x16; val_offset:1356; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1356, x17, x15, 904, x18)

inst_114:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000061 and fs2 == 1 and fe2 == 0x8f and fm2 == 0x28e819 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00001a and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x61; op2val:0xc7a8e819; op3val:0x1a; valaddr_reg:x16; val_offset:1368; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1368, x17, x15, 912, x18)

inst_115:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000032 and fs2 == 1 and fe2 == 0x90 and fm2 == 0x23d692 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00005c and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x32; op2val:0xc823d692; op3val:0x5c; valaddr_reg:x16; val_offset:1380; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1380, x17, x15, 920, x18)

inst_116:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000055 and fs2 == 0 and fe2 == 0x8e and fm2 == 0x40c0ee and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000010 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x55; op2val:0x4740c0ee; op3val:0x10; valaddr_reg:x16; val_offset:1392; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1392, x17, x15, 928, x18)

inst_117:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000053 and fs2 == 0 and fe2 == 0x8f and fm2 == 0x140c66 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00000b and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x53; op2val:0x47940c66; op3val:0xb; valaddr_reg:x16; val_offset:1404; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1404, x17, x15, 936, x18)

inst_118:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000054 and fs2 == 0 and fe2 == 0x8f and fm2 == 0x2aaaee and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00002d and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54; op2val:0x47aaaaee; op3val:0x2d; valaddr_reg:x16; val_offset:1416; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1416, x17, x15, 944, x18)

inst_119:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x95 and fm2 == 0x70007a and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00003e and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1; op2val:0x4af0007a; op3val:0x3e; valaddr_reg:x16; val_offset:1428; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1428, x17, x15, 952, x18)

inst_120:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000050 and fs2 == 0 and fe2 == 0x8f and fm2 == 0x4666e3 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00004f and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x50; op2val:0x47c666e3; op3val:0x4f; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 960, x18)

inst_121:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00001b and fs2 == 0 and fe2 == 0x91 and fm2 == 0x15559e and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00003e and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1b; op2val:0x4895559e; op3val:0x3e; valaddr_reg:x16; val_offset:1452; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1452, x17, x15, 968, x18)

inst_122:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00001a and fs2 == 0 and fe2 == 0x91 and fm2 == 0x1c4efa and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00002c and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1a; op2val:0x489c4efa; op3val:0x2c; valaddr_reg:x16; val_offset:1464; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1464, x17, x15, 976, x18)

inst_123:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00001e and fs2 == 0 and fe2 == 0x91 and fm2 == 0x080040 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00003d and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1e; op2val:0x48880040; op3val:0x3d; valaddr_reg:x16; val_offset:1476; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1476, x17, x15, 984, x18)

inst_124:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00001d and fs2 == 0 and fe2 == 0x91 and fm2 == 0x0cf73a and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00000e and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1d; op2val:0x488cf73a; op3val:0xe; valaddr_reg:x16; val_offset:1488; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1488, x17, x15, 992, x18)

inst_125:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00002f and fs2 == 0 and fe2 == 0x90 and fm2 == 0x2e20bc and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00000b and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x2f; op2val:0x482e20bc; op3val:0xb; valaddr_reg:x16; val_offset:1500; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1500, x17, x15, 1000, x18)

inst_126:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00005d and fs2 == 0 and fe2 == 0x8f and fm2 == 0x301642 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00002d and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5d; op2val:0x47b01642; op3val:0x2d; valaddr_reg:x16; val_offset:1512; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1512, x17, x15, 1008, x18)

inst_127:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00002d and fs2 == 0 and fe2 == 0x90 and fm2 == 0x360051 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00003a and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x2d; op2val:0x48360051; op3val:0x3a; valaddr_reg:x16; val_offset:1524; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1524, x17, x15, 1016, x18)

inst_128:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000059 and fs2 == 0 and fe2 == 0x8f and fm2 == 0x3811b1 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00004e and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x59; op2val:0x47b811b1; op3val:0x4e; valaddr_reg:x16; val_offset:1536; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1536, x17, x15, 1024, x18)

inst_129:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000022 and fs2 == 0 and fe2 == 0x90 and fm2 == 0x70ed5a and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000019 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x22; op2val:0x4870ed5a; op3val:0x19; valaddr_reg:x16; val_offset:1548; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1548, x17, x15, 1032, x18)

inst_130:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000024 and fs2 == 0 and fe2 == 0x90 and fm2 == 0x638cdc and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00003d and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x24; op2val:0x48638cdc; op3val:0x3d; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1040, x18)

inst_131:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000004 and fs2 == 0 and fe2 == 0x93 and fm2 == 0x7fff06 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000004 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x4; op2val:0x49ffff06; op3val:0x4; valaddr_reg:x16; val_offset:1572; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1572, x17, x15, 1048, x18)

inst_132:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00002e and fs2 == 0 and fe2 == 0x90 and fm2 == 0x32166b and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00005e and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x2e; op2val:0x4832166b; op3val:0x5e; valaddr_reg:x16; val_offset:1584; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1584, x17, x15, 1056, x18)

inst_133:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000043 and fs2 == 0 and fe2 == 0x8f and fm2 == 0x7489c9 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000040 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x43; op2val:0x47f489c9; op3val:0x40; valaddr_reg:x16; val_offset:1596; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1596, x17, x15, 1064, x18)

inst_134:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00001e and fs2 == 0 and fe2 == 0x91 and fm2 == 0x088892 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00001a and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1e; op2val:0x48888892; op3val:0x1a; valaddr_reg:x16; val_offset:1608; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1608, x17, x15, 1072, x18)

inst_135:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000034 and fs2 == 0 and fe2 == 0x90 and fm2 == 0x1d8a42 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00005f and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x34; op2val:0x481d8a42; op3val:0x5f; valaddr_reg:x16; val_offset:1620; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1620, x17, x15, 1080, x18)

inst_136:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000019 and fs2 == 0 and fe2 == 0x91 and fm2 == 0x23d72c and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00001f and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x19; op2val:0x48a3d72c; op3val:0x1f; valaddr_reg:x16; val_offset:1632; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1632, x17, x15, 1088, x18)

inst_137:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00004f and fs2 == 0 and fe2 == 0x8f and fm2 == 0x4f650f and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000062 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x4f; op2val:0x47cf650f; op3val:0x62; valaddr_reg:x16; val_offset:1644; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1644, x17, x15, 1096, x18)

inst_138:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000052 and fs2 == 0 and fe2 == 0x8f and fm2 == 0x47ce37 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00001d and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x52; op2val:0x47c7ce37; op3val:0x1d; valaddr_reg:x16; val_offset:1656; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1656, x17, x15, 1104, x18)

inst_139:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000041 and fs2 == 1 and fe2 == 0x8e and fm2 == 0x7c0f1c and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00002b and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x41; op2val:0xc77c0f1c; op3val:0x2b; valaddr_reg:x16; val_offset:1668; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1668, x17, x15, 1112, x18)

inst_140:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000045 and fs2 == 1 and fe2 == 0x8d and fm2 == 0x6d7104 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000046 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x45; op2val:0xc6ed7104; op3val:0x46; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1120, x18)

inst_141:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000063 and fs2 == 1 and fe2 == 0x8c and fm2 == 0x257d93 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00001d and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x63; op2val:0xc6257d93; op3val:0x1d; valaddr_reg:x16; val_offset:1692; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1692, x17, x15, 1128, x18)

inst_142:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000016 and fs2 == 1 and fe2 == 0x8d and fm2 == 0x3a2a74 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00002e and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x16; op2val:0xc6ba2a74; op3val:0x2e; valaddr_reg:x16; val_offset:1704; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1704, x17, x15, 1136, x18)

inst_143:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000043 and fs2 == 1 and fe2 == 0x8a and fm2 == 0x747e91 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00002f and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x43; op2val:0xc5747e91; op3val:0x2f; valaddr_reg:x16; val_offset:1716; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1716, x17, x15, 1144, x18)

inst_144:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00005a and fs2 == 1 and fe2 == 0x89 and fm2 == 0x35ffa5 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000022 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5a; op2val:0xc4b5ffa5; op3val:0x22; valaddr_reg:x16; val_offset:1728; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1728, x17, x15, 1152, x18)

inst_145:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000053 and fs2 == 1 and fe2 == 0x88 and fm2 == 0x455d4d and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00000c and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x53; op2val:0xc4455d4d; op3val:0xc; valaddr_reg:x16; val_offset:1740; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1740, x17, x15, 1160, x18)

inst_146:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000044 and fs2 == 1 and fe2 == 0x87 and fm2 == 0x70a969 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000027 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x44; op2val:0xc3f0a969; op3val:0x27; valaddr_reg:x16; val_offset:1752; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1752, x17, x15, 1168, x18)

inst_147:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000004 and fs2 == 1 and fe2 == 0x8a and fm2 == 0x7e7c00 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000062 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x4; op2val:0xc57e7c00; op3val:0x62; valaddr_reg:x16; val_offset:1764; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1764, x17, x15, 1176, x18)

inst_148:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000059 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x368a11 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000046 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x59; op2val:0xc2b68a11; op3val:0x46; valaddr_reg:x16; val_offset:1776; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1776, x17, x15, 1184, x18)

inst_149:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00002f and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2d882c and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000013 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x2f; op2val:0xc2ad882c; op3val:0x13; valaddr_reg:x16; val_offset:1788; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1788, x17, x15, 1192, x18)

inst_150:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00001b and fs2 == 1 and fe2 == 0x85 and fm2 == 0x12bda1 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000044 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1b; op2val:0xc292bda1; op3val:0x44; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1200, x18)

inst_151:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000043 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x740f49 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000003 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x43; op2val:0xc1740f49; op3val:0x3; valaddr_reg:x16; val_offset:1812; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1812, x17, x15, 1208, x18)

inst_152:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000059 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x30e61d and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000015 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x59; op2val:0xc0b0e61d; op3val:0x15; valaddr_reg:x16; val_offset:1824; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1824, x17, x15, 1216, x18)

inst_153:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000022 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x378788 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00003e and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x22; op2val:0xc0b78788; op3val:0x3e; valaddr_reg:x16; val_offset:1836; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1836, x17, x15, 1224, x18)

inst_154:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00002c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x45d174 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00005f and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x2c; op2val:0xbf45d174; op3val:0x5f; valaddr_reg:x16; val_offset:1848; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1848, x17, x15, 1232, x18)

inst_155:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00000e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0db6db and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000060 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xe; op2val:0x400db6db; op3val:0x60; valaddr_reg:x16; val_offset:1860; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1860, x17, x15, 1240, x18)

inst_156:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00000b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x22e8ba and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000013 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xb; op2val:0xbfa2e8ba; op3val:0x13; valaddr_reg:x16; val_offset:1872; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1872, x17, x15, 1248, x18)

inst_157:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00003e and fs2 == 0 and fe2 == 0x7d and fm2 == 0x3def7c and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000028 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e; op2val:0x3ebdef7c; op3val:0x28; valaddr_reg:x16; val_offset:1884; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1884, x17, x15, 1256, x18)

inst_158:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00003c and fs2 == 0 and fe2 == 0x7e and fm2 == 0x622222 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00003e and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3c; op2val:0x3f622222; op3val:0x3e; valaddr_reg:x16; val_offset:1896; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1896, x17, x15, 1264, x18)

inst_159:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00000f and fs2 == 0 and fe2 == 0x80 and fm2 == 0x777777 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00003f and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xf; op2val:0x40777777; op3val:0x3f; valaddr_reg:x16; val_offset:1908; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1908, x17, x15, 1272, x18)

inst_160:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00003d and fs2 == 0 and fe2 == 0x7c and fm2 == 0x5a3ac1 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000010 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d; op2val:0x3e5a3ac1; op3val:0x10; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1280, x18)

inst_161:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00004e and fs2 == 0 and fe2 == 0x7e and fm2 == 0x17ea0d and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00002f and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x4e; op2val:0x3f17ea0d; op3val:0x2f; valaddr_reg:x16; val_offset:1932; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1932, x17, x15, 1288, x18)

inst_162:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000021 and fs2 == 0 and fe2 == 0x8f and fm2 == 0x783ec2 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00002d and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x21; op2val:0x47f83ec2; op3val:0x2d; valaddr_reg:x16; val_offset:1944; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1944, x17, x15, 1296, x18)

inst_163:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000014 and fs2 == 0 and fe2 == 0x8f and fm2 == 0x4ccee0 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000052 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x14; op2val:0x47cccee0; op3val:0x52; valaddr_reg:x16; val_offset:1956; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1956, x17, x15, 1304, x18)

inst_164:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00004f and fs2 == 0 and fe2 == 0x8c and fm2 == 0x4f66fd and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000031 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x4f; op2val:0x464f66fd; op3val:0x31; valaddr_reg:x16; val_offset:1968; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1968, x17, x15, 1312, x18)

inst_165:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00000a and fs2 == 0 and fe2 == 0x8e and fm2 == 0x4ccf9a and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00001b and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xa; op2val:0x474ccf9a; op3val:0x1b; valaddr_reg:x16; val_offset:1980; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1980, x17, x15, 1320, x18)

inst_166:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00004f and fs2 == 0 and fe2 == 0x8a and fm2 == 0x4f6578 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000004 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x4f; op2val:0x454f6578; op3val:0x4; valaddr_reg:x16; val_offset:1992; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1992, x17, x15, 1328, x18)

inst_167:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00000d and fs2 == 0 and fe2 == 0x8c and fm2 == 0x1d989e and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00002f and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd; op2val:0x461d989e; op3val:0x2f; valaddr_reg:x16; val_offset:2004; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 2004, x17, x15, 1336, x18)

inst_168:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000014 and fs2 == 0 and fe2 == 0x8a and fm2 == 0x4d04cd and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000045 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x14; op2val:0x454d04cd; op3val:0x45; valaddr_reg:x16; val_offset:2016; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 2016, x17, x15, 1344, x18)

inst_169:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x8e and fm2 == 0x004a00 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000049 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1; op2val:0x47004a00; op3val:0x49; valaddr_reg:x16; val_offset:2028; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 2028, x17, x15, 1352, x18)
addi x16,x16,2040

inst_170:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000007 and fs2 == 0 and fe2 == 0x8a and fm2 == 0x126b6e and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00000e and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7; op2val:0x45126b6e; op3val:0xe; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 1360, x18)

inst_171:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00002c and fs2 == 0 and fe2 == 0x86 and fm2 == 0x3bf45d and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00004d and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x2c; op2val:0x433bf45d; op3val:0x4d; valaddr_reg:x16; val_offset:12; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 12, x17, x15, 1368, x18)

inst_172:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000015 and fs2 == 0 and fe2 == 0x86 and fm2 == 0x43cf3d and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00000f and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x15; op2val:0x4343cf3d; op3val:0xf; valaddr_reg:x16; val_offset:24; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 24, x17, x15, 1376, x18)

inst_173:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00001b and fs2 == 0 and fe2 == 0x85 and fm2 == 0x1c0000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000039 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1b; op2val:0x429c0000; op3val:0x39; valaddr_reg:x16; val_offset:36; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 36, x17, x15, 1384, x18)

inst_174:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000019 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x2570a4 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000009 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x19; op2val:0x422570a4; op3val:0x9; valaddr_reg:x16; val_offset:48; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 48, x17, x15, 1392, x18)

inst_175:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000034 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x204ec5 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000008 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x34; op2val:0x41204ec5; op3val:0x8; valaddr_reg:x16; val_offset:60; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 60, x17, x15, 1400, x18)

inst_176:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00003e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x2ef7be and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000052 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e; op2val:0x40aef7be; op3val:0x52; valaddr_reg:x16; val_offset:72; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 72, x17, x15, 1408, x18)

inst_177:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000033 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x337373 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00000e and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x33; op2val:0x40337373; op3val:0xe; valaddr_reg:x16; val_offset:84; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 84, x17, x15, 1416, x18)

inst_178:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000033 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x12d2d3 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000034 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x33; op2val:0x4012d2d3; op3val:0x34; valaddr_reg:x16; val_offset:96; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 96, x17, x15, 1424, x18)

inst_179:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000048 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x155555 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000033 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x48; op2val:0x3f955555; op3val:0x33; valaddr_reg:x16; val_offset:108; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 108, x17, x15, 1432, x18)

inst_180:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00003b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x63cbef and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000058 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3b; op2val:0x3fe3cbef; op3val:0x58; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 1440, x18)

inst_181:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00005f and fs2 == 0 and fe2 == 0x7c and fm2 == 0x2c7692 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000007 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f; op2val:0x3e2c7692; op3val:0x7; valaddr_reg:x16; val_offset:132; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 132, x17, x15, 1448, x18)

inst_182:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000054 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0c30c3 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000057 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54; op2val:0x3f8c30c3; op3val:0x57; valaddr_reg:x16; val_offset:144; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 144, x17, x15, 1456, x18)

inst_183:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000042 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x20f83e and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000050 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x42; op2val:0x3fa0f83e; op3val:0x50; valaddr_reg:x16; val_offset:156; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 156, x17, x15, 1464, x18)

inst_184:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000011 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x28df6a and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000059 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x11; op2val:0x40a8df6a; op3val:0x59; valaddr_reg:x16; val_offset:168; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 168, x17, x15, 1472, x18)

inst_185:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000049 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x7ffeca and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000029 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f800049; op2val:0xbefffeca; op3val:0x3f800029; valaddr_reg:x16; val_offset:180; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 180, x17, x15, 1480, x18)

inst_186:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000030 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x7ffd28 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x00004f and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f800030; op2val:0xbe7ffd28; op3val:0x3f80004f; valaddr_reg:x16; val_offset:192; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 192, x17, x15, 1488, x18)

inst_187:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000036 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x7ffb44 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000045 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f800036; op2val:0xbdfffb44; op3val:0x3f800045; valaddr_reg:x16; val_offset:204; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 204, x17, x15, 1496, x18)

inst_188:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x7ffd9e and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000013 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f800001; op2val:0xbd7ffd9e; op3val:0x3f800013; valaddr_reg:x16; val_offset:216; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 216, x17, x15, 1504, x18)

inst_189:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000022 and fs2 == 1 and fe2 == 0x79 and fm2 == 0x7ff67c and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000025 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f800022; op2val:0xbcfff67c; op3val:0x3f800025; valaddr_reg:x16; val_offset:228; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 228, x17, x15, 1512, x18)

inst_190:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x00004c and fs2 == 1 and fe2 == 0x78 and fm2 == 0x7ff368 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000018 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f80004c; op2val:0xbc7ff368; op3val:0x3f800018; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 1520, x18)

inst_191:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000002 and fs2 == 1 and fe2 == 0x77 and fm2 == 0x7fc0fc and fs3 == 0 and fe3 == 0x7f and fm3 == 0x00003f and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f800002; op2val:0xbbffc0fc; op3val:0x3f80003f; valaddr_reg:x16; val_offset:252; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 252, x17, x15, 1528, x18)

inst_192:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000055 and fs2 == 1 and fe2 == 0x76 and fm2 == 0x7fc356 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x00001e and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f800055; op2val:0xbb7fc356; op3val:0x3f80001e; valaddr_reg:x16; val_offset:264; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 264, x17, x15, 1536, x18)

inst_193:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000014 and fs2 == 1 and fe2 == 0x75 and fm2 == 0x7f87d8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x00001e and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f800014; op2val:0xbaff87d8; op3val:0x3f80001e; valaddr_reg:x16; val_offset:276; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 276, x17, x15, 1544, x18)

inst_194:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x00000b and fs2 == 1 and fe2 == 0x74 and fm2 == 0x7f47ea and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000017 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f80000b; op2val:0xba7f47ea; op3val:0x3f800017; valaddr_reg:x16; val_offset:288; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 288, x17, x15, 1552, x18)

inst_195:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x00001e and fs2 == 1 and fe2 == 0x73 and fm2 == 0x7ebfc4 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000014 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f80001e; op2val:0xb9febfc4; op3val:0x3f800014; valaddr_reg:x16; val_offset:300; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 300, x17, x15, 1560, x18)

inst_196:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000058 and fs2 == 1 and fe2 == 0x72 and fm2 == 0x79df54 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000031 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f800058; op2val:0xb979df54; op3val:0x3f800031; valaddr_reg:x16; val_offset:312; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 312, x17, x15, 1568, x18)

inst_197:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000036 and fs2 == 1 and fe2 == 0x71 and fm2 == 0x747f99 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x00002e and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f800036; op2val:0xb8f47f99; op3val:0x3f80002e; valaddr_reg:x16; val_offset:324; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 324, x17, x15, 1576, x18)

inst_198:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000024 and fs2 == 1 and fe2 == 0x70 and fm2 == 0x527fc5 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x00005b and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f800024; op2val:0xb8527fc5; op3val:0x3f80005b; valaddr_reg:x16; val_offset:336; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 336, x17, x15, 1584, x18)

inst_199:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000038 and fs2 == 1 and fe2 == 0x6f and fm2 == 0x38ffaf and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000047 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f800038; op2val:0xb7b8ffaf; op3val:0x3f800047; valaddr_reg:x16; val_offset:348; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 348, x17, x15, 1592, x18)

inst_200:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000024 and fs2 == 1 and fe2 == 0x6e and fm2 == 0x5bffc2 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000012 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f800024; op2val:0xb75bffc2; op3val:0x3f800012; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 1600, x18)

inst_201:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000034 and fs2 == 0 and fe2 == 0x6a and fm2 == 0x5fffa5 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000047 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f800034; op2val:0x355fffa5; op3val:0x3f800047; valaddr_reg:x16; val_offset:372; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 372, x17, x15, 1608, x18)

inst_202:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000016 and fs2 == 0 and fe2 == 0x6c and fm2 == 0x4fffdc and fs3 == 0 and fe3 == 0x7f and fm3 == 0x00003a and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f800016; op2val:0x364fffdc; op3val:0x3f80003a; valaddr_reg:x16; val_offset:384; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 384, x17, x15, 1616, x18)

inst_203:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000040 and fs2 == 1 and fe2 == 0x6a and fm2 == 0x1fffb0 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x00000b and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f800040; op2val:0xb51fffb0; op3val:0x3f80000b; valaddr_reg:x16; val_offset:396; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 396, x17, x15, 1624, x18)

inst_204:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000033 and fs2 == 0 and fe2 == 0x6d and fm2 == 0x2bffbb and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000033 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f800033; op2val:0x36abffbb; op3val:0x3f800033; valaddr_reg:x16; val_offset:408; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 408, x17, x15, 1632, x18)

inst_205:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x00005f and fs2 == 0 and fe2 == 0x6c and fm2 == 0x5fff5a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000020 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f80005f; op2val:0x365fff5a; op3val:0x3f800020; valaddr_reg:x16; val_offset:420; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 420, x17, x15, 1640, x18)

inst_206:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000025 and fs2 == 0 and fe2 == 0x6b and fm2 == 0x6fffbb and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000011 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f800025; op2val:0x35efffbb; op3val:0x3f800011; valaddr_reg:x16; val_offset:432; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 432, x17, x15, 1648, x18)

inst_207:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x00001c and fs2 == 0 and fe2 == 0x6e and fm2 == 0x43ffd5 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000063 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f80001c; op2val:0x3743ffd5; op3val:0x3f800063; valaddr_reg:x16; val_offset:444; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 444, x17, x15, 1656, x18)

inst_208:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000040 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1fffb4 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000008 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f800040; op2val:0x401fffb4; op3val:0x3f800008; valaddr_reg:x16; val_offset:456; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 456, x17, x15, 1664, x18)

inst_209:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x00004f and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0fffaf and fs3 == 0 and fe3 == 0x7f and fm3 == 0x00000f and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f80004f; op2val:0x400fffaf; op3val:0x3f80000f; valaddr_reg:x16; val_offset:468; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 468, x17, x15, 1672, x18)

inst_210:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x00002e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x07ffda and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000016 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f80002e; op2val:0x4007ffda; op3val:0x3f800016; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1680, x18)

inst_211:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000003 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x04001b and fs3 == 0 and fe3 == 0x7f and fm3 == 0x00003c and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f800003; op2val:0x4004001b; op3val:0x3f80003c; valaddr_reg:x16; val_offset:492; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 492, x17, x15, 1688, x18)

inst_212:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000056 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x01ffbf and fs3 == 0 and fe3 == 0x7f and fm3 == 0x00002d and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f800056; op2val:0x4001ffbf; op3val:0x3f80002d; valaddr_reg:x16; val_offset:504; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 504, x17, x15, 1696, x18)

inst_213:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x00005c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x00ffbc and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000032 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f80005c; op2val:0x4000ffbc; op3val:0x3f800032; valaddr_reg:x16; val_offset:516; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 516, x17, x15, 1704, x18)

inst_214:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x00003a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x007fd8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000025 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f80003a; op2val:0x40007fd8; op3val:0x3f800025; valaddr_reg:x16; val_offset:528; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 528, x17, x15, 1712, x18)

inst_215:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x00004a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x003fe2 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000058 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f80004a; op2val:0x40003fe2; op3val:0x3f800058; valaddr_reg:x16; val_offset:540; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 540, x17, x15, 1720, x18)

inst_216:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000028 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x002001 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000053 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f800028; op2val:0x40002001; op3val:0x3f800053; valaddr_reg:x16; val_offset:552; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 552, x17, x15, 1728, x18)

inst_217:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x00005e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x000fcf and fs3 == 0 and fe3 == 0x7f and fm3 == 0x00005a and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f80005e; op2val:0x40000fcf; op3val:0x3f80005a; valaddr_reg:x16; val_offset:564; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 564, x17, x15, 1736, x18)

inst_218:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000009 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0007fb and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000008 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f800009; op2val:0x400007fb; op3val:0x3f800008; valaddr_reg:x16; val_offset:576; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 576, x17, x15, 1744, x18)

inst_219:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x00005a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0003d1 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000056 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f80005a; op2val:0x400003d1; op3val:0x3f800056; valaddr_reg:x16; val_offset:588; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 588, x17, x15, 1752, x18)

inst_220:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000023 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0001fb and fs3 == 0 and fe3 == 0x7f and fm3 == 0x00003d and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f800023; op2val:0x400001fb; op3val:0x3f80003d; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1760, x18)

inst_221:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000009 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0000fd and fs3 == 0 and fe3 == 0x7f and fm3 == 0x00000c and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f800009; op2val:0x400000fd; op3val:0x3f80000c; valaddr_reg:x16; val_offset:612; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 612, x17, x15, 1768, x18)

inst_222:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x00004b and fs2 == 0 and fe2 == 0x80 and fm2 == 0x000052 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x00003b and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f80004b; op2val:0x40000052; op3val:0x3f80003b; valaddr_reg:x16; val_offset:624; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 624, x17, x15, 1776, x18)

inst_223:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x00004d and fs2 == 0 and fe2 == 0x80 and fm2 == 0x000013 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000040 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f80004d; op2val:0x40000013; op3val:0x3f800040; valaddr_reg:x16; val_offset:636; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 636, x17, x15, 1784, x18)

inst_224:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000059 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7fffbb and fs3 == 0 and fe3 == 0x7f and fm3 == 0x00002d and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f800059; op2val:0x3fffffbb; op3val:0x3f80002d; valaddr_reg:x16; val_offset:648; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 648, x17, x15, 1792, x18)

inst_225:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000029 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7ffffa and fs3 == 0 and fe3 == 0x7f and fm3 == 0x00002c and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f800029; op2val:0x3ffffffa; op3val:0x3f80002c; valaddr_reg:x16; val_offset:660; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 660, x17, x15, 1800, x18)

inst_226:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000048 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7fffca and fs3 == 0 and fe3 == 0x7f and fm3 == 0x00004a and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f800048; op2val:0x3fffffca; op3val:0x3f80004a; valaddr_reg:x16; val_offset:672; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 672, x17, x15, 1808, x18)

inst_227:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x00000a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x00002b and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000062 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f80000a; op2val:0x4000002b; op3val:0x3f800062; valaddr_reg:x16; val_offset:684; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 684, x17, x15, 1816, x18)

inst_228:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000006 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x000027 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000056 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f800006; op2val:0x40000027; op3val:0x3f800056; valaddr_reg:x16; val_offset:696; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 696, x17, x15, 1824, x18)

inst_229:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x00003f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7fffba and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000036 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f80003f; op2val:0x3fffffba; op3val:0x3f800036; valaddr_reg:x16; val_offset:708; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 708, x17, x15, 1832, x18)

inst_230:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x00002c and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7fffbd and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000014 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f80002c; op2val:0x3fffffbd; op3val:0x3f800014; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1840, x18)

inst_231:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000016 and fs2 == 1 and fe2 == 0x90 and fm2 == 0x3a2d71 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000061 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x16; op2val:0xc83a2d71; op3val:0x61; valaddr_reg:x16; val_offset:732; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 732, x17, x15, 1848, x18)

inst_232:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000042 and fs2 == 1 and fe2 == 0x8d and fm2 == 0x783c6d and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000036 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x42; op2val:0xc6f83c6d; op3val:0x36; valaddr_reg:x16; val_offset:744; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 744, x17, x15, 1856, x18)

inst_233:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00000a and fs2 == 1 and fe2 == 0x8f and fm2 == 0x4ccc00 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000010 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xa; op2val:0xc7cccc00; op3val:0x10; valaddr_reg:x16; val_offset:756; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 756, x17, x15, 1864, x18)

inst_234:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000025 and fs2 == 1 and fe2 == 0x8c and fm2 == 0x5d5f5a and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00004e and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x25; op2val:0xc65d5f5a; op3val:0x4e; valaddr_reg:x16; val_offset:768; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 768, x17, x15, 1872, x18)

inst_235:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00005e and fs2 == 1 and fe2 == 0x8a and fm2 == 0x2e4262 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00003a and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5e; op2val:0xc52e4262; op3val:0x3a; valaddr_reg:x16; val_offset:780; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 780, x17, x15, 1880, x18)

inst_236:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000040 and fs2 == 1 and fe2 == 0x89 and fm2 == 0x7fea00 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00002c and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x40; op2val:0xc4ffea00; op3val:0x2c; valaddr_reg:x16; val_offset:792; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 792, x17, x15, 1888, x18)

inst_237:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000027 and fs2 == 1 and fe2 == 0x89 and fm2 == 0x51d555 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000044 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x27; op2val:0xc4d1d555; op3val:0x44; valaddr_reg:x16; val_offset:804; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 804, x17, x15, 1896, x18)

inst_238:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00000b and fs2 == 1 and fe2 == 0x8a and fm2 == 0x39c2e9 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00004a and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xb; op2val:0xc539c2e9; op3val:0x4a; valaddr_reg:x16; val_offset:816; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 816, x17, x15, 1904, x18)

inst_239:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00005a and fs2 == 1 and fe2 == 0x86 and fm2 == 0x35b05b and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000020 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5a; op2val:0xc335b05b; op3val:0x20; valaddr_reg:x16; val_offset:828; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 828, x17, x15, 1912, x18)

inst_240:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000020 and fs2 == 1 and fe2 == 0x86 and fm2 == 0x7f4000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000018 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x20; op2val:0xc37f4000; op3val:0x18; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1920, x18)

inst_241:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00002f and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2ca367 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000027 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x2f; op2val:0xc2aca367; op3val:0x27; valaddr_reg:x16; val_offset:852; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 852, x17, x15, 1928, x18)

inst_242:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00004b and fs2 == 1 and fe2 == 0x83 and fm2 == 0x5428f6 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00003b and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x4b; op2val:0xc1d428f6; op3val:0x3b; valaddr_reg:x16; val_offset:864; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 864, x17, x15, 1936, x18)

inst_243:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000029 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x3c18fa and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00003c and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x29; op2val:0xc1bc18fa; op3val:0x3c; valaddr_reg:x16; val_offset:876; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 876, x17, x15, 1944, x18)

inst_244:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000045 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x53f129 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000037 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x45; op2val:0xc0d3f129; op3val:0x37; valaddr_reg:x16; val_offset:888; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 888, x17, x15, 1952, x18)

inst_245:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000040 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x280000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000058 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x40; op2val:0xc0280000; op3val:0x58; valaddr_reg:x16; val_offset:900; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 900, x17, x15, 1960, x18)

inst_246:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000050 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x21999a and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00001b and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x50; op2val:0xbfa1999a; op3val:0x1b; valaddr_reg:x16; val_offset:912; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 912, x17, x15, 1968, x18)

inst_247:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000049 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x446231 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000008 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x49; op2val:0xbf446231; op3val:0x8; valaddr_reg:x16; val_offset:924; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 924, x17, x15, 1976, x18)

inst_248:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00005c and fs2 == 1 and fe2 == 0x7d and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000009 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5c; op2val:0xbe800000; op3val:0x9; valaddr_reg:x16; val_offset:936; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 936, x17, x15, 1984, x18)

inst_249:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00000d and fs2 == 0 and fe2 == 0x81 and fm2 == 0x076276 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000047 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd; op2val:0x40876276; op3val:0x47; valaddr_reg:x16; val_offset:948; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 948, x17, x15, 1992, x18)

inst_250:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000019 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4ccccd and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000030 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x19; op2val:0x3fcccccd; op3val:0x30; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 2000, x18)

inst_251:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00004a and fs2 == 0 and fe2 == 0x7f and fm2 == 0x06eb3e and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000052 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x4a; op2val:0x3f86eb3e; op3val:0x52; valaddr_reg:x16; val_offset:972; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 972, x17, x15, 2008, x18)

inst_252:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00000e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x26db6e and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00004b and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xe; op2val:0x40a6db6e; op3val:0x4b; valaddr_reg:x16; val_offset:984; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 984, x17, x15, 2016, x18)

inst_253:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000058 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x05d174 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000018 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x58; op2val:0x3e85d174; op3val:0x18; valaddr_reg:x16; val_offset:996; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 996, x17, x15, 2024, x18)
RVTEST_SIGBASE(x15,signature_x15_2)

inst_254:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000028 and fs2 == 0 and fe2 == 0x8f and fm2 == 0x4ccdb3 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000048 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x28; op2val:0x47cccdb3; op3val:0x48; valaddr_reg:x16; val_offset:1008; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1008, x17, x15, 0, x18)

inst_255:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000010 and fs2 == 0 and fe2 == 0x90 and fm2 == 0x000128 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00004a and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10; op2val:0x48000128; op3val:0x4a; valaddr_reg:x16; val_offset:1020; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1020, x17, x15, 8, x18)

inst_256:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000013 and fs2 == 0 and fe2 == 0x8e and fm2 == 0x5797e5 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000046 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x13; op2val:0x475797e5; op3val:0x46; valaddr_reg:x16; val_offset:1032; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1032, x17, x15, 16, x18)

inst_257:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000026 and fs2 == 0 and fe2 == 0x8c and fm2 == 0x5799e5 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000036 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x26; op2val:0x465799e5; op3val:0x36; valaddr_reg:x16; val_offset:1044; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1044, x17, x15, 24, x18)

inst_258:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000048 and fs2 == 0 and fe2 == 0x8a and fm2 == 0x639239 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000012 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x48; op2val:0x45639239; op3val:0x12; valaddr_reg:x16; val_offset:1056; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1056, x17, x15, 32, x18)

inst_259:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00001d and fs2 == 0 and fe2 == 0x8b and fm2 == 0x0d3f73 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000006 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1d; op2val:0x458d3f73; op3val:0x6; valaddr_reg:x16; val_offset:1068; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1068, x17, x15, 40, x18)

inst_260:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000033 and fs2 == 0 and fe2 == 0x89 and fm2 == 0x20a505 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000007 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x33; op2val:0x44a0a505; op3val:0x7; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 48, x18)

inst_261:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00004a and fs2 == 0 and fe2 == 0x87 and fm2 == 0x5de983 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00004b and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x4a; op2val:0x43dde983; op3val:0x4b; valaddr_reg:x16; val_offset:1092; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1092, x17, x15, 56, x18)

inst_262:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00004b and fs2 == 0 and fe2 == 0x86 and fm2 == 0x5a8f5c and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000008 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x4b; op2val:0x435a8f5c; op3val:0x8; valaddr_reg:x16; val_offset:1104; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1104, x17, x15, 64, x18)

inst_263:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000051 and fs2 == 0 and fe2 == 0x85 and fm2 == 0x4c4588 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000051 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x51; op2val:0x42cc4588; op3val:0x51; valaddr_reg:x16; val_offset:1116; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1116, x17, x15, 72, x18)

inst_264:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000010 and fs2 == 0 and fe2 == 0x87 and fm2 == 0x00e800 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00001d and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10; op2val:0x4380e800; op3val:0x1d; valaddr_reg:x16; val_offset:1128; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1128, x17, x15, 80, x18)

inst_265:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000008 and fs2 == 0 and fe2 == 0x87 and fm2 == 0x049000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000049 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x8; op2val:0x43849000; op3val:0x49; valaddr_reg:x16; val_offset:1140; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1140, x17, x15, 88, x18)

inst_266:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000047 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x7327a9 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000037 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x47; op2val:0x417327a9; op3val:0x37; valaddr_reg:x16; val_offset:1152; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1152, x17, x15, 96, x18)

inst_267:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00001f and fs2 == 0 and fe2 == 0x83 and fm2 == 0x0739ce and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00000c and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1f; op2val:0x418739ce; op3val:0xc; valaddr_reg:x16; val_offset:1164; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1164, x17, x15, 104, x18)

inst_268:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000036 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x1d097b and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000009 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x36; op2val:0x409d097b; op3val:0x9; valaddr_reg:x16; val_offset:1176; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1176, x17, x15, 112, x18)

inst_269:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00000c and fs2 == 0 and fe2 == 0x82 and fm2 == 0x755555 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000038 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xc; op2val:0x41755555; op3val:0x38; valaddr_reg:x16; val_offset:1188; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1188, x17, x15, 120, x18)

inst_270:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00001c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1db6db and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000005 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1c; op2val:0x401db6db; op3val:0x5; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 128, x18)

inst_271:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000008 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x420000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000041 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x8; op2val:0x41420000; op3val:0x41; valaddr_reg:x16; val_offset:1212; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1212, x17, x15, 136, x18)

inst_272:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00002f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x77d46d and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00004b and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x2f; op2val:0x3ff7d46d; op3val:0x4b; valaddr_reg:x16; val_offset:1224; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1224, x17, x15, 144, x18)

inst_273:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000045 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x1bd37a and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00000d and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x45; op2val:0x3e9bd37a; op3val:0xd; valaddr_reg:x16; val_offset:1236; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1236, x17, x15, 152, x18)

inst_274:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000007 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x00000a and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7; op2val:0x40000000; op3val:0xa; valaddr_reg:x16; val_offset:1248; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1248, x17, x15, 160, x18)

inst_275:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000033 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x57d7d8 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000054 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x33; op2val:0x3fd7d7d8; op3val:0x54; valaddr_reg:x16; val_offset:1260; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1260, x17, x15, 168, x18)

inst_276:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00002a and fs2 == 0 and fe2 == 0x7e and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000014 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x2a; op2val:0x3f000000; op3val:0x14; valaddr_reg:x16; val_offset:1272; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1272, x17, x15, 176, x18)

inst_277:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x00003b and fs2 == 1 and fe2 == 0x7d and fm2 == 0x7fff7e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000002 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f00003b; op2val:0xbeffff7e; op3val:0x7f000002; valaddr_reg:x16; val_offset:1284; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1284, x17, x15, 184, x18)

inst_278:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000022 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3fffab and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000010 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f000022; op2val:0xbf3fffab; op3val:0x7f000010; valaddr_reg:x16; val_offset:1296; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1296, x17, x15, 192, x18)

inst_279:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x00000b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6fff4d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x00004e and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f00000b; op2val:0xbf6fff4d; op3val:0x7f00004e; valaddr_reg:x16; val_offset:1308; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1308, x17, x15, 200, x18)

inst_280:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x00000c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x77ffa3 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000022 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f00000c; op2val:0xbf77ffa3; op3val:0x7f000022; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 208, x18)

inst_281:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000003 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7bff54 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000052 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f000003; op2val:0xbf7bff54; op3val:0x7f000052; valaddr_reg:x16; val_offset:1332; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1332, x17, x15, 216, x18)

inst_282:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x00000a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7dffa4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000023 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f00000a; op2val:0xbf7dffa4; op3val:0x7f000023; valaddr_reg:x16; val_offset:1344; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1344, x17, x15, 224, x18)

inst_283:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000018 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7eff60 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000037 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f000018; op2val:0xbf7eff60; op3val:0x7f000037; valaddr_reg:x16; val_offset:1356; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1356, x17, x15, 232, x18)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
test_fp:
.word 0x2a
.word 0x2a
.word 0x2a
.word 0x7f00003b
.word 0xbeffff7e
.word 0x7f00003b
.word 0x7f000022
.word 0xbf3fffab
.word 0x7f000022
.word 0x7f00001d
.word 0xbf5fffb9
.word 0x7f000009
.word 0x7f00000b
.word 0xbf6fff4d
.word 0xbf6fff4d
.word 0x7f00000c
.word 0xbf77ffa3
.word 0xbf77ffa3
.word 0x7f000003
.word 0x7f000003
.word 0x7f000052
.word 0x7f00000a
.word 0x7f00000a
.word 0x7f000023
.word 0x7f000018
.word 0x7f000018
.word 0x7f000018
.word 0x7f000008
.word 0xbf7f7f3c
.word 0x7f000059
.word 0x7f00000c
.word 0xbf7fbf9e
.word 0x7f000024
.word 0x7f00005a
.word 0xbf7fdef6
.word 0x7f00002a
.word 0x7f00004a
.word 0xbf7feeea
.word 0x7f000040
.word 0x7f000045
.word 0xbf7ff6f0
.word 0x7f000042
.word 0x7f000034
.word 0xbf7ffb6e
.word 0x7f000014
.word 0x7f000057
.word 0xbf7ffd0c
.word 0x7f000022
.word 0x7f000011
.word 0xbf7ffe6e
.word 0x7f000037
.word 0x7f000023
.word 0xbf7ffe76
.word 0x7f000061
.word 0x7f000006
.word 0xbf7fff82
.word 0x7f000018
.word 0x7f000022
.word 0xbf7fff54
.word 0x7f000023
.word 0x7f00000e
.word 0xbf7fffbc
.word 0x7f00000b
.word 0x7f00000f
.word 0xbf7fff9c
.word 0x7f00001e
.word 0x7f000042
.word 0xbf7fff64
.word 0x7f000009
.word 0x7f000050
.word 0xbf7fff10
.word 0x7f000026
.word 0x7f00002b
.word 0x401fffeb
.word 0x7f000043
.word 0x7f000003
.word 0x40300014
.word 0x7f000032
.word 0x7f000039
.word 0x4037ffdb
.word 0x7f00005b
.word 0x7f000047
.word 0x403bffb5
.word 0x7f00003b
.word 0x7f000003
.word 0x403e0011
.word 0x7f00002c
.word 0x7f00005d
.word 0x403eff8c
.word 0x7f00002f
.word 0x7f000029
.word 0x403f7fc8
.word 0x7f00000c
.word 0x7f00001a
.word 0x403fbff0
.word 0x7f00002e
.word 0x7f00002c
.word 0x403fdfd9
.word 0x7f000036
.word 0x7f000042
.word 0x403fefb7
.word 0x7f000034
.word 0x7f00005b
.word 0x403ff793
.word 0x7f000038
.word 0x7f00001d
.word 0x403ffbdf
.word 0x7f000015
.word 0x7f000015
.word 0x403ffe0b
.word 0x7f000056
.word 0x7f000033
.word 0x403ffed3
.word 0x7f00003f
.word 0x7f000060
.word 0x403ffef6
.word 0x7f00000d
.word 0x7f00003c
.word 0x403fff74
.word 0x7f00001d
.word 0x7f000021
.word 0x403fffb7
.word 0x7f000012
.word 0x7f00002f
.word 0x403fffb3
.word 0x7f000013
.word 0x7f000053
.word 0x403fffa6
.word 0x7f000055
.word 0x7f000014
.word 0x4040000b
.word 0x7f00005c
.word 0x7f000027
.word 0x403fffcb
.word 0x7f000010
.word 0x7f00001c
.word 0x40400000
.word 0x7f000056
.word 0x7f000037
.word 0x403fffb2
.word 0x7f00000a
.word 0x800056
.word 0xbefffed8
.word 0x80001f
.word 0x800029
.word 0xbe7fff5e
.word 0x80000a
.word 0x800033
.word 0xbdfffc0a
.word 0x800039
.word 0x800036
.word 0xbd7ffd94
.word 0x800010
.word 0x80003a
.word 0xbcfffb0c
.word 0x800012
.word 0x800048
.word 0xbc7ff270
.word 0x80001a
.word 0x800043
.word 0xbbffdd7a
.word 0x800022
.word 0x800020
.word 0xbb7f4bc0
.word 0x80005a
.word 0x80003e
.word 0xbafefb84
.word 0x800041
.word 0x800042
.word 0xba7dd77d
.word 0x800045
.word 0x800024
.word 0xb9fc5fb9
.word 0x80003a
.word 0x80001a
.word 0xb974dfce
.word 0x800059
.word 0x80004e
.word 0xb8ef7f6e
.word 0x800042
.word 0x80004f
.word 0xb85f7f76
.word 0x800041
.word 0x800039
.word 0xb7d5ffa1
.word 0x80002a
.word 0x800062
.word 0xb76dff4a
.word 0x800009
.word 0x800048
.word 0xb6efff79
.word 0x800004
.word 0x800041
.word 0x364fff96
.word 0x80003a
.word 0x800063
.word 0xb4bfff6c
.word 0x80000d
.word 0x800024
.word 0xb47fffb8
.word 0x800006
.word 0x800020
.word 0x3627ffd6
.word 0x800019
.word 0x800048
.word 0x353fff94
.word 0x800008
.word 0x80003e
.word 0x35cfff9b
.word 0x80000e
.word 0x800044
.word 0x401fffcf
.word 0x800048
.word 0x800058
.word 0x400fffbf
.word 0x800043
.word 0x800008
.word 0x4008000c
.word 0x80002a
.word 0x800010
.word 0x40040013
.word 0x800048
.word 0x800050
.word 0x4001ffdd
.word 0x80005d
.word 0x800013
.word 0x4001000b
.word 0x80003d
.word 0x800014
.word 0x40007ff7
.word 0x800017
.word 0x80004e
.word 0x40003fb2
.word 0x800001
.word 0x800039
.word 0x40001fd3
.word 0x800018
.word 0x800042
.word 0x40000fbf
.word 0x800003
.word 0x800014
.word 0x4000080e
.word 0x800044
.word 0x800011
.word 0x40000411
.word 0x800045
.word 0x800036
.word 0x400001ea
.word 0x800041
.word 0x80004b
.word 0x400000d6
.word 0x800043
.word 0x80003b
.word 0x4000006f
.word 0x800055
.word 0x80005f
.word 0x3ffffff0
.word 0x80002e
.word 0x800011
.word 0x40000013
.word 0x800008
.word 0x800046
.word 0x3fffffca
.word 0x800036
.word 0x80002a
.word 0x3fffffde
.word 0x800022
.word 0x800062
.word 0x3fffff90
.word 0x80004c
.word 0x800041
.word 0x3fffffa1
.word 0x80001f
.word 0x80001c
.word 0x3ffffff0
.word 0x800026
.word 0x800004
.word 0x4000000d
.word 0x800021
.word 0x19
.word 0xc823d6c0
.word 0x1c
.word 0x12
.word 0xc8aaaa45
.word 0x38
.word 0x44
.word 0xc7d2d21c
.word 0x60
.word 0x54
.word 0xc7b6db57
.word 0xe
.word 0x2
.word 0xca77ff44
.word 0x5d
.word 0x11
.word 0xc8ed2d26
.word 0x3
.word 0x47
.word 0xc7e4f4ad
.word 0x47
.word 0x2d
.word 0xc8355537
.word 0x14
.word 0x3d
.word 0xc806080a
.word 0x55
.word 0x4f
.word 0xc7cf301d
.word 0x4d
.word 0x54
.word 0xc7c2f3b1
.word 0x13
.word 0x4c
.word 0xc7d78656
.word 0x3c
.word 0x4
.word 0xc9fff7d6
.word 0x14
.word 0x16
.word 0xc8ba2b89
.word 0x11
.word 0x5d
.word 0xc7b02a8c
.word 0x15
.word 0x60
.word 0xc7aaa9f0
.word 0xb
.word 0x3c
.word 0xc808880c
.word 0x34
.word 0x5d
.word 0xc7b02b97
.word 0x33
.word 0x2b
.word 0xc83e82cf
.word 0xc
.word 0x38
.word 0xc81248bd
.word 0x52
.word 0x3e
.word 0xc80420eb
.word 0x17
.word 0x61
.word 0xc7a8e819
.word 0x1a
.word 0x32
.word 0xc823d692
.word 0x5c
.word 0x55
.word 0x4740c0ee
.word 0x10
.word 0x53
.word 0x47940c66
.word 0xb
.word 0x54
.word 0x47aaaaee
.word 0x2d
.word 0x1
.word 0x4af0007a
.word 0x3e
.word 0x50
.word 0x47c666e3
.word 0x4f
.word 0x1b
.word 0x4895559e
.word 0x3e
.word 0x1a
.word 0x489c4efa
.word 0x2c
.word 0x1e
.word 0x48880040
.word 0x3d
.word 0x1d
.word 0x488cf73a
.word 0xe
.word 0x2f
.word 0x482e20bc
.word 0xb
.word 0x5d
.word 0x47b01642
.word 0x2d
.word 0x2d
.word 0x48360051
.word 0x3a
.word 0x59
.word 0x47b811b1
.word 0x4e
.word 0x22
.word 0x4870ed5a
.word 0x19
.word 0x24
.word 0x48638cdc
.word 0x3d
.word 0x4
.word 0x49ffff06
.word 0x4
.word 0x2e
.word 0x4832166b
.word 0x5e
.word 0x43
.word 0x47f489c9
.word 0x40
.word 0x1e
.word 0x48888892
.word 0x1a
.word 0x34
.word 0x481d8a42
.word 0x5f
.word 0x19
.word 0x48a3d72c
.word 0x1f
.word 0x4f
.word 0x47cf650f
.word 0x62
.word 0x52
.word 0x47c7ce37
.word 0x1d
.word 0x41
.word 0xc77c0f1c
.word 0x2b
.word 0x45
.word 0xc6ed7104
.word 0x46
.word 0x63
.word 0xc6257d93
.word 0x1d
.word 0x16
.word 0xc6ba2a74
.word 0x2e
.word 0x43
.word 0xc5747e91
.word 0x2f
.word 0x5a
.word 0xc4b5ffa5
.word 0x22
.word 0x53
.word 0xc4455d4d
.word 0xc
.word 0x44
.word 0xc3f0a969
.word 0x27
.word 0x4
.word 0xc57e7c00
.word 0x62
.word 0x59
.word 0xc2b68a11
.word 0x46
.word 0x2f
.word 0xc2ad882c
.word 0x13
.word 0x1b
.word 0xc292bda1
.word 0x44
.word 0x43
.word 0xc1740f49
.word 0x3
.word 0x59
.word 0xc0b0e61d
.word 0x15
.word 0x22
.word 0xc0b78788
.word 0x3e
.word 0x2c
.word 0xbf45d174
.word 0x5f
.word 0xe
.word 0x400db6db
.word 0x60
.word 0xb
.word 0xbfa2e8ba
.word 0x13
.word 0x3e
.word 0x3ebdef7c
.word 0x28
.word 0x3c
.word 0x3f622222
.word 0x3e
.word 0xf
.word 0x40777777
.word 0x3f
.word 0x3d
.word 0x3e5a3ac1
.word 0x10
.word 0x4e
.word 0x3f17ea0d
.word 0x2f
.word 0x21
.word 0x47f83ec2
.word 0x2d
.word 0x14
.word 0x47cccee0
.word 0x52
.word 0x4f
.word 0x464f66fd
.word 0x31
.word 0xa
.word 0x474ccf9a
.word 0x1b
.word 0x4f
.word 0x454f6578
.word 0x4
.word 0xd
.word 0x461d989e
.word 0x2f
.word 0x14
.word 0x454d04cd
.word 0x45
.word 0x1
.word 0x47004a00
.word 0x49
.word 0x7
.word 0x45126b6e
.word 0xe
.word 0x2c
.word 0x433bf45d
.word 0x4d
.word 0x15
.word 0x4343cf3d
.word 0xf
.word 0x1b
.word 0x429c0000
.word 0x39
.word 0x19
.word 0x422570a4
.word 0x9
.word 0x34
.word 0x41204ec5
.word 0x8
.word 0x3e
.word 0x40aef7be
.word 0x52
.word 0x33
.word 0x40337373
.word 0xe
.word 0x33
.word 0x4012d2d3
.word 0x34
.word 0x48
.word 0x3f955555
.word 0x33
.word 0x3b
.word 0x3fe3cbef
.word 0x58
.word 0x5f
.word 0x3e2c7692
.word 0x7
.word 0x54
.word 0x3f8c30c3
.word 0x57
.word 0x42
.word 0x3fa0f83e
.word 0x50
.word 0x11
.word 0x40a8df6a
.word 0x59
.word 0x3f800049
.word 0xbefffeca
.word 0x3f800029
.word 0x3f800030
.word 0xbe7ffd28
.word 0x3f80004f
.word 0x3f800036
.word 0xbdfffb44
.word 0x3f800045
.word 0x3f800001
.word 0xbd7ffd9e
.word 0x3f800013
.word 0x3f800022
.word 0xbcfff67c
.word 0x3f800025
.word 0x3f80004c
.word 0xbc7ff368
.word 0x3f800018
.word 0x3f800002
.word 0xbbffc0fc
.word 0x3f80003f
.word 0x3f800055
.word 0xbb7fc356
.word 0x3f80001e
.word 0x3f800014
.word 0xbaff87d8
.word 0x3f80001e
.word 0x3f80000b
.word 0xba7f47ea
.word 0x3f800017
.word 0x3f80001e
.word 0xb9febfc4
.word 0x3f800014
.word 0x3f800058
.word 0xb979df54
.word 0x3f800031
.word 0x3f800036
.word 0xb8f47f99
.word 0x3f80002e
.word 0x3f800024
.word 0xb8527fc5
.word 0x3f80005b
.word 0x3f800038
.word 0xb7b8ffaf
.word 0x3f800047
.word 0x3f800024
.word 0xb75bffc2
.word 0x3f800012
.word 0x3f800034
.word 0x355fffa5
.word 0x3f800047
.word 0x3f800016
.word 0x364fffdc
.word 0x3f80003a
.word 0x3f800040
.word 0xb51fffb0
.word 0x3f80000b
.word 0x3f800033
.word 0x36abffbb
.word 0x3f800033
.word 0x3f80005f
.word 0x365fff5a
.word 0x3f800020
.word 0x3f800025
.word 0x35efffbb
.word 0x3f800011
.word 0x3f80001c
.word 0x3743ffd5
.word 0x3f800063
.word 0x3f800040
.word 0x401fffb4
.word 0x3f800008
.word 0x3f80004f
.word 0x400fffaf
.word 0x3f80000f
.word 0x3f80002e
.word 0x4007ffda
.word 0x3f800016
.word 0x3f800003
.word 0x4004001b
.word 0x3f80003c
.word 0x3f800056
.word 0x4001ffbf
.word 0x3f80002d
.word 0x3f80005c
.word 0x4000ffbc
.word 0x3f800032
.word 0x3f80003a
.word 0x40007fd8
.word 0x3f800025
.word 0x3f80004a
.word 0x40003fe2
.word 0x3f800058
.word 0x3f800028
.word 0x40002001
.word 0x3f800053
.word 0x3f80005e
.word 0x40000fcf
.word 0x3f80005a
.word 0x3f800009
.word 0x400007fb
.word 0x3f800008
.word 0x3f80005a
.word 0x400003d1
.word 0x3f800056
.word 0x3f800023
.word 0x400001fb
.word 0x3f80003d
.word 0x3f800009
.word 0x400000fd
.word 0x3f80000c
.word 0x3f80004b
.word 0x40000052
.word 0x3f80003b
.word 0x3f80004d
.word 0x40000013
.word 0x3f800040
.word 0x3f800059
.word 0x3fffffbb
.word 0x3f80002d
.word 0x3f800029
.word 0x3ffffffa
.word 0x3f80002c
.word 0x3f800048
.word 0x3fffffca
.word 0x3f80004a
.word 0x3f80000a
.word 0x4000002b
.word 0x3f800062
.word 0x3f800006
.word 0x40000027
.word 0x3f800056
.word 0x3f80003f
.word 0x3fffffba
.word 0x3f800036
.word 0x3f80002c
.word 0x3fffffbd
.word 0x3f800014
.word 0x16
.word 0xc83a2d71
.word 0x61
.word 0x42
.word 0xc6f83c6d
.word 0x36
.word 0xa
.word 0xc7cccc00
.word 0x10
.word 0x25
.word 0xc65d5f5a
.word 0x4e
.word 0x5e
.word 0xc52e4262
.word 0x3a
.word 0x40
.word 0xc4ffea00
.word 0x2c
.word 0x27
.word 0xc4d1d555
.word 0x44
.word 0xb
.word 0xc539c2e9
.word 0x4a
.word 0x5a
.word 0xc335b05b
.word 0x20
.word 0x20
.word 0xc37f4000
.word 0x18
.word 0x2f
.word 0xc2aca367
.word 0x27
.word 0x4b
.word 0xc1d428f6
.word 0x3b
.word 0x29
.word 0xc1bc18fa
.word 0x3c
.word 0x45
.word 0xc0d3f129
.word 0x37
.word 0x40
.word 0xc0280000
.word 0x58
.word 0x50
.word 0xbfa1999a
.word 0x1b
.word 0x49
.word 0xbf446231
.word 0x8
.word 0x5c
.word 0xbe800000
.word 0x9
.word 0xd
.word 0x40876276
.word 0x47
.word 0x19
.word 0x3fcccccd
.word 0x30
.word 0x4a
.word 0x3f86eb3e
.word 0x52
.word 0xe
.word 0x40a6db6e
.word 0x4b
.word 0x58
.word 0x3e85d174
.word 0x18
.word 0x28
.word 0x47cccdb3
.word 0x48
.word 0x10
.word 0x48000128
.word 0x4a
.word 0x13
.word 0x475797e5
.word 0x46
.word 0x26
.word 0x465799e5
.word 0x36
.word 0x48
.word 0x45639239
.word 0x12
.word 0x1d
.word 0x458d3f73
.word 0x6
.word 0x33
.word 0x44a0a505
.word 0x7
.word 0x4a
.word 0x43dde983
.word 0x4b
.word 0x4b
.word 0x435a8f5c
.word 0x8
.word 0x51
.word 0x42cc4588
.word 0x51
.word 0x10
.word 0x4380e800
.word 0x1d
.word 0x8
.word 0x43849000
.word 0x49
.word 0x47
.word 0x417327a9
.word 0x37
.word 0x1f
.word 0x418739ce
.word 0xc
.word 0x36
.word 0x409d097b
.word 0x9
.word 0xc
.word 0x41755555
.word 0x38
.word 0x1c
.word 0x401db6db
.word 0x5
.word 0x8
.word 0x41420000
.word 0x41
.word 0x2f
.word 0x3ff7d46d
.word 0x4b
.word 0x45
.word 0x3e9bd37a
.word 0xd
.word 0x7
.word 0x40000000
.word 0xa
.word 0x33
.word 0x3fd7d7d8
.word 0x54
.word 0x2a
.word 0x3f000000
.word 0x14
.word 0x7f00003b
.word 0xbeffff7e
.word 0x7f000002
.word 0x7f000022
.word 0xbf3fffab
.word 0x7f000010
.word 0x7f00000b
.word 0xbf6fff4d
.word 0x7f00004e
.word 0x7f00000c
.word 0xbf77ffa3
.word 0x7f000022
.word 0x7f000003
.word 0xbf7bff54
.word 0x7f000052
.word 0x7f00000a
.word 0xbf7dffa4
.word 0x7f000023
.word 0x7f000018
.word 0xbf7eff60
.word 0x7f000037
RVTEST_DATA_END

RVMODEL_DATA_BEGIN


signature_x15_0:
    .fill 0*(XLEN/32),4,0xdeadbeef


signature_x15_1:
    .fill 508*(XLEN/32),4,0xdeadbeef


signature_x15_2:
    .fill 60*(XLEN/32),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*(XLEN/32),4,0xdeadbeef

#endif

RVMODEL_DATA_END
