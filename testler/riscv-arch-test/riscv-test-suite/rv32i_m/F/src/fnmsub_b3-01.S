
// -----------
// This file was generated by riscv_ctg (https://gitlab.com/incoresemi/riscv-compliance/riscv_ctg)
// version   : 0.5.2
// timestamp : Tue Sep  7 16:08:13 2021 GMT
// usage     : riscv_ctg \
//                  -- cgf $cgf \
//                  -- xlen $xlen \
// -----------
//
// -----------
// Copyright (c) 2021. IIT Madras. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.s instruction of the RISC-V F extension for the fnmsub_b3 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fnmsub_b3)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x16,test_fp)
RVTEST_SIGBASE(x15,signature_x15_1)

inst_0:
// rs1 == rd != rs2 and rs1 == rd != rs3 and rs3 != rs2, rs1==f29, rs2==f18, rs3==f15, rd==f29, fs1 == 0 and fe1 == 0xfc and fm1 == 0x2e1c2f and fs2 == 1 and fe2 == 0x81 and fm2 == 0x07d476 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x38c2b9 and rm_val == 0  
// opcode: fnmsub.s ; op1:f29; op2:f18; op3:f15; dest:f29; op1val:0x7e2e1c2f; op2val:0xc087d476; op3val:0x7f38c2b9; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f29, f29, f18, f15, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_1:
// rs3 == rd != rs1 and rs3 == rd != rs2 and rs2 != rs1, rs1==f4, rs2==f20, rs3==f5, rd==f5, fs1 == 0 and fe1 == 0xfe and fm1 == 0x265cd2 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6681f8 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x15cbdb and rm_val == 4  
// opcode: fnmsub.s ; op1:f4; op2:f20; op3:f5; dest:f5; op1val:0x7f265cd2; op2val:0xbf6681f8; op3val:0x7f15cbdb; valaddr_reg:x16; val_offset:12; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f5, f4, f20, f5, 0x4, 0, x16, 12, x17, x15, 8, x18)

inst_2:
// rs1 != rs2 and rs1 != rd and rs1 != rs3 and rs2 != rs3 and rs2 != rd and rs3 != rd, rs1==f12, rs2==f10, rs3==f8, rd==f14, fs1 == 0 and fe1 == 0xfe and fm1 == 0x265cd2 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6681f8 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x15cbdb and rm_val == 3  
// opcode: fnmsub.s ; op1:f12; op2:f10; op3:f8; dest:f14; op1val:0x7f265cd2; op2val:0xbf6681f8; op3val:0x7f15cbdb; valaddr_reg:x16; val_offset:24; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f14, f12, f10, f8, 0x3, 0, x16, 24, x17, x15, 16, x18)

inst_3:
// rs1 == rs2 != rs3 and rs1 == rs2 != rd and rd != rs3, rs1==f23, rs2==f23, rs3==f24, rd==f25, fs1 == 0 and fe1 == 0xfe and fm1 == 0x265cd2 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6681f8 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x15cbdb and rm_val == 2  
// opcode: fnmsub.s ; op1:f23; op2:f23; op3:f24; dest:f25; op1val:0x7f265cd2; op2val:0x7f265cd2; op3val:0x7f15cbdb; valaddr_reg:x16; val_offset:36; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f25, f23, f23, f24, 0x2, 0, x16, 36, x17, x15, 24, x18)

inst_4:
// rs1 == rs2 == rs3 == rd, rs1==f22, rs2==f22, rs3==f22, rd==f22, fs1 == 0 and fe1 == 0xfe and fm1 == 0x265cd2 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6681f8 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x15cbdb and rm_val == 1  
// opcode: fnmsub.s ; op1:f22; op2:f22; op3:f22; dest:f22; op1val:0x7f265cd2; op2val:0x7f265cd2; op3val:0x7f265cd2; valaddr_reg:x16; val_offset:48; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f22, f22, f22, f22, 0x1, 0, x16, 48, x17, x15, 32, x18)

inst_5:
// rd == rs2 == rs3 != rs1, rs1==f31, rs2==f2, rs3==f2, rd==f2, fs1 == 0 and fe1 == 0xfe and fm1 == 0x265cd2 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6681f8 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x15cbdb and rm_val == 0  
// opcode: fnmsub.s ; op1:f31; op2:f2; op3:f2; dest:f2; op1val:0x7f265cd2; op2val:0xbf6681f8; op3val:0xbf6681f8; valaddr_reg:x16; val_offset:60; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f2, f31, f2, f2, 0x0, 0, x16, 60, x17, x15, 40, x18)

inst_6:
// rs1 == rs2 == rd != rs3, rs1==f13, rs2==f13, rs3==f11, rd==f13, fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b0221 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4fc770 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7b9ef7 and rm_val == 4  
// opcode: fnmsub.s ; op1:f13; op2:f13; op3:f11; dest:f13; op1val:0x7f1b0221; op2val:0x7f1b0221; op3val:0x7efb9ef7; valaddr_reg:x16; val_offset:72; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f13, f13, f11, 0x4, 0, x16, 72, x17, x15, 48, x18)

inst_7:
// rs1 == rs3 != rs2 and rs1 == rs3 != rd and rd != rs2, rs1==f27, rs2==f0, rs3==f27, rd==f30, fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b0221 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4fc770 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7b9ef7 and rm_val == 3  
// opcode: fnmsub.s ; op1:f27; op2:f0; op3:f27; dest:f30; op1val:0x7f1b0221; op2val:0xbf4fc770; op3val:0x7f1b0221; valaddr_reg:x16; val_offset:84; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f30, f27, f0, f27, 0x3, 0, x16, 84, x17, x15, 56, x18)

inst_8:
// rs2 == rs3 != rs1 and rs2 == rs3 != rd and rd != rs1, rs1==f26, rs2==f25, rs3==f25, rd==f20, fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b0221 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4fc770 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7b9ef7 and rm_val == 2  
// opcode: fnmsub.s ; op1:f26; op2:f25; op3:f25; dest:f20; op1val:0x7f1b0221; op2val:0xbf4fc770; op3val:0xbf4fc770; valaddr_reg:x16; val_offset:96; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f20, f26, f25, f25, 0x2, 0, x16, 96, x17, x15, 64, x18)

inst_9:
// rs1 == rs2 == rs3 != rd, rs1==f28, rs2==f28, rs3==f28, rd==f1, fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b0221 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4fc770 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7b9ef7 and rm_val == 1  
// opcode: fnmsub.s ; op1:f28; op2:f28; op3:f28; dest:f1; op1val:0x7f1b0221; op2val:0x7f1b0221; op3val:0x7f1b0221; valaddr_reg:x16; val_offset:108; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f1, f28, f28, f28, 0x1, 0, x16, 108, x17, x15, 72, x18)

inst_10:
// rs1 == rd == rs3 != rs2, rs1==f9, rs2==f16, rs3==f9, rd==f9, fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b0221 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4fc770 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7b9ef7 and rm_val == 0  
// opcode: fnmsub.s ; op1:f9; op2:f16; op3:f9; dest:f9; op1val:0x7f1b0221; op2val:0xbf4fc770; op3val:0x7f1b0221; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f9, f9, f16, f9, 0x0, 0, x16, 120, x17, x15, 80, x18)

inst_11:
// rs2 == rd != rs1 and rs2 == rd != rs3 and rs3 != rs1, rs1==f6, rs2==f11, rs3==f23, rd==f11, fs1 == 0 and fe1 == 0xfe and fm1 == 0x069abc and fs2 == 1 and fe2 == 0x7d and fm2 == 0x0a0331 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x11222e and rm_val == 4  
// opcode: fnmsub.s ; op1:f6; op2:f11; op3:f23; dest:f11; op1val:0x7f069abc; op2val:0xbe8a0331; op3val:0x7e11222e; valaddr_reg:x16; val_offset:132; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f11, f6, f11, f23, 0x4, 0, x16, 132, x17, x15, 88, x18)

inst_12:
// rs1==f2, rs2==f12, rs3==f20, rd==f27, fs1 == 0 and fe1 == 0xfe and fm1 == 0x069abc and fs2 == 1 and fe2 == 0x7d and fm2 == 0x0a0331 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x11222e and rm_val == 3  
// opcode: fnmsub.s ; op1:f2; op2:f12; op3:f20; dest:f27; op1val:0x7f069abc; op2val:0xbe8a0331; op3val:0x7e11222e; valaddr_reg:x16; val_offset:144; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f27, f2, f12, f20, 0x3, 0, x16, 144, x17, x15, 96, x18)

inst_13:
// rs1==f0, rs2==f30, rs3==f7, rd==f23, fs1 == 0 and fe1 == 0xfe and fm1 == 0x069abc and fs2 == 1 and fe2 == 0x7d and fm2 == 0x0a0331 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x11222e and rm_val == 2  
// opcode: fnmsub.s ; op1:f0; op2:f30; op3:f7; dest:f23; op1val:0x7f069abc; op2val:0xbe8a0331; op3val:0x7e11222e; valaddr_reg:x16; val_offset:156; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f23, f0, f30, f7, 0x2, 0, x16, 156, x17, x15, 104, x18)

inst_14:
// rs1==f17, rs2==f8, rs3==f31, rd==f26, fs1 == 0 and fe1 == 0xfe and fm1 == 0x069abc and fs2 == 1 and fe2 == 0x7d and fm2 == 0x0a0331 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x11222e and rm_val == 1  
// opcode: fnmsub.s ; op1:f17; op2:f8; op3:f31; dest:f26; op1val:0x7f069abc; op2val:0xbe8a0331; op3val:0x7e11222e; valaddr_reg:x16; val_offset:168; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f26, f17, f8, f31, 0x1, 0, x16, 168, x17, x15, 112, x18)

inst_15:
// rs1==f1, rs2==f17, rs3==f26, rd==f4, fs1 == 0 and fe1 == 0xfe and fm1 == 0x069abc and fs2 == 1 and fe2 == 0x7d and fm2 == 0x0a0331 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x11222e and rm_val == 0  
// opcode: fnmsub.s ; op1:f1; op2:f17; op3:f26; dest:f4; op1val:0x7f069abc; op2val:0xbe8a0331; op3val:0x7e11222e; valaddr_reg:x16; val_offset:180; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f4, f1, f17, f26, 0x0, 0, x16, 180, x17, x15, 120, x18)

inst_16:
// rs1==f25, rs2==f19, rs3==f30, rd==f31, fs1 == 0 and fe1 == 0xfc and fm1 == 0x2015ef and fs2 == 1 and fe2 == 0x80 and fm2 == 0x54aed3 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x04ff7d and rm_val == 4  
// opcode: fnmsub.s ; op1:f25; op2:f19; op3:f30; dest:f31; op1val:0x7e2015ef; op2val:0xc054aed3; op3val:0x7f04ff7d; valaddr_reg:x16; val_offset:192; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f31, f25, f19, f30, 0x4, 0, x16, 192, x17, x15, 128, x18)

inst_17:
// rs1==f20, rs2==f6, rs3==f13, rd==f21, fs1 == 0 and fe1 == 0xfc and fm1 == 0x2015ef and fs2 == 1 and fe2 == 0x80 and fm2 == 0x54aed3 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x04ff7d and rm_val == 3  
// opcode: fnmsub.s ; op1:f20; op2:f6; op3:f13; dest:f21; op1val:0x7e2015ef; op2val:0xc054aed3; op3val:0x7f04ff7d; valaddr_reg:x16; val_offset:204; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f21, f20, f6, f13, 0x3, 0, x16, 204, x17, x15, 136, x18)

inst_18:
// rs1==f5, rs2==f14, rs3==f18, rd==f12, fs1 == 0 and fe1 == 0xfc and fm1 == 0x2015ef and fs2 == 1 and fe2 == 0x80 and fm2 == 0x54aed3 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x04ff7d and rm_val == 2  
// opcode: fnmsub.s ; op1:f5; op2:f14; op3:f18; dest:f12; op1val:0x7e2015ef; op2val:0xc054aed3; op3val:0x7f04ff7d; valaddr_reg:x16; val_offset:216; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f12, f5, f14, f18, 0x2, 0, x16, 216, x17, x15, 144, x18)

inst_19:
// rs1==f10, rs2==f9, rs3==f19, rd==f3, fs1 == 0 and fe1 == 0xfc and fm1 == 0x2015ef and fs2 == 1 and fe2 == 0x80 and fm2 == 0x54aed3 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x04ff7d and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f9; op3:f19; dest:f3; op1val:0x7e2015ef; op2val:0xc054aed3; op3val:0x7f04ff7d; valaddr_reg:x16; val_offset:228; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f3, f10, f9, f19, 0x1, 0, x16, 228, x17, x15, 152, x18)

inst_20:
// rs1==f8, rs2==f1, rs3==f0, rd==f7, fs1 == 0 and fe1 == 0xfc and fm1 == 0x2015ef and fs2 == 1 and fe2 == 0x80 and fm2 == 0x54aed3 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x04ff7d and rm_val == 0  
// opcode: fnmsub.s ; op1:f8; op2:f1; op3:f0; dest:f7; op1val:0x7e2015ef; op2val:0xc054aed3; op3val:0x7f04ff7d; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f7, f8, f1, f0, 0x0, 0, x16, 240, x17, x15, 160, x18)

inst_21:
// rs1==f14, rs2==f7, rs3==f10, rd==f18, fs1 == 0 and fe1 == 0xfd and fm1 == 0x678370 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2c6a16 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x1bec3f and rm_val == 4  
// opcode: fnmsub.s ; op1:f14; op2:f7; op3:f10; dest:f18; op1val:0x7ee78370; op2val:0xbf2c6a16; op3val:0x7e9bec3f; valaddr_reg:x16; val_offset:252; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f18, f14, f7, f10, 0x4, 0, x16, 252, x17, x15, 168, x18)

inst_22:
// rs1==f18, rs2==f4, rs3==f14, rd==f0, fs1 == 0 and fe1 == 0xfd and fm1 == 0x678370 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2c6a16 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x1bec3f and rm_val == 3  
// opcode: fnmsub.s ; op1:f18; op2:f4; op3:f14; dest:f0; op1val:0x7ee78370; op2val:0xbf2c6a16; op3val:0x7e9bec3f; valaddr_reg:x16; val_offset:264; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f0, f18, f4, f14, 0x3, 0, x16, 264, x17, x15, 176, x18)

inst_23:
// rs1==f11, rs2==f26, rs3==f16, rd==f24, fs1 == 0 and fe1 == 0xfd and fm1 == 0x678370 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2c6a16 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x1bec3f and rm_val == 2  
// opcode: fnmsub.s ; op1:f11; op2:f26; op3:f16; dest:f24; op1val:0x7ee78370; op2val:0xbf2c6a16; op3val:0x7e9bec3f; valaddr_reg:x16; val_offset:276; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f24, f11, f26, f16, 0x2, 0, x16, 276, x17, x15, 184, x18)

inst_24:
// rs1==f7, rs2==f3, rs3==f21, rd==f17, fs1 == 0 and fe1 == 0xfd and fm1 == 0x678370 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2c6a16 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x1bec3f and rm_val == 1  
// opcode: fnmsub.s ; op1:f7; op2:f3; op3:f21; dest:f17; op1val:0x7ee78370; op2val:0xbf2c6a16; op3val:0x7e9bec3f; valaddr_reg:x16; val_offset:288; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f17, f7, f3, f21, 0x1, 0, x16, 288, x17, x15, 192, x18)

inst_25:
// rs1==f24, rs2==f31, rs3==f3, rd==f15, fs1 == 0 and fe1 == 0xfd and fm1 == 0x678370 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2c6a16 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x1bec3f and rm_val == 0  
// opcode: fnmsub.s ; op1:f24; op2:f31; op3:f3; dest:f15; op1val:0x7ee78370; op2val:0xbf2c6a16; op3val:0x7e9bec3f; valaddr_reg:x16; val_offset:300; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f15, f24, f31, f3, 0x0, 0, x16, 300, x17, x15, 200, x18)

inst_26:
// rs1==f21, rs2==f5, rs3==f12, rd==f6, fs1 == 0 and fe1 == 0xfc and fm1 == 0x4a1236 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7e18d0 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4891a8 and rm_val == 4  
// opcode: fnmsub.s ; op1:f21; op2:f5; op3:f12; dest:f6; op1val:0x7e4a1236; op2val:0xbffe18d0; op3val:0x7ec891a8; valaddr_reg:x16; val_offset:312; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f6, f21, f5, f12, 0x4, 0, x16, 312, x17, x15, 208, x18)

inst_27:
// rs1==f3, rs2==f29, rs3==f4, rd==f28, fs1 == 0 and fe1 == 0xfc and fm1 == 0x4a1236 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7e18d0 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4891a8 and rm_val == 3  
// opcode: fnmsub.s ; op1:f3; op2:f29; op3:f4; dest:f28; op1val:0x7e4a1236; op2val:0xbffe18d0; op3val:0x7ec891a8; valaddr_reg:x16; val_offset:324; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f28, f3, f29, f4, 0x3, 0, x16, 324, x17, x15, 216, x18)

inst_28:
// rs1==f16, rs2==f21, rs3==f29, rd==f8, fs1 == 0 and fe1 == 0xfc and fm1 == 0x4a1236 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7e18d0 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4891a8 and rm_val == 2  
// opcode: fnmsub.s ; op1:f16; op2:f21; op3:f29; dest:f8; op1val:0x7e4a1236; op2val:0xbffe18d0; op3val:0x7ec891a8; valaddr_reg:x16; val_offset:336; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f8, f16, f21, f29, 0x2, 0, x16, 336, x17, x15, 224, x18)

inst_29:
// rs1==f30, rs2==f24, rs3==f6, rd==f19, fs1 == 0 and fe1 == 0xfc and fm1 == 0x4a1236 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7e18d0 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4891a8 and rm_val == 1  
// opcode: fnmsub.s ; op1:f30; op2:f24; op3:f6; dest:f19; op1val:0x7e4a1236; op2val:0xbffe18d0; op3val:0x7ec891a8; valaddr_reg:x16; val_offset:348; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f19, f30, f24, f6, 0x1, 0, x16, 348, x17, x15, 232, x18)

inst_30:
// rs1==f19, rs2==f27, rs3==f17, rd==f16, fs1 == 0 and fe1 == 0xfc and fm1 == 0x4a1236 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7e18d0 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4891a8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f19; op2:f27; op3:f17; dest:f16; op1val:0x7e4a1236; op2val:0xbffe18d0; op3val:0x7ec891a8; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f16, f19, f27, f17, 0x0, 0, x16, 360, x17, x15, 240, x18)

inst_31:
// rs1==f15, fs1 == 0 and fe1 == 0xfd and fm1 == 0x186690 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5f8822 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x051262 and rm_val == 4  
// opcode: fnmsub.s ; op1:f15; op2:f18; op3:f3; dest:f7; op1val:0x7e986690; op2val:0xbfdf8822; op3val:0x7f051262; valaddr_reg:x16; val_offset:372; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f7, f15, f18, f3, 0x4, 0, x16, 372, x17, x15, 248, x18)

inst_32:
// rs2==f15, fs1 == 0 and fe1 == 0xfd and fm1 == 0x186690 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5f8822 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x051262 and rm_val == 3  
// opcode: fnmsub.s ; op1:f22; op2:f15; op3:f21; dest:f17; op1val:0x7e986690; op2val:0xbfdf8822; op3val:0x7f051262; valaddr_reg:x16; val_offset:384; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f17, f22, f15, f21, 0x3, 0, x16, 384, x17, x15, 256, x18)

inst_33:
// rs3==f1, fs1 == 0 and fe1 == 0xfd and fm1 == 0x186690 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5f8822 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x051262 and rm_val == 2  
// opcode: fnmsub.s ; op1:f7; op2:f15; op3:f1; dest:f27; op1val:0x7e986690; op2val:0xbfdf8822; op3val:0x7f051262; valaddr_reg:x16; val_offset:396; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f27, f7, f15, f1, 0x2, 0, x16, 396, x17, x15, 264, x18)

inst_34:
// rd==f10, fs1 == 0 and fe1 == 0xfd and fm1 == 0x186690 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5f8822 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x051262 and rm_val == 1  
// opcode: fnmsub.s ; op1:f8; op2:f12; op3:f18; dest:f10; op1val:0x7e986690; op2val:0xbfdf8822; op3val:0x7f051262; valaddr_reg:x16; val_offset:408; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f10, f8, f12, f18, 0x1, 0, x16, 408, x17, x15, 272, x18)

inst_35:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x186690 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5f8822 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x051262 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e986690; op2val:0xbfdf8822; op3val:0x7f051262; valaddr_reg:x16; val_offset:420; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 420, x17, x15, 280, x18)

inst_36:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x05a355 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x25e8ec and fs3 == 0 and fe3 == 0xfc and fm3 == 0x2d37bb and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f05a355; op2val:0xbea5e8ec; op3val:0x7e2d37bb; valaddr_reg:x16; val_offset:432; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 432, x17, x15, 288, x18)

inst_37:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x05a355 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x25e8ec and fs3 == 0 and fe3 == 0xfc and fm3 == 0x2d37bb and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f05a355; op2val:0xbea5e8ec; op3val:0x7e2d37bb; valaddr_reg:x16; val_offset:444; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 444, x17, x15, 296, x18)

inst_38:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x05a355 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x25e8ec and fs3 == 0 and fe3 == 0xfc and fm3 == 0x2d37bb and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f05a355; op2val:0xbea5e8ec; op3val:0x7e2d37bb; valaddr_reg:x16; val_offset:456; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 456, x17, x15, 304, x18)

inst_39:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x05a355 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x25e8ec and fs3 == 0 and fe3 == 0xfc and fm3 == 0x2d37bb and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f05a355; op2val:0xbea5e8ec; op3val:0x7e2d37bb; valaddr_reg:x16; val_offset:468; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 468, x17, x15, 312, x18)

inst_40:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x05a355 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x25e8ec and fs3 == 0 and fe3 == 0xfc and fm3 == 0x2d37bb and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f05a355; op2val:0xbea5e8ec; op3val:0x7e2d37bb; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 320, x18)

inst_41:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x4566d8 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x732561 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3b7d72 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d4566d8; op2val:0xc0f32561; op3val:0x7ebb7d72; valaddr_reg:x16; val_offset:492; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 492, x17, x15, 328, x18)

inst_42:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x4566d8 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x732561 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3b7d72 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d4566d8; op2val:0xc0f32561; op3val:0x7ebb7d72; valaddr_reg:x16; val_offset:504; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 504, x17, x15, 336, x18)

inst_43:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x4566d8 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x732561 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3b7d72 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d4566d8; op2val:0xc0f32561; op3val:0x7ebb7d72; valaddr_reg:x16; val_offset:516; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 516, x17, x15, 344, x18)

inst_44:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x4566d8 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x732561 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3b7d72 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d4566d8; op2val:0xc0f32561; op3val:0x7ebb7d72; valaddr_reg:x16; val_offset:528; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 528, x17, x15, 352, x18)

inst_45:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x4566d8 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x732561 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3b7d72 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d4566d8; op2val:0xc0f32561; op3val:0x7ebb7d72; valaddr_reg:x16; val_offset:540; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 540, x17, x15, 360, x18)

inst_46:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x18f003 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x0ec689 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x2a977b and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e18f003; op2val:0xbe0ec689; op3val:0x7caa977b; valaddr_reg:x16; val_offset:552; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 552, x17, x15, 368, x18)

inst_47:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x18f003 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x0ec689 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x2a977b and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e18f003; op2val:0xbe0ec689; op3val:0x7caa977b; valaddr_reg:x16; val_offset:564; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 564, x17, x15, 376, x18)

inst_48:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x18f003 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x0ec689 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x2a977b and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e18f003; op2val:0xbe0ec689; op3val:0x7caa977b; valaddr_reg:x16; val_offset:576; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 576, x17, x15, 384, x18)

inst_49:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x18f003 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x0ec689 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x2a977b and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e18f003; op2val:0xbe0ec689; op3val:0x7caa977b; valaddr_reg:x16; val_offset:588; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 588, x17, x15, 392, x18)

inst_50:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x18f003 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x0ec689 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x2a977b and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e18f003; op2val:0xbe0ec689; op3val:0x7caa977b; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 400, x18)

inst_51:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x424f27 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2f8ce0 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x053f09 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e424f27; op2val:0xc02f8ce0; op3val:0x7f053f09; valaddr_reg:x16; val_offset:612; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 612, x17, x15, 408, x18)

inst_52:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x424f27 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2f8ce0 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x053f09 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e424f27; op2val:0xc02f8ce0; op3val:0x7f053f09; valaddr_reg:x16; val_offset:624; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 624, x17, x15, 416, x18)

inst_53:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x424f27 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2f8ce0 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x053f09 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e424f27; op2val:0xc02f8ce0; op3val:0x7f053f09; valaddr_reg:x16; val_offset:636; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 636, x17, x15, 424, x18)

inst_54:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x424f27 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2f8ce0 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x053f09 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e424f27; op2val:0xc02f8ce0; op3val:0x7f053f09; valaddr_reg:x16; val_offset:648; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 648, x17, x15, 432, x18)

inst_55:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x424f27 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2f8ce0 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x053f09 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e424f27; op2val:0xc02f8ce0; op3val:0x7f053f09; valaddr_reg:x16; val_offset:660; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 660, x17, x15, 440, x18)

inst_56:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6557cf and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0cc5e8 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7c3aa4 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee557cf; op2val:0xbf8cc5e8; op3val:0x7efc3aa4; valaddr_reg:x16; val_offset:672; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 672, x17, x15, 448, x18)

inst_57:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6557cf and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0cc5e8 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7c3aa4 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee557cf; op2val:0xbf8cc5e8; op3val:0x7efc3aa4; valaddr_reg:x16; val_offset:684; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 684, x17, x15, 456, x18)

inst_58:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6557cf and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0cc5e8 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7c3aa4 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee557cf; op2val:0xbf8cc5e8; op3val:0x7efc3aa4; valaddr_reg:x16; val_offset:696; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 696, x17, x15, 464, x18)

inst_59:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6557cf and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0cc5e8 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7c3aa4 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee557cf; op2val:0xbf8cc5e8; op3val:0x7efc3aa4; valaddr_reg:x16; val_offset:708; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 708, x17, x15, 472, x18)

inst_60:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6557cf and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0cc5e8 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7c3aa4 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee557cf; op2val:0xbf8cc5e8; op3val:0x7efc3aa4; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 480, x18)

inst_61:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7f5c48 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0548d9 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x04f39c and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eff5c48; op2val:0xbf0548d9; op3val:0x7e84f39c; valaddr_reg:x16; val_offset:732; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 732, x17, x15, 488, x18)

inst_62:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7f5c48 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0548d9 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x04f39c and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eff5c48; op2val:0xbf0548d9; op3val:0x7e84f39c; valaddr_reg:x16; val_offset:744; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 744, x17, x15, 496, x18)

inst_63:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7f5c48 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0548d9 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x04f39c and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eff5c48; op2val:0xbf0548d9; op3val:0x7e84f39c; valaddr_reg:x16; val_offset:756; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 756, x17, x15, 504, x18)

inst_64:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7f5c48 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0548d9 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x04f39c and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eff5c48; op2val:0xbf0548d9; op3val:0x7e84f39c; valaddr_reg:x16; val_offset:768; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 768, x17, x15, 512, x18)

inst_65:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7f5c48 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0548d9 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x04f39c and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eff5c48; op2val:0xbf0548d9; op3val:0x7e84f39c; valaddr_reg:x16; val_offset:780; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 780, x17, x15, 520, x18)

inst_66:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x08363b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2ba134 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x36a3fe and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f08363b; op2val:0xbfaba134; op3val:0x7f36a3fe; valaddr_reg:x16; val_offset:792; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 792, x17, x15, 528, x18)

inst_67:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x08363b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2ba134 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x36a3fe and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f08363b; op2val:0xbfaba134; op3val:0x7f36a3fe; valaddr_reg:x16; val_offset:804; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 804, x17, x15, 536, x18)

inst_68:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x08363b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2ba134 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x36a3fe and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f08363b; op2val:0xbfaba134; op3val:0x7f36a3fe; valaddr_reg:x16; val_offset:816; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 816, x17, x15, 544, x18)

inst_69:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x08363b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2ba134 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x36a3fe and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f08363b; op2val:0xbfaba134; op3val:0x7f36a3fe; valaddr_reg:x16; val_offset:828; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 828, x17, x15, 552, x18)

inst_70:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x08363b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2ba134 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x36a3fe and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f08363b; op2val:0xbfaba134; op3val:0x7f36a3fe; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 560, x18)

inst_71:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x62f664 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7ccd08 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x602051 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7de2f664; op2val:0xbf7ccd08; op3val:0x7de02051; valaddr_reg:x16; val_offset:852; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 852, x17, x15, 568, x18)

inst_72:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x62f664 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7ccd08 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x602051 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7de2f664; op2val:0xbf7ccd08; op3val:0x7de02051; valaddr_reg:x16; val_offset:864; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 864, x17, x15, 576, x18)

inst_73:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x62f664 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7ccd08 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x602051 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7de2f664; op2val:0xbf7ccd08; op3val:0x7de02051; valaddr_reg:x16; val_offset:876; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 876, x17, x15, 584, x18)

inst_74:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x62f664 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7ccd08 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x602051 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7de2f664; op2val:0xbf7ccd08; op3val:0x7de02051; valaddr_reg:x16; val_offset:888; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 888, x17, x15, 592, x18)

inst_75:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x62f664 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7ccd08 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x602051 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7de2f664; op2val:0xbf7ccd08; op3val:0x7de02051; valaddr_reg:x16; val_offset:900; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 900, x17, x15, 600, x18)

inst_76:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2de7b9 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x704eea and fs3 == 0 and fe3 == 0xfd and fm3 == 0x233ed9 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2de7b9; op2val:0xbef04eea; op3val:0x7ea33ed9; valaddr_reg:x16; val_offset:912; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 912, x17, x15, 608, x18)

inst_77:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2de7b9 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x704eea and fs3 == 0 and fe3 == 0xfd and fm3 == 0x233ed9 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2de7b9; op2val:0xbef04eea; op3val:0x7ea33ed9; valaddr_reg:x16; val_offset:924; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 924, x17, x15, 616, x18)

inst_78:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2de7b9 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x704eea and fs3 == 0 and fe3 == 0xfd and fm3 == 0x233ed9 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2de7b9; op2val:0xbef04eea; op3val:0x7ea33ed9; valaddr_reg:x16; val_offset:936; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 936, x17, x15, 624, x18)

inst_79:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2de7b9 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x704eea and fs3 == 0 and fe3 == 0xfd and fm3 == 0x233ed9 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2de7b9; op2val:0xbef04eea; op3val:0x7ea33ed9; valaddr_reg:x16; val_offset:948; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 948, x17, x15, 632, x18)

inst_80:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2de7b9 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x704eea and fs3 == 0 and fe3 == 0xfd and fm3 == 0x233ed9 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2de7b9; op2val:0xbef04eea; op3val:0x7ea33ed9; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 640, x18)

inst_81:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x09a252 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2f5462 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3c86a9 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f09a252; op2val:0xbfaf5462; op3val:0x7f3c86a9; valaddr_reg:x16; val_offset:972; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 972, x17, x15, 648, x18)

inst_82:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x09a252 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2f5462 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3c86a9 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f09a252; op2val:0xbfaf5462; op3val:0x7f3c86a9; valaddr_reg:x16; val_offset:984; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 984, x17, x15, 656, x18)

inst_83:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x09a252 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2f5462 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3c86a9 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f09a252; op2val:0xbfaf5462; op3val:0x7f3c86a9; valaddr_reg:x16; val_offset:996; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 996, x17, x15, 664, x18)

inst_84:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x09a252 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2f5462 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3c86a9 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f09a252; op2val:0xbfaf5462; op3val:0x7f3c86a9; valaddr_reg:x16; val_offset:1008; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1008, x17, x15, 672, x18)

inst_85:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x09a252 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2f5462 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3c86a9 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f09a252; op2val:0xbfaf5462; op3val:0x7f3c86a9; valaddr_reg:x16; val_offset:1020; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1020, x17, x15, 680, x18)

inst_86:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x38e8da and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0316c5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3d5f35 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb8e8da; op2val:0xc00316c5; op3val:0x7f3d5f35; valaddr_reg:x16; val_offset:1032; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1032, x17, x15, 688, x18)

inst_87:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x38e8da and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0316c5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3d5f35 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb8e8da; op2val:0xc00316c5; op3val:0x7f3d5f35; valaddr_reg:x16; val_offset:1044; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1044, x17, x15, 696, x18)

inst_88:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x38e8da and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0316c5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3d5f35 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb8e8da; op2val:0xc00316c5; op3val:0x7f3d5f35; valaddr_reg:x16; val_offset:1056; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1056, x17, x15, 704, x18)

inst_89:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x38e8da and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0316c5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3d5f35 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb8e8da; op2val:0xc00316c5; op3val:0x7f3d5f35; valaddr_reg:x16; val_offset:1068; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1068, x17, x15, 712, x18)

inst_90:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x38e8da and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0316c5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3d5f35 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb8e8da; op2val:0xc00316c5; op3val:0x7f3d5f35; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 720, x18)

inst_91:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1336d5 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2a9b0a and fs3 == 0 and fe3 == 0xfd and fm3 == 0x443724 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d9336d5; op2val:0xc0aa9b0a; op3val:0x7ec43724; valaddr_reg:x16; val_offset:1092; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1092, x17, x15, 728, x18)

inst_92:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1336d5 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2a9b0a and fs3 == 0 and fe3 == 0xfd and fm3 == 0x443724 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d9336d5; op2val:0xc0aa9b0a; op3val:0x7ec43724; valaddr_reg:x16; val_offset:1104; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1104, x17, x15, 736, x18)

inst_93:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1336d5 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2a9b0a and fs3 == 0 and fe3 == 0xfd and fm3 == 0x443724 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d9336d5; op2val:0xc0aa9b0a; op3val:0x7ec43724; valaddr_reg:x16; val_offset:1116; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1116, x17, x15, 744, x18)

inst_94:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1336d5 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2a9b0a and fs3 == 0 and fe3 == 0xfd and fm3 == 0x443724 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d9336d5; op2val:0xc0aa9b0a; op3val:0x7ec43724; valaddr_reg:x16; val_offset:1128; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1128, x17, x15, 752, x18)

inst_95:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1336d5 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2a9b0a and fs3 == 0 and fe3 == 0xfd and fm3 == 0x443724 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d9336d5; op2val:0xc0aa9b0a; op3val:0x7ec43724; valaddr_reg:x16; val_offset:1140; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1140, x17, x15, 760, x18)

inst_96:
// fs1 == 0 and fe1 == 0xf3 and fm1 == 0x3337a6 and fs2 == 1 and fe2 == 0x8a and fm2 == 0x067106 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3c3c81 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x79b337a6; op2val:0xc5067106; op3val:0x7f3c3c81; valaddr_reg:x16; val_offset:1152; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1152, x17, x15, 768, x18)

inst_97:
// fs1 == 0 and fe1 == 0xf3 and fm1 == 0x3337a6 and fs2 == 1 and fe2 == 0x8a and fm2 == 0x067106 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3c3c81 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x79b337a6; op2val:0xc5067106; op3val:0x7f3c3c81; valaddr_reg:x16; val_offset:1164; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1164, x17, x15, 776, x18)

inst_98:
// fs1 == 0 and fe1 == 0xf3 and fm1 == 0x3337a6 and fs2 == 1 and fe2 == 0x8a and fm2 == 0x067106 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3c3c81 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x79b337a6; op2val:0xc5067106; op3val:0x7f3c3c81; valaddr_reg:x16; val_offset:1176; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1176, x17, x15, 784, x18)

inst_99:
// fs1 == 0 and fe1 == 0xf3 and fm1 == 0x3337a6 and fs2 == 1 and fe2 == 0x8a and fm2 == 0x067106 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3c3c81 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x79b337a6; op2val:0xc5067106; op3val:0x7f3c3c81; valaddr_reg:x16; val_offset:1188; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1188, x17, x15, 792, x18)

inst_100:
// fs1 == 0 and fe1 == 0xf3 and fm1 == 0x3337a6 and fs2 == 1 and fe2 == 0x8a and fm2 == 0x067106 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3c3c81 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x79b337a6; op2val:0xc5067106; op3val:0x7f3c3c81; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 800, x18)

inst_101:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f2b29 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0cb440 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2ef75a and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e9f2b29; op2val:0xc00cb440; op3val:0x7f2ef75a; valaddr_reg:x16; val_offset:1212; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1212, x17, x15, 808, x18)

inst_102:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f2b29 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0cb440 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2ef75a and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e9f2b29; op2val:0xc00cb440; op3val:0x7f2ef75a; valaddr_reg:x16; val_offset:1224; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1224, x17, x15, 816, x18)

inst_103:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f2b29 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0cb440 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2ef75a and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e9f2b29; op2val:0xc00cb440; op3val:0x7f2ef75a; valaddr_reg:x16; val_offset:1236; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1236, x17, x15, 824, x18)

inst_104:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f2b29 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0cb440 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2ef75a and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e9f2b29; op2val:0xc00cb440; op3val:0x7f2ef75a; valaddr_reg:x16; val_offset:1248; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1248, x17, x15, 832, x18)

inst_105:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f2b29 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0cb440 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2ef75a and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e9f2b29; op2val:0xc00cb440; op3val:0x7f2ef75a; valaddr_reg:x16; val_offset:1260; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1260, x17, x15, 840, x18)

inst_106:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7cb9b3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x263804 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2417b7 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e7cb9b3; op2val:0xc0263804; op3val:0x7f2417b7; valaddr_reg:x16; val_offset:1272; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1272, x17, x15, 848, x18)

inst_107:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7cb9b3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x263804 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2417b7 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e7cb9b3; op2val:0xc0263804; op3val:0x7f2417b7; valaddr_reg:x16; val_offset:1284; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1284, x17, x15, 856, x18)

inst_108:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7cb9b3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x263804 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2417b7 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e7cb9b3; op2val:0xc0263804; op3val:0x7f2417b7; valaddr_reg:x16; val_offset:1296; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1296, x17, x15, 864, x18)

inst_109:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7cb9b3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x263804 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2417b7 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e7cb9b3; op2val:0xc0263804; op3val:0x7f2417b7; valaddr_reg:x16; val_offset:1308; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1308, x17, x15, 872, x18)

inst_110:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7cb9b3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x263804 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2417b7 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e7cb9b3; op2val:0xc0263804; op3val:0x7f2417b7; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 880, x18)

inst_111:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x07b7d1 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x132367 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1c02a4 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7c07b7d1; op2val:0xc2932367; op3val:0x7f1c02a4; valaddr_reg:x16; val_offset:1332; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1332, x17, x15, 888, x18)

inst_112:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x07b7d1 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x132367 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1c02a4 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7c07b7d1; op2val:0xc2932367; op3val:0x7f1c02a4; valaddr_reg:x16; val_offset:1344; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1344, x17, x15, 896, x18)

inst_113:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x07b7d1 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x132367 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1c02a4 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7c07b7d1; op2val:0xc2932367; op3val:0x7f1c02a4; valaddr_reg:x16; val_offset:1356; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1356, x17, x15, 904, x18)

inst_114:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x07b7d1 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x132367 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1c02a4 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7c07b7d1; op2val:0xc2932367; op3val:0x7f1c02a4; valaddr_reg:x16; val_offset:1368; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1368, x17, x15, 912, x18)

inst_115:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x07b7d1 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x132367 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1c02a4 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7c07b7d1; op2val:0xc2932367; op3val:0x7f1c02a4; valaddr_reg:x16; val_offset:1380; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1380, x17, x15, 920, x18)

inst_116:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d24f8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0e6154 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x75fd2b and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7edd24f8; op2val:0xbf8e6154; op3val:0x7ef5fd2b; valaddr_reg:x16; val_offset:1392; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1392, x17, x15, 928, x18)

inst_117:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d24f8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0e6154 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x75fd2b and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7edd24f8; op2val:0xbf8e6154; op3val:0x7ef5fd2b; valaddr_reg:x16; val_offset:1404; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1404, x17, x15, 936, x18)

inst_118:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d24f8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0e6154 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x75fd2b and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7edd24f8; op2val:0xbf8e6154; op3val:0x7ef5fd2b; valaddr_reg:x16; val_offset:1416; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1416, x17, x15, 944, x18)

inst_119:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d24f8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0e6154 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x75fd2b and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7edd24f8; op2val:0xbf8e6154; op3val:0x7ef5fd2b; valaddr_reg:x16; val_offset:1428; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1428, x17, x15, 952, x18)

inst_120:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d24f8 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0e6154 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x75fd2b and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7edd24f8; op2val:0xbf8e6154; op3val:0x7ef5fd2b; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 960, x18)

inst_121:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d53bc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0043ea and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0d9eb9 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0d53bc; op2val:0xbf8043ea; op3val:0x7f0d9eb9; valaddr_reg:x16; val_offset:1452; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1452, x17, x15, 968, x18)

inst_122:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d53bc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0043ea and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0d9eb9 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0d53bc; op2val:0xbf8043ea; op3val:0x7f0d9eb9; valaddr_reg:x16; val_offset:1464; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1464, x17, x15, 976, x18)

inst_123:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d53bc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0043ea and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0d9eb9 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0d53bc; op2val:0xbf8043ea; op3val:0x7f0d9eb9; valaddr_reg:x16; val_offset:1476; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1476, x17, x15, 984, x18)

inst_124:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d53bc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0043ea and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0d9eb9 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0d53bc; op2val:0xbf8043ea; op3val:0x7f0d9eb9; valaddr_reg:x16; val_offset:1488; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1488, x17, x15, 992, x18)

inst_125:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d53bc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0043ea and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0d9eb9 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0d53bc; op2val:0xbf8043ea; op3val:0x7f0d9eb9; valaddr_reg:x16; val_offset:1500; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1500, x17, x15, 1000, x18)

inst_126:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x716164 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x46f058 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3b93f2 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e716164; op2val:0xc046f058; op3val:0x7f3b93f2; valaddr_reg:x16; val_offset:1512; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1512, x17, x15, 1008, x18)

inst_127:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x716164 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x46f058 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3b93f2 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e716164; op2val:0xc046f058; op3val:0x7f3b93f2; valaddr_reg:x16; val_offset:1524; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1524, x17, x15, 1016, x18)

inst_128:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x716164 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x46f058 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3b93f2 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e716164; op2val:0xc046f058; op3val:0x7f3b93f2; valaddr_reg:x16; val_offset:1536; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1536, x17, x15, 1024, x18)

inst_129:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x716164 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x46f058 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3b93f2 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e716164; op2val:0xc046f058; op3val:0x7f3b93f2; valaddr_reg:x16; val_offset:1548; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1548, x17, x15, 1032, x18)

inst_130:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x716164 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x46f058 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3b93f2 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e716164; op2val:0xc046f058; op3val:0x7f3b93f2; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1040, x18)

inst_131:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x09f4cb and fs2 == 1 and fe2 == 0x7d and fm2 == 0x16f1ff and fs3 == 0 and fe3 == 0xfc and fm3 == 0x22afb1 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f09f4cb; op2val:0xbe96f1ff; op3val:0x7e22afb1; valaddr_reg:x16; val_offset:1572; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1572, x17, x15, 1048, x18)

inst_132:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x09f4cb and fs2 == 1 and fe2 == 0x7d and fm2 == 0x16f1ff and fs3 == 0 and fe3 == 0xfc and fm3 == 0x22afb1 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f09f4cb; op2val:0xbe96f1ff; op3val:0x7e22afb1; valaddr_reg:x16; val_offset:1584; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1584, x17, x15, 1056, x18)

inst_133:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x09f4cb and fs2 == 1 and fe2 == 0x7d and fm2 == 0x16f1ff and fs3 == 0 and fe3 == 0xfc and fm3 == 0x22afb1 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f09f4cb; op2val:0xbe96f1ff; op3val:0x7e22afb1; valaddr_reg:x16; val_offset:1596; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1596, x17, x15, 1064, x18)

inst_134:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x09f4cb and fs2 == 1 and fe2 == 0x7d and fm2 == 0x16f1ff and fs3 == 0 and fe3 == 0xfc and fm3 == 0x22afb1 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f09f4cb; op2val:0xbe96f1ff; op3val:0x7e22afb1; valaddr_reg:x16; val_offset:1608; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1608, x17, x15, 1072, x18)

inst_135:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x09f4cb and fs2 == 1 and fe2 == 0x7d and fm2 == 0x16f1ff and fs3 == 0 and fe3 == 0xfc and fm3 == 0x22afb1 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f09f4cb; op2val:0xbe96f1ff; op3val:0x7e22afb1; valaddr_reg:x16; val_offset:1620; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1620, x17, x15, 1080, x18)

inst_136:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x31abfa and fs2 == 1 and fe2 == 0x7d and fm2 == 0x21f85f and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x60d312 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7db1abfa; op2val:0xbea1f85f; op3val:0x7ce0d312; valaddr_reg:x16; val_offset:1632; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1632, x17, x15, 1088, x18)

inst_137:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x31abfa and fs2 == 1 and fe2 == 0x7d and fm2 == 0x21f85f and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x60d312 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7db1abfa; op2val:0xbea1f85f; op3val:0x7ce0d312; valaddr_reg:x16; val_offset:1644; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1644, x17, x15, 1096, x18)

inst_138:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x31abfa and fs2 == 1 and fe2 == 0x7d and fm2 == 0x21f85f and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x60d312 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7db1abfa; op2val:0xbea1f85f; op3val:0x7ce0d312; valaddr_reg:x16; val_offset:1656; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1656, x17, x15, 1104, x18)

inst_139:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x31abfa and fs2 == 1 and fe2 == 0x7d and fm2 == 0x21f85f and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x60d312 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7db1abfa; op2val:0xbea1f85f; op3val:0x7ce0d312; valaddr_reg:x16; val_offset:1668; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1668, x17, x15, 1112, x18)

inst_140:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x31abfa and fs2 == 1 and fe2 == 0x7d and fm2 == 0x21f85f and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x60d312 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7db1abfa; op2val:0xbea1f85f; op3val:0x7ce0d312; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1120, x18)

inst_141:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x29472d and fs2 == 1 and fe2 == 0x7c and fm2 == 0x65286c and fs3 == 0 and fe3 == 0xfc and fm3 == 0x178766 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f29472d; op2val:0xbe65286c; op3val:0x7e178766; valaddr_reg:x16; val_offset:1692; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1692, x17, x15, 1128, x18)

inst_142:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x29472d and fs2 == 1 and fe2 == 0x7c and fm2 == 0x65286c and fs3 == 0 and fe3 == 0xfc and fm3 == 0x178766 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f29472d; op2val:0xbe65286c; op3val:0x7e178766; valaddr_reg:x16; val_offset:1704; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1704, x17, x15, 1136, x18)

inst_143:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x29472d and fs2 == 1 and fe2 == 0x7c and fm2 == 0x65286c and fs3 == 0 and fe3 == 0xfc and fm3 == 0x178766 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f29472d; op2val:0xbe65286c; op3val:0x7e178766; valaddr_reg:x16; val_offset:1716; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1716, x17, x15, 1144, x18)

inst_144:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x29472d and fs2 == 1 and fe2 == 0x7c and fm2 == 0x65286c and fs3 == 0 and fe3 == 0xfc and fm3 == 0x178766 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f29472d; op2val:0xbe65286c; op3val:0x7e178766; valaddr_reg:x16; val_offset:1728; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1728, x17, x15, 1152, x18)

inst_145:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x29472d and fs2 == 1 and fe2 == 0x7c and fm2 == 0x65286c and fs3 == 0 and fe3 == 0xfc and fm3 == 0x178766 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f29472d; op2val:0xbe65286c; op3val:0x7e178766; valaddr_reg:x16; val_offset:1740; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1740, x17, x15, 1160, x18)

inst_146:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x743c57 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x4c0046 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x42a058 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef43c57; op2val:0xbecc0046; op3val:0x7e42a058; valaddr_reg:x16; val_offset:1752; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1752, x17, x15, 1168, x18)

inst_147:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x743c57 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x4c0046 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x42a058 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef43c57; op2val:0xbecc0046; op3val:0x7e42a058; valaddr_reg:x16; val_offset:1764; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1764, x17, x15, 1176, x18)

inst_148:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x743c57 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x4c0046 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x42a058 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef43c57; op2val:0xbecc0046; op3val:0x7e42a058; valaddr_reg:x16; val_offset:1776; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1776, x17, x15, 1184, x18)

inst_149:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x743c57 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x4c0046 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x42a058 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef43c57; op2val:0xbecc0046; op3val:0x7e42a058; valaddr_reg:x16; val_offset:1788; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1788, x17, x15, 1192, x18)

inst_150:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x743c57 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x4c0046 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x42a058 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef43c57; op2val:0xbecc0046; op3val:0x7e42a058; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1200, x18)

inst_151:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11bea7 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x12ceae and fs3 == 0 and fe3 == 0xfc and fm3 == 0x2728cd and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f11bea7; op2val:0xbe92ceae; op3val:0x7e2728cd; valaddr_reg:x16; val_offset:1812; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1812, x17, x15, 1208, x18)

inst_152:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11bea7 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x12ceae and fs3 == 0 and fe3 == 0xfc and fm3 == 0x2728cd and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f11bea7; op2val:0xbe92ceae; op3val:0x7e2728cd; valaddr_reg:x16; val_offset:1824; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1824, x17, x15, 1216, x18)

inst_153:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11bea7 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x12ceae and fs3 == 0 and fe3 == 0xfc and fm3 == 0x2728cd and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f11bea7; op2val:0xbe92ceae; op3val:0x7e2728cd; valaddr_reg:x16; val_offset:1836; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1836, x17, x15, 1224, x18)

inst_154:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11bea7 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x12ceae and fs3 == 0 and fe3 == 0xfc and fm3 == 0x2728cd and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f11bea7; op2val:0xbe92ceae; op3val:0x7e2728cd; valaddr_reg:x16; val_offset:1848; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1848, x17, x15, 1232, x18)

inst_155:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11bea7 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x12ceae and fs3 == 0 and fe3 == 0xfc and fm3 == 0x2728cd and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f11bea7; op2val:0xbe92ceae; op3val:0x7e2728cd; valaddr_reg:x16; val_offset:1860; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1860, x17, x15, 1240, x18)

inst_156:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x07ec62 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0f6574 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1845d2 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d87ec62; op2val:0xc10f6574; op3val:0x7f1845d2; valaddr_reg:x16; val_offset:1872; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1872, x17, x15, 1248, x18)

inst_157:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x07ec62 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0f6574 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1845d2 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d87ec62; op2val:0xc10f6574; op3val:0x7f1845d2; valaddr_reg:x16; val_offset:1884; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1884, x17, x15, 1256, x18)

inst_158:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x07ec62 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0f6574 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1845d2 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d87ec62; op2val:0xc10f6574; op3val:0x7f1845d2; valaddr_reg:x16; val_offset:1896; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1896, x17, x15, 1264, x18)

inst_159:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x07ec62 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0f6574 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1845d2 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d87ec62; op2val:0xc10f6574; op3val:0x7f1845d2; valaddr_reg:x16; val_offset:1908; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1908, x17, x15, 1272, x18)

inst_160:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x07ec62 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x0f6574 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1845d2 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d87ec62; op2val:0xc10f6574; op3val:0x7f1845d2; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1280, x18)

inst_161:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x606a5f and fs2 == 1 and fe2 == 0x81 and fm2 == 0x344e7e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1e0f9a and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7de06a5f; op2val:0xc0b44e7e; op3val:0x7f1e0f9a; valaddr_reg:x16; val_offset:1932; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1932, x17, x15, 1288, x18)

inst_162:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x606a5f and fs2 == 1 and fe2 == 0x81 and fm2 == 0x344e7e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1e0f9a and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7de06a5f; op2val:0xc0b44e7e; op3val:0x7f1e0f9a; valaddr_reg:x16; val_offset:1944; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1944, x17, x15, 1296, x18)

inst_163:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x606a5f and fs2 == 1 and fe2 == 0x81 and fm2 == 0x344e7e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1e0f9a and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7de06a5f; op2val:0xc0b44e7e; op3val:0x7f1e0f9a; valaddr_reg:x16; val_offset:1956; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1956, x17, x15, 1304, x18)

inst_164:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x606a5f and fs2 == 1 and fe2 == 0x81 and fm2 == 0x344e7e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1e0f9a and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7de06a5f; op2val:0xc0b44e7e; op3val:0x7f1e0f9a; valaddr_reg:x16; val_offset:1968; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1968, x17, x15, 1312, x18)

inst_165:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x606a5f and fs2 == 1 and fe2 == 0x81 and fm2 == 0x344e7e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1e0f9a and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7de06a5f; op2val:0xc0b44e7e; op3val:0x7f1e0f9a; valaddr_reg:x16; val_offset:1980; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1980, x17, x15, 1320, x18)

inst_166:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x083174 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x7ace38 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x056e01 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f083174; op2val:0xbe7ace38; op3val:0x7e056e01; valaddr_reg:x16; val_offset:1992; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1992, x17, x15, 1328, x18)

inst_167:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x083174 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x7ace38 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x056e01 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f083174; op2val:0xbe7ace38; op3val:0x7e056e01; valaddr_reg:x16; val_offset:2004; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 2004, x17, x15, 1336, x18)

inst_168:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x083174 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x7ace38 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x056e01 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f083174; op2val:0xbe7ace38; op3val:0x7e056e01; valaddr_reg:x16; val_offset:2016; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 2016, x17, x15, 1344, x18)

inst_169:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x083174 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x7ace38 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x056e01 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f083174; op2val:0xbe7ace38; op3val:0x7e056e01; valaddr_reg:x16; val_offset:2028; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 2028, x17, x15, 1352, x18)
addi x16,x16,2040

inst_170:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x083174 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x7ace38 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x056e01 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f083174; op2val:0xbe7ace38; op3val:0x7e056e01; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 1360, x18)

inst_171:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x134fd6 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x366346 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x51e7c5 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e934fd6; op2val:0xbfb66346; op3val:0x7ed1e7c5; valaddr_reg:x16; val_offset:12; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 12, x17, x15, 1368, x18)

inst_172:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x134fd6 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x366346 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x51e7c5 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e934fd6; op2val:0xbfb66346; op3val:0x7ed1e7c5; valaddr_reg:x16; val_offset:24; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 24, x17, x15, 1376, x18)

inst_173:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x134fd6 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x366346 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x51e7c5 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e934fd6; op2val:0xbfb66346; op3val:0x7ed1e7c5; valaddr_reg:x16; val_offset:36; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 36, x17, x15, 1384, x18)

inst_174:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x134fd6 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x366346 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x51e7c5 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e934fd6; op2val:0xbfb66346; op3val:0x7ed1e7c5; valaddr_reg:x16; val_offset:48; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 48, x17, x15, 1392, x18)

inst_175:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x134fd6 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x366346 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x51e7c5 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e934fd6; op2val:0xbfb66346; op3val:0x7ed1e7c5; valaddr_reg:x16; val_offset:60; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 60, x17, x15, 1400, x18)

inst_176:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2f4548 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x03d01a and fs3 == 0 and fe3 == 0xfd and fm3 == 0x347ddd and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eaf4548; op2val:0xbf83d01a; op3val:0x7eb47ddd; valaddr_reg:x16; val_offset:72; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 72, x17, x15, 1408, x18)

inst_177:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2f4548 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x03d01a and fs3 == 0 and fe3 == 0xfd and fm3 == 0x347ddd and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eaf4548; op2val:0xbf83d01a; op3val:0x7eb47ddd; valaddr_reg:x16; val_offset:84; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 84, x17, x15, 1416, x18)

inst_178:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2f4548 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x03d01a and fs3 == 0 and fe3 == 0xfd and fm3 == 0x347ddd and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eaf4548; op2val:0xbf83d01a; op3val:0x7eb47ddd; valaddr_reg:x16; val_offset:96; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 96, x17, x15, 1424, x18)

inst_179:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2f4548 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x03d01a and fs3 == 0 and fe3 == 0xfd and fm3 == 0x347ddd and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eaf4548; op2val:0xbf83d01a; op3val:0x7eb47ddd; valaddr_reg:x16; val_offset:108; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 108, x17, x15, 1432, x18)

inst_180:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2f4548 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x03d01a and fs3 == 0 and fe3 == 0xfd and fm3 == 0x347ddd and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eaf4548; op2val:0xbf83d01a; op3val:0x7eb47ddd; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 1440, x18)

inst_181:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0ac422 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x54b01c and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6693c5 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8ac422; op2val:0xbfd4b01c; op3val:0x7ee693c5; valaddr_reg:x16; val_offset:132; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 132, x17, x15, 1448, x18)

inst_182:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0ac422 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x54b01c and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6693c5 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8ac422; op2val:0xbfd4b01c; op3val:0x7ee693c5; valaddr_reg:x16; val_offset:144; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 144, x17, x15, 1456, x18)

inst_183:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0ac422 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x54b01c and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6693c5 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8ac422; op2val:0xbfd4b01c; op3val:0x7ee693c5; valaddr_reg:x16; val_offset:156; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 156, x17, x15, 1464, x18)

inst_184:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0ac422 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x54b01c and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6693c5 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8ac422; op2val:0xbfd4b01c; op3val:0x7ee693c5; valaddr_reg:x16; val_offset:168; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 168, x17, x15, 1472, x18)

inst_185:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0ac422 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x54b01c and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6693c5 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8ac422; op2val:0xbfd4b01c; op3val:0x7ee693c5; valaddr_reg:x16; val_offset:180; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 180, x17, x15, 1480, x18)

inst_186:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5e1a0d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2300f3 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0d6b6a and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ede1a0d; op2val:0xbfa300f3; op3val:0x7f0d6b6a; valaddr_reg:x16; val_offset:192; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 192, x17, x15, 1488, x18)

inst_187:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5e1a0d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2300f3 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0d6b6a and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ede1a0d; op2val:0xbfa300f3; op3val:0x7f0d6b6a; valaddr_reg:x16; val_offset:204; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 204, x17, x15, 1496, x18)

inst_188:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5e1a0d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2300f3 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0d6b6a and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ede1a0d; op2val:0xbfa300f3; op3val:0x7f0d6b6a; valaddr_reg:x16; val_offset:216; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 216, x17, x15, 1504, x18)

inst_189:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5e1a0d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2300f3 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0d6b6a and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ede1a0d; op2val:0xbfa300f3; op3val:0x7f0d6b6a; valaddr_reg:x16; val_offset:228; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 228, x17, x15, 1512, x18)

inst_190:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5e1a0d and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2300f3 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0d6b6a and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ede1a0d; op2val:0xbfa300f3; op3val:0x7f0d6b6a; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 1520, x18)

inst_191:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7b1520 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0584ae and fs3 == 0 and fe3 == 0xfd and fm3 == 0x02f41c and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7efb1520; op2val:0xbf0584ae; op3val:0x7e82f41c; valaddr_reg:x16; val_offset:252; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 252, x17, x15, 1528, x18)

inst_192:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7b1520 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0584ae and fs3 == 0 and fe3 == 0xfd and fm3 == 0x02f41c and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7efb1520; op2val:0xbf0584ae; op3val:0x7e82f41c; valaddr_reg:x16; val_offset:264; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 264, x17, x15, 1536, x18)

inst_193:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7b1520 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0584ae and fs3 == 0 and fe3 == 0xfd and fm3 == 0x02f41c and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7efb1520; op2val:0xbf0584ae; op3val:0x7e82f41c; valaddr_reg:x16; val_offset:276; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 276, x17, x15, 1544, x18)

inst_194:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7b1520 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0584ae and fs3 == 0 and fe3 == 0xfd and fm3 == 0x02f41c and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7efb1520; op2val:0xbf0584ae; op3val:0x7e82f41c; valaddr_reg:x16; val_offset:288; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 288, x17, x15, 1552, x18)

inst_195:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7b1520 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0584ae and fs3 == 0 and fe3 == 0xfd and fm3 == 0x02f41c and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7efb1520; op2val:0xbf0584ae; op3val:0x7e82f41c; valaddr_reg:x16; val_offset:300; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 300, x17, x15, 1560, x18)

inst_196:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x719d36 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4b1faf and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3fb592 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef19d36; op2val:0xbf4b1faf; op3val:0x7ebfb592; valaddr_reg:x16; val_offset:312; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 312, x17, x15, 1568, x18)

inst_197:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x719d36 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4b1faf and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3fb592 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef19d36; op2val:0xbf4b1faf; op3val:0x7ebfb592; valaddr_reg:x16; val_offset:324; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 324, x17, x15, 1576, x18)

inst_198:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x719d36 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4b1faf and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3fb592 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef19d36; op2val:0xbf4b1faf; op3val:0x7ebfb592; valaddr_reg:x16; val_offset:336; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 336, x17, x15, 1584, x18)

inst_199:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x719d36 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4b1faf and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3fb592 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef19d36; op2val:0xbf4b1faf; op3val:0x7ebfb592; valaddr_reg:x16; val_offset:348; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 348, x17, x15, 1592, x18)

inst_200:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x719d36 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4b1faf and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3fb592 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef19d36; op2val:0xbf4b1faf; op3val:0x7ebfb592; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 1600, x18)

inst_201:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2522c3 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x05162a and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2bb2b6 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2522c3; op2val:0xbf05162a; op3val:0x7eabb2b6; valaddr_reg:x16; val_offset:372; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 372, x17, x15, 1608, x18)

inst_202:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2522c3 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x05162a and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2bb2b6 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2522c3; op2val:0xbf05162a; op3val:0x7eabb2b6; valaddr_reg:x16; val_offset:384; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 384, x17, x15, 1616, x18)

inst_203:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2522c3 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x05162a and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2bb2b6 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2522c3; op2val:0xbf05162a; op3val:0x7eabb2b6; valaddr_reg:x16; val_offset:396; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 396, x17, x15, 1624, x18)

inst_204:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2522c3 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x05162a and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2bb2b6 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2522c3; op2val:0xbf05162a; op3val:0x7eabb2b6; valaddr_reg:x16; val_offset:408; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 408, x17, x15, 1632, x18)

inst_205:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2522c3 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x05162a and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2bb2b6 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2522c3; op2val:0xbf05162a; op3val:0x7eabb2b6; valaddr_reg:x16; val_offset:420; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 420, x17, x15, 1640, x18)

inst_206:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x218e29 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x3034b9 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5e6605 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f218e29; op2val:0xbeb034b9; op3val:0x7e5e6605; valaddr_reg:x16; val_offset:432; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 432, x17, x15, 1648, x18)

inst_207:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x218e29 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x3034b9 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5e6605 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f218e29; op2val:0xbeb034b9; op3val:0x7e5e6605; valaddr_reg:x16; val_offset:444; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 444, x17, x15, 1656, x18)

inst_208:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x218e29 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x3034b9 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5e6605 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f218e29; op2val:0xbeb034b9; op3val:0x7e5e6605; valaddr_reg:x16; val_offset:456; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 456, x17, x15, 1664, x18)

inst_209:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x218e29 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x3034b9 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5e6605 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f218e29; op2val:0xbeb034b9; op3val:0x7e5e6605; valaddr_reg:x16; val_offset:468; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 468, x17, x15, 1672, x18)

inst_210:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x218e29 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x3034b9 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5e6605 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f218e29; op2val:0xbeb034b9; op3val:0x7e5e6605; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1680, x18)

inst_211:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x604709 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x649fbb and fs3 == 0 and fe3 == 0xfc and fm3 == 0x484b34 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee04709; op2val:0xbee49fbb; op3val:0x7e484b34; valaddr_reg:x16; val_offset:492; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 492, x17, x15, 1688, x18)

inst_212:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x604709 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x649fbb and fs3 == 0 and fe3 == 0xfc and fm3 == 0x484b34 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee04709; op2val:0xbee49fbb; op3val:0x7e484b34; valaddr_reg:x16; val_offset:504; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 504, x17, x15, 1696, x18)

inst_213:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x604709 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x649fbb and fs3 == 0 and fe3 == 0xfc and fm3 == 0x484b34 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee04709; op2val:0xbee49fbb; op3val:0x7e484b34; valaddr_reg:x16; val_offset:516; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 516, x17, x15, 1704, x18)

inst_214:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x604709 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x649fbb and fs3 == 0 and fe3 == 0xfc and fm3 == 0x484b34 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee04709; op2val:0xbee49fbb; op3val:0x7e484b34; valaddr_reg:x16; val_offset:528; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 528, x17, x15, 1712, x18)

inst_215:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x604709 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x649fbb and fs3 == 0 and fe3 == 0xfc and fm3 == 0x484b34 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee04709; op2val:0xbee49fbb; op3val:0x7e484b34; valaddr_reg:x16; val_offset:540; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 540, x17, x15, 1720, x18)

inst_216:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1660d9 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x72578d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0e5afb and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1660d9; op2val:0xbf72578d; op3val:0x7f0e5afb; valaddr_reg:x16; val_offset:552; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 552, x17, x15, 1728, x18)

inst_217:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1660d9 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x72578d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0e5afb and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1660d9; op2val:0xbf72578d; op3val:0x7f0e5afb; valaddr_reg:x16; val_offset:564; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 564, x17, x15, 1736, x18)

inst_218:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1660d9 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x72578d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0e5afb and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1660d9; op2val:0xbf72578d; op3val:0x7f0e5afb; valaddr_reg:x16; val_offset:576; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 576, x17, x15, 1744, x18)

inst_219:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1660d9 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x72578d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0e5afb and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1660d9; op2val:0xbf72578d; op3val:0x7f0e5afb; valaddr_reg:x16; val_offset:588; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 588, x17, x15, 1752, x18)

inst_220:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1660d9 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x72578d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0e5afb and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1660d9; op2val:0xbf72578d; op3val:0x7f0e5afb; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1760, x18)

inst_221:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78760e and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1b7994 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x16e57a and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef8760e; op2val:0xbf9b7994; op3val:0x7f16e57a; valaddr_reg:x16; val_offset:612; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 612, x17, x15, 1768, x18)

inst_222:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78760e and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1b7994 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x16e57a and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef8760e; op2val:0xbf9b7994; op3val:0x7f16e57a; valaddr_reg:x16; val_offset:624; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 624, x17, x15, 1776, x18)

inst_223:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78760e and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1b7994 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x16e57a and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef8760e; op2val:0xbf9b7994; op3val:0x7f16e57a; valaddr_reg:x16; val_offset:636; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 636, x17, x15, 1784, x18)

inst_224:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78760e and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1b7994 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x16e57a and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef8760e; op2val:0xbf9b7994; op3val:0x7f16e57a; valaddr_reg:x16; val_offset:648; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 648, x17, x15, 1792, x18)

inst_225:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78760e and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1b7994 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x16e57a and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef8760e; op2val:0xbf9b7994; op3val:0x7f16e57a; valaddr_reg:x16; val_offset:660; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 660, x17, x15, 1800, x18)

inst_226:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x579d68 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x09912b and fs3 == 0 and fe3 == 0xfc and fm3 == 0x67bb04 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ed79d68; op2val:0xbf09912b; op3val:0x7e67bb04; valaddr_reg:x16; val_offset:672; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 672, x17, x15, 1808, x18)

inst_227:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x579d68 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x09912b and fs3 == 0 and fe3 == 0xfc and fm3 == 0x67bb04 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ed79d68; op2val:0xbf09912b; op3val:0x7e67bb04; valaddr_reg:x16; val_offset:684; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 684, x17, x15, 1816, x18)

inst_228:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x579d68 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x09912b and fs3 == 0 and fe3 == 0xfc and fm3 == 0x67bb04 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ed79d68; op2val:0xbf09912b; op3val:0x7e67bb04; valaddr_reg:x16; val_offset:696; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 696, x17, x15, 1824, x18)

inst_229:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x579d68 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x09912b and fs3 == 0 and fe3 == 0xfc and fm3 == 0x67bb04 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ed79d68; op2val:0xbf09912b; op3val:0x7e67bb04; valaddr_reg:x16; val_offset:708; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 708, x17, x15, 1832, x18)

inst_230:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x579d68 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x09912b and fs3 == 0 and fe3 == 0xfc and fm3 == 0x67bb04 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ed79d68; op2val:0xbf09912b; op3val:0x7e67bb04; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1840, x18)

inst_231:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a6e21 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x021aed and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0cb4f9 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8a6e21; op2val:0xbf821aed; op3val:0x7e8cb4f9; valaddr_reg:x16; val_offset:732; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 732, x17, x15, 1848, x18)

inst_232:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a6e21 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x021aed and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0cb4f9 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8a6e21; op2val:0xbf821aed; op3val:0x7e8cb4f9; valaddr_reg:x16; val_offset:744; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 744, x17, x15, 1856, x18)

inst_233:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a6e21 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x021aed and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0cb4f9 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8a6e21; op2val:0xbf821aed; op3val:0x7e8cb4f9; valaddr_reg:x16; val_offset:756; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 756, x17, x15, 1864, x18)

inst_234:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a6e21 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x021aed and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0cb4f9 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8a6e21; op2val:0xbf821aed; op3val:0x7e8cb4f9; valaddr_reg:x16; val_offset:768; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 768, x17, x15, 1872, x18)

inst_235:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a6e21 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x021aed and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0cb4f9 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8a6e21; op2val:0xbf821aed; op3val:0x7e8cb4f9; valaddr_reg:x16; val_offset:780; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 780, x17, x15, 1880, x18)

inst_236:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x476175 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x656195 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x32a62e and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7cc76175; op2val:0xc0e56195; op3val:0x7e32a62e; valaddr_reg:x16; val_offset:792; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 792, x17, x15, 1888, x18)

inst_237:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x476175 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x656195 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x32a62e and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7cc76175; op2val:0xc0e56195; op3val:0x7e32a62e; valaddr_reg:x16; val_offset:804; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 804, x17, x15, 1896, x18)

inst_238:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x476175 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x656195 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x32a62e and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7cc76175; op2val:0xc0e56195; op3val:0x7e32a62e; valaddr_reg:x16; val_offset:816; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 816, x17, x15, 1904, x18)

inst_239:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x476175 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x656195 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x32a62e and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7cc76175; op2val:0xc0e56195; op3val:0x7e32a62e; valaddr_reg:x16; val_offset:828; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 828, x17, x15, 1912, x18)

inst_240:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x476175 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x656195 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x32a62e and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7cc76175; op2val:0xc0e56195; op3val:0x7e32a62e; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1920, x18)

inst_241:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2afdd1 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x3404d4 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x707b62 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2afdd1; op2val:0xbeb404d4; op3val:0x7e707b62; valaddr_reg:x16; val_offset:852; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 852, x17, x15, 1928, x18)

inst_242:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2afdd1 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x3404d4 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x707b62 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2afdd1; op2val:0xbeb404d4; op3val:0x7e707b62; valaddr_reg:x16; val_offset:864; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 864, x17, x15, 1936, x18)

inst_243:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2afdd1 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x3404d4 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x707b62 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2afdd1; op2val:0xbeb404d4; op3val:0x7e707b62; valaddr_reg:x16; val_offset:876; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 876, x17, x15, 1944, x18)

inst_244:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2afdd1 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x3404d4 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x707b62 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2afdd1; op2val:0xbeb404d4; op3val:0x7e707b62; valaddr_reg:x16; val_offset:888; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 888, x17, x15, 1952, x18)

inst_245:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2afdd1 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x3404d4 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x707b62 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2afdd1; op2val:0xbeb404d4; op3val:0x7e707b62; valaddr_reg:x16; val_offset:900; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 900, x17, x15, 1960, x18)

inst_246:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x581c21 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2176e1 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x084e0c and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7dd81c21; op2val:0xc0a176e1; op3val:0x7f084e0c; valaddr_reg:x16; val_offset:912; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 912, x17, x15, 1968, x18)

inst_247:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x581c21 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2176e1 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x084e0c and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7dd81c21; op2val:0xc0a176e1; op3val:0x7f084e0c; valaddr_reg:x16; val_offset:924; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 924, x17, x15, 1976, x18)

inst_248:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x581c21 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2176e1 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x084e0c and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7dd81c21; op2val:0xc0a176e1; op3val:0x7f084e0c; valaddr_reg:x16; val_offset:936; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 936, x17, x15, 1984, x18)

inst_249:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x581c21 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2176e1 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x084e0c and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7dd81c21; op2val:0xc0a176e1; op3val:0x7f084e0c; valaddr_reg:x16; val_offset:948; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 948, x17, x15, 1992, x18)

inst_250:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x581c21 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2176e1 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x084e0c and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7dd81c21; op2val:0xc0a176e1; op3val:0x7f084e0c; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 2000, x18)

inst_251:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x716a4d and fs2 == 1 and fe2 == 0x7a and fm2 == 0x7b5d15 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x6d0b02 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef16a4d; op2val:0xbd7b5d15; op3val:0x7ced0b02; valaddr_reg:x16; val_offset:972; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 972, x17, x15, 2008, x18)

inst_252:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x716a4d and fs2 == 1 and fe2 == 0x7a and fm2 == 0x7b5d15 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x6d0b02 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef16a4d; op2val:0xbd7b5d15; op3val:0x7ced0b02; valaddr_reg:x16; val_offset:984; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 984, x17, x15, 2016, x18)

inst_253:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x716a4d and fs2 == 1 and fe2 == 0x7a and fm2 == 0x7b5d15 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x6d0b02 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef16a4d; op2val:0xbd7b5d15; op3val:0x7ced0b02; valaddr_reg:x16; val_offset:996; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 996, x17, x15, 2024, x18)
RVTEST_SIGBASE(x15,signature_x15_2)

inst_254:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x716a4d and fs2 == 1 and fe2 == 0x7a and fm2 == 0x7b5d15 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x6d0b02 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef16a4d; op2val:0xbd7b5d15; op3val:0x7ced0b02; valaddr_reg:x16; val_offset:1008; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1008, x17, x15, 0, x18)

inst_255:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x716a4d and fs2 == 1 and fe2 == 0x7a and fm2 == 0x7b5d15 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x6d0b02 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef16a4d; op2val:0xbd7b5d15; op3val:0x7ced0b02; valaddr_reg:x16; val_offset:1020; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1020, x17, x15, 8, x18)

inst_256:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b2767 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6d8ad3 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0ff79e and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1b2767; op2val:0xbeed8ad3; op3val:0x7e8ff79e; valaddr_reg:x16; val_offset:1032; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1032, x17, x15, 16, x18)

inst_257:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b2767 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6d8ad3 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0ff79e and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1b2767; op2val:0xbeed8ad3; op3val:0x7e8ff79e; valaddr_reg:x16; val_offset:1044; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1044, x17, x15, 24, x18)

inst_258:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b2767 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6d8ad3 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0ff79e and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1b2767; op2val:0xbeed8ad3; op3val:0x7e8ff79e; valaddr_reg:x16; val_offset:1056; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1056, x17, x15, 32, x18)

inst_259:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b2767 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6d8ad3 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0ff79e and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1b2767; op2val:0xbeed8ad3; op3val:0x7e8ff79e; valaddr_reg:x16; val_offset:1068; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1068, x17, x15, 40, x18)

inst_260:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b2767 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6d8ad3 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0ff79e and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1b2767; op2val:0xbeed8ad3; op3val:0x7e8ff79e; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 48, x18)

inst_261:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x04f86c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0969f0 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0ebff1 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e84f86c; op2val:0xbf8969f0; op3val:0x7e8ebff1; valaddr_reg:x16; val_offset:1092; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1092, x17, x15, 56, x18)

inst_262:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x04f86c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0969f0 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0ebff1 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e84f86c; op2val:0xbf8969f0; op3val:0x7e8ebff1; valaddr_reg:x16; val_offset:1104; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1104, x17, x15, 64, x18)

inst_263:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x04f86c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0969f0 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0ebff1 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e84f86c; op2val:0xbf8969f0; op3val:0x7e8ebff1; valaddr_reg:x16; val_offset:1116; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1116, x17, x15, 72, x18)

inst_264:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x04f86c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0969f0 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0ebff1 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e84f86c; op2val:0xbf8969f0; op3val:0x7e8ebff1; valaddr_reg:x16; val_offset:1128; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1128, x17, x15, 80, x18)

inst_265:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x04f86c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0969f0 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0ebff1 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e84f86c; op2val:0xbf8969f0; op3val:0x7e8ebff1; valaddr_reg:x16; val_offset:1140; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1140, x17, x15, 88, x18)

inst_266:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x35114f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x46436e and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0c3b14 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e35114f; op2val:0xbfc6436e; op3val:0x7e8c3b14; valaddr_reg:x16; val_offset:1152; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1152, x17, x15, 96, x18)

inst_267:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x35114f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x46436e and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0c3b14 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e35114f; op2val:0xbfc6436e; op3val:0x7e8c3b14; valaddr_reg:x16; val_offset:1164; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1164, x17, x15, 104, x18)

inst_268:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x35114f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x46436e and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0c3b14 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e35114f; op2val:0xbfc6436e; op3val:0x7e8c3b14; valaddr_reg:x16; val_offset:1176; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1176, x17, x15, 112, x18)

inst_269:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x35114f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x46436e and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0c3b14 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e35114f; op2val:0xbfc6436e; op3val:0x7e8c3b14; valaddr_reg:x16; val_offset:1188; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1188, x17, x15, 120, x18)

inst_270:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x35114f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x46436e and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0c3b14 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e35114f; op2val:0xbfc6436e; op3val:0x7e8c3b14; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 128, x18)

inst_271:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x37099a and fs2 == 1 and fe2 == 0x7d and fm2 == 0x365417 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x025cf4 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb7099a; op2val:0xbeb65417; op3val:0x7e025cf4; valaddr_reg:x16; val_offset:1212; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1212, x17, x15, 136, x18)

inst_272:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x37099a and fs2 == 1 and fe2 == 0x7d and fm2 == 0x365417 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x025cf4 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb7099a; op2val:0xbeb65417; op3val:0x7e025cf4; valaddr_reg:x16; val_offset:1224; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1224, x17, x15, 144, x18)

inst_273:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x37099a and fs2 == 1 and fe2 == 0x7d and fm2 == 0x365417 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x025cf4 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb7099a; op2val:0xbeb65417; op3val:0x7e025cf4; valaddr_reg:x16; val_offset:1236; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1236, x17, x15, 152, x18)

inst_274:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x37099a and fs2 == 1 and fe2 == 0x7d and fm2 == 0x365417 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x025cf4 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb7099a; op2val:0xbeb65417; op3val:0x7e025cf4; valaddr_reg:x16; val_offset:1248; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1248, x17, x15, 160, x18)

inst_275:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x37099a and fs2 == 1 and fe2 == 0x7d and fm2 == 0x365417 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x025cf4 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb7099a; op2val:0xbeb65417; op3val:0x7e025cf4; valaddr_reg:x16; val_offset:1260; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1260, x17, x15, 168, x18)

inst_276:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x35c708 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2fcfdc and fs3 == 0 and fe3 == 0xfd and fm3 == 0x79ad4e and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f35c708; op2val:0xbf2fcfdc; op3val:0x7ef9ad4e; valaddr_reg:x16; val_offset:1272; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1272, x17, x15, 176, x18)

inst_277:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x35c708 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2fcfdc and fs3 == 0 and fe3 == 0xfd and fm3 == 0x79ad4e and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f35c708; op2val:0xbf2fcfdc; op3val:0x7ef9ad4e; valaddr_reg:x16; val_offset:1284; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1284, x17, x15, 184, x18)

inst_278:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x35c708 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2fcfdc and fs3 == 0 and fe3 == 0xfd and fm3 == 0x79ad4e and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f35c708; op2val:0xbf2fcfdc; op3val:0x7ef9ad4e; valaddr_reg:x16; val_offset:1296; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1296, x17, x15, 192, x18)

inst_279:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x35c708 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2fcfdc and fs3 == 0 and fe3 == 0xfd and fm3 == 0x79ad4e and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f35c708; op2val:0xbf2fcfdc; op3val:0x7ef9ad4e; valaddr_reg:x16; val_offset:1308; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1308, x17, x15, 200, x18)

inst_280:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x35c708 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2fcfdc and fs3 == 0 and fe3 == 0xfd and fm3 == 0x79ad4e and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f35c708; op2val:0xbf2fcfdc; op3val:0x7ef9ad4e; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 208, x18)

inst_281:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d4865 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x39ff7a and fs3 == 0 and fe3 == 0xfd and fm3 == 0x098636 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3d4865; op2val:0xbeb9ff7a; op3val:0x7e898636; valaddr_reg:x16; val_offset:1332; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1332, x17, x15, 216, x18)

inst_282:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d4865 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x39ff7a and fs3 == 0 and fe3 == 0xfd and fm3 == 0x098636 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3d4865; op2val:0xbeb9ff7a; op3val:0x7e898636; valaddr_reg:x16; val_offset:1344; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1344, x17, x15, 224, x18)

inst_283:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d4865 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x39ff7a and fs3 == 0 and fe3 == 0xfd and fm3 == 0x098636 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3d4865; op2val:0xbeb9ff7a; op3val:0x7e898636; valaddr_reg:x16; val_offset:1356; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1356, x17, x15, 232, x18)

inst_284:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d4865 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x39ff7a and fs3 == 0 and fe3 == 0xfd and fm3 == 0x098636 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3d4865; op2val:0xbeb9ff7a; op3val:0x7e898636; valaddr_reg:x16; val_offset:1368; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1368, x17, x15, 240, x18)

inst_285:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d4865 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x39ff7a and fs3 == 0 and fe3 == 0xfd and fm3 == 0x098636 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3d4865; op2val:0xbeb9ff7a; op3val:0x7e898636; valaddr_reg:x16; val_offset:1380; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1380, x17, x15, 248, x18)

inst_286:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x66e0be and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0ba42e and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7be033 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee6e0be; op2val:0xbf8ba42e; op3val:0x7efbe033; valaddr_reg:x16; val_offset:1392; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1392, x17, x15, 256, x18)

inst_287:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x66e0be and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0ba42e and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7be033 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee6e0be; op2val:0xbf8ba42e; op3val:0x7efbe033; valaddr_reg:x16; val_offset:1404; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1404, x17, x15, 264, x18)

inst_288:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x66e0be and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0ba42e and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7be033 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee6e0be; op2val:0xbf8ba42e; op3val:0x7efbe033; valaddr_reg:x16; val_offset:1416; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1416, x17, x15, 272, x18)

inst_289:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x66e0be and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0ba42e and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7be033 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee6e0be; op2val:0xbf8ba42e; op3val:0x7efbe033; valaddr_reg:x16; val_offset:1428; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1428, x17, x15, 280, x18)

inst_290:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x66e0be and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0ba42e and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7be033 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee6e0be; op2val:0xbf8ba42e; op3val:0x7efbe033; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 288, x18)

inst_291:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3fd2a7 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x225cdc and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x7351c5 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3fd2a7; op2val:0xbd225cdc; op3val:0x7cf351c5; valaddr_reg:x16; val_offset:1452; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1452, x17, x15, 296, x18)

inst_292:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3fd2a7 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x225cdc and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x7351c5 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3fd2a7; op2val:0xbd225cdc; op3val:0x7cf351c5; valaddr_reg:x16; val_offset:1464; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1464, x17, x15, 304, x18)

inst_293:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3fd2a7 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x225cdc and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x7351c5 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3fd2a7; op2val:0xbd225cdc; op3val:0x7cf351c5; valaddr_reg:x16; val_offset:1476; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1476, x17, x15, 312, x18)

inst_294:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3fd2a7 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x225cdc and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x7351c5 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3fd2a7; op2val:0xbd225cdc; op3val:0x7cf351c5; valaddr_reg:x16; val_offset:1488; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1488, x17, x15, 320, x18)

inst_295:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3fd2a7 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x225cdc and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x7351c5 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3fd2a7; op2val:0xbd225cdc; op3val:0x7cf351c5; valaddr_reg:x16; val_offset:1500; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1500, x17, x15, 328, x18)

inst_296:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x394df5 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x6542ef and fs3 == 0 and fe3 == 0xfb and fm3 == 0x25f32f and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f394df5; op2val:0xbde542ef; op3val:0x7da5f32f; valaddr_reg:x16; val_offset:1512; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1512, x17, x15, 336, x18)

inst_297:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x394df5 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x6542ef and fs3 == 0 and fe3 == 0xfb and fm3 == 0x25f32f and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f394df5; op2val:0xbde542ef; op3val:0x7da5f32f; valaddr_reg:x16; val_offset:1524; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1524, x17, x15, 344, x18)

inst_298:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x394df5 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x6542ef and fs3 == 0 and fe3 == 0xfb and fm3 == 0x25f32f and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f394df5; op2val:0xbde542ef; op3val:0x7da5f32f; valaddr_reg:x16; val_offset:1536; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1536, x17, x15, 352, x18)

inst_299:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x394df5 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x6542ef and fs3 == 0 and fe3 == 0xfb and fm3 == 0x25f32f and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f394df5; op2val:0xbde542ef; op3val:0x7da5f32f; valaddr_reg:x16; val_offset:1548; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1548, x17, x15, 360, x18)

inst_300:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x394df5 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x6542ef and fs3 == 0 and fe3 == 0xfb and fm3 == 0x25f32f and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f394df5; op2val:0xbde542ef; op3val:0x7da5f32f; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 368, x18)

inst_301:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2366fd and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3d9765 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x720757 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ea366fd; op2val:0xbfbd9765; op3val:0x7ef20757; valaddr_reg:x16; val_offset:1572; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1572, x17, x15, 376, x18)

inst_302:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2366fd and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3d9765 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x720757 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ea366fd; op2val:0xbfbd9765; op3val:0x7ef20757; valaddr_reg:x16; val_offset:1584; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1584, x17, x15, 384, x18)

inst_303:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2366fd and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3d9765 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x720757 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ea366fd; op2val:0xbfbd9765; op3val:0x7ef20757; valaddr_reg:x16; val_offset:1596; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1596, x17, x15, 392, x18)

inst_304:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2366fd and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3d9765 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x720757 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ea366fd; op2val:0xbfbd9765; op3val:0x7ef20757; valaddr_reg:x16; val_offset:1608; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1608, x17, x15, 400, x18)

inst_305:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2366fd and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3d9765 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x720757 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ea366fd; op2val:0xbfbd9765; op3val:0x7ef20757; valaddr_reg:x16; val_offset:1620; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1620, x17, x15, 408, x18)

inst_306:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x43b11b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x723ea7 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x392d50 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7dc3b11b; op2val:0xc0f23ea7; op3val:0x7f392d50; valaddr_reg:x16; val_offset:1632; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1632, x17, x15, 416, x18)

inst_307:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x43b11b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x723ea7 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x392d50 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7dc3b11b; op2val:0xc0f23ea7; op3val:0x7f392d50; valaddr_reg:x16; val_offset:1644; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1644, x17, x15, 424, x18)

inst_308:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x43b11b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x723ea7 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x392d50 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7dc3b11b; op2val:0xc0f23ea7; op3val:0x7f392d50; valaddr_reg:x16; val_offset:1656; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1656, x17, x15, 432, x18)

inst_309:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x43b11b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x723ea7 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x392d50 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7dc3b11b; op2val:0xc0f23ea7; op3val:0x7f392d50; valaddr_reg:x16; val_offset:1668; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1668, x17, x15, 440, x18)

inst_310:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x43b11b and fs2 == 1 and fe2 == 0x81 and fm2 == 0x723ea7 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x392d50 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7dc3b11b; op2val:0xc0f23ea7; op3val:0x7f392d50; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 448, x18)

inst_311:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0dd078 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x48fee8 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5eb026 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e0dd078; op2val:0xc048fee8; op3val:0x7edeb026; valaddr_reg:x16; val_offset:1692; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1692, x17, x15, 456, x18)

inst_312:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0dd078 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x48fee8 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5eb026 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e0dd078; op2val:0xc048fee8; op3val:0x7edeb026; valaddr_reg:x16; val_offset:1704; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1704, x17, x15, 464, x18)

inst_313:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0dd078 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x48fee8 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5eb026 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e0dd078; op2val:0xc048fee8; op3val:0x7edeb026; valaddr_reg:x16; val_offset:1716; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1716, x17, x15, 472, x18)

inst_314:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0dd078 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x48fee8 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5eb026 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e0dd078; op2val:0xc048fee8; op3val:0x7edeb026; valaddr_reg:x16; val_offset:1728; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1728, x17, x15, 480, x18)

inst_315:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0dd078 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x48fee8 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5eb026 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e0dd078; op2val:0xc048fee8; op3val:0x7edeb026; valaddr_reg:x16; val_offset:1740; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1740, x17, x15, 488, x18)

inst_316:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x042c30 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x6d24b7 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x74dfbb and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f042c30; op2val:0xbded24b7; op3val:0x7d74dfbb; valaddr_reg:x16; val_offset:1752; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1752, x17, x15, 496, x18)

inst_317:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x042c30 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x6d24b7 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x74dfbb and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f042c30; op2val:0xbded24b7; op3val:0x7d74dfbb; valaddr_reg:x16; val_offset:1764; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1764, x17, x15, 504, x18)

inst_318:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x042c30 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x6d24b7 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x74dfbb and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f042c30; op2val:0xbded24b7; op3val:0x7d74dfbb; valaddr_reg:x16; val_offset:1776; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1776, x17, x15, 512, x18)

inst_319:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x042c30 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x6d24b7 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x74dfbb and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f042c30; op2val:0xbded24b7; op3val:0x7d74dfbb; valaddr_reg:x16; val_offset:1788; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1788, x17, x15, 520, x18)

inst_320:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x042c30 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x6d24b7 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x74dfbb and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f042c30; op2val:0xbded24b7; op3val:0x7d74dfbb; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 528, x18)

inst_321:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6ea107 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x6c02b1 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x5bfef4 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eeea107; op2val:0xbe6c02b1; op3val:0x7ddbfef4; valaddr_reg:x16; val_offset:1812; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1812, x17, x15, 536, x18)

inst_322:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6ea107 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x6c02b1 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x5bfef4 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eeea107; op2val:0xbe6c02b1; op3val:0x7ddbfef4; valaddr_reg:x16; val_offset:1824; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1824, x17, x15, 544, x18)

inst_323:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6ea107 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x6c02b1 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x5bfef4 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eeea107; op2val:0xbe6c02b1; op3val:0x7ddbfef4; valaddr_reg:x16; val_offset:1836; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1836, x17, x15, 552, x18)

inst_324:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6ea107 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x6c02b1 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x5bfef4 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eeea107; op2val:0xbe6c02b1; op3val:0x7ddbfef4; valaddr_reg:x16; val_offset:1848; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1848, x17, x15, 560, x18)

inst_325:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6ea107 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x6c02b1 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x5bfef4 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eeea107; op2val:0xbe6c02b1; op3val:0x7ddbfef4; valaddr_reg:x16; val_offset:1860; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1860, x17, x15, 568, x18)

inst_326:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0543e0 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x00e517 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x063264 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8543e0; op2val:0xc000e517; op3val:0x7f063264; valaddr_reg:x16; val_offset:1872; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1872, x17, x15, 576, x18)

inst_327:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0543e0 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x00e517 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x063264 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8543e0; op2val:0xc000e517; op3val:0x7f063264; valaddr_reg:x16; val_offset:1884; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1884, x17, x15, 584, x18)

inst_328:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0543e0 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x00e517 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x063264 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8543e0; op2val:0xc000e517; op3val:0x7f063264; valaddr_reg:x16; val_offset:1896; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1896, x17, x15, 592, x18)

inst_329:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0543e0 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x00e517 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x063264 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8543e0; op2val:0xc000e517; op3val:0x7f063264; valaddr_reg:x16; val_offset:1908; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1908, x17, x15, 600, x18)

inst_330:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0543e0 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x00e517 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x063264 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8543e0; op2val:0xc000e517; op3val:0x7f063264; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 608, x18)

inst_331:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0ea689 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x22c32f and fs3 == 0 and fe3 == 0xfe and fm3 == 0x35644c and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8ea689; op2val:0xc022c32f; op3val:0x7f35644c; valaddr_reg:x16; val_offset:1932; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1932, x17, x15, 616, x18)

inst_332:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0ea689 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x22c32f and fs3 == 0 and fe3 == 0xfe and fm3 == 0x35644c and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8ea689; op2val:0xc022c32f; op3val:0x7f35644c; valaddr_reg:x16; val_offset:1944; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1944, x17, x15, 624, x18)

inst_333:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0ea689 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x22c32f and fs3 == 0 and fe3 == 0xfe and fm3 == 0x35644c and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8ea689; op2val:0xc022c32f; op3val:0x7f35644c; valaddr_reg:x16; val_offset:1956; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1956, x17, x15, 632, x18)

inst_334:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0ea689 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x22c32f and fs3 == 0 and fe3 == 0xfe and fm3 == 0x35644c and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8ea689; op2val:0xc022c32f; op3val:0x7f35644c; valaddr_reg:x16; val_offset:1968; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1968, x17, x15, 640, x18)

inst_335:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0ea689 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x22c32f and fs3 == 0 and fe3 == 0xfe and fm3 == 0x35644c and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8ea689; op2val:0xc022c32f; op3val:0x7f35644c; valaddr_reg:x16; val_offset:1980; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1980, x17, x15, 648, x18)

inst_336:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x175320 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x35a312 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x56bc56 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e975320; op2val:0xbdb5a312; op3val:0x7cd6bc56; valaddr_reg:x16; val_offset:1992; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1992, x17, x15, 656, x18)

inst_337:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x175320 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x35a312 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x56bc56 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e975320; op2val:0xbdb5a312; op3val:0x7cd6bc56; valaddr_reg:x16; val_offset:2004; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 2004, x17, x15, 664, x18)

inst_338:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x175320 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x35a312 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x56bc56 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e975320; op2val:0xbdb5a312; op3val:0x7cd6bc56; valaddr_reg:x16; val_offset:2016; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 2016, x17, x15, 672, x18)

inst_339:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x175320 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x35a312 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x56bc56 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e975320; op2val:0xbdb5a312; op3val:0x7cd6bc56; valaddr_reg:x16; val_offset:2028; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 2028, x17, x15, 680, x18)
addi x16,x16,2040

inst_340:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x175320 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x35a312 and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x56bc56 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e975320; op2val:0xbdb5a312; op3val:0x7cd6bc56; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 688, x18)

inst_341:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x789da9 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x448a7d and fs3 == 0 and fe3 == 0xfb and fm3 == 0x3edf34 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef89da9; op2val:0xbe448a7d; op3val:0x7dbedf34; valaddr_reg:x16; val_offset:12; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 12, x17, x15, 696, x18)

inst_342:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x789da9 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x448a7d and fs3 == 0 and fe3 == 0xfb and fm3 == 0x3edf34 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef89da9; op2val:0xbe448a7d; op3val:0x7dbedf34; valaddr_reg:x16; val_offset:24; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 24, x17, x15, 704, x18)

inst_343:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x789da9 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x448a7d and fs3 == 0 and fe3 == 0xfb and fm3 == 0x3edf34 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef89da9; op2val:0xbe448a7d; op3val:0x7dbedf34; valaddr_reg:x16; val_offset:36; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 36, x17, x15, 712, x18)

inst_344:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x789da9 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x448a7d and fs3 == 0 and fe3 == 0xfb and fm3 == 0x3edf34 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef89da9; op2val:0xbe448a7d; op3val:0x7dbedf34; valaddr_reg:x16; val_offset:48; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 48, x17, x15, 720, x18)

inst_345:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x789da9 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x448a7d and fs3 == 0 and fe3 == 0xfb and fm3 == 0x3edf34 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef89da9; op2val:0xbe448a7d; op3val:0x7dbedf34; valaddr_reg:x16; val_offset:60; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 60, x17, x15, 728, x18)

inst_346:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x133609 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x09b51b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1e6020 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f133609; op2val:0xbf89b51b; op3val:0x7f1e6020; valaddr_reg:x16; val_offset:72; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 72, x17, x15, 736, x18)

inst_347:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x133609 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x09b51b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1e6020 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f133609; op2val:0xbf89b51b; op3val:0x7f1e6020; valaddr_reg:x16; val_offset:84; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 84, x17, x15, 744, x18)

inst_348:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x133609 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x09b51b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1e6020 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f133609; op2val:0xbf89b51b; op3val:0x7f1e6020; valaddr_reg:x16; val_offset:96; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 96, x17, x15, 752, x18)

inst_349:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x133609 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x09b51b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1e6020 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f133609; op2val:0xbf89b51b; op3val:0x7f1e6020; valaddr_reg:x16; val_offset:108; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 108, x17, x15, 760, x18)

inst_350:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x133609 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x09b51b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1e6020 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f133609; op2val:0xbf89b51b; op3val:0x7f1e6020; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 768, x18)

inst_351:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x27090d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1aee25 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4a2da9 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e27090d; op2val:0xc01aee25; op3val:0x7eca2da9; valaddr_reg:x16; val_offset:132; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 132, x17, x15, 776, x18)

inst_352:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x27090d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1aee25 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4a2da9 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e27090d; op2val:0xc01aee25; op3val:0x7eca2da9; valaddr_reg:x16; val_offset:144; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 144, x17, x15, 784, x18)

inst_353:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x27090d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1aee25 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4a2da9 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e27090d; op2val:0xc01aee25; op3val:0x7eca2da9; valaddr_reg:x16; val_offset:156; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 156, x17, x15, 792, x18)

inst_354:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x27090d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1aee25 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4a2da9 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e27090d; op2val:0xc01aee25; op3val:0x7eca2da9; valaddr_reg:x16; val_offset:168; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 168, x17, x15, 800, x18)

inst_355:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x27090d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1aee25 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4a2da9 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e27090d; op2val:0xc01aee25; op3val:0x7eca2da9; valaddr_reg:x16; val_offset:180; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 180, x17, x15, 808, x18)

inst_356:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33dfb8 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x1e050d and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5e0f41 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f33dfb8; op2val:0xbe9e050d; op3val:0x7e5e0f41; valaddr_reg:x16; val_offset:192; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 192, x17, x15, 816, x18)

inst_357:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33dfb8 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x1e050d and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5e0f41 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f33dfb8; op2val:0xbe9e050d; op3val:0x7e5e0f41; valaddr_reg:x16; val_offset:204; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 204, x17, x15, 824, x18)

inst_358:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33dfb8 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x1e050d and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5e0f41 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f33dfb8; op2val:0xbe9e050d; op3val:0x7e5e0f41; valaddr_reg:x16; val_offset:216; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 216, x17, x15, 832, x18)

inst_359:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33dfb8 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x1e050d and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5e0f41 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f33dfb8; op2val:0xbe9e050d; op3val:0x7e5e0f41; valaddr_reg:x16; val_offset:228; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 228, x17, x15, 840, x18)

inst_360:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33dfb8 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x1e050d and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5e0f41 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f33dfb8; op2val:0xbe9e050d; op3val:0x7e5e0f41; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 848, x18)

inst_361:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3a8a7e and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0c9d85 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4ced0a and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3a8a7e; op2val:0xbf0c9d85; op3val:0x7ecced0a; valaddr_reg:x16; val_offset:252; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 252, x17, x15, 856, x18)

inst_362:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3a8a7e and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0c9d85 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4ced0a and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3a8a7e; op2val:0xbf0c9d85; op3val:0x7ecced0a; valaddr_reg:x16; val_offset:264; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 264, x17, x15, 864, x18)

inst_363:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3a8a7e and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0c9d85 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4ced0a and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3a8a7e; op2val:0xbf0c9d85; op3val:0x7ecced0a; valaddr_reg:x16; val_offset:276; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 276, x17, x15, 872, x18)

inst_364:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3a8a7e and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0c9d85 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4ced0a and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3a8a7e; op2val:0xbf0c9d85; op3val:0x7ecced0a; valaddr_reg:x16; val_offset:288; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 288, x17, x15, 880, x18)

inst_365:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3a8a7e and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0c9d85 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4ced0a and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3a8a7e; op2val:0xbf0c9d85; op3val:0x7ecced0a; valaddr_reg:x16; val_offset:300; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 300, x17, x15, 888, x18)

inst_366:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20dd6a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x18c1e6 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3ffa9e and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f20dd6a; op2val:0xbf18c1e6; op3val:0x7ebffa9e; valaddr_reg:x16; val_offset:312; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 312, x17, x15, 896, x18)

inst_367:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20dd6a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x18c1e6 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3ffa9e and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f20dd6a; op2val:0xbf18c1e6; op3val:0x7ebffa9e; valaddr_reg:x16; val_offset:324; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 324, x17, x15, 904, x18)

inst_368:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20dd6a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x18c1e6 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3ffa9e and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f20dd6a; op2val:0xbf18c1e6; op3val:0x7ebffa9e; valaddr_reg:x16; val_offset:336; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 336, x17, x15, 912, x18)

inst_369:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20dd6a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x18c1e6 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3ffa9e and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f20dd6a; op2val:0xbf18c1e6; op3val:0x7ebffa9e; valaddr_reg:x16; val_offset:348; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 348, x17, x15, 920, x18)

inst_370:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20dd6a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x18c1e6 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3ffa9e and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f20dd6a; op2val:0xbf18c1e6; op3val:0x7ebffa9e; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 928, x18)

inst_371:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x36bc41 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x09993b and fs3 == 0 and fe3 == 0xfb and fm3 == 0x447040 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb6bc41; op2val:0xbe89993b; op3val:0x7dc47040; valaddr_reg:x16; val_offset:372; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 372, x17, x15, 936, x18)

inst_372:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x36bc41 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x09993b and fs3 == 0 and fe3 == 0xfb and fm3 == 0x447040 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb6bc41; op2val:0xbe89993b; op3val:0x7dc47040; valaddr_reg:x16; val_offset:384; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 384, x17, x15, 944, x18)

inst_373:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x36bc41 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x09993b and fs3 == 0 and fe3 == 0xfb and fm3 == 0x447040 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb6bc41; op2val:0xbe89993b; op3val:0x7dc47040; valaddr_reg:x16; val_offset:396; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 396, x17, x15, 952, x18)

inst_374:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x36bc41 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x09993b and fs3 == 0 and fe3 == 0xfb and fm3 == 0x447040 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb6bc41; op2val:0xbe89993b; op3val:0x7dc47040; valaddr_reg:x16; val_offset:408; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 408, x17, x15, 960, x18)

inst_375:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x36bc41 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x09993b and fs3 == 0 and fe3 == 0xfb and fm3 == 0x447040 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb6bc41; op2val:0xbe89993b; op3val:0x7dc47040; valaddr_reg:x16; val_offset:420; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 420, x17, x15, 968, x18)

inst_376:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6d2bf9 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0cf386 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0295a9 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e6d2bf9; op2val:0xc00cf386; op3val:0x7f0295a9; valaddr_reg:x16; val_offset:432; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 432, x17, x15, 976, x18)

inst_377:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6d2bf9 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0cf386 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0295a9 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e6d2bf9; op2val:0xc00cf386; op3val:0x7f0295a9; valaddr_reg:x16; val_offset:444; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 444, x17, x15, 984, x18)

inst_378:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6d2bf9 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0cf386 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0295a9 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e6d2bf9; op2val:0xc00cf386; op3val:0x7f0295a9; valaddr_reg:x16; val_offset:456; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 456, x17, x15, 992, x18)

inst_379:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6d2bf9 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0cf386 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0295a9 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e6d2bf9; op2val:0xc00cf386; op3val:0x7f0295a9; valaddr_reg:x16; val_offset:468; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 468, x17, x15, 1000, x18)

inst_380:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6d2bf9 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0cf386 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0295a9 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e6d2bf9; op2val:0xc00cf386; op3val:0x7f0295a9; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1008, x18)

inst_381:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x220c6a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2025e5 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4abf7f and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f220c6a; op2val:0xbf2025e5; op3val:0x7ecabf7f; valaddr_reg:x16; val_offset:492; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 492, x17, x15, 1016, x18)

inst_382:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x220c6a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2025e5 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4abf7f and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f220c6a; op2val:0xbf2025e5; op3val:0x7ecabf7f; valaddr_reg:x16; val_offset:504; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 504, x17, x15, 1024, x18)

inst_383:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x220c6a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2025e5 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4abf7f and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f220c6a; op2val:0xbf2025e5; op3val:0x7ecabf7f; valaddr_reg:x16; val_offset:516; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 516, x17, x15, 1032, x18)

inst_384:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x220c6a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2025e5 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4abf7f and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f220c6a; op2val:0xbf2025e5; op3val:0x7ecabf7f; valaddr_reg:x16; val_offset:528; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 528, x17, x15, 1040, x18)

inst_385:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x220c6a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2025e5 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4abf7f and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f220c6a; op2val:0xbf2025e5; op3val:0x7ecabf7f; valaddr_reg:x16; val_offset:540; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 540, x17, x15, 1048, x18)

inst_386:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3c0477 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3fa5b4 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0cc108 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ebc0477; op2val:0xbf3fa5b4; op3val:0x7e8cc108; valaddr_reg:x16; val_offset:552; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 552, x17, x15, 1056, x18)

inst_387:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3c0477 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3fa5b4 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0cc108 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ebc0477; op2val:0xbf3fa5b4; op3val:0x7e8cc108; valaddr_reg:x16; val_offset:564; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 564, x17, x15, 1064, x18)

inst_388:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3c0477 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3fa5b4 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0cc108 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ebc0477; op2val:0xbf3fa5b4; op3val:0x7e8cc108; valaddr_reg:x16; val_offset:576; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 576, x17, x15, 1072, x18)

inst_389:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3c0477 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3fa5b4 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0cc108 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ebc0477; op2val:0xbf3fa5b4; op3val:0x7e8cc108; valaddr_reg:x16; val_offset:588; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 588, x17, x15, 1080, x18)

inst_390:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3c0477 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3fa5b4 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0cc108 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ebc0477; op2val:0xbf3fa5b4; op3val:0x7e8cc108; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1088, x18)

inst_391:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x04e2ff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x35dcee and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3cce5b and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f04e2ff; op2val:0xbfb5dcee; op3val:0x7f3cce5b; valaddr_reg:x16; val_offset:612; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 612, x17, x15, 1096, x18)

inst_392:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x04e2ff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x35dcee and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3cce5b and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f04e2ff; op2val:0xbfb5dcee; op3val:0x7f3cce5b; valaddr_reg:x16; val_offset:624; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 624, x17, x15, 1104, x18)

inst_393:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x04e2ff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x35dcee and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3cce5b and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f04e2ff; op2val:0xbfb5dcee; op3val:0x7f3cce5b; valaddr_reg:x16; val_offset:636; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 636, x17, x15, 1112, x18)

inst_394:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x04e2ff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x35dcee and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3cce5b and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f04e2ff; op2val:0xbfb5dcee; op3val:0x7f3cce5b; valaddr_reg:x16; val_offset:648; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 648, x17, x15, 1120, x18)

inst_395:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x04e2ff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x35dcee and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3cce5b and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f04e2ff; op2val:0xbfb5dcee; op3val:0x7f3cce5b; valaddr_reg:x16; val_offset:660; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 660, x17, x15, 1128, x18)

inst_396:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c2373 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x03bb5d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x312842 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2c2373; op2val:0xbf83bb5d; op3val:0x7f312842; valaddr_reg:x16; val_offset:672; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 672, x17, x15, 1136, x18)

inst_397:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c2373 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x03bb5d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x312842 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2c2373; op2val:0xbf83bb5d; op3val:0x7f312842; valaddr_reg:x16; val_offset:684; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 684, x17, x15, 1144, x18)

inst_398:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c2373 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x03bb5d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x312842 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2c2373; op2val:0xbf83bb5d; op3val:0x7f312842; valaddr_reg:x16; val_offset:696; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 696, x17, x15, 1152, x18)

inst_399:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c2373 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x03bb5d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x312842 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2c2373; op2val:0xbf83bb5d; op3val:0x7f312842; valaddr_reg:x16; val_offset:708; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 708, x17, x15, 1160, x18)

inst_400:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c2373 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x03bb5d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x312842 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2c2373; op2val:0xbf83bb5d; op3val:0x7f312842; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1168, x18)

inst_401:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33cf6c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1e17e3 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5e1598 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f33cf6c; op2val:0xbf1e17e3; op3val:0x7ede1598; valaddr_reg:x16; val_offset:732; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 732, x17, x15, 1176, x18)

inst_402:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33cf6c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1e17e3 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5e1598 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f33cf6c; op2val:0xbf1e17e3; op3val:0x7ede1598; valaddr_reg:x16; val_offset:744; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 744, x17, x15, 1184, x18)

inst_403:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33cf6c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1e17e3 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5e1598 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f33cf6c; op2val:0xbf1e17e3; op3val:0x7ede1598; valaddr_reg:x16; val_offset:756; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 756, x17, x15, 1192, x18)

inst_404:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33cf6c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1e17e3 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5e1598 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f33cf6c; op2val:0xbf1e17e3; op3val:0x7ede1598; valaddr_reg:x16; val_offset:768; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 768, x17, x15, 1200, x18)

inst_405:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33cf6c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1e17e3 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5e1598 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f33cf6c; op2val:0xbf1e17e3; op3val:0x7ede1598; valaddr_reg:x16; val_offset:780; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 780, x17, x15, 1208, x18)

inst_406:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6baf59 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2d06ce and fs3 == 0 and fe3 == 0xfd and fm3 == 0x1f4bc3 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eebaf59; op2val:0xbf2d06ce; op3val:0x7e9f4bc3; valaddr_reg:x16; val_offset:792; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 792, x17, x15, 1216, x18)

inst_407:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6baf59 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2d06ce and fs3 == 0 and fe3 == 0xfd and fm3 == 0x1f4bc3 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eebaf59; op2val:0xbf2d06ce; op3val:0x7e9f4bc3; valaddr_reg:x16; val_offset:804; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 804, x17, x15, 1224, x18)

inst_408:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6baf59 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2d06ce and fs3 == 0 and fe3 == 0xfd and fm3 == 0x1f4bc3 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eebaf59; op2val:0xbf2d06ce; op3val:0x7e9f4bc3; valaddr_reg:x16; val_offset:816; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 816, x17, x15, 1232, x18)

inst_409:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6baf59 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2d06ce and fs3 == 0 and fe3 == 0xfd and fm3 == 0x1f4bc3 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eebaf59; op2val:0xbf2d06ce; op3val:0x7e9f4bc3; valaddr_reg:x16; val_offset:828; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 828, x17, x15, 1240, x18)

inst_410:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6baf59 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2d06ce and fs3 == 0 and fe3 == 0xfd and fm3 == 0x1f4bc3 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eebaf59; op2val:0xbf2d06ce; op3val:0x7e9f4bc3; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1248, x18)

inst_411:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2a6406 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x28ea23 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x60daf6 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2a6406; op2val:0xbf28ea23; op3val:0x7ee0daf6; valaddr_reg:x16; val_offset:852; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 852, x17, x15, 1256, x18)

inst_412:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2a6406 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x28ea23 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x60daf6 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2a6406; op2val:0xbf28ea23; op3val:0x7ee0daf6; valaddr_reg:x16; val_offset:864; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 864, x17, x15, 1264, x18)

inst_413:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2a6406 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x28ea23 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x60daf6 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2a6406; op2val:0xbf28ea23; op3val:0x7ee0daf6; valaddr_reg:x16; val_offset:876; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 876, x17, x15, 1272, x18)

inst_414:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2a6406 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x28ea23 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x60daf6 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2a6406; op2val:0xbf28ea23; op3val:0x7ee0daf6; valaddr_reg:x16; val_offset:888; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 888, x17, x15, 1280, x18)

inst_415:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2a6406 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x28ea23 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x60daf6 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2a6406; op2val:0xbf28ea23; op3val:0x7ee0daf6; valaddr_reg:x16; val_offset:900; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 900, x17, x15, 1288, x18)

inst_416:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x125073 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x23864f and fs3 == 0 and fe3 == 0xfa and fm3 == 0x3aebfa and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f125073; op2val:0xbda3864f; op3val:0x7d3aebfa; valaddr_reg:x16; val_offset:912; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 912, x17, x15, 1296, x18)

inst_417:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x125073 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x23864f and fs3 == 0 and fe3 == 0xfa and fm3 == 0x3aebfa and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f125073; op2val:0xbda3864f; op3val:0x7d3aebfa; valaddr_reg:x16; val_offset:924; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 924, x17, x15, 1304, x18)

inst_418:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x125073 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x23864f and fs3 == 0 and fe3 == 0xfa and fm3 == 0x3aebfa and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f125073; op2val:0xbda3864f; op3val:0x7d3aebfa; valaddr_reg:x16; val_offset:936; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 936, x17, x15, 1312, x18)

inst_419:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x125073 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x23864f and fs3 == 0 and fe3 == 0xfa and fm3 == 0x3aebfa and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f125073; op2val:0xbda3864f; op3val:0x7d3aebfa; valaddr_reg:x16; val_offset:948; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 948, x17, x15, 1320, x18)

inst_420:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x125073 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x23864f and fs3 == 0 and fe3 == 0xfa and fm3 == 0x3aebfa and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f125073; op2val:0xbda3864f; op3val:0x7d3aebfa; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 1328, x18)

inst_421:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c9a88 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x541f4f and fs3 == 0 and fe3 == 0xfc and fm3 == 0x01c320 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e9c9a88; op2val:0xbed41f4f; op3val:0x7e01c320; valaddr_reg:x16; val_offset:972; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 972, x17, x15, 1336, x18)

inst_422:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c9a88 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x541f4f and fs3 == 0 and fe3 == 0xfc and fm3 == 0x01c320 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e9c9a88; op2val:0xbed41f4f; op3val:0x7e01c320; valaddr_reg:x16; val_offset:984; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 984, x17, x15, 1344, x18)

inst_423:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c9a88 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x541f4f and fs3 == 0 and fe3 == 0xfc and fm3 == 0x01c320 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e9c9a88; op2val:0xbed41f4f; op3val:0x7e01c320; valaddr_reg:x16; val_offset:996; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 996, x17, x15, 1352, x18)

inst_424:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c9a88 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x541f4f and fs3 == 0 and fe3 == 0xfc and fm3 == 0x01c320 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e9c9a88; op2val:0xbed41f4f; op3val:0x7e01c320; valaddr_reg:x16; val_offset:1008; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1008, x17, x15, 1360, x18)

inst_425:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c9a88 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x541f4f and fs3 == 0 and fe3 == 0xfc and fm3 == 0x01c320 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e9c9a88; op2val:0xbed41f4f; op3val:0x7e01c320; valaddr_reg:x16; val_offset:1020; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1020, x17, x15, 1368, x18)

inst_426:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4bc1b7 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1dafc1 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x7b0361 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7dcbc1b7; op2val:0xc01dafc1; op3val:0x7e7b0361; valaddr_reg:x16; val_offset:1032; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1032, x17, x15, 1376, x18)

inst_427:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4bc1b7 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1dafc1 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x7b0361 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7dcbc1b7; op2val:0xc01dafc1; op3val:0x7e7b0361; valaddr_reg:x16; val_offset:1044; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1044, x17, x15, 1384, x18)

inst_428:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4bc1b7 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1dafc1 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x7b0361 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7dcbc1b7; op2val:0xc01dafc1; op3val:0x7e7b0361; valaddr_reg:x16; val_offset:1056; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1056, x17, x15, 1392, x18)

inst_429:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4bc1b7 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1dafc1 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x7b0361 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7dcbc1b7; op2val:0xc01dafc1; op3val:0x7e7b0361; valaddr_reg:x16; val_offset:1068; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1068, x17, x15, 1400, x18)

inst_430:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4bc1b7 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1dafc1 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x7b0361 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7dcbc1b7; op2val:0xc01dafc1; op3val:0x7e7b0361; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 1408, x18)

inst_431:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3f7e14 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6f07dc and fs3 == 0 and fe3 == 0xfe and fm3 == 0x32cc96 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3f7e14; op2val:0xbf6f07dc; op3val:0x7f32cc96; valaddr_reg:x16; val_offset:1092; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1092, x17, x15, 1416, x18)

inst_432:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3f7e14 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6f07dc and fs3 == 0 and fe3 == 0xfe and fm3 == 0x32cc96 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3f7e14; op2val:0xbf6f07dc; op3val:0x7f32cc96; valaddr_reg:x16; val_offset:1104; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1104, x17, x15, 1424, x18)

inst_433:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3f7e14 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6f07dc and fs3 == 0 and fe3 == 0xfe and fm3 == 0x32cc96 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3f7e14; op2val:0xbf6f07dc; op3val:0x7f32cc96; valaddr_reg:x16; val_offset:1116; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1116, x17, x15, 1432, x18)

inst_434:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3f7e14 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6f07dc and fs3 == 0 and fe3 == 0xfe and fm3 == 0x32cc96 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3f7e14; op2val:0xbf6f07dc; op3val:0x7f32cc96; valaddr_reg:x16; val_offset:1128; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1128, x17, x15, 1440, x18)

inst_435:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3f7e14 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6f07dc and fs3 == 0 and fe3 == 0xfe and fm3 == 0x32cc96 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3f7e14; op2val:0xbf6f07dc; op3val:0x7f32cc96; valaddr_reg:x16; val_offset:1140; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1140, x17, x15, 1448, x18)

inst_436:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x58215c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x54e017 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x33b8d2 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ed8215c; op2val:0xbfd4e017; op3val:0x7f33b8d2; valaddr_reg:x16; val_offset:1152; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1152, x17, x15, 1456, x18)

inst_437:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x58215c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x54e017 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x33b8d2 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ed8215c; op2val:0xbfd4e017; op3val:0x7f33b8d2; valaddr_reg:x16; val_offset:1164; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1164, x17, x15, 1464, x18)

inst_438:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x58215c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x54e017 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x33b8d2 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ed8215c; op2val:0xbfd4e017; op3val:0x7f33b8d2; valaddr_reg:x16; val_offset:1176; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1176, x17, x15, 1472, x18)

inst_439:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x58215c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x54e017 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x33b8d2 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ed8215c; op2val:0xbfd4e017; op3val:0x7f33b8d2; valaddr_reg:x16; val_offset:1188; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1188, x17, x15, 1480, x18)

inst_440:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x58215c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x54e017 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x33b8d2 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ed8215c; op2val:0xbfd4e017; op3val:0x7f33b8d2; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 1488, x18)

inst_441:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d5723 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x26896f and fs3 == 0 and fe3 == 0xfd and fm3 == 0x37e4c4 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0d5723; op2val:0xbf26896f; op3val:0x7eb7e4c4; valaddr_reg:x16; val_offset:1212; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1212, x17, x15, 1496, x18)

inst_442:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d5723 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x26896f and fs3 == 0 and fe3 == 0xfd and fm3 == 0x37e4c4 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0d5723; op2val:0xbf26896f; op3val:0x7eb7e4c4; valaddr_reg:x16; val_offset:1224; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1224, x17, x15, 1504, x18)

inst_443:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d5723 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x26896f and fs3 == 0 and fe3 == 0xfd and fm3 == 0x37e4c4 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0d5723; op2val:0xbf26896f; op3val:0x7eb7e4c4; valaddr_reg:x16; val_offset:1236; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1236, x17, x15, 1512, x18)

inst_444:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d5723 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x26896f and fs3 == 0 and fe3 == 0xfd and fm3 == 0x37e4c4 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0d5723; op2val:0xbf26896f; op3val:0x7eb7e4c4; valaddr_reg:x16; val_offset:1248; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1248, x17, x15, 1520, x18)

inst_445:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d5723 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x26896f and fs3 == 0 and fe3 == 0xfd and fm3 == 0x37e4c4 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0d5723; op2val:0xbf26896f; op3val:0x7eb7e4c4; valaddr_reg:x16; val_offset:1260; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1260, x17, x15, 1528, x18)

inst_446:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7af3fb and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2cbaf4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x295332 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e7af3fb; op2val:0xc02cbaf4; op3val:0x7f295332; valaddr_reg:x16; val_offset:1272; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1272, x17, x15, 1536, x18)

inst_447:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7af3fb and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2cbaf4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x295332 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e7af3fb; op2val:0xc02cbaf4; op3val:0x7f295332; valaddr_reg:x16; val_offset:1284; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1284, x17, x15, 1544, x18)

inst_448:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7af3fb and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2cbaf4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x295332 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e7af3fb; op2val:0xc02cbaf4; op3val:0x7f295332; valaddr_reg:x16; val_offset:1296; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1296, x17, x15, 1552, x18)

inst_449:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7af3fb and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2cbaf4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x295332 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e7af3fb; op2val:0xc02cbaf4; op3val:0x7f295332; valaddr_reg:x16; val_offset:1308; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1308, x17, x15, 1560, x18)

inst_450:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7af3fb and fs2 == 1 and fe2 == 0x80 and fm2 == 0x2cbaf4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x295332 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e7af3fb; op2val:0xc02cbaf4; op3val:0x7f295332; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 1568, x18)

inst_451:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e6a36 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2d9764 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x56d6eb and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1e6a36; op2val:0xbf2d9764; op3val:0x7ed6d6eb; valaddr_reg:x16; val_offset:1332; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1332, x17, x15, 1576, x18)

inst_452:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e6a36 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2d9764 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x56d6eb and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1e6a36; op2val:0xbf2d9764; op3val:0x7ed6d6eb; valaddr_reg:x16; val_offset:1344; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1344, x17, x15, 1584, x18)

inst_453:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e6a36 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2d9764 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x56d6eb and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1e6a36; op2val:0xbf2d9764; op3val:0x7ed6d6eb; valaddr_reg:x16; val_offset:1356; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1356, x17, x15, 1592, x18)

inst_454:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e6a36 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2d9764 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x56d6eb and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1e6a36; op2val:0xbf2d9764; op3val:0x7ed6d6eb; valaddr_reg:x16; val_offset:1368; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1368, x17, x15, 1600, x18)

inst_455:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e6a36 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2d9764 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x56d6eb and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1e6a36; op2val:0xbf2d9764; op3val:0x7ed6d6eb; valaddr_reg:x16; val_offset:1380; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1380, x17, x15, 1608, x18)

inst_456:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x557298 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2985e0 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0d5846 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ed57298; op2val:0xbfa985e0; op3val:0x7f0d5846; valaddr_reg:x16; val_offset:1392; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1392, x17, x15, 1616, x18)

inst_457:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x557298 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2985e0 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0d5846 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ed57298; op2val:0xbfa985e0; op3val:0x7f0d5846; valaddr_reg:x16; val_offset:1404; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1404, x17, x15, 1624, x18)

inst_458:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x557298 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2985e0 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0d5846 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ed57298; op2val:0xbfa985e0; op3val:0x7f0d5846; valaddr_reg:x16; val_offset:1416; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1416, x17, x15, 1632, x18)

inst_459:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x557298 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2985e0 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0d5846 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ed57298; op2val:0xbfa985e0; op3val:0x7f0d5846; valaddr_reg:x16; val_offset:1428; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1428, x17, x15, 1640, x18)

inst_460:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x557298 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2985e0 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0d5846 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ed57298; op2val:0xbfa985e0; op3val:0x7f0d5846; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 1648, x18)

inst_461:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x277072 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6ef63b and fs3 == 0 and fe3 == 0xfa and fm3 == 0x1c4b97 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7da77072; op2val:0xbeeef63b; op3val:0x7d1c4b97; valaddr_reg:x16; val_offset:1452; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1452, x17, x15, 1656, x18)

inst_462:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x277072 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6ef63b and fs3 == 0 and fe3 == 0xfa and fm3 == 0x1c4b97 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7da77072; op2val:0xbeeef63b; op3val:0x7d1c4b97; valaddr_reg:x16; val_offset:1464; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1464, x17, x15, 1664, x18)

inst_463:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x277072 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6ef63b and fs3 == 0 and fe3 == 0xfa and fm3 == 0x1c4b97 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7da77072; op2val:0xbeeef63b; op3val:0x7d1c4b97; valaddr_reg:x16; val_offset:1476; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1476, x17, x15, 1672, x18)

inst_464:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x277072 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6ef63b and fs3 == 0 and fe3 == 0xfa and fm3 == 0x1c4b97 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7da77072; op2val:0xbeeef63b; op3val:0x7d1c4b97; valaddr_reg:x16; val_offset:1488; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1488, x17, x15, 1680, x18)

inst_465:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x277072 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6ef63b and fs3 == 0 and fe3 == 0xfa and fm3 == 0x1c4b97 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7da77072; op2val:0xbeeef63b; op3val:0x7d1c4b97; valaddr_reg:x16; val_offset:1500; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1500, x17, x15, 1688, x18)

inst_466:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x07b179 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x07ba67 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0fe2c9 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e07b179; op2val:0xc087ba67; op3val:0x7f0fe2c9; valaddr_reg:x16; val_offset:1512; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1512, x17, x15, 1696, x18)

inst_467:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x07b179 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x07ba67 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0fe2c9 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e07b179; op2val:0xc087ba67; op3val:0x7f0fe2c9; valaddr_reg:x16; val_offset:1524; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1524, x17, x15, 1704, x18)

inst_468:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x07b179 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x07ba67 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0fe2c9 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e07b179; op2val:0xc087ba67; op3val:0x7f0fe2c9; valaddr_reg:x16; val_offset:1536; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1536, x17, x15, 1712, x18)

inst_469:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x07b179 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x07ba67 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0fe2c9 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e07b179; op2val:0xc087ba67; op3val:0x7f0fe2c9; valaddr_reg:x16; val_offset:1548; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1548, x17, x15, 1720, x18)

inst_470:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x07b179 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x07ba67 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0fe2c9 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e07b179; op2val:0xc087ba67; op3val:0x7f0fe2c9; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1728, x18)

inst_471:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2af59a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2891e9 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x61253d and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e2af59a; op2val:0xbfa891e9; op3val:0x7e61253d; valaddr_reg:x16; val_offset:1572; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1572, x17, x15, 1736, x18)

inst_472:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2af59a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2891e9 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x61253d and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e2af59a; op2val:0xbfa891e9; op3val:0x7e61253d; valaddr_reg:x16; val_offset:1584; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1584, x17, x15, 1744, x18)

inst_473:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2af59a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2891e9 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x61253d and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e2af59a; op2val:0xbfa891e9; op3val:0x7e61253d; valaddr_reg:x16; val_offset:1596; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1596, x17, x15, 1752, x18)

inst_474:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2af59a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2891e9 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x61253d and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e2af59a; op2val:0xbfa891e9; op3val:0x7e61253d; valaddr_reg:x16; val_offset:1608; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1608, x17, x15, 1760, x18)

inst_475:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2af59a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2891e9 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x61253d and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e2af59a; op2val:0xbfa891e9; op3val:0x7e61253d; valaddr_reg:x16; val_offset:1620; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1620, x17, x15, 1768, x18)

inst_476:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x162ed7 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x029e84 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x194190 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f162ed7; op2val:0xbe029e84; op3val:0x7d994190; valaddr_reg:x16; val_offset:1632; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1632, x17, x15, 1776, x18)

inst_477:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x162ed7 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x029e84 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x194190 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f162ed7; op2val:0xbe029e84; op3val:0x7d994190; valaddr_reg:x16; val_offset:1644; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1644, x17, x15, 1784, x18)

inst_478:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x162ed7 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x029e84 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x194190 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f162ed7; op2val:0xbe029e84; op3val:0x7d994190; valaddr_reg:x16; val_offset:1656; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1656, x17, x15, 1792, x18)

inst_479:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x162ed7 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x029e84 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x194190 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f162ed7; op2val:0xbe029e84; op3val:0x7d994190; valaddr_reg:x16; val_offset:1668; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1668, x17, x15, 1800, x18)

inst_480:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x162ed7 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x029e84 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x194190 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f162ed7; op2val:0xbe029e84; op3val:0x7d994190; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1808, x18)

inst_481:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x157cfe and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0dc9a3 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x25972e and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e957cfe; op2val:0xbf8dc9a3; op3val:0x7ea5972e; valaddr_reg:x16; val_offset:1692; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1692, x17, x15, 1816, x18)

inst_482:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x157cfe and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0dc9a3 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x25972e and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e957cfe; op2val:0xbf8dc9a3; op3val:0x7ea5972e; valaddr_reg:x16; val_offset:1704; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1704, x17, x15, 1824, x18)

inst_483:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x157cfe and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0dc9a3 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x25972e and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e957cfe; op2val:0xbf8dc9a3; op3val:0x7ea5972e; valaddr_reg:x16; val_offset:1716; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1716, x17, x15, 1832, x18)

inst_484:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x157cfe and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0dc9a3 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x25972e and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e957cfe; op2val:0xbf8dc9a3; op3val:0x7ea5972e; valaddr_reg:x16; val_offset:1728; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1728, x17, x15, 1840, x18)

inst_485:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x157cfe and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0dc9a3 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x25972e and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e957cfe; op2val:0xbf8dc9a3; op3val:0x7ea5972e; valaddr_reg:x16; val_offset:1740; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1740, x17, x15, 1848, x18)

inst_486:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x755b75 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4c4428 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x43c635 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7df55b75; op2val:0xbfcc4428; op3val:0x7e43c635; valaddr_reg:x16; val_offset:1752; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1752, x17, x15, 1856, x18)

inst_487:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x755b75 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4c4428 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x43c635 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7df55b75; op2val:0xbfcc4428; op3val:0x7e43c635; valaddr_reg:x16; val_offset:1764; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1764, x17, x15, 1864, x18)

inst_488:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x755b75 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4c4428 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x43c635 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7df55b75; op2val:0xbfcc4428; op3val:0x7e43c635; valaddr_reg:x16; val_offset:1776; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1776, x17, x15, 1872, x18)

inst_489:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x755b75 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4c4428 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x43c635 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7df55b75; op2val:0xbfcc4428; op3val:0x7e43c635; valaddr_reg:x16; val_offset:1788; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1788, x17, x15, 1880, x18)

inst_490:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x755b75 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4c4428 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x43c635 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7df55b75; op2val:0xbfcc4428; op3val:0x7e43c635; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1888, x18)

inst_491:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a8170 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x770672 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x05a65f and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0a8170; op2val:0xbef70672; op3val:0x7e85a65f; valaddr_reg:x16; val_offset:1812; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1812, x17, x15, 1896, x18)

inst_492:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a8170 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x770672 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x05a65f and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0a8170; op2val:0xbef70672; op3val:0x7e85a65f; valaddr_reg:x16; val_offset:1824; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1824, x17, x15, 1904, x18)

inst_493:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a8170 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x770672 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x05a65f and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0a8170; op2val:0xbef70672; op3val:0x7e85a65f; valaddr_reg:x16; val_offset:1836; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1836, x17, x15, 1912, x18)

inst_494:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a8170 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x770672 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x05a65f and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0a8170; op2val:0xbef70672; op3val:0x7e85a65f; valaddr_reg:x16; val_offset:1848; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1848, x17, x15, 1920, x18)

inst_495:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a8170 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x770672 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x05a65f and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0a8170; op2val:0xbef70672; op3val:0x7e85a65f; valaddr_reg:x16; val_offset:1860; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1860, x17, x15, 1928, x18)

inst_496:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x47b364 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x607517 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x2f184f and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ec7b364; op2val:0xbe607517; op3val:0x7daf184f; valaddr_reg:x16; val_offset:1872; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1872, x17, x15, 1936, x18)

inst_497:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x47b364 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x607517 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x2f184f and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ec7b364; op2val:0xbe607517; op3val:0x7daf184f; valaddr_reg:x16; val_offset:1884; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1884, x17, x15, 1944, x18)

inst_498:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x47b364 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x607517 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x2f184f and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ec7b364; op2val:0xbe607517; op3val:0x7daf184f; valaddr_reg:x16; val_offset:1896; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1896, x17, x15, 1952, x18)

inst_499:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x47b364 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x607517 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x2f184f and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ec7b364; op2val:0xbe607517; op3val:0x7daf184f; valaddr_reg:x16; val_offset:1908; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1908, x17, x15, 1960, x18)

inst_500:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x47b364 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x607517 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x2f184f and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ec7b364; op2val:0xbe607517; op3val:0x7daf184f; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1968, x18)

inst_501:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0946d5 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6a03fc and fs3 == 0 and fe3 == 0xfc and fm3 == 0x7af9c4 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8946d5; op2val:0xbf6a03fc; op3val:0x7e7af9c4; valaddr_reg:x16; val_offset:1932; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1932, x17, x15, 1976, x18)

inst_502:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0946d5 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6a03fc and fs3 == 0 and fe3 == 0xfc and fm3 == 0x7af9c4 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8946d5; op2val:0xbf6a03fc; op3val:0x7e7af9c4; valaddr_reg:x16; val_offset:1944; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1944, x17, x15, 1984, x18)

inst_503:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0946d5 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6a03fc and fs3 == 0 and fe3 == 0xfc and fm3 == 0x7af9c4 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8946d5; op2val:0xbf6a03fc; op3val:0x7e7af9c4; valaddr_reg:x16; val_offset:1956; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1956, x17, x15, 1992, x18)

inst_504:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0946d5 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6a03fc and fs3 == 0 and fe3 == 0xfc and fm3 == 0x7af9c4 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8946d5; op2val:0xbf6a03fc; op3val:0x7e7af9c4; valaddr_reg:x16; val_offset:1968; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1968, x17, x15, 2000, x18)

inst_505:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0946d5 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6a03fc and fs3 == 0 and fe3 == 0xfc and fm3 == 0x7af9c4 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8946d5; op2val:0xbf6a03fc; op3val:0x7e7af9c4; valaddr_reg:x16; val_offset:1980; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1980, x17, x15, 2008, x18)

inst_506:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7537d6 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6dccdf and fs3 == 0 and fe3 == 0xfc and fm3 == 0x63c8ef and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e7537d6; op2val:0xbf6dccdf; op3val:0x7e63c8ef; valaddr_reg:x16; val_offset:1992; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1992, x17, x15, 2016, x18)

inst_507:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7537d6 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6dccdf and fs3 == 0 and fe3 == 0xfc and fm3 == 0x63c8ef and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e7537d6; op2val:0xbf6dccdf; op3val:0x7e63c8ef; valaddr_reg:x16; val_offset:2004; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 2004, x17, x15, 2024, x18)
RVTEST_SIGBASE(x15,signature_x15_3)

inst_508:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7537d6 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6dccdf and fs3 == 0 and fe3 == 0xfc and fm3 == 0x63c8ef and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e7537d6; op2val:0xbf6dccdf; op3val:0x7e63c8ef; valaddr_reg:x16; val_offset:2016; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 2016, x17, x15, 0, x18)

inst_509:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7537d6 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6dccdf and fs3 == 0 and fe3 == 0xfc and fm3 == 0x63c8ef and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e7537d6; op2val:0xbf6dccdf; op3val:0x7e63c8ef; valaddr_reg:x16; val_offset:2028; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 2028, x17, x15, 8, x18)
addi x16,x16,2040

inst_510:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7537d6 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6dccdf and fs3 == 0 and fe3 == 0xfc and fm3 == 0x63c8ef and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e7537d6; op2val:0xbf6dccdf; op3val:0x7e63c8ef; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 16, x18)

inst_511:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b252f and fs2 == 1 and fe2 == 0x7e and fm2 == 0x53da48 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x664c95 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0b252f; op2val:0xbf53da48; op3val:0x7ee64c95; valaddr_reg:x16; val_offset:12; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 12, x17, x15, 24, x18)

inst_512:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b252f and fs2 == 1 and fe2 == 0x7e and fm2 == 0x53da48 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x664c95 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0b252f; op2val:0xbf53da48; op3val:0x7ee64c95; valaddr_reg:x16; val_offset:24; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 24, x17, x15, 32, x18)

inst_513:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b252f and fs2 == 1 and fe2 == 0x7e and fm2 == 0x53da48 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x664c95 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0b252f; op2val:0xbf53da48; op3val:0x7ee64c95; valaddr_reg:x16; val_offset:36; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 36, x17, x15, 40, x18)

inst_514:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b252f and fs2 == 1 and fe2 == 0x7e and fm2 == 0x53da48 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x664c95 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0b252f; op2val:0xbf53da48; op3val:0x7ee64c95; valaddr_reg:x16; val_offset:48; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 48, x17, x15, 48, x18)

inst_515:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b252f and fs2 == 1 and fe2 == 0x7e and fm2 == 0x53da48 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x664c95 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0b252f; op2val:0xbf53da48; op3val:0x7ee64c95; valaddr_reg:x16; val_offset:60; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 60, x17, x15, 56, x18)

inst_516:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1f0fb5 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7bc8f4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1c7142 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1f0fb5; op2val:0xbf7bc8f4; op3val:0x7f1c7142; valaddr_reg:x16; val_offset:72; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 72, x17, x15, 64, x18)

inst_517:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1f0fb5 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7bc8f4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1c7142 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1f0fb5; op2val:0xbf7bc8f4; op3val:0x7f1c7142; valaddr_reg:x16; val_offset:84; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 84, x17, x15, 72, x18)

inst_518:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1f0fb5 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7bc8f4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1c7142 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1f0fb5; op2val:0xbf7bc8f4; op3val:0x7f1c7142; valaddr_reg:x16; val_offset:96; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 96, x17, x15, 80, x18)

inst_519:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1f0fb5 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7bc8f4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1c7142 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1f0fb5; op2val:0xbf7bc8f4; op3val:0x7f1c7142; valaddr_reg:x16; val_offset:108; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 108, x17, x15, 88, x18)

inst_520:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1f0fb5 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7bc8f4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1c7142 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1f0fb5; op2val:0xbf7bc8f4; op3val:0x7f1c7142; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 96, x18)

inst_521:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7affa3 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0f7139 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0ca3cf and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7efaffa3; op2val:0xbf0f7139; op3val:0x7e8ca3cf; valaddr_reg:x16; val_offset:132; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 132, x17, x15, 104, x18)

inst_522:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7affa3 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0f7139 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0ca3cf and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7efaffa3; op2val:0xbf0f7139; op3val:0x7e8ca3cf; valaddr_reg:x16; val_offset:144; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 144, x17, x15, 112, x18)

inst_523:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7affa3 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0f7139 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0ca3cf and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7efaffa3; op2val:0xbf0f7139; op3val:0x7e8ca3cf; valaddr_reg:x16; val_offset:156; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 156, x17, x15, 120, x18)

inst_524:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7affa3 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0f7139 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0ca3cf and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7efaffa3; op2val:0xbf0f7139; op3val:0x7e8ca3cf; valaddr_reg:x16; val_offset:168; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 168, x17, x15, 128, x18)

inst_525:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7affa3 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0f7139 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0ca3cf and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7efaffa3; op2val:0xbf0f7139; op3val:0x7e8ca3cf; valaddr_reg:x16; val_offset:180; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 180, x17, x15, 136, x18)

inst_526:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3099a4 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6f195a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x24f0ee and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3099a4; op2val:0xbf6f195a; op3val:0x7f24f0ee; valaddr_reg:x16; val_offset:192; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 192, x17, x15, 144, x18)

inst_527:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3099a4 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6f195a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x24f0ee and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3099a4; op2val:0xbf6f195a; op3val:0x7f24f0ee; valaddr_reg:x16; val_offset:204; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 204, x17, x15, 152, x18)

inst_528:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3099a4 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6f195a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x24f0ee and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3099a4; op2val:0xbf6f195a; op3val:0x7f24f0ee; valaddr_reg:x16; val_offset:216; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 216, x17, x15, 160, x18)

inst_529:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3099a4 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6f195a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x24f0ee and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3099a4; op2val:0xbf6f195a; op3val:0x7f24f0ee; valaddr_reg:x16; val_offset:228; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 228, x17, x15, 168, x18)

inst_530:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3099a4 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6f195a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x24f0ee and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3099a4; op2val:0xbf6f195a; op3val:0x7f24f0ee; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 176, x18)

inst_531:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x75b2ba and fs2 == 1 and fe2 == 0x7b and fm2 == 0x77d04c and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x6dd75c and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e75b2ba; op2val:0xbdf7d04c; op3val:0x7cedd75c; valaddr_reg:x16; val_offset:252; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 252, x17, x15, 184, x18)

inst_532:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x75b2ba and fs2 == 1 and fe2 == 0x7b and fm2 == 0x77d04c and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x6dd75c and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e75b2ba; op2val:0xbdf7d04c; op3val:0x7cedd75c; valaddr_reg:x16; val_offset:264; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 264, x17, x15, 192, x18)

inst_533:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x75b2ba and fs2 == 1 and fe2 == 0x7b and fm2 == 0x77d04c and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x6dd75c and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e75b2ba; op2val:0xbdf7d04c; op3val:0x7cedd75c; valaddr_reg:x16; val_offset:276; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 276, x17, x15, 200, x18)

inst_534:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x75b2ba and fs2 == 1 and fe2 == 0x7b and fm2 == 0x77d04c and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x6dd75c and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e75b2ba; op2val:0xbdf7d04c; op3val:0x7cedd75c; valaddr_reg:x16; val_offset:288; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 288, x17, x15, 208, x18)

inst_535:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x75b2ba and fs2 == 1 and fe2 == 0x7b and fm2 == 0x77d04c and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x6dd75c and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e75b2ba; op2val:0xbdf7d04c; op3val:0x7cedd75c; valaddr_reg:x16; val_offset:300; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 300, x17, x15, 216, x18)

inst_536:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2614fd and fs2 == 1 and fe2 == 0x7e and fm2 == 0x412b5a and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7aa3e6 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2614fd; op2val:0xbf412b5a; op3val:0x7efaa3e6; valaddr_reg:x16; val_offset:312; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 312, x17, x15, 224, x18)

inst_537:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2614fd and fs2 == 1 and fe2 == 0x7e and fm2 == 0x412b5a and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7aa3e6 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2614fd; op2val:0xbf412b5a; op3val:0x7efaa3e6; valaddr_reg:x16; val_offset:324; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 324, x17, x15, 232, x18)

inst_538:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2614fd and fs2 == 1 and fe2 == 0x7e and fm2 == 0x412b5a and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7aa3e6 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2614fd; op2val:0xbf412b5a; op3val:0x7efaa3e6; valaddr_reg:x16; val_offset:336; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 336, x17, x15, 240, x18)

inst_539:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2614fd and fs2 == 1 and fe2 == 0x7e and fm2 == 0x412b5a and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7aa3e6 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2614fd; op2val:0xbf412b5a; op3val:0x7efaa3e6; valaddr_reg:x16; val_offset:348; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 348, x17, x15, 248, x18)

inst_540:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2614fd and fs2 == 1 and fe2 == 0x7e and fm2 == 0x412b5a and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7aa3e6 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2614fd; op2val:0xbf412b5a; op3val:0x7efaa3e6; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 256, x18)

inst_541:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0e6204 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x519284 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x691f07 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d8e6204; op2val:0xc0d19284; op3val:0x7ee91f07; valaddr_reg:x16; val_offset:372; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 372, x17, x15, 264, x18)

inst_542:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0e6204 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x519284 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x691f07 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d8e6204; op2val:0xc0d19284; op3val:0x7ee91f07; valaddr_reg:x16; val_offset:384; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 384, x17, x15, 272, x18)

inst_543:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0e6204 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x519284 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x691f07 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d8e6204; op2val:0xc0d19284; op3val:0x7ee91f07; valaddr_reg:x16; val_offset:396; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 396, x17, x15, 280, x18)

inst_544:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0e6204 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x519284 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x691f07 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d8e6204; op2val:0xc0d19284; op3val:0x7ee91f07; valaddr_reg:x16; val_offset:408; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 408, x17, x15, 288, x18)

inst_545:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0e6204 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x519284 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x691f07 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d8e6204; op2val:0xc0d19284; op3val:0x7ee91f07; valaddr_reg:x16; val_offset:420; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 420, x17, x15, 296, x18)

inst_546:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2dd7a3 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x02cfaf and fs3 == 0 and fe3 == 0xfe and fm3 == 0x31a913 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2dd7a3; op2val:0xbf82cfaf; op3val:0x7f31a913; valaddr_reg:x16; val_offset:432; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 432, x17, x15, 304, x18)

inst_547:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2dd7a3 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x02cfaf and fs3 == 0 and fe3 == 0xfe and fm3 == 0x31a913 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2dd7a3; op2val:0xbf82cfaf; op3val:0x7f31a913; valaddr_reg:x16; val_offset:444; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 444, x17, x15, 312, x18)

inst_548:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2dd7a3 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x02cfaf and fs3 == 0 and fe3 == 0xfe and fm3 == 0x31a913 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2dd7a3; op2val:0xbf82cfaf; op3val:0x7f31a913; valaddr_reg:x16; val_offset:456; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 456, x17, x15, 320, x18)

inst_549:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2dd7a3 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x02cfaf and fs3 == 0 and fe3 == 0xfe and fm3 == 0x31a913 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2dd7a3; op2val:0xbf82cfaf; op3val:0x7f31a913; valaddr_reg:x16; val_offset:468; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 468, x17, x15, 328, x18)

inst_550:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2dd7a3 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x02cfaf and fs3 == 0 and fe3 == 0xfe and fm3 == 0x31a913 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2dd7a3; op2val:0xbf82cfaf; op3val:0x7f31a913; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 336, x18)

inst_551:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x31ac5f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x70529b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x26caee and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb1ac5f; op2val:0xbff0529b; op3val:0x7f26caee; valaddr_reg:x16; val_offset:492; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 492, x17, x15, 344, x18)

inst_552:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x31ac5f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x70529b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x26caee and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb1ac5f; op2val:0xbff0529b; op3val:0x7f26caee; valaddr_reg:x16; val_offset:504; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 504, x17, x15, 352, x18)

inst_553:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x31ac5f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x70529b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x26caee and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb1ac5f; op2val:0xbff0529b; op3val:0x7f26caee; valaddr_reg:x16; val_offset:516; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 516, x17, x15, 360, x18)

inst_554:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x31ac5f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x70529b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x26caee and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb1ac5f; op2val:0xbff0529b; op3val:0x7f26caee; valaddr_reg:x16; val_offset:528; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 528, x17, x15, 368, x18)

inst_555:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x31ac5f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x70529b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x26caee and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb1ac5f; op2val:0xbff0529b; op3val:0x7f26caee; valaddr_reg:x16; val_offset:540; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 540, x17, x15, 376, x18)

inst_556:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03870c and fs2 == 1 and fe2 == 0x7c and fm2 == 0x021d71 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x05b36a and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f03870c; op2val:0xbe021d71; op3val:0x7d85b36a; valaddr_reg:x16; val_offset:552; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 552, x17, x15, 384, x18)

inst_557:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03870c and fs2 == 1 and fe2 == 0x7c and fm2 == 0x021d71 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x05b36a and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f03870c; op2val:0xbe021d71; op3val:0x7d85b36a; valaddr_reg:x16; val_offset:564; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 564, x17, x15, 392, x18)

inst_558:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03870c and fs2 == 1 and fe2 == 0x7c and fm2 == 0x021d71 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x05b36a and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f03870c; op2val:0xbe021d71; op3val:0x7d85b36a; valaddr_reg:x16; val_offset:576; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 576, x17, x15, 400, x18)

inst_559:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03870c and fs2 == 1 and fe2 == 0x7c and fm2 == 0x021d71 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x05b36a and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f03870c; op2val:0xbe021d71; op3val:0x7d85b36a; valaddr_reg:x16; val_offset:588; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 588, x17, x15, 408, x18)

inst_560:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03870c and fs2 == 1 and fe2 == 0x7c and fm2 == 0x021d71 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x05b36a and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f03870c; op2val:0xbe021d71; op3val:0x7d85b36a; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 416, x18)

inst_561:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5221f9 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0ec065 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6a5989 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7dd221f9; op2val:0xc08ec065; op3val:0x7eea5989; valaddr_reg:x16; val_offset:612; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 612, x17, x15, 424, x18)

inst_562:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5221f9 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0ec065 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6a5989 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7dd221f9; op2val:0xc08ec065; op3val:0x7eea5989; valaddr_reg:x16; val_offset:624; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 624, x17, x15, 432, x18)

inst_563:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5221f9 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0ec065 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6a5989 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7dd221f9; op2val:0xc08ec065; op3val:0x7eea5989; valaddr_reg:x16; val_offset:636; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 636, x17, x15, 440, x18)

inst_564:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5221f9 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0ec065 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6a5989 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7dd221f9; op2val:0xc08ec065; op3val:0x7eea5989; valaddr_reg:x16; val_offset:648; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 648, x17, x15, 448, x18)

inst_565:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5221f9 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0ec065 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6a5989 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7dd221f9; op2val:0xc08ec065; op3val:0x7eea5989; valaddr_reg:x16; val_offset:660; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 660, x17, x15, 456, x18)

inst_566:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x30ba02 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5aacdd and fs3 == 0 and fe3 == 0xfe and fm3 == 0x16f5bb and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f30ba02; op2val:0xbf5aacdd; op3val:0x7f16f5bb; valaddr_reg:x16; val_offset:672; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 672, x17, x15, 464, x18)

inst_567:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x30ba02 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5aacdd and fs3 == 0 and fe3 == 0xfe and fm3 == 0x16f5bb and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f30ba02; op2val:0xbf5aacdd; op3val:0x7f16f5bb; valaddr_reg:x16; val_offset:684; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 684, x17, x15, 472, x18)

inst_568:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x30ba02 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5aacdd and fs3 == 0 and fe3 == 0xfe and fm3 == 0x16f5bb and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f30ba02; op2val:0xbf5aacdd; op3val:0x7f16f5bb; valaddr_reg:x16; val_offset:696; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 696, x17, x15, 480, x18)

inst_569:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x30ba02 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5aacdd and fs3 == 0 and fe3 == 0xfe and fm3 == 0x16f5bb and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f30ba02; op2val:0xbf5aacdd; op3val:0x7f16f5bb; valaddr_reg:x16; val_offset:708; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 708, x17, x15, 488, x18)

inst_570:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x30ba02 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5aacdd and fs3 == 0 and fe3 == 0xfe and fm3 == 0x16f5bb and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f30ba02; op2val:0xbf5aacdd; op3val:0x7f16f5bb; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 496, x18)

inst_571:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15ce5c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x22ead4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3eac02 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f15ce5c; op2val:0xbfa2ead4; op3val:0x7f3eac02; valaddr_reg:x16; val_offset:732; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 732, x17, x15, 504, x18)

inst_572:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15ce5c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x22ead4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3eac02 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f15ce5c; op2val:0xbfa2ead4; op3val:0x7f3eac02; valaddr_reg:x16; val_offset:744; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 744, x17, x15, 512, x18)

inst_573:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15ce5c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x22ead4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3eac02 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f15ce5c; op2val:0xbfa2ead4; op3val:0x7f3eac02; valaddr_reg:x16; val_offset:756; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 756, x17, x15, 520, x18)

inst_574:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15ce5c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x22ead4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3eac02 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f15ce5c; op2val:0xbfa2ead4; op3val:0x7f3eac02; valaddr_reg:x16; val_offset:768; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 768, x17, x15, 528, x18)

inst_575:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15ce5c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x22ead4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3eac02 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f15ce5c; op2val:0xbfa2ead4; op3val:0x7f3eac02; valaddr_reg:x16; val_offset:780; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 780, x17, x15, 536, x18)

inst_576:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x14f81b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x58038b and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7b66cd and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e94f81b; op2val:0xbfd8038b; op3val:0x7efb66cd; valaddr_reg:x16; val_offset:792; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 792, x17, x15, 544, x18)

inst_577:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x14f81b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x58038b and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7b66cd and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e94f81b; op2val:0xbfd8038b; op3val:0x7efb66cd; valaddr_reg:x16; val_offset:804; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 804, x17, x15, 552, x18)

inst_578:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x14f81b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x58038b and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7b66cd and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e94f81b; op2val:0xbfd8038b; op3val:0x7efb66cd; valaddr_reg:x16; val_offset:816; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 816, x17, x15, 560, x18)

inst_579:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x14f81b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x58038b and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7b66cd and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e94f81b; op2val:0xbfd8038b; op3val:0x7efb66cd; valaddr_reg:x16; val_offset:828; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 828, x17, x15, 568, x18)

inst_580:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x14f81b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x58038b and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7b66cd and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e94f81b; op2val:0xbfd8038b; op3val:0x7efb66cd; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 576, x18)

inst_581:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15e839 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0213cf and fs3 == 0 and fe3 == 0xfe and fm3 == 0x18570d and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f15e839; op2val:0xbf8213cf; op3val:0x7f18570d; valaddr_reg:x16; val_offset:852; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 852, x17, x15, 584, x18)

inst_582:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15e839 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0213cf and fs3 == 0 and fe3 == 0xfe and fm3 == 0x18570d and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f15e839; op2val:0xbf8213cf; op3val:0x7f18570d; valaddr_reg:x16; val_offset:864; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 864, x17, x15, 592, x18)

inst_583:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15e839 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0213cf and fs3 == 0 and fe3 == 0xfe and fm3 == 0x18570d and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f15e839; op2val:0xbf8213cf; op3val:0x7f18570d; valaddr_reg:x16; val_offset:876; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 876, x17, x15, 600, x18)

inst_584:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15e839 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0213cf and fs3 == 0 and fe3 == 0xfe and fm3 == 0x18570d and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f15e839; op2val:0xbf8213cf; op3val:0x7f18570d; valaddr_reg:x16; val_offset:888; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 888, x17, x15, 608, x18)

inst_585:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15e839 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0213cf and fs3 == 0 and fe3 == 0xfe and fm3 == 0x18570d and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f15e839; op2val:0xbf8213cf; op3val:0x7f18570d; valaddr_reg:x16; val_offset:900; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 900, x17, x15, 616, x18)

inst_586:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1f4ea2 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x630bb6 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0d4a04 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1f4ea2; op2val:0xbee30bb6; op3val:0x7e8d4a04; valaddr_reg:x16; val_offset:912; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 912, x17, x15, 624, x18)

inst_587:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1f4ea2 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x630bb6 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0d4a04 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1f4ea2; op2val:0xbee30bb6; op3val:0x7e8d4a04; valaddr_reg:x16; val_offset:924; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 924, x17, x15, 632, x18)

inst_588:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1f4ea2 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x630bb6 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0d4a04 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1f4ea2; op2val:0xbee30bb6; op3val:0x7e8d4a04; valaddr_reg:x16; val_offset:936; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 936, x17, x15, 640, x18)

inst_589:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1f4ea2 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x630bb6 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0d4a04 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1f4ea2; op2val:0xbee30bb6; op3val:0x7e8d4a04; valaddr_reg:x16; val_offset:948; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 948, x17, x15, 648, x18)

inst_590:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1f4ea2 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x630bb6 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0d4a04 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1f4ea2; op2val:0xbee30bb6; op3val:0x7e8d4a04; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 656, x18)

inst_591:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c25fe and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3bcbbf and fs3 == 0 and fe3 == 0xfd and fm3 == 0x651810 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1c25fe; op2val:0xbf3bcbbf; op3val:0x7ee51810; valaddr_reg:x16; val_offset:972; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 972, x17, x15, 664, x18)

inst_592:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c25fe and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3bcbbf and fs3 == 0 and fe3 == 0xfd and fm3 == 0x651810 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1c25fe; op2val:0xbf3bcbbf; op3val:0x7ee51810; valaddr_reg:x16; val_offset:984; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 984, x17, x15, 672, x18)

inst_593:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c25fe and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3bcbbf and fs3 == 0 and fe3 == 0xfd and fm3 == 0x651810 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1c25fe; op2val:0xbf3bcbbf; op3val:0x7ee51810; valaddr_reg:x16; val_offset:996; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 996, x17, x15, 680, x18)

inst_594:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c25fe and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3bcbbf and fs3 == 0 and fe3 == 0xfd and fm3 == 0x651810 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1c25fe; op2val:0xbf3bcbbf; op3val:0x7ee51810; valaddr_reg:x16; val_offset:1008; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1008, x17, x15, 688, x18)

inst_595:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c25fe and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3bcbbf and fs3 == 0 and fe3 == 0xfd and fm3 == 0x651810 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1c25fe; op2val:0xbf3bcbbf; op3val:0x7ee51810; valaddr_reg:x16; val_offset:1020; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1020, x17, x15, 696, x18)

inst_596:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0f7f8a and fs2 == 1 and fe2 == 0x7d and fm2 == 0x2b31ba and fs3 == 0 and fe3 == 0xfc and fm3 == 0x3fec23 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0f7f8a; op2val:0xbeab31ba; op3val:0x7e3fec23; valaddr_reg:x16; val_offset:1032; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1032, x17, x15, 704, x18)

inst_597:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0f7f8a and fs2 == 1 and fe2 == 0x7d and fm2 == 0x2b31ba and fs3 == 0 and fe3 == 0xfc and fm3 == 0x3fec23 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0f7f8a; op2val:0xbeab31ba; op3val:0x7e3fec23; valaddr_reg:x16; val_offset:1044; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1044, x17, x15, 712, x18)

inst_598:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0f7f8a and fs2 == 1 and fe2 == 0x7d and fm2 == 0x2b31ba and fs3 == 0 and fe3 == 0xfc and fm3 == 0x3fec23 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0f7f8a; op2val:0xbeab31ba; op3val:0x7e3fec23; valaddr_reg:x16; val_offset:1056; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1056, x17, x15, 720, x18)

inst_599:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0f7f8a and fs2 == 1 and fe2 == 0x7d and fm2 == 0x2b31ba and fs3 == 0 and fe3 == 0xfc and fm3 == 0x3fec23 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0f7f8a; op2val:0xbeab31ba; op3val:0x7e3fec23; valaddr_reg:x16; val_offset:1068; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1068, x17, x15, 728, x18)

inst_600:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0f7f8a and fs2 == 1 and fe2 == 0x7d and fm2 == 0x2b31ba and fs3 == 0 and fe3 == 0xfc and fm3 == 0x3fec23 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0f7f8a; op2val:0xbeab31ba; op3val:0x7e3fec23; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 736, x18)

inst_601:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x395d94 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x518582 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x17b612 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f395d94; op2val:0xbf518582; op3val:0x7f17b612; valaddr_reg:x16; val_offset:1092; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1092, x17, x15, 744, x18)

inst_602:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x395d94 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x518582 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x17b612 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f395d94; op2val:0xbf518582; op3val:0x7f17b612; valaddr_reg:x16; val_offset:1104; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1104, x17, x15, 752, x18)

inst_603:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x395d94 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x518582 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x17b612 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f395d94; op2val:0xbf518582; op3val:0x7f17b612; valaddr_reg:x16; val_offset:1116; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1116, x17, x15, 760, x18)

inst_604:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x395d94 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x518582 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x17b612 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f395d94; op2val:0xbf518582; op3val:0x7f17b612; valaddr_reg:x16; val_offset:1128; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1128, x17, x15, 768, x18)

inst_605:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x395d94 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x518582 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x17b612 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f395d94; op2val:0xbf518582; op3val:0x7f17b612; valaddr_reg:x16; val_offset:1140; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1140, x17, x15, 776, x18)

inst_606:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1e21df and fs2 == 1 and fe2 == 0x7e and fm2 == 0x60a463 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0ac32e and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e9e21df; op2val:0xbf60a463; op3val:0x7e8ac32e; valaddr_reg:x16; val_offset:1152; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1152, x17, x15, 784, x18)

inst_607:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1e21df and fs2 == 1 and fe2 == 0x7e and fm2 == 0x60a463 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0ac32e and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e9e21df; op2val:0xbf60a463; op3val:0x7e8ac32e; valaddr_reg:x16; val_offset:1164; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1164, x17, x15, 792, x18)

inst_608:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1e21df and fs2 == 1 and fe2 == 0x7e and fm2 == 0x60a463 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0ac32e and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e9e21df; op2val:0xbf60a463; op3val:0x7e8ac32e; valaddr_reg:x16; val_offset:1176; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1176, x17, x15, 800, x18)

inst_609:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1e21df and fs2 == 1 and fe2 == 0x7e and fm2 == 0x60a463 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0ac32e and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e9e21df; op2val:0xbf60a463; op3val:0x7e8ac32e; valaddr_reg:x16; val_offset:1188; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1188, x17, x15, 808, x18)

inst_610:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1e21df and fs2 == 1 and fe2 == 0x7e and fm2 == 0x60a463 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0ac32e and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e9e21df; op2val:0xbf60a463; op3val:0x7e8ac32e; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 816, x18)

inst_611:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x54fd1e and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4d0497 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2a9283 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e54fd1e; op2val:0xc04d0497; op3val:0x7f2a9283; valaddr_reg:x16; val_offset:1212; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1212, x17, x15, 824, x18)

inst_612:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x54fd1e and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4d0497 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2a9283 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e54fd1e; op2val:0xc04d0497; op3val:0x7f2a9283; valaddr_reg:x16; val_offset:1224; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1224, x17, x15, 832, x18)

inst_613:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x54fd1e and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4d0497 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2a9283 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e54fd1e; op2val:0xc04d0497; op3val:0x7f2a9283; valaddr_reg:x16; val_offset:1236; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1236, x17, x15, 840, x18)

inst_614:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x54fd1e and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4d0497 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2a9283 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e54fd1e; op2val:0xc04d0497; op3val:0x7f2a9283; valaddr_reg:x16; val_offset:1248; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1248, x17, x15, 848, x18)

inst_615:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x54fd1e and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4d0497 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2a9283 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e54fd1e; op2val:0xc04d0497; op3val:0x7f2a9283; valaddr_reg:x16; val_offset:1260; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1260, x17, x15, 856, x18)

inst_616:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a693b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x208215 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x41a077 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1a693b; op2val:0xbf208215; op3val:0x7ec1a077; valaddr_reg:x16; val_offset:1272; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1272, x17, x15, 864, x18)

inst_617:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a693b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x208215 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x41a077 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1a693b; op2val:0xbf208215; op3val:0x7ec1a077; valaddr_reg:x16; val_offset:1284; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1284, x17, x15, 872, x18)

inst_618:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a693b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x208215 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x41a077 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1a693b; op2val:0xbf208215; op3val:0x7ec1a077; valaddr_reg:x16; val_offset:1296; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1296, x17, x15, 880, x18)

inst_619:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a693b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x208215 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x41a077 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1a693b; op2val:0xbf208215; op3val:0x7ec1a077; valaddr_reg:x16; val_offset:1308; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1308, x17, x15, 888, x18)

inst_620:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a693b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x208215 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x41a077 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1a693b; op2val:0xbf208215; op3val:0x7ec1a077; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 896, x18)

inst_621:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x526383 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x084582 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5ffbfb and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e526383; op2val:0xbf884582; op3val:0x7e5ffbfb; valaddr_reg:x16; val_offset:1332; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1332, x17, x15, 904, x18)

inst_622:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x526383 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x084582 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5ffbfb and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e526383; op2val:0xbf884582; op3val:0x7e5ffbfb; valaddr_reg:x16; val_offset:1344; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1344, x17, x15, 912, x18)

inst_623:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x526383 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x084582 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5ffbfb and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e526383; op2val:0xbf884582; op3val:0x7e5ffbfb; valaddr_reg:x16; val_offset:1356; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1356, x17, x15, 920, x18)

inst_624:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x526383 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x084582 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5ffbfb and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e526383; op2val:0xbf884582; op3val:0x7e5ffbfb; valaddr_reg:x16; val_offset:1368; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1368, x17, x15, 928, x18)

inst_625:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x526383 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x084582 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5ffbfb and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e526383; op2val:0xbf884582; op3val:0x7e5ffbfb; valaddr_reg:x16; val_offset:1380; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1380, x17, x15, 936, x18)

inst_626:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x33c6fa and fs2 == 1 and fe2 == 0x81 and fm2 == 0x62be6e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1f3b63 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7db3c6fa; op2val:0xc0e2be6e; op3val:0x7f1f3b63; valaddr_reg:x16; val_offset:1392; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1392, x17, x15, 944, x18)

inst_627:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x33c6fa and fs2 == 1 and fe2 == 0x81 and fm2 == 0x62be6e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1f3b63 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7db3c6fa; op2val:0xc0e2be6e; op3val:0x7f1f3b63; valaddr_reg:x16; val_offset:1404; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1404, x17, x15, 952, x18)

inst_628:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x33c6fa and fs2 == 1 and fe2 == 0x81 and fm2 == 0x62be6e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1f3b63 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7db3c6fa; op2val:0xc0e2be6e; op3val:0x7f1f3b63; valaddr_reg:x16; val_offset:1416; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1416, x17, x15, 960, x18)

inst_629:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x33c6fa and fs2 == 1 and fe2 == 0x81 and fm2 == 0x62be6e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1f3b63 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7db3c6fa; op2val:0xc0e2be6e; op3val:0x7f1f3b63; valaddr_reg:x16; val_offset:1428; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1428, x17, x15, 968, x18)

inst_630:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x33c6fa and fs2 == 1 and fe2 == 0x81 and fm2 == 0x62be6e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1f3b63 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7db3c6fa; op2val:0xc0e2be6e; op3val:0x7f1f3b63; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 976, x18)

inst_631:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5009d7 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x465633 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x212daa and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e5009d7; op2val:0xbfc65633; op3val:0x7ea12daa; valaddr_reg:x16; val_offset:1452; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1452, x17, x15, 984, x18)

inst_632:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5009d7 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x465633 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x212daa and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e5009d7; op2val:0xbfc65633; op3val:0x7ea12daa; valaddr_reg:x16; val_offset:1464; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1464, x17, x15, 992, x18)

inst_633:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5009d7 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x465633 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x212daa and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e5009d7; op2val:0xbfc65633; op3val:0x7ea12daa; valaddr_reg:x16; val_offset:1476; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1476, x17, x15, 1000, x18)

inst_634:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5009d7 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x465633 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x212daa and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e5009d7; op2val:0xbfc65633; op3val:0x7ea12daa; valaddr_reg:x16; val_offset:1488; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1488, x17, x15, 1008, x18)

inst_635:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5009d7 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x465633 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x212daa and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e5009d7; op2val:0xbfc65633; op3val:0x7ea12daa; valaddr_reg:x16; val_offset:1500; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1500, x17, x15, 1016, x18)

inst_636:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x52d2c7 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2aec85 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0cc2c0 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d52d2c7; op2val:0xc12aec85; op3val:0x7f0cc2c0; valaddr_reg:x16; val_offset:1512; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1512, x17, x15, 1024, x18)

inst_637:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x52d2c7 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2aec85 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0cc2c0 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d52d2c7; op2val:0xc12aec85; op3val:0x7f0cc2c0; valaddr_reg:x16; val_offset:1524; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1524, x17, x15, 1032, x18)

inst_638:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x52d2c7 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2aec85 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0cc2c0 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d52d2c7; op2val:0xc12aec85; op3val:0x7f0cc2c0; valaddr_reg:x16; val_offset:1536; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1536, x17, x15, 1040, x18)

inst_639:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x52d2c7 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2aec85 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0cc2c0 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d52d2c7; op2val:0xc12aec85; op3val:0x7f0cc2c0; valaddr_reg:x16; val_offset:1548; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1548, x17, x15, 1048, x18)

inst_640:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x52d2c7 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x2aec85 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0cc2c0 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d52d2c7; op2val:0xc12aec85; op3val:0x7f0cc2c0; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1056, x18)

inst_641:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20eedb and fs2 == 1 and fe2 == 0x7d and fm2 == 0x24389c and fs3 == 0 and fe3 == 0xfc and fm3 == 0x4e7935 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f20eedb; op2val:0xbea4389c; op3val:0x7e4e7935; valaddr_reg:x16; val_offset:1572; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1572, x17, x15, 1064, x18)

inst_642:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20eedb and fs2 == 1 and fe2 == 0x7d and fm2 == 0x24389c and fs3 == 0 and fe3 == 0xfc and fm3 == 0x4e7935 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f20eedb; op2val:0xbea4389c; op3val:0x7e4e7935; valaddr_reg:x16; val_offset:1584; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1584, x17, x15, 1072, x18)

inst_643:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20eedb and fs2 == 1 and fe2 == 0x7d and fm2 == 0x24389c and fs3 == 0 and fe3 == 0xfc and fm3 == 0x4e7935 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f20eedb; op2val:0xbea4389c; op3val:0x7e4e7935; valaddr_reg:x16; val_offset:1596; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1596, x17, x15, 1080, x18)

inst_644:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20eedb and fs2 == 1 and fe2 == 0x7d and fm2 == 0x24389c and fs3 == 0 and fe3 == 0xfc and fm3 == 0x4e7935 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f20eedb; op2val:0xbea4389c; op3val:0x7e4e7935; valaddr_reg:x16; val_offset:1608; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1608, x17, x15, 1088, x18)

inst_645:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20eedb and fs2 == 1 and fe2 == 0x7d and fm2 == 0x24389c and fs3 == 0 and fe3 == 0xfc and fm3 == 0x4e7935 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f20eedb; op2val:0xbea4389c; op3val:0x7e4e7935; valaddr_reg:x16; val_offset:1620; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1620, x17, x15, 1096, x18)

inst_646:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3c2348 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0a2fcd and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4b1c4d and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ebc2348; op2val:0xbf8a2fcd; op3val:0x7ecb1c4d; valaddr_reg:x16; val_offset:1632; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1632, x17, x15, 1104, x18)

inst_647:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3c2348 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0a2fcd and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4b1c4d and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ebc2348; op2val:0xbf8a2fcd; op3val:0x7ecb1c4d; valaddr_reg:x16; val_offset:1644; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1644, x17, x15, 1112, x18)

inst_648:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3c2348 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0a2fcd and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4b1c4d and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ebc2348; op2val:0xbf8a2fcd; op3val:0x7ecb1c4d; valaddr_reg:x16; val_offset:1656; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1656, x17, x15, 1120, x18)

inst_649:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3c2348 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0a2fcd and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4b1c4d and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ebc2348; op2val:0xbf8a2fcd; op3val:0x7ecb1c4d; valaddr_reg:x16; val_offset:1668; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1668, x17, x15, 1128, x18)

inst_650:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3c2348 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0a2fcd and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4b1c4d and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ebc2348; op2val:0xbf8a2fcd; op3val:0x7ecb1c4d; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1136, x18)

inst_651:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0b140c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x171595 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x24291a and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8b140c; op2val:0xbf971595; op3val:0x7ea4291a; valaddr_reg:x16; val_offset:1692; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1692, x17, x15, 1144, x18)

inst_652:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0b140c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x171595 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x24291a and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8b140c; op2val:0xbf971595; op3val:0x7ea4291a; valaddr_reg:x16; val_offset:1704; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1704, x17, x15, 1152, x18)

inst_653:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0b140c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x171595 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x24291a and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8b140c; op2val:0xbf971595; op3val:0x7ea4291a; valaddr_reg:x16; val_offset:1716; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1716, x17, x15, 1160, x18)

inst_654:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0b140c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x171595 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x24291a and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8b140c; op2val:0xbf971595; op3val:0x7ea4291a; valaddr_reg:x16; val_offset:1728; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1728, x17, x15, 1168, x18)

inst_655:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0b140c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x171595 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x24291a and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8b140c; op2val:0xbf971595; op3val:0x7ea4291a; valaddr_reg:x16; val_offset:1740; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1740, x17, x15, 1176, x18)

inst_656:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d9df6 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3ca571 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x684bbc and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1d9df6; op2val:0xbf3ca571; op3val:0x7ee84bbc; valaddr_reg:x16; val_offset:1752; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1752, x17, x15, 1184, x18)

inst_657:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d9df6 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3ca571 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x684bbc and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1d9df6; op2val:0xbf3ca571; op3val:0x7ee84bbc; valaddr_reg:x16; val_offset:1764; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1764, x17, x15, 1192, x18)

inst_658:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d9df6 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3ca571 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x684bbc and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1d9df6; op2val:0xbf3ca571; op3val:0x7ee84bbc; valaddr_reg:x16; val_offset:1776; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1776, x17, x15, 1200, x18)

inst_659:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d9df6 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3ca571 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x684bbc and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1d9df6; op2val:0xbf3ca571; op3val:0x7ee84bbc; valaddr_reg:x16; val_offset:1788; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1788, x17, x15, 1208, x18)

inst_660:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d9df6 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3ca571 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x684bbc and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1d9df6; op2val:0xbf3ca571; op3val:0x7ee84bbc; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1216, x18)

inst_661:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33b8ad and fs2 == 1 and fe2 == 0x7e and fm2 == 0x471c14 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0bc845 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f33b8ad; op2val:0xbf471c14; op3val:0x7f0bc845; valaddr_reg:x16; val_offset:1812; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1812, x17, x15, 1224, x18)

inst_662:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33b8ad and fs2 == 1 and fe2 == 0x7e and fm2 == 0x471c14 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0bc845 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f33b8ad; op2val:0xbf471c14; op3val:0x7f0bc845; valaddr_reg:x16; val_offset:1824; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1824, x17, x15, 1232, x18)

inst_663:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33b8ad and fs2 == 1 and fe2 == 0x7e and fm2 == 0x471c14 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0bc845 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f33b8ad; op2val:0xbf471c14; op3val:0x7f0bc845; valaddr_reg:x16; val_offset:1836; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1836, x17, x15, 1240, x18)

inst_664:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33b8ad and fs2 == 1 and fe2 == 0x7e and fm2 == 0x471c14 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0bc845 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f33b8ad; op2val:0xbf471c14; op3val:0x7f0bc845; valaddr_reg:x16; val_offset:1848; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1848, x17, x15, 1248, x18)

inst_665:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33b8ad and fs2 == 1 and fe2 == 0x7e and fm2 == 0x471c14 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0bc845 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f33b8ad; op2val:0xbf471c14; op3val:0x7f0bc845; valaddr_reg:x16; val_offset:1860; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1860, x17, x15, 1256, x18)

inst_666:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x21c953 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4fe858 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0364a1 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f21c953; op2val:0xbf4fe858; op3val:0x7f0364a1; valaddr_reg:x16; val_offset:1872; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1872, x17, x15, 1264, x18)

inst_667:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x21c953 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4fe858 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0364a1 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f21c953; op2val:0xbf4fe858; op3val:0x7f0364a1; valaddr_reg:x16; val_offset:1884; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1884, x17, x15, 1272, x18)

inst_668:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x21c953 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4fe858 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0364a1 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f21c953; op2val:0xbf4fe858; op3val:0x7f0364a1; valaddr_reg:x16; val_offset:1896; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1896, x17, x15, 1280, x18)

inst_669:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x21c953 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4fe858 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0364a1 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f21c953; op2val:0xbf4fe858; op3val:0x7f0364a1; valaddr_reg:x16; val_offset:1908; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1908, x17, x15, 1288, x18)

inst_670:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x21c953 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4fe858 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0364a1 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f21c953; op2val:0xbf4fe858; op3val:0x7f0364a1; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1296, x18)

inst_671:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5f19b2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x070f39 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6b67a3 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e5f19b2; op2val:0xc0070f39; op3val:0x7eeb67a3; valaddr_reg:x16; val_offset:1932; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1932, x17, x15, 1304, x18)

inst_672:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5f19b2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x070f39 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6b67a3 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e5f19b2; op2val:0xc0070f39; op3val:0x7eeb67a3; valaddr_reg:x16; val_offset:1944; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1944, x17, x15, 1312, x18)

inst_673:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5f19b2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x070f39 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6b67a3 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e5f19b2; op2val:0xc0070f39; op3val:0x7eeb67a3; valaddr_reg:x16; val_offset:1956; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1956, x17, x15, 1320, x18)

inst_674:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5f19b2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x070f39 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6b67a3 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e5f19b2; op2val:0xc0070f39; op3val:0x7eeb67a3; valaddr_reg:x16; val_offset:1968; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1968, x17, x15, 1328, x18)

inst_675:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5f19b2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x070f39 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6b67a3 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e5f19b2; op2val:0xc0070f39; op3val:0x7eeb67a3; valaddr_reg:x16; val_offset:1980; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1980, x17, x15, 1336, x18)

inst_676:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x22a277 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x3c9501 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x6f9bf2 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f22a277; op2val:0xbebc9501; op3val:0x7e6f9bf2; valaddr_reg:x16; val_offset:1992; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1992, x17, x15, 1344, x18)

inst_677:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x22a277 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x3c9501 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x6f9bf2 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f22a277; op2val:0xbebc9501; op3val:0x7e6f9bf2; valaddr_reg:x16; val_offset:2004; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 2004, x17, x15, 1352, x18)

inst_678:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x22a277 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x3c9501 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x6f9bf2 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f22a277; op2val:0xbebc9501; op3val:0x7e6f9bf2; valaddr_reg:x16; val_offset:2016; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 2016, x17, x15, 1360, x18)

inst_679:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x22a277 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x3c9501 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x6f9bf2 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f22a277; op2val:0xbebc9501; op3val:0x7e6f9bf2; valaddr_reg:x16; val_offset:2028; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 2028, x17, x15, 1368, x18)
addi x16,x16,2040

inst_680:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x22a277 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x3c9501 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x6f9bf2 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f22a277; op2val:0xbebc9501; op3val:0x7e6f9bf2; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 1376, x18)

inst_681:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0e11bf and fs2 == 1 and fe2 == 0x80 and fm2 == 0x25d24d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x380c4c and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8e11bf; op2val:0xc025d24d; op3val:0x7f380c4c; valaddr_reg:x16; val_offset:12; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 12, x17, x15, 1384, x18)

inst_682:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0e11bf and fs2 == 1 and fe2 == 0x80 and fm2 == 0x25d24d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x380c4c and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8e11bf; op2val:0xc025d24d; op3val:0x7f380c4c; valaddr_reg:x16; val_offset:24; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 24, x17, x15, 1392, x18)

inst_683:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0e11bf and fs2 == 1 and fe2 == 0x80 and fm2 == 0x25d24d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x380c4c and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8e11bf; op2val:0xc025d24d; op3val:0x7f380c4c; valaddr_reg:x16; val_offset:36; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 36, x17, x15, 1400, x18)

inst_684:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0e11bf and fs2 == 1 and fe2 == 0x80 and fm2 == 0x25d24d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x380c4c and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8e11bf; op2val:0xc025d24d; op3val:0x7f380c4c; valaddr_reg:x16; val_offset:48; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 48, x17, x15, 1408, x18)

inst_685:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0e11bf and fs2 == 1 and fe2 == 0x80 and fm2 == 0x25d24d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x380c4c and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8e11bf; op2val:0xc025d24d; op3val:0x7f380c4c; valaddr_reg:x16; val_offset:60; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 60, x17, x15, 1416, x18)

inst_686:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2260a9 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x6d0137 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x165442 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2260a9; op2val:0xbe6d0137; op3val:0x7e165442; valaddr_reg:x16; val_offset:72; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 72, x17, x15, 1424, x18)

inst_687:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2260a9 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x6d0137 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x165442 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2260a9; op2val:0xbe6d0137; op3val:0x7e165442; valaddr_reg:x16; val_offset:84; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 84, x17, x15, 1432, x18)

inst_688:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2260a9 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x6d0137 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x165442 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2260a9; op2val:0xbe6d0137; op3val:0x7e165442; valaddr_reg:x16; val_offset:96; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 96, x17, x15, 1440, x18)

inst_689:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2260a9 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x6d0137 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x165442 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2260a9; op2val:0xbe6d0137; op3val:0x7e165442; valaddr_reg:x16; val_offset:108; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 108, x17, x15, 1448, x18)

inst_690:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2260a9 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x6d0137 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x165442 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2260a9; op2val:0xbe6d0137; op3val:0x7e165442; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 1456, x18)

inst_691:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x166373 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x415f53 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x6331f4 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f166373; op2val:0xbec15f53; op3val:0x7e6331f4; valaddr_reg:x16; val_offset:132; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 132, x17, x15, 1464, x18)

inst_692:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x166373 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x415f53 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x6331f4 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f166373; op2val:0xbec15f53; op3val:0x7e6331f4; valaddr_reg:x16; val_offset:144; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 144, x17, x15, 1472, x18)

inst_693:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x166373 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x415f53 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x6331f4 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f166373; op2val:0xbec15f53; op3val:0x7e6331f4; valaddr_reg:x16; val_offset:156; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 156, x17, x15, 1480, x18)

inst_694:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x166373 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x415f53 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x6331f4 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f166373; op2val:0xbec15f53; op3val:0x7e6331f4; valaddr_reg:x16; val_offset:168; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 168, x17, x15, 1488, x18)

inst_695:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x166373 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x415f53 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x6331f4 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f166373; op2val:0xbec15f53; op3val:0x7e6331f4; valaddr_reg:x16; val_offset:180; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 180, x17, x15, 1496, x18)

inst_696:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x700b05 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x43f817 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x37c106 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef00b05; op2val:0xbfc3f817; op3val:0x7f37c106; valaddr_reg:x16; val_offset:192; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 192, x17, x15, 1504, x18)

inst_697:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x700b05 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x43f817 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x37c106 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef00b05; op2val:0xbfc3f817; op3val:0x7f37c106; valaddr_reg:x16; val_offset:204; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 204, x17, x15, 1512, x18)

inst_698:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x700b05 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x43f817 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x37c106 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef00b05; op2val:0xbfc3f817; op3val:0x7f37c106; valaddr_reg:x16; val_offset:216; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 216, x17, x15, 1520, x18)

inst_699:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x700b05 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x43f817 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x37c106 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef00b05; op2val:0xbfc3f817; op3val:0x7f37c106; valaddr_reg:x16; val_offset:228; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 228, x17, x15, 1528, x18)

inst_700:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x700b05 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x43f817 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x37c106 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef00b05; op2val:0xbfc3f817; op3val:0x7f37c106; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 1536, x18)

inst_701:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x234aea and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1b66c2 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x463fd0 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f234aea; op2val:0xbf1b66c2; op3val:0x7ec63fd0; valaddr_reg:x16; val_offset:252; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 252, x17, x15, 1544, x18)

inst_702:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x234aea and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1b66c2 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x463fd0 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f234aea; op2val:0xbf1b66c2; op3val:0x7ec63fd0; valaddr_reg:x16; val_offset:264; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 264, x17, x15, 1552, x18)

inst_703:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x234aea and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1b66c2 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x463fd0 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f234aea; op2val:0xbf1b66c2; op3val:0x7ec63fd0; valaddr_reg:x16; val_offset:276; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 276, x17, x15, 1560, x18)

inst_704:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x234aea and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1b66c2 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x463fd0 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f234aea; op2val:0xbf1b66c2; op3val:0x7ec63fd0; valaddr_reg:x16; val_offset:288; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 288, x17, x15, 1568, x18)

inst_705:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x234aea and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1b66c2 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x463fd0 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f234aea; op2val:0xbf1b66c2; op3val:0x7ec63fd0; valaddr_reg:x16; val_offset:300; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 300, x17, x15, 1576, x18)

inst_706:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0dcb1e and fs2 == 1 and fe2 == 0x80 and fm2 == 0x232b7a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x34c0d2 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8dcb1e; op2val:0xc0232b7a; op3val:0x7f34c0d2; valaddr_reg:x16; val_offset:312; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 312, x17, x15, 1584, x18)

inst_707:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0dcb1e and fs2 == 1 and fe2 == 0x80 and fm2 == 0x232b7a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x34c0d2 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8dcb1e; op2val:0xc0232b7a; op3val:0x7f34c0d2; valaddr_reg:x16; val_offset:324; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 324, x17, x15, 1592, x18)

inst_708:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0dcb1e and fs2 == 1 and fe2 == 0x80 and fm2 == 0x232b7a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x34c0d2 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8dcb1e; op2val:0xc0232b7a; op3val:0x7f34c0d2; valaddr_reg:x16; val_offset:336; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 336, x17, x15, 1600, x18)

inst_709:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0dcb1e and fs2 == 1 and fe2 == 0x80 and fm2 == 0x232b7a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x34c0d2 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8dcb1e; op2val:0xc0232b7a; op3val:0x7f34c0d2; valaddr_reg:x16; val_offset:348; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 348, x17, x15, 1608, x18)

inst_710:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0dcb1e and fs2 == 1 and fe2 == 0x80 and fm2 == 0x232b7a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x34c0d2 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8dcb1e; op2val:0xc0232b7a; op3val:0x7f34c0d2; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 1616, x18)

inst_711:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x522d92 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x646f26 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3b8bd7 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ed22d92; op2val:0xbfe46f26; op3val:0x7f3b8bd7; valaddr_reg:x16; val_offset:372; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 372, x17, x15, 1624, x18)

inst_712:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x522d92 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x646f26 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3b8bd7 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ed22d92; op2val:0xbfe46f26; op3val:0x7f3b8bd7; valaddr_reg:x16; val_offset:384; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 384, x17, x15, 1632, x18)

inst_713:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x522d92 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x646f26 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3b8bd7 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ed22d92; op2val:0xbfe46f26; op3val:0x7f3b8bd7; valaddr_reg:x16; val_offset:396; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 396, x17, x15, 1640, x18)

inst_714:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x522d92 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x646f26 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3b8bd7 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ed22d92; op2val:0xbfe46f26; op3val:0x7f3b8bd7; valaddr_reg:x16; val_offset:408; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 408, x17, x15, 1648, x18)

inst_715:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x522d92 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x646f26 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3b8bd7 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ed22d92; op2val:0xbfe46f26; op3val:0x7f3b8bd7; valaddr_reg:x16; val_offset:420; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 420, x17, x15, 1656, x18)

inst_716:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2bc6f2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x29a240 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x63a66a and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e2bc6f2; op2val:0xbfa9a240; op3val:0x7e63a66a; valaddr_reg:x16; val_offset:432; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 432, x17, x15, 1664, x18)

inst_717:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2bc6f2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x29a240 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x63a66a and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e2bc6f2; op2val:0xbfa9a240; op3val:0x7e63a66a; valaddr_reg:x16; val_offset:444; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 444, x17, x15, 1672, x18)

inst_718:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2bc6f2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x29a240 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x63a66a and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e2bc6f2; op2val:0xbfa9a240; op3val:0x7e63a66a; valaddr_reg:x16; val_offset:456; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 456, x17, x15, 1680, x18)

inst_719:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2bc6f2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x29a240 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x63a66a and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e2bc6f2; op2val:0xbfa9a240; op3val:0x7e63a66a; valaddr_reg:x16; val_offset:468; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 468, x17, x15, 1688, x18)

inst_720:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2bc6f2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x29a240 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x63a66a and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e2bc6f2; op2val:0xbfa9a240; op3val:0x7e63a66a; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1696, x18)

inst_721:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x321868 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0778f4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3c7e09 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f321868; op2val:0xbf8778f4; op3val:0x7f3c7e09; valaddr_reg:x16; val_offset:492; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 492, x17, x15, 1704, x18)

inst_722:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x321868 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0778f4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3c7e09 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f321868; op2val:0xbf8778f4; op3val:0x7f3c7e09; valaddr_reg:x16; val_offset:504; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 504, x17, x15, 1712, x18)

inst_723:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x321868 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0778f4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3c7e09 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f321868; op2val:0xbf8778f4; op3val:0x7f3c7e09; valaddr_reg:x16; val_offset:516; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 516, x17, x15, 1720, x18)

inst_724:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x321868 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0778f4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3c7e09 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f321868; op2val:0xbf8778f4; op3val:0x7f3c7e09; valaddr_reg:x16; val_offset:528; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 528, x17, x15, 1728, x18)

inst_725:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x321868 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0778f4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3c7e09 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f321868; op2val:0xbf8778f4; op3val:0x7f3c7e09; valaddr_reg:x16; val_offset:540; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 540, x17, x15, 1736, x18)

inst_726:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2e7fda and fs2 == 1 and fe2 == 0x7e and fm2 == 0x515d9b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0eb630 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2e7fda; op2val:0xbf515d9b; op3val:0x7f0eb630; valaddr_reg:x16; val_offset:552; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 552, x17, x15, 1744, x18)

inst_727:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2e7fda and fs2 == 1 and fe2 == 0x7e and fm2 == 0x515d9b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0eb630 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2e7fda; op2val:0xbf515d9b; op3val:0x7f0eb630; valaddr_reg:x16; val_offset:564; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 564, x17, x15, 1752, x18)

inst_728:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2e7fda and fs2 == 1 and fe2 == 0x7e and fm2 == 0x515d9b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0eb630 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2e7fda; op2val:0xbf515d9b; op3val:0x7f0eb630; valaddr_reg:x16; val_offset:576; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 576, x17, x15, 1760, x18)

inst_729:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2e7fda and fs2 == 1 and fe2 == 0x7e and fm2 == 0x515d9b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0eb630 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2e7fda; op2val:0xbf515d9b; op3val:0x7f0eb630; valaddr_reg:x16; val_offset:588; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 588, x17, x15, 1768, x18)

inst_730:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2e7fda and fs2 == 1 and fe2 == 0x7e and fm2 == 0x515d9b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0eb630 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2e7fda; op2val:0xbf515d9b; op3val:0x7f0eb630; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1776, x18)

inst_731:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x244bd3 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x37709b and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6b74f1 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ba44bd3; op2val:0xc2b7709b; op3val:0x7eeb74f1; valaddr_reg:x16; val_offset:612; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 612, x17, x15, 1784, x18)

inst_732:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x244bd3 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x37709b and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6b74f1 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ba44bd3; op2val:0xc2b7709b; op3val:0x7eeb74f1; valaddr_reg:x16; val_offset:624; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 624, x17, x15, 1792, x18)

inst_733:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x244bd3 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x37709b and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6b74f1 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ba44bd3; op2val:0xc2b7709b; op3val:0x7eeb74f1; valaddr_reg:x16; val_offset:636; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 636, x17, x15, 1800, x18)

inst_734:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x244bd3 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x37709b and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6b74f1 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ba44bd3; op2val:0xc2b7709b; op3val:0x7eeb74f1; valaddr_reg:x16; val_offset:648; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 648, x17, x15, 1808, x18)

inst_735:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x244bd3 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x37709b and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6b74f1 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ba44bd3; op2val:0xc2b7709b; op3val:0x7eeb74f1; valaddr_reg:x16; val_offset:660; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 660, x17, x15, 1816, x18)

inst_736:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0ed6ae and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5ebb57 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x788d65 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0ed6ae; op2val:0xbf5ebb57; op3val:0x7ef88d65; valaddr_reg:x16; val_offset:672; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 672, x17, x15, 1824, x18)

inst_737:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0ed6ae and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5ebb57 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x788d65 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0ed6ae; op2val:0xbf5ebb57; op3val:0x7ef88d65; valaddr_reg:x16; val_offset:684; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 684, x17, x15, 1832, x18)

inst_738:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0ed6ae and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5ebb57 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x788d65 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0ed6ae; op2val:0xbf5ebb57; op3val:0x7ef88d65; valaddr_reg:x16; val_offset:696; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 696, x17, x15, 1840, x18)

inst_739:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0ed6ae and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5ebb57 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x788d65 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0ed6ae; op2val:0xbf5ebb57; op3val:0x7ef88d65; valaddr_reg:x16; val_offset:708; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 708, x17, x15, 1848, x18)

inst_740:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0ed6ae and fs2 == 1 and fe2 == 0x7e and fm2 == 0x5ebb57 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x788d65 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0ed6ae; op2val:0xbf5ebb57; op3val:0x7ef88d65; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1856, x18)

inst_741:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3034a2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x12a75c and fs3 == 0 and fe3 == 0xfd and fm3 == 0x49e26c and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e3034a2; op2val:0xc012a75c; op3val:0x7ec9e26c; valaddr_reg:x16; val_offset:732; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 732, x17, x15, 1864, x18)

inst_742:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3034a2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x12a75c and fs3 == 0 and fe3 == 0xfd and fm3 == 0x49e26c and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e3034a2; op2val:0xc012a75c; op3val:0x7ec9e26c; valaddr_reg:x16; val_offset:744; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 744, x17, x15, 1872, x18)

inst_743:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3034a2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x12a75c and fs3 == 0 and fe3 == 0xfd and fm3 == 0x49e26c and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e3034a2; op2val:0xc012a75c; op3val:0x7ec9e26c; valaddr_reg:x16; val_offset:756; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 756, x17, x15, 1880, x18)

inst_744:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3034a2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x12a75c and fs3 == 0 and fe3 == 0xfd and fm3 == 0x49e26c and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e3034a2; op2val:0xc012a75c; op3val:0x7ec9e26c; valaddr_reg:x16; val_offset:768; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 768, x17, x15, 1888, x18)

inst_745:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3034a2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x12a75c and fs3 == 0 and fe3 == 0xfd and fm3 == 0x49e26c and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e3034a2; op2val:0xc012a75c; op3val:0x7ec9e26c; valaddr_reg:x16; val_offset:780; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 780, x17, x15, 1896, x18)

inst_746:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x07648d and fs2 == 1 and fe2 == 0x7d and fm2 == 0x11b440 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x1a1e91 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f07648d; op2val:0xbe91b440; op3val:0x7e1a1e91; valaddr_reg:x16; val_offset:792; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 792, x17, x15, 1904, x18)

inst_747:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x07648d and fs2 == 1 and fe2 == 0x7d and fm2 == 0x11b440 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x1a1e91 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f07648d; op2val:0xbe91b440; op3val:0x7e1a1e91; valaddr_reg:x16; val_offset:804; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 804, x17, x15, 1912, x18)

inst_748:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x07648d and fs2 == 1 and fe2 == 0x7d and fm2 == 0x11b440 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x1a1e91 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f07648d; op2val:0xbe91b440; op3val:0x7e1a1e91; valaddr_reg:x16; val_offset:816; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 816, x17, x15, 1920, x18)

inst_749:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x07648d and fs2 == 1 and fe2 == 0x7d and fm2 == 0x11b440 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x1a1e91 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f07648d; op2val:0xbe91b440; op3val:0x7e1a1e91; valaddr_reg:x16; val_offset:828; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 828, x17, x15, 1928, x18)

inst_750:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x07648d and fs2 == 1 and fe2 == 0x7d and fm2 == 0x11b440 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x1a1e91 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f07648d; op2val:0xbe91b440; op3val:0x7e1a1e91; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1936, x18)

inst_751:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1114c8 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2a450f and fs3 == 0 and fe3 == 0xfd and fm3 == 0x40fde0 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1114c8; op2val:0xbf2a450f; op3val:0x7ec0fde0; valaddr_reg:x16; val_offset:852; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 852, x17, x15, 1944, x18)

inst_752:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1114c8 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2a450f and fs3 == 0 and fe3 == 0xfd and fm3 == 0x40fde0 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1114c8; op2val:0xbf2a450f; op3val:0x7ec0fde0; valaddr_reg:x16; val_offset:864; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 864, x17, x15, 1952, x18)

inst_753:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1114c8 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2a450f and fs3 == 0 and fe3 == 0xfd and fm3 == 0x40fde0 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1114c8; op2val:0xbf2a450f; op3val:0x7ec0fde0; valaddr_reg:x16; val_offset:876; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 876, x17, x15, 1960, x18)

inst_754:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1114c8 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2a450f and fs3 == 0 and fe3 == 0xfd and fm3 == 0x40fde0 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1114c8; op2val:0xbf2a450f; op3val:0x7ec0fde0; valaddr_reg:x16; val_offset:888; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 888, x17, x15, 1968, x18)

inst_755:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1114c8 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2a450f and fs3 == 0 and fe3 == 0xfd and fm3 == 0x40fde0 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1114c8; op2val:0xbf2a450f; op3val:0x7ec0fde0; valaddr_reg:x16; val_offset:900; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 900, x17, x15, 1976, x18)

inst_756:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0f5d14 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x25e6e4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x39d098 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d8f5d14; op2val:0xc125e6e4; op3val:0x7f39d098; valaddr_reg:x16; val_offset:912; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 912, x17, x15, 1984, x18)

inst_757:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0f5d14 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x25e6e4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x39d098 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d8f5d14; op2val:0xc125e6e4; op3val:0x7f39d098; valaddr_reg:x16; val_offset:924; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 924, x17, x15, 1992, x18)

inst_758:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0f5d14 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x25e6e4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x39d098 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d8f5d14; op2val:0xc125e6e4; op3val:0x7f39d098; valaddr_reg:x16; val_offset:936; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 936, x17, x15, 2000, x18)

inst_759:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0f5d14 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x25e6e4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x39d098 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d8f5d14; op2val:0xc125e6e4; op3val:0x7f39d098; valaddr_reg:x16; val_offset:948; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 948, x17, x15, 2008, x18)

inst_760:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0f5d14 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x25e6e4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x39d098 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d8f5d14; op2val:0xc125e6e4; op3val:0x7f39d098; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 2016, x18)

inst_761:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0bd04c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1804d2 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x260c9f and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8bd04c; op2val:0xbf9804d2; op3val:0x7ea60c9f; valaddr_reg:x16; val_offset:972; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 972, x17, x15, 2024, x18)
RVTEST_SIGBASE(x15,signature_x15_4)

inst_762:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0bd04c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1804d2 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x260c9f and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8bd04c; op2val:0xbf9804d2; op3val:0x7ea60c9f; valaddr_reg:x16; val_offset:984; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 984, x17, x15, 0, x18)

inst_763:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0bd04c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1804d2 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x260c9f and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8bd04c; op2val:0xbf9804d2; op3val:0x7ea60c9f; valaddr_reg:x16; val_offset:996; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 996, x17, x15, 8, x18)

inst_764:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0bd04c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1804d2 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x260c9f and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8bd04c; op2val:0xbf9804d2; op3val:0x7ea60c9f; valaddr_reg:x16; val_offset:1008; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1008, x17, x15, 16, x18)

inst_765:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0bd04c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1804d2 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x260c9f and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8bd04c; op2val:0xbf9804d2; op3val:0x7ea60c9f; valaddr_reg:x16; val_offset:1020; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1020, x17, x15, 24, x18)

inst_766:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6ad2b2 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x177e4a and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x0af61f and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eead2b2; op2val:0xbd177e4a; op3val:0x7c8af61f; valaddr_reg:x16; val_offset:1032; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1032, x17, x15, 32, x18)

inst_767:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6ad2b2 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x177e4a and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x0af61f and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eead2b2; op2val:0xbd177e4a; op3val:0x7c8af61f; valaddr_reg:x16; val_offset:1044; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1044, x17, x15, 40, x18)

inst_768:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6ad2b2 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x177e4a and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x0af61f and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eead2b2; op2val:0xbd177e4a; op3val:0x7c8af61f; valaddr_reg:x16; val_offset:1056; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1056, x17, x15, 48, x18)

inst_769:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6ad2b2 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x177e4a and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x0af61f and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eead2b2; op2val:0xbd177e4a; op3val:0x7c8af61f; valaddr_reg:x16; val_offset:1068; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1068, x17, x15, 56, x18)

inst_770:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6ad2b2 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x177e4a and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x0af61f and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eead2b2; op2val:0xbd177e4a; op3val:0x7c8af61f; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 64, x18)

inst_771:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b3a21 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7a0fde and fs3 == 0 and fe3 == 0xfe and fm3 == 0x07ff65 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0b3a21; op2val:0xbf7a0fde; op3val:0x7f07ff65; valaddr_reg:x16; val_offset:1092; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1092, x17, x15, 72, x18)

inst_772:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b3a21 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7a0fde and fs3 == 0 and fe3 == 0xfe and fm3 == 0x07ff65 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0b3a21; op2val:0xbf7a0fde; op3val:0x7f07ff65; valaddr_reg:x16; val_offset:1104; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1104, x17, x15, 80, x18)

inst_773:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b3a21 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7a0fde and fs3 == 0 and fe3 == 0xfe and fm3 == 0x07ff65 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0b3a21; op2val:0xbf7a0fde; op3val:0x7f07ff65; valaddr_reg:x16; val_offset:1116; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1116, x17, x15, 88, x18)

inst_774:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b3a21 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7a0fde and fs3 == 0 and fe3 == 0xfe and fm3 == 0x07ff65 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0b3a21; op2val:0xbf7a0fde; op3val:0x7f07ff65; valaddr_reg:x16; val_offset:1128; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1128, x17, x15, 96, x18)

inst_775:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b3a21 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7a0fde and fs3 == 0 and fe3 == 0xfe and fm3 == 0x07ff65 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0b3a21; op2val:0xbf7a0fde; op3val:0x7f07ff65; valaddr_reg:x16; val_offset:1140; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1140, x17, x15, 104, x18)

inst_776:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b5958 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x7842da and fs3 == 0 and fe3 == 0xfb and fm3 == 0x262b4d and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eab5958; op2val:0xbe7842da; op3val:0x7da62b4d; valaddr_reg:x16; val_offset:1152; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1152, x17, x15, 112, x18)

inst_777:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b5958 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x7842da and fs3 == 0 and fe3 == 0xfb and fm3 == 0x262b4d and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eab5958; op2val:0xbe7842da; op3val:0x7da62b4d; valaddr_reg:x16; val_offset:1164; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1164, x17, x15, 120, x18)

inst_778:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b5958 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x7842da and fs3 == 0 and fe3 == 0xfb and fm3 == 0x262b4d and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eab5958; op2val:0xbe7842da; op3val:0x7da62b4d; valaddr_reg:x16; val_offset:1176; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1176, x17, x15, 128, x18)

inst_779:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b5958 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x7842da and fs3 == 0 and fe3 == 0xfb and fm3 == 0x262b4d and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eab5958; op2val:0xbe7842da; op3val:0x7da62b4d; valaddr_reg:x16; val_offset:1188; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1188, x17, x15, 136, x18)

inst_780:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b5958 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x7842da and fs3 == 0 and fe3 == 0xfb and fm3 == 0x262b4d and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eab5958; op2val:0xbe7842da; op3val:0x7da62b4d; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 144, x18)

inst_781:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2d32f7 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x60337c and fs3 == 0 and fe3 == 0xfc and fm3 == 0x17af6d and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e2d32f7; op2val:0xbf60337c; op3val:0x7e17af6d; valaddr_reg:x16; val_offset:1212; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1212, x17, x15, 152, x18)

inst_782:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2d32f7 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x60337c and fs3 == 0 and fe3 == 0xfc and fm3 == 0x17af6d and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e2d32f7; op2val:0xbf60337c; op3val:0x7e17af6d; valaddr_reg:x16; val_offset:1224; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1224, x17, x15, 160, x18)

inst_783:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2d32f7 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x60337c and fs3 == 0 and fe3 == 0xfc and fm3 == 0x17af6d and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e2d32f7; op2val:0xbf60337c; op3val:0x7e17af6d; valaddr_reg:x16; val_offset:1236; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1236, x17, x15, 168, x18)

inst_784:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2d32f7 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x60337c and fs3 == 0 and fe3 == 0xfc and fm3 == 0x17af6d and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e2d32f7; op2val:0xbf60337c; op3val:0x7e17af6d; valaddr_reg:x16; val_offset:1248; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1248, x17, x15, 176, x18)

inst_785:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2d32f7 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x60337c and fs3 == 0 and fe3 == 0xfc and fm3 == 0x17af6d and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e2d32f7; op2val:0xbf60337c; op3val:0x7e17af6d; valaddr_reg:x16; val_offset:1260; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1260, x17, x15, 184, x18)

inst_786:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x17337c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6a94aa and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0a8cde and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e97337c; op2val:0xbf6a94aa; op3val:0x7e8a8cde; valaddr_reg:x16; val_offset:1272; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1272, x17, x15, 192, x18)

inst_787:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x17337c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6a94aa and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0a8cde and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e97337c; op2val:0xbf6a94aa; op3val:0x7e8a8cde; valaddr_reg:x16; val_offset:1284; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1284, x17, x15, 200, x18)

inst_788:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x17337c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6a94aa and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0a8cde and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e97337c; op2val:0xbf6a94aa; op3val:0x7e8a8cde; valaddr_reg:x16; val_offset:1296; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1296, x17, x15, 208, x18)

inst_789:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x17337c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6a94aa and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0a8cde and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e97337c; op2val:0xbf6a94aa; op3val:0x7e8a8cde; valaddr_reg:x16; val_offset:1308; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1308, x17, x15, 216, x18)

inst_790:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x17337c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6a94aa and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0a8cde and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e97337c; op2val:0xbf6a94aa; op3val:0x7e8a8cde; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 224, x18)

inst_791:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x095fbb and fs2 == 1 and fe2 == 0x7e and fm2 == 0x28a10b and fs3 == 0 and fe3 == 0xfd and fm3 == 0x34fa7d and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f095fbb; op2val:0xbf28a10b; op3val:0x7eb4fa7d; valaddr_reg:x16; val_offset:1332; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1332, x17, x15, 232, x18)

inst_792:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x095fbb and fs2 == 1 and fe2 == 0x7e and fm2 == 0x28a10b and fs3 == 0 and fe3 == 0xfd and fm3 == 0x34fa7d and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f095fbb; op2val:0xbf28a10b; op3val:0x7eb4fa7d; valaddr_reg:x16; val_offset:1344; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1344, x17, x15, 240, x18)

inst_793:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x095fbb and fs2 == 1 and fe2 == 0x7e and fm2 == 0x28a10b and fs3 == 0 and fe3 == 0xfd and fm3 == 0x34fa7d and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f095fbb; op2val:0xbf28a10b; op3val:0x7eb4fa7d; valaddr_reg:x16; val_offset:1356; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1356, x17, x15, 248, x18)

inst_794:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x095fbb and fs2 == 1 and fe2 == 0x7e and fm2 == 0x28a10b and fs3 == 0 and fe3 == 0xfd and fm3 == 0x34fa7d and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f095fbb; op2val:0xbf28a10b; op3val:0x7eb4fa7d; valaddr_reg:x16; val_offset:1368; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1368, x17, x15, 256, x18)

inst_795:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x095fbb and fs2 == 1 and fe2 == 0x7e and fm2 == 0x28a10b and fs3 == 0 and fe3 == 0xfd and fm3 == 0x34fa7d and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f095fbb; op2val:0xbf28a10b; op3val:0x7eb4fa7d; valaddr_reg:x16; val_offset:1380; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1380, x17, x15, 264, x18)

inst_796:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x28c2ff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x534f40 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0b4cf7 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ea8c2ff; op2val:0xbfd34f40; op3val:0x7f0b4cf7; valaddr_reg:x16; val_offset:1392; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1392, x17, x15, 272, x18)

inst_797:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x28c2ff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x534f40 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0b4cf7 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ea8c2ff; op2val:0xbfd34f40; op3val:0x7f0b4cf7; valaddr_reg:x16; val_offset:1404; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1404, x17, x15, 280, x18)

inst_798:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x28c2ff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x534f40 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0b4cf7 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ea8c2ff; op2val:0xbfd34f40; op3val:0x7f0b4cf7; valaddr_reg:x16; val_offset:1416; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1416, x17, x15, 288, x18)

inst_799:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x28c2ff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x534f40 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0b4cf7 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ea8c2ff; op2val:0xbfd34f40; op3val:0x7f0b4cf7; valaddr_reg:x16; val_offset:1428; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1428, x17, x15, 296, x18)

inst_800:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x28c2ff and fs2 == 1 and fe2 == 0x7f and fm2 == 0x534f40 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0b4cf7 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ea8c2ff; op2val:0xbfd34f40; op3val:0x7f0b4cf7; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 304, x18)

inst_801:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2dd528 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x0f04f9 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x423ae4 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eadd528; op2val:0xbe8f04f9; op3val:0x7dc23ae4; valaddr_reg:x16; val_offset:1452; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1452, x17, x15, 312, x18)

inst_802:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2dd528 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x0f04f9 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x423ae4 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eadd528; op2val:0xbe8f04f9; op3val:0x7dc23ae4; valaddr_reg:x16; val_offset:1464; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1464, x17, x15, 320, x18)

inst_803:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2dd528 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x0f04f9 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x423ae4 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eadd528; op2val:0xbe8f04f9; op3val:0x7dc23ae4; valaddr_reg:x16; val_offset:1476; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1476, x17, x15, 328, x18)

inst_804:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2dd528 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x0f04f9 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x423ae4 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eadd528; op2val:0xbe8f04f9; op3val:0x7dc23ae4; valaddr_reg:x16; val_offset:1488; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1488, x17, x15, 336, x18)

inst_805:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2dd528 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x0f04f9 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x423ae4 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eadd528; op2val:0xbe8f04f9; op3val:0x7dc23ae4; valaddr_reg:x16; val_offset:1500; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1500, x17, x15, 344, x18)

inst_806:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3b6d02 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x184bfd and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5f00b7 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7dbb6d02; op2val:0xc0984bfd; op3val:0x7edf00b7; valaddr_reg:x16; val_offset:1512; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1512, x17, x15, 352, x18)

inst_807:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3b6d02 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x184bfd and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5f00b7 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7dbb6d02; op2val:0xc0984bfd; op3val:0x7edf00b7; valaddr_reg:x16; val_offset:1524; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1524, x17, x15, 360, x18)

inst_808:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3b6d02 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x184bfd and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5f00b7 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7dbb6d02; op2val:0xc0984bfd; op3val:0x7edf00b7; valaddr_reg:x16; val_offset:1536; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1536, x17, x15, 368, x18)

inst_809:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3b6d02 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x184bfd and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5f00b7 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7dbb6d02; op2val:0xc0984bfd; op3val:0x7edf00b7; valaddr_reg:x16; val_offset:1548; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1548, x17, x15, 376, x18)

inst_810:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3b6d02 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x184bfd and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5f00b7 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7dbb6d02; op2val:0xc0984bfd; op3val:0x7edf00b7; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 384, x18)

inst_811:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35b43e and fs2 == 1 and fe2 == 0x7d and fm2 == 0x273191 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x6d5787 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb5b43e; op2val:0xbea73191; op3val:0x7ded5787; valaddr_reg:x16; val_offset:1572; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1572, x17, x15, 392, x18)

inst_812:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35b43e and fs2 == 1 and fe2 == 0x7d and fm2 == 0x273191 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x6d5787 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb5b43e; op2val:0xbea73191; op3val:0x7ded5787; valaddr_reg:x16; val_offset:1584; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1584, x17, x15, 400, x18)

inst_813:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35b43e and fs2 == 1 and fe2 == 0x7d and fm2 == 0x273191 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x6d5787 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb5b43e; op2val:0xbea73191; op3val:0x7ded5787; valaddr_reg:x16; val_offset:1596; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1596, x17, x15, 408, x18)

inst_814:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35b43e and fs2 == 1 and fe2 == 0x7d and fm2 == 0x273191 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x6d5787 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb5b43e; op2val:0xbea73191; op3val:0x7ded5787; valaddr_reg:x16; val_offset:1608; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1608, x17, x15, 416, x18)

inst_815:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35b43e and fs2 == 1 and fe2 == 0x7d and fm2 == 0x273191 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x6d5787 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb5b43e; op2val:0xbea73191; op3val:0x7ded5787; valaddr_reg:x16; val_offset:1620; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1620, x17, x15, 424, x18)

inst_816:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x687969 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x523fce and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3eed89 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee87969; op2val:0xbf523fce; op3val:0x7ebeed89; valaddr_reg:x16; val_offset:1632; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1632, x17, x15, 432, x18)

inst_817:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x687969 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x523fce and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3eed89 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee87969; op2val:0xbf523fce; op3val:0x7ebeed89; valaddr_reg:x16; val_offset:1644; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1644, x17, x15, 440, x18)

inst_818:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x687969 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x523fce and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3eed89 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee87969; op2val:0xbf523fce; op3val:0x7ebeed89; valaddr_reg:x16; val_offset:1656; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1656, x17, x15, 448, x18)

inst_819:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x687969 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x523fce and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3eed89 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee87969; op2val:0xbf523fce; op3val:0x7ebeed89; valaddr_reg:x16; val_offset:1668; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1668, x17, x15, 456, x18)

inst_820:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x687969 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x523fce and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3eed89 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee87969; op2val:0xbf523fce; op3val:0x7ebeed89; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 464, x18)

inst_821:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x298b8f and fs2 == 1 and fe2 == 0x7c and fm2 == 0x4151e0 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x000870 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ea98b8f; op2val:0xbe4151e0; op3val:0x7d800870; valaddr_reg:x16; val_offset:1692; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1692, x17, x15, 472, x18)

inst_822:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x298b8f and fs2 == 1 and fe2 == 0x7c and fm2 == 0x4151e0 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x000870 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ea98b8f; op2val:0xbe4151e0; op3val:0x7d800870; valaddr_reg:x16; val_offset:1704; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1704, x17, x15, 480, x18)

inst_823:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x298b8f and fs2 == 1 and fe2 == 0x7c and fm2 == 0x4151e0 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x000870 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ea98b8f; op2val:0xbe4151e0; op3val:0x7d800870; valaddr_reg:x16; val_offset:1716; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1716, x17, x15, 488, x18)

inst_824:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x298b8f and fs2 == 1 and fe2 == 0x7c and fm2 == 0x4151e0 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x000870 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ea98b8f; op2val:0xbe4151e0; op3val:0x7d800870; valaddr_reg:x16; val_offset:1728; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1728, x17, x15, 496, x18)

inst_825:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x298b8f and fs2 == 1 and fe2 == 0x7c and fm2 == 0x4151e0 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x000870 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ea98b8f; op2val:0xbe4151e0; op3val:0x7d800870; valaddr_reg:x16; val_offset:1740; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1740, x17, x15, 504, x18)

inst_826:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x088c83 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2e8e76 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3a36fc and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e088c83; op2val:0xc0ae8e76; op3val:0x7f3a36fc; valaddr_reg:x16; val_offset:1752; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1752, x17, x15, 512, x18)

inst_827:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x088c83 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2e8e76 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3a36fc and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e088c83; op2val:0xc0ae8e76; op3val:0x7f3a36fc; valaddr_reg:x16; val_offset:1764; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1764, x17, x15, 520, x18)

inst_828:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x088c83 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2e8e76 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3a36fc and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e088c83; op2val:0xc0ae8e76; op3val:0x7f3a36fc; valaddr_reg:x16; val_offset:1776; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1776, x17, x15, 528, x18)

inst_829:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x088c83 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2e8e76 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3a36fc and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e088c83; op2val:0xc0ae8e76; op3val:0x7f3a36fc; valaddr_reg:x16; val_offset:1788; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1788, x17, x15, 536, x18)

inst_830:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x088c83 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2e8e76 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3a36fc and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e088c83; op2val:0xc0ae8e76; op3val:0x7f3a36fc; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 544, x18)

inst_831:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3e2b14 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x15e986 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5eb917 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3e2b14; op2val:0xbf15e986; op3val:0x7edeb917; valaddr_reg:x16; val_offset:1812; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1812, x17, x15, 552, x18)

inst_832:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3e2b14 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x15e986 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5eb917 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3e2b14; op2val:0xbf15e986; op3val:0x7edeb917; valaddr_reg:x16; val_offset:1824; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1824, x17, x15, 560, x18)

inst_833:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3e2b14 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x15e986 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5eb917 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3e2b14; op2val:0xbf15e986; op3val:0x7edeb917; valaddr_reg:x16; val_offset:1836; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1836, x17, x15, 568, x18)

inst_834:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3e2b14 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x15e986 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5eb917 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3e2b14; op2val:0xbf15e986; op3val:0x7edeb917; valaddr_reg:x16; val_offset:1848; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1848, x17, x15, 576, x18)

inst_835:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3e2b14 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x15e986 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5eb917 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3e2b14; op2val:0xbf15e986; op3val:0x7edeb917; valaddr_reg:x16; val_offset:1860; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1860, x17, x15, 584, x18)

inst_836:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x394fae and fs2 == 1 and fe2 == 0x7e and fm2 == 0x496ae5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x11ccf0 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f394fae; op2val:0xbf496ae5; op3val:0x7f11ccf0; valaddr_reg:x16; val_offset:1872; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1872, x17, x15, 592, x18)

inst_837:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x394fae and fs2 == 1 and fe2 == 0x7e and fm2 == 0x496ae5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x11ccf0 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f394fae; op2val:0xbf496ae5; op3val:0x7f11ccf0; valaddr_reg:x16; val_offset:1884; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1884, x17, x15, 600, x18)

inst_838:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x394fae and fs2 == 1 and fe2 == 0x7e and fm2 == 0x496ae5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x11ccf0 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f394fae; op2val:0xbf496ae5; op3val:0x7f11ccf0; valaddr_reg:x16; val_offset:1896; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1896, x17, x15, 608, x18)

inst_839:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x394fae and fs2 == 1 and fe2 == 0x7e and fm2 == 0x496ae5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x11ccf0 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f394fae; op2val:0xbf496ae5; op3val:0x7f11ccf0; valaddr_reg:x16; val_offset:1908; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1908, x17, x15, 616, x18)

inst_840:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x394fae and fs2 == 1 and fe2 == 0x7e and fm2 == 0x496ae5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x11ccf0 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f394fae; op2val:0xbf496ae5; op3val:0x7f11ccf0; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 624, x18)

inst_841:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2808ce and fs2 == 1 and fe2 == 0x7a and fm2 == 0x1b03ba and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x4b7f8f and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2808ce; op2val:0xbd1b03ba; op3val:0x7ccb7f8f; valaddr_reg:x16; val_offset:1932; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1932, x17, x15, 632, x18)

inst_842:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2808ce and fs2 == 1 and fe2 == 0x7a and fm2 == 0x1b03ba and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x4b7f8f and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2808ce; op2val:0xbd1b03ba; op3val:0x7ccb7f8f; valaddr_reg:x16; val_offset:1944; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1944, x17, x15, 640, x18)

inst_843:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2808ce and fs2 == 1 and fe2 == 0x7a and fm2 == 0x1b03ba and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x4b7f8f and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2808ce; op2val:0xbd1b03ba; op3val:0x7ccb7f8f; valaddr_reg:x16; val_offset:1956; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1956, x17, x15, 648, x18)

inst_844:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2808ce and fs2 == 1 and fe2 == 0x7a and fm2 == 0x1b03ba and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x4b7f8f and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2808ce; op2val:0xbd1b03ba; op3val:0x7ccb7f8f; valaddr_reg:x16; val_offset:1968; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1968, x17, x15, 656, x18)

inst_845:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2808ce and fs2 == 1 and fe2 == 0x7a and fm2 == 0x1b03ba and fs3 == 0 and fe3 == 0xf9 and fm3 == 0x4b7f8f and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2808ce; op2val:0xbd1b03ba; op3val:0x7ccb7f8f; valaddr_reg:x16; val_offset:1980; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1980, x17, x15, 664, x18)

inst_846:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x207343 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x00b64e and fs3 == 0 and fe3 == 0xfc and fm3 == 0x2157c9 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f207343; op2val:0xbe80b64e; op3val:0x7e2157c9; valaddr_reg:x16; val_offset:1992; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1992, x17, x15, 672, x18)

inst_847:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x207343 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x00b64e and fs3 == 0 and fe3 == 0xfc and fm3 == 0x2157c9 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f207343; op2val:0xbe80b64e; op3val:0x7e2157c9; valaddr_reg:x16; val_offset:2004; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 2004, x17, x15, 680, x18)

inst_848:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x207343 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x00b64e and fs3 == 0 and fe3 == 0xfc and fm3 == 0x2157c9 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f207343; op2val:0xbe80b64e; op3val:0x7e2157c9; valaddr_reg:x16; val_offset:2016; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 2016, x17, x15, 688, x18)

inst_849:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x207343 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x00b64e and fs3 == 0 and fe3 == 0xfc and fm3 == 0x2157c9 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f207343; op2val:0xbe80b64e; op3val:0x7e2157c9; valaddr_reg:x16; val_offset:2028; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 2028, x17, x15, 696, x18)
addi x16,x16,2040

inst_850:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x207343 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x00b64e and fs3 == 0 and fe3 == 0xfc and fm3 == 0x2157c9 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f207343; op2val:0xbe80b64e; op3val:0x7e2157c9; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 704, x18)

inst_851:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3945d0 and fs2 == 1 and fe2 == 0x76 and fm2 == 0x47af30 and fs3 == 0 and fe3 == 0xf6 and fm3 == 0x10840f and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3945d0; op2val:0xbb47af30; op3val:0x7b10840f; valaddr_reg:x16; val_offset:12; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 12, x17, x15, 712, x18)

inst_852:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3945d0 and fs2 == 1 and fe2 == 0x76 and fm2 == 0x47af30 and fs3 == 0 and fe3 == 0xf6 and fm3 == 0x10840f and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3945d0; op2val:0xbb47af30; op3val:0x7b10840f; valaddr_reg:x16; val_offset:24; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 24, x17, x15, 720, x18)

inst_853:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3945d0 and fs2 == 1 and fe2 == 0x76 and fm2 == 0x47af30 and fs3 == 0 and fe3 == 0xf6 and fm3 == 0x10840f and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3945d0; op2val:0xbb47af30; op3val:0x7b10840f; valaddr_reg:x16; val_offset:36; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 36, x17, x15, 728, x18)

inst_854:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3945d0 and fs2 == 1 and fe2 == 0x76 and fm2 == 0x47af30 and fs3 == 0 and fe3 == 0xf6 and fm3 == 0x10840f and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3945d0; op2val:0xbb47af30; op3val:0x7b10840f; valaddr_reg:x16; val_offset:48; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 48, x17, x15, 736, x18)

inst_855:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3945d0 and fs2 == 1 and fe2 == 0x76 and fm2 == 0x47af30 and fs3 == 0 and fe3 == 0xf6 and fm3 == 0x10840f and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3945d0; op2val:0xbb47af30; op3val:0x7b10840f; valaddr_reg:x16; val_offset:60; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 60, x17, x15, 744, x18)

inst_856:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0ecce4 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x71ef4d and fs3 == 0 and fe3 == 0xfd and fm3 == 0x06f460 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0ecce4; op2val:0xbef1ef4d; op3val:0x7e86f460; valaddr_reg:x16; val_offset:72; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 72, x17, x15, 752, x18)

inst_857:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0ecce4 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x71ef4d and fs3 == 0 and fe3 == 0xfd and fm3 == 0x06f460 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0ecce4; op2val:0xbef1ef4d; op3val:0x7e86f460; valaddr_reg:x16; val_offset:84; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 84, x17, x15, 760, x18)

inst_858:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0ecce4 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x71ef4d and fs3 == 0 and fe3 == 0xfd and fm3 == 0x06f460 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0ecce4; op2val:0xbef1ef4d; op3val:0x7e86f460; valaddr_reg:x16; val_offset:96; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 96, x17, x15, 768, x18)

inst_859:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0ecce4 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x71ef4d and fs3 == 0 and fe3 == 0xfd and fm3 == 0x06f460 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0ecce4; op2val:0xbef1ef4d; op3val:0x7e86f460; valaddr_reg:x16; val_offset:108; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 108, x17, x15, 776, x18)

inst_860:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0ecce4 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x71ef4d and fs3 == 0 and fe3 == 0xfd and fm3 == 0x06f460 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0ecce4; op2val:0xbef1ef4d; op3val:0x7e86f460; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 784, x18)

inst_861:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x145a12 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3e11a6 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5c4a28 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e945a12; op2val:0xbfbe11a6; op3val:0x7edc4a28; valaddr_reg:x16; val_offset:132; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 132, x17, x15, 792, x18)

inst_862:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x145a12 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3e11a6 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5c4a28 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e945a12; op2val:0xbfbe11a6; op3val:0x7edc4a28; valaddr_reg:x16; val_offset:144; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 144, x17, x15, 800, x18)

inst_863:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x145a12 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3e11a6 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5c4a28 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e945a12; op2val:0xbfbe11a6; op3val:0x7edc4a28; valaddr_reg:x16; val_offset:156; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 156, x17, x15, 808, x18)

inst_864:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x145a12 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3e11a6 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5c4a28 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e945a12; op2val:0xbfbe11a6; op3val:0x7edc4a28; valaddr_reg:x16; val_offset:168; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 168, x17, x15, 816, x18)

inst_865:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x145a12 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3e11a6 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5c4a28 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e945a12; op2val:0xbfbe11a6; op3val:0x7edc4a28; valaddr_reg:x16; val_offset:180; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 180, x17, x15, 824, x18)

inst_866:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x502f82 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x049553 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x57a3de and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7c502f82; op2val:0xc1049553; op3val:0x7dd7a3de; valaddr_reg:x16; val_offset:192; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 192, x17, x15, 832, x18)

inst_867:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x502f82 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x049553 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x57a3de and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7c502f82; op2val:0xc1049553; op3val:0x7dd7a3de; valaddr_reg:x16; val_offset:204; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 204, x17, x15, 840, x18)

inst_868:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x502f82 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x049553 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x57a3de and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7c502f82; op2val:0xc1049553; op3val:0x7dd7a3de; valaddr_reg:x16; val_offset:216; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 216, x17, x15, 848, x18)

inst_869:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x502f82 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x049553 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x57a3de and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7c502f82; op2val:0xc1049553; op3val:0x7dd7a3de; valaddr_reg:x16; val_offset:228; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 228, x17, x15, 856, x18)

inst_870:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x502f82 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x049553 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x57a3de and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7c502f82; op2val:0xc1049553; op3val:0x7dd7a3de; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 864, x18)

inst_871:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3c2c79 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x0397ce and fs3 == 0 and fe3 == 0xfa and fm3 == 0x4174b0 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3c2c79; op2val:0xbd8397ce; op3val:0x7d4174b0; valaddr_reg:x16; val_offset:252; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 252, x17, x15, 872, x18)

inst_872:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3c2c79 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x0397ce and fs3 == 0 and fe3 == 0xfa and fm3 == 0x4174b0 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3c2c79; op2val:0xbd8397ce; op3val:0x7d4174b0; valaddr_reg:x16; val_offset:264; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 264, x17, x15, 880, x18)

inst_873:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3c2c79 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x0397ce and fs3 == 0 and fe3 == 0xfa and fm3 == 0x4174b0 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3c2c79; op2val:0xbd8397ce; op3val:0x7d4174b0; valaddr_reg:x16; val_offset:276; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 276, x17, x15, 888, x18)

inst_874:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3c2c79 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x0397ce and fs3 == 0 and fe3 == 0xfa and fm3 == 0x4174b0 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3c2c79; op2val:0xbd8397ce; op3val:0x7d4174b0; valaddr_reg:x16; val_offset:288; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 288, x17, x15, 896, x18)

inst_875:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3c2c79 and fs2 == 1 and fe2 == 0x7b and fm2 == 0x0397ce and fs3 == 0 and fe3 == 0xfa and fm3 == 0x4174b0 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3c2c79; op2val:0xbd8397ce; op3val:0x7d4174b0; valaddr_reg:x16; val_offset:300; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 300, x17, x15, 904, x18)

inst_876:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41e3fa and fs2 == 1 and fe2 == 0x7f and fm2 == 0x338693 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x07f854 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ec1e3fa; op2val:0xbfb38693; op3val:0x7f07f854; valaddr_reg:x16; val_offset:312; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 312, x17, x15, 912, x18)

inst_877:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41e3fa and fs2 == 1 and fe2 == 0x7f and fm2 == 0x338693 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x07f854 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ec1e3fa; op2val:0xbfb38693; op3val:0x7f07f854; valaddr_reg:x16; val_offset:324; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 324, x17, x15, 920, x18)

inst_878:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41e3fa and fs2 == 1 and fe2 == 0x7f and fm2 == 0x338693 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x07f854 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ec1e3fa; op2val:0xbfb38693; op3val:0x7f07f854; valaddr_reg:x16; val_offset:336; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 336, x17, x15, 928, x18)

inst_879:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41e3fa and fs2 == 1 and fe2 == 0x7f and fm2 == 0x338693 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x07f854 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ec1e3fa; op2val:0xbfb38693; op3val:0x7f07f854; valaddr_reg:x16; val_offset:348; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 348, x17, x15, 936, x18)

inst_880:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41e3fa and fs2 == 1 and fe2 == 0x7f and fm2 == 0x338693 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x07f854 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ec1e3fa; op2val:0xbfb38693; op3val:0x7f07f854; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 944, x18)

inst_881:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a4d8c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0f8696 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1b140f and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8a4d8c; op2val:0xc00f8696; op3val:0x7f1b140f; valaddr_reg:x16; val_offset:372; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 372, x17, x15, 952, x18)

inst_882:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a4d8c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0f8696 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1b140f and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8a4d8c; op2val:0xc00f8696; op3val:0x7f1b140f; valaddr_reg:x16; val_offset:384; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 384, x17, x15, 960, x18)

inst_883:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a4d8c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0f8696 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1b140f and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8a4d8c; op2val:0xc00f8696; op3val:0x7f1b140f; valaddr_reg:x16; val_offset:396; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 396, x17, x15, 968, x18)

inst_884:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a4d8c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0f8696 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1b140f and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8a4d8c; op2val:0xc00f8696; op3val:0x7f1b140f; valaddr_reg:x16; val_offset:408; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 408, x17, x15, 976, x18)

inst_885:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a4d8c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0f8696 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1b140f and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8a4d8c; op2val:0xc00f8696; op3val:0x7f1b140f; valaddr_reg:x16; val_offset:420; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 420, x17, x15, 984, x18)

inst_886:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x239eb4 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x1c7e58 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x480aed and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7da39eb4; op2val:0xc09c7e58; op3val:0x7ec80aed; valaddr_reg:x16; val_offset:432; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 432, x17, x15, 992, x18)

inst_887:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x239eb4 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x1c7e58 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x480aed and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7da39eb4; op2val:0xc09c7e58; op3val:0x7ec80aed; valaddr_reg:x16; val_offset:444; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 444, x17, x15, 1000, x18)

inst_888:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x239eb4 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x1c7e58 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x480aed and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7da39eb4; op2val:0xc09c7e58; op3val:0x7ec80aed; valaddr_reg:x16; val_offset:456; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 456, x17, x15, 1008, x18)

inst_889:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x239eb4 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x1c7e58 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x480aed and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7da39eb4; op2val:0xc09c7e58; op3val:0x7ec80aed; valaddr_reg:x16; val_offset:468; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 468, x17, x15, 1016, x18)

inst_890:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x239eb4 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x1c7e58 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x480aed and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7da39eb4; op2val:0xc09c7e58; op3val:0x7ec80aed; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1024, x18)

inst_891:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x121772 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6578e7 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x02f3f8 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d921772; op2val:0xbf6578e7; op3val:0x7d82f3f8; valaddr_reg:x16; val_offset:492; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 492, x17, x15, 1032, x18)

inst_892:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x121772 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6578e7 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x02f3f8 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d921772; op2val:0xbf6578e7; op3val:0x7d82f3f8; valaddr_reg:x16; val_offset:504; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 504, x17, x15, 1040, x18)

inst_893:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x121772 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6578e7 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x02f3f8 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d921772; op2val:0xbf6578e7; op3val:0x7d82f3f8; valaddr_reg:x16; val_offset:516; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 516, x17, x15, 1048, x18)

inst_894:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x121772 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6578e7 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x02f3f8 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d921772; op2val:0xbf6578e7; op3val:0x7d82f3f8; valaddr_reg:x16; val_offset:528; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 528, x17, x15, 1056, x18)

inst_895:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x121772 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6578e7 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x02f3f8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d921772; op2val:0xbf6578e7; op3val:0x7d82f3f8; valaddr_reg:x16; val_offset:540; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 540, x17, x15, 1064, x18)

inst_896:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x61fcc2 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x7b34ce and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5dc16f and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee1fcc2; op2val:0xbefb34ce; op3val:0x7e5dc16f; valaddr_reg:x16; val_offset:552; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 552, x17, x15, 1072, x18)

inst_897:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x61fcc2 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x7b34ce and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5dc16f and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee1fcc2; op2val:0xbefb34ce; op3val:0x7e5dc16f; valaddr_reg:x16; val_offset:564; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 564, x17, x15, 1080, x18)

inst_898:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x61fcc2 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x7b34ce and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5dc16f and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee1fcc2; op2val:0xbefb34ce; op3val:0x7e5dc16f; valaddr_reg:x16; val_offset:576; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 576, x17, x15, 1088, x18)

inst_899:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x61fcc2 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x7b34ce and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5dc16f and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee1fcc2; op2val:0xbefb34ce; op3val:0x7e5dc16f; valaddr_reg:x16; val_offset:588; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 588, x17, x15, 1096, x18)

inst_900:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x61fcc2 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x7b34ce and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5dc16f and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee1fcc2; op2val:0xbefb34ce; op3val:0x7e5dc16f; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1104, x18)

inst_901:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b48d4 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6fe0a2 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x207f4a and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eab48d4; op2val:0xbf6fe0a2; op3val:0x7ea07f4a; valaddr_reg:x16; val_offset:612; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 612, x17, x15, 1112, x18)

inst_902:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b48d4 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6fe0a2 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x207f4a and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eab48d4; op2val:0xbf6fe0a2; op3val:0x7ea07f4a; valaddr_reg:x16; val_offset:624; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 624, x17, x15, 1120, x18)

inst_903:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b48d4 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6fe0a2 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x207f4a and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eab48d4; op2val:0xbf6fe0a2; op3val:0x7ea07f4a; valaddr_reg:x16; val_offset:636; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 636, x17, x15, 1128, x18)

inst_904:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b48d4 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6fe0a2 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x207f4a and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eab48d4; op2val:0xbf6fe0a2; op3val:0x7ea07f4a; valaddr_reg:x16; val_offset:648; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 648, x17, x15, 1136, x18)

inst_905:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b48d4 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6fe0a2 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x207f4a and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eab48d4; op2val:0xbf6fe0a2; op3val:0x7ea07f4a; valaddr_reg:x16; val_offset:660; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 660, x17, x15, 1144, x18)

inst_906:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x31f5db and fs2 == 1 and fe2 == 0x7f and fm2 == 0x628967 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x1d7a90 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e31f5db; op2val:0xbfe28967; op3val:0x7e9d7a90; valaddr_reg:x16; val_offset:672; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 672, x17, x15, 1152, x18)

inst_907:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x31f5db and fs2 == 1 and fe2 == 0x7f and fm2 == 0x628967 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x1d7a90 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e31f5db; op2val:0xbfe28967; op3val:0x7e9d7a90; valaddr_reg:x16; val_offset:684; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 684, x17, x15, 1160, x18)

inst_908:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x31f5db and fs2 == 1 and fe2 == 0x7f and fm2 == 0x628967 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x1d7a90 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e31f5db; op2val:0xbfe28967; op3val:0x7e9d7a90; valaddr_reg:x16; val_offset:696; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 696, x17, x15, 1168, x18)

inst_909:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x31f5db and fs2 == 1 and fe2 == 0x7f and fm2 == 0x628967 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x1d7a90 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e31f5db; op2val:0xbfe28967; op3val:0x7e9d7a90; valaddr_reg:x16; val_offset:708; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 708, x17, x15, 1176, x18)

inst_910:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x31f5db and fs2 == 1 and fe2 == 0x7f and fm2 == 0x628967 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x1d7a90 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e31f5db; op2val:0xbfe28967; op3val:0x7e9d7a90; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1184, x18)

inst_911:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x02ae3a and fs2 == 1 and fe2 == 0x80 and fm2 == 0x23d78d and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2745f0 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e02ae3a; op2val:0xc023d78d; op3val:0x7ea745f0; valaddr_reg:x16; val_offset:732; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 732, x17, x15, 1192, x18)

inst_912:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x02ae3a and fs2 == 1 and fe2 == 0x80 and fm2 == 0x23d78d and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2745f0 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e02ae3a; op2val:0xc023d78d; op3val:0x7ea745f0; valaddr_reg:x16; val_offset:744; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 744, x17, x15, 1200, x18)

inst_913:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x02ae3a and fs2 == 1 and fe2 == 0x80 and fm2 == 0x23d78d and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2745f0 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e02ae3a; op2val:0xc023d78d; op3val:0x7ea745f0; valaddr_reg:x16; val_offset:756; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 756, x17, x15, 1208, x18)

inst_914:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x02ae3a and fs2 == 1 and fe2 == 0x80 and fm2 == 0x23d78d and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2745f0 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e02ae3a; op2val:0xc023d78d; op3val:0x7ea745f0; valaddr_reg:x16; val_offset:768; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 768, x17, x15, 1216, x18)

inst_915:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x02ae3a and fs2 == 1 and fe2 == 0x80 and fm2 == 0x23d78d and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2745f0 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e02ae3a; op2val:0xc023d78d; op3val:0x7ea745f0; valaddr_reg:x16; val_offset:780; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 780, x17, x15, 1224, x18)

inst_916:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x12bec8 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x64fb22 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0341df and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f12bec8; op2val:0xbee4fb22; op3val:0x7e8341df; valaddr_reg:x16; val_offset:792; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 792, x17, x15, 1232, x18)

inst_917:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x12bec8 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x64fb22 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0341df and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f12bec8; op2val:0xbee4fb22; op3val:0x7e8341df; valaddr_reg:x16; val_offset:804; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 804, x17, x15, 1240, x18)

inst_918:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x12bec8 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x64fb22 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0341df and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f12bec8; op2val:0xbee4fb22; op3val:0x7e8341df; valaddr_reg:x16; val_offset:816; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 816, x17, x15, 1248, x18)

inst_919:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x12bec8 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x64fb22 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0341df and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f12bec8; op2val:0xbee4fb22; op3val:0x7e8341df; valaddr_reg:x16; val_offset:828; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 828, x17, x15, 1256, x18)

inst_920:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x12bec8 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x64fb22 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0341df and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f12bec8; op2val:0xbee4fb22; op3val:0x7e8341df; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1264, x18)

inst_921:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x666f32 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x34700f and fs3 == 0 and fe3 == 0xf8 and fm3 == 0x226b0e and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e666f32; op2val:0xbd34700f; op3val:0x7c226b0e; valaddr_reg:x16; val_offset:852; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 852, x17, x15, 1272, x18)

inst_922:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x666f32 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x34700f and fs3 == 0 and fe3 == 0xf8 and fm3 == 0x226b0e and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e666f32; op2val:0xbd34700f; op3val:0x7c226b0e; valaddr_reg:x16; val_offset:864; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 864, x17, x15, 1280, x18)

inst_923:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x666f32 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x34700f and fs3 == 0 and fe3 == 0xf8 and fm3 == 0x226b0e and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e666f32; op2val:0xbd34700f; op3val:0x7c226b0e; valaddr_reg:x16; val_offset:876; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 876, x17, x15, 1288, x18)

inst_924:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x666f32 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x34700f and fs3 == 0 and fe3 == 0xf8 and fm3 == 0x226b0e and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e666f32; op2val:0xbd34700f; op3val:0x7c226b0e; valaddr_reg:x16; val_offset:888; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 888, x17, x15, 1296, x18)

inst_925:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x666f32 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x34700f and fs3 == 0 and fe3 == 0xf8 and fm3 == 0x226b0e and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e666f32; op2val:0xbd34700f; op3val:0x7c226b0e; valaddr_reg:x16; val_offset:900; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 900, x17, x15, 1304, x18)

inst_926:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1afd1d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7312ff and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1329c3 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e1afd1d; op2val:0xc07312ff; op3val:0x7f1329c3; valaddr_reg:x16; val_offset:912; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 912, x17, x15, 1312, x18)

inst_927:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1afd1d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7312ff and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1329c3 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e1afd1d; op2val:0xc07312ff; op3val:0x7f1329c3; valaddr_reg:x16; val_offset:924; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 924, x17, x15, 1320, x18)

inst_928:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1afd1d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7312ff and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1329c3 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e1afd1d; op2val:0xc07312ff; op3val:0x7f1329c3; valaddr_reg:x16; val_offset:936; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 936, x17, x15, 1328, x18)

inst_929:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1afd1d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7312ff and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1329c3 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e1afd1d; op2val:0xc07312ff; op3val:0x7f1329c3; valaddr_reg:x16; val_offset:948; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 948, x17, x15, 1336, x18)

inst_930:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1afd1d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7312ff and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1329c3 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e1afd1d; op2val:0xc07312ff; op3val:0x7f1329c3; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 1344, x18)

inst_931:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ea866 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3c2825 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3b2b9b and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7efea866; op2val:0xbfbc2825; op3val:0x7f3b2b9b; valaddr_reg:x16; val_offset:972; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 972, x17, x15, 1352, x18)

inst_932:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ea866 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3c2825 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3b2b9b and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7efea866; op2val:0xbfbc2825; op3val:0x7f3b2b9b; valaddr_reg:x16; val_offset:984; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 984, x17, x15, 1360, x18)

inst_933:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ea866 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3c2825 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3b2b9b and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7efea866; op2val:0xbfbc2825; op3val:0x7f3b2b9b; valaddr_reg:x16; val_offset:996; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 996, x17, x15, 1368, x18)

inst_934:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ea866 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3c2825 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3b2b9b and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7efea866; op2val:0xbfbc2825; op3val:0x7f3b2b9b; valaddr_reg:x16; val_offset:1008; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1008, x17, x15, 1376, x18)

inst_935:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ea866 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3c2825 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3b2b9b and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7efea866; op2val:0xbfbc2825; op3val:0x7f3b2b9b; valaddr_reg:x16; val_offset:1020; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1020, x17, x15, 1384, x18)

inst_936:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x182a54 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x56b7cf and fs3 == 0 and fe3 == 0xfb and fm3 == 0x7f4148 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e982a54; op2val:0xbed6b7cf; op3val:0x7dff4148; valaddr_reg:x16; val_offset:1032; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1032, x17, x15, 1392, x18)

inst_937:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x182a54 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x56b7cf and fs3 == 0 and fe3 == 0xfb and fm3 == 0x7f4148 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e982a54; op2val:0xbed6b7cf; op3val:0x7dff4148; valaddr_reg:x16; val_offset:1044; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1044, x17, x15, 1400, x18)

inst_938:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x182a54 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x56b7cf and fs3 == 0 and fe3 == 0xfb and fm3 == 0x7f4148 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e982a54; op2val:0xbed6b7cf; op3val:0x7dff4148; valaddr_reg:x16; val_offset:1056; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1056, x17, x15, 1408, x18)

inst_939:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x182a54 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x56b7cf and fs3 == 0 and fe3 == 0xfb and fm3 == 0x7f4148 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e982a54; op2val:0xbed6b7cf; op3val:0x7dff4148; valaddr_reg:x16; val_offset:1068; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1068, x17, x15, 1416, x18)

inst_940:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x182a54 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x56b7cf and fs3 == 0 and fe3 == 0xfb and fm3 == 0x7f4148 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e982a54; op2val:0xbed6b7cf; op3val:0x7dff4148; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 1424, x18)

inst_941:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2b296b and fs2 == 1 and fe2 == 0x7c and fm2 == 0x494e1c and fs3 == 0 and fe3 == 0xfc and fm3 == 0x0697be and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2b296b; op2val:0xbe494e1c; op3val:0x7e0697be; valaddr_reg:x16; val_offset:1092; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1092, x17, x15, 1432, x18)

inst_942:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2b296b and fs2 == 1 and fe2 == 0x7c and fm2 == 0x494e1c and fs3 == 0 and fe3 == 0xfc and fm3 == 0x0697be and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2b296b; op2val:0xbe494e1c; op3val:0x7e0697be; valaddr_reg:x16; val_offset:1104; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1104, x17, x15, 1440, x18)

inst_943:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2b296b and fs2 == 1 and fe2 == 0x7c and fm2 == 0x494e1c and fs3 == 0 and fe3 == 0xfc and fm3 == 0x0697be and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2b296b; op2val:0xbe494e1c; op3val:0x7e0697be; valaddr_reg:x16; val_offset:1116; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1116, x17, x15, 1448, x18)

inst_944:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2b296b and fs2 == 1 and fe2 == 0x7c and fm2 == 0x494e1c and fs3 == 0 and fe3 == 0xfc and fm3 == 0x0697be and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2b296b; op2val:0xbe494e1c; op3val:0x7e0697be; valaddr_reg:x16; val_offset:1128; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1128, x17, x15, 1456, x18)

inst_945:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2b296b and fs2 == 1 and fe2 == 0x7c and fm2 == 0x494e1c and fs3 == 0 and fe3 == 0xfc and fm3 == 0x0697be and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2b296b; op2val:0xbe494e1c; op3val:0x7e0697be; valaddr_reg:x16; val_offset:1140; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1140, x17, x15, 1464, x18)

inst_946:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10bd56 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0da990 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x20304e and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e90bd56; op2val:0xc00da990; op3val:0x7f20304e; valaddr_reg:x16; val_offset:1152; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1152, x17, x15, 1472, x18)

inst_947:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10bd56 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0da990 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x20304e and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e90bd56; op2val:0xc00da990; op3val:0x7f20304e; valaddr_reg:x16; val_offset:1164; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1164, x17, x15, 1480, x18)

inst_948:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10bd56 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0da990 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x20304e and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e90bd56; op2val:0xc00da990; op3val:0x7f20304e; valaddr_reg:x16; val_offset:1176; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1176, x17, x15, 1488, x18)

inst_949:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10bd56 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0da990 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x20304e and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e90bd56; op2val:0xc00da990; op3val:0x7f20304e; valaddr_reg:x16; val_offset:1188; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1188, x17, x15, 1496, x18)

inst_950:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10bd56 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0da990 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x20304e and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e90bd56; op2val:0xc00da990; op3val:0x7f20304e; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 1504, x18)

inst_951:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4cef54 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4b1960 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x229618 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e4cef54; op2val:0xbfcb1960; op3val:0x7ea29618; valaddr_reg:x16; val_offset:1212; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1212, x17, x15, 1512, x18)

inst_952:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4cef54 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4b1960 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x229618 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e4cef54; op2val:0xbfcb1960; op3val:0x7ea29618; valaddr_reg:x16; val_offset:1224; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1224, x17, x15, 1520, x18)

inst_953:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4cef54 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4b1960 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x229618 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e4cef54; op2val:0xbfcb1960; op3val:0x7ea29618; valaddr_reg:x16; val_offset:1236; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1236, x17, x15, 1528, x18)

inst_954:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4cef54 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4b1960 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x229618 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e4cef54; op2val:0xbfcb1960; op3val:0x7ea29618; valaddr_reg:x16; val_offset:1248; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1248, x17, x15, 1536, x18)

inst_955:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4cef54 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4b1960 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x229618 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e4cef54; op2val:0xbfcb1960; op3val:0x7ea29618; valaddr_reg:x16; val_offset:1260; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1260, x17, x15, 1544, x18)

inst_956:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x126d0d and fs2 == 1 and fe2 == 0x83 and fm2 == 0x666e32 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x03cd01 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7c126d0d; op2val:0xc1e66e32; op3val:0x7e83cd01; valaddr_reg:x16; val_offset:1272; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1272, x17, x15, 1552, x18)

inst_957:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x126d0d and fs2 == 1 and fe2 == 0x83 and fm2 == 0x666e32 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x03cd01 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7c126d0d; op2val:0xc1e66e32; op3val:0x7e83cd01; valaddr_reg:x16; val_offset:1284; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1284, x17, x15, 1560, x18)

inst_958:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x126d0d and fs2 == 1 and fe2 == 0x83 and fm2 == 0x666e32 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x03cd01 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7c126d0d; op2val:0xc1e66e32; op3val:0x7e83cd01; valaddr_reg:x16; val_offset:1296; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1296, x17, x15, 1568, x18)

inst_959:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x126d0d and fs2 == 1 and fe2 == 0x83 and fm2 == 0x666e32 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x03cd01 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7c126d0d; op2val:0xc1e66e32; op3val:0x7e83cd01; valaddr_reg:x16; val_offset:1308; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1308, x17, x15, 1576, x18)

inst_960:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x126d0d and fs2 == 1 and fe2 == 0x83 and fm2 == 0x666e32 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x03cd01 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7c126d0d; op2val:0xc1e66e32; op3val:0x7e83cd01; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 1584, x18)

inst_961:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x28ecea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0ded2e and fs3 == 0 and fe3 == 0xfc and fm3 == 0x3b4dfe and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e28ecea; op2val:0xbf8ded2e; op3val:0x7e3b4dfe; valaddr_reg:x16; val_offset:1332; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1332, x17, x15, 1592, x18)

inst_962:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x28ecea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0ded2e and fs3 == 0 and fe3 == 0xfc and fm3 == 0x3b4dfe and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e28ecea; op2val:0xbf8ded2e; op3val:0x7e3b4dfe; valaddr_reg:x16; val_offset:1344; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1344, x17, x15, 1600, x18)

inst_963:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x28ecea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0ded2e and fs3 == 0 and fe3 == 0xfc and fm3 == 0x3b4dfe and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e28ecea; op2val:0xbf8ded2e; op3val:0x7e3b4dfe; valaddr_reg:x16; val_offset:1356; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1356, x17, x15, 1608, x18)

inst_964:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x28ecea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0ded2e and fs3 == 0 and fe3 == 0xfc and fm3 == 0x3b4dfe and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e28ecea; op2val:0xbf8ded2e; op3val:0x7e3b4dfe; valaddr_reg:x16; val_offset:1368; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1368, x17, x15, 1616, x18)

inst_965:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x28ecea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0ded2e and fs3 == 0 and fe3 == 0xfc and fm3 == 0x3b4dfe and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e28ecea; op2val:0xbf8ded2e; op3val:0x7e3b4dfe; valaddr_reg:x16; val_offset:1380; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1380, x17, x15, 1624, x18)

inst_966:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42d924 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x30e83a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x06a60a and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ec2d924; op2val:0xbfb0e83a; op3val:0x7f06a60a; valaddr_reg:x16; val_offset:1392; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1392, x17, x15, 1632, x18)

inst_967:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42d924 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x30e83a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x06a60a and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ec2d924; op2val:0xbfb0e83a; op3val:0x7f06a60a; valaddr_reg:x16; val_offset:1404; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1404, x17, x15, 1640, x18)

inst_968:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42d924 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x30e83a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x06a60a and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ec2d924; op2val:0xbfb0e83a; op3val:0x7f06a60a; valaddr_reg:x16; val_offset:1416; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1416, x17, x15, 1648, x18)

inst_969:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42d924 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x30e83a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x06a60a and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ec2d924; op2val:0xbfb0e83a; op3val:0x7f06a60a; valaddr_reg:x16; val_offset:1428; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1428, x17, x15, 1656, x18)

inst_970:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42d924 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x30e83a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x06a60a and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ec2d924; op2val:0xbfb0e83a; op3val:0x7f06a60a; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 1664, x18)

inst_971:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x5b67a0 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x4a57e5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2d6b19 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d5b67a0; op2val:0xc14a57e5; op3val:0x7f2d6b19; valaddr_reg:x16; val_offset:1452; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1452, x17, x15, 1672, x18)

inst_972:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x5b67a0 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x4a57e5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2d6b19 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d5b67a0; op2val:0xc14a57e5; op3val:0x7f2d6b19; valaddr_reg:x16; val_offset:1464; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1464, x17, x15, 1680, x18)

inst_973:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x5b67a0 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x4a57e5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2d6b19 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d5b67a0; op2val:0xc14a57e5; op3val:0x7f2d6b19; valaddr_reg:x16; val_offset:1476; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1476, x17, x15, 1688, x18)

inst_974:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x5b67a0 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x4a57e5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2d6b19 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d5b67a0; op2val:0xc14a57e5; op3val:0x7f2d6b19; valaddr_reg:x16; val_offset:1488; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1488, x17, x15, 1696, x18)

inst_975:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x5b67a0 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x4a57e5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2d6b19 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d5b67a0; op2val:0xc14a57e5; op3val:0x7f2d6b19; valaddr_reg:x16; val_offset:1500; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1500, x17, x15, 1704, x18)

inst_976:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4b074e and fs2 == 1 and fe2 == 0x7e and fm2 == 0x76d5a9 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x43c279 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ecb074e; op2val:0xbf76d5a9; op3val:0x7ec3c279; valaddr_reg:x16; val_offset:1512; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1512, x17, x15, 1712, x18)

inst_977:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4b074e and fs2 == 1 and fe2 == 0x7e and fm2 == 0x76d5a9 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x43c279 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ecb074e; op2val:0xbf76d5a9; op3val:0x7ec3c279; valaddr_reg:x16; val_offset:1524; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1524, x17, x15, 1720, x18)

inst_978:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4b074e and fs2 == 1 and fe2 == 0x7e and fm2 == 0x76d5a9 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x43c279 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ecb074e; op2val:0xbf76d5a9; op3val:0x7ec3c279; valaddr_reg:x16; val_offset:1536; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1536, x17, x15, 1728, x18)

inst_979:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4b074e and fs2 == 1 and fe2 == 0x7e and fm2 == 0x76d5a9 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x43c279 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ecb074e; op2val:0xbf76d5a9; op3val:0x7ec3c279; valaddr_reg:x16; val_offset:1548; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1548, x17, x15, 1736, x18)

inst_980:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4b074e and fs2 == 1 and fe2 == 0x7e and fm2 == 0x76d5a9 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x43c279 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ecb074e; op2val:0xbf76d5a9; op3val:0x7ec3c279; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1744, x18)

inst_981:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x17cb34 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x427de0 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x66a542 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e17cb34; op2val:0xbf427de0; op3val:0x7de6a542; valaddr_reg:x16; val_offset:1572; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1572, x17, x15, 1752, x18)

inst_982:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x17cb34 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x427de0 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x66a542 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e17cb34; op2val:0xbf427de0; op3val:0x7de6a542; valaddr_reg:x16; val_offset:1584; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1584, x17, x15, 1760, x18)

inst_983:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x17cb34 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x427de0 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x66a542 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e17cb34; op2val:0xbf427de0; op3val:0x7de6a542; valaddr_reg:x16; val_offset:1596; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1596, x17, x15, 1768, x18)

inst_984:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x17cb34 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x427de0 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x66a542 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e17cb34; op2val:0xbf427de0; op3val:0x7de6a542; valaddr_reg:x16; val_offset:1608; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1608, x17, x15, 1776, x18)

inst_985:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x17cb34 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x427de0 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x66a542 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e17cb34; op2val:0xbf427de0; op3val:0x7de6a542; valaddr_reg:x16; val_offset:1620; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1620, x17, x15, 1784, x18)

inst_986:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x21f35d and fs2 == 1 and fe2 == 0x7e and fm2 == 0x18d959 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4163ff and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f21f35d; op2val:0xbf18d959; op3val:0x7ec163ff; valaddr_reg:x16; val_offset:1632; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1632, x17, x15, 1792, x18)

inst_987:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x21f35d and fs2 == 1 and fe2 == 0x7e and fm2 == 0x18d959 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4163ff and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f21f35d; op2val:0xbf18d959; op3val:0x7ec163ff; valaddr_reg:x16; val_offset:1644; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1644, x17, x15, 1800, x18)

inst_988:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x21f35d and fs2 == 1 and fe2 == 0x7e and fm2 == 0x18d959 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4163ff and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f21f35d; op2val:0xbf18d959; op3val:0x7ec163ff; valaddr_reg:x16; val_offset:1656; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1656, x17, x15, 1808, x18)

inst_989:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x21f35d and fs2 == 1 and fe2 == 0x7e and fm2 == 0x18d959 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4163ff and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f21f35d; op2val:0xbf18d959; op3val:0x7ec163ff; valaddr_reg:x16; val_offset:1668; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1668, x17, x15, 1816, x18)

inst_990:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x21f35d and fs2 == 1 and fe2 == 0x7e and fm2 == 0x18d959 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4163ff and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f21f35d; op2val:0xbf18d959; op3val:0x7ec163ff; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1824, x18)

inst_991:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x06cfd9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2d2ef6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x366662 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f06cfd9; op2val:0xbfad2ef6; op3val:0x7f366662; valaddr_reg:x16; val_offset:1692; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1692, x17, x15, 1832, x18)

inst_992:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x06cfd9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2d2ef6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x366662 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f06cfd9; op2val:0xbfad2ef6; op3val:0x7f366662; valaddr_reg:x16; val_offset:1704; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1704, x17, x15, 1840, x18)

inst_993:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x06cfd9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2d2ef6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x366662 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f06cfd9; op2val:0xbfad2ef6; op3val:0x7f366662; valaddr_reg:x16; val_offset:1716; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1716, x17, x15, 1848, x18)

inst_994:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x06cfd9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2d2ef6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x366662 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f06cfd9; op2val:0xbfad2ef6; op3val:0x7f366662; valaddr_reg:x16; val_offset:1728; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1728, x17, x15, 1856, x18)

inst_995:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x06cfd9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2d2ef6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x366662 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f06cfd9; op2val:0xbfad2ef6; op3val:0x7f366662; valaddr_reg:x16; val_offset:1740; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1740, x17, x15, 1864, x18)

inst_996:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x15f05d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x62402e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0483c9 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d95f05d; op2val:0xc0e2402e; op3val:0x7f0483c9; valaddr_reg:x16; val_offset:1752; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1752, x17, x15, 1872, x18)

inst_997:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x15f05d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x62402e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0483c9 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d95f05d; op2val:0xc0e2402e; op3val:0x7f0483c9; valaddr_reg:x16; val_offset:1764; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1764, x17, x15, 1880, x18)

inst_998:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x15f05d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x62402e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0483c9 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d95f05d; op2val:0xc0e2402e; op3val:0x7f0483c9; valaddr_reg:x16; val_offset:1776; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1776, x17, x15, 1888, x18)

inst_999:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x15f05d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x62402e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0483c9 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d95f05d; op2val:0xc0e2402e; op3val:0x7f0483c9; valaddr_reg:x16; val_offset:1788; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1788, x17, x15, 1896, x18)

inst_1000:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x15f05d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x62402e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0483c9 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d95f05d; op2val:0xc0e2402e; op3val:0x7f0483c9; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1904, x18)

inst_1001:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4f529d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3532e8 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x12bea4 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7dcf529d; op2val:0xc0b532e8; op3val:0x7f12bea4; valaddr_reg:x16; val_offset:1812; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1812, x17, x15, 1912, x18)

inst_1002:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4f529d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3532e8 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x12bea4 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7dcf529d; op2val:0xc0b532e8; op3val:0x7f12bea4; valaddr_reg:x16; val_offset:1824; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1824, x17, x15, 1920, x18)

inst_1003:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4f529d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3532e8 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x12bea4 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7dcf529d; op2val:0xc0b532e8; op3val:0x7f12bea4; valaddr_reg:x16; val_offset:1836; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1836, x17, x15, 1928, x18)

inst_1004:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4f529d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3532e8 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x12bea4 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7dcf529d; op2val:0xc0b532e8; op3val:0x7f12bea4; valaddr_reg:x16; val_offset:1848; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1848, x17, x15, 1936, x18)

inst_1005:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4f529d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3532e8 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x12bea4 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7dcf529d; op2val:0xc0b532e8; op3val:0x7f12bea4; valaddr_reg:x16; val_offset:1860; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1860, x17, x15, 1944, x18)

inst_1006:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x08f8b6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1d8c50 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x289736 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e88f8b6; op2val:0xc01d8c50; op3val:0x7f289736; valaddr_reg:x16; val_offset:1872; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1872, x17, x15, 1952, x18)

inst_1007:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x08f8b6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1d8c50 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x289736 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e88f8b6; op2val:0xc01d8c50; op3val:0x7f289736; valaddr_reg:x16; val_offset:1884; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1884, x17, x15, 1960, x18)

inst_1008:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x08f8b6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1d8c50 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x289736 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e88f8b6; op2val:0xc01d8c50; op3val:0x7f289736; valaddr_reg:x16; val_offset:1896; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1896, x17, x15, 1968, x18)

inst_1009:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x08f8b6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1d8c50 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x289736 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e88f8b6; op2val:0xc01d8c50; op3val:0x7f289736; valaddr_reg:x16; val_offset:1908; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1908, x17, x15, 1976, x18)

inst_1010:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x08f8b6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1d8c50 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x289736 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e88f8b6; op2val:0xc01d8c50; op3val:0x7f289736; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1984, x18)

inst_1011:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2924ed and fs2 == 1 and fe2 == 0x7d and fm2 == 0x260466 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5b61b5 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2924ed; op2val:0xbea60466; op3val:0x7e5b61b5; valaddr_reg:x16; val_offset:1932; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1932, x17, x15, 1992, x18)

inst_1012:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2924ed and fs2 == 1 and fe2 == 0x7d and fm2 == 0x260466 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5b61b5 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2924ed; op2val:0xbea60466; op3val:0x7e5b61b5; valaddr_reg:x16; val_offset:1944; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1944, x17, x15, 2000, x18)

inst_1013:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2924ed and fs2 == 1 and fe2 == 0x7d and fm2 == 0x260466 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5b61b5 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2924ed; op2val:0xbea60466; op3val:0x7e5b61b5; valaddr_reg:x16; val_offset:1956; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1956, x17, x15, 2008, x18)

inst_1014:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2924ed and fs2 == 1 and fe2 == 0x7d and fm2 == 0x260466 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5b61b5 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2924ed; op2val:0xbea60466; op3val:0x7e5b61b5; valaddr_reg:x16; val_offset:1968; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1968, x17, x15, 2016, x18)

inst_1015:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2924ed and fs2 == 1 and fe2 == 0x7d and fm2 == 0x260466 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5b61b5 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2924ed; op2val:0xbea60466; op3val:0x7e5b61b5; valaddr_reg:x16; val_offset:1980; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1980, x17, x15, 2024, x18)
RVTEST_SIGBASE(x15,signature_x15_5)

inst_1016:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5e5241 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x212887 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0bf4ed and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ede5241; op2val:0xbfa12887; op3val:0x7f0bf4ed; valaddr_reg:x16; val_offset:1992; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1992, x17, x15, 0, x18)

inst_1017:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5e5241 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x212887 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0bf4ed and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ede5241; op2val:0xbfa12887; op3val:0x7f0bf4ed; valaddr_reg:x16; val_offset:2004; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 2004, x17, x15, 8, x18)

inst_1018:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5e5241 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x212887 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0bf4ed and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ede5241; op2val:0xbfa12887; op3val:0x7f0bf4ed; valaddr_reg:x16; val_offset:2016; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 2016, x17, x15, 16, x18)

inst_1019:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5e5241 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x212887 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0bf4ed and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ede5241; op2val:0xbfa12887; op3val:0x7f0bf4ed; valaddr_reg:x16; val_offset:2028; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 2028, x17, x15, 24, x18)
addi x16,x16,2040

inst_1020:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5e5241 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x212887 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0bf4ed and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ede5241; op2val:0xbfa12887; op3val:0x7f0bf4ed; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 32, x18)

inst_1021:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x14e13e and fs2 == 1 and fe2 == 0x81 and fm2 == 0x1c2a84 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x35a3f8 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e14e13e; op2val:0xc09c2a84; op3val:0x7f35a3f8; valaddr_reg:x16; val_offset:12; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 12, x17, x15, 40, x18)

inst_1022:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x14e13e and fs2 == 1 and fe2 == 0x81 and fm2 == 0x1c2a84 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x35a3f8 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e14e13e; op2val:0xc09c2a84; op3val:0x7f35a3f8; valaddr_reg:x16; val_offset:24; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 24, x17, x15, 48, x18)

inst_1023:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x14e13e and fs2 == 1 and fe2 == 0x81 and fm2 == 0x1c2a84 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x35a3f8 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e14e13e; op2val:0xc09c2a84; op3val:0x7f35a3f8; valaddr_reg:x16; val_offset:36; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 36, x17, x15, 56, x18)

inst_1024:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x14e13e and fs2 == 1 and fe2 == 0x81 and fm2 == 0x1c2a84 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x35a3f8 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e14e13e; op2val:0xc09c2a84; op3val:0x7f35a3f8; valaddr_reg:x16; val_offset:48; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 48, x17, x15, 64, x18)

inst_1025:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x14e13e and fs2 == 1 and fe2 == 0x81 and fm2 == 0x1c2a84 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x35a3f8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e14e13e; op2val:0xc09c2a84; op3val:0x7f35a3f8; valaddr_reg:x16; val_offset:60; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 60, x17, x15, 72, x18)

inst_1026:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x35a451 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x043b82 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3ba5e6 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f35a451; op2val:0xbf043b82; op3val:0x7ebba5e6; valaddr_reg:x16; val_offset:72; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 72, x17, x15, 80, x18)

inst_1027:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x35a451 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x043b82 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3ba5e6 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f35a451; op2val:0xbf043b82; op3val:0x7ebba5e6; valaddr_reg:x16; val_offset:84; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 84, x17, x15, 88, x18)

inst_1028:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x35a451 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x043b82 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3ba5e6 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f35a451; op2val:0xbf043b82; op3val:0x7ebba5e6; valaddr_reg:x16; val_offset:96; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 96, x17, x15, 96, x18)

inst_1029:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x35a451 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x043b82 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3ba5e6 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f35a451; op2val:0xbf043b82; op3val:0x7ebba5e6; valaddr_reg:x16; val_offset:108; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 108, x17, x15, 104, x18)

inst_1030:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x35a451 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x043b82 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3ba5e6 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f35a451; op2val:0xbf043b82; op3val:0x7ebba5e6; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 112, x18)

inst_1031:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5a52ec and fs2 == 1 and fe2 == 0x7d and fm2 == 0x67e1c6 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x45c160 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7dda52ec; op2val:0xbee7e1c6; op3val:0x7d45c160; valaddr_reg:x16; val_offset:132; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 132, x17, x15, 120, x18)

inst_1032:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5a52ec and fs2 == 1 and fe2 == 0x7d and fm2 == 0x67e1c6 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x45c160 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7dda52ec; op2val:0xbee7e1c6; op3val:0x7d45c160; valaddr_reg:x16; val_offset:144; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 144, x17, x15, 128, x18)

inst_1033:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5a52ec and fs2 == 1 and fe2 == 0x7d and fm2 == 0x67e1c6 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x45c160 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7dda52ec; op2val:0xbee7e1c6; op3val:0x7d45c160; valaddr_reg:x16; val_offset:156; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 156, x17, x15, 136, x18)

inst_1034:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5a52ec and fs2 == 1 and fe2 == 0x7d and fm2 == 0x67e1c6 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x45c160 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7dda52ec; op2val:0xbee7e1c6; op3val:0x7d45c160; valaddr_reg:x16; val_offset:168; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 168, x17, x15, 144, x18)

inst_1035:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5a52ec and fs2 == 1 and fe2 == 0x7d and fm2 == 0x67e1c6 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x45c160 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7dda52ec; op2val:0xbee7e1c6; op3val:0x7d45c160; valaddr_reg:x16; val_offset:180; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 180, x17, x15, 152, x18)

inst_1036:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d1061 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x25299a and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5f4f5d and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2d1061; op2val:0xbf25299a; op3val:0x7edf4f5d; valaddr_reg:x16; val_offset:192; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 192, x17, x15, 160, x18)

inst_1037:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d1061 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x25299a and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5f4f5d and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2d1061; op2val:0xbf25299a; op3val:0x7edf4f5d; valaddr_reg:x16; val_offset:204; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 204, x17, x15, 168, x18)

inst_1038:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d1061 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x25299a and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5f4f5d and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2d1061; op2val:0xbf25299a; op3val:0x7edf4f5d; valaddr_reg:x16; val_offset:216; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 216, x17, x15, 176, x18)

inst_1039:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d1061 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x25299a and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5f4f5d and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2d1061; op2val:0xbf25299a; op3val:0x7edf4f5d; valaddr_reg:x16; val_offset:228; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 228, x17, x15, 184, x18)

inst_1040:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d1061 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x25299a and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5f4f5d and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2d1061; op2val:0xbf25299a; op3val:0x7edf4f5d; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 192, x18)

inst_1041:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f1227 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x27232f and fs3 == 0 and fe3 == 0xfd and fm3 == 0x797e34 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ebf1227; op2val:0xbfa7232f; op3val:0x7ef97e34; valaddr_reg:x16; val_offset:252; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 252, x17, x15, 200, x18)

inst_1042:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f1227 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x27232f and fs3 == 0 and fe3 == 0xfd and fm3 == 0x797e34 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ebf1227; op2val:0xbfa7232f; op3val:0x7ef97e34; valaddr_reg:x16; val_offset:264; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 264, x17, x15, 208, x18)

inst_1043:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f1227 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x27232f and fs3 == 0 and fe3 == 0xfd and fm3 == 0x797e34 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ebf1227; op2val:0xbfa7232f; op3val:0x7ef97e34; valaddr_reg:x16; val_offset:276; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 276, x17, x15, 216, x18)

inst_1044:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f1227 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x27232f and fs3 == 0 and fe3 == 0xfd and fm3 == 0x797e34 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ebf1227; op2val:0xbfa7232f; op3val:0x7ef97e34; valaddr_reg:x16; val_offset:288; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 288, x17, x15, 224, x18)

inst_1045:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f1227 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x27232f and fs3 == 0 and fe3 == 0xfd and fm3 == 0x797e34 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ebf1227; op2val:0xbfa7232f; op3val:0x7ef97e34; valaddr_reg:x16; val_offset:300; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 300, x17, x15, 232, x18)

inst_1046:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x01f5dd and fs2 == 1 and fe2 == 0x80 and fm2 == 0x02ba3e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x04bacd and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e81f5dd; op2val:0xc002ba3e; op3val:0x7f04bacd; valaddr_reg:x16; val_offset:312; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 312, x17, x15, 240, x18)

inst_1047:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x01f5dd and fs2 == 1 and fe2 == 0x80 and fm2 == 0x02ba3e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x04bacd and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e81f5dd; op2val:0xc002ba3e; op3val:0x7f04bacd; valaddr_reg:x16; val_offset:324; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 324, x17, x15, 248, x18)

inst_1048:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x01f5dd and fs2 == 1 and fe2 == 0x80 and fm2 == 0x02ba3e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x04bacd and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e81f5dd; op2val:0xc002ba3e; op3val:0x7f04bacd; valaddr_reg:x16; val_offset:336; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 336, x17, x15, 256, x18)

inst_1049:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x01f5dd and fs2 == 1 and fe2 == 0x80 and fm2 == 0x02ba3e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x04bacd and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e81f5dd; op2val:0xc002ba3e; op3val:0x7f04bacd; valaddr_reg:x16; val_offset:348; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 348, x17, x15, 264, x18)

inst_1050:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x01f5dd and fs2 == 1 and fe2 == 0x80 and fm2 == 0x02ba3e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x04bacd and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e81f5dd; op2val:0xc002ba3e; op3val:0x7f04bacd; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 272, x18)

inst_1051:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10d8c5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x603fc7 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7dc386 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e90d8c5; op2val:0xbfe03fc7; op3val:0x7efdc386; valaddr_reg:x16; val_offset:372; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 372, x17, x15, 280, x18)

inst_1052:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10d8c5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x603fc7 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7dc386 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e90d8c5; op2val:0xbfe03fc7; op3val:0x7efdc386; valaddr_reg:x16; val_offset:384; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 384, x17, x15, 288, x18)

inst_1053:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10d8c5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x603fc7 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7dc386 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e90d8c5; op2val:0xbfe03fc7; op3val:0x7efdc386; valaddr_reg:x16; val_offset:396; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 396, x17, x15, 296, x18)

inst_1054:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10d8c5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x603fc7 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7dc386 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e90d8c5; op2val:0xbfe03fc7; op3val:0x7efdc386; valaddr_reg:x16; val_offset:408; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 408, x17, x15, 304, x18)

inst_1055:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10d8c5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x603fc7 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7dc386 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e90d8c5; op2val:0xbfe03fc7; op3val:0x7efdc386; valaddr_reg:x16; val_offset:420; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 420, x17, x15, 312, x18)

inst_1056:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x41cef4 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x1d4815 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6e24fd and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d41cef4; op2val:0xc11d4815; op3val:0x7eee24fd; valaddr_reg:x16; val_offset:432; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 432, x17, x15, 320, x18)

inst_1057:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x41cef4 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x1d4815 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6e24fd and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d41cef4; op2val:0xc11d4815; op3val:0x7eee24fd; valaddr_reg:x16; val_offset:444; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 444, x17, x15, 328, x18)

inst_1058:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x41cef4 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x1d4815 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6e24fd and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d41cef4; op2val:0xc11d4815; op3val:0x7eee24fd; valaddr_reg:x16; val_offset:456; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 456, x17, x15, 336, x18)

inst_1059:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x41cef4 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x1d4815 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6e24fd and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d41cef4; op2val:0xc11d4815; op3val:0x7eee24fd; valaddr_reg:x16; val_offset:468; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 468, x17, x15, 344, x18)

inst_1060:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x41cef4 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x1d4815 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6e24fd and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d41cef4; op2val:0xc11d4815; op3val:0x7eee24fd; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 352, x18)

inst_1061:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x466afe and fs2 == 1 and fe2 == 0x80 and fm2 == 0x75a3a7 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3e633d and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e466afe; op2val:0xc075a3a7; op3val:0x7f3e633d; valaddr_reg:x16; val_offset:492; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 492, x17, x15, 360, x18)

inst_1062:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x466afe and fs2 == 1 and fe2 == 0x80 and fm2 == 0x75a3a7 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3e633d and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e466afe; op2val:0xc075a3a7; op3val:0x7f3e633d; valaddr_reg:x16; val_offset:504; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 504, x17, x15, 368, x18)

inst_1063:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x466afe and fs2 == 1 and fe2 == 0x80 and fm2 == 0x75a3a7 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3e633d and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e466afe; op2val:0xc075a3a7; op3val:0x7f3e633d; valaddr_reg:x16; val_offset:516; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 516, x17, x15, 376, x18)

inst_1064:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x466afe and fs2 == 1 and fe2 == 0x80 and fm2 == 0x75a3a7 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3e633d and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e466afe; op2val:0xc075a3a7; op3val:0x7f3e633d; valaddr_reg:x16; val_offset:528; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 528, x17, x15, 384, x18)

inst_1065:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x466afe and fs2 == 1 and fe2 == 0x80 and fm2 == 0x75a3a7 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3e633d and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e466afe; op2val:0xc075a3a7; op3val:0x7f3e633d; valaddr_reg:x16; val_offset:540; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 540, x17, x15, 392, x18)

inst_1066:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1190a0 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x199c78 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x2eb0d1 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e9190a0; op2val:0xbe999c78; op3val:0x7daeb0d1; valaddr_reg:x16; val_offset:552; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 552, x17, x15, 400, x18)

inst_1067:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1190a0 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x199c78 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x2eb0d1 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e9190a0; op2val:0xbe999c78; op3val:0x7daeb0d1; valaddr_reg:x16; val_offset:564; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 564, x17, x15, 408, x18)

inst_1068:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1190a0 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x199c78 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x2eb0d1 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e9190a0; op2val:0xbe999c78; op3val:0x7daeb0d1; valaddr_reg:x16; val_offset:576; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 576, x17, x15, 416, x18)

inst_1069:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1190a0 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x199c78 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x2eb0d1 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e9190a0; op2val:0xbe999c78; op3val:0x7daeb0d1; valaddr_reg:x16; val_offset:588; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 588, x17, x15, 424, x18)

inst_1070:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1190a0 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x199c78 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x2eb0d1 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e9190a0; op2val:0xbe999c78; op3val:0x7daeb0d1; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 432, x18)

inst_1071:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c8afc and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0d9df0 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2d3243 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e9c8afc; op2val:0xc00d9df0; op3val:0x7f2d3243; valaddr_reg:x16; val_offset:612; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 612, x17, x15, 440, x18)

inst_1072:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c8afc and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0d9df0 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2d3243 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e9c8afc; op2val:0xc00d9df0; op3val:0x7f2d3243; valaddr_reg:x16; val_offset:624; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 624, x17, x15, 448, x18)

inst_1073:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c8afc and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0d9df0 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2d3243 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e9c8afc; op2val:0xc00d9df0; op3val:0x7f2d3243; valaddr_reg:x16; val_offset:636; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 636, x17, x15, 456, x18)

inst_1074:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c8afc and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0d9df0 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2d3243 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e9c8afc; op2val:0xc00d9df0; op3val:0x7f2d3243; valaddr_reg:x16; val_offset:648; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 648, x17, x15, 464, x18)

inst_1075:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c8afc and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0d9df0 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2d3243 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e9c8afc; op2val:0xc00d9df0; op3val:0x7f2d3243; valaddr_reg:x16; val_offset:660; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 660, x17, x15, 472, x18)

inst_1076:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x75a735 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x5581bc and fs3 == 0 and fe3 == 0xfc and fm3 == 0x4ce09d and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7c75a735; op2val:0xc15581bc; op3val:0x7e4ce09d; valaddr_reg:x16; val_offset:672; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 672, x17, x15, 480, x18)

inst_1077:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x75a735 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x5581bc and fs3 == 0 and fe3 == 0xfc and fm3 == 0x4ce09d and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7c75a735; op2val:0xc15581bc; op3val:0x7e4ce09d; valaddr_reg:x16; val_offset:684; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 684, x17, x15, 488, x18)

inst_1078:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x75a735 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x5581bc and fs3 == 0 and fe3 == 0xfc and fm3 == 0x4ce09d and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7c75a735; op2val:0xc15581bc; op3val:0x7e4ce09d; valaddr_reg:x16; val_offset:696; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 696, x17, x15, 496, x18)

inst_1079:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x75a735 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x5581bc and fs3 == 0 and fe3 == 0xfc and fm3 == 0x4ce09d and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7c75a735; op2val:0xc15581bc; op3val:0x7e4ce09d; valaddr_reg:x16; val_offset:708; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 708, x17, x15, 504, x18)

inst_1080:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x75a735 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x5581bc and fs3 == 0 and fe3 == 0xfc and fm3 == 0x4ce09d and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7c75a735; op2val:0xc15581bc; op3val:0x7e4ce09d; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 512, x18)

inst_1081:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0992a2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x275676 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x33da3d and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d8992a2; op2val:0xc0275676; op3val:0x7e33da3d; valaddr_reg:x16; val_offset:732; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 732, x17, x15, 520, x18)

inst_1082:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0992a2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x275676 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x33da3d and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d8992a2; op2val:0xc0275676; op3val:0x7e33da3d; valaddr_reg:x16; val_offset:744; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 744, x17, x15, 528, x18)

inst_1083:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0992a2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x275676 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x33da3d and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d8992a2; op2val:0xc0275676; op3val:0x7e33da3d; valaddr_reg:x16; val_offset:756; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 756, x17, x15, 536, x18)

inst_1084:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0992a2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x275676 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x33da3d and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d8992a2; op2val:0xc0275676; op3val:0x7e33da3d; valaddr_reg:x16; val_offset:768; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 768, x17, x15, 544, x18)

inst_1085:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0992a2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x275676 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x33da3d and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d8992a2; op2val:0xc0275676; op3val:0x7e33da3d; valaddr_reg:x16; val_offset:780; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 780, x17, x15, 552, x18)

inst_1086:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x13a21e and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0a4105 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1f75c7 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e13a21e; op2val:0xc08a4105; op3val:0x7f1f75c7; valaddr_reg:x16; val_offset:792; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 792, x17, x15, 560, x18)

inst_1087:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x13a21e and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0a4105 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1f75c7 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e13a21e; op2val:0xc08a4105; op3val:0x7f1f75c7; valaddr_reg:x16; val_offset:804; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 804, x17, x15, 568, x18)

inst_1088:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x13a21e and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0a4105 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1f75c7 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e13a21e; op2val:0xc08a4105; op3val:0x7f1f75c7; valaddr_reg:x16; val_offset:816; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 816, x17, x15, 576, x18)

inst_1089:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x13a21e and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0a4105 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1f75c7 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e13a21e; op2val:0xc08a4105; op3val:0x7f1f75c7; valaddr_reg:x16; val_offset:828; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 828, x17, x15, 584, x18)

inst_1090:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x13a21e and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0a4105 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1f75c7 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e13a21e; op2val:0xc08a4105; op3val:0x7f1f75c7; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 592, x18)

inst_1091:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e00ba and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0bd260 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3e12c6 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eae00ba; op2val:0xbf8bd260; op3val:0x7ebe12c6; valaddr_reg:x16; val_offset:852; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 852, x17, x15, 600, x18)

inst_1092:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e00ba and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0bd260 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3e12c6 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eae00ba; op2val:0xbf8bd260; op3val:0x7ebe12c6; valaddr_reg:x16; val_offset:864; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 864, x17, x15, 608, x18)

inst_1093:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e00ba and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0bd260 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3e12c6 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eae00ba; op2val:0xbf8bd260; op3val:0x7ebe12c6; valaddr_reg:x16; val_offset:876; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 876, x17, x15, 616, x18)

inst_1094:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e00ba and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0bd260 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3e12c6 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eae00ba; op2val:0xbf8bd260; op3val:0x7ebe12c6; valaddr_reg:x16; val_offset:888; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 888, x17, x15, 624, x18)

inst_1095:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e00ba and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0bd260 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3e12c6 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eae00ba; op2val:0xbf8bd260; op3val:0x7ebe12c6; valaddr_reg:x16; val_offset:900; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 900, x17, x15, 632, x18)

inst_1096:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x767a3b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x371e70 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x304eaf and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef67a3b; op2val:0xbf371e70; op3val:0x7eb04eaf; valaddr_reg:x16; val_offset:912; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 912, x17, x15, 640, x18)

inst_1097:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x767a3b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x371e70 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x304eaf and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef67a3b; op2val:0xbf371e70; op3val:0x7eb04eaf; valaddr_reg:x16; val_offset:924; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 924, x17, x15, 648, x18)

inst_1098:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x767a3b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x371e70 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x304eaf and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef67a3b; op2val:0xbf371e70; op3val:0x7eb04eaf; valaddr_reg:x16; val_offset:936; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 936, x17, x15, 656, x18)

inst_1099:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x767a3b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x371e70 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x304eaf and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef67a3b; op2val:0xbf371e70; op3val:0x7eb04eaf; valaddr_reg:x16; val_offset:948; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 948, x17, x15, 664, x18)

inst_1100:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x767a3b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x371e70 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x304eaf and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef67a3b; op2val:0xbf371e70; op3val:0x7eb04eaf; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 672, x18)

inst_1101:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3fd529 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x569c36 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x20d13f and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3fd529; op2val:0xbe569c36; op3val:0x7e20d13f; valaddr_reg:x16; val_offset:972; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 972, x17, x15, 680, x18)

inst_1102:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3fd529 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x569c36 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x20d13f and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3fd529; op2val:0xbe569c36; op3val:0x7e20d13f; valaddr_reg:x16; val_offset:984; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 984, x17, x15, 688, x18)

inst_1103:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3fd529 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x569c36 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x20d13f and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3fd529; op2val:0xbe569c36; op3val:0x7e20d13f; valaddr_reg:x16; val_offset:996; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 996, x17, x15, 696, x18)

inst_1104:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3fd529 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x569c36 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x20d13f and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3fd529; op2val:0xbe569c36; op3val:0x7e20d13f; valaddr_reg:x16; val_offset:1008; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1008, x17, x15, 704, x18)

inst_1105:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3fd529 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x569c36 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x20d13f and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3fd529; op2val:0xbe569c36; op3val:0x7e20d13f; valaddr_reg:x16; val_offset:1020; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1020, x17, x15, 712, x18)

inst_1106:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x02d835 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x39e73f and fs3 == 0 and fe3 == 0xfc and fm3 == 0x3e08e0 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d82d835; op2val:0xc039e73f; op3val:0x7e3e08e0; valaddr_reg:x16; val_offset:1032; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1032, x17, x15, 720, x18)

inst_1107:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x02d835 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x39e73f and fs3 == 0 and fe3 == 0xfc and fm3 == 0x3e08e0 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d82d835; op2val:0xc039e73f; op3val:0x7e3e08e0; valaddr_reg:x16; val_offset:1044; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1044, x17, x15, 728, x18)

inst_1108:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x02d835 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x39e73f and fs3 == 0 and fe3 == 0xfc and fm3 == 0x3e08e0 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d82d835; op2val:0xc039e73f; op3val:0x7e3e08e0; valaddr_reg:x16; val_offset:1056; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1056, x17, x15, 736, x18)

inst_1109:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x02d835 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x39e73f and fs3 == 0 and fe3 == 0xfc and fm3 == 0x3e08e0 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d82d835; op2val:0xc039e73f; op3val:0x7e3e08e0; valaddr_reg:x16; val_offset:1068; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1068, x17, x15, 744, x18)

inst_1110:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x02d835 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x39e73f and fs3 == 0 and fe3 == 0xfc and fm3 == 0x3e08e0 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d82d835; op2val:0xc039e73f; op3val:0x7e3e08e0; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 752, x18)

inst_1111:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x420b54 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x328842 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x075328 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7dc20b54; op2val:0xc0b28842; op3val:0x7f075328; valaddr_reg:x16; val_offset:1092; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1092, x17, x15, 760, x18)

inst_1112:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x420b54 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x328842 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x075328 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7dc20b54; op2val:0xc0b28842; op3val:0x7f075328; valaddr_reg:x16; val_offset:1104; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1104, x17, x15, 768, x18)

inst_1113:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x420b54 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x328842 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x075328 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7dc20b54; op2val:0xc0b28842; op3val:0x7f075328; valaddr_reg:x16; val_offset:1116; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1116, x17, x15, 776, x18)

inst_1114:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x420b54 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x328842 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x075328 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7dc20b54; op2val:0xc0b28842; op3val:0x7f075328; valaddr_reg:x16; val_offset:1128; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1128, x17, x15, 784, x18)

inst_1115:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x420b54 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x328842 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x075328 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7dc20b54; op2val:0xc0b28842; op3val:0x7f075328; valaddr_reg:x16; val_offset:1140; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1140, x17, x15, 792, x18)

inst_1116:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2e1c2f and fs2 == 1 and fe2 == 0x81 and fm2 == 0x07d476 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x38c2b9 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e2e1c2f; op2val:0xc087d476; op3val:0x7f38c2b9; valaddr_reg:x16; val_offset:1152; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1152, x17, x15, 800, x18)

inst_1117:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2e1c2f and fs2 == 1 and fe2 == 0x81 and fm2 == 0x07d476 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x38c2b9 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e2e1c2f; op2val:0xc087d476; op3val:0x7f38c2b9; valaddr_reg:x16; val_offset:1164; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1164, x17, x15, 808, x18)

inst_1118:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2e1c2f and fs2 == 1 and fe2 == 0x81 and fm2 == 0x07d476 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x38c2b9 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e2e1c2f; op2val:0xc087d476; op3val:0x7f38c2b9; valaddr_reg:x16; val_offset:1176; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1176, x17, x15, 816, x18)

inst_1119:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2e1c2f and fs2 == 1 and fe2 == 0x81 and fm2 == 0x07d476 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x38c2b9 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e2e1c2f; op2val:0xc087d476; op3val:0x7f38c2b9; valaddr_reg:x16; val_offset:1188; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1188, x17, x15, 824, x18)

inst_1120:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x265cd2 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6681f8 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x15cbdb and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f265cd2; op2val:0xbf6681f8; op3val:0x7f15cbdb; valaddr_reg:x16; val_offset:1200; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1200, x17, x15, 832, x18)

inst_1121:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x265cd2 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6681f8 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x15cbdb and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f265cd2; op2val:0xbf6681f8; op3val:0x7f15cbdb; valaddr_reg:x16; val_offset:1212; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1212, x17, x15, 840, x18)

inst_1122:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x265cd2 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6681f8 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x15cbdb and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f265cd2; op2val:0xbf6681f8; op3val:0x7f15cbdb; valaddr_reg:x16; val_offset:1224; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1224, x17, x15, 848, x18)

inst_1123:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b0221 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4fc770 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7b9ef7 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1b0221; op2val:0xbf4fc770; op3val:0x7efb9ef7; valaddr_reg:x16; val_offset:1236; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1236, x17, x15, 856, x18)

inst_1124:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b0221 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4fc770 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7b9ef7 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1b0221; op2val:0xbf4fc770; op3val:0x7efb9ef7; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 864, x18)

inst_1125:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b0221 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4fc770 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7b9ef7 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1b0221; op2val:0xbf4fc770; op3val:0x7efb9ef7; valaddr_reg:x16; val_offset:1260; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1260, x17, x15, 872, x18)

inst_1126:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b0221 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4fc770 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7b9ef7 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1b0221; op2val:0xbf4fc770; op3val:0x7efb9ef7; valaddr_reg:x16; val_offset:1272; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1272, x17, x15, 880, x18)

inst_1127:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b0221 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4fc770 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7b9ef7 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1b0221; op2val:0xbf4fc770; op3val:0x7efb9ef7; valaddr_reg:x16; val_offset:1284; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1284, x17, x15, 888, x18)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
test_fp:
.word 0x7e2e1c2f
.word 0xc087d476
.word 0x7f38c2b9
.word 0x7f265cd2
.word 0xbf6681f8
.word 0x7f15cbdb
.word 0x7f265cd2
.word 0xbf6681f8
.word 0x7f15cbdb
.word 0x7f265cd2
.word 0x7f265cd2
.word 0x7f15cbdb
.word 0x7f265cd2
.word 0x7f265cd2
.word 0x7f265cd2
.word 0x7f265cd2
.word 0xbf6681f8
.word 0xbf6681f8
.word 0x7f1b0221
.word 0x7f1b0221
.word 0x7efb9ef7
.word 0x7f1b0221
.word 0xbf4fc770
.word 0x7f1b0221
.word 0x7f1b0221
.word 0xbf4fc770
.word 0xbf4fc770
.word 0x7f1b0221
.word 0x7f1b0221
.word 0x7f1b0221
.word 0x7f1b0221
.word 0xbf4fc770
.word 0x7f1b0221
.word 0x7f069abc
.word 0xbe8a0331
.word 0x7e11222e
.word 0x7f069abc
.word 0xbe8a0331
.word 0x7e11222e
.word 0x7f069abc
.word 0xbe8a0331
.word 0x7e11222e
.word 0x7f069abc
.word 0xbe8a0331
.word 0x7e11222e
.word 0x7f069abc
.word 0xbe8a0331
.word 0x7e11222e
.word 0x7e2015ef
.word 0xc054aed3
.word 0x7f04ff7d
.word 0x7e2015ef
.word 0xc054aed3
.word 0x7f04ff7d
.word 0x7e2015ef
.word 0xc054aed3
.word 0x7f04ff7d
.word 0x7e2015ef
.word 0xc054aed3
.word 0x7f04ff7d
.word 0x7e2015ef
.word 0xc054aed3
.word 0x7f04ff7d
.word 0x7ee78370
.word 0xbf2c6a16
.word 0x7e9bec3f
.word 0x7ee78370
.word 0xbf2c6a16
.word 0x7e9bec3f
.word 0x7ee78370
.word 0xbf2c6a16
.word 0x7e9bec3f
.word 0x7ee78370
.word 0xbf2c6a16
.word 0x7e9bec3f
.word 0x7ee78370
.word 0xbf2c6a16
.word 0x7e9bec3f
.word 0x7e4a1236
.word 0xbffe18d0
.word 0x7ec891a8
.word 0x7e4a1236
.word 0xbffe18d0
.word 0x7ec891a8
.word 0x7e4a1236
.word 0xbffe18d0
.word 0x7ec891a8
.word 0x7e4a1236
.word 0xbffe18d0
.word 0x7ec891a8
.word 0x7e4a1236
.word 0xbffe18d0
.word 0x7ec891a8
.word 0x7e986690
.word 0xbfdf8822
.word 0x7f051262
.word 0x7e986690
.word 0xbfdf8822
.word 0x7f051262
.word 0x7e986690
.word 0xbfdf8822
.word 0x7f051262
.word 0x7e986690
.word 0xbfdf8822
.word 0x7f051262
.word 0x7e986690
.word 0xbfdf8822
.word 0x7f051262
.word 0x7f05a355
.word 0xbea5e8ec
.word 0x7e2d37bb
.word 0x7f05a355
.word 0xbea5e8ec
.word 0x7e2d37bb
.word 0x7f05a355
.word 0xbea5e8ec
.word 0x7e2d37bb
.word 0x7f05a355
.word 0xbea5e8ec
.word 0x7e2d37bb
.word 0x7f05a355
.word 0xbea5e8ec
.word 0x7e2d37bb
.word 0x7d4566d8
.word 0xc0f32561
.word 0x7ebb7d72
.word 0x7d4566d8
.word 0xc0f32561
.word 0x7ebb7d72
.word 0x7d4566d8
.word 0xc0f32561
.word 0x7ebb7d72
.word 0x7d4566d8
.word 0xc0f32561
.word 0x7ebb7d72
.word 0x7d4566d8
.word 0xc0f32561
.word 0x7ebb7d72
.word 0x7e18f003
.word 0xbe0ec689
.word 0x7caa977b
.word 0x7e18f003
.word 0xbe0ec689
.word 0x7caa977b
.word 0x7e18f003
.word 0xbe0ec689
.word 0x7caa977b
.word 0x7e18f003
.word 0xbe0ec689
.word 0x7caa977b
.word 0x7e18f003
.word 0xbe0ec689
.word 0x7caa977b
.word 0x7e424f27
.word 0xc02f8ce0
.word 0x7f053f09
.word 0x7e424f27
.word 0xc02f8ce0
.word 0x7f053f09
.word 0x7e424f27
.word 0xc02f8ce0
.word 0x7f053f09
.word 0x7e424f27
.word 0xc02f8ce0
.word 0x7f053f09
.word 0x7e424f27
.word 0xc02f8ce0
.word 0x7f053f09
.word 0x7ee557cf
.word 0xbf8cc5e8
.word 0x7efc3aa4
.word 0x7ee557cf
.word 0xbf8cc5e8
.word 0x7efc3aa4
.word 0x7ee557cf
.word 0xbf8cc5e8
.word 0x7efc3aa4
.word 0x7ee557cf
.word 0xbf8cc5e8
.word 0x7efc3aa4
.word 0x7ee557cf
.word 0xbf8cc5e8
.word 0x7efc3aa4
.word 0x7eff5c48
.word 0xbf0548d9
.word 0x7e84f39c
.word 0x7eff5c48
.word 0xbf0548d9
.word 0x7e84f39c
.word 0x7eff5c48
.word 0xbf0548d9
.word 0x7e84f39c
.word 0x7eff5c48
.word 0xbf0548d9
.word 0x7e84f39c
.word 0x7eff5c48
.word 0xbf0548d9
.word 0x7e84f39c
.word 0x7f08363b
.word 0xbfaba134
.word 0x7f36a3fe
.word 0x7f08363b
.word 0xbfaba134
.word 0x7f36a3fe
.word 0x7f08363b
.word 0xbfaba134
.word 0x7f36a3fe
.word 0x7f08363b
.word 0xbfaba134
.word 0x7f36a3fe
.word 0x7f08363b
.word 0xbfaba134
.word 0x7f36a3fe
.word 0x7de2f664
.word 0xbf7ccd08
.word 0x7de02051
.word 0x7de2f664
.word 0xbf7ccd08
.word 0x7de02051
.word 0x7de2f664
.word 0xbf7ccd08
.word 0x7de02051
.word 0x7de2f664
.word 0xbf7ccd08
.word 0x7de02051
.word 0x7de2f664
.word 0xbf7ccd08
.word 0x7de02051
.word 0x7f2de7b9
.word 0xbef04eea
.word 0x7ea33ed9
.word 0x7f2de7b9
.word 0xbef04eea
.word 0x7ea33ed9
.word 0x7f2de7b9
.word 0xbef04eea
.word 0x7ea33ed9
.word 0x7f2de7b9
.word 0xbef04eea
.word 0x7ea33ed9
.word 0x7f2de7b9
.word 0xbef04eea
.word 0x7ea33ed9
.word 0x7f09a252
.word 0xbfaf5462
.word 0x7f3c86a9
.word 0x7f09a252
.word 0xbfaf5462
.word 0x7f3c86a9
.word 0x7f09a252
.word 0xbfaf5462
.word 0x7f3c86a9
.word 0x7f09a252
.word 0xbfaf5462
.word 0x7f3c86a9
.word 0x7f09a252
.word 0xbfaf5462
.word 0x7f3c86a9
.word 0x7eb8e8da
.word 0xc00316c5
.word 0x7f3d5f35
.word 0x7eb8e8da
.word 0xc00316c5
.word 0x7f3d5f35
.word 0x7eb8e8da
.word 0xc00316c5
.word 0x7f3d5f35
.word 0x7eb8e8da
.word 0xc00316c5
.word 0x7f3d5f35
.word 0x7eb8e8da
.word 0xc00316c5
.word 0x7f3d5f35
.word 0x7d9336d5
.word 0xc0aa9b0a
.word 0x7ec43724
.word 0x7d9336d5
.word 0xc0aa9b0a
.word 0x7ec43724
.word 0x7d9336d5
.word 0xc0aa9b0a
.word 0x7ec43724
.word 0x7d9336d5
.word 0xc0aa9b0a
.word 0x7ec43724
.word 0x7d9336d5
.word 0xc0aa9b0a
.word 0x7ec43724
.word 0x79b337a6
.word 0xc5067106
.word 0x7f3c3c81
.word 0x79b337a6
.word 0xc5067106
.word 0x7f3c3c81
.word 0x79b337a6
.word 0xc5067106
.word 0x7f3c3c81
.word 0x79b337a6
.word 0xc5067106
.word 0x7f3c3c81
.word 0x79b337a6
.word 0xc5067106
.word 0x7f3c3c81
.word 0x7e9f2b29
.word 0xc00cb440
.word 0x7f2ef75a
.word 0x7e9f2b29
.word 0xc00cb440
.word 0x7f2ef75a
.word 0x7e9f2b29
.word 0xc00cb440
.word 0x7f2ef75a
.word 0x7e9f2b29
.word 0xc00cb440
.word 0x7f2ef75a
.word 0x7e9f2b29
.word 0xc00cb440
.word 0x7f2ef75a
.word 0x7e7cb9b3
.word 0xc0263804
.word 0x7f2417b7
.word 0x7e7cb9b3
.word 0xc0263804
.word 0x7f2417b7
.word 0x7e7cb9b3
.word 0xc0263804
.word 0x7f2417b7
.word 0x7e7cb9b3
.word 0xc0263804
.word 0x7f2417b7
.word 0x7e7cb9b3
.word 0xc0263804
.word 0x7f2417b7
.word 0x7c07b7d1
.word 0xc2932367
.word 0x7f1c02a4
.word 0x7c07b7d1
.word 0xc2932367
.word 0x7f1c02a4
.word 0x7c07b7d1
.word 0xc2932367
.word 0x7f1c02a4
.word 0x7c07b7d1
.word 0xc2932367
.word 0x7f1c02a4
.word 0x7c07b7d1
.word 0xc2932367
.word 0x7f1c02a4
.word 0x7edd24f8
.word 0xbf8e6154
.word 0x7ef5fd2b
.word 0x7edd24f8
.word 0xbf8e6154
.word 0x7ef5fd2b
.word 0x7edd24f8
.word 0xbf8e6154
.word 0x7ef5fd2b
.word 0x7edd24f8
.word 0xbf8e6154
.word 0x7ef5fd2b
.word 0x7edd24f8
.word 0xbf8e6154
.word 0x7ef5fd2b
.word 0x7f0d53bc
.word 0xbf8043ea
.word 0x7f0d9eb9
.word 0x7f0d53bc
.word 0xbf8043ea
.word 0x7f0d9eb9
.word 0x7f0d53bc
.word 0xbf8043ea
.word 0x7f0d9eb9
.word 0x7f0d53bc
.word 0xbf8043ea
.word 0x7f0d9eb9
.word 0x7f0d53bc
.word 0xbf8043ea
.word 0x7f0d9eb9
.word 0x7e716164
.word 0xc046f058
.word 0x7f3b93f2
.word 0x7e716164
.word 0xc046f058
.word 0x7f3b93f2
.word 0x7e716164
.word 0xc046f058
.word 0x7f3b93f2
.word 0x7e716164
.word 0xc046f058
.word 0x7f3b93f2
.word 0x7e716164
.word 0xc046f058
.word 0x7f3b93f2
.word 0x7f09f4cb
.word 0xbe96f1ff
.word 0x7e22afb1
.word 0x7f09f4cb
.word 0xbe96f1ff
.word 0x7e22afb1
.word 0x7f09f4cb
.word 0xbe96f1ff
.word 0x7e22afb1
.word 0x7f09f4cb
.word 0xbe96f1ff
.word 0x7e22afb1
.word 0x7f09f4cb
.word 0xbe96f1ff
.word 0x7e22afb1
.word 0x7db1abfa
.word 0xbea1f85f
.word 0x7ce0d312
.word 0x7db1abfa
.word 0xbea1f85f
.word 0x7ce0d312
.word 0x7db1abfa
.word 0xbea1f85f
.word 0x7ce0d312
.word 0x7db1abfa
.word 0xbea1f85f
.word 0x7ce0d312
.word 0x7db1abfa
.word 0xbea1f85f
.word 0x7ce0d312
.word 0x7f29472d
.word 0xbe65286c
.word 0x7e178766
.word 0x7f29472d
.word 0xbe65286c
.word 0x7e178766
.word 0x7f29472d
.word 0xbe65286c
.word 0x7e178766
.word 0x7f29472d
.word 0xbe65286c
.word 0x7e178766
.word 0x7f29472d
.word 0xbe65286c
.word 0x7e178766
.word 0x7ef43c57
.word 0xbecc0046
.word 0x7e42a058
.word 0x7ef43c57
.word 0xbecc0046
.word 0x7e42a058
.word 0x7ef43c57
.word 0xbecc0046
.word 0x7e42a058
.word 0x7ef43c57
.word 0xbecc0046
.word 0x7e42a058
.word 0x7ef43c57
.word 0xbecc0046
.word 0x7e42a058
.word 0x7f11bea7
.word 0xbe92ceae
.word 0x7e2728cd
.word 0x7f11bea7
.word 0xbe92ceae
.word 0x7e2728cd
.word 0x7f11bea7
.word 0xbe92ceae
.word 0x7e2728cd
.word 0x7f11bea7
.word 0xbe92ceae
.word 0x7e2728cd
.word 0x7f11bea7
.word 0xbe92ceae
.word 0x7e2728cd
.word 0x7d87ec62
.word 0xc10f6574
.word 0x7f1845d2
.word 0x7d87ec62
.word 0xc10f6574
.word 0x7f1845d2
.word 0x7d87ec62
.word 0xc10f6574
.word 0x7f1845d2
.word 0x7d87ec62
.word 0xc10f6574
.word 0x7f1845d2
.word 0x7d87ec62
.word 0xc10f6574
.word 0x7f1845d2
.word 0x7de06a5f
.word 0xc0b44e7e
.word 0x7f1e0f9a
.word 0x7de06a5f
.word 0xc0b44e7e
.word 0x7f1e0f9a
.word 0x7de06a5f
.word 0xc0b44e7e
.word 0x7f1e0f9a
.word 0x7de06a5f
.word 0xc0b44e7e
.word 0x7f1e0f9a
.word 0x7de06a5f
.word 0xc0b44e7e
.word 0x7f1e0f9a
.word 0x7f083174
.word 0xbe7ace38
.word 0x7e056e01
.word 0x7f083174
.word 0xbe7ace38
.word 0x7e056e01
.word 0x7f083174
.word 0xbe7ace38
.word 0x7e056e01
.word 0x7f083174
.word 0xbe7ace38
.word 0x7e056e01
.word 0x7f083174
.word 0xbe7ace38
.word 0x7e056e01
.word 0x7e934fd6
.word 0xbfb66346
.word 0x7ed1e7c5
.word 0x7e934fd6
.word 0xbfb66346
.word 0x7ed1e7c5
.word 0x7e934fd6
.word 0xbfb66346
.word 0x7ed1e7c5
.word 0x7e934fd6
.word 0xbfb66346
.word 0x7ed1e7c5
.word 0x7e934fd6
.word 0xbfb66346
.word 0x7ed1e7c5
.word 0x7eaf4548
.word 0xbf83d01a
.word 0x7eb47ddd
.word 0x7eaf4548
.word 0xbf83d01a
.word 0x7eb47ddd
.word 0x7eaf4548
.word 0xbf83d01a
.word 0x7eb47ddd
.word 0x7eaf4548
.word 0xbf83d01a
.word 0x7eb47ddd
.word 0x7eaf4548
.word 0xbf83d01a
.word 0x7eb47ddd
.word 0x7e8ac422
.word 0xbfd4b01c
.word 0x7ee693c5
.word 0x7e8ac422
.word 0xbfd4b01c
.word 0x7ee693c5
.word 0x7e8ac422
.word 0xbfd4b01c
.word 0x7ee693c5
.word 0x7e8ac422
.word 0xbfd4b01c
.word 0x7ee693c5
.word 0x7e8ac422
.word 0xbfd4b01c
.word 0x7ee693c5
.word 0x7ede1a0d
.word 0xbfa300f3
.word 0x7f0d6b6a
.word 0x7ede1a0d
.word 0xbfa300f3
.word 0x7f0d6b6a
.word 0x7ede1a0d
.word 0xbfa300f3
.word 0x7f0d6b6a
.word 0x7ede1a0d
.word 0xbfa300f3
.word 0x7f0d6b6a
.word 0x7ede1a0d
.word 0xbfa300f3
.word 0x7f0d6b6a
.word 0x7efb1520
.word 0xbf0584ae
.word 0x7e82f41c
.word 0x7efb1520
.word 0xbf0584ae
.word 0x7e82f41c
.word 0x7efb1520
.word 0xbf0584ae
.word 0x7e82f41c
.word 0x7efb1520
.word 0xbf0584ae
.word 0x7e82f41c
.word 0x7efb1520
.word 0xbf0584ae
.word 0x7e82f41c
.word 0x7ef19d36
.word 0xbf4b1faf
.word 0x7ebfb592
.word 0x7ef19d36
.word 0xbf4b1faf
.word 0x7ebfb592
.word 0x7ef19d36
.word 0xbf4b1faf
.word 0x7ebfb592
.word 0x7ef19d36
.word 0xbf4b1faf
.word 0x7ebfb592
.word 0x7ef19d36
.word 0xbf4b1faf
.word 0x7ebfb592
.word 0x7f2522c3
.word 0xbf05162a
.word 0x7eabb2b6
.word 0x7f2522c3
.word 0xbf05162a
.word 0x7eabb2b6
.word 0x7f2522c3
.word 0xbf05162a
.word 0x7eabb2b6
.word 0x7f2522c3
.word 0xbf05162a
.word 0x7eabb2b6
.word 0x7f2522c3
.word 0xbf05162a
.word 0x7eabb2b6
.word 0x7f218e29
.word 0xbeb034b9
.word 0x7e5e6605
.word 0x7f218e29
.word 0xbeb034b9
.word 0x7e5e6605
.word 0x7f218e29
.word 0xbeb034b9
.word 0x7e5e6605
.word 0x7f218e29
.word 0xbeb034b9
.word 0x7e5e6605
.word 0x7f218e29
.word 0xbeb034b9
.word 0x7e5e6605
.word 0x7ee04709
.word 0xbee49fbb
.word 0x7e484b34
.word 0x7ee04709
.word 0xbee49fbb
.word 0x7e484b34
.word 0x7ee04709
.word 0xbee49fbb
.word 0x7e484b34
.word 0x7ee04709
.word 0xbee49fbb
.word 0x7e484b34
.word 0x7ee04709
.word 0xbee49fbb
.word 0x7e484b34
.word 0x7f1660d9
.word 0xbf72578d
.word 0x7f0e5afb
.word 0x7f1660d9
.word 0xbf72578d
.word 0x7f0e5afb
.word 0x7f1660d9
.word 0xbf72578d
.word 0x7f0e5afb
.word 0x7f1660d9
.word 0xbf72578d
.word 0x7f0e5afb
.word 0x7f1660d9
.word 0xbf72578d
.word 0x7f0e5afb
.word 0x7ef8760e
.word 0xbf9b7994
.word 0x7f16e57a
.word 0x7ef8760e
.word 0xbf9b7994
.word 0x7f16e57a
.word 0x7ef8760e
.word 0xbf9b7994
.word 0x7f16e57a
.word 0x7ef8760e
.word 0xbf9b7994
.word 0x7f16e57a
.word 0x7ef8760e
.word 0xbf9b7994
.word 0x7f16e57a
.word 0x7ed79d68
.word 0xbf09912b
.word 0x7e67bb04
.word 0x7ed79d68
.word 0xbf09912b
.word 0x7e67bb04
.word 0x7ed79d68
.word 0xbf09912b
.word 0x7e67bb04
.word 0x7ed79d68
.word 0xbf09912b
.word 0x7e67bb04
.word 0x7ed79d68
.word 0xbf09912b
.word 0x7e67bb04
.word 0x7e8a6e21
.word 0xbf821aed
.word 0x7e8cb4f9
.word 0x7e8a6e21
.word 0xbf821aed
.word 0x7e8cb4f9
.word 0x7e8a6e21
.word 0xbf821aed
.word 0x7e8cb4f9
.word 0x7e8a6e21
.word 0xbf821aed
.word 0x7e8cb4f9
.word 0x7e8a6e21
.word 0xbf821aed
.word 0x7e8cb4f9
.word 0x7cc76175
.word 0xc0e56195
.word 0x7e32a62e
.word 0x7cc76175
.word 0xc0e56195
.word 0x7e32a62e
.word 0x7cc76175
.word 0xc0e56195
.word 0x7e32a62e
.word 0x7cc76175
.word 0xc0e56195
.word 0x7e32a62e
.word 0x7cc76175
.word 0xc0e56195
.word 0x7e32a62e
.word 0x7f2afdd1
.word 0xbeb404d4
.word 0x7e707b62
.word 0x7f2afdd1
.word 0xbeb404d4
.word 0x7e707b62
.word 0x7f2afdd1
.word 0xbeb404d4
.word 0x7e707b62
.word 0x7f2afdd1
.word 0xbeb404d4
.word 0x7e707b62
.word 0x7f2afdd1
.word 0xbeb404d4
.word 0x7e707b62
.word 0x7dd81c21
.word 0xc0a176e1
.word 0x7f084e0c
.word 0x7dd81c21
.word 0xc0a176e1
.word 0x7f084e0c
.word 0x7dd81c21
.word 0xc0a176e1
.word 0x7f084e0c
.word 0x7dd81c21
.word 0xc0a176e1
.word 0x7f084e0c
.word 0x7dd81c21
.word 0xc0a176e1
.word 0x7f084e0c
.word 0x7ef16a4d
.word 0xbd7b5d15
.word 0x7ced0b02
.word 0x7ef16a4d
.word 0xbd7b5d15
.word 0x7ced0b02
.word 0x7ef16a4d
.word 0xbd7b5d15
.word 0x7ced0b02
.word 0x7ef16a4d
.word 0xbd7b5d15
.word 0x7ced0b02
.word 0x7ef16a4d
.word 0xbd7b5d15
.word 0x7ced0b02
.word 0x7f1b2767
.word 0xbeed8ad3
.word 0x7e8ff79e
.word 0x7f1b2767
.word 0xbeed8ad3
.word 0x7e8ff79e
.word 0x7f1b2767
.word 0xbeed8ad3
.word 0x7e8ff79e
.word 0x7f1b2767
.word 0xbeed8ad3
.word 0x7e8ff79e
.word 0x7f1b2767
.word 0xbeed8ad3
.word 0x7e8ff79e
.word 0x7e84f86c
.word 0xbf8969f0
.word 0x7e8ebff1
.word 0x7e84f86c
.word 0xbf8969f0
.word 0x7e8ebff1
.word 0x7e84f86c
.word 0xbf8969f0
.word 0x7e8ebff1
.word 0x7e84f86c
.word 0xbf8969f0
.word 0x7e8ebff1
.word 0x7e84f86c
.word 0xbf8969f0
.word 0x7e8ebff1
.word 0x7e35114f
.word 0xbfc6436e
.word 0x7e8c3b14
.word 0x7e35114f
.word 0xbfc6436e
.word 0x7e8c3b14
.word 0x7e35114f
.word 0xbfc6436e
.word 0x7e8c3b14
.word 0x7e35114f
.word 0xbfc6436e
.word 0x7e8c3b14
.word 0x7e35114f
.word 0xbfc6436e
.word 0x7e8c3b14
.word 0x7eb7099a
.word 0xbeb65417
.word 0x7e025cf4
.word 0x7eb7099a
.word 0xbeb65417
.word 0x7e025cf4
.word 0x7eb7099a
.word 0xbeb65417
.word 0x7e025cf4
.word 0x7eb7099a
.word 0xbeb65417
.word 0x7e025cf4
.word 0x7eb7099a
.word 0xbeb65417
.word 0x7e025cf4
.word 0x7f35c708
.word 0xbf2fcfdc
.word 0x7ef9ad4e
.word 0x7f35c708
.word 0xbf2fcfdc
.word 0x7ef9ad4e
.word 0x7f35c708
.word 0xbf2fcfdc
.word 0x7ef9ad4e
.word 0x7f35c708
.word 0xbf2fcfdc
.word 0x7ef9ad4e
.word 0x7f35c708
.word 0xbf2fcfdc
.word 0x7ef9ad4e
.word 0x7f3d4865
.word 0xbeb9ff7a
.word 0x7e898636
.word 0x7f3d4865
.word 0xbeb9ff7a
.word 0x7e898636
.word 0x7f3d4865
.word 0xbeb9ff7a
.word 0x7e898636
.word 0x7f3d4865
.word 0xbeb9ff7a
.word 0x7e898636
.word 0x7f3d4865
.word 0xbeb9ff7a
.word 0x7e898636
.word 0x7ee6e0be
.word 0xbf8ba42e
.word 0x7efbe033
.word 0x7ee6e0be
.word 0xbf8ba42e
.word 0x7efbe033
.word 0x7ee6e0be
.word 0xbf8ba42e
.word 0x7efbe033
.word 0x7ee6e0be
.word 0xbf8ba42e
.word 0x7efbe033
.word 0x7ee6e0be
.word 0xbf8ba42e
.word 0x7efbe033
.word 0x7f3fd2a7
.word 0xbd225cdc
.word 0x7cf351c5
.word 0x7f3fd2a7
.word 0xbd225cdc
.word 0x7cf351c5
.word 0x7f3fd2a7
.word 0xbd225cdc
.word 0x7cf351c5
.word 0x7f3fd2a7
.word 0xbd225cdc
.word 0x7cf351c5
.word 0x7f3fd2a7
.word 0xbd225cdc
.word 0x7cf351c5
.word 0x7f394df5
.word 0xbde542ef
.word 0x7da5f32f
.word 0x7f394df5
.word 0xbde542ef
.word 0x7da5f32f
.word 0x7f394df5
.word 0xbde542ef
.word 0x7da5f32f
.word 0x7f394df5
.word 0xbde542ef
.word 0x7da5f32f
.word 0x7f394df5
.word 0xbde542ef
.word 0x7da5f32f
.word 0x7ea366fd
.word 0xbfbd9765
.word 0x7ef20757
.word 0x7ea366fd
.word 0xbfbd9765
.word 0x7ef20757
.word 0x7ea366fd
.word 0xbfbd9765
.word 0x7ef20757
.word 0x7ea366fd
.word 0xbfbd9765
.word 0x7ef20757
.word 0x7ea366fd
.word 0xbfbd9765
.word 0x7ef20757
.word 0x7dc3b11b
.word 0xc0f23ea7
.word 0x7f392d50
.word 0x7dc3b11b
.word 0xc0f23ea7
.word 0x7f392d50
.word 0x7dc3b11b
.word 0xc0f23ea7
.word 0x7f392d50
.word 0x7dc3b11b
.word 0xc0f23ea7
.word 0x7f392d50
.word 0x7dc3b11b
.word 0xc0f23ea7
.word 0x7f392d50
.word 0x7e0dd078
.word 0xc048fee8
.word 0x7edeb026
.word 0x7e0dd078
.word 0xc048fee8
.word 0x7edeb026
.word 0x7e0dd078
.word 0xc048fee8
.word 0x7edeb026
.word 0x7e0dd078
.word 0xc048fee8
.word 0x7edeb026
.word 0x7e0dd078
.word 0xc048fee8
.word 0x7edeb026
.word 0x7f042c30
.word 0xbded24b7
.word 0x7d74dfbb
.word 0x7f042c30
.word 0xbded24b7
.word 0x7d74dfbb
.word 0x7f042c30
.word 0xbded24b7
.word 0x7d74dfbb
.word 0x7f042c30
.word 0xbded24b7
.word 0x7d74dfbb
.word 0x7f042c30
.word 0xbded24b7
.word 0x7d74dfbb
.word 0x7eeea107
.word 0xbe6c02b1
.word 0x7ddbfef4
.word 0x7eeea107
.word 0xbe6c02b1
.word 0x7ddbfef4
.word 0x7eeea107
.word 0xbe6c02b1
.word 0x7ddbfef4
.word 0x7eeea107
.word 0xbe6c02b1
.word 0x7ddbfef4
.word 0x7eeea107
.word 0xbe6c02b1
.word 0x7ddbfef4
.word 0x7e8543e0
.word 0xc000e517
.word 0x7f063264
.word 0x7e8543e0
.word 0xc000e517
.word 0x7f063264
.word 0x7e8543e0
.word 0xc000e517
.word 0x7f063264
.word 0x7e8543e0
.word 0xc000e517
.word 0x7f063264
.word 0x7e8543e0
.word 0xc000e517
.word 0x7f063264
.word 0x7e8ea689
.word 0xc022c32f
.word 0x7f35644c
.word 0x7e8ea689
.word 0xc022c32f
.word 0x7f35644c
.word 0x7e8ea689
.word 0xc022c32f
.word 0x7f35644c
.word 0x7e8ea689
.word 0xc022c32f
.word 0x7f35644c
.word 0x7e8ea689
.word 0xc022c32f
.word 0x7f35644c
.word 0x7e975320
.word 0xbdb5a312
.word 0x7cd6bc56
.word 0x7e975320
.word 0xbdb5a312
.word 0x7cd6bc56
.word 0x7e975320
.word 0xbdb5a312
.word 0x7cd6bc56
.word 0x7e975320
.word 0xbdb5a312
.word 0x7cd6bc56
.word 0x7e975320
.word 0xbdb5a312
.word 0x7cd6bc56
.word 0x7ef89da9
.word 0xbe448a7d
.word 0x7dbedf34
.word 0x7ef89da9
.word 0xbe448a7d
.word 0x7dbedf34
.word 0x7ef89da9
.word 0xbe448a7d
.word 0x7dbedf34
.word 0x7ef89da9
.word 0xbe448a7d
.word 0x7dbedf34
.word 0x7ef89da9
.word 0xbe448a7d
.word 0x7dbedf34
.word 0x7f133609
.word 0xbf89b51b
.word 0x7f1e6020
.word 0x7f133609
.word 0xbf89b51b
.word 0x7f1e6020
.word 0x7f133609
.word 0xbf89b51b
.word 0x7f1e6020
.word 0x7f133609
.word 0xbf89b51b
.word 0x7f1e6020
.word 0x7f133609
.word 0xbf89b51b
.word 0x7f1e6020
.word 0x7e27090d
.word 0xc01aee25
.word 0x7eca2da9
.word 0x7e27090d
.word 0xc01aee25
.word 0x7eca2da9
.word 0x7e27090d
.word 0xc01aee25
.word 0x7eca2da9
.word 0x7e27090d
.word 0xc01aee25
.word 0x7eca2da9
.word 0x7e27090d
.word 0xc01aee25
.word 0x7eca2da9
.word 0x7f33dfb8
.word 0xbe9e050d
.word 0x7e5e0f41
.word 0x7f33dfb8
.word 0xbe9e050d
.word 0x7e5e0f41
.word 0x7f33dfb8
.word 0xbe9e050d
.word 0x7e5e0f41
.word 0x7f33dfb8
.word 0xbe9e050d
.word 0x7e5e0f41
.word 0x7f33dfb8
.word 0xbe9e050d
.word 0x7e5e0f41
.word 0x7f3a8a7e
.word 0xbf0c9d85
.word 0x7ecced0a
.word 0x7f3a8a7e
.word 0xbf0c9d85
.word 0x7ecced0a
.word 0x7f3a8a7e
.word 0xbf0c9d85
.word 0x7ecced0a
.word 0x7f3a8a7e
.word 0xbf0c9d85
.word 0x7ecced0a
.word 0x7f3a8a7e
.word 0xbf0c9d85
.word 0x7ecced0a
.word 0x7f20dd6a
.word 0xbf18c1e6
.word 0x7ebffa9e
.word 0x7f20dd6a
.word 0xbf18c1e6
.word 0x7ebffa9e
.word 0x7f20dd6a
.word 0xbf18c1e6
.word 0x7ebffa9e
.word 0x7f20dd6a
.word 0xbf18c1e6
.word 0x7ebffa9e
.word 0x7f20dd6a
.word 0xbf18c1e6
.word 0x7ebffa9e
.word 0x7eb6bc41
.word 0xbe89993b
.word 0x7dc47040
.word 0x7eb6bc41
.word 0xbe89993b
.word 0x7dc47040
.word 0x7eb6bc41
.word 0xbe89993b
.word 0x7dc47040
.word 0x7eb6bc41
.word 0xbe89993b
.word 0x7dc47040
.word 0x7eb6bc41
.word 0xbe89993b
.word 0x7dc47040
.word 0x7e6d2bf9
.word 0xc00cf386
.word 0x7f0295a9
.word 0x7e6d2bf9
.word 0xc00cf386
.word 0x7f0295a9
.word 0x7e6d2bf9
.word 0xc00cf386
.word 0x7f0295a9
.word 0x7e6d2bf9
.word 0xc00cf386
.word 0x7f0295a9
.word 0x7e6d2bf9
.word 0xc00cf386
.word 0x7f0295a9
.word 0x7f220c6a
.word 0xbf2025e5
.word 0x7ecabf7f
.word 0x7f220c6a
.word 0xbf2025e5
.word 0x7ecabf7f
.word 0x7f220c6a
.word 0xbf2025e5
.word 0x7ecabf7f
.word 0x7f220c6a
.word 0xbf2025e5
.word 0x7ecabf7f
.word 0x7f220c6a
.word 0xbf2025e5
.word 0x7ecabf7f
.word 0x7ebc0477
.word 0xbf3fa5b4
.word 0x7e8cc108
.word 0x7ebc0477
.word 0xbf3fa5b4
.word 0x7e8cc108
.word 0x7ebc0477
.word 0xbf3fa5b4
.word 0x7e8cc108
.word 0x7ebc0477
.word 0xbf3fa5b4
.word 0x7e8cc108
.word 0x7ebc0477
.word 0xbf3fa5b4
.word 0x7e8cc108
.word 0x7f04e2ff
.word 0xbfb5dcee
.word 0x7f3cce5b
.word 0x7f04e2ff
.word 0xbfb5dcee
.word 0x7f3cce5b
.word 0x7f04e2ff
.word 0xbfb5dcee
.word 0x7f3cce5b
.word 0x7f04e2ff
.word 0xbfb5dcee
.word 0x7f3cce5b
.word 0x7f04e2ff
.word 0xbfb5dcee
.word 0x7f3cce5b
.word 0x7f2c2373
.word 0xbf83bb5d
.word 0x7f312842
.word 0x7f2c2373
.word 0xbf83bb5d
.word 0x7f312842
.word 0x7f2c2373
.word 0xbf83bb5d
.word 0x7f312842
.word 0x7f2c2373
.word 0xbf83bb5d
.word 0x7f312842
.word 0x7f2c2373
.word 0xbf83bb5d
.word 0x7f312842
.word 0x7f33cf6c
.word 0xbf1e17e3
.word 0x7ede1598
.word 0x7f33cf6c
.word 0xbf1e17e3
.word 0x7ede1598
.word 0x7f33cf6c
.word 0xbf1e17e3
.word 0x7ede1598
.word 0x7f33cf6c
.word 0xbf1e17e3
.word 0x7ede1598
.word 0x7f33cf6c
.word 0xbf1e17e3
.word 0x7ede1598
.word 0x7eebaf59
.word 0xbf2d06ce
.word 0x7e9f4bc3
.word 0x7eebaf59
.word 0xbf2d06ce
.word 0x7e9f4bc3
.word 0x7eebaf59
.word 0xbf2d06ce
.word 0x7e9f4bc3
.word 0x7eebaf59
.word 0xbf2d06ce
.word 0x7e9f4bc3
.word 0x7eebaf59
.word 0xbf2d06ce
.word 0x7e9f4bc3
.word 0x7f2a6406
.word 0xbf28ea23
.word 0x7ee0daf6
.word 0x7f2a6406
.word 0xbf28ea23
.word 0x7ee0daf6
.word 0x7f2a6406
.word 0xbf28ea23
.word 0x7ee0daf6
.word 0x7f2a6406
.word 0xbf28ea23
.word 0x7ee0daf6
.word 0x7f2a6406
.word 0xbf28ea23
.word 0x7ee0daf6
.word 0x7f125073
.word 0xbda3864f
.word 0x7d3aebfa
.word 0x7f125073
.word 0xbda3864f
.word 0x7d3aebfa
.word 0x7f125073
.word 0xbda3864f
.word 0x7d3aebfa
.word 0x7f125073
.word 0xbda3864f
.word 0x7d3aebfa
.word 0x7f125073
.word 0xbda3864f
.word 0x7d3aebfa
.word 0x7e9c9a88
.word 0xbed41f4f
.word 0x7e01c320
.word 0x7e9c9a88
.word 0xbed41f4f
.word 0x7e01c320
.word 0x7e9c9a88
.word 0xbed41f4f
.word 0x7e01c320
.word 0x7e9c9a88
.word 0xbed41f4f
.word 0x7e01c320
.word 0x7e9c9a88
.word 0xbed41f4f
.word 0x7e01c320
.word 0x7dcbc1b7
.word 0xc01dafc1
.word 0x7e7b0361
.word 0x7dcbc1b7
.word 0xc01dafc1
.word 0x7e7b0361
.word 0x7dcbc1b7
.word 0xc01dafc1
.word 0x7e7b0361
.word 0x7dcbc1b7
.word 0xc01dafc1
.word 0x7e7b0361
.word 0x7dcbc1b7
.word 0xc01dafc1
.word 0x7e7b0361
.word 0x7f3f7e14
.word 0xbf6f07dc
.word 0x7f32cc96
.word 0x7f3f7e14
.word 0xbf6f07dc
.word 0x7f32cc96
.word 0x7f3f7e14
.word 0xbf6f07dc
.word 0x7f32cc96
.word 0x7f3f7e14
.word 0xbf6f07dc
.word 0x7f32cc96
.word 0x7f3f7e14
.word 0xbf6f07dc
.word 0x7f32cc96
.word 0x7ed8215c
.word 0xbfd4e017
.word 0x7f33b8d2
.word 0x7ed8215c
.word 0xbfd4e017
.word 0x7f33b8d2
.word 0x7ed8215c
.word 0xbfd4e017
.word 0x7f33b8d2
.word 0x7ed8215c
.word 0xbfd4e017
.word 0x7f33b8d2
.word 0x7ed8215c
.word 0xbfd4e017
.word 0x7f33b8d2
.word 0x7f0d5723
.word 0xbf26896f
.word 0x7eb7e4c4
.word 0x7f0d5723
.word 0xbf26896f
.word 0x7eb7e4c4
.word 0x7f0d5723
.word 0xbf26896f
.word 0x7eb7e4c4
.word 0x7f0d5723
.word 0xbf26896f
.word 0x7eb7e4c4
.word 0x7f0d5723
.word 0xbf26896f
.word 0x7eb7e4c4
.word 0x7e7af3fb
.word 0xc02cbaf4
.word 0x7f295332
.word 0x7e7af3fb
.word 0xc02cbaf4
.word 0x7f295332
.word 0x7e7af3fb
.word 0xc02cbaf4
.word 0x7f295332
.word 0x7e7af3fb
.word 0xc02cbaf4
.word 0x7f295332
.word 0x7e7af3fb
.word 0xc02cbaf4
.word 0x7f295332
.word 0x7f1e6a36
.word 0xbf2d9764
.word 0x7ed6d6eb
.word 0x7f1e6a36
.word 0xbf2d9764
.word 0x7ed6d6eb
.word 0x7f1e6a36
.word 0xbf2d9764
.word 0x7ed6d6eb
.word 0x7f1e6a36
.word 0xbf2d9764
.word 0x7ed6d6eb
.word 0x7f1e6a36
.word 0xbf2d9764
.word 0x7ed6d6eb
.word 0x7ed57298
.word 0xbfa985e0
.word 0x7f0d5846
.word 0x7ed57298
.word 0xbfa985e0
.word 0x7f0d5846
.word 0x7ed57298
.word 0xbfa985e0
.word 0x7f0d5846
.word 0x7ed57298
.word 0xbfa985e0
.word 0x7f0d5846
.word 0x7ed57298
.word 0xbfa985e0
.word 0x7f0d5846
.word 0x7da77072
.word 0xbeeef63b
.word 0x7d1c4b97
.word 0x7da77072
.word 0xbeeef63b
.word 0x7d1c4b97
.word 0x7da77072
.word 0xbeeef63b
.word 0x7d1c4b97
.word 0x7da77072
.word 0xbeeef63b
.word 0x7d1c4b97
.word 0x7da77072
.word 0xbeeef63b
.word 0x7d1c4b97
.word 0x7e07b179
.word 0xc087ba67
.word 0x7f0fe2c9
.word 0x7e07b179
.word 0xc087ba67
.word 0x7f0fe2c9
.word 0x7e07b179
.word 0xc087ba67
.word 0x7f0fe2c9
.word 0x7e07b179
.word 0xc087ba67
.word 0x7f0fe2c9
.word 0x7e07b179
.word 0xc087ba67
.word 0x7f0fe2c9
.word 0x7e2af59a
.word 0xbfa891e9
.word 0x7e61253d
.word 0x7e2af59a
.word 0xbfa891e9
.word 0x7e61253d
.word 0x7e2af59a
.word 0xbfa891e9
.word 0x7e61253d
.word 0x7e2af59a
.word 0xbfa891e9
.word 0x7e61253d
.word 0x7e2af59a
.word 0xbfa891e9
.word 0x7e61253d
.word 0x7f162ed7
.word 0xbe029e84
.word 0x7d994190
.word 0x7f162ed7
.word 0xbe029e84
.word 0x7d994190
.word 0x7f162ed7
.word 0xbe029e84
.word 0x7d994190
.word 0x7f162ed7
.word 0xbe029e84
.word 0x7d994190
.word 0x7f162ed7
.word 0xbe029e84
.word 0x7d994190
.word 0x7e957cfe
.word 0xbf8dc9a3
.word 0x7ea5972e
.word 0x7e957cfe
.word 0xbf8dc9a3
.word 0x7ea5972e
.word 0x7e957cfe
.word 0xbf8dc9a3
.word 0x7ea5972e
.word 0x7e957cfe
.word 0xbf8dc9a3
.word 0x7ea5972e
.word 0x7e957cfe
.word 0xbf8dc9a3
.word 0x7ea5972e
.word 0x7df55b75
.word 0xbfcc4428
.word 0x7e43c635
.word 0x7df55b75
.word 0xbfcc4428
.word 0x7e43c635
.word 0x7df55b75
.word 0xbfcc4428
.word 0x7e43c635
.word 0x7df55b75
.word 0xbfcc4428
.word 0x7e43c635
.word 0x7df55b75
.word 0xbfcc4428
.word 0x7e43c635
.word 0x7f0a8170
.word 0xbef70672
.word 0x7e85a65f
.word 0x7f0a8170
.word 0xbef70672
.word 0x7e85a65f
.word 0x7f0a8170
.word 0xbef70672
.word 0x7e85a65f
.word 0x7f0a8170
.word 0xbef70672
.word 0x7e85a65f
.word 0x7f0a8170
.word 0xbef70672
.word 0x7e85a65f
.word 0x7ec7b364
.word 0xbe607517
.word 0x7daf184f
.word 0x7ec7b364
.word 0xbe607517
.word 0x7daf184f
.word 0x7ec7b364
.word 0xbe607517
.word 0x7daf184f
.word 0x7ec7b364
.word 0xbe607517
.word 0x7daf184f
.word 0x7ec7b364
.word 0xbe607517
.word 0x7daf184f
.word 0x7e8946d5
.word 0xbf6a03fc
.word 0x7e7af9c4
.word 0x7e8946d5
.word 0xbf6a03fc
.word 0x7e7af9c4
.word 0x7e8946d5
.word 0xbf6a03fc
.word 0x7e7af9c4
.word 0x7e8946d5
.word 0xbf6a03fc
.word 0x7e7af9c4
.word 0x7e8946d5
.word 0xbf6a03fc
.word 0x7e7af9c4
.word 0x7e7537d6
.word 0xbf6dccdf
.word 0x7e63c8ef
.word 0x7e7537d6
.word 0xbf6dccdf
.word 0x7e63c8ef
.word 0x7e7537d6
.word 0xbf6dccdf
.word 0x7e63c8ef
.word 0x7e7537d6
.word 0xbf6dccdf
.word 0x7e63c8ef
.word 0x7e7537d6
.word 0xbf6dccdf
.word 0x7e63c8ef
.word 0x7f0b252f
.word 0xbf53da48
.word 0x7ee64c95
.word 0x7f0b252f
.word 0xbf53da48
.word 0x7ee64c95
.word 0x7f0b252f
.word 0xbf53da48
.word 0x7ee64c95
.word 0x7f0b252f
.word 0xbf53da48
.word 0x7ee64c95
.word 0x7f0b252f
.word 0xbf53da48
.word 0x7ee64c95
.word 0x7f1f0fb5
.word 0xbf7bc8f4
.word 0x7f1c7142
.word 0x7f1f0fb5
.word 0xbf7bc8f4
.word 0x7f1c7142
.word 0x7f1f0fb5
.word 0xbf7bc8f4
.word 0x7f1c7142
.word 0x7f1f0fb5
.word 0xbf7bc8f4
.word 0x7f1c7142
.word 0x7f1f0fb5
.word 0xbf7bc8f4
.word 0x7f1c7142
.word 0x7efaffa3
.word 0xbf0f7139
.word 0x7e8ca3cf
.word 0x7efaffa3
.word 0xbf0f7139
.word 0x7e8ca3cf
.word 0x7efaffa3
.word 0xbf0f7139
.word 0x7e8ca3cf
.word 0x7efaffa3
.word 0xbf0f7139
.word 0x7e8ca3cf
.word 0x7efaffa3
.word 0xbf0f7139
.word 0x7e8ca3cf
.word 0x7f3099a4
.word 0xbf6f195a
.word 0x7f24f0ee
.word 0x7f3099a4
.word 0xbf6f195a
.word 0x7f24f0ee
.word 0x7f3099a4
.word 0xbf6f195a
.word 0x7f24f0ee
.word 0x7f3099a4
.word 0xbf6f195a
.word 0x7f24f0ee
.word 0x7f3099a4
.word 0xbf6f195a
.word 0x7f24f0ee
.word 0x7e75b2ba
.word 0xbdf7d04c
.word 0x7cedd75c
.word 0x7e75b2ba
.word 0xbdf7d04c
.word 0x7cedd75c
.word 0x7e75b2ba
.word 0xbdf7d04c
.word 0x7cedd75c
.word 0x7e75b2ba
.word 0xbdf7d04c
.word 0x7cedd75c
.word 0x7e75b2ba
.word 0xbdf7d04c
.word 0x7cedd75c
.word 0x7f2614fd
.word 0xbf412b5a
.word 0x7efaa3e6
.word 0x7f2614fd
.word 0xbf412b5a
.word 0x7efaa3e6
.word 0x7f2614fd
.word 0xbf412b5a
.word 0x7efaa3e6
.word 0x7f2614fd
.word 0xbf412b5a
.word 0x7efaa3e6
.word 0x7f2614fd
.word 0xbf412b5a
.word 0x7efaa3e6
.word 0x7d8e6204
.word 0xc0d19284
.word 0x7ee91f07
.word 0x7d8e6204
.word 0xc0d19284
.word 0x7ee91f07
.word 0x7d8e6204
.word 0xc0d19284
.word 0x7ee91f07
.word 0x7d8e6204
.word 0xc0d19284
.word 0x7ee91f07
.word 0x7d8e6204
.word 0xc0d19284
.word 0x7ee91f07
.word 0x7f2dd7a3
.word 0xbf82cfaf
.word 0x7f31a913
.word 0x7f2dd7a3
.word 0xbf82cfaf
.word 0x7f31a913
.word 0x7f2dd7a3
.word 0xbf82cfaf
.word 0x7f31a913
.word 0x7f2dd7a3
.word 0xbf82cfaf
.word 0x7f31a913
.word 0x7f2dd7a3
.word 0xbf82cfaf
.word 0x7f31a913
.word 0x7eb1ac5f
.word 0xbff0529b
.word 0x7f26caee
.word 0x7eb1ac5f
.word 0xbff0529b
.word 0x7f26caee
.word 0x7eb1ac5f
.word 0xbff0529b
.word 0x7f26caee
.word 0x7eb1ac5f
.word 0xbff0529b
.word 0x7f26caee
.word 0x7eb1ac5f
.word 0xbff0529b
.word 0x7f26caee
.word 0x7f03870c
.word 0xbe021d71
.word 0x7d85b36a
.word 0x7f03870c
.word 0xbe021d71
.word 0x7d85b36a
.word 0x7f03870c
.word 0xbe021d71
.word 0x7d85b36a
.word 0x7f03870c
.word 0xbe021d71
.word 0x7d85b36a
.word 0x7f03870c
.word 0xbe021d71
.word 0x7d85b36a
.word 0x7dd221f9
.word 0xc08ec065
.word 0x7eea5989
.word 0x7dd221f9
.word 0xc08ec065
.word 0x7eea5989
.word 0x7dd221f9
.word 0xc08ec065
.word 0x7eea5989
.word 0x7dd221f9
.word 0xc08ec065
.word 0x7eea5989
.word 0x7dd221f9
.word 0xc08ec065
.word 0x7eea5989
.word 0x7f30ba02
.word 0xbf5aacdd
.word 0x7f16f5bb
.word 0x7f30ba02
.word 0xbf5aacdd
.word 0x7f16f5bb
.word 0x7f30ba02
.word 0xbf5aacdd
.word 0x7f16f5bb
.word 0x7f30ba02
.word 0xbf5aacdd
.word 0x7f16f5bb
.word 0x7f30ba02
.word 0xbf5aacdd
.word 0x7f16f5bb
.word 0x7f15ce5c
.word 0xbfa2ead4
.word 0x7f3eac02
.word 0x7f15ce5c
.word 0xbfa2ead4
.word 0x7f3eac02
.word 0x7f15ce5c
.word 0xbfa2ead4
.word 0x7f3eac02
.word 0x7f15ce5c
.word 0xbfa2ead4
.word 0x7f3eac02
.word 0x7f15ce5c
.word 0xbfa2ead4
.word 0x7f3eac02
.word 0x7e94f81b
.word 0xbfd8038b
.word 0x7efb66cd
.word 0x7e94f81b
.word 0xbfd8038b
.word 0x7efb66cd
.word 0x7e94f81b
.word 0xbfd8038b
.word 0x7efb66cd
.word 0x7e94f81b
.word 0xbfd8038b
.word 0x7efb66cd
.word 0x7e94f81b
.word 0xbfd8038b
.word 0x7efb66cd
.word 0x7f15e839
.word 0xbf8213cf
.word 0x7f18570d
.word 0x7f15e839
.word 0xbf8213cf
.word 0x7f18570d
.word 0x7f15e839
.word 0xbf8213cf
.word 0x7f18570d
.word 0x7f15e839
.word 0xbf8213cf
.word 0x7f18570d
.word 0x7f15e839
.word 0xbf8213cf
.word 0x7f18570d
.word 0x7f1f4ea2
.word 0xbee30bb6
.word 0x7e8d4a04
.word 0x7f1f4ea2
.word 0xbee30bb6
.word 0x7e8d4a04
.word 0x7f1f4ea2
.word 0xbee30bb6
.word 0x7e8d4a04
.word 0x7f1f4ea2
.word 0xbee30bb6
.word 0x7e8d4a04
.word 0x7f1f4ea2
.word 0xbee30bb6
.word 0x7e8d4a04
.word 0x7f1c25fe
.word 0xbf3bcbbf
.word 0x7ee51810
.word 0x7f1c25fe
.word 0xbf3bcbbf
.word 0x7ee51810
.word 0x7f1c25fe
.word 0xbf3bcbbf
.word 0x7ee51810
.word 0x7f1c25fe
.word 0xbf3bcbbf
.word 0x7ee51810
.word 0x7f1c25fe
.word 0xbf3bcbbf
.word 0x7ee51810
.word 0x7f0f7f8a
.word 0xbeab31ba
.word 0x7e3fec23
.word 0x7f0f7f8a
.word 0xbeab31ba
.word 0x7e3fec23
.word 0x7f0f7f8a
.word 0xbeab31ba
.word 0x7e3fec23
.word 0x7f0f7f8a
.word 0xbeab31ba
.word 0x7e3fec23
.word 0x7f0f7f8a
.word 0xbeab31ba
.word 0x7e3fec23
.word 0x7f395d94
.word 0xbf518582
.word 0x7f17b612
.word 0x7f395d94
.word 0xbf518582
.word 0x7f17b612
.word 0x7f395d94
.word 0xbf518582
.word 0x7f17b612
.word 0x7f395d94
.word 0xbf518582
.word 0x7f17b612
.word 0x7f395d94
.word 0xbf518582
.word 0x7f17b612
.word 0x7e9e21df
.word 0xbf60a463
.word 0x7e8ac32e
.word 0x7e9e21df
.word 0xbf60a463
.word 0x7e8ac32e
.word 0x7e9e21df
.word 0xbf60a463
.word 0x7e8ac32e
.word 0x7e9e21df
.word 0xbf60a463
.word 0x7e8ac32e
.word 0x7e9e21df
.word 0xbf60a463
.word 0x7e8ac32e
.word 0x7e54fd1e
.word 0xc04d0497
.word 0x7f2a9283
.word 0x7e54fd1e
.word 0xc04d0497
.word 0x7f2a9283
.word 0x7e54fd1e
.word 0xc04d0497
.word 0x7f2a9283
.word 0x7e54fd1e
.word 0xc04d0497
.word 0x7f2a9283
.word 0x7e54fd1e
.word 0xc04d0497
.word 0x7f2a9283
.word 0x7f1a693b
.word 0xbf208215
.word 0x7ec1a077
.word 0x7f1a693b
.word 0xbf208215
.word 0x7ec1a077
.word 0x7f1a693b
.word 0xbf208215
.word 0x7ec1a077
.word 0x7f1a693b
.word 0xbf208215
.word 0x7ec1a077
.word 0x7f1a693b
.word 0xbf208215
.word 0x7ec1a077
.word 0x7e526383
.word 0xbf884582
.word 0x7e5ffbfb
.word 0x7e526383
.word 0xbf884582
.word 0x7e5ffbfb
.word 0x7e526383
.word 0xbf884582
.word 0x7e5ffbfb
.word 0x7e526383
.word 0xbf884582
.word 0x7e5ffbfb
.word 0x7e526383
.word 0xbf884582
.word 0x7e5ffbfb
.word 0x7db3c6fa
.word 0xc0e2be6e
.word 0x7f1f3b63
.word 0x7db3c6fa
.word 0xc0e2be6e
.word 0x7f1f3b63
.word 0x7db3c6fa
.word 0xc0e2be6e
.word 0x7f1f3b63
.word 0x7db3c6fa
.word 0xc0e2be6e
.word 0x7f1f3b63
.word 0x7db3c6fa
.word 0xc0e2be6e
.word 0x7f1f3b63
.word 0x7e5009d7
.word 0xbfc65633
.word 0x7ea12daa
.word 0x7e5009d7
.word 0xbfc65633
.word 0x7ea12daa
.word 0x7e5009d7
.word 0xbfc65633
.word 0x7ea12daa
.word 0x7e5009d7
.word 0xbfc65633
.word 0x7ea12daa
.word 0x7e5009d7
.word 0xbfc65633
.word 0x7ea12daa
.word 0x7d52d2c7
.word 0xc12aec85
.word 0x7f0cc2c0
.word 0x7d52d2c7
.word 0xc12aec85
.word 0x7f0cc2c0
.word 0x7d52d2c7
.word 0xc12aec85
.word 0x7f0cc2c0
.word 0x7d52d2c7
.word 0xc12aec85
.word 0x7f0cc2c0
.word 0x7d52d2c7
.word 0xc12aec85
.word 0x7f0cc2c0
.word 0x7f20eedb
.word 0xbea4389c
.word 0x7e4e7935
.word 0x7f20eedb
.word 0xbea4389c
.word 0x7e4e7935
.word 0x7f20eedb
.word 0xbea4389c
.word 0x7e4e7935
.word 0x7f20eedb
.word 0xbea4389c
.word 0x7e4e7935
.word 0x7f20eedb
.word 0xbea4389c
.word 0x7e4e7935
.word 0x7ebc2348
.word 0xbf8a2fcd
.word 0x7ecb1c4d
.word 0x7ebc2348
.word 0xbf8a2fcd
.word 0x7ecb1c4d
.word 0x7ebc2348
.word 0xbf8a2fcd
.word 0x7ecb1c4d
.word 0x7ebc2348
.word 0xbf8a2fcd
.word 0x7ecb1c4d
.word 0x7ebc2348
.word 0xbf8a2fcd
.word 0x7ecb1c4d
.word 0x7e8b140c
.word 0xbf971595
.word 0x7ea4291a
.word 0x7e8b140c
.word 0xbf971595
.word 0x7ea4291a
.word 0x7e8b140c
.word 0xbf971595
.word 0x7ea4291a
.word 0x7e8b140c
.word 0xbf971595
.word 0x7ea4291a
.word 0x7e8b140c
.word 0xbf971595
.word 0x7ea4291a
.word 0x7f1d9df6
.word 0xbf3ca571
.word 0x7ee84bbc
.word 0x7f1d9df6
.word 0xbf3ca571
.word 0x7ee84bbc
.word 0x7f1d9df6
.word 0xbf3ca571
.word 0x7ee84bbc
.word 0x7f1d9df6
.word 0xbf3ca571
.word 0x7ee84bbc
.word 0x7f1d9df6
.word 0xbf3ca571
.word 0x7ee84bbc
.word 0x7f33b8ad
.word 0xbf471c14
.word 0x7f0bc845
.word 0x7f33b8ad
.word 0xbf471c14
.word 0x7f0bc845
.word 0x7f33b8ad
.word 0xbf471c14
.word 0x7f0bc845
.word 0x7f33b8ad
.word 0xbf471c14
.word 0x7f0bc845
.word 0x7f33b8ad
.word 0xbf471c14
.word 0x7f0bc845
.word 0x7f21c953
.word 0xbf4fe858
.word 0x7f0364a1
.word 0x7f21c953
.word 0xbf4fe858
.word 0x7f0364a1
.word 0x7f21c953
.word 0xbf4fe858
.word 0x7f0364a1
.word 0x7f21c953
.word 0xbf4fe858
.word 0x7f0364a1
.word 0x7f21c953
.word 0xbf4fe858
.word 0x7f0364a1
.word 0x7e5f19b2
.word 0xc0070f39
.word 0x7eeb67a3
.word 0x7e5f19b2
.word 0xc0070f39
.word 0x7eeb67a3
.word 0x7e5f19b2
.word 0xc0070f39
.word 0x7eeb67a3
.word 0x7e5f19b2
.word 0xc0070f39
.word 0x7eeb67a3
.word 0x7e5f19b2
.word 0xc0070f39
.word 0x7eeb67a3
.word 0x7f22a277
.word 0xbebc9501
.word 0x7e6f9bf2
.word 0x7f22a277
.word 0xbebc9501
.word 0x7e6f9bf2
.word 0x7f22a277
.word 0xbebc9501
.word 0x7e6f9bf2
.word 0x7f22a277
.word 0xbebc9501
.word 0x7e6f9bf2
.word 0x7f22a277
.word 0xbebc9501
.word 0x7e6f9bf2
.word 0x7e8e11bf
.word 0xc025d24d
.word 0x7f380c4c
.word 0x7e8e11bf
.word 0xc025d24d
.word 0x7f380c4c
.word 0x7e8e11bf
.word 0xc025d24d
.word 0x7f380c4c
.word 0x7e8e11bf
.word 0xc025d24d
.word 0x7f380c4c
.word 0x7e8e11bf
.word 0xc025d24d
.word 0x7f380c4c
.word 0x7f2260a9
.word 0xbe6d0137
.word 0x7e165442
.word 0x7f2260a9
.word 0xbe6d0137
.word 0x7e165442
.word 0x7f2260a9
.word 0xbe6d0137
.word 0x7e165442
.word 0x7f2260a9
.word 0xbe6d0137
.word 0x7e165442
.word 0x7f2260a9
.word 0xbe6d0137
.word 0x7e165442
.word 0x7f166373
.word 0xbec15f53
.word 0x7e6331f4
.word 0x7f166373
.word 0xbec15f53
.word 0x7e6331f4
.word 0x7f166373
.word 0xbec15f53
.word 0x7e6331f4
.word 0x7f166373
.word 0xbec15f53
.word 0x7e6331f4
.word 0x7f166373
.word 0xbec15f53
.word 0x7e6331f4
.word 0x7ef00b05
.word 0xbfc3f817
.word 0x7f37c106
.word 0x7ef00b05
.word 0xbfc3f817
.word 0x7f37c106
.word 0x7ef00b05
.word 0xbfc3f817
.word 0x7f37c106
.word 0x7ef00b05
.word 0xbfc3f817
.word 0x7f37c106
.word 0x7ef00b05
.word 0xbfc3f817
.word 0x7f37c106
.word 0x7f234aea
.word 0xbf1b66c2
.word 0x7ec63fd0
.word 0x7f234aea
.word 0xbf1b66c2
.word 0x7ec63fd0
.word 0x7f234aea
.word 0xbf1b66c2
.word 0x7ec63fd0
.word 0x7f234aea
.word 0xbf1b66c2
.word 0x7ec63fd0
.word 0x7f234aea
.word 0xbf1b66c2
.word 0x7ec63fd0
.word 0x7e8dcb1e
.word 0xc0232b7a
.word 0x7f34c0d2
.word 0x7e8dcb1e
.word 0xc0232b7a
.word 0x7f34c0d2
.word 0x7e8dcb1e
.word 0xc0232b7a
.word 0x7f34c0d2
.word 0x7e8dcb1e
.word 0xc0232b7a
.word 0x7f34c0d2
.word 0x7e8dcb1e
.word 0xc0232b7a
.word 0x7f34c0d2
.word 0x7ed22d92
.word 0xbfe46f26
.word 0x7f3b8bd7
.word 0x7ed22d92
.word 0xbfe46f26
.word 0x7f3b8bd7
.word 0x7ed22d92
.word 0xbfe46f26
.word 0x7f3b8bd7
.word 0x7ed22d92
.word 0xbfe46f26
.word 0x7f3b8bd7
.word 0x7ed22d92
.word 0xbfe46f26
.word 0x7f3b8bd7
.word 0x7e2bc6f2
.word 0xbfa9a240
.word 0x7e63a66a
.word 0x7e2bc6f2
.word 0xbfa9a240
.word 0x7e63a66a
.word 0x7e2bc6f2
.word 0xbfa9a240
.word 0x7e63a66a
.word 0x7e2bc6f2
.word 0xbfa9a240
.word 0x7e63a66a
.word 0x7e2bc6f2
.word 0xbfa9a240
.word 0x7e63a66a
.word 0x7f321868
.word 0xbf8778f4
.word 0x7f3c7e09
.word 0x7f321868
.word 0xbf8778f4
.word 0x7f3c7e09
.word 0x7f321868
.word 0xbf8778f4
.word 0x7f3c7e09
.word 0x7f321868
.word 0xbf8778f4
.word 0x7f3c7e09
.word 0x7f321868
.word 0xbf8778f4
.word 0x7f3c7e09
.word 0x7f2e7fda
.word 0xbf515d9b
.word 0x7f0eb630
.word 0x7f2e7fda
.word 0xbf515d9b
.word 0x7f0eb630
.word 0x7f2e7fda
.word 0xbf515d9b
.word 0x7f0eb630
.word 0x7f2e7fda
.word 0xbf515d9b
.word 0x7f0eb630
.word 0x7f2e7fda
.word 0xbf515d9b
.word 0x7f0eb630
.word 0x7ba44bd3
.word 0xc2b7709b
.word 0x7eeb74f1
.word 0x7ba44bd3
.word 0xc2b7709b
.word 0x7eeb74f1
.word 0x7ba44bd3
.word 0xc2b7709b
.word 0x7eeb74f1
.word 0x7ba44bd3
.word 0xc2b7709b
.word 0x7eeb74f1
.word 0x7ba44bd3
.word 0xc2b7709b
.word 0x7eeb74f1
.word 0x7f0ed6ae
.word 0xbf5ebb57
.word 0x7ef88d65
.word 0x7f0ed6ae
.word 0xbf5ebb57
.word 0x7ef88d65
.word 0x7f0ed6ae
.word 0xbf5ebb57
.word 0x7ef88d65
.word 0x7f0ed6ae
.word 0xbf5ebb57
.word 0x7ef88d65
.word 0x7f0ed6ae
.word 0xbf5ebb57
.word 0x7ef88d65
.word 0x7e3034a2
.word 0xc012a75c
.word 0x7ec9e26c
.word 0x7e3034a2
.word 0xc012a75c
.word 0x7ec9e26c
.word 0x7e3034a2
.word 0xc012a75c
.word 0x7ec9e26c
.word 0x7e3034a2
.word 0xc012a75c
.word 0x7ec9e26c
.word 0x7e3034a2
.word 0xc012a75c
.word 0x7ec9e26c
.word 0x7f07648d
.word 0xbe91b440
.word 0x7e1a1e91
.word 0x7f07648d
.word 0xbe91b440
.word 0x7e1a1e91
.word 0x7f07648d
.word 0xbe91b440
.word 0x7e1a1e91
.word 0x7f07648d
.word 0xbe91b440
.word 0x7e1a1e91
.word 0x7f07648d
.word 0xbe91b440
.word 0x7e1a1e91
.word 0x7f1114c8
.word 0xbf2a450f
.word 0x7ec0fde0
.word 0x7f1114c8
.word 0xbf2a450f
.word 0x7ec0fde0
.word 0x7f1114c8
.word 0xbf2a450f
.word 0x7ec0fde0
.word 0x7f1114c8
.word 0xbf2a450f
.word 0x7ec0fde0
.word 0x7f1114c8
.word 0xbf2a450f
.word 0x7ec0fde0
.word 0x7d8f5d14
.word 0xc125e6e4
.word 0x7f39d098
.word 0x7d8f5d14
.word 0xc125e6e4
.word 0x7f39d098
.word 0x7d8f5d14
.word 0xc125e6e4
.word 0x7f39d098
.word 0x7d8f5d14
.word 0xc125e6e4
.word 0x7f39d098
.word 0x7d8f5d14
.word 0xc125e6e4
.word 0x7f39d098
.word 0x7e8bd04c
.word 0xbf9804d2
.word 0x7ea60c9f
.word 0x7e8bd04c
.word 0xbf9804d2
.word 0x7ea60c9f
.word 0x7e8bd04c
.word 0xbf9804d2
.word 0x7ea60c9f
.word 0x7e8bd04c
.word 0xbf9804d2
.word 0x7ea60c9f
.word 0x7e8bd04c
.word 0xbf9804d2
.word 0x7ea60c9f
.word 0x7eead2b2
.word 0xbd177e4a
.word 0x7c8af61f
.word 0x7eead2b2
.word 0xbd177e4a
.word 0x7c8af61f
.word 0x7eead2b2
.word 0xbd177e4a
.word 0x7c8af61f
.word 0x7eead2b2
.word 0xbd177e4a
.word 0x7c8af61f
.word 0x7eead2b2
.word 0xbd177e4a
.word 0x7c8af61f
.word 0x7f0b3a21
.word 0xbf7a0fde
.word 0x7f07ff65
.word 0x7f0b3a21
.word 0xbf7a0fde
.word 0x7f07ff65
.word 0x7f0b3a21
.word 0xbf7a0fde
.word 0x7f07ff65
.word 0x7f0b3a21
.word 0xbf7a0fde
.word 0x7f07ff65
.word 0x7f0b3a21
.word 0xbf7a0fde
.word 0x7f07ff65
.word 0x7eab5958
.word 0xbe7842da
.word 0x7da62b4d
.word 0x7eab5958
.word 0xbe7842da
.word 0x7da62b4d
.word 0x7eab5958
.word 0xbe7842da
.word 0x7da62b4d
.word 0x7eab5958
.word 0xbe7842da
.word 0x7da62b4d
.word 0x7eab5958
.word 0xbe7842da
.word 0x7da62b4d
.word 0x7e2d32f7
.word 0xbf60337c
.word 0x7e17af6d
.word 0x7e2d32f7
.word 0xbf60337c
.word 0x7e17af6d
.word 0x7e2d32f7
.word 0xbf60337c
.word 0x7e17af6d
.word 0x7e2d32f7
.word 0xbf60337c
.word 0x7e17af6d
.word 0x7e2d32f7
.word 0xbf60337c
.word 0x7e17af6d
.word 0x7e97337c
.word 0xbf6a94aa
.word 0x7e8a8cde
.word 0x7e97337c
.word 0xbf6a94aa
.word 0x7e8a8cde
.word 0x7e97337c
.word 0xbf6a94aa
.word 0x7e8a8cde
.word 0x7e97337c
.word 0xbf6a94aa
.word 0x7e8a8cde
.word 0x7e97337c
.word 0xbf6a94aa
.word 0x7e8a8cde
.word 0x7f095fbb
.word 0xbf28a10b
.word 0x7eb4fa7d
.word 0x7f095fbb
.word 0xbf28a10b
.word 0x7eb4fa7d
.word 0x7f095fbb
.word 0xbf28a10b
.word 0x7eb4fa7d
.word 0x7f095fbb
.word 0xbf28a10b
.word 0x7eb4fa7d
.word 0x7f095fbb
.word 0xbf28a10b
.word 0x7eb4fa7d
.word 0x7ea8c2ff
.word 0xbfd34f40
.word 0x7f0b4cf7
.word 0x7ea8c2ff
.word 0xbfd34f40
.word 0x7f0b4cf7
.word 0x7ea8c2ff
.word 0xbfd34f40
.word 0x7f0b4cf7
.word 0x7ea8c2ff
.word 0xbfd34f40
.word 0x7f0b4cf7
.word 0x7ea8c2ff
.word 0xbfd34f40
.word 0x7f0b4cf7
.word 0x7eadd528
.word 0xbe8f04f9
.word 0x7dc23ae4
.word 0x7eadd528
.word 0xbe8f04f9
.word 0x7dc23ae4
.word 0x7eadd528
.word 0xbe8f04f9
.word 0x7dc23ae4
.word 0x7eadd528
.word 0xbe8f04f9
.word 0x7dc23ae4
.word 0x7eadd528
.word 0xbe8f04f9
.word 0x7dc23ae4
.word 0x7dbb6d02
.word 0xc0984bfd
.word 0x7edf00b7
.word 0x7dbb6d02
.word 0xc0984bfd
.word 0x7edf00b7
.word 0x7dbb6d02
.word 0xc0984bfd
.word 0x7edf00b7
.word 0x7dbb6d02
.word 0xc0984bfd
.word 0x7edf00b7
.word 0x7dbb6d02
.word 0xc0984bfd
.word 0x7edf00b7
.word 0x7eb5b43e
.word 0xbea73191
.word 0x7ded5787
.word 0x7eb5b43e
.word 0xbea73191
.word 0x7ded5787
.word 0x7eb5b43e
.word 0xbea73191
.word 0x7ded5787
.word 0x7eb5b43e
.word 0xbea73191
.word 0x7ded5787
.word 0x7eb5b43e
.word 0xbea73191
.word 0x7ded5787
.word 0x7ee87969
.word 0xbf523fce
.word 0x7ebeed89
.word 0x7ee87969
.word 0xbf523fce
.word 0x7ebeed89
.word 0x7ee87969
.word 0xbf523fce
.word 0x7ebeed89
.word 0x7ee87969
.word 0xbf523fce
.word 0x7ebeed89
.word 0x7ee87969
.word 0xbf523fce
.word 0x7ebeed89
.word 0x7ea98b8f
.word 0xbe4151e0
.word 0x7d800870
.word 0x7ea98b8f
.word 0xbe4151e0
.word 0x7d800870
.word 0x7ea98b8f
.word 0xbe4151e0
.word 0x7d800870
.word 0x7ea98b8f
.word 0xbe4151e0
.word 0x7d800870
.word 0x7ea98b8f
.word 0xbe4151e0
.word 0x7d800870
.word 0x7e088c83
.word 0xc0ae8e76
.word 0x7f3a36fc
.word 0x7e088c83
.word 0xc0ae8e76
.word 0x7f3a36fc
.word 0x7e088c83
.word 0xc0ae8e76
.word 0x7f3a36fc
.word 0x7e088c83
.word 0xc0ae8e76
.word 0x7f3a36fc
.word 0x7e088c83
.word 0xc0ae8e76
.word 0x7f3a36fc
.word 0x7f3e2b14
.word 0xbf15e986
.word 0x7edeb917
.word 0x7f3e2b14
.word 0xbf15e986
.word 0x7edeb917
.word 0x7f3e2b14
.word 0xbf15e986
.word 0x7edeb917
.word 0x7f3e2b14
.word 0xbf15e986
.word 0x7edeb917
.word 0x7f3e2b14
.word 0xbf15e986
.word 0x7edeb917
.word 0x7f394fae
.word 0xbf496ae5
.word 0x7f11ccf0
.word 0x7f394fae
.word 0xbf496ae5
.word 0x7f11ccf0
.word 0x7f394fae
.word 0xbf496ae5
.word 0x7f11ccf0
.word 0x7f394fae
.word 0xbf496ae5
.word 0x7f11ccf0
.word 0x7f394fae
.word 0xbf496ae5
.word 0x7f11ccf0
.word 0x7f2808ce
.word 0xbd1b03ba
.word 0x7ccb7f8f
.word 0x7f2808ce
.word 0xbd1b03ba
.word 0x7ccb7f8f
.word 0x7f2808ce
.word 0xbd1b03ba
.word 0x7ccb7f8f
.word 0x7f2808ce
.word 0xbd1b03ba
.word 0x7ccb7f8f
.word 0x7f2808ce
.word 0xbd1b03ba
.word 0x7ccb7f8f
.word 0x7f207343
.word 0xbe80b64e
.word 0x7e2157c9
.word 0x7f207343
.word 0xbe80b64e
.word 0x7e2157c9
.word 0x7f207343
.word 0xbe80b64e
.word 0x7e2157c9
.word 0x7f207343
.word 0xbe80b64e
.word 0x7e2157c9
.word 0x7f207343
.word 0xbe80b64e
.word 0x7e2157c9
.word 0x7f3945d0
.word 0xbb47af30
.word 0x7b10840f
.word 0x7f3945d0
.word 0xbb47af30
.word 0x7b10840f
.word 0x7f3945d0
.word 0xbb47af30
.word 0x7b10840f
.word 0x7f3945d0
.word 0xbb47af30
.word 0x7b10840f
.word 0x7f3945d0
.word 0xbb47af30
.word 0x7b10840f
.word 0x7f0ecce4
.word 0xbef1ef4d
.word 0x7e86f460
.word 0x7f0ecce4
.word 0xbef1ef4d
.word 0x7e86f460
.word 0x7f0ecce4
.word 0xbef1ef4d
.word 0x7e86f460
.word 0x7f0ecce4
.word 0xbef1ef4d
.word 0x7e86f460
.word 0x7f0ecce4
.word 0xbef1ef4d
.word 0x7e86f460
.word 0x7e945a12
.word 0xbfbe11a6
.word 0x7edc4a28
.word 0x7e945a12
.word 0xbfbe11a6
.word 0x7edc4a28
.word 0x7e945a12
.word 0xbfbe11a6
.word 0x7edc4a28
.word 0x7e945a12
.word 0xbfbe11a6
.word 0x7edc4a28
.word 0x7e945a12
.word 0xbfbe11a6
.word 0x7edc4a28
.word 0x7c502f82
.word 0xc1049553
.word 0x7dd7a3de
.word 0x7c502f82
.word 0xc1049553
.word 0x7dd7a3de
.word 0x7c502f82
.word 0xc1049553
.word 0x7dd7a3de
.word 0x7c502f82
.word 0xc1049553
.word 0x7dd7a3de
.word 0x7c502f82
.word 0xc1049553
.word 0x7dd7a3de
.word 0x7f3c2c79
.word 0xbd8397ce
.word 0x7d4174b0
.word 0x7f3c2c79
.word 0xbd8397ce
.word 0x7d4174b0
.word 0x7f3c2c79
.word 0xbd8397ce
.word 0x7d4174b0
.word 0x7f3c2c79
.word 0xbd8397ce
.word 0x7d4174b0
.word 0x7f3c2c79
.word 0xbd8397ce
.word 0x7d4174b0
.word 0x7ec1e3fa
.word 0xbfb38693
.word 0x7f07f854
.word 0x7ec1e3fa
.word 0xbfb38693
.word 0x7f07f854
.word 0x7ec1e3fa
.word 0xbfb38693
.word 0x7f07f854
.word 0x7ec1e3fa
.word 0xbfb38693
.word 0x7f07f854
.word 0x7ec1e3fa
.word 0xbfb38693
.word 0x7f07f854
.word 0x7e8a4d8c
.word 0xc00f8696
.word 0x7f1b140f
.word 0x7e8a4d8c
.word 0xc00f8696
.word 0x7f1b140f
.word 0x7e8a4d8c
.word 0xc00f8696
.word 0x7f1b140f
.word 0x7e8a4d8c
.word 0xc00f8696
.word 0x7f1b140f
.word 0x7e8a4d8c
.word 0xc00f8696
.word 0x7f1b140f
.word 0x7da39eb4
.word 0xc09c7e58
.word 0x7ec80aed
.word 0x7da39eb4
.word 0xc09c7e58
.word 0x7ec80aed
.word 0x7da39eb4
.word 0xc09c7e58
.word 0x7ec80aed
.word 0x7da39eb4
.word 0xc09c7e58
.word 0x7ec80aed
.word 0x7da39eb4
.word 0xc09c7e58
.word 0x7ec80aed
.word 0x7d921772
.word 0xbf6578e7
.word 0x7d82f3f8
.word 0x7d921772
.word 0xbf6578e7
.word 0x7d82f3f8
.word 0x7d921772
.word 0xbf6578e7
.word 0x7d82f3f8
.word 0x7d921772
.word 0xbf6578e7
.word 0x7d82f3f8
.word 0x7d921772
.word 0xbf6578e7
.word 0x7d82f3f8
.word 0x7ee1fcc2
.word 0xbefb34ce
.word 0x7e5dc16f
.word 0x7ee1fcc2
.word 0xbefb34ce
.word 0x7e5dc16f
.word 0x7ee1fcc2
.word 0xbefb34ce
.word 0x7e5dc16f
.word 0x7ee1fcc2
.word 0xbefb34ce
.word 0x7e5dc16f
.word 0x7ee1fcc2
.word 0xbefb34ce
.word 0x7e5dc16f
.word 0x7eab48d4
.word 0xbf6fe0a2
.word 0x7ea07f4a
.word 0x7eab48d4
.word 0xbf6fe0a2
.word 0x7ea07f4a
.word 0x7eab48d4
.word 0xbf6fe0a2
.word 0x7ea07f4a
.word 0x7eab48d4
.word 0xbf6fe0a2
.word 0x7ea07f4a
.word 0x7eab48d4
.word 0xbf6fe0a2
.word 0x7ea07f4a
.word 0x7e31f5db
.word 0xbfe28967
.word 0x7e9d7a90
.word 0x7e31f5db
.word 0xbfe28967
.word 0x7e9d7a90
.word 0x7e31f5db
.word 0xbfe28967
.word 0x7e9d7a90
.word 0x7e31f5db
.word 0xbfe28967
.word 0x7e9d7a90
.word 0x7e31f5db
.word 0xbfe28967
.word 0x7e9d7a90
.word 0x7e02ae3a
.word 0xc023d78d
.word 0x7ea745f0
.word 0x7e02ae3a
.word 0xc023d78d
.word 0x7ea745f0
.word 0x7e02ae3a
.word 0xc023d78d
.word 0x7ea745f0
.word 0x7e02ae3a
.word 0xc023d78d
.word 0x7ea745f0
.word 0x7e02ae3a
.word 0xc023d78d
.word 0x7ea745f0
.word 0x7f12bec8
.word 0xbee4fb22
.word 0x7e8341df
.word 0x7f12bec8
.word 0xbee4fb22
.word 0x7e8341df
.word 0x7f12bec8
.word 0xbee4fb22
.word 0x7e8341df
.word 0x7f12bec8
.word 0xbee4fb22
.word 0x7e8341df
.word 0x7f12bec8
.word 0xbee4fb22
.word 0x7e8341df
.word 0x7e666f32
.word 0xbd34700f
.word 0x7c226b0e
.word 0x7e666f32
.word 0xbd34700f
.word 0x7c226b0e
.word 0x7e666f32
.word 0xbd34700f
.word 0x7c226b0e
.word 0x7e666f32
.word 0xbd34700f
.word 0x7c226b0e
.word 0x7e666f32
.word 0xbd34700f
.word 0x7c226b0e
.word 0x7e1afd1d
.word 0xc07312ff
.word 0x7f1329c3
.word 0x7e1afd1d
.word 0xc07312ff
.word 0x7f1329c3
.word 0x7e1afd1d
.word 0xc07312ff
.word 0x7f1329c3
.word 0x7e1afd1d
.word 0xc07312ff
.word 0x7f1329c3
.word 0x7e1afd1d
.word 0xc07312ff
.word 0x7f1329c3
.word 0x7efea866
.word 0xbfbc2825
.word 0x7f3b2b9b
.word 0x7efea866
.word 0xbfbc2825
.word 0x7f3b2b9b
.word 0x7efea866
.word 0xbfbc2825
.word 0x7f3b2b9b
.word 0x7efea866
.word 0xbfbc2825
.word 0x7f3b2b9b
.word 0x7efea866
.word 0xbfbc2825
.word 0x7f3b2b9b
.word 0x7e982a54
.word 0xbed6b7cf
.word 0x7dff4148
.word 0x7e982a54
.word 0xbed6b7cf
.word 0x7dff4148
.word 0x7e982a54
.word 0xbed6b7cf
.word 0x7dff4148
.word 0x7e982a54
.word 0xbed6b7cf
.word 0x7dff4148
.word 0x7e982a54
.word 0xbed6b7cf
.word 0x7dff4148
.word 0x7f2b296b
.word 0xbe494e1c
.word 0x7e0697be
.word 0x7f2b296b
.word 0xbe494e1c
.word 0x7e0697be
.word 0x7f2b296b
.word 0xbe494e1c
.word 0x7e0697be
.word 0x7f2b296b
.word 0xbe494e1c
.word 0x7e0697be
.word 0x7f2b296b
.word 0xbe494e1c
.word 0x7e0697be
.word 0x7e90bd56
.word 0xc00da990
.word 0x7f20304e
.word 0x7e90bd56
.word 0xc00da990
.word 0x7f20304e
.word 0x7e90bd56
.word 0xc00da990
.word 0x7f20304e
.word 0x7e90bd56
.word 0xc00da990
.word 0x7f20304e
.word 0x7e90bd56
.word 0xc00da990
.word 0x7f20304e
.word 0x7e4cef54
.word 0xbfcb1960
.word 0x7ea29618
.word 0x7e4cef54
.word 0xbfcb1960
.word 0x7ea29618
.word 0x7e4cef54
.word 0xbfcb1960
.word 0x7ea29618
.word 0x7e4cef54
.word 0xbfcb1960
.word 0x7ea29618
.word 0x7e4cef54
.word 0xbfcb1960
.word 0x7ea29618
.word 0x7c126d0d
.word 0xc1e66e32
.word 0x7e83cd01
.word 0x7c126d0d
.word 0xc1e66e32
.word 0x7e83cd01
.word 0x7c126d0d
.word 0xc1e66e32
.word 0x7e83cd01
.word 0x7c126d0d
.word 0xc1e66e32
.word 0x7e83cd01
.word 0x7c126d0d
.word 0xc1e66e32
.word 0x7e83cd01
.word 0x7e28ecea
.word 0xbf8ded2e
.word 0x7e3b4dfe
.word 0x7e28ecea
.word 0xbf8ded2e
.word 0x7e3b4dfe
.word 0x7e28ecea
.word 0xbf8ded2e
.word 0x7e3b4dfe
.word 0x7e28ecea
.word 0xbf8ded2e
.word 0x7e3b4dfe
.word 0x7e28ecea
.word 0xbf8ded2e
.word 0x7e3b4dfe
.word 0x7ec2d924
.word 0xbfb0e83a
.word 0x7f06a60a
.word 0x7ec2d924
.word 0xbfb0e83a
.word 0x7f06a60a
.word 0x7ec2d924
.word 0xbfb0e83a
.word 0x7f06a60a
.word 0x7ec2d924
.word 0xbfb0e83a
.word 0x7f06a60a
.word 0x7ec2d924
.word 0xbfb0e83a
.word 0x7f06a60a
.word 0x7d5b67a0
.word 0xc14a57e5
.word 0x7f2d6b19
.word 0x7d5b67a0
.word 0xc14a57e5
.word 0x7f2d6b19
.word 0x7d5b67a0
.word 0xc14a57e5
.word 0x7f2d6b19
.word 0x7d5b67a0
.word 0xc14a57e5
.word 0x7f2d6b19
.word 0x7d5b67a0
.word 0xc14a57e5
.word 0x7f2d6b19
.word 0x7ecb074e
.word 0xbf76d5a9
.word 0x7ec3c279
.word 0x7ecb074e
.word 0xbf76d5a9
.word 0x7ec3c279
.word 0x7ecb074e
.word 0xbf76d5a9
.word 0x7ec3c279
.word 0x7ecb074e
.word 0xbf76d5a9
.word 0x7ec3c279
.word 0x7ecb074e
.word 0xbf76d5a9
.word 0x7ec3c279
.word 0x7e17cb34
.word 0xbf427de0
.word 0x7de6a542
.word 0x7e17cb34
.word 0xbf427de0
.word 0x7de6a542
.word 0x7e17cb34
.word 0xbf427de0
.word 0x7de6a542
.word 0x7e17cb34
.word 0xbf427de0
.word 0x7de6a542
.word 0x7e17cb34
.word 0xbf427de0
.word 0x7de6a542
.word 0x7f21f35d
.word 0xbf18d959
.word 0x7ec163ff
.word 0x7f21f35d
.word 0xbf18d959
.word 0x7ec163ff
.word 0x7f21f35d
.word 0xbf18d959
.word 0x7ec163ff
.word 0x7f21f35d
.word 0xbf18d959
.word 0x7ec163ff
.word 0x7f21f35d
.word 0xbf18d959
.word 0x7ec163ff
.word 0x7f06cfd9
.word 0xbfad2ef6
.word 0x7f366662
.word 0x7f06cfd9
.word 0xbfad2ef6
.word 0x7f366662
.word 0x7f06cfd9
.word 0xbfad2ef6
.word 0x7f366662
.word 0x7f06cfd9
.word 0xbfad2ef6
.word 0x7f366662
.word 0x7f06cfd9
.word 0xbfad2ef6
.word 0x7f366662
.word 0x7d95f05d
.word 0xc0e2402e
.word 0x7f0483c9
.word 0x7d95f05d
.word 0xc0e2402e
.word 0x7f0483c9
.word 0x7d95f05d
.word 0xc0e2402e
.word 0x7f0483c9
.word 0x7d95f05d
.word 0xc0e2402e
.word 0x7f0483c9
.word 0x7d95f05d
.word 0xc0e2402e
.word 0x7f0483c9
.word 0x7dcf529d
.word 0xc0b532e8
.word 0x7f12bea4
.word 0x7dcf529d
.word 0xc0b532e8
.word 0x7f12bea4
.word 0x7dcf529d
.word 0xc0b532e8
.word 0x7f12bea4
.word 0x7dcf529d
.word 0xc0b532e8
.word 0x7f12bea4
.word 0x7dcf529d
.word 0xc0b532e8
.word 0x7f12bea4
.word 0x7e88f8b6
.word 0xc01d8c50
.word 0x7f289736
.word 0x7e88f8b6
.word 0xc01d8c50
.word 0x7f289736
.word 0x7e88f8b6
.word 0xc01d8c50
.word 0x7f289736
.word 0x7e88f8b6
.word 0xc01d8c50
.word 0x7f289736
.word 0x7e88f8b6
.word 0xc01d8c50
.word 0x7f289736
.word 0x7f2924ed
.word 0xbea60466
.word 0x7e5b61b5
.word 0x7f2924ed
.word 0xbea60466
.word 0x7e5b61b5
.word 0x7f2924ed
.word 0xbea60466
.word 0x7e5b61b5
.word 0x7f2924ed
.word 0xbea60466
.word 0x7e5b61b5
.word 0x7f2924ed
.word 0xbea60466
.word 0x7e5b61b5
.word 0x7ede5241
.word 0xbfa12887
.word 0x7f0bf4ed
.word 0x7ede5241
.word 0xbfa12887
.word 0x7f0bf4ed
.word 0x7ede5241
.word 0xbfa12887
.word 0x7f0bf4ed
.word 0x7ede5241
.word 0xbfa12887
.word 0x7f0bf4ed
.word 0x7ede5241
.word 0xbfa12887
.word 0x7f0bf4ed
.word 0x7e14e13e
.word 0xc09c2a84
.word 0x7f35a3f8
.word 0x7e14e13e
.word 0xc09c2a84
.word 0x7f35a3f8
.word 0x7e14e13e
.word 0xc09c2a84
.word 0x7f35a3f8
.word 0x7e14e13e
.word 0xc09c2a84
.word 0x7f35a3f8
.word 0x7e14e13e
.word 0xc09c2a84
.word 0x7f35a3f8
.word 0x7f35a451
.word 0xbf043b82
.word 0x7ebba5e6
.word 0x7f35a451
.word 0xbf043b82
.word 0x7ebba5e6
.word 0x7f35a451
.word 0xbf043b82
.word 0x7ebba5e6
.word 0x7f35a451
.word 0xbf043b82
.word 0x7ebba5e6
.word 0x7f35a451
.word 0xbf043b82
.word 0x7ebba5e6
.word 0x7dda52ec
.word 0xbee7e1c6
.word 0x7d45c160
.word 0x7dda52ec
.word 0xbee7e1c6
.word 0x7d45c160
.word 0x7dda52ec
.word 0xbee7e1c6
.word 0x7d45c160
.word 0x7dda52ec
.word 0xbee7e1c6
.word 0x7d45c160
.word 0x7dda52ec
.word 0xbee7e1c6
.word 0x7d45c160
.word 0x7f2d1061
.word 0xbf25299a
.word 0x7edf4f5d
.word 0x7f2d1061
.word 0xbf25299a
.word 0x7edf4f5d
.word 0x7f2d1061
.word 0xbf25299a
.word 0x7edf4f5d
.word 0x7f2d1061
.word 0xbf25299a
.word 0x7edf4f5d
.word 0x7f2d1061
.word 0xbf25299a
.word 0x7edf4f5d
.word 0x7ebf1227
.word 0xbfa7232f
.word 0x7ef97e34
.word 0x7ebf1227
.word 0xbfa7232f
.word 0x7ef97e34
.word 0x7ebf1227
.word 0xbfa7232f
.word 0x7ef97e34
.word 0x7ebf1227
.word 0xbfa7232f
.word 0x7ef97e34
.word 0x7ebf1227
.word 0xbfa7232f
.word 0x7ef97e34
.word 0x7e81f5dd
.word 0xc002ba3e
.word 0x7f04bacd
.word 0x7e81f5dd
.word 0xc002ba3e
.word 0x7f04bacd
.word 0x7e81f5dd
.word 0xc002ba3e
.word 0x7f04bacd
.word 0x7e81f5dd
.word 0xc002ba3e
.word 0x7f04bacd
.word 0x7e81f5dd
.word 0xc002ba3e
.word 0x7f04bacd
.word 0x7e90d8c5
.word 0xbfe03fc7
.word 0x7efdc386
.word 0x7e90d8c5
.word 0xbfe03fc7
.word 0x7efdc386
.word 0x7e90d8c5
.word 0xbfe03fc7
.word 0x7efdc386
.word 0x7e90d8c5
.word 0xbfe03fc7
.word 0x7efdc386
.word 0x7e90d8c5
.word 0xbfe03fc7
.word 0x7efdc386
.word 0x7d41cef4
.word 0xc11d4815
.word 0x7eee24fd
.word 0x7d41cef4
.word 0xc11d4815
.word 0x7eee24fd
.word 0x7d41cef4
.word 0xc11d4815
.word 0x7eee24fd
.word 0x7d41cef4
.word 0xc11d4815
.word 0x7eee24fd
.word 0x7d41cef4
.word 0xc11d4815
.word 0x7eee24fd
.word 0x7e466afe
.word 0xc075a3a7
.word 0x7f3e633d
.word 0x7e466afe
.word 0xc075a3a7
.word 0x7f3e633d
.word 0x7e466afe
.word 0xc075a3a7
.word 0x7f3e633d
.word 0x7e466afe
.word 0xc075a3a7
.word 0x7f3e633d
.word 0x7e466afe
.word 0xc075a3a7
.word 0x7f3e633d
.word 0x7e9190a0
.word 0xbe999c78
.word 0x7daeb0d1
.word 0x7e9190a0
.word 0xbe999c78
.word 0x7daeb0d1
.word 0x7e9190a0
.word 0xbe999c78
.word 0x7daeb0d1
.word 0x7e9190a0
.word 0xbe999c78
.word 0x7daeb0d1
.word 0x7e9190a0
.word 0xbe999c78
.word 0x7daeb0d1
.word 0x7e9c8afc
.word 0xc00d9df0
.word 0x7f2d3243
.word 0x7e9c8afc
.word 0xc00d9df0
.word 0x7f2d3243
.word 0x7e9c8afc
.word 0xc00d9df0
.word 0x7f2d3243
.word 0x7e9c8afc
.word 0xc00d9df0
.word 0x7f2d3243
.word 0x7e9c8afc
.word 0xc00d9df0
.word 0x7f2d3243
.word 0x7c75a735
.word 0xc15581bc
.word 0x7e4ce09d
.word 0x7c75a735
.word 0xc15581bc
.word 0x7e4ce09d
.word 0x7c75a735
.word 0xc15581bc
.word 0x7e4ce09d
.word 0x7c75a735
.word 0xc15581bc
.word 0x7e4ce09d
.word 0x7c75a735
.word 0xc15581bc
.word 0x7e4ce09d
.word 0x7d8992a2
.word 0xc0275676
.word 0x7e33da3d
.word 0x7d8992a2
.word 0xc0275676
.word 0x7e33da3d
.word 0x7d8992a2
.word 0xc0275676
.word 0x7e33da3d
.word 0x7d8992a2
.word 0xc0275676
.word 0x7e33da3d
.word 0x7d8992a2
.word 0xc0275676
.word 0x7e33da3d
.word 0x7e13a21e
.word 0xc08a4105
.word 0x7f1f75c7
.word 0x7e13a21e
.word 0xc08a4105
.word 0x7f1f75c7
.word 0x7e13a21e
.word 0xc08a4105
.word 0x7f1f75c7
.word 0x7e13a21e
.word 0xc08a4105
.word 0x7f1f75c7
.word 0x7e13a21e
.word 0xc08a4105
.word 0x7f1f75c7
.word 0x7eae00ba
.word 0xbf8bd260
.word 0x7ebe12c6
.word 0x7eae00ba
.word 0xbf8bd260
.word 0x7ebe12c6
.word 0x7eae00ba
.word 0xbf8bd260
.word 0x7ebe12c6
.word 0x7eae00ba
.word 0xbf8bd260
.word 0x7ebe12c6
.word 0x7eae00ba
.word 0xbf8bd260
.word 0x7ebe12c6
.word 0x7ef67a3b
.word 0xbf371e70
.word 0x7eb04eaf
.word 0x7ef67a3b
.word 0xbf371e70
.word 0x7eb04eaf
.word 0x7ef67a3b
.word 0xbf371e70
.word 0x7eb04eaf
.word 0x7ef67a3b
.word 0xbf371e70
.word 0x7eb04eaf
.word 0x7ef67a3b
.word 0xbf371e70
.word 0x7eb04eaf
.word 0x7f3fd529
.word 0xbe569c36
.word 0x7e20d13f
.word 0x7f3fd529
.word 0xbe569c36
.word 0x7e20d13f
.word 0x7f3fd529
.word 0xbe569c36
.word 0x7e20d13f
.word 0x7f3fd529
.word 0xbe569c36
.word 0x7e20d13f
.word 0x7f3fd529
.word 0xbe569c36
.word 0x7e20d13f
.word 0x7d82d835
.word 0xc039e73f
.word 0x7e3e08e0
.word 0x7d82d835
.word 0xc039e73f
.word 0x7e3e08e0
.word 0x7d82d835
.word 0xc039e73f
.word 0x7e3e08e0
.word 0x7d82d835
.word 0xc039e73f
.word 0x7e3e08e0
.word 0x7d82d835
.word 0xc039e73f
.word 0x7e3e08e0
.word 0x7dc20b54
.word 0xc0b28842
.word 0x7f075328
.word 0x7dc20b54
.word 0xc0b28842
.word 0x7f075328
.word 0x7dc20b54
.word 0xc0b28842
.word 0x7f075328
.word 0x7dc20b54
.word 0xc0b28842
.word 0x7f075328
.word 0x7dc20b54
.word 0xc0b28842
.word 0x7f075328
.word 0x7e2e1c2f
.word 0xc087d476
.word 0x7f38c2b9
.word 0x7e2e1c2f
.word 0xc087d476
.word 0x7f38c2b9
.word 0x7e2e1c2f
.word 0xc087d476
.word 0x7f38c2b9
.word 0x7e2e1c2f
.word 0xc087d476
.word 0x7f38c2b9
.word 0x7f265cd2
.word 0xbf6681f8
.word 0x7f15cbdb
.word 0x7f265cd2
.word 0xbf6681f8
.word 0x7f15cbdb
.word 0x7f265cd2
.word 0xbf6681f8
.word 0x7f15cbdb
.word 0x7f1b0221
.word 0xbf4fc770
.word 0x7efb9ef7
.word 0x7f1b0221
.word 0xbf4fc770
.word 0x7efb9ef7
.word 0x7f1b0221
.word 0xbf4fc770
.word 0x7efb9ef7
.word 0x7f1b0221
.word 0xbf4fc770
.word 0x7efb9ef7
.word 0x7f1b0221
.word 0xbf4fc770
.word 0x7efb9ef7
RVTEST_DATA_END

RVMODEL_DATA_BEGIN


signature_x15_0:
    .fill 0*(XLEN/32),4,0xdeadbeef


signature_x15_1:
    .fill 508*(XLEN/32),4,0xdeadbeef


signature_x15_2:
    .fill 508*(XLEN/32),4,0xdeadbeef


signature_x15_3:
    .fill 508*(XLEN/32),4,0xdeadbeef


signature_x15_4:
    .fill 508*(XLEN/32),4,0xdeadbeef


signature_x15_5:
    .fill 224*(XLEN/32),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*(XLEN/32),4,0xdeadbeef

#endif

RVMODEL_DATA_END
