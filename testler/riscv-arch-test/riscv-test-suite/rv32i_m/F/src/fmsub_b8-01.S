
// -----------
// This file was generated by riscv_ctg (https://gitlab.com/incoresemi/riscv-compliance/riscv_ctg)
// version   : 0.5.2
// timestamp : Tue Sep  7 16:08:09 2021 GMT
// usage     : riscv_ctg \
//                  -- cgf $cgf \
//                  -- xlen $xlen \
// -----------
//
// -----------
// Copyright (c) 2021. IIT Madras. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.s instruction of the RISC-V F extension for the fmsub_b8 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fmsub_b8)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x16,test_fp)
RVTEST_SIGBASE(x15,signature_x15_1)

inst_0:
// rs1 == rs2 == rs3 != rd, rs1==f23, rs2==f23, rs3==f23, rd==f0, fs1 == 0 and fe1 == 0x7e and fm1 == 0x2d194b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x20bf06 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5961f2 and rm_val == 0  
// opcode: fmsub.s ; op1:f23; op2:f23; op3:f23; dest:f0; op1val:0x3f2d194b; op2val:0x3f2d194b; op3val:0x3f2d194b; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f0, f23, f23, f23, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_1:
// rs1 == rd == rs3 != rs2, rs1==f16, rs2==f19, rs3==f16, rd==f16, fs1 == 0 and fe1 == 0x7d and fm1 == 0x3a380d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5427f0 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1a5378 and rm_val == 4  
// opcode: fmsub.s ; op1:f16; op2:f19; op3:f16; dest:f16; op1val:0x3eba380d; op2val:0x3f5427f0; op3val:0x3eba380d; valaddr_reg:x16; val_offset:12; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f16, f16, f19, f16, 0x4, 0, x16, 12, x17, x15, 8, x18)

inst_2:
// rs1 == rs3 != rs2 and rs1 == rs3 != rd and rd != rs2, rs1==f24, rs2==f18, rs3==f24, rd==f12, fs1 == 0 and fe1 == 0x7d and fm1 == 0x3a380d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5427f0 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1a5378 and rm_val == 3  
// opcode: fmsub.s ; op1:f24; op2:f18; op3:f24; dest:f12; op1val:0x3eba380d; op2val:0x3f5427f0; op3val:0x3eba380d; valaddr_reg:x16; val_offset:24; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f12, f24, f18, f24, 0x3, 0, x16, 24, x17, x15, 16, x18)

inst_3:
// rs2 == rd != rs1 and rs2 == rd != rs3 and rs3 != rs1, rs1==f12, rs2==f6, rs3==f29, rd==f6, fs1 == 0 and fe1 == 0x7d and fm1 == 0x3a380d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5427f0 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1a5378 and rm_val == 2  
// opcode: fmsub.s ; op1:f12; op2:f6; op3:f29; dest:f6; op1val:0x3eba380d; op2val:0x3f5427f0; op3val:0x3e9a5378; valaddr_reg:x16; val_offset:36; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f6, f12, f6, f29, 0x2, 0, x16, 36, x17, x15, 24, x18)

inst_4:
// rs2 == rs3 != rs1 and rs2 == rs3 != rd and rd != rs1, rs1==f20, rs2==f27, rs3==f27, rd==f15, fs1 == 0 and fe1 == 0x7d and fm1 == 0x3a380d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5427f0 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1a5378 and rm_val == 1  
// opcode: fmsub.s ; op1:f20; op2:f27; op3:f27; dest:f15; op1val:0x3eba380d; op2val:0x3f5427f0; op3val:0x3f5427f0; valaddr_reg:x16; val_offset:48; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f15, f20, f27, f27, 0x1, 0, x16, 48, x17, x15, 32, x18)

inst_5:
// rd == rs2 == rs3 != rs1, rs1==f30, rs2==f5, rs3==f5, rd==f5, fs1 == 0 and fe1 == 0x7d and fm1 == 0x3a380d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5427f0 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1a5378 and rm_val == 0  
// opcode: fmsub.s ; op1:f30; op2:f5; op3:f5; dest:f5; op1val:0x3eba380d; op2val:0x3f5427f0; op3val:0x3f5427f0; valaddr_reg:x16; val_offset:60; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f5, f30, f5, f5, 0x0, 0, x16, 60, x17, x15, 40, x18)

inst_6:
// rs1 == rs2 != rs3 and rs1 == rs2 != rd and rd != rs3, rs1==f0, rs2==f0, rs3==f7, rd==f10, fs1 == 0 and fe1 == 0x7e and fm1 == 0x5f3d90 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5ba602 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3f8a6e and rm_val == 4  
// opcode: fmsub.s ; op1:f0; op2:f0; op3:f7; dest:f10; op1val:0x3f5f3d90; op2val:0x3f5f3d90; op3val:0x3f3f8a6e; valaddr_reg:x16; val_offset:72; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f10, f0, f0, f7, 0x4, 0, x16, 72, x17, x15, 48, x18)

inst_7:
// rs1 == rs2 == rd != rs3, rs1==f21, rs2==f21, rs3==f8, rd==f21, fs1 == 0 and fe1 == 0x7e and fm1 == 0x5f3d90 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5ba602 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3f8a6e and rm_val == 3  
// opcode: fmsub.s ; op1:f21; op2:f21; op3:f8; dest:f21; op1val:0x3f5f3d90; op2val:0x3f5f3d90; op3val:0x3f3f8a6e; valaddr_reg:x16; val_offset:84; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f21, f21, f21, f8, 0x3, 0, x16, 84, x17, x15, 56, x18)

inst_8:
// rs1 == rs2 == rs3 == rd, rs1==f3, rs2==f3, rs3==f3, rd==f3, fs1 == 0 and fe1 == 0x7e and fm1 == 0x5f3d90 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5ba602 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3f8a6e and rm_val == 2  
// opcode: fmsub.s ; op1:f3; op2:f3; op3:f3; dest:f3; op1val:0x3f5f3d90; op2val:0x3f5f3d90; op3val:0x3f5f3d90; valaddr_reg:x16; val_offset:96; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f3, f3, f3, f3, 0x2, 0, x16, 96, x17, x15, 64, x18)

inst_9:
// rs3 == rd != rs1 and rs3 == rd != rs2 and rs2 != rs1, rs1==f22, rs2==f26, rs3==f9, rd==f9, fs1 == 0 and fe1 == 0x7e and fm1 == 0x5f3d90 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5ba602 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3f8a6e and rm_val == 1  
// opcode: fmsub.s ; op1:f22; op2:f26; op3:f9; dest:f9; op1val:0x3f5f3d90; op2val:0x3f5ba602; op3val:0x3f3f8a6e; valaddr_reg:x16; val_offset:108; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f9, f22, f26, f9, 0x1, 0, x16, 108, x17, x15, 72, x18)

inst_10:
// rs1 != rs2 and rs1 != rd and rs1 != rs3 and rs2 != rs3 and rs2 != rd and rs3 != rd, rs1==f5, rs2==f17, rs3==f30, rd==f31, fs1 == 0 and fe1 == 0x7e and fm1 == 0x5f3d90 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5ba602 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3f8a6e and rm_val == 0  
// opcode: fmsub.s ; op1:f5; op2:f17; op3:f30; dest:f31; op1val:0x3f5f3d90; op2val:0x3f5ba602; op3val:0x3f3f8a6e; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f31, f5, f17, f30, 0x0, 0, x16, 120, x17, x15, 80, x18)

inst_11:
// rs1 == rd != rs2 and rs1 == rd != rs3 and rs3 != rs2, rs1==f26, rs2==f2, rs3==f4, rd==f26, fs1 == 0 and fe1 == 0x7d and fm1 == 0x358044 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7b6387 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x323b53 and rm_val == 4  
// opcode: fmsub.s ; op1:f26; op2:f2; op3:f4; dest:f26; op1val:0x3eb58044; op2val:0x3ffb6387; op3val:0x3f323b53; valaddr_reg:x16; val_offset:132; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f26, f26, f2, f4, 0x4, 0, x16, 132, x17, x15, 88, x18)

inst_12:
// rs1==f8, rs2==f14, rs3==f15, rd==f22, fs1 == 0 and fe1 == 0x7d and fm1 == 0x358044 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7b6387 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x323b53 and rm_val == 3  
// opcode: fmsub.s ; op1:f8; op2:f14; op3:f15; dest:f22; op1val:0x3eb58044; op2val:0x3ffb6387; op3val:0x3f323b53; valaddr_reg:x16; val_offset:144; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f22, f8, f14, f15, 0x3, 0, x16, 144, x17, x15, 96, x18)

inst_13:
// rs1==f17, rs2==f11, rs3==f12, rd==f25, fs1 == 0 and fe1 == 0x7d and fm1 == 0x358044 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7b6387 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x323b53 and rm_val == 2  
// opcode: fmsub.s ; op1:f17; op2:f11; op3:f12; dest:f25; op1val:0x3eb58044; op2val:0x3ffb6387; op3val:0x3f323b53; valaddr_reg:x16; val_offset:156; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f25, f17, f11, f12, 0x2, 0, x16, 156, x17, x15, 104, x18)

inst_14:
// rs1==f6, rs2==f8, rs3==f11, rd==f17, fs1 == 0 and fe1 == 0x7d and fm1 == 0x358044 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7b6387 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x323b53 and rm_val == 1  
// opcode: fmsub.s ; op1:f6; op2:f8; op3:f11; dest:f17; op1val:0x3eb58044; op2val:0x3ffb6387; op3val:0x3f323b53; valaddr_reg:x16; val_offset:168; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f17, f6, f8, f11, 0x1, 0, x16, 168, x17, x15, 112, x18)

inst_15:
// rs1==f18, rs2==f24, rs3==f17, rd==f13, fs1 == 0 and fe1 == 0x7d and fm1 == 0x358044 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7b6387 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x323b53 and rm_val == 0  
// opcode: fmsub.s ; op1:f18; op2:f24; op3:f17; dest:f13; op1val:0x3eb58044; op2val:0x3ffb6387; op3val:0x3f323b53; valaddr_reg:x16; val_offset:180; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f18, f24, f17, 0x0, 0, x16, 180, x17, x15, 120, x18)

inst_16:
// rs1==f1, rs2==f31, rs3==f28, rd==f30, fs1 == 0 and fe1 == 0x7e and fm1 == 0x4475d8 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x55b4f6 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x2400ec and rm_val == 4  
// opcode: fmsub.s ; op1:f1; op2:f31; op3:f28; dest:f30; op1val:0x3f4475d8; op2val:0x3dd5b4f6; op3val:0x3da400ec; valaddr_reg:x16; val_offset:192; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f30, f1, f31, f28, 0x4, 0, x16, 192, x17, x15, 128, x18)

inst_17:
// rs1==f15, rs2==f30, rs3==f2, rd==f18, fs1 == 0 and fe1 == 0x7e and fm1 == 0x4475d8 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x55b4f6 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x2400ec and rm_val == 3  
// opcode: fmsub.s ; op1:f15; op2:f30; op3:f2; dest:f18; op1val:0x3f4475d8; op2val:0x3dd5b4f6; op3val:0x3da400ec; valaddr_reg:x16; val_offset:204; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f18, f15, f30, f2, 0x3, 0, x16, 204, x17, x15, 136, x18)

inst_18:
// rs1==f9, rs2==f13, rs3==f18, rd==f4, fs1 == 0 and fe1 == 0x7e and fm1 == 0x4475d8 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x55b4f6 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x2400ec and rm_val == 2  
// opcode: fmsub.s ; op1:f9; op2:f13; op3:f18; dest:f4; op1val:0x3f4475d8; op2val:0x3dd5b4f6; op3val:0x3da400ec; valaddr_reg:x16; val_offset:216; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f4, f9, f13, f18, 0x2, 0, x16, 216, x17, x15, 144, x18)

inst_19:
// rs1==f4, rs2==f15, rs3==f22, rd==f29, fs1 == 0 and fe1 == 0x7e and fm1 == 0x4475d8 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x55b4f6 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x2400ec and rm_val == 1  
// opcode: fmsub.s ; op1:f4; op2:f15; op3:f22; dest:f29; op1val:0x3f4475d8; op2val:0x3dd5b4f6; op3val:0x3da400ec; valaddr_reg:x16; val_offset:228; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f29, f4, f15, f22, 0x1, 0, x16, 228, x17, x15, 152, x18)

inst_20:
// rs1==f25, rs2==f10, rs3==f21, rd==f11, fs1 == 0 and fe1 == 0x7e and fm1 == 0x4475d8 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x55b4f6 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x2400ec and rm_val == 0  
// opcode: fmsub.s ; op1:f25; op2:f10; op3:f21; dest:f11; op1val:0x3f4475d8; op2val:0x3dd5b4f6; op3val:0x3da400ec; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f11, f25, f10, f21, 0x0, 0, x16, 240, x17, x15, 160, x18)

inst_21:
// rs1==f2, rs2==f22, rs3==f20, rd==f24, fs1 == 0 and fe1 == 0x7e and fm1 == 0x75e04b and fs2 == 0 and fe2 == 0x7c and fm2 == 0x681ae8 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x5eed1c and rm_val == 4  
// opcode: fmsub.s ; op1:f2; op2:f22; op3:f20; dest:f24; op1val:0x3f75e04b; op2val:0x3e681ae8; op3val:0x3e5eed1c; valaddr_reg:x16; val_offset:252; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f24, f2, f22, f20, 0x4, 0, x16, 252, x17, x15, 168, x18)

inst_22:
// rs1==f27, rs2==f1, rs3==f6, rd==f14, fs1 == 0 and fe1 == 0x7e and fm1 == 0x75e04b and fs2 == 0 and fe2 == 0x7c and fm2 == 0x681ae8 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x5eed1c and rm_val == 3  
// opcode: fmsub.s ; op1:f27; op2:f1; op3:f6; dest:f14; op1val:0x3f75e04b; op2val:0x3e681ae8; op3val:0x3e5eed1c; valaddr_reg:x16; val_offset:264; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f14, f27, f1, f6, 0x3, 0, x16, 264, x17, x15, 176, x18)

inst_23:
// rs1==f29, rs2==f4, rs3==f26, rd==f28, fs1 == 0 and fe1 == 0x7e and fm1 == 0x75e04b and fs2 == 0 and fe2 == 0x7c and fm2 == 0x681ae8 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x5eed1c and rm_val == 2  
// opcode: fmsub.s ; op1:f29; op2:f4; op3:f26; dest:f28; op1val:0x3f75e04b; op2val:0x3e681ae8; op3val:0x3e5eed1c; valaddr_reg:x16; val_offset:276; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f28, f29, f4, f26, 0x2, 0, x16, 276, x17, x15, 184, x18)

inst_24:
// rs1==f13, rs2==f29, rs3==f0, rd==f2, fs1 == 0 and fe1 == 0x7e and fm1 == 0x75e04b and fs2 == 0 and fe2 == 0x7c and fm2 == 0x681ae8 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x5eed1c and rm_val == 1  
// opcode: fmsub.s ; op1:f13; op2:f29; op3:f0; dest:f2; op1val:0x3f75e04b; op2val:0x3e681ae8; op3val:0x3e5eed1c; valaddr_reg:x16; val_offset:288; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f2, f13, f29, f0, 0x1, 0, x16, 288, x17, x15, 192, x18)

inst_25:
// rs1==f14, rs2==f20, rs3==f10, rd==f8, fs1 == 0 and fe1 == 0x7e and fm1 == 0x75e04b and fs2 == 0 and fe2 == 0x7c and fm2 == 0x681ae8 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x5eed1c and rm_val == 0  
// opcode: fmsub.s ; op1:f14; op2:f20; op3:f10; dest:f8; op1val:0x3f75e04b; op2val:0x3e681ae8; op3val:0x3e5eed1c; valaddr_reg:x16; val_offset:300; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f8, f14, f20, f10, 0x0, 0, x16, 300, x17, x15, 200, x18)

inst_26:
// rs1==f10, rs2==f12, rs3==f14, rd==f7, fs1 == 0 and fe1 == 0x7e and fm1 == 0x0aecbe and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5392e0 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x65a1ac and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f12; op3:f14; dest:f7; op1val:0x3f0aecbe; op2val:0x3f5392e0; op3val:0x3ee5a1ac; valaddr_reg:x16; val_offset:312; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f7, f10, f12, f14, 0x4, 0, x16, 312, x17, x15, 208, x18)

inst_27:
// rs1==f11, rs2==f16, rs3==f19, rd==f23, fs1 == 0 and fe1 == 0x7e and fm1 == 0x0aecbe and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5392e0 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x65a1ac and rm_val == 3  
// opcode: fmsub.s ; op1:f11; op2:f16; op3:f19; dest:f23; op1val:0x3f0aecbe; op2val:0x3f5392e0; op3val:0x3ee5a1ac; valaddr_reg:x16; val_offset:324; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f23, f11, f16, f19, 0x3, 0, x16, 324, x17, x15, 216, x18)

inst_28:
// rs1==f7, rs2==f28, rs3==f13, rd==f19, fs1 == 0 and fe1 == 0x7e and fm1 == 0x0aecbe and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5392e0 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x65a1ac and rm_val == 2  
// opcode: fmsub.s ; op1:f7; op2:f28; op3:f13; dest:f19; op1val:0x3f0aecbe; op2val:0x3f5392e0; op3val:0x3ee5a1ac; valaddr_reg:x16; val_offset:336; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f19, f7, f28, f13, 0x2, 0, x16, 336, x17, x15, 224, x18)

inst_29:
// rs1==f28, rs2==f7, rs3==f31, rd==f1, fs1 == 0 and fe1 == 0x7e and fm1 == 0x0aecbe and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5392e0 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x65a1ac and rm_val == 1  
// opcode: fmsub.s ; op1:f28; op2:f7; op3:f31; dest:f1; op1val:0x3f0aecbe; op2val:0x3f5392e0; op3val:0x3ee5a1ac; valaddr_reg:x16; val_offset:348; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f1, f28, f7, f31, 0x1, 0, x16, 348, x17, x15, 232, x18)

inst_30:
// rs1==f31, rs2==f25, rs3==f1, rd==f27, fs1 == 0 and fe1 == 0x7e and fm1 == 0x0aecbe and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5392e0 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x65a1ac and rm_val == 0  
// opcode: fmsub.s ; op1:f31; op2:f25; op3:f1; dest:f27; op1val:0x3f0aecbe; op2val:0x3f5392e0; op3val:0x3ee5a1ac; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f27, f31, f25, f1, 0x0, 0, x16, 360, x17, x15, 240, x18)

inst_31:
// rs1==f19, rs2==f9, rs3==f25, rd==f20, fs1 == 0 and fe1 == 0x7d and fm1 == 0x348ec9 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2abcea and fs3 == 0 and fe3 == 0x7c and fm3 == 0x70d820 and rm_val == 4  
// opcode: fmsub.s ; op1:f19; op2:f9; op3:f25; dest:f20; op1val:0x3eb48ec9; op2val:0x3f2abcea; op3val:0x3e70d820; valaddr_reg:x16; val_offset:372; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f20, f19, f9, f25, 0x4, 0, x16, 372, x17, x15, 248, x18)

inst_32:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x348ec9 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2abcea and fs3 == 0 and fe3 == 0x7c and fm3 == 0x70d820 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb48ec9; op2val:0x3f2abcea; op3val:0x3e70d820; valaddr_reg:x16; val_offset:384; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 384, x17, x15, 256, x18)

inst_33:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x348ec9 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2abcea and fs3 == 0 and fe3 == 0x7c and fm3 == 0x70d820 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb48ec9; op2val:0x3f2abcea; op3val:0x3e70d820; valaddr_reg:x16; val_offset:396; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 396, x17, x15, 264, x18)

inst_34:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x348ec9 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2abcea and fs3 == 0 and fe3 == 0x7c and fm3 == 0x70d820 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb48ec9; op2val:0x3f2abcea; op3val:0x3e70d820; valaddr_reg:x16; val_offset:408; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 408, x17, x15, 272, x18)

inst_35:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x348ec9 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2abcea and fs3 == 0 and fe3 == 0x7c and fm3 == 0x70d820 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb48ec9; op2val:0x3f2abcea; op3val:0x3e70d820; valaddr_reg:x16; val_offset:420; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 420, x17, x15, 280, x18)

inst_36:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x6fa798 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x183049 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0e78b6 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d6fa798; op2val:0x40983049; op3val:0x3e8e78b6; valaddr_reg:x16; val_offset:432; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 432, x17, x15, 288, x18)

inst_37:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x6fa798 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x183049 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0e78b6 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d6fa798; op2val:0x40983049; op3val:0x3e8e78b6; valaddr_reg:x16; val_offset:444; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 444, x17, x15, 296, x18)

inst_38:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x6fa798 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x183049 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0e78b6 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d6fa798; op2val:0x40983049; op3val:0x3e8e78b6; valaddr_reg:x16; val_offset:456; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 456, x17, x15, 304, x18)

inst_39:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x6fa798 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x183049 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0e78b6 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d6fa798; op2val:0x40983049; op3val:0x3e8e78b6; valaddr_reg:x16; val_offset:468; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 468, x17, x15, 312, x18)

inst_40:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x6fa798 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x183049 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x0e78b6 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d6fa798; op2val:0x40983049; op3val:0x3e8e78b6; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 320, x18)

inst_41:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x748c7e and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2a6656 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x22c70e and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef48c7e; op2val:0x3f2a6656; op3val:0x3ea2c70e; valaddr_reg:x16; val_offset:492; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 492, x17, x15, 328, x18)

inst_42:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x748c7e and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2a6656 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x22c70e and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef48c7e; op2val:0x3f2a6656; op3val:0x3ea2c70e; valaddr_reg:x16; val_offset:504; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 504, x17, x15, 336, x18)

inst_43:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x748c7e and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2a6656 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x22c70e and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef48c7e; op2val:0x3f2a6656; op3val:0x3ea2c70e; valaddr_reg:x16; val_offset:516; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 516, x17, x15, 344, x18)

inst_44:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x748c7e and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2a6656 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x22c70e and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef48c7e; op2val:0x3f2a6656; op3val:0x3ea2c70e; valaddr_reg:x16; val_offset:528; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 528, x17, x15, 352, x18)

inst_45:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x748c7e and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2a6656 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x22c70e and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef48c7e; op2val:0x3f2a6656; op3val:0x3ea2c70e; valaddr_reg:x16; val_offset:540; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 540, x17, x15, 360, x18)

inst_46:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x64158f and fs2 == 0 and fe2 == 0x7e and fm2 == 0x72f97b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x587aa8 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f64158f; op2val:0x3f72f97b; op3val:0x3f587aa8; valaddr_reg:x16; val_offset:552; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 552, x17, x15, 368, x18)

inst_47:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x64158f and fs2 == 0 and fe2 == 0x7e and fm2 == 0x72f97b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x587aa8 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f64158f; op2val:0x3f72f97b; op3val:0x3f587aa8; valaddr_reg:x16; val_offset:564; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 564, x17, x15, 376, x18)

inst_48:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x64158f and fs2 == 0 and fe2 == 0x7e and fm2 == 0x72f97b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x587aa8 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f64158f; op2val:0x3f72f97b; op3val:0x3f587aa8; valaddr_reg:x16; val_offset:576; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 576, x17, x15, 384, x18)

inst_49:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x64158f and fs2 == 0 and fe2 == 0x7e and fm2 == 0x72f97b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x587aa8 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f64158f; op2val:0x3f72f97b; op3val:0x3f587aa8; valaddr_reg:x16; val_offset:588; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 588, x17, x15, 392, x18)

inst_50:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x64158f and fs2 == 0 and fe2 == 0x7e and fm2 == 0x72f97b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x587aa8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f64158f; op2val:0x3f72f97b; op3val:0x3f587aa8; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 400, x18)

inst_51:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x636696 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x5896e0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x406494 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ce36696; op2val:0x41d896e0; op3val:0x3f406494; valaddr_reg:x16; val_offset:612; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 612, x17, x15, 408, x18)

inst_52:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x636696 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x5896e0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x406494 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ce36696; op2val:0x41d896e0; op3val:0x3f406494; valaddr_reg:x16; val_offset:624; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 624, x17, x15, 416, x18)

inst_53:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x636696 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x5896e0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x406494 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ce36696; op2val:0x41d896e0; op3val:0x3f406494; valaddr_reg:x16; val_offset:636; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 636, x17, x15, 424, x18)

inst_54:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x636696 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x5896e0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x406494 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ce36696; op2val:0x41d896e0; op3val:0x3f406494; valaddr_reg:x16; val_offset:648; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 648, x17, x15, 432, x18)

inst_55:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x636696 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x5896e0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x406494 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ce36696; op2val:0x41d896e0; op3val:0x3f406494; valaddr_reg:x16; val_offset:660; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 660, x17, x15, 440, x18)

inst_56:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x3298be and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5426d9 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x140197 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e3298be; op2val:0x3f5426d9; op3val:0x3e140197; valaddr_reg:x16; val_offset:672; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 672, x17, x15, 448, x18)

inst_57:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x3298be and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5426d9 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x140197 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e3298be; op2val:0x3f5426d9; op3val:0x3e140197; valaddr_reg:x16; val_offset:684; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 684, x17, x15, 456, x18)

inst_58:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x3298be and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5426d9 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x140197 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e3298be; op2val:0x3f5426d9; op3val:0x3e140197; valaddr_reg:x16; val_offset:696; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 696, x17, x15, 464, x18)

inst_59:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x3298be and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5426d9 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x140197 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e3298be; op2val:0x3f5426d9; op3val:0x3e140197; valaddr_reg:x16; val_offset:708; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 708, x17, x15, 472, x18)

inst_60:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x3298be and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5426d9 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x140197 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e3298be; op2val:0x3f5426d9; op3val:0x3e140197; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 480, x18)

inst_61:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1bc546 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x764855 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x15db95 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1bc546; op2val:0x3df64855; op3val:0x3d95db95; valaddr_reg:x16; val_offset:732; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 732, x17, x15, 488, x18)

inst_62:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1bc546 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x764855 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x15db95 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1bc546; op2val:0x3df64855; op3val:0x3d95db95; valaddr_reg:x16; val_offset:744; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 744, x17, x15, 496, x18)

inst_63:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1bc546 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x764855 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x15db95 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1bc546; op2val:0x3df64855; op3val:0x3d95db95; valaddr_reg:x16; val_offset:756; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 756, x17, x15, 504, x18)

inst_64:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1bc546 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x764855 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x15db95 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1bc546; op2val:0x3df64855; op3val:0x3d95db95; valaddr_reg:x16; val_offset:768; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 768, x17, x15, 512, x18)

inst_65:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1bc546 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x764855 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x15db95 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1bc546; op2val:0x3df64855; op3val:0x3d95db95; valaddr_reg:x16; val_offset:780; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 780, x17, x15, 520, x18)

inst_66:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x535d9a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1b0092 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7ff44a and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed35d9a; op2val:0x401b0092; op3val:0x3f7ff44a; valaddr_reg:x16; val_offset:792; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 792, x17, x15, 528, x18)

inst_67:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x535d9a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1b0092 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7ff44a and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed35d9a; op2val:0x401b0092; op3val:0x3f7ff44a; valaddr_reg:x16; val_offset:804; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 804, x17, x15, 536, x18)

inst_68:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x535d9a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1b0092 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7ff44a and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed35d9a; op2val:0x401b0092; op3val:0x3f7ff44a; valaddr_reg:x16; val_offset:816; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 816, x17, x15, 544, x18)

inst_69:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x535d9a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1b0092 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7ff44a and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed35d9a; op2val:0x401b0092; op3val:0x3f7ff44a; valaddr_reg:x16; val_offset:828; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 828, x17, x15, 552, x18)

inst_70:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x535d9a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1b0092 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7ff44a and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed35d9a; op2val:0x401b0092; op3val:0x3f7ff44a; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 560, x18)

inst_71:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x559d10 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x219988 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x06d7e3 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dd59d10; op2val:0x40a19988; op3val:0x3f06d7e3; valaddr_reg:x16; val_offset:852; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 852, x17, x15, 568, x18)

inst_72:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x559d10 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x219988 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x06d7e3 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dd59d10; op2val:0x40a19988; op3val:0x3f06d7e3; valaddr_reg:x16; val_offset:864; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 864, x17, x15, 576, x18)

inst_73:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x559d10 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x219988 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x06d7e3 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dd59d10; op2val:0x40a19988; op3val:0x3f06d7e3; valaddr_reg:x16; val_offset:876; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 876, x17, x15, 584, x18)

inst_74:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x559d10 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x219988 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x06d7e3 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dd59d10; op2val:0x40a19988; op3val:0x3f06d7e3; valaddr_reg:x16; val_offset:888; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 888, x17, x15, 592, x18)

inst_75:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x559d10 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x219988 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x06d7e3 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dd59d10; op2val:0x40a19988; op3val:0x3f06d7e3; valaddr_reg:x16; val_offset:900; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 900, x17, x15, 600, x18)

inst_76:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x77bee3 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x19af70 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x14badf and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f77bee3; op2val:0x3e99af70; op3val:0x3e94badf; valaddr_reg:x16; val_offset:912; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 912, x17, x15, 608, x18)

inst_77:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x77bee3 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x19af70 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x14badf and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f77bee3; op2val:0x3e99af70; op3val:0x3e94badf; valaddr_reg:x16; val_offset:924; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 924, x17, x15, 616, x18)

inst_78:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x77bee3 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x19af70 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x14badf and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f77bee3; op2val:0x3e99af70; op3val:0x3e94badf; valaddr_reg:x16; val_offset:936; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 936, x17, x15, 624, x18)

inst_79:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x77bee3 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x19af70 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x14badf and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f77bee3; op2val:0x3e99af70; op3val:0x3e94badf; valaddr_reg:x16; val_offset:948; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 948, x17, x15, 632, x18)

inst_80:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x77bee3 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x19af70 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x14badf and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f77bee3; op2val:0x3e99af70; op3val:0x3e94badf; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 640, x18)

inst_81:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0228dd and fs2 == 0 and fe2 == 0x81 and fm2 == 0x7642f5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7a6aa0 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e0228dd; op2val:0x40f642f5; op3val:0x3f7a6aa0; valaddr_reg:x16; val_offset:972; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 972, x17, x15, 648, x18)

inst_82:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0228dd and fs2 == 0 and fe2 == 0x81 and fm2 == 0x7642f5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7a6aa0 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e0228dd; op2val:0x40f642f5; op3val:0x3f7a6aa0; valaddr_reg:x16; val_offset:984; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 984, x17, x15, 656, x18)

inst_83:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0228dd and fs2 == 0 and fe2 == 0x81 and fm2 == 0x7642f5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7a6aa0 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e0228dd; op2val:0x40f642f5; op3val:0x3f7a6aa0; valaddr_reg:x16; val_offset:996; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 996, x17, x15, 664, x18)

inst_84:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0228dd and fs2 == 0 and fe2 == 0x81 and fm2 == 0x7642f5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7a6aa0 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e0228dd; op2val:0x40f642f5; op3val:0x3f7a6aa0; valaddr_reg:x16; val_offset:1008; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1008, x17, x15, 672, x18)

inst_85:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0228dd and fs2 == 0 and fe2 == 0x81 and fm2 == 0x7642f5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7a6aa0 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e0228dd; op2val:0x40f642f5; op3val:0x3f7a6aa0; valaddr_reg:x16; val_offset:1020; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1020, x17, x15, 680, x18)

inst_86:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x3ca5a9 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x5244e6 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x1af2aa and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d3ca5a9; op2val:0x405244e6; op3val:0x3e1af2aa; valaddr_reg:x16; val_offset:1032; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1032, x17, x15, 688, x18)

inst_87:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x3ca5a9 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x5244e6 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x1af2aa and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d3ca5a9; op2val:0x405244e6; op3val:0x3e1af2aa; valaddr_reg:x16; val_offset:1044; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1044, x17, x15, 696, x18)

inst_88:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x3ca5a9 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x5244e6 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x1af2aa and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d3ca5a9; op2val:0x405244e6; op3val:0x3e1af2aa; valaddr_reg:x16; val_offset:1056; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1056, x17, x15, 704, x18)

inst_89:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x3ca5a9 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x5244e6 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x1af2aa and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d3ca5a9; op2val:0x405244e6; op3val:0x3e1af2aa; valaddr_reg:x16; val_offset:1068; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1068, x17, x15, 712, x18)

inst_90:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x3ca5a9 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x5244e6 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x1af2aa and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d3ca5a9; op2val:0x405244e6; op3val:0x3e1af2aa; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 720, x18)

inst_91:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x19a984 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x6c568d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0ddc39 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f19a984; op2val:0x3f6c568d; op3val:0x3f0ddc39; valaddr_reg:x16; val_offset:1092; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1092, x17, x15, 728, x18)

inst_92:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x19a984 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x6c568d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0ddc39 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f19a984; op2val:0x3f6c568d; op3val:0x3f0ddc39; valaddr_reg:x16; val_offset:1104; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1104, x17, x15, 736, x18)

inst_93:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x19a984 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x6c568d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0ddc39 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f19a984; op2val:0x3f6c568d; op3val:0x3f0ddc39; valaddr_reg:x16; val_offset:1116; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1116, x17, x15, 744, x18)

inst_94:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x19a984 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x6c568d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0ddc39 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f19a984; op2val:0x3f6c568d; op3val:0x3f0ddc39; valaddr_reg:x16; val_offset:1128; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1128, x17, x15, 752, x18)

inst_95:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x19a984 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x6c568d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0ddc39 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f19a984; op2val:0x3f6c568d; op3val:0x3f0ddc39; valaddr_reg:x16; val_offset:1140; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1140, x17, x15, 760, x18)

inst_96:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3a9e60 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x03f668 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x406557 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3a9e60; op2val:0x3f83f668; op3val:0x3f406557; valaddr_reg:x16; val_offset:1152; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1152, x17, x15, 768, x18)

inst_97:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3a9e60 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x03f668 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x406557 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3a9e60; op2val:0x3f83f668; op3val:0x3f406557; valaddr_reg:x16; val_offset:1164; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1164, x17, x15, 776, x18)

inst_98:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3a9e60 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x03f668 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x406557 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3a9e60; op2val:0x3f83f668; op3val:0x3f406557; valaddr_reg:x16; val_offset:1176; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1176, x17, x15, 784, x18)

inst_99:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3a9e60 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x03f668 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x406557 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3a9e60; op2val:0x3f83f668; op3val:0x3f406557; valaddr_reg:x16; val_offset:1188; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1188, x17, x15, 792, x18)

inst_100:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3a9e60 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x03f668 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x406557 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3a9e60; op2val:0x3f83f668; op3val:0x3f406557; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 800, x18)

inst_101:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0c6e13 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x36f292 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x48b6a3 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e0c6e13; op2val:0x40b6f292; op3val:0x3f48b6a3; valaddr_reg:x16; val_offset:1212; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1212, x17, x15, 808, x18)

inst_102:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0c6e13 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x36f292 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x48b6a3 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e0c6e13; op2val:0x40b6f292; op3val:0x3f48b6a3; valaddr_reg:x16; val_offset:1224; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1224, x17, x15, 816, x18)

inst_103:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0c6e13 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x36f292 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x48b6a3 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e0c6e13; op2val:0x40b6f292; op3val:0x3f48b6a3; valaddr_reg:x16; val_offset:1236; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1236, x17, x15, 824, x18)

inst_104:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0c6e13 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x36f292 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x48b6a3 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e0c6e13; op2val:0x40b6f292; op3val:0x3f48b6a3; valaddr_reg:x16; val_offset:1248; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1248, x17, x15, 832, x18)

inst_105:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0c6e13 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x36f292 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x48b6a3 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e0c6e13; op2val:0x40b6f292; op3val:0x3f48b6a3; valaddr_reg:x16; val_offset:1260; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1260, x17, x15, 840, x18)

inst_106:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7e42e9 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x3eed7e and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3da18a and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3efe42e9; op2val:0x3f3eed7e; op3val:0x3ebda18a; valaddr_reg:x16; val_offset:1272; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1272, x17, x15, 848, x18)

inst_107:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7e42e9 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x3eed7e and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3da18a and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3efe42e9; op2val:0x3f3eed7e; op3val:0x3ebda18a; valaddr_reg:x16; val_offset:1284; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1284, x17, x15, 856, x18)

inst_108:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7e42e9 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x3eed7e and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3da18a and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3efe42e9; op2val:0x3f3eed7e; op3val:0x3ebda18a; valaddr_reg:x16; val_offset:1296; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1296, x17, x15, 864, x18)

inst_109:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7e42e9 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x3eed7e and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3da18a and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3efe42e9; op2val:0x3f3eed7e; op3val:0x3ebda18a; valaddr_reg:x16; val_offset:1308; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1308, x17, x15, 872, x18)

inst_110:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7e42e9 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x3eed7e and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3da18a and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3efe42e9; op2val:0x3f3eed7e; op3val:0x3ebda18a; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 880, x18)

inst_111:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x045c75 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x586732 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5fc6bc and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d045c75; op2val:0x41d86732; op3val:0x3f5fc6bc; valaddr_reg:x16; val_offset:1332; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1332, x17, x15, 888, x18)

inst_112:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x045c75 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x586732 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5fc6bc and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d045c75; op2val:0x41d86732; op3val:0x3f5fc6bc; valaddr_reg:x16; val_offset:1344; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1344, x17, x15, 896, x18)

inst_113:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x045c75 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x586732 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5fc6bc and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d045c75; op2val:0x41d86732; op3val:0x3f5fc6bc; valaddr_reg:x16; val_offset:1356; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1356, x17, x15, 904, x18)

inst_114:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x045c75 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x586732 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5fc6bc and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d045c75; op2val:0x41d86732; op3val:0x3f5fc6bc; valaddr_reg:x16; val_offset:1368; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1368, x17, x15, 912, x18)

inst_115:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x045c75 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x586732 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5fc6bc and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d045c75; op2val:0x41d86732; op3val:0x3f5fc6bc; valaddr_reg:x16; val_offset:1380; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1380, x17, x15, 920, x18)

inst_116:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x701cde and fs2 == 0 and fe2 == 0x7e and fm2 == 0x45318c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x38f4b0 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f701cde; op2val:0x3f45318c; op3val:0x3f38f4b0; valaddr_reg:x16; val_offset:1392; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1392, x17, x15, 928, x18)

inst_117:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x701cde and fs2 == 0 and fe2 == 0x7e and fm2 == 0x45318c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x38f4b0 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f701cde; op2val:0x3f45318c; op3val:0x3f38f4b0; valaddr_reg:x16; val_offset:1404; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1404, x17, x15, 936, x18)

inst_118:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x701cde and fs2 == 0 and fe2 == 0x7e and fm2 == 0x45318c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x38f4b0 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f701cde; op2val:0x3f45318c; op3val:0x3f38f4b0; valaddr_reg:x16; val_offset:1416; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1416, x17, x15, 944, x18)

inst_119:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x701cde and fs2 == 0 and fe2 == 0x7e and fm2 == 0x45318c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x38f4b0 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f701cde; op2val:0x3f45318c; op3val:0x3f38f4b0; valaddr_reg:x16; val_offset:1428; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1428, x17, x15, 952, x18)

inst_120:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x701cde and fs2 == 0 and fe2 == 0x7e and fm2 == 0x45318c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x38f4b0 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f701cde; op2val:0x3f45318c; op3val:0x3f38f4b0; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 960, x18)

inst_121:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1f85b8 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x07f11b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x296b85 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1f85b8; op2val:0x3f87f11b; op3val:0x3f296b85; valaddr_reg:x16; val_offset:1452; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1452, x17, x15, 968, x18)

inst_122:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1f85b8 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x07f11b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x296b85 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1f85b8; op2val:0x3f87f11b; op3val:0x3f296b85; valaddr_reg:x16; val_offset:1464; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1464, x17, x15, 976, x18)

inst_123:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1f85b8 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x07f11b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x296b85 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1f85b8; op2val:0x3f87f11b; op3val:0x3f296b85; valaddr_reg:x16; val_offset:1476; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1476, x17, x15, 984, x18)

inst_124:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1f85b8 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x07f11b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x296b85 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1f85b8; op2val:0x3f87f11b; op3val:0x3f296b85; valaddr_reg:x16; val_offset:1488; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1488, x17, x15, 992, x18)

inst_125:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1f85b8 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x07f11b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x296b85 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1f85b8; op2val:0x3f87f11b; op3val:0x3f296b85; valaddr_reg:x16; val_offset:1500; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1500, x17, x15, 1000, x18)

inst_126:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x160bb9 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x4fd4a5 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x73a03b and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f160bb9; op2val:0x3f4fd4a5; op3val:0x3ef3a03b; valaddr_reg:x16; val_offset:1512; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1512, x17, x15, 1008, x18)

inst_127:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x160bb9 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x4fd4a5 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x73a03b and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f160bb9; op2val:0x3f4fd4a5; op3val:0x3ef3a03b; valaddr_reg:x16; val_offset:1524; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1524, x17, x15, 1016, x18)

inst_128:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x160bb9 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x4fd4a5 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x73a03b and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f160bb9; op2val:0x3f4fd4a5; op3val:0x3ef3a03b; valaddr_reg:x16; val_offset:1536; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1536, x17, x15, 1024, x18)

inst_129:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x160bb9 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x4fd4a5 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x73a03b and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f160bb9; op2val:0x3f4fd4a5; op3val:0x3ef3a03b; valaddr_reg:x16; val_offset:1548; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1548, x17, x15, 1032, x18)

inst_130:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x160bb9 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x4fd4a5 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x73a03b and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f160bb9; op2val:0x3f4fd4a5; op3val:0x3ef3a03b; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1040, x18)

inst_131:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x002ce0 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x161f4e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1653f0 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e802ce0; op2val:0x40161f4e; op3val:0x3f1653f0; valaddr_reg:x16; val_offset:1572; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1572, x17, x15, 1048, x18)

inst_132:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x002ce0 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x161f4e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1653f0 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e802ce0; op2val:0x40161f4e; op3val:0x3f1653f0; valaddr_reg:x16; val_offset:1584; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1584, x17, x15, 1056, x18)

inst_133:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x002ce0 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x161f4e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1653f0 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e802ce0; op2val:0x40161f4e; op3val:0x3f1653f0; valaddr_reg:x16; val_offset:1596; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1596, x17, x15, 1064, x18)

inst_134:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x002ce0 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x161f4e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1653f0 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e802ce0; op2val:0x40161f4e; op3val:0x3f1653f0; valaddr_reg:x16; val_offset:1608; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1608, x17, x15, 1072, x18)

inst_135:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x002ce0 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x161f4e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1653f0 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e802ce0; op2val:0x40161f4e; op3val:0x3f1653f0; valaddr_reg:x16; val_offset:1620; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1620, x17, x15, 1080, x18)

inst_136:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5c5b10 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x062153 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x66e8b4 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3edc5b10; op2val:0x3e862153; op3val:0x3de6e8b4; valaddr_reg:x16; val_offset:1632; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1632, x17, x15, 1088, x18)

inst_137:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5c5b10 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x062153 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x66e8b4 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3edc5b10; op2val:0x3e862153; op3val:0x3de6e8b4; valaddr_reg:x16; val_offset:1644; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1644, x17, x15, 1096, x18)

inst_138:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5c5b10 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x062153 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x66e8b4 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3edc5b10; op2val:0x3e862153; op3val:0x3de6e8b4; valaddr_reg:x16; val_offset:1656; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1656, x17, x15, 1104, x18)

inst_139:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5c5b10 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x062153 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x66e8b4 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3edc5b10; op2val:0x3e862153; op3val:0x3de6e8b4; valaddr_reg:x16; val_offset:1668; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1668, x17, x15, 1112, x18)

inst_140:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5c5b10 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x062153 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x66e8b4 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3edc5b10; op2val:0x3e862153; op3val:0x3de6e8b4; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1120, x18)

inst_141:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x42c899 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x798795 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3ddc47 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f42c899; op2val:0x3f798795; op3val:0x3f3ddc47; valaddr_reg:x16; val_offset:1692; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1692, x17, x15, 1128, x18)

inst_142:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x42c899 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x798795 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3ddc47 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f42c899; op2val:0x3f798795; op3val:0x3f3ddc47; valaddr_reg:x16; val_offset:1704; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1704, x17, x15, 1136, x18)

inst_143:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x42c899 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x798795 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3ddc47 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f42c899; op2val:0x3f798795; op3val:0x3f3ddc47; valaddr_reg:x16; val_offset:1716; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1716, x17, x15, 1144, x18)

inst_144:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x42c899 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x798795 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3ddc47 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f42c899; op2val:0x3f798795; op3val:0x3f3ddc47; valaddr_reg:x16; val_offset:1728; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1728, x17, x15, 1152, x18)

inst_145:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x42c899 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x798795 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3ddc47 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f42c899; op2val:0x3f798795; op3val:0x3f3ddc47; valaddr_reg:x16; val_offset:1740; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1740, x17, x15, 1160, x18)

inst_146:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x28759f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x30cbde and fs3 == 0 and fe3 == 0x7e and fm3 == 0x68ae0a and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f28759f; op2val:0x3fb0cbde; op3val:0x3f68ae0a; valaddr_reg:x16; val_offset:1752; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1752, x17, x15, 1168, x18)

inst_147:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x28759f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x30cbde and fs3 == 0 and fe3 == 0x7e and fm3 == 0x68ae0a and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f28759f; op2val:0x3fb0cbde; op3val:0x3f68ae0a; valaddr_reg:x16; val_offset:1764; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1764, x17, x15, 1176, x18)

inst_148:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x28759f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x30cbde and fs3 == 0 and fe3 == 0x7e and fm3 == 0x68ae0a and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f28759f; op2val:0x3fb0cbde; op3val:0x3f68ae0a; valaddr_reg:x16; val_offset:1776; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1776, x17, x15, 1184, x18)

inst_149:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x28759f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x30cbde and fs3 == 0 and fe3 == 0x7e and fm3 == 0x68ae0a and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f28759f; op2val:0x3fb0cbde; op3val:0x3f68ae0a; valaddr_reg:x16; val_offset:1788; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1788, x17, x15, 1192, x18)

inst_150:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x28759f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x30cbde and fs3 == 0 and fe3 == 0x7e and fm3 == 0x68ae0a and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f28759f; op2val:0x3fb0cbde; op3val:0x3f68ae0a; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1200, x18)

inst_151:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4ebe68 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x101e2a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x68c6ef and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4ebe68; op2val:0x3f901e2a; op3val:0x3f68c6ef; valaddr_reg:x16; val_offset:1812; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1812, x17, x15, 1208, x18)

inst_152:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4ebe68 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x101e2a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x68c6ef and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4ebe68; op2val:0x3f901e2a; op3val:0x3f68c6ef; valaddr_reg:x16; val_offset:1824; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1824, x17, x15, 1216, x18)

inst_153:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4ebe68 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x101e2a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x68c6ef and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4ebe68; op2val:0x3f901e2a; op3val:0x3f68c6ef; valaddr_reg:x16; val_offset:1836; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1836, x17, x15, 1224, x18)

inst_154:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4ebe68 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x101e2a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x68c6ef and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4ebe68; op2val:0x3f901e2a; op3val:0x3f68c6ef; valaddr_reg:x16; val_offset:1848; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1848, x17, x15, 1232, x18)

inst_155:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4ebe68 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x101e2a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x68c6ef and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4ebe68; op2val:0x3f901e2a; op3val:0x3f68c6ef; valaddr_reg:x16; val_offset:1860; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1860, x17, x15, 1240, x18)

inst_156:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0ccf64 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x48399d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5c436e and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0ccf64; op2val:0x3fc8399d; op3val:0x3f5c436e; valaddr_reg:x16; val_offset:1872; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1872, x17, x15, 1248, x18)

inst_157:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0ccf64 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x48399d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5c436e and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0ccf64; op2val:0x3fc8399d; op3val:0x3f5c436e; valaddr_reg:x16; val_offset:1884; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1884, x17, x15, 1256, x18)

inst_158:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0ccf64 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x48399d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5c436e and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0ccf64; op2val:0x3fc8399d; op3val:0x3f5c436e; valaddr_reg:x16; val_offset:1896; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1896, x17, x15, 1264, x18)

inst_159:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0ccf64 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x48399d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5c436e and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0ccf64; op2val:0x3fc8399d; op3val:0x3f5c436e; valaddr_reg:x16; val_offset:1908; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1908, x17, x15, 1272, x18)

inst_160:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0ccf64 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x48399d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5c436e and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0ccf64; op2val:0x3fc8399d; op3val:0x3f5c436e; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1280, x18)

inst_161:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x3ffb13 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x1a0522 and fs3 == 0 and fe3 == 0x76 and fm3 == 0x6701c7 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dbffb13; op2val:0x3d1a0522; op3val:0x3b6701c7; valaddr_reg:x16; val_offset:1932; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1932, x17, x15, 1288, x18)

inst_162:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x3ffb13 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x1a0522 and fs3 == 0 and fe3 == 0x76 and fm3 == 0x6701c7 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dbffb13; op2val:0x3d1a0522; op3val:0x3b6701c7; valaddr_reg:x16; val_offset:1944; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1944, x17, x15, 1296, x18)

inst_163:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x3ffb13 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x1a0522 and fs3 == 0 and fe3 == 0x76 and fm3 == 0x6701c7 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dbffb13; op2val:0x3d1a0522; op3val:0x3b6701c7; valaddr_reg:x16; val_offset:1956; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1956, x17, x15, 1304, x18)

inst_164:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x3ffb13 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x1a0522 and fs3 == 0 and fe3 == 0x76 and fm3 == 0x6701c7 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dbffb13; op2val:0x3d1a0522; op3val:0x3b6701c7; valaddr_reg:x16; val_offset:1968; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1968, x17, x15, 1312, x18)

inst_165:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x3ffb13 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x1a0522 and fs3 == 0 and fe3 == 0x76 and fm3 == 0x6701c7 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dbffb13; op2val:0x3d1a0522; op3val:0x3b6701c7; valaddr_reg:x16; val_offset:1980; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1980, x17, x15, 1320, x18)

inst_166:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x00bfa4 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x468336 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x47ac6c and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f00bfa4; op2val:0x3fc68336; op3val:0x3f47ac6c; valaddr_reg:x16; val_offset:1992; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1992, x17, x15, 1328, x18)

inst_167:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x00bfa4 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x468336 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x47ac6c and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f00bfa4; op2val:0x3fc68336; op3val:0x3f47ac6c; valaddr_reg:x16; val_offset:2004; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 2004, x17, x15, 1336, x18)

inst_168:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x00bfa4 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x468336 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x47ac6c and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f00bfa4; op2val:0x3fc68336; op3val:0x3f47ac6c; valaddr_reg:x16; val_offset:2016; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 2016, x17, x15, 1344, x18)

inst_169:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x00bfa4 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x468336 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x47ac6c and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f00bfa4; op2val:0x3fc68336; op3val:0x3f47ac6c; valaddr_reg:x16; val_offset:2028; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 2028, x17, x15, 1352, x18)
addi x16,x16,2040

inst_170:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x00bfa4 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x468336 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x47ac6c and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f00bfa4; op2val:0x3fc68336; op3val:0x3f47ac6c; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 1360, x18)

inst_171:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4ac8dd and fs2 == 0 and fe2 == 0x7b and fm2 == 0x73229f and fs3 == 0 and fe3 == 0x7b and fm3 == 0x409817 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4ac8dd; op2val:0x3df3229f; op3val:0x3dc09817; valaddr_reg:x16; val_offset:12; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 12, x17, x15, 1368, x18)

inst_172:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4ac8dd and fs2 == 0 and fe2 == 0x7b and fm2 == 0x73229f and fs3 == 0 and fe3 == 0x7b and fm3 == 0x409817 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4ac8dd; op2val:0x3df3229f; op3val:0x3dc09817; valaddr_reg:x16; val_offset:24; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 24, x17, x15, 1376, x18)

inst_173:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4ac8dd and fs2 == 0 and fe2 == 0x7b and fm2 == 0x73229f and fs3 == 0 and fe3 == 0x7b and fm3 == 0x409817 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4ac8dd; op2val:0x3df3229f; op3val:0x3dc09817; valaddr_reg:x16; val_offset:36; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 36, x17, x15, 1384, x18)

inst_174:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4ac8dd and fs2 == 0 and fe2 == 0x7b and fm2 == 0x73229f and fs3 == 0 and fe3 == 0x7b and fm3 == 0x409817 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4ac8dd; op2val:0x3df3229f; op3val:0x3dc09817; valaddr_reg:x16; val_offset:48; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 48, x17, x15, 1392, x18)

inst_175:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4ac8dd and fs2 == 0 and fe2 == 0x7b and fm2 == 0x73229f and fs3 == 0 and fe3 == 0x7b and fm3 == 0x409817 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4ac8dd; op2val:0x3df3229f; op3val:0x3dc09817; valaddr_reg:x16; val_offset:60; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 60, x17, x15, 1400, x18)

inst_176:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5529b3 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x00df59 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x569da6 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5529b3; op2val:0x3f80df59; op3val:0x3f569da6; valaddr_reg:x16; val_offset:72; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 72, x17, x15, 1408, x18)

inst_177:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5529b3 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x00df59 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x569da6 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5529b3; op2val:0x3f80df59; op3val:0x3f569da6; valaddr_reg:x16; val_offset:84; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 84, x17, x15, 1416, x18)

inst_178:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5529b3 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x00df59 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x569da6 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5529b3; op2val:0x3f80df59; op3val:0x3f569da6; valaddr_reg:x16; val_offset:96; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 96, x17, x15, 1424, x18)

inst_179:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5529b3 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x00df59 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x569da6 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5529b3; op2val:0x3f80df59; op3val:0x3f569da6; valaddr_reg:x16; val_offset:108; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 108, x17, x15, 1432, x18)

inst_180:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5529b3 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x00df59 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x569da6 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5529b3; op2val:0x3f80df59; op3val:0x3f569da6; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 1440, x18)

inst_181:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x62a6ba and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2f1e33 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1b0ab6 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee2a6ba; op2val:0x3faf1e33; op3val:0x3f1b0ab6; valaddr_reg:x16; val_offset:132; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 132, x17, x15, 1448, x18)

inst_182:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x62a6ba and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2f1e33 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1b0ab6 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee2a6ba; op2val:0x3faf1e33; op3val:0x3f1b0ab6; valaddr_reg:x16; val_offset:144; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 144, x17, x15, 1456, x18)

inst_183:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x62a6ba and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2f1e33 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1b0ab6 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee2a6ba; op2val:0x3faf1e33; op3val:0x3f1b0ab6; valaddr_reg:x16; val_offset:156; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 156, x17, x15, 1464, x18)

inst_184:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x62a6ba and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2f1e33 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1b0ab6 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee2a6ba; op2val:0x3faf1e33; op3val:0x3f1b0ab6; valaddr_reg:x16; val_offset:168; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 168, x17, x15, 1472, x18)

inst_185:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x62a6ba and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2f1e33 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1b0ab6 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee2a6ba; op2val:0x3faf1e33; op3val:0x3f1b0ab6; valaddr_reg:x16; val_offset:180; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 180, x17, x15, 1480, x18)

inst_186:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x302161 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x021340 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x32fc64 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb02161; op2val:0x40021340; op3val:0x3f32fc64; valaddr_reg:x16; val_offset:192; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 192, x17, x15, 1488, x18)

inst_187:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x302161 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x021340 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x32fc64 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb02161; op2val:0x40021340; op3val:0x3f32fc64; valaddr_reg:x16; val_offset:204; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 204, x17, x15, 1496, x18)

inst_188:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x302161 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x021340 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x32fc64 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb02161; op2val:0x40021340; op3val:0x3f32fc64; valaddr_reg:x16; val_offset:216; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 216, x17, x15, 1504, x18)

inst_189:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x302161 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x021340 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x32fc64 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb02161; op2val:0x40021340; op3val:0x3f32fc64; valaddr_reg:x16; val_offset:228; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 228, x17, x15, 1512, x18)

inst_190:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x302161 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x021340 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x32fc64 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb02161; op2val:0x40021340; op3val:0x3f32fc64; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 1520, x18)

inst_191:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x422e85 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x79b112 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3d658f and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3cc22e85; op2val:0x41f9b112; op3val:0x3f3d658f; valaddr_reg:x16; val_offset:252; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 252, x17, x15, 1528, x18)

inst_192:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x422e85 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x79b112 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3d658f and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3cc22e85; op2val:0x41f9b112; op3val:0x3f3d658f; valaddr_reg:x16; val_offset:264; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 264, x17, x15, 1536, x18)

inst_193:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x422e85 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x79b112 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3d658f and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3cc22e85; op2val:0x41f9b112; op3val:0x3f3d658f; valaddr_reg:x16; val_offset:276; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 276, x17, x15, 1544, x18)

inst_194:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x422e85 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x79b112 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3d658f and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3cc22e85; op2val:0x41f9b112; op3val:0x3f3d658f; valaddr_reg:x16; val_offset:288; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 288, x17, x15, 1552, x18)

inst_195:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x422e85 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x79b112 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3d658f and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3cc22e85; op2val:0x41f9b112; op3val:0x3f3d658f; valaddr_reg:x16; val_offset:300; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 300, x17, x15, 1560, x18)

inst_196:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x33c539 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x3e45ff and fs3 == 0 and fe3 == 0x7d and fm3 == 0x059d88 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f33c539; op2val:0x3ebe45ff; op3val:0x3e859d88; valaddr_reg:x16; val_offset:312; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 312, x17, x15, 1568, x18)

inst_197:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x33c539 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x3e45ff and fs3 == 0 and fe3 == 0x7d and fm3 == 0x059d88 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f33c539; op2val:0x3ebe45ff; op3val:0x3e859d88; valaddr_reg:x16; val_offset:324; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 324, x17, x15, 1576, x18)

inst_198:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x33c539 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x3e45ff and fs3 == 0 and fe3 == 0x7d and fm3 == 0x059d88 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f33c539; op2val:0x3ebe45ff; op3val:0x3e859d88; valaddr_reg:x16; val_offset:336; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 336, x17, x15, 1584, x18)

inst_199:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x33c539 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x3e45ff and fs3 == 0 and fe3 == 0x7d and fm3 == 0x059d88 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f33c539; op2val:0x3ebe45ff; op3val:0x3e859d88; valaddr_reg:x16; val_offset:348; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 348, x17, x15, 1592, x18)

inst_200:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x33c539 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x3e45ff and fs3 == 0 and fe3 == 0x7d and fm3 == 0x059d88 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f33c539; op2val:0x3ebe45ff; op3val:0x3e859d88; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 1600, x18)

inst_201:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x071ef1 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1f2ae3 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2805b6 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f071ef1; op2val:0x3f9f2ae3; op3val:0x3f2805b6; valaddr_reg:x16; val_offset:372; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 372, x17, x15, 1608, x18)

inst_202:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x071ef1 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1f2ae3 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2805b6 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f071ef1; op2val:0x3f9f2ae3; op3val:0x3f2805b6; valaddr_reg:x16; val_offset:384; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 384, x17, x15, 1616, x18)

inst_203:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x071ef1 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1f2ae3 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2805b6 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f071ef1; op2val:0x3f9f2ae3; op3val:0x3f2805b6; valaddr_reg:x16; val_offset:396; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 396, x17, x15, 1624, x18)

inst_204:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x071ef1 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1f2ae3 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2805b6 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f071ef1; op2val:0x3f9f2ae3; op3val:0x3f2805b6; valaddr_reg:x16; val_offset:408; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 408, x17, x15, 1632, x18)

inst_205:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x071ef1 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1f2ae3 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2805b6 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f071ef1; op2val:0x3f9f2ae3; op3val:0x3f2805b6; valaddr_reg:x16; val_offset:420; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 420, x17, x15, 1640, x18)

inst_206:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x15f5ea and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3eb11b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5f6886 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d95f5ea; op2val:0x413eb11b; op3val:0x3f5f6886; valaddr_reg:x16; val_offset:432; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 432, x17, x15, 1648, x18)

inst_207:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x15f5ea and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3eb11b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5f6886 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d95f5ea; op2val:0x413eb11b; op3val:0x3f5f6886; valaddr_reg:x16; val_offset:444; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 444, x17, x15, 1656, x18)

inst_208:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x15f5ea and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3eb11b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5f6886 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d95f5ea; op2val:0x413eb11b; op3val:0x3f5f6886; valaddr_reg:x16; val_offset:456; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 456, x17, x15, 1664, x18)

inst_209:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x15f5ea and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3eb11b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5f6886 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d95f5ea; op2val:0x413eb11b; op3val:0x3f5f6886; valaddr_reg:x16; val_offset:468; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 468, x17, x15, 1672, x18)

inst_210:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x15f5ea and fs2 == 0 and fe2 == 0x82 and fm2 == 0x3eb11b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5f6886 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d95f5ea; op2val:0x413eb11b; op3val:0x3f5f6886; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1680, x18)

inst_211:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x1289e6 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x6a90b3 and fs3 == 0 and fe3 == 0xa5 and fm3 == 0x489c02 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x541289e6; op2val:0x406a90b3; op3val:0x52c89c02; valaddr_reg:x16; val_offset:492; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 492, x17, x15, 1688, x18)

inst_212:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x1289e6 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x6a90b3 and fs3 == 0 and fe3 == 0xa5 and fm3 == 0x489c02 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x541289e6; op2val:0x406a90b3; op3val:0x52c89c02; valaddr_reg:x16; val_offset:504; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 504, x17, x15, 1696, x18)

inst_213:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x1289e6 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x6a90b3 and fs3 == 0 and fe3 == 0xa5 and fm3 == 0x489c02 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x541289e6; op2val:0x406a90b3; op3val:0x52c89c02; valaddr_reg:x16; val_offset:516; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 516, x17, x15, 1704, x18)

inst_214:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x1289e6 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x6a90b3 and fs3 == 0 and fe3 == 0xa5 and fm3 == 0x489c02 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x541289e6; op2val:0x406a90b3; op3val:0x52c89c02; valaddr_reg:x16; val_offset:528; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 528, x17, x15, 1712, x18)

inst_215:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x1289e6 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x6a90b3 and fs3 == 0 and fe3 == 0xa5 and fm3 == 0x489c02 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x541289e6; op2val:0x406a90b3; op3val:0x52c89c02; valaddr_reg:x16; val_offset:540; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 540, x17, x15, 1720, x18)

inst_216:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x40aeda and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bd51a and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x24fd58 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54c0aeda; op2val:0x400bd51a; op3val:0x54a4fd58; valaddr_reg:x16; val_offset:552; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 552, x17, x15, 1728, x18)

inst_217:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x40aeda and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bd51a and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x24fd58 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54c0aeda; op2val:0x400bd51a; op3val:0x54a4fd58; valaddr_reg:x16; val_offset:564; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 564, x17, x15, 1736, x18)

inst_218:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x40aeda and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bd51a and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x24fd58 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54c0aeda; op2val:0x400bd51a; op3val:0x54a4fd58; valaddr_reg:x16; val_offset:576; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 576, x17, x15, 1744, x18)

inst_219:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x40aeda and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bd51a and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x24fd58 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54c0aeda; op2val:0x400bd51a; op3val:0x54a4fd58; valaddr_reg:x16; val_offset:588; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 588, x17, x15, 1752, x18)

inst_220:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x40aeda and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0bd51a and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x24fd58 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54c0aeda; op2val:0x400bd51a; op3val:0x54a4fd58; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1760, x18)

inst_221:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x3b7b74 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7d948c and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x66d72e and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54bb7b74; op2val:0x3ffd948c; op3val:0x5466d72e; valaddr_reg:x16; val_offset:612; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 612, x17, x15, 1768, x18)

inst_222:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x3b7b74 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7d948c and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x66d72e and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54bb7b74; op2val:0x3ffd948c; op3val:0x5466d72e; valaddr_reg:x16; val_offset:624; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 624, x17, x15, 1776, x18)

inst_223:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x3b7b74 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7d948c and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x66d72e and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54bb7b74; op2val:0x3ffd948c; op3val:0x5466d72e; valaddr_reg:x16; val_offset:636; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 636, x17, x15, 1784, x18)

inst_224:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x3b7b74 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7d948c and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x66d72e and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54bb7b74; op2val:0x3ffd948c; op3val:0x5466d72e; valaddr_reg:x16; val_offset:648; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 648, x17, x15, 1792, x18)

inst_225:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x3b7b74 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7d948c and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x66d72e and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54bb7b74; op2val:0x3ffd948c; op3val:0x5466d72e; valaddr_reg:x16; val_offset:660; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 660, x17, x15, 1800, x18)

inst_226:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x3835e9 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3aaf30 and fs3 == 0 and fe3 == 0xa5 and fm3 == 0x4aa762 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54b835e9; op2val:0x3fbaaf30; op3val:0x52caa762; valaddr_reg:x16; val_offset:672; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 672, x17, x15, 1808, x18)

inst_227:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x3835e9 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3aaf30 and fs3 == 0 and fe3 == 0xa5 and fm3 == 0x4aa762 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54b835e9; op2val:0x3fbaaf30; op3val:0x52caa762; valaddr_reg:x16; val_offset:684; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 684, x17, x15, 1816, x18)

inst_228:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x3835e9 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3aaf30 and fs3 == 0 and fe3 == 0xa5 and fm3 == 0x4aa762 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54b835e9; op2val:0x3fbaaf30; op3val:0x52caa762; valaddr_reg:x16; val_offset:696; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 696, x17, x15, 1824, x18)

inst_229:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x3835e9 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3aaf30 and fs3 == 0 and fe3 == 0xa5 and fm3 == 0x4aa762 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54b835e9; op2val:0x3fbaaf30; op3val:0x52caa762; valaddr_reg:x16; val_offset:708; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 708, x17, x15, 1832, x18)

inst_230:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x3835e9 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3aaf30 and fs3 == 0 and fe3 == 0xa5 and fm3 == 0x4aa762 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54b835e9; op2val:0x3fbaaf30; op3val:0x52caa762; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1840, x18)

inst_231:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x70d1ac and fs2 == 0 and fe2 == 0x7f and fm2 == 0x52cd49 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x0c9a37 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54f0d1ac; op2val:0x3fd2cd49; op3val:0x548c9a37; valaddr_reg:x16; val_offset:732; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 732, x17, x15, 1848, x18)

inst_232:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x70d1ac and fs2 == 0 and fe2 == 0x7f and fm2 == 0x52cd49 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x0c9a37 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54f0d1ac; op2val:0x3fd2cd49; op3val:0x548c9a37; valaddr_reg:x16; val_offset:744; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 744, x17, x15, 1856, x18)

inst_233:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x70d1ac and fs2 == 0 and fe2 == 0x7f and fm2 == 0x52cd49 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x0c9a37 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54f0d1ac; op2val:0x3fd2cd49; op3val:0x548c9a37; valaddr_reg:x16; val_offset:756; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 756, x17, x15, 1864, x18)

inst_234:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x70d1ac and fs2 == 0 and fe2 == 0x7f and fm2 == 0x52cd49 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x0c9a37 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54f0d1ac; op2val:0x3fd2cd49; op3val:0x548c9a37; valaddr_reg:x16; val_offset:768; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 768, x17, x15, 1872, x18)

inst_235:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x70d1ac and fs2 == 0 and fe2 == 0x7f and fm2 == 0x52cd49 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x0c9a37 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54f0d1ac; op2val:0x3fd2cd49; op3val:0x548c9a37; valaddr_reg:x16; val_offset:780; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 780, x17, x15, 1880, x18)

inst_236:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x218263 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x421a83 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x69d626 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54a18263; op2val:0x40421a83; op3val:0x54e9d626; valaddr_reg:x16; val_offset:792; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 792, x17, x15, 1888, x18)

inst_237:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x218263 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x421a83 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x69d626 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54a18263; op2val:0x40421a83; op3val:0x54e9d626; valaddr_reg:x16; val_offset:804; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 804, x17, x15, 1896, x18)

inst_238:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x218263 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x421a83 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x69d626 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54a18263; op2val:0x40421a83; op3val:0x54e9d626; valaddr_reg:x16; val_offset:816; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 816, x17, x15, 1904, x18)

inst_239:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x218263 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x421a83 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x69d626 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54a18263; op2val:0x40421a83; op3val:0x54e9d626; valaddr_reg:x16; val_offset:828; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 828, x17, x15, 1912, x18)

inst_240:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x218263 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x421a83 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x69d626 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54a18263; op2val:0x40421a83; op3val:0x54e9d626; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1920, x18)

inst_241:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x625f4b and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0324ab and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x4fdcc2 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54e25f4b; op2val:0x400324ab; op3val:0x54cfdcc2; valaddr_reg:x16; val_offset:852; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 852, x17, x15, 1928, x18)

inst_242:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x625f4b and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0324ab and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x4fdcc2 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54e25f4b; op2val:0x400324ab; op3val:0x54cfdcc2; valaddr_reg:x16; val_offset:864; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 864, x17, x15, 1936, x18)

inst_243:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x625f4b and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0324ab and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x4fdcc2 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54e25f4b; op2val:0x400324ab; op3val:0x54cfdcc2; valaddr_reg:x16; val_offset:876; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 876, x17, x15, 1944, x18)

inst_244:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x625f4b and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0324ab and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x4fdcc2 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54e25f4b; op2val:0x400324ab; op3val:0x54cfdcc2; valaddr_reg:x16; val_offset:888; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 888, x17, x15, 1952, x18)

inst_245:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x625f4b and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0324ab and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x4fdcc2 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54e25f4b; op2val:0x400324ab; op3val:0x54cfdcc2; valaddr_reg:x16; val_offset:900; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 900, x17, x15, 1960, x18)

inst_246:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x3f27a3 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x27aa05 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x74c73f and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x543f27a3; op2val:0x40a7aa05; op3val:0x54f4c73f; valaddr_reg:x16; val_offset:912; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 912, x17, x15, 1968, x18)

inst_247:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x3f27a3 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x27aa05 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x74c73f and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x543f27a3; op2val:0x40a7aa05; op3val:0x54f4c73f; valaddr_reg:x16; val_offset:924; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 924, x17, x15, 1976, x18)

inst_248:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x3f27a3 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x27aa05 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x74c73f and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x543f27a3; op2val:0x40a7aa05; op3val:0x54f4c73f; valaddr_reg:x16; val_offset:936; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 936, x17, x15, 1984, x18)

inst_249:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x3f27a3 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x27aa05 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x74c73f and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x543f27a3; op2val:0x40a7aa05; op3val:0x54f4c73f; valaddr_reg:x16; val_offset:948; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 948, x17, x15, 1992, x18)

inst_250:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x3f27a3 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x27aa05 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x74c73f and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x543f27a3; op2val:0x40a7aa05; op3val:0x54f4c73f; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 2000, x18)

inst_251:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x02ce78 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x150871 and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x4267ca and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5482ce78; op2val:0x40150871; op3val:0x53c267ca; valaddr_reg:x16; val_offset:972; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 972, x17, x15, 2008, x18)

inst_252:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x02ce78 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x150871 and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x4267ca and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5482ce78; op2val:0x40150871; op3val:0x53c267ca; valaddr_reg:x16; val_offset:984; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 984, x17, x15, 2016, x18)

inst_253:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x02ce78 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x150871 and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x4267ca and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5482ce78; op2val:0x40150871; op3val:0x53c267ca; valaddr_reg:x16; val_offset:996; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 996, x17, x15, 2024, x18)
RVTEST_SIGBASE(x15,signature_x15_2)

inst_254:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x02ce78 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x150871 and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x4267ca and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5482ce78; op2val:0x40150871; op3val:0x53c267ca; valaddr_reg:x16; val_offset:1008; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1008, x17, x15, 0, x18)

inst_255:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x02ce78 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x150871 and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x4267ca and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5482ce78; op2val:0x40150871; op3val:0x53c267ca; valaddr_reg:x16; val_offset:1020; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1020, x17, x15, 8, x18)

inst_256:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x7f4efa and fs2 == 0 and fe2 == 0x81 and fm2 == 0x2273b5 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x080d80 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x53ff4efa; op2val:0x40a273b5; op3val:0x54080d80; valaddr_reg:x16; val_offset:1032; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1032, x17, x15, 16, x18)

inst_257:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x7f4efa and fs2 == 0 and fe2 == 0x81 and fm2 == 0x2273b5 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x080d80 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x53ff4efa; op2val:0x40a273b5; op3val:0x54080d80; valaddr_reg:x16; val_offset:1044; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1044, x17, x15, 24, x18)

inst_258:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x7f4efa and fs2 == 0 and fe2 == 0x81 and fm2 == 0x2273b5 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x080d80 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x53ff4efa; op2val:0x40a273b5; op3val:0x54080d80; valaddr_reg:x16; val_offset:1056; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1056, x17, x15, 32, x18)

inst_259:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x7f4efa and fs2 == 0 and fe2 == 0x81 and fm2 == 0x2273b5 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x080d80 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x53ff4efa; op2val:0x40a273b5; op3val:0x54080d80; valaddr_reg:x16; val_offset:1068; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1068, x17, x15, 40, x18)

inst_260:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x7f4efa and fs2 == 0 and fe2 == 0x81 and fm2 == 0x2273b5 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x080d80 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x53ff4efa; op2val:0x40a273b5; op3val:0x54080d80; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 48, x18)

inst_261:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x123d34 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x58daee and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x6f82d1 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54123d34; op2val:0x40d8daee; op3val:0x54ef82d1; valaddr_reg:x16; val_offset:1092; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1092, x17, x15, 56, x18)

inst_262:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x123d34 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x58daee and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x6f82d1 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54123d34; op2val:0x40d8daee; op3val:0x54ef82d1; valaddr_reg:x16; val_offset:1104; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1104, x17, x15, 64, x18)

inst_263:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x123d34 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x58daee and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x6f82d1 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54123d34; op2val:0x40d8daee; op3val:0x54ef82d1; valaddr_reg:x16; val_offset:1116; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1116, x17, x15, 72, x18)

inst_264:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x123d34 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x58daee and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x6f82d1 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54123d34; op2val:0x40d8daee; op3val:0x54ef82d1; valaddr_reg:x16; val_offset:1128; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1128, x17, x15, 80, x18)

inst_265:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x123d34 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x58daee and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x6f82d1 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54123d34; op2val:0x40d8daee; op3val:0x54ef82d1; valaddr_reg:x16; val_offset:1140; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1140, x17, x15, 88, x18)

inst_266:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x504d42 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x104e80 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x55ad53 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x53504d42; op2val:0x41904e80; op3val:0x54d5ad53; valaddr_reg:x16; val_offset:1152; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1152, x17, x15, 96, x18)

inst_267:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x504d42 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x104e80 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x55ad53 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x53504d42; op2val:0x41904e80; op3val:0x54d5ad53; valaddr_reg:x16; val_offset:1164; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1164, x17, x15, 104, x18)

inst_268:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x504d42 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x104e80 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x55ad53 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x53504d42; op2val:0x41904e80; op3val:0x54d5ad53; valaddr_reg:x16; val_offset:1176; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1176, x17, x15, 112, x18)

inst_269:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x504d42 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x104e80 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x55ad53 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x53504d42; op2val:0x41904e80; op3val:0x54d5ad53; valaddr_reg:x16; val_offset:1188; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1188, x17, x15, 120, x18)

inst_270:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x504d42 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x104e80 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x55ad53 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x53504d42; op2val:0x41904e80; op3val:0x54d5ad53; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 128, x18)

inst_271:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x0ce126 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x73d2ab and fs3 == 0 and fe3 == 0xa5 and fm3 == 0x45b4c4 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x540ce126; op2val:0x4073d2ab; op3val:0x52c5b4c4; valaddr_reg:x16; val_offset:1212; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1212, x17, x15, 136, x18)

inst_272:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x0ce126 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x73d2ab and fs3 == 0 and fe3 == 0xa5 and fm3 == 0x45b4c4 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x540ce126; op2val:0x4073d2ab; op3val:0x52c5b4c4; valaddr_reg:x16; val_offset:1224; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1224, x17, x15, 144, x18)

inst_273:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x0ce126 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x73d2ab and fs3 == 0 and fe3 == 0xa5 and fm3 == 0x45b4c4 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x540ce126; op2val:0x4073d2ab; op3val:0x52c5b4c4; valaddr_reg:x16; val_offset:1236; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1236, x17, x15, 152, x18)

inst_274:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x0ce126 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x73d2ab and fs3 == 0 and fe3 == 0xa5 and fm3 == 0x45b4c4 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x540ce126; op2val:0x4073d2ab; op3val:0x52c5b4c4; valaddr_reg:x16; val_offset:1248; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1248, x17, x15, 160, x18)

inst_275:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x0ce126 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x73d2ab and fs3 == 0 and fe3 == 0xa5 and fm3 == 0x45b4c4 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x540ce126; op2val:0x4073d2ab; op3val:0x52c5b4c4; valaddr_reg:x16; val_offset:1260; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1260, x17, x15, 168, x18)

inst_276:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x38aee4 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x7d6076 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x5b29bb and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5438aee4; op2val:0x407d6076; op3val:0x545b29bb; valaddr_reg:x16; val_offset:1272; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1272, x17, x15, 176, x18)

inst_277:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x38aee4 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x7d6076 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x5b29bb and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5438aee4; op2val:0x407d6076; op3val:0x545b29bb; valaddr_reg:x16; val_offset:1284; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1284, x17, x15, 184, x18)

inst_278:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x38aee4 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x7d6076 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x5b29bb and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5438aee4; op2val:0x407d6076; op3val:0x545b29bb; valaddr_reg:x16; val_offset:1296; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1296, x17, x15, 192, x18)

inst_279:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x38aee4 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x7d6076 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x5b29bb and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5438aee4; op2val:0x407d6076; op3val:0x545b29bb; valaddr_reg:x16; val_offset:1308; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1308, x17, x15, 200, x18)

inst_280:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x38aee4 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x7d6076 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x5b29bb and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5438aee4; op2val:0x407d6076; op3val:0x545b29bb; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 208, x18)

inst_281:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x7fb0de and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4ba918 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x16d448 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54ffb0de; op2val:0x3fcba918; op3val:0x5496d448; valaddr_reg:x16; val_offset:1332; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1332, x17, x15, 216, x18)

inst_282:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x7fb0de and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4ba918 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x16d448 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54ffb0de; op2val:0x3fcba918; op3val:0x5496d448; valaddr_reg:x16; val_offset:1344; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1344, x17, x15, 224, x18)

inst_283:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x7fb0de and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4ba918 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x16d448 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54ffb0de; op2val:0x3fcba918; op3val:0x5496d448; valaddr_reg:x16; val_offset:1356; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1356, x17, x15, 232, x18)

inst_284:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x7fb0de and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4ba918 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x16d448 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54ffb0de; op2val:0x3fcba918; op3val:0x5496d448; valaddr_reg:x16; val_offset:1368; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1368, x17, x15, 240, x18)

inst_285:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x7fb0de and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4ba918 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x16d448 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54ffb0de; op2val:0x3fcba918; op3val:0x5496d448; valaddr_reg:x16; val_offset:1380; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1380, x17, x15, 248, x18)

inst_286:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x3e93e2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x6f7ee4 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x492a1c and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x543e93e2; op2val:0x406f7ee4; op3val:0x54492a1c; valaddr_reg:x16; val_offset:1392; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1392, x17, x15, 256, x18)

inst_287:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x3e93e2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x6f7ee4 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x492a1c and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x543e93e2; op2val:0x406f7ee4; op3val:0x54492a1c; valaddr_reg:x16; val_offset:1404; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1404, x17, x15, 264, x18)

inst_288:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x3e93e2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x6f7ee4 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x492a1c and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x543e93e2; op2val:0x406f7ee4; op3val:0x54492a1c; valaddr_reg:x16; val_offset:1416; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1416, x17, x15, 272, x18)

inst_289:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x3e93e2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x6f7ee4 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x492a1c and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x543e93e2; op2val:0x406f7ee4; op3val:0x54492a1c; valaddr_reg:x16; val_offset:1428; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1428, x17, x15, 280, x18)

inst_290:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x3e93e2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x6f7ee4 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x492a1c and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x543e93e2; op2val:0x406f7ee4; op3val:0x54492a1c; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 288, x18)

inst_291:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x66cd11 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x371fc8 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x1464fc and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54e6cd11; op2val:0x3fb71fc8; op3val:0x541464fc; valaddr_reg:x16; val_offset:1452; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1452, x17, x15, 296, x18)

inst_292:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x66cd11 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x371fc8 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x1464fc and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54e6cd11; op2val:0x3fb71fc8; op3val:0x541464fc; valaddr_reg:x16; val_offset:1464; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1464, x17, x15, 304, x18)

inst_293:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x66cd11 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x371fc8 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x1464fc and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54e6cd11; op2val:0x3fb71fc8; op3val:0x541464fc; valaddr_reg:x16; val_offset:1476; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1476, x17, x15, 312, x18)

inst_294:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x66cd11 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x371fc8 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x1464fc and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54e6cd11; op2val:0x3fb71fc8; op3val:0x541464fc; valaddr_reg:x16; val_offset:1488; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1488, x17, x15, 320, x18)

inst_295:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x66cd11 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x371fc8 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x1464fc and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54e6cd11; op2val:0x3fb71fc8; op3val:0x541464fc; valaddr_reg:x16; val_offset:1500; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1500, x17, x15, 328, x18)

inst_296:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x6d287a and fs2 == 0 and fe2 == 0x7f and fm2 == 0x6cafff and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x3688b6 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54ed287a; op2val:0x3fecafff; op3val:0x54b688b6; valaddr_reg:x16; val_offset:1512; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1512, x17, x15, 336, x18)

inst_297:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x6d287a and fs2 == 0 and fe2 == 0x7f and fm2 == 0x6cafff and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x3688b6 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54ed287a; op2val:0x3fecafff; op3val:0x54b688b6; valaddr_reg:x16; val_offset:1524; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1524, x17, x15, 344, x18)

inst_298:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x6d287a and fs2 == 0 and fe2 == 0x7f and fm2 == 0x6cafff and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x3688b6 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54ed287a; op2val:0x3fecafff; op3val:0x54b688b6; valaddr_reg:x16; val_offset:1536; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1536, x17, x15, 352, x18)

inst_299:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x6d287a and fs2 == 0 and fe2 == 0x7f and fm2 == 0x6cafff and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x3688b6 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54ed287a; op2val:0x3fecafff; op3val:0x54b688b6; valaddr_reg:x16; val_offset:1548; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1548, x17, x15, 360, x18)

inst_300:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x6d287a and fs2 == 0 and fe2 == 0x7f and fm2 == 0x6cafff and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x3688b6 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54ed287a; op2val:0x3fecafff; op3val:0x54b688b6; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 368, x18)

inst_301:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x56cff7 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2ada94 and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x75d83d and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54d6cff7; op2val:0x3faada94; op3val:0x5375d83d; valaddr_reg:x16; val_offset:1572; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1572, x17, x15, 376, x18)

inst_302:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x56cff7 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2ada94 and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x75d83d and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54d6cff7; op2val:0x3faada94; op3val:0x5375d83d; valaddr_reg:x16; val_offset:1584; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1584, x17, x15, 384, x18)

inst_303:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x56cff7 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2ada94 and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x75d83d and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54d6cff7; op2val:0x3faada94; op3val:0x5375d83d; valaddr_reg:x16; val_offset:1596; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1596, x17, x15, 392, x18)

inst_304:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x56cff7 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2ada94 and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x75d83d and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54d6cff7; op2val:0x3faada94; op3val:0x5375d83d; valaddr_reg:x16; val_offset:1608; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1608, x17, x15, 400, x18)

inst_305:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x56cff7 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2ada94 and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x75d83d and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54d6cff7; op2val:0x3faada94; op3val:0x5375d83d; valaddr_reg:x16; val_offset:1620; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1620, x17, x15, 408, x18)

inst_306:
// fs1 == 0 and fe1 == 0xa0 and fm1 == 0x643f15 and fs2 == 0 and fe2 == 0x88 and fm2 == 0x7b57b6 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x40301b and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x50643f15; op2val:0x447b57b6; op3val:0x54c0301b; valaddr_reg:x16; val_offset:1632; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1632, x17, x15, 416, x18)

inst_307:
// fs1 == 0 and fe1 == 0xa0 and fm1 == 0x643f15 and fs2 == 0 and fe2 == 0x88 and fm2 == 0x7b57b6 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x40301b and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x50643f15; op2val:0x447b57b6; op3val:0x54c0301b; valaddr_reg:x16; val_offset:1644; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1644, x17, x15, 424, x18)

inst_308:
// fs1 == 0 and fe1 == 0xa0 and fm1 == 0x643f15 and fs2 == 0 and fe2 == 0x88 and fm2 == 0x7b57b6 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x40301b and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x50643f15; op2val:0x447b57b6; op3val:0x54c0301b; valaddr_reg:x16; val_offset:1656; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1656, x17, x15, 432, x18)

inst_309:
// fs1 == 0 and fe1 == 0xa0 and fm1 == 0x643f15 and fs2 == 0 and fe2 == 0x88 and fm2 == 0x7b57b6 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x40301b and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x50643f15; op2val:0x447b57b6; op3val:0x54c0301b; valaddr_reg:x16; val_offset:1668; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1668, x17, x15, 440, x18)

inst_310:
// fs1 == 0 and fe1 == 0xa0 and fm1 == 0x643f15 and fs2 == 0 and fe2 == 0x88 and fm2 == 0x7b57b6 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x40301b and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x50643f15; op2val:0x447b57b6; op3val:0x54c0301b; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 448, x18)

inst_311:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x21d4fb and fs2 == 0 and fe2 == 0x81 and fm2 == 0x3a4e76 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x571962 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5421d4fb; op2val:0x40ba4e76; op3val:0x54d71962; valaddr_reg:x16; val_offset:1692; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1692, x17, x15, 456, x18)

inst_312:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x21d4fb and fs2 == 0 and fe2 == 0x81 and fm2 == 0x3a4e76 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x571962 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5421d4fb; op2val:0x40ba4e76; op3val:0x54d71962; valaddr_reg:x16; val_offset:1704; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1704, x17, x15, 464, x18)

inst_313:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x21d4fb and fs2 == 0 and fe2 == 0x81 and fm2 == 0x3a4e76 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x571962 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5421d4fb; op2val:0x40ba4e76; op3val:0x54d71962; valaddr_reg:x16; val_offset:1716; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1716, x17, x15, 472, x18)

inst_314:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x21d4fb and fs2 == 0 and fe2 == 0x81 and fm2 == 0x3a4e76 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x571962 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5421d4fb; op2val:0x40ba4e76; op3val:0x54d71962; valaddr_reg:x16; val_offset:1728; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1728, x17, x15, 480, x18)

inst_315:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x21d4fb and fs2 == 0 and fe2 == 0x81 and fm2 == 0x3a4e76 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x571962 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5421d4fb; op2val:0x40ba4e76; op3val:0x54d71962; valaddr_reg:x16; val_offset:1740; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1740, x17, x15, 488, x18)

inst_316:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x10158d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x18d2cd and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x301b8b and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5390158d; op2val:0x4118d2cd; op3val:0x54301b8b; valaddr_reg:x16; val_offset:1752; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1752, x17, x15, 496, x18)

inst_317:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x10158d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x18d2cd and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x301b8b and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5390158d; op2val:0x4118d2cd; op3val:0x54301b8b; valaddr_reg:x16; val_offset:1764; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1764, x17, x15, 504, x18)

inst_318:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x10158d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x18d2cd and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x301b8b and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5390158d; op2val:0x4118d2cd; op3val:0x54301b8b; valaddr_reg:x16; val_offset:1776; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1776, x17, x15, 512, x18)

inst_319:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x10158d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x18d2cd and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x301b8b and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5390158d; op2val:0x4118d2cd; op3val:0x54301b8b; valaddr_reg:x16; val_offset:1788; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1788, x17, x15, 520, x18)

inst_320:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x10158d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x18d2cd and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x301b8b and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5390158d; op2val:0x4118d2cd; op3val:0x54301b8b; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 528, x18)

inst_321:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x66ca0e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x38daa2 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x1a9953 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5466ca0e; op2val:0x4038daa2; op3val:0x541a9953; valaddr_reg:x16; val_offset:1812; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1812, x17, x15, 536, x18)

inst_322:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x66ca0e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x38daa2 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x1a9953 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5466ca0e; op2val:0x4038daa2; op3val:0x541a9953; valaddr_reg:x16; val_offset:1824; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1824, x17, x15, 544, x18)

inst_323:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x66ca0e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x38daa2 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x1a9953 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5466ca0e; op2val:0x4038daa2; op3val:0x541a9953; valaddr_reg:x16; val_offset:1836; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1836, x17, x15, 552, x18)

inst_324:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x66ca0e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x38daa2 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x1a9953 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5466ca0e; op2val:0x4038daa2; op3val:0x541a9953; valaddr_reg:x16; val_offset:1848; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1848, x17, x15, 560, x18)

inst_325:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x66ca0e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x38daa2 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x1a9953 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5466ca0e; op2val:0x4038daa2; op3val:0x541a9953; valaddr_reg:x16; val_offset:1860; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1860, x17, x15, 568, x18)

inst_326:
// fs1 == 0 and fe1 == 0xa1 and fm1 == 0x6b4e1e and fs2 == 0 and fe2 == 0x87 and fm2 == 0x4fbad5 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x7bbf98 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x50eb4e1e; op2val:0x43cfbad5; op3val:0x547bbf98; valaddr_reg:x16; val_offset:1872; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1872, x17, x15, 576, x18)

inst_327:
// fs1 == 0 and fe1 == 0xa1 and fm1 == 0x6b4e1e and fs2 == 0 and fe2 == 0x87 and fm2 == 0x4fbad5 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x7bbf98 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x50eb4e1e; op2val:0x43cfbad5; op3val:0x547bbf98; valaddr_reg:x16; val_offset:1884; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1884, x17, x15, 584, x18)

inst_328:
// fs1 == 0 and fe1 == 0xa1 and fm1 == 0x6b4e1e and fs2 == 0 and fe2 == 0x87 and fm2 == 0x4fbad5 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x7bbf98 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x50eb4e1e; op2val:0x43cfbad5; op3val:0x547bbf98; valaddr_reg:x16; val_offset:1896; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1896, x17, x15, 592, x18)

inst_329:
// fs1 == 0 and fe1 == 0xa1 and fm1 == 0x6b4e1e and fs2 == 0 and fe2 == 0x87 and fm2 == 0x4fbad5 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x7bbf98 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x50eb4e1e; op2val:0x43cfbad5; op3val:0x547bbf98; valaddr_reg:x16; val_offset:1908; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1908, x17, x15, 600, x18)

inst_330:
// fs1 == 0 and fe1 == 0xa1 and fm1 == 0x6b4e1e and fs2 == 0 and fe2 == 0x87 and fm2 == 0x4fbad5 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x7bbf98 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x50eb4e1e; op2val:0x43cfbad5; op3val:0x547bbf98; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 608, x18)

inst_331:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x78e76d and fs2 == 0 and fe2 == 0x80 and fm2 == 0x06eb27 and fs3 == 0 and fe3 == 0xa4 and fm3 == 0x4b7184 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5478e76d; op2val:0x4006eb27; op3val:0x524b7184; valaddr_reg:x16; val_offset:1932; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1932, x17, x15, 616, x18)

inst_332:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x78e76d and fs2 == 0 and fe2 == 0x80 and fm2 == 0x06eb27 and fs3 == 0 and fe3 == 0xa4 and fm3 == 0x4b7184 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5478e76d; op2val:0x4006eb27; op3val:0x524b7184; valaddr_reg:x16; val_offset:1944; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1944, x17, x15, 624, x18)

inst_333:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x78e76d and fs2 == 0 and fe2 == 0x80 and fm2 == 0x06eb27 and fs3 == 0 and fe3 == 0xa4 and fm3 == 0x4b7184 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5478e76d; op2val:0x4006eb27; op3val:0x524b7184; valaddr_reg:x16; val_offset:1956; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1956, x17, x15, 632, x18)

inst_334:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x78e76d and fs2 == 0 and fe2 == 0x80 and fm2 == 0x06eb27 and fs3 == 0 and fe3 == 0xa4 and fm3 == 0x4b7184 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5478e76d; op2val:0x4006eb27; op3val:0x524b7184; valaddr_reg:x16; val_offset:1968; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1968, x17, x15, 640, x18)

inst_335:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x78e76d and fs2 == 0 and fe2 == 0x80 and fm2 == 0x06eb27 and fs3 == 0 and fe3 == 0xa4 and fm3 == 0x4b7184 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5478e76d; op2val:0x4006eb27; op3val:0x524b7184; valaddr_reg:x16; val_offset:1980; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1980, x17, x15, 648, x18)

inst_336:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x6cefd2 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x033993 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x65d00a and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x53ecefd2; op2val:0x41033993; op3val:0x54e5d00a; valaddr_reg:x16; val_offset:1992; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1992, x17, x15, 656, x18)

inst_337:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x6cefd2 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x033993 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x65d00a and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x53ecefd2; op2val:0x41033993; op3val:0x54e5d00a; valaddr_reg:x16; val_offset:2004; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 2004, x17, x15, 664, x18)

inst_338:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x6cefd2 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x033993 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x65d00a and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x53ecefd2; op2val:0x41033993; op3val:0x54e5d00a; valaddr_reg:x16; val_offset:2016; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 2016, x17, x15, 672, x18)

inst_339:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x6cefd2 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x033993 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x65d00a and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x53ecefd2; op2val:0x41033993; op3val:0x54e5d00a; valaddr_reg:x16; val_offset:2028; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 2028, x17, x15, 680, x18)
addi x16,x16,2040

inst_340:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x6cefd2 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x033993 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x65d00a and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x53ecefd2; op2val:0x41033993; op3val:0x54e5d00a; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 688, x18)

inst_341:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x630966 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x75d750 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x340de5 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54e30966; op2val:0x3ff5d750; op3val:0x54b40de5; valaddr_reg:x16; val_offset:12; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 12, x17, x15, 696, x18)

inst_342:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x630966 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x75d750 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x340de5 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54e30966; op2val:0x3ff5d750; op3val:0x54b40de5; valaddr_reg:x16; val_offset:24; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 24, x17, x15, 704, x18)

inst_343:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x630966 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x75d750 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x340de5 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54e30966; op2val:0x3ff5d750; op3val:0x54b40de5; valaddr_reg:x16; val_offset:36; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 36, x17, x15, 712, x18)

inst_344:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x630966 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x75d750 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x340de5 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54e30966; op2val:0x3ff5d750; op3val:0x54b40de5; valaddr_reg:x16; val_offset:48; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 48, x17, x15, 720, x18)

inst_345:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x630966 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x75d750 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x340de5 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54e30966; op2val:0x3ff5d750; op3val:0x54b40de5; valaddr_reg:x16; val_offset:60; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 60, x17, x15, 728, x18)

inst_346:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x51f9be and fs2 == 0 and fe2 == 0x7f and fm2 == 0x6b72f1 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x023d11 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54d1f9be; op2val:0x3feb72f1; op3val:0x54823d11; valaddr_reg:x16; val_offset:72; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 72, x17, x15, 736, x18)

inst_347:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x51f9be and fs2 == 0 and fe2 == 0x7f and fm2 == 0x6b72f1 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x023d11 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54d1f9be; op2val:0x3feb72f1; op3val:0x54823d11; valaddr_reg:x16; val_offset:84; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 84, x17, x15, 744, x18)

inst_348:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x51f9be and fs2 == 0 and fe2 == 0x7f and fm2 == 0x6b72f1 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x023d11 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54d1f9be; op2val:0x3feb72f1; op3val:0x54823d11; valaddr_reg:x16; val_offset:96; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 96, x17, x15, 752, x18)

inst_349:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x51f9be and fs2 == 0 and fe2 == 0x7f and fm2 == 0x6b72f1 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x023d11 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54d1f9be; op2val:0x3feb72f1; op3val:0x54823d11; valaddr_reg:x16; val_offset:108; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 108, x17, x15, 760, x18)

inst_350:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x51f9be and fs2 == 0 and fe2 == 0x7f and fm2 == 0x6b72f1 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x023d11 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54d1f9be; op2val:0x3feb72f1; op3val:0x54823d11; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 768, x18)

inst_351:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x73e6cb and fs2 == 0 and fe2 == 0x7f and fm2 == 0x182a29 and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x07c9a0 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54f3e6cb; op2val:0x3f982a29; op3val:0x5387c9a0; valaddr_reg:x16; val_offset:132; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 132, x17, x15, 776, x18)

inst_352:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x73e6cb and fs2 == 0 and fe2 == 0x7f and fm2 == 0x182a29 and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x07c9a0 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54f3e6cb; op2val:0x3f982a29; op3val:0x5387c9a0; valaddr_reg:x16; val_offset:144; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 144, x17, x15, 784, x18)

inst_353:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x73e6cb and fs2 == 0 and fe2 == 0x7f and fm2 == 0x182a29 and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x07c9a0 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54f3e6cb; op2val:0x3f982a29; op3val:0x5387c9a0; valaddr_reg:x16; val_offset:156; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 156, x17, x15, 792, x18)

inst_354:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x73e6cb and fs2 == 0 and fe2 == 0x7f and fm2 == 0x182a29 and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x07c9a0 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54f3e6cb; op2val:0x3f982a29; op3val:0x5387c9a0; valaddr_reg:x16; val_offset:168; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 168, x17, x15, 800, x18)

inst_355:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x73e6cb and fs2 == 0 and fe2 == 0x7f and fm2 == 0x182a29 and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x07c9a0 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54f3e6cb; op2val:0x3f982a29; op3val:0x5387c9a0; valaddr_reg:x16; val_offset:180; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 180, x17, x15, 808, x18)

inst_356:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x112478 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x2c0a36 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x06292c and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x53912478; op2val:0x412c0a36; op3val:0x5486292c; valaddr_reg:x16; val_offset:192; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 192, x17, x15, 816, x18)

inst_357:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x112478 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x2c0a36 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x06292c and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x53912478; op2val:0x412c0a36; op3val:0x5486292c; valaddr_reg:x16; val_offset:204; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 204, x17, x15, 824, x18)

inst_358:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x112478 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x2c0a36 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x06292c and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x53912478; op2val:0x412c0a36; op3val:0x5486292c; valaddr_reg:x16; val_offset:216; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 216, x17, x15, 832, x18)

inst_359:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x112478 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x2c0a36 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x06292c and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x53912478; op2val:0x412c0a36; op3val:0x5486292c; valaddr_reg:x16; val_offset:228; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 228, x17, x15, 840, x18)

inst_360:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x112478 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x2c0a36 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x06292c and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x53912478; op2val:0x412c0a36; op3val:0x5486292c; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 848, x18)

inst_361:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x57c40c and fs2 == 0 and fe2 == 0x81 and fm2 == 0x702cf5 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x14db60 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x53d7c40c; op2val:0x40f02cf5; op3val:0x5494db60; valaddr_reg:x16; val_offset:252; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 252, x17, x15, 856, x18)

inst_362:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x57c40c and fs2 == 0 and fe2 == 0x81 and fm2 == 0x702cf5 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x14db60 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x53d7c40c; op2val:0x40f02cf5; op3val:0x5494db60; valaddr_reg:x16; val_offset:264; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 264, x17, x15, 864, x18)

inst_363:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x57c40c and fs2 == 0 and fe2 == 0x81 and fm2 == 0x702cf5 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x14db60 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x53d7c40c; op2val:0x40f02cf5; op3val:0x5494db60; valaddr_reg:x16; val_offset:276; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 276, x17, x15, 872, x18)

inst_364:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x57c40c and fs2 == 0 and fe2 == 0x81 and fm2 == 0x702cf5 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x14db60 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x53d7c40c; op2val:0x40f02cf5; op3val:0x5494db60; valaddr_reg:x16; val_offset:288; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 288, x17, x15, 880, x18)

inst_365:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x57c40c and fs2 == 0 and fe2 == 0x81 and fm2 == 0x702cf5 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x14db60 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x53d7c40c; op2val:0x40f02cf5; op3val:0x5494db60; valaddr_reg:x16; val_offset:300; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 300, x17, x15, 888, x18)

inst_366:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x56df92 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x1459a7 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x721202 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x53d6df92; op2val:0x411459a7; op3val:0x54f21202; valaddr_reg:x16; val_offset:312; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 312, x17, x15, 896, x18)

inst_367:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x56df92 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x1459a7 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x721202 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x53d6df92; op2val:0x411459a7; op3val:0x54f21202; valaddr_reg:x16; val_offset:324; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 324, x17, x15, 904, x18)

inst_368:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x56df92 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x1459a7 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x721202 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x53d6df92; op2val:0x411459a7; op3val:0x54f21202; valaddr_reg:x16; val_offset:336; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 336, x17, x15, 912, x18)

inst_369:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x56df92 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x1459a7 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x721202 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x53d6df92; op2val:0x411459a7; op3val:0x54f21202; valaddr_reg:x16; val_offset:348; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 348, x17, x15, 920, x18)

inst_370:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x56df92 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x1459a7 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x721202 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x53d6df92; op2val:0x411459a7; op3val:0x54f21202; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 928, x18)

inst_371:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x661e70 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x34a6d3 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x098d71 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54661e70; op2val:0x4034a6d3; op3val:0x54098d71; valaddr_reg:x16; val_offset:372; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 372, x17, x15, 936, x18)

inst_372:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x661e70 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x34a6d3 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x098d71 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54661e70; op2val:0x4034a6d3; op3val:0x54098d71; valaddr_reg:x16; val_offset:384; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 384, x17, x15, 944, x18)

inst_373:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x661e70 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x34a6d3 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x098d71 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54661e70; op2val:0x4034a6d3; op3val:0x54098d71; valaddr_reg:x16; val_offset:396; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 396, x17, x15, 952, x18)

inst_374:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x661e70 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x34a6d3 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x098d71 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54661e70; op2val:0x4034a6d3; op3val:0x54098d71; valaddr_reg:x16; val_offset:408; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 408, x17, x15, 960, x18)

inst_375:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x661e70 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x34a6d3 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x098d71 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54661e70; op2val:0x4034a6d3; op3val:0x54098d71; valaddr_reg:x16; val_offset:420; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 420, x17, x15, 968, x18)

inst_376:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x51e4d1 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x19a0ab and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x77d5f1 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54d1e4d1; op2val:0x4019a0ab; op3val:0x54f7d5f1; valaddr_reg:x16; val_offset:432; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 432, x17, x15, 976, x18)

inst_377:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x51e4d1 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x19a0ab and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x77d5f1 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54d1e4d1; op2val:0x4019a0ab; op3val:0x54f7d5f1; valaddr_reg:x16; val_offset:444; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 444, x17, x15, 984, x18)

inst_378:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x51e4d1 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x19a0ab and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x77d5f1 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54d1e4d1; op2val:0x4019a0ab; op3val:0x54f7d5f1; valaddr_reg:x16; val_offset:456; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 456, x17, x15, 992, x18)

inst_379:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x51e4d1 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x19a0ab and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x77d5f1 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54d1e4d1; op2val:0x4019a0ab; op3val:0x54f7d5f1; valaddr_reg:x16; val_offset:468; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 468, x17, x15, 1000, x18)

inst_380:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x51e4d1 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x19a0ab and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x77d5f1 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54d1e4d1; op2val:0x4019a0ab; op3val:0x54f7d5f1; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1008, x18)

inst_381:
// fs1 == 0 and fe1 == 0xa4 and fm1 == 0x0f6581 and fs2 == 0 and fe2 == 0x85 and fm2 == 0x26b273 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x6afe39 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x520f6581; op2val:0x42a6b273; op3val:0x546afe39; valaddr_reg:x16; val_offset:492; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 492, x17, x15, 1016, x18)

inst_382:
// fs1 == 0 and fe1 == 0xa4 and fm1 == 0x0f6581 and fs2 == 0 and fe2 == 0x85 and fm2 == 0x26b273 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x6afe39 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x520f6581; op2val:0x42a6b273; op3val:0x546afe39; valaddr_reg:x16; val_offset:504; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 504, x17, x15, 1024, x18)

inst_383:
// fs1 == 0 and fe1 == 0xa4 and fm1 == 0x0f6581 and fs2 == 0 and fe2 == 0x85 and fm2 == 0x26b273 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x6afe39 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x520f6581; op2val:0x42a6b273; op3val:0x546afe39; valaddr_reg:x16; val_offset:516; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 516, x17, x15, 1032, x18)

inst_384:
// fs1 == 0 and fe1 == 0xa4 and fm1 == 0x0f6581 and fs2 == 0 and fe2 == 0x85 and fm2 == 0x26b273 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x6afe39 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x520f6581; op2val:0x42a6b273; op3val:0x546afe39; valaddr_reg:x16; val_offset:528; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 528, x17, x15, 1040, x18)

inst_385:
// fs1 == 0 and fe1 == 0xa4 and fm1 == 0x0f6581 and fs2 == 0 and fe2 == 0x85 and fm2 == 0x26b273 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x6afe39 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x520f6581; op2val:0x42a6b273; op3val:0x546afe39; valaddr_reg:x16; val_offset:540; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 540, x17, x15, 1048, x18)

inst_386:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x7a6673 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7d6214 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x6fae5d and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54fa6673; op2val:0x3ffd6214; op3val:0x54efae5d; valaddr_reg:x16; val_offset:552; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 552, x17, x15, 1056, x18)

inst_387:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x7a6673 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7d6214 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x6fae5d and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54fa6673; op2val:0x3ffd6214; op3val:0x54efae5d; valaddr_reg:x16; val_offset:564; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 564, x17, x15, 1064, x18)

inst_388:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x7a6673 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7d6214 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x6fae5d and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54fa6673; op2val:0x3ffd6214; op3val:0x54efae5d; valaddr_reg:x16; val_offset:576; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 576, x17, x15, 1072, x18)

inst_389:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x7a6673 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7d6214 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x6fae5d and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54fa6673; op2val:0x3ffd6214; op3val:0x54efae5d; valaddr_reg:x16; val_offset:588; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 588, x17, x15, 1080, x18)

inst_390:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x7a6673 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7d6214 and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x6fae5d and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54fa6673; op2val:0x3ffd6214; op3val:0x54efae5d; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1088, x18)

inst_391:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x64c718 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2bc4fb and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x4c0833 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54e4c718; op2val:0x3fabc4fb; op3val:0x53cc0833; valaddr_reg:x16; val_offset:612; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 612, x17, x15, 1096, x18)

inst_392:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x64c718 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2bc4fb and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x4c0833 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54e4c718; op2val:0x3fabc4fb; op3val:0x53cc0833; valaddr_reg:x16; val_offset:624; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 624, x17, x15, 1104, x18)

inst_393:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x64c718 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2bc4fb and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x4c0833 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54e4c718; op2val:0x3fabc4fb; op3val:0x53cc0833; valaddr_reg:x16; val_offset:636; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 636, x17, x15, 1112, x18)

inst_394:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x64c718 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2bc4fb and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x4c0833 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54e4c718; op2val:0x3fabc4fb; op3val:0x53cc0833; valaddr_reg:x16; val_offset:648; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 648, x17, x15, 1120, x18)

inst_395:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x64c718 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2bc4fb and fs3 == 0 and fe3 == 0xa7 and fm3 == 0x4c0833 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54e4c718; op2val:0x3fabc4fb; op3val:0x53cc0833; valaddr_reg:x16; val_offset:660; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 660, x17, x15, 1128, x18)

inst_396:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x6ec401 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x19809d and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x72b1a1 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x546ec401; op2val:0x4019809d; op3val:0x5372b1a1; valaddr_reg:x16; val_offset:672; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 672, x17, x15, 1136, x18)

inst_397:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x6ec401 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x19809d and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x72b1a1 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x546ec401; op2val:0x4019809d; op3val:0x5372b1a1; valaddr_reg:x16; val_offset:684; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 684, x17, x15, 1144, x18)

inst_398:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x6ec401 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x19809d and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x72b1a1 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x546ec401; op2val:0x4019809d; op3val:0x5372b1a1; valaddr_reg:x16; val_offset:696; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 696, x17, x15, 1152, x18)

inst_399:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x6ec401 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x19809d and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x72b1a1 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x546ec401; op2val:0x4019809d; op3val:0x5372b1a1; valaddr_reg:x16; val_offset:708; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 708, x17, x15, 1160, x18)

inst_400:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x6ec401 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x19809d and fs3 == 0 and fe3 == 0xa6 and fm3 == 0x72b1a1 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x546ec401; op2val:0x4019809d; op3val:0x5372b1a1; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1168, x18)

inst_401:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x043baf and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3579a7 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x6de84a and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54843baf; op2val:0x403579a7; op3val:0x546de84a; valaddr_reg:x16; val_offset:732; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 732, x17, x15, 1176, x18)

inst_402:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x043baf and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3579a7 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x6de84a and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54843baf; op2val:0x403579a7; op3val:0x546de84a; valaddr_reg:x16; val_offset:744; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 744, x17, x15, 1184, x18)

inst_403:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x043baf and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3579a7 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x6de84a and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54843baf; op2val:0x403579a7; op3val:0x546de84a; valaddr_reg:x16; val_offset:756; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 756, x17, x15, 1192, x18)

inst_404:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x043baf and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3579a7 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x6de84a and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54843baf; op2val:0x403579a7; op3val:0x546de84a; valaddr_reg:x16; val_offset:768; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 768, x17, x15, 1200, x18)

inst_405:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x043baf and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3579a7 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x6de84a and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54843baf; op2val:0x403579a7; op3val:0x546de84a; valaddr_reg:x16; val_offset:780; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 780, x17, x15, 1208, x18)

inst_406:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x2cfb2d and fs2 == 0 and fe2 == 0x7f and fm2 == 0x74873d and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x14eb24 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54acfb2d; op2val:0x3ff4873d; op3val:0x5414eb24; valaddr_reg:x16; val_offset:792; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 792, x17, x15, 1216, x18)

inst_407:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x2cfb2d and fs2 == 0 and fe2 == 0x7f and fm2 == 0x74873d and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x14eb24 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54acfb2d; op2val:0x3ff4873d; op3val:0x5414eb24; valaddr_reg:x16; val_offset:804; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 804, x17, x15, 1224, x18)

inst_408:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x2cfb2d and fs2 == 0 and fe2 == 0x7f and fm2 == 0x74873d and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x14eb24 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54acfb2d; op2val:0x3ff4873d; op3val:0x5414eb24; valaddr_reg:x16; val_offset:816; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 816, x17, x15, 1232, x18)

inst_409:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x2cfb2d and fs2 == 0 and fe2 == 0x7f and fm2 == 0x74873d and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x14eb24 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54acfb2d; op2val:0x3ff4873d; op3val:0x5414eb24; valaddr_reg:x16; val_offset:828; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 828, x17, x15, 1240, x18)

inst_410:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x2cfb2d and fs2 == 0 and fe2 == 0x7f and fm2 == 0x74873d and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x14eb24 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54acfb2d; op2val:0x3ff4873d; op3val:0x5414eb24; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1248, x18)

inst_411:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x2c084b and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2128fd and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x31330c and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54ac084b; op2val:0x402128fd; op3val:0x54b1330c; valaddr_reg:x16; val_offset:852; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 852, x17, x15, 1256, x18)

inst_412:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x2c084b and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2128fd and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x31330c and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54ac084b; op2val:0x402128fd; op3val:0x54b1330c; valaddr_reg:x16; val_offset:864; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 864, x17, x15, 1264, x18)

inst_413:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x2c084b and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2128fd and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x31330c and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54ac084b; op2val:0x402128fd; op3val:0x54b1330c; valaddr_reg:x16; val_offset:876; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 876, x17, x15, 1272, x18)

inst_414:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x2c084b and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2128fd and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x31330c and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54ac084b; op2val:0x402128fd; op3val:0x54b1330c; valaddr_reg:x16; val_offset:888; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 888, x17, x15, 1280, x18)

inst_415:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x2c084b and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2128fd and fs3 == 0 and fe3 == 0xa9 and fm3 == 0x31330c and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x54ac084b; op2val:0x402128fd; op3val:0x54b1330c; valaddr_reg:x16; val_offset:900; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 900, x17, x15, 1288, x18)

inst_416:
// fs1 == 0 and fe1 == 0xa5 and fm1 == 0x7877af and fs2 == 0 and fe2 == 0x83 and fm2 == 0x275387 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x099c95 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x52f877af; op2val:0x41a75387; op3val:0x54099c95; valaddr_reg:x16; val_offset:912; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 912, x17, x15, 1296, x18)

inst_417:
// fs1 == 0 and fe1 == 0xa5 and fm1 == 0x7877af and fs2 == 0 and fe2 == 0x83 and fm2 == 0x275387 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x099c95 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x52f877af; op2val:0x41a75387; op3val:0x54099c95; valaddr_reg:x16; val_offset:924; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 924, x17, x15, 1304, x18)

inst_418:
// fs1 == 0 and fe1 == 0xa5 and fm1 == 0x7877af and fs2 == 0 and fe2 == 0x83 and fm2 == 0x275387 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x099c95 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x52f877af; op2val:0x41a75387; op3val:0x54099c95; valaddr_reg:x16; val_offset:936; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 936, x17, x15, 1312, x18)

inst_419:
// fs1 == 0 and fe1 == 0xa5 and fm1 == 0x7877af and fs2 == 0 and fe2 == 0x83 and fm2 == 0x275387 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x099c95 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x52f877af; op2val:0x41a75387; op3val:0x54099c95; valaddr_reg:x16; val_offset:948; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 948, x17, x15, 1320, x18)

inst_420:
// fs1 == 0 and fe1 == 0xa5 and fm1 == 0x7877af and fs2 == 0 and fe2 == 0x83 and fm2 == 0x275387 and fs3 == 0 and fe3 == 0xa8 and fm3 == 0x099c95 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x52f877af; op2val:0x41a75387; op3val:0x54099c95; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 1328, x18)

inst_421:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5d4e56 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x12385e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7cced1 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3edd4e56; op2val:0x4012385e; op3val:0x3f7cced1; valaddr_reg:x16; val_offset:972; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 972, x17, x15, 1336, x18)

inst_422:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5d4e56 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x12385e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7cced1 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3edd4e56; op2val:0x4012385e; op3val:0x3f7cced1; valaddr_reg:x16; val_offset:984; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 984, x17, x15, 1344, x18)

inst_423:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5d4e56 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x12385e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7cced1 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3edd4e56; op2val:0x4012385e; op3val:0x3f7cced1; valaddr_reg:x16; val_offset:996; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 996, x17, x15, 1352, x18)

inst_424:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5d4e56 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x12385e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7cced1 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3edd4e56; op2val:0x4012385e; op3val:0x3f7cced1; valaddr_reg:x16; val_offset:1008; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1008, x17, x15, 1360, x18)

inst_425:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5d4e56 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x12385e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7cced1 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3edd4e56; op2val:0x4012385e; op3val:0x3f7cced1; valaddr_reg:x16; val_offset:1020; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1020, x17, x15, 1368, x18)

inst_426:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x037907 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2d5d9a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3211b7 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e837907; op2val:0x402d5d9a; op3val:0x3f3211b7; valaddr_reg:x16; val_offset:1032; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1032, x17, x15, 1376, x18)

inst_427:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x037907 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2d5d9a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3211b7 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e837907; op2val:0x402d5d9a; op3val:0x3f3211b7; valaddr_reg:x16; val_offset:1044; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1044, x17, x15, 1384, x18)

inst_428:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x037907 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2d5d9a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3211b7 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e837907; op2val:0x402d5d9a; op3val:0x3f3211b7; valaddr_reg:x16; val_offset:1056; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1056, x17, x15, 1392, x18)

inst_429:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x037907 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2d5d9a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3211b7 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e837907; op2val:0x402d5d9a; op3val:0x3f3211b7; valaddr_reg:x16; val_offset:1068; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1068, x17, x15, 1400, x18)

inst_430:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x037907 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2d5d9a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3211b7 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e837907; op2val:0x402d5d9a; op3val:0x3f3211b7; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 1408, x18)

inst_431:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5a4259 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x60045a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3efdc5 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5a4259; op2val:0x3f60045a; op3val:0x3f3efdc5; valaddr_reg:x16; val_offset:1092; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1092, x17, x15, 1416, x18)

inst_432:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5a4259 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x60045a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3efdc5 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5a4259; op2val:0x3f60045a; op3val:0x3f3efdc5; valaddr_reg:x16; val_offset:1104; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1104, x17, x15, 1424, x18)

inst_433:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5a4259 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x60045a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3efdc5 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5a4259; op2val:0x3f60045a; op3val:0x3f3efdc5; valaddr_reg:x16; val_offset:1116; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1116, x17, x15, 1432, x18)

inst_434:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5a4259 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x60045a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3efdc5 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5a4259; op2val:0x3f60045a; op3val:0x3f3efdc5; valaddr_reg:x16; val_offset:1128; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1128, x17, x15, 1440, x18)

inst_435:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5a4259 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x60045a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3efdc5 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5a4259; op2val:0x3f60045a; op3val:0x3f3efdc5; valaddr_reg:x16; val_offset:1140; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1140, x17, x15, 1448, x18)

inst_436:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x36e7c5 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x254602 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6c2ace and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb6e7c5; op2val:0x40254602; op3val:0x3f6c2ace; valaddr_reg:x16; val_offset:1152; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1152, x17, x15, 1456, x18)

inst_437:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x36e7c5 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x254602 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6c2ace and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb6e7c5; op2val:0x40254602; op3val:0x3f6c2ace; valaddr_reg:x16; val_offset:1164; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1164, x17, x15, 1464, x18)

inst_438:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x36e7c5 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x254602 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6c2ace and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb6e7c5; op2val:0x40254602; op3val:0x3f6c2ace; valaddr_reg:x16; val_offset:1176; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1176, x17, x15, 1472, x18)

inst_439:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x36e7c5 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x254602 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6c2ace and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb6e7c5; op2val:0x40254602; op3val:0x3f6c2ace; valaddr_reg:x16; val_offset:1188; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1188, x17, x15, 1480, x18)

inst_440:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x36e7c5 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x254602 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6c2ace and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb6e7c5; op2val:0x40254602; op3val:0x3f6c2ace; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 1488, x18)

inst_441:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x6e9f63 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x526405 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x441bfb and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e6e9f63; op2val:0x3fd26405; op3val:0x3ec41bfb; valaddr_reg:x16; val_offset:1212; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1212, x17, x15, 1496, x18)

inst_442:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x6e9f63 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x526405 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x441bfb and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e6e9f63; op2val:0x3fd26405; op3val:0x3ec41bfb; valaddr_reg:x16; val_offset:1224; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1224, x17, x15, 1504, x18)

inst_443:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x6e9f63 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x526405 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x441bfb and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e6e9f63; op2val:0x3fd26405; op3val:0x3ec41bfb; valaddr_reg:x16; val_offset:1236; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1236, x17, x15, 1512, x18)

inst_444:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x6e9f63 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x526405 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x441bfb and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e6e9f63; op2val:0x3fd26405; op3val:0x3ec41bfb; valaddr_reg:x16; val_offset:1248; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1248, x17, x15, 1520, x18)

inst_445:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x6e9f63 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x526405 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x441bfb and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e6e9f63; op2val:0x3fd26405; op3val:0x3ec41bfb; valaddr_reg:x16; val_offset:1260; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1260, x17, x15, 1528, x18)

inst_446:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x055f97 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1b6c3a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x21f286 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f055f97; op2val:0x3f1b6c3a; op3val:0x3ea1f286; valaddr_reg:x16; val_offset:1272; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1272, x17, x15, 1536, x18)

inst_447:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x055f97 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1b6c3a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x21f286 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f055f97; op2val:0x3f1b6c3a; op3val:0x3ea1f286; valaddr_reg:x16; val_offset:1284; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1284, x17, x15, 1544, x18)

inst_448:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x055f97 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1b6c3a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x21f286 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f055f97; op2val:0x3f1b6c3a; op3val:0x3ea1f286; valaddr_reg:x16; val_offset:1296; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1296, x17, x15, 1552, x18)

inst_449:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x055f97 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1b6c3a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x21f286 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f055f97; op2val:0x3f1b6c3a; op3val:0x3ea1f286; valaddr_reg:x16; val_offset:1308; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1308, x17, x15, 1560, x18)

inst_450:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x055f97 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1b6c3a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x21f286 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f055f97; op2val:0x3f1b6c3a; op3val:0x3ea1f286; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 1568, x18)

inst_451:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x018c92 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1c2ca7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1e1084 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f018c92; op2val:0x3f9c2ca7; op3val:0x3f1e1084; valaddr_reg:x16; val_offset:1332; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1332, x17, x15, 1576, x18)

inst_452:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x018c92 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1c2ca7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1e1084 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f018c92; op2val:0x3f9c2ca7; op3val:0x3f1e1084; valaddr_reg:x16; val_offset:1344; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1344, x17, x15, 1584, x18)

inst_453:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x018c92 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1c2ca7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1e1084 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f018c92; op2val:0x3f9c2ca7; op3val:0x3f1e1084; valaddr_reg:x16; val_offset:1356; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1356, x17, x15, 1592, x18)

inst_454:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x018c92 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1c2ca7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1e1084 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f018c92; op2val:0x3f9c2ca7; op3val:0x3f1e1084; valaddr_reg:x16; val_offset:1368; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1368, x17, x15, 1600, x18)

inst_455:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x018c92 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1c2ca7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1e1084 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f018c92; op2val:0x3f9c2ca7; op3val:0x3f1e1084; valaddr_reg:x16; val_offset:1380; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1380, x17, x15, 1608, x18)

inst_456:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x05352f and fs2 == 0 and fe2 == 0x7b and fm2 == 0x3f01c2 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x46c732 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e85352f; op2val:0x3dbf01c2; op3val:0x3cc6c732; valaddr_reg:x16; val_offset:1392; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1392, x17, x15, 1616, x18)

inst_457:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x05352f and fs2 == 0 and fe2 == 0x7b and fm2 == 0x3f01c2 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x46c732 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e85352f; op2val:0x3dbf01c2; op3val:0x3cc6c732; valaddr_reg:x16; val_offset:1404; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1404, x17, x15, 1624, x18)

inst_458:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x05352f and fs2 == 0 and fe2 == 0x7b and fm2 == 0x3f01c2 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x46c732 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e85352f; op2val:0x3dbf01c2; op3val:0x3cc6c732; valaddr_reg:x16; val_offset:1416; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1416, x17, x15, 1632, x18)

inst_459:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x05352f and fs2 == 0 and fe2 == 0x7b and fm2 == 0x3f01c2 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x46c732 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e85352f; op2val:0x3dbf01c2; op3val:0x3cc6c732; valaddr_reg:x16; val_offset:1428; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1428, x17, x15, 1640, x18)

inst_460:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x05352f and fs2 == 0 and fe2 == 0x7b and fm2 == 0x3f01c2 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x46c732 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e85352f; op2val:0x3dbf01c2; op3val:0x3cc6c732; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 1648, x18)

inst_461:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0a9499 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3bee17 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4b76dd and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8a9499; op2val:0x403bee17; op3val:0x3f4b76dd; valaddr_reg:x16; val_offset:1452; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1452, x17, x15, 1656, x18)

inst_462:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0a9499 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3bee17 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4b76dd and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8a9499; op2val:0x403bee17; op3val:0x3f4b76dd; valaddr_reg:x16; val_offset:1464; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1464, x17, x15, 1664, x18)

inst_463:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0a9499 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3bee17 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4b76dd and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8a9499; op2val:0x403bee17; op3val:0x3f4b76dd; valaddr_reg:x16; val_offset:1476; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1476, x17, x15, 1672, x18)

inst_464:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0a9499 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3bee17 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4b76dd and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8a9499; op2val:0x403bee17; op3val:0x3f4b76dd; valaddr_reg:x16; val_offset:1488; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1488, x17, x15, 1680, x18)

inst_465:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0a9499 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3bee17 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4b76dd and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8a9499; op2val:0x403bee17; op3val:0x3f4b76dd; valaddr_reg:x16; val_offset:1500; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1500, x17, x15, 1688, x18)

inst_466:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6cf0d8 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x4b2414 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3c0460 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6cf0d8; op2val:0x3f4b2414; op3val:0x3f3c0460; valaddr_reg:x16; val_offset:1512; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1512, x17, x15, 1696, x18)

inst_467:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6cf0d8 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x4b2414 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3c0460 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6cf0d8; op2val:0x3f4b2414; op3val:0x3f3c0460; valaddr_reg:x16; val_offset:1524; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1524, x17, x15, 1704, x18)

inst_468:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6cf0d8 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x4b2414 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3c0460 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6cf0d8; op2val:0x3f4b2414; op3val:0x3f3c0460; valaddr_reg:x16; val_offset:1536; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1536, x17, x15, 1712, x18)

inst_469:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6cf0d8 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x4b2414 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3c0460 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6cf0d8; op2val:0x3f4b2414; op3val:0x3f3c0460; valaddr_reg:x16; val_offset:1548; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1548, x17, x15, 1720, x18)

inst_470:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6cf0d8 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x4b2414 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3c0460 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6cf0d8; op2val:0x3f4b2414; op3val:0x3f3c0460; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1728, x18)

inst_471:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x06c3ae and fs2 == 0 and fe2 == 0x80 and fm2 == 0x35d451 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3f703e and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e86c3ae; op2val:0x4035d451; op3val:0x3f3f703e; valaddr_reg:x16; val_offset:1572; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1572, x17, x15, 1736, x18)

inst_472:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x06c3ae and fs2 == 0 and fe2 == 0x80 and fm2 == 0x35d451 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3f703e and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e86c3ae; op2val:0x4035d451; op3val:0x3f3f703e; valaddr_reg:x16; val_offset:1584; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1584, x17, x15, 1744, x18)

inst_473:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x06c3ae and fs2 == 0 and fe2 == 0x80 and fm2 == 0x35d451 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3f703e and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e86c3ae; op2val:0x4035d451; op3val:0x3f3f703e; valaddr_reg:x16; val_offset:1596; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1596, x17, x15, 1752, x18)

inst_474:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x06c3ae and fs2 == 0 and fe2 == 0x80 and fm2 == 0x35d451 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3f703e and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e86c3ae; op2val:0x4035d451; op3val:0x3f3f703e; valaddr_reg:x16; val_offset:1608; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1608, x17, x15, 1760, x18)

inst_475:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x06c3ae and fs2 == 0 and fe2 == 0x80 and fm2 == 0x35d451 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3f703e and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e86c3ae; op2val:0x4035d451; op3val:0x3f3f703e; valaddr_reg:x16; val_offset:1620; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1620, x17, x15, 1768, x18)

inst_476:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2e704c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2f70d9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6f1752 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eae704c; op2val:0x402f70d9; op3val:0x3f6f1752; valaddr_reg:x16; val_offset:1632; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1632, x17, x15, 1776, x18)

inst_477:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2e704c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2f70d9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6f1752 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eae704c; op2val:0x402f70d9; op3val:0x3f6f1752; valaddr_reg:x16; val_offset:1644; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1644, x17, x15, 1784, x18)

inst_478:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2e704c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2f70d9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6f1752 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eae704c; op2val:0x402f70d9; op3val:0x3f6f1752; valaddr_reg:x16; val_offset:1656; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1656, x17, x15, 1792, x18)

inst_479:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2e704c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2f70d9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6f1752 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eae704c; op2val:0x402f70d9; op3val:0x3f6f1752; valaddr_reg:x16; val_offset:1668; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1668, x17, x15, 1800, x18)

inst_480:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2e704c and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2f70d9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6f1752 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eae704c; op2val:0x402f70d9; op3val:0x3f6f1752; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1808, x18)

inst_481:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7e7a94 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x6f6675 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6dfa4a and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3efe7a94; op2val:0x3f6f6675; op3val:0x3eedfa4a; valaddr_reg:x16; val_offset:1692; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1692, x17, x15, 1816, x18)

inst_482:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7e7a94 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x6f6675 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6dfa4a and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3efe7a94; op2val:0x3f6f6675; op3val:0x3eedfa4a; valaddr_reg:x16; val_offset:1704; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1704, x17, x15, 1824, x18)

inst_483:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7e7a94 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x6f6675 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6dfa4a and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3efe7a94; op2val:0x3f6f6675; op3val:0x3eedfa4a; valaddr_reg:x16; val_offset:1716; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1716, x17, x15, 1832, x18)

inst_484:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7e7a94 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x6f6675 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6dfa4a and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3efe7a94; op2val:0x3f6f6675; op3val:0x3eedfa4a; valaddr_reg:x16; val_offset:1728; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1728, x17, x15, 1840, x18)

inst_485:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7e7a94 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x6f6675 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6dfa4a and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3efe7a94; op2val:0x3f6f6675; op3val:0x3eedfa4a; valaddr_reg:x16; val_offset:1740; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1740, x17, x15, 1848, x18)

inst_486:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x4f285f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1f46ca and fs3 == 0 and fe3 == 0x7d and fm3 == 0x00e35c and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e4f285f; op2val:0x3f9f46ca; op3val:0x3e80e35c; valaddr_reg:x16; val_offset:1752; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1752, x17, x15, 1856, x18)

inst_487:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x4f285f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1f46ca and fs3 == 0 and fe3 == 0x7d and fm3 == 0x00e35c and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e4f285f; op2val:0x3f9f46ca; op3val:0x3e80e35c; valaddr_reg:x16; val_offset:1764; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1764, x17, x15, 1864, x18)

inst_488:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x4f285f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1f46ca and fs3 == 0 and fe3 == 0x7d and fm3 == 0x00e35c and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e4f285f; op2val:0x3f9f46ca; op3val:0x3e80e35c; valaddr_reg:x16; val_offset:1776; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1776, x17, x15, 1872, x18)

inst_489:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x4f285f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1f46ca and fs3 == 0 and fe3 == 0x7d and fm3 == 0x00e35c and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e4f285f; op2val:0x3f9f46ca; op3val:0x3e80e35c; valaddr_reg:x16; val_offset:1788; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1788, x17, x15, 1880, x18)

inst_490:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x4f285f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1f46ca and fs3 == 0 and fe3 == 0x7d and fm3 == 0x00e35c and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e4f285f; op2val:0x3f9f46ca; op3val:0x3e80e35c; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1888, x18)

inst_491:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x02bd9b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x79cd8b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7f26ca and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f02bd9b; op2val:0x3ff9cd8b; op3val:0x3f7f26ca; valaddr_reg:x16; val_offset:1812; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1812, x17, x15, 1896, x18)

inst_492:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x02bd9b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x79cd8b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7f26ca and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f02bd9b; op2val:0x3ff9cd8b; op3val:0x3f7f26ca; valaddr_reg:x16; val_offset:1824; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1824, x17, x15, 1904, x18)

inst_493:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x02bd9b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x79cd8b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7f26ca and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f02bd9b; op2val:0x3ff9cd8b; op3val:0x3f7f26ca; valaddr_reg:x16; val_offset:1836; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1836, x17, x15, 1912, x18)

inst_494:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x02bd9b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x79cd8b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7f26ca and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f02bd9b; op2val:0x3ff9cd8b; op3val:0x3f7f26ca; valaddr_reg:x16; val_offset:1848; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1848, x17, x15, 1920, x18)

inst_495:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x02bd9b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x79cd8b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7f26ca and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f02bd9b; op2val:0x3ff9cd8b; op3val:0x3f7f26ca; valaddr_reg:x16; val_offset:1860; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1860, x17, x15, 1928, x18)

inst_496:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3f5f3e and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5ab71a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x237ffc and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ebf5f3e; op2val:0x3f5ab71a; op3val:0x3ea37ffc; valaddr_reg:x16; val_offset:1872; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1872, x17, x15, 1936, x18)

inst_497:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3f5f3e and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5ab71a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x237ffc and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ebf5f3e; op2val:0x3f5ab71a; op3val:0x3ea37ffc; valaddr_reg:x16; val_offset:1884; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1884, x17, x15, 1944, x18)

inst_498:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3f5f3e and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5ab71a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x237ffc and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ebf5f3e; op2val:0x3f5ab71a; op3val:0x3ea37ffc; valaddr_reg:x16; val_offset:1896; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1896, x17, x15, 1952, x18)

inst_499:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3f5f3e and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5ab71a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x237ffc and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ebf5f3e; op2val:0x3f5ab71a; op3val:0x3ea37ffc; valaddr_reg:x16; val_offset:1908; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1908, x17, x15, 1960, x18)

inst_500:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3f5f3e and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5ab71a and fs3 == 0 and fe3 == 0x7d and fm3 == 0x237ffc and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ebf5f3e; op2val:0x3f5ab71a; op3val:0x3ea37ffc; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1968, x18)

inst_501:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6208b7 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x57d970 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3e954f and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee208b7; op2val:0x3f57d970; op3val:0x3ebe954f; valaddr_reg:x16; val_offset:1932; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1932, x17, x15, 1976, x18)

inst_502:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6208b7 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x57d970 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3e954f and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee208b7; op2val:0x3f57d970; op3val:0x3ebe954f; valaddr_reg:x16; val_offset:1944; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1944, x17, x15, 1984, x18)

inst_503:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6208b7 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x57d970 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3e954f and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee208b7; op2val:0x3f57d970; op3val:0x3ebe954f; valaddr_reg:x16; val_offset:1956; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1956, x17, x15, 1992, x18)

inst_504:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6208b7 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x57d970 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3e954f and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee208b7; op2val:0x3f57d970; op3val:0x3ebe954f; valaddr_reg:x16; val_offset:1968; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1968, x17, x15, 2000, x18)

inst_505:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6208b7 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x57d970 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3e954f and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee208b7; op2val:0x3f57d970; op3val:0x3ebe954f; valaddr_reg:x16; val_offset:1980; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1980, x17, x15, 2008, x18)

inst_506:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x652431 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x3bd335 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x281e7c and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f652431; op2val:0x3e3bd335; op3val:0x3e281e7c; valaddr_reg:x16; val_offset:1992; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1992, x17, x15, 2016, x18)

inst_507:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x652431 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x3bd335 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x281e7c and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f652431; op2val:0x3e3bd335; op3val:0x3e281e7c; valaddr_reg:x16; val_offset:2004; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 2004, x17, x15, 2024, x18)
RVTEST_SIGBASE(x15,signature_x15_3)

inst_508:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x652431 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x3bd335 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x281e7c and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f652431; op2val:0x3e3bd335; op3val:0x3e281e7c; valaddr_reg:x16; val_offset:2016; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 2016, x17, x15, 0, x18)

inst_509:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x652431 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x3bd335 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x281e7c and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f652431; op2val:0x3e3bd335; op3val:0x3e281e7c; valaddr_reg:x16; val_offset:2028; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 2028, x17, x15, 8, x18)
addi x16,x16,2040

inst_510:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x652431 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x3bd335 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x281e7c and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f652431; op2val:0x3e3bd335; op3val:0x3e281e7c; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 16, x18)

inst_511:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5ded9a and fs2 == 0 and fe2 == 0x7e and fm2 == 0x3cc8ed and fs3 == 0 and fe3 == 0x7e and fm3 == 0x23a8ac and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5ded9a; op2val:0x3f3cc8ed; op3val:0x3f23a8ac; valaddr_reg:x16; val_offset:12; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 12, x17, x15, 24, x18)

inst_512:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5ded9a and fs2 == 0 and fe2 == 0x7e and fm2 == 0x3cc8ed and fs3 == 0 and fe3 == 0x7e and fm3 == 0x23a8ac and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5ded9a; op2val:0x3f3cc8ed; op3val:0x3f23a8ac; valaddr_reg:x16; val_offset:24; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 24, x17, x15, 32, x18)

inst_513:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5ded9a and fs2 == 0 and fe2 == 0x7e and fm2 == 0x3cc8ed and fs3 == 0 and fe3 == 0x7e and fm3 == 0x23a8ac and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5ded9a; op2val:0x3f3cc8ed; op3val:0x3f23a8ac; valaddr_reg:x16; val_offset:36; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 36, x17, x15, 40, x18)

inst_514:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5ded9a and fs2 == 0 and fe2 == 0x7e and fm2 == 0x3cc8ed and fs3 == 0 and fe3 == 0x7e and fm3 == 0x23a8ac and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5ded9a; op2val:0x3f3cc8ed; op3val:0x3f23a8ac; valaddr_reg:x16; val_offset:48; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 48, x17, x15, 48, x18)

inst_515:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5ded9a and fs2 == 0 and fe2 == 0x7e and fm2 == 0x3cc8ed and fs3 == 0 and fe3 == 0x7e and fm3 == 0x23a8ac and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5ded9a; op2val:0x3f3cc8ed; op3val:0x3f23a8ac; valaddr_reg:x16; val_offset:60; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 60, x17, x15, 56, x18)

inst_516:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x45229a and fs2 == 0 and fe2 == 0x7f and fm2 == 0x210a9b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7805dd and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f45229a; op2val:0x3fa10a9b; op3val:0x3f7805dd; valaddr_reg:x16; val_offset:72; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 72, x17, x15, 64, x18)

inst_517:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x45229a and fs2 == 0 and fe2 == 0x7f and fm2 == 0x210a9b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7805dd and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f45229a; op2val:0x3fa10a9b; op3val:0x3f7805dd; valaddr_reg:x16; val_offset:84; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 84, x17, x15, 72, x18)

inst_518:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x45229a and fs2 == 0 and fe2 == 0x7f and fm2 == 0x210a9b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7805dd and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f45229a; op2val:0x3fa10a9b; op3val:0x3f7805dd; valaddr_reg:x16; val_offset:96; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 96, x17, x15, 80, x18)

inst_519:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x45229a and fs2 == 0 and fe2 == 0x7f and fm2 == 0x210a9b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7805dd and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f45229a; op2val:0x3fa10a9b; op3val:0x3f7805dd; valaddr_reg:x16; val_offset:108; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 108, x17, x15, 88, x18)

inst_520:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x45229a and fs2 == 0 and fe2 == 0x7f and fm2 == 0x210a9b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7805dd and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f45229a; op2val:0x3fa10a9b; op3val:0x3f7805dd; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 96, x18)

inst_521:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x225b89 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x779446 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1d045b and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ea25b89; op2val:0x3f779446; op3val:0x3e9d045b; valaddr_reg:x16; val_offset:132; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 132, x17, x15, 104, x18)

inst_522:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x225b89 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x779446 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1d045b and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ea25b89; op2val:0x3f779446; op3val:0x3e9d045b; valaddr_reg:x16; val_offset:144; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 144, x17, x15, 112, x18)

inst_523:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x225b89 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x779446 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1d045b and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ea25b89; op2val:0x3f779446; op3val:0x3e9d045b; valaddr_reg:x16; val_offset:156; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 156, x17, x15, 120, x18)

inst_524:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x225b89 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x779446 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1d045b and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ea25b89; op2val:0x3f779446; op3val:0x3e9d045b; valaddr_reg:x16; val_offset:168; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 168, x17, x15, 128, x18)

inst_525:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x225b89 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x779446 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1d045b and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ea25b89; op2val:0x3f779446; op3val:0x3e9d045b; valaddr_reg:x16; val_offset:180; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 180, x17, x15, 136, x18)

inst_526:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x54f5e3 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x03ebde and fs3 == 0 and fe3 == 0x7b and fm3 == 0x5b7c15 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed4f5e3; op2val:0x3e83ebde; op3val:0x3ddb7c15; valaddr_reg:x16; val_offset:192; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 192, x17, x15, 144, x18)

inst_527:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x54f5e3 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x03ebde and fs3 == 0 and fe3 == 0x7b and fm3 == 0x5b7c15 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed4f5e3; op2val:0x3e83ebde; op3val:0x3ddb7c15; valaddr_reg:x16; val_offset:204; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 204, x17, x15, 152, x18)

inst_528:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x54f5e3 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x03ebde and fs3 == 0 and fe3 == 0x7b and fm3 == 0x5b7c15 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed4f5e3; op2val:0x3e83ebde; op3val:0x3ddb7c15; valaddr_reg:x16; val_offset:216; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 216, x17, x15, 160, x18)

inst_529:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x54f5e3 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x03ebde and fs3 == 0 and fe3 == 0x7b and fm3 == 0x5b7c15 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed4f5e3; op2val:0x3e83ebde; op3val:0x3ddb7c15; valaddr_reg:x16; val_offset:228; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 228, x17, x15, 168, x18)

inst_530:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x54f5e3 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x03ebde and fs3 == 0 and fe3 == 0x7b and fm3 == 0x5b7c15 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed4f5e3; op2val:0x3e83ebde; op3val:0x3ddb7c15; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 176, x18)

inst_531:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x480297 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x63847b and fs3 == 0 and fe3 == 0x7c and fm3 == 0x31c1ce and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e480297; op2val:0x3f63847b; op3val:0x3e31c1ce; valaddr_reg:x16; val_offset:252; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 252, x17, x15, 184, x18)

inst_532:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x480297 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x63847b and fs3 == 0 and fe3 == 0x7c and fm3 == 0x31c1ce and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e480297; op2val:0x3f63847b; op3val:0x3e31c1ce; valaddr_reg:x16; val_offset:264; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 264, x17, x15, 192, x18)

inst_533:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x480297 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x63847b and fs3 == 0 and fe3 == 0x7c and fm3 == 0x31c1ce and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e480297; op2val:0x3f63847b; op3val:0x3e31c1ce; valaddr_reg:x16; val_offset:276; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 276, x17, x15, 200, x18)

inst_534:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x480297 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x63847b and fs3 == 0 and fe3 == 0x7c and fm3 == 0x31c1ce and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e480297; op2val:0x3f63847b; op3val:0x3e31c1ce; valaddr_reg:x16; val_offset:288; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 288, x17, x15, 208, x18)

inst_535:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x480297 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x63847b and fs3 == 0 and fe3 == 0x7c and fm3 == 0x31c1ce and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e480297; op2val:0x3f63847b; op3val:0x3e31c1ce; valaddr_reg:x16; val_offset:300; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 300, x17, x15, 216, x18)

inst_536:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7dc313 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x2a83ba and fs3 == 0 and fe3 == 0x7c and fm3 == 0x29061e and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3efdc313; op2val:0x3eaa83ba; op3val:0x3e29061e; valaddr_reg:x16; val_offset:312; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 312, x17, x15, 224, x18)

inst_537:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7dc313 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x2a83ba and fs3 == 0 and fe3 == 0x7c and fm3 == 0x29061e and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3efdc313; op2val:0x3eaa83ba; op3val:0x3e29061e; valaddr_reg:x16; val_offset:324; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 324, x17, x15, 232, x18)

inst_538:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7dc313 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x2a83ba and fs3 == 0 and fe3 == 0x7c and fm3 == 0x29061e and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3efdc313; op2val:0x3eaa83ba; op3val:0x3e29061e; valaddr_reg:x16; val_offset:336; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 336, x17, x15, 240, x18)

inst_539:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7dc313 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x2a83ba and fs3 == 0 and fe3 == 0x7c and fm3 == 0x29061e and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3efdc313; op2val:0x3eaa83ba; op3val:0x3e29061e; valaddr_reg:x16; val_offset:348; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 348, x17, x15, 248, x18)

inst_540:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7dc313 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x2a83ba and fs3 == 0 and fe3 == 0x7c and fm3 == 0x29061e and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3efdc313; op2val:0x3eaa83ba; op3val:0x3e29061e; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 256, x18)

inst_541:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5c5656 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0da6b6 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x73d615 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5c5656; op2val:0x3f0da6b6; op3val:0x3ef3d615; valaddr_reg:x16; val_offset:372; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 372, x17, x15, 264, x18)

inst_542:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5c5656 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0da6b6 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x73d615 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5c5656; op2val:0x3f0da6b6; op3val:0x3ef3d615; valaddr_reg:x16; val_offset:384; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 384, x17, x15, 272, x18)

inst_543:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5c5656 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0da6b6 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x73d615 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5c5656; op2val:0x3f0da6b6; op3val:0x3ef3d615; valaddr_reg:x16; val_offset:396; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 396, x17, x15, 280, x18)

inst_544:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5c5656 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0da6b6 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x73d615 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5c5656; op2val:0x3f0da6b6; op3val:0x3ef3d615; valaddr_reg:x16; val_offset:408; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 408, x17, x15, 288, x18)

inst_545:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5c5656 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0da6b6 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x73d615 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5c5656; op2val:0x3f0da6b6; op3val:0x3ef3d615; valaddr_reg:x16; val_offset:420; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 420, x17, x15, 296, x18)

inst_546:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x084488 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x349f09 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4049af and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e884488; op2val:0x3f349f09; op3val:0x3e4049af; valaddr_reg:x16; val_offset:432; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 432, x17, x15, 304, x18)

inst_547:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x084488 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x349f09 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4049af and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e884488; op2val:0x3f349f09; op3val:0x3e4049af; valaddr_reg:x16; val_offset:444; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 444, x17, x15, 312, x18)

inst_548:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x084488 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x349f09 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4049af and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e884488; op2val:0x3f349f09; op3val:0x3e4049af; valaddr_reg:x16; val_offset:456; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 456, x17, x15, 320, x18)

inst_549:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x084488 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x349f09 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4049af and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e884488; op2val:0x3f349f09; op3val:0x3e4049af; valaddr_reg:x16; val_offset:468; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 468, x17, x15, 328, x18)

inst_550:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x084488 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x349f09 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4049af and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e884488; op2val:0x3f349f09; op3val:0x3e4049af; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 336, x18)

inst_551:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x5d4d53 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x5cb8f0 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3ece52 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ddd4d53; op2val:0x405cb8f0; op3val:0x3ebece52; valaddr_reg:x16; val_offset:492; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 492, x17, x15, 344, x18)

inst_552:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x5d4d53 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x5cb8f0 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3ece52 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ddd4d53; op2val:0x405cb8f0; op3val:0x3ebece52; valaddr_reg:x16; val_offset:504; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 504, x17, x15, 352, x18)

inst_553:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x5d4d53 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x5cb8f0 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3ece52 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ddd4d53; op2val:0x405cb8f0; op3val:0x3ebece52; valaddr_reg:x16; val_offset:516; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 516, x17, x15, 360, x18)

inst_554:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x5d4d53 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x5cb8f0 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3ece52 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ddd4d53; op2val:0x405cb8f0; op3val:0x3ebece52; valaddr_reg:x16; val_offset:528; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 528, x17, x15, 368, x18)

inst_555:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x5d4d53 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x5cb8f0 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3ece52 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ddd4d53; op2val:0x405cb8f0; op3val:0x3ebece52; valaddr_reg:x16; val_offset:540; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 540, x17, x15, 376, x18)

inst_556:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x74ca4e and fs2 == 0 and fe2 == 0x7c and fm2 == 0x30631c and fs3 == 0 and fe3 == 0x7c and fm3 == 0x28a9db and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f74ca4e; op2val:0x3e30631c; op3val:0x3e28a9db; valaddr_reg:x16; val_offset:552; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 552, x17, x15, 384, x18)

inst_557:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x74ca4e and fs2 == 0 and fe2 == 0x7c and fm2 == 0x30631c and fs3 == 0 and fe3 == 0x7c and fm3 == 0x28a9db and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f74ca4e; op2val:0x3e30631c; op3val:0x3e28a9db; valaddr_reg:x16; val_offset:564; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 564, x17, x15, 392, x18)

inst_558:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x74ca4e and fs2 == 0 and fe2 == 0x7c and fm2 == 0x30631c and fs3 == 0 and fe3 == 0x7c and fm3 == 0x28a9db and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f74ca4e; op2val:0x3e30631c; op3val:0x3e28a9db; valaddr_reg:x16; val_offset:576; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 576, x17, x15, 400, x18)

inst_559:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x74ca4e and fs2 == 0 and fe2 == 0x7c and fm2 == 0x30631c and fs3 == 0 and fe3 == 0x7c and fm3 == 0x28a9db and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f74ca4e; op2val:0x3e30631c; op3val:0x3e28a9db; valaddr_reg:x16; val_offset:588; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 588, x17, x15, 408, x18)

inst_560:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x74ca4e and fs2 == 0 and fe2 == 0x7c and fm2 == 0x30631c and fs3 == 0 and fe3 == 0x7c and fm3 == 0x28a9db and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f74ca4e; op2val:0x3e30631c; op3val:0x3e28a9db; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 416, x18)

inst_561:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0d3b74 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x258e8f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x36abf0 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8d3b74; op2val:0x3fa58e8f; op3val:0x3eb6abf0; valaddr_reg:x16; val_offset:612; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 612, x17, x15, 424, x18)

inst_562:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0d3b74 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x258e8f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x36abf0 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8d3b74; op2val:0x3fa58e8f; op3val:0x3eb6abf0; valaddr_reg:x16; val_offset:624; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 624, x17, x15, 432, x18)

inst_563:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0d3b74 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x258e8f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x36abf0 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8d3b74; op2val:0x3fa58e8f; op3val:0x3eb6abf0; valaddr_reg:x16; val_offset:636; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 636, x17, x15, 440, x18)

inst_564:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0d3b74 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x258e8f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x36abf0 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8d3b74; op2val:0x3fa58e8f; op3val:0x3eb6abf0; valaddr_reg:x16; val_offset:648; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 648, x17, x15, 448, x18)

inst_565:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0d3b74 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x258e8f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x36abf0 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8d3b74; op2val:0x3fa58e8f; op3val:0x3eb6abf0; valaddr_reg:x16; val_offset:660; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 660, x17, x15, 456, x18)

inst_566:
// fs1 == 0 and fe1 == 0x78 and fm1 == 0x7a32dc and fs2 == 0 and fe2 == 0x84 and fm2 == 0x5ec93d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x59bcc8 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3c7a32dc; op2val:0x425ec93d; op3val:0x3f59bcc8; valaddr_reg:x16; val_offset:672; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 672, x17, x15, 464, x18)

inst_567:
// fs1 == 0 and fe1 == 0x78 and fm1 == 0x7a32dc and fs2 == 0 and fe2 == 0x84 and fm2 == 0x5ec93d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x59bcc8 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3c7a32dc; op2val:0x425ec93d; op3val:0x3f59bcc8; valaddr_reg:x16; val_offset:684; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 684, x17, x15, 472, x18)

inst_568:
// fs1 == 0 and fe1 == 0x78 and fm1 == 0x7a32dc and fs2 == 0 and fe2 == 0x84 and fm2 == 0x5ec93d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x59bcc8 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3c7a32dc; op2val:0x425ec93d; op3val:0x3f59bcc8; valaddr_reg:x16; val_offset:696; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 696, x17, x15, 480, x18)

inst_569:
// fs1 == 0 and fe1 == 0x78 and fm1 == 0x7a32dc and fs2 == 0 and fe2 == 0x84 and fm2 == 0x5ec93d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x59bcc8 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3c7a32dc; op2val:0x425ec93d; op3val:0x3f59bcc8; valaddr_reg:x16; val_offset:708; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 708, x17, x15, 488, x18)

inst_570:
// fs1 == 0 and fe1 == 0x78 and fm1 == 0x7a32dc and fs2 == 0 and fe2 == 0x84 and fm2 == 0x5ec93d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x59bcc8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3c7a32dc; op2val:0x425ec93d; op3val:0x3f59bcc8; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 496, x18)

inst_571:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1c48a6 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0d4a0b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2c826e and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1c48a6; op2val:0x3f8d4a0b; op3val:0x3f2c826e; valaddr_reg:x16; val_offset:732; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 732, x17, x15, 504, x18)

inst_572:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1c48a6 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0d4a0b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2c826e and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1c48a6; op2val:0x3f8d4a0b; op3val:0x3f2c826e; valaddr_reg:x16; val_offset:744; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 744, x17, x15, 512, x18)

inst_573:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1c48a6 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0d4a0b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2c826e and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1c48a6; op2val:0x3f8d4a0b; op3val:0x3f2c826e; valaddr_reg:x16; val_offset:756; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 756, x17, x15, 520, x18)

inst_574:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1c48a6 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0d4a0b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2c826e and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1c48a6; op2val:0x3f8d4a0b; op3val:0x3f2c826e; valaddr_reg:x16; val_offset:768; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 768, x17, x15, 528, x18)

inst_575:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1c48a6 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0d4a0b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2c826e and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1c48a6; op2val:0x3f8d4a0b; op3val:0x3f2c826e; valaddr_reg:x16; val_offset:780; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 780, x17, x15, 536, x18)

inst_576:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x11694e and fs2 == 0 and fe2 == 0x7d and fm2 == 0x59f8e9 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x779f4c and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e91694e; op2val:0x3ed9f8e9; op3val:0x3df79f4c; valaddr_reg:x16; val_offset:792; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 792, x17, x15, 544, x18)

inst_577:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x11694e and fs2 == 0 and fe2 == 0x7d and fm2 == 0x59f8e9 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x779f4c and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e91694e; op2val:0x3ed9f8e9; op3val:0x3df79f4c; valaddr_reg:x16; val_offset:804; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 804, x17, x15, 552, x18)

inst_578:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x11694e and fs2 == 0 and fe2 == 0x7d and fm2 == 0x59f8e9 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x779f4c and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e91694e; op2val:0x3ed9f8e9; op3val:0x3df79f4c; valaddr_reg:x16; val_offset:816; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 816, x17, x15, 560, x18)

inst_579:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x11694e and fs2 == 0 and fe2 == 0x7d and fm2 == 0x59f8e9 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x779f4c and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e91694e; op2val:0x3ed9f8e9; op3val:0x3df79f4c; valaddr_reg:x16; val_offset:828; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 828, x17, x15, 568, x18)

inst_580:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x11694e and fs2 == 0 and fe2 == 0x7d and fm2 == 0x59f8e9 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x779f4c and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e91694e; op2val:0x3ed9f8e9; op3val:0x3df79f4c; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 576, x18)

inst_581:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x7f7246 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2fb7b6 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2f566f and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e7f7246; op2val:0x3fafb7b6; op3val:0x3eaf566f; valaddr_reg:x16; val_offset:852; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 852, x17, x15, 584, x18)

inst_582:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x7f7246 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2fb7b6 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2f566f and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e7f7246; op2val:0x3fafb7b6; op3val:0x3eaf566f; valaddr_reg:x16; val_offset:864; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 864, x17, x15, 592, x18)

inst_583:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x7f7246 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2fb7b6 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2f566f and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e7f7246; op2val:0x3fafb7b6; op3val:0x3eaf566f; valaddr_reg:x16; val_offset:876; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 876, x17, x15, 600, x18)

inst_584:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x7f7246 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2fb7b6 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2f566f and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e7f7246; op2val:0x3fafb7b6; op3val:0x3eaf566f; valaddr_reg:x16; val_offset:888; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 888, x17, x15, 608, x18)

inst_585:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x7f7246 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2fb7b6 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2f566f and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e7f7246; op2val:0x3fafb7b6; op3val:0x3eaf566f; valaddr_reg:x16; val_offset:900; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 900, x17, x15, 616, x18)

inst_586:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x542e6d and fs2 == 0 and fe2 == 0x7f and fm2 == 0x116b0f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x710e11 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed42e6d; op2val:0x3f916b0f; op3val:0x3ef10e11; valaddr_reg:x16; val_offset:912; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 912, x17, x15, 624, x18)

inst_587:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x542e6d and fs2 == 0 and fe2 == 0x7f and fm2 == 0x116b0f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x710e11 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed42e6d; op2val:0x3f916b0f; op3val:0x3ef10e11; valaddr_reg:x16; val_offset:924; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 924, x17, x15, 632, x18)

inst_588:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x542e6d and fs2 == 0 and fe2 == 0x7f and fm2 == 0x116b0f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x710e11 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed42e6d; op2val:0x3f916b0f; op3val:0x3ef10e11; valaddr_reg:x16; val_offset:936; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 936, x17, x15, 640, x18)

inst_589:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x542e6d and fs2 == 0 and fe2 == 0x7f and fm2 == 0x116b0f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x710e11 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed42e6d; op2val:0x3f916b0f; op3val:0x3ef10e11; valaddr_reg:x16; val_offset:948; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 948, x17, x15, 648, x18)

inst_590:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x542e6d and fs2 == 0 and fe2 == 0x7f and fm2 == 0x116b0f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x710e11 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed42e6d; op2val:0x3f916b0f; op3val:0x3ef10e11; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 656, x18)

inst_591:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x321d07 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0d245f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x446697 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f321d07; op2val:0x3f8d245f; op3val:0x3f446697; valaddr_reg:x16; val_offset:972; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 972, x17, x15, 664, x18)

inst_592:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x321d07 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0d245f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x446697 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f321d07; op2val:0x3f8d245f; op3val:0x3f446697; valaddr_reg:x16; val_offset:984; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 984, x17, x15, 672, x18)

inst_593:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x321d07 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0d245f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x446697 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f321d07; op2val:0x3f8d245f; op3val:0x3f446697; valaddr_reg:x16; val_offset:996; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 996, x17, x15, 680, x18)

inst_594:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x321d07 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0d245f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x446697 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f321d07; op2val:0x3f8d245f; op3val:0x3f446697; valaddr_reg:x16; val_offset:1008; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1008, x17, x15, 688, x18)

inst_595:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x321d07 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0d245f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x446697 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f321d07; op2val:0x3f8d245f; op3val:0x3f446697; valaddr_reg:x16; val_offset:1020; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1020, x17, x15, 696, x18)

inst_596:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x755550 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x028f91 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7a3dd2 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f755550; op2val:0x3f828f91; op3val:0x3f7a3dd2; valaddr_reg:x16; val_offset:1032; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1032, x17, x15, 704, x18)

inst_597:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x755550 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x028f91 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7a3dd2 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f755550; op2val:0x3f828f91; op3val:0x3f7a3dd2; valaddr_reg:x16; val_offset:1044; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1044, x17, x15, 712, x18)

inst_598:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x755550 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x028f91 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7a3dd2 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f755550; op2val:0x3f828f91; op3val:0x3f7a3dd2; valaddr_reg:x16; val_offset:1056; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1056, x17, x15, 720, x18)

inst_599:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x755550 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x028f91 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7a3dd2 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f755550; op2val:0x3f828f91; op3val:0x3f7a3dd2; valaddr_reg:x16; val_offset:1068; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1068, x17, x15, 728, x18)

inst_600:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x755550 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x028f91 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7a3dd2 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f755550; op2val:0x3f828f91; op3val:0x3f7a3dd2; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 736, x18)

inst_601:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6905eb and fs2 == 0 and fe2 == 0x7e and fm2 == 0x28e209 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x19b9a2 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6905eb; op2val:0x3f28e209; op3val:0x3f19b9a2; valaddr_reg:x16; val_offset:1092; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1092, x17, x15, 744, x18)

inst_602:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6905eb and fs2 == 0 and fe2 == 0x7e and fm2 == 0x28e209 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x19b9a2 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6905eb; op2val:0x3f28e209; op3val:0x3f19b9a2; valaddr_reg:x16; val_offset:1104; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1104, x17, x15, 752, x18)

inst_603:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6905eb and fs2 == 0 and fe2 == 0x7e and fm2 == 0x28e209 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x19b9a2 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6905eb; op2val:0x3f28e209; op3val:0x3f19b9a2; valaddr_reg:x16; val_offset:1116; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1116, x17, x15, 760, x18)

inst_604:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6905eb and fs2 == 0 and fe2 == 0x7e and fm2 == 0x28e209 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x19b9a2 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6905eb; op2val:0x3f28e209; op3val:0x3f19b9a2; valaddr_reg:x16; val_offset:1128; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1128, x17, x15, 768, x18)

inst_605:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6905eb and fs2 == 0 and fe2 == 0x7e and fm2 == 0x28e209 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x19b9a2 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6905eb; op2val:0x3f28e209; op3val:0x3f19b9a2; valaddr_reg:x16; val_offset:1140; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1140, x17, x15, 776, x18)

inst_606:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7ebb8f and fs2 == 0 and fe2 == 0x7e and fm2 == 0x3d4f5c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3c5f70 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7ebb8f; op2val:0x3f3d4f5c; op3val:0x3f3c5f70; valaddr_reg:x16; val_offset:1152; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1152, x17, x15, 784, x18)

inst_607:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7ebb8f and fs2 == 0 and fe2 == 0x7e and fm2 == 0x3d4f5c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3c5f70 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7ebb8f; op2val:0x3f3d4f5c; op3val:0x3f3c5f70; valaddr_reg:x16; val_offset:1164; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1164, x17, x15, 792, x18)

inst_608:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7ebb8f and fs2 == 0 and fe2 == 0x7e and fm2 == 0x3d4f5c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3c5f70 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7ebb8f; op2val:0x3f3d4f5c; op3val:0x3f3c5f70; valaddr_reg:x16; val_offset:1176; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1176, x17, x15, 800, x18)

inst_609:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7ebb8f and fs2 == 0 and fe2 == 0x7e and fm2 == 0x3d4f5c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3c5f70 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7ebb8f; op2val:0x3f3d4f5c; op3val:0x3f3c5f70; valaddr_reg:x16; val_offset:1188; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1188, x17, x15, 808, x18)

inst_610:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7ebb8f and fs2 == 0 and fe2 == 0x7e and fm2 == 0x3d4f5c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3c5f70 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7ebb8f; op2val:0x3f3d4f5c; op3val:0x3f3c5f70; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 816, x18)

inst_611:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4c8c92 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1eadd2 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7d934a and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4c8c92; op2val:0x3f1eadd2; op3val:0x3efd934a; valaddr_reg:x16; val_offset:1212; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1212, x17, x15, 824, x18)

inst_612:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4c8c92 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1eadd2 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7d934a and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4c8c92; op2val:0x3f1eadd2; op3val:0x3efd934a; valaddr_reg:x16; val_offset:1224; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1224, x17, x15, 832, x18)

inst_613:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4c8c92 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1eadd2 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7d934a and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4c8c92; op2val:0x3f1eadd2; op3val:0x3efd934a; valaddr_reg:x16; val_offset:1236; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1236, x17, x15, 840, x18)

inst_614:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4c8c92 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1eadd2 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7d934a and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4c8c92; op2val:0x3f1eadd2; op3val:0x3efd934a; valaddr_reg:x16; val_offset:1248; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1248, x17, x15, 848, x18)

inst_615:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4c8c92 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1eadd2 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7d934a and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4c8c92; op2val:0x3f1eadd2; op3val:0x3efd934a; valaddr_reg:x16; val_offset:1260; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1260, x17, x15, 856, x18)

inst_616:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x067dc1 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x724c19 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7e95b7 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f067dc1; op2val:0x3f724c19; op3val:0x3efe95b7; valaddr_reg:x16; val_offset:1272; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1272, x17, x15, 864, x18)

inst_617:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x067dc1 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x724c19 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7e95b7 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f067dc1; op2val:0x3f724c19; op3val:0x3efe95b7; valaddr_reg:x16; val_offset:1284; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1284, x17, x15, 872, x18)

inst_618:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x067dc1 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x724c19 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7e95b7 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f067dc1; op2val:0x3f724c19; op3val:0x3efe95b7; valaddr_reg:x16; val_offset:1296; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1296, x17, x15, 880, x18)

inst_619:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x067dc1 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x724c19 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7e95b7 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f067dc1; op2val:0x3f724c19; op3val:0x3efe95b7; valaddr_reg:x16; val_offset:1308; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1308, x17, x15, 888, x18)

inst_620:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x067dc1 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x724c19 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7e95b7 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f067dc1; op2val:0x3f724c19; op3val:0x3efe95b7; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 896, x18)

inst_621:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7fb9f2 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1e7915 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1e4db7 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7fb9f2; op2val:0x3f1e7915; op3val:0x3f1e4db7; valaddr_reg:x16; val_offset:1332; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1332, x17, x15, 904, x18)

inst_622:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7fb9f2 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1e7915 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1e4db7 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7fb9f2; op2val:0x3f1e7915; op3val:0x3f1e4db7; valaddr_reg:x16; val_offset:1344; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1344, x17, x15, 912, x18)

inst_623:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7fb9f2 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1e7915 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1e4db7 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7fb9f2; op2val:0x3f1e7915; op3val:0x3f1e4db7; valaddr_reg:x16; val_offset:1356; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1356, x17, x15, 920, x18)

inst_624:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7fb9f2 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1e7915 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1e4db7 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7fb9f2; op2val:0x3f1e7915; op3val:0x3f1e4db7; valaddr_reg:x16; val_offset:1368; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1368, x17, x15, 928, x18)

inst_625:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7fb9f2 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1e7915 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1e4db7 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7fb9f2; op2val:0x3f1e7915; op3val:0x3f1e4db7; valaddr_reg:x16; val_offset:1380; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1380, x17, x15, 936, x18)

inst_626:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x30c177 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x6e8f75 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x24b6ea and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f30c177; op2val:0x3f6e8f75; op3val:0x3f24b6ea; valaddr_reg:x16; val_offset:1392; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1392, x17, x15, 944, x18)

inst_627:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x30c177 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x6e8f75 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x24b6ea and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f30c177; op2val:0x3f6e8f75; op3val:0x3f24b6ea; valaddr_reg:x16; val_offset:1404; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1404, x17, x15, 952, x18)

inst_628:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x30c177 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x6e8f75 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x24b6ea and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f30c177; op2val:0x3f6e8f75; op3val:0x3f24b6ea; valaddr_reg:x16; val_offset:1416; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1416, x17, x15, 960, x18)

inst_629:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x30c177 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x6e8f75 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x24b6ea and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f30c177; op2val:0x3f6e8f75; op3val:0x3f24b6ea; valaddr_reg:x16; val_offset:1428; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1428, x17, x15, 968, x18)

inst_630:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x30c177 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x6e8f75 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x24b6ea and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f30c177; op2val:0x3f6e8f75; op3val:0x3f24b6ea; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 976, x18)

inst_631:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x416bf4 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x3a2083 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x0ca100 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f416bf4; op2val:0x3d3a2083; op3val:0x3d0ca100; valaddr_reg:x16; val_offset:1452; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1452, x17, x15, 984, x18)

inst_632:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x416bf4 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x3a2083 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x0ca100 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f416bf4; op2val:0x3d3a2083; op3val:0x3d0ca100; valaddr_reg:x16; val_offset:1464; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1464, x17, x15, 992, x18)

inst_633:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x416bf4 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x3a2083 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x0ca100 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f416bf4; op2val:0x3d3a2083; op3val:0x3d0ca100; valaddr_reg:x16; val_offset:1476; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1476, x17, x15, 1000, x18)

inst_634:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x416bf4 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x3a2083 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x0ca100 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f416bf4; op2val:0x3d3a2083; op3val:0x3d0ca100; valaddr_reg:x16; val_offset:1488; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1488, x17, x15, 1008, x18)

inst_635:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x416bf4 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x3a2083 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x0ca100 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f416bf4; op2val:0x3d3a2083; op3val:0x3d0ca100; valaddr_reg:x16; val_offset:1500; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1500, x17, x15, 1016, x18)

inst_636:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x6045bc and fs2 == 0 and fe2 == 0x83 and fm2 == 0x045a39 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x67e5ff and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ce045bc; op2val:0x41845a39; op3val:0x3ee7e5ff; valaddr_reg:x16; val_offset:1512; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1512, x17, x15, 1024, x18)

inst_637:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x6045bc and fs2 == 0 and fe2 == 0x83 and fm2 == 0x045a39 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x67e5ff and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ce045bc; op2val:0x41845a39; op3val:0x3ee7e5ff; valaddr_reg:x16; val_offset:1524; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1524, x17, x15, 1032, x18)

inst_638:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x6045bc and fs2 == 0 and fe2 == 0x83 and fm2 == 0x045a39 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x67e5ff and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ce045bc; op2val:0x41845a39; op3val:0x3ee7e5ff; valaddr_reg:x16; val_offset:1536; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1536, x17, x15, 1040, x18)

inst_639:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x6045bc and fs2 == 0 and fe2 == 0x83 and fm2 == 0x045a39 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x67e5ff and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ce045bc; op2val:0x41845a39; op3val:0x3ee7e5ff; valaddr_reg:x16; val_offset:1548; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1548, x17, x15, 1048, x18)

inst_640:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x6045bc and fs2 == 0 and fe2 == 0x83 and fm2 == 0x045a39 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x67e5ff and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ce045bc; op2val:0x41845a39; op3val:0x3ee7e5ff; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1056, x18)

inst_641:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3c9c1a and fs2 == 0 and fe2 == 0x7a and fm2 == 0x5472a0 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x1c85b9 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3c9c1a; op2val:0x3d5472a0; op3val:0x3d1c85b9; valaddr_reg:x16; val_offset:1572; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1572, x17, x15, 1064, x18)

inst_642:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3c9c1a and fs2 == 0 and fe2 == 0x7a and fm2 == 0x5472a0 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x1c85b9 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3c9c1a; op2val:0x3d5472a0; op3val:0x3d1c85b9; valaddr_reg:x16; val_offset:1584; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1584, x17, x15, 1072, x18)

inst_643:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3c9c1a and fs2 == 0 and fe2 == 0x7a and fm2 == 0x5472a0 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x1c85b9 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3c9c1a; op2val:0x3d5472a0; op3val:0x3d1c85b9; valaddr_reg:x16; val_offset:1596; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1596, x17, x15, 1080, x18)

inst_644:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3c9c1a and fs2 == 0 and fe2 == 0x7a and fm2 == 0x5472a0 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x1c85b9 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3c9c1a; op2val:0x3d5472a0; op3val:0x3d1c85b9; valaddr_reg:x16; val_offset:1608; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1608, x17, x15, 1088, x18)

inst_645:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3c9c1a and fs2 == 0 and fe2 == 0x7a and fm2 == 0x5472a0 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x1c85b9 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3c9c1a; op2val:0x3d5472a0; op3val:0x3d1c85b9; valaddr_reg:x16; val_offset:1620; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1620, x17, x15, 1096, x18)

inst_646:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x57abeb and fs2 == 0 and fe2 == 0x7e and fm2 == 0x28659f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0dde70 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f57abeb; op2val:0x3f28659f; op3val:0x3f0dde70; valaddr_reg:x16; val_offset:1632; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1632, x17, x15, 1104, x18)

inst_647:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x57abeb and fs2 == 0 and fe2 == 0x7e and fm2 == 0x28659f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0dde70 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f57abeb; op2val:0x3f28659f; op3val:0x3f0dde70; valaddr_reg:x16; val_offset:1644; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1644, x17, x15, 1112, x18)

inst_648:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x57abeb and fs2 == 0 and fe2 == 0x7e and fm2 == 0x28659f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0dde70 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f57abeb; op2val:0x3f28659f; op3val:0x3f0dde70; valaddr_reg:x16; val_offset:1656; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1656, x17, x15, 1120, x18)

inst_649:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x57abeb and fs2 == 0 and fe2 == 0x7e and fm2 == 0x28659f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0dde70 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f57abeb; op2val:0x3f28659f; op3val:0x3f0dde70; valaddr_reg:x16; val_offset:1668; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1668, x17, x15, 1128, x18)

inst_650:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x57abeb and fs2 == 0 and fe2 == 0x7e and fm2 == 0x28659f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0dde70 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f57abeb; op2val:0x3f28659f; op3val:0x3f0dde70; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1136, x18)

inst_651:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x34fa1e and fs2 == 0 and fe2 == 0x7e and fm2 == 0x43bea4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0a614a and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f34fa1e; op2val:0x3f43bea4; op3val:0x3f0a614a; valaddr_reg:x16; val_offset:1692; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1692, x17, x15, 1144, x18)

inst_652:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x34fa1e and fs2 == 0 and fe2 == 0x7e and fm2 == 0x43bea4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0a614a and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f34fa1e; op2val:0x3f43bea4; op3val:0x3f0a614a; valaddr_reg:x16; val_offset:1704; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1704, x17, x15, 1152, x18)

inst_653:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x34fa1e and fs2 == 0 and fe2 == 0x7e and fm2 == 0x43bea4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0a614a and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f34fa1e; op2val:0x3f43bea4; op3val:0x3f0a614a; valaddr_reg:x16; val_offset:1716; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1716, x17, x15, 1160, x18)

inst_654:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x34fa1e and fs2 == 0 and fe2 == 0x7e and fm2 == 0x43bea4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0a614a and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f34fa1e; op2val:0x3f43bea4; op3val:0x3f0a614a; valaddr_reg:x16; val_offset:1728; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1728, x17, x15, 1168, x18)

inst_655:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x34fa1e and fs2 == 0 and fe2 == 0x7e and fm2 == 0x43bea4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0a614a and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f34fa1e; op2val:0x3f43bea4; op3val:0x3f0a614a; valaddr_reg:x16; val_offset:1740; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1740, x17, x15, 1176, x18)

inst_656:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x37d338 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x071495 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x41fe55 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f37d338; op2val:0x3f871495; op3val:0x3f41fe55; valaddr_reg:x16; val_offset:1752; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1752, x17, x15, 1184, x18)

inst_657:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x37d338 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x071495 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x41fe55 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f37d338; op2val:0x3f871495; op3val:0x3f41fe55; valaddr_reg:x16; val_offset:1764; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1764, x17, x15, 1192, x18)

inst_658:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x37d338 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x071495 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x41fe55 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f37d338; op2val:0x3f871495; op3val:0x3f41fe55; valaddr_reg:x16; val_offset:1776; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1776, x17, x15, 1200, x18)

inst_659:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x37d338 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x071495 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x41fe55 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f37d338; op2val:0x3f871495; op3val:0x3f41fe55; valaddr_reg:x16; val_offset:1788; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1788, x17, x15, 1208, x18)

inst_660:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x37d338 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x071495 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x41fe55 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f37d338; op2val:0x3f871495; op3val:0x3f41fe55; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1216, x18)

inst_661:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0491bb and fs2 == 0 and fe2 == 0x80 and fm2 == 0x22de2c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x28ae8c and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e0491bb; op2val:0x4022de2c; op3val:0x3ea8ae8c; valaddr_reg:x16; val_offset:1812; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1812, x17, x15, 1224, x18)

inst_662:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0491bb and fs2 == 0 and fe2 == 0x80 and fm2 == 0x22de2c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x28ae8c and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e0491bb; op2val:0x4022de2c; op3val:0x3ea8ae8c; valaddr_reg:x16; val_offset:1824; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1824, x17, x15, 1232, x18)

inst_663:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0491bb and fs2 == 0 and fe2 == 0x80 and fm2 == 0x22de2c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x28ae8c and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e0491bb; op2val:0x4022de2c; op3val:0x3ea8ae8c; valaddr_reg:x16; val_offset:1836; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1836, x17, x15, 1240, x18)

inst_664:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0491bb and fs2 == 0 and fe2 == 0x80 and fm2 == 0x22de2c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x28ae8c and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e0491bb; op2val:0x4022de2c; op3val:0x3ea8ae8c; valaddr_reg:x16; val_offset:1848; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1848, x17, x15, 1248, x18)

inst_665:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0491bb and fs2 == 0 and fe2 == 0x80 and fm2 == 0x22de2c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x28ae8c and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e0491bb; op2val:0x4022de2c; op3val:0x3ea8ae8c; valaddr_reg:x16; val_offset:1860; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1860, x17, x15, 1256, x18)

inst_666:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6a5f33 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x318a3d and fs3 == 0 and fe3 == 0x7c and fm3 == 0x228a62 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6a5f33; op2val:0x3e318a3d; op3val:0x3e228a62; valaddr_reg:x16; val_offset:1872; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1872, x17, x15, 1264, x18)

inst_667:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6a5f33 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x318a3d and fs3 == 0 and fe3 == 0x7c and fm3 == 0x228a62 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6a5f33; op2val:0x3e318a3d; op3val:0x3e228a62; valaddr_reg:x16; val_offset:1884; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1884, x17, x15, 1272, x18)

inst_668:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6a5f33 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x318a3d and fs3 == 0 and fe3 == 0x7c and fm3 == 0x228a62 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6a5f33; op2val:0x3e318a3d; op3val:0x3e228a62; valaddr_reg:x16; val_offset:1896; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1896, x17, x15, 1280, x18)

inst_669:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6a5f33 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x318a3d and fs3 == 0 and fe3 == 0x7c and fm3 == 0x228a62 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6a5f33; op2val:0x3e318a3d; op3val:0x3e228a62; valaddr_reg:x16; val_offset:1908; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1908, x17, x15, 1288, x18)

inst_670:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6a5f33 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x318a3d and fs3 == 0 and fe3 == 0x7c and fm3 == 0x228a62 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6a5f33; op2val:0x3e318a3d; op3val:0x3e228a62; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1296, x18)

inst_671:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3e9166 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0fe109 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x563579 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3e9166; op2val:0x3f8fe109; op3val:0x3f563579; valaddr_reg:x16; val_offset:1932; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1932, x17, x15, 1304, x18)

inst_672:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3e9166 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0fe109 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x563579 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3e9166; op2val:0x3f8fe109; op3val:0x3f563579; valaddr_reg:x16; val_offset:1944; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1944, x17, x15, 1312, x18)

inst_673:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3e9166 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0fe109 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x563579 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3e9166; op2val:0x3f8fe109; op3val:0x3f563579; valaddr_reg:x16; val_offset:1956; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1956, x17, x15, 1320, x18)

inst_674:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3e9166 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0fe109 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x563579 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3e9166; op2val:0x3f8fe109; op3val:0x3f563579; valaddr_reg:x16; val_offset:1968; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1968, x17, x15, 1328, x18)

inst_675:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3e9166 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0fe109 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x563579 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3e9166; op2val:0x3f8fe109; op3val:0x3f563579; valaddr_reg:x16; val_offset:1980; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1980, x17, x15, 1336, x18)

inst_676:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6de51c and fs2 == 0 and fe2 == 0x7d and fm2 == 0x0ec2de and fs3 == 0 and fe3 == 0x7d and fm3 == 0x04aa2b and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6de51c; op2val:0x3e8ec2de; op3val:0x3e84aa2b; valaddr_reg:x16; val_offset:1992; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1992, x17, x15, 1344, x18)

inst_677:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6de51c and fs2 == 0 and fe2 == 0x7d and fm2 == 0x0ec2de and fs3 == 0 and fe3 == 0x7d and fm3 == 0x04aa2b and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6de51c; op2val:0x3e8ec2de; op3val:0x3e84aa2b; valaddr_reg:x16; val_offset:2004; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 2004, x17, x15, 1352, x18)

inst_678:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6de51c and fs2 == 0 and fe2 == 0x7d and fm2 == 0x0ec2de and fs3 == 0 and fe3 == 0x7d and fm3 == 0x04aa2b and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6de51c; op2val:0x3e8ec2de; op3val:0x3e84aa2b; valaddr_reg:x16; val_offset:2016; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 2016, x17, x15, 1360, x18)

inst_679:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6de51c and fs2 == 0 and fe2 == 0x7d and fm2 == 0x0ec2de and fs3 == 0 and fe3 == 0x7d and fm3 == 0x04aa2b and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6de51c; op2val:0x3e8ec2de; op3val:0x3e84aa2b; valaddr_reg:x16; val_offset:2028; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 2028, x17, x15, 1368, x18)
addi x16,x16,2040

inst_680:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6de51c and fs2 == 0 and fe2 == 0x7d and fm2 == 0x0ec2de and fs3 == 0 and fe3 == 0x7d and fm3 == 0x04aa2b and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6de51c; op2val:0x3e8ec2de; op3val:0x3e84aa2b; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 1376, x18)

inst_681:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x721397 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x6b944a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5ec435 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f721397; op2val:0x3f6b944a; op3val:0x3f5ec435; valaddr_reg:x16; val_offset:12; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 12, x17, x15, 1384, x18)

inst_682:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x721397 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x6b944a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5ec435 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f721397; op2val:0x3f6b944a; op3val:0x3f5ec435; valaddr_reg:x16; val_offset:24; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 24, x17, x15, 1392, x18)

inst_683:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x721397 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x6b944a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5ec435 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f721397; op2val:0x3f6b944a; op3val:0x3f5ec435; valaddr_reg:x16; val_offset:36; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 36, x17, x15, 1400, x18)

inst_684:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x721397 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x6b944a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5ec435 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f721397; op2val:0x3f6b944a; op3val:0x3f5ec435; valaddr_reg:x16; val_offset:48; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 48, x17, x15, 1408, x18)

inst_685:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x721397 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x6b944a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5ec435 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f721397; op2val:0x3f6b944a; op3val:0x3f5ec435; valaddr_reg:x16; val_offset:60; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 60, x17, x15, 1416, x18)

inst_686:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1865bb and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0c4989 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2706d2 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1865bb; op2val:0x3f8c4989; op3val:0x3f2706d2; valaddr_reg:x16; val_offset:72; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 72, x17, x15, 1424, x18)

inst_687:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1865bb and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0c4989 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2706d2 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1865bb; op2val:0x3f8c4989; op3val:0x3f2706d2; valaddr_reg:x16; val_offset:84; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 84, x17, x15, 1432, x18)

inst_688:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1865bb and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0c4989 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2706d2 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1865bb; op2val:0x3f8c4989; op3val:0x3f2706d2; valaddr_reg:x16; val_offset:96; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 96, x17, x15, 1440, x18)

inst_689:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1865bb and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0c4989 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2706d2 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1865bb; op2val:0x3f8c4989; op3val:0x3f2706d2; valaddr_reg:x16; val_offset:108; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 108, x17, x15, 1448, x18)

inst_690:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1865bb and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0c4989 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2706d2 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1865bb; op2val:0x3f8c4989; op3val:0x3f2706d2; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 1456, x18)

inst_691:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x162816 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1ee0d4 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3a613a and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e962816; op2val:0x3f9ee0d4; op3val:0x3eba613a; valaddr_reg:x16; val_offset:132; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 132, x17, x15, 1464, x18)

inst_692:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x162816 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1ee0d4 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3a613a and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e962816; op2val:0x3f9ee0d4; op3val:0x3eba613a; valaddr_reg:x16; val_offset:144; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 144, x17, x15, 1472, x18)

inst_693:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x162816 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1ee0d4 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3a613a and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e962816; op2val:0x3f9ee0d4; op3val:0x3eba613a; valaddr_reg:x16; val_offset:156; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 156, x17, x15, 1480, x18)

inst_694:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x162816 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1ee0d4 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3a613a and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e962816; op2val:0x3f9ee0d4; op3val:0x3eba613a; valaddr_reg:x16; val_offset:168; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 168, x17, x15, 1488, x18)

inst_695:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x162816 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1ee0d4 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3a613a and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e962816; op2val:0x3f9ee0d4; op3val:0x3eba613a; valaddr_reg:x16; val_offset:180; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 180, x17, x15, 1496, x18)

inst_696:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x284482 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x02a3ed and fs3 == 0 and fe3 == 0x7c and fm3 == 0x2bbd13 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f284482; op2val:0x3e82a3ed; op3val:0x3e2bbd13; valaddr_reg:x16; val_offset:192; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 192, x17, x15, 1504, x18)

inst_697:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x284482 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x02a3ed and fs3 == 0 and fe3 == 0x7c and fm3 == 0x2bbd13 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f284482; op2val:0x3e82a3ed; op3val:0x3e2bbd13; valaddr_reg:x16; val_offset:204; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 204, x17, x15, 1512, x18)

inst_698:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x284482 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x02a3ed and fs3 == 0 and fe3 == 0x7c and fm3 == 0x2bbd13 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f284482; op2val:0x3e82a3ed; op3val:0x3e2bbd13; valaddr_reg:x16; val_offset:216; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 216, x17, x15, 1520, x18)

inst_699:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x284482 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x02a3ed and fs3 == 0 and fe3 == 0x7c and fm3 == 0x2bbd13 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f284482; op2val:0x3e82a3ed; op3val:0x3e2bbd13; valaddr_reg:x16; val_offset:228; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 228, x17, x15, 1528, x18)

inst_700:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x284482 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x02a3ed and fs3 == 0 and fe3 == 0x7c and fm3 == 0x2bbd13 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f284482; op2val:0x3e82a3ed; op3val:0x3e2bbd13; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 1536, x18)

inst_701:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1fe050 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x665561 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x0fd8db and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e9fe050; op2val:0x3d665561; op3val:0x3c8fd8db; valaddr_reg:x16; val_offset:252; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 252, x17, x15, 1544, x18)

inst_702:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1fe050 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x665561 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x0fd8db and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e9fe050; op2val:0x3d665561; op3val:0x3c8fd8db; valaddr_reg:x16; val_offset:264; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 264, x17, x15, 1552, x18)

inst_703:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1fe050 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x665561 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x0fd8db and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e9fe050; op2val:0x3d665561; op3val:0x3c8fd8db; valaddr_reg:x16; val_offset:276; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 276, x17, x15, 1560, x18)

inst_704:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1fe050 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x665561 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x0fd8db and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e9fe050; op2val:0x3d665561; op3val:0x3c8fd8db; valaddr_reg:x16; val_offset:288; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 288, x17, x15, 1568, x18)

inst_705:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1fe050 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x665561 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x0fd8db and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e9fe050; op2val:0x3d665561; op3val:0x3c8fd8db; valaddr_reg:x16; val_offset:300; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 300, x17, x15, 1576, x18)

inst_706:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1b5eb6 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x501537 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7c93a8 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1b5eb6; op2val:0x3f501537; op3val:0x3efc93a8; valaddr_reg:x16; val_offset:312; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 312, x17, x15, 1584, x18)

inst_707:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1b5eb6 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x501537 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7c93a8 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1b5eb6; op2val:0x3f501537; op3val:0x3efc93a8; valaddr_reg:x16; val_offset:324; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 324, x17, x15, 1592, x18)

inst_708:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1b5eb6 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x501537 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7c93a8 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1b5eb6; op2val:0x3f501537; op3val:0x3efc93a8; valaddr_reg:x16; val_offset:336; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 336, x17, x15, 1600, x18)

inst_709:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1b5eb6 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x501537 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7c93a8 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1b5eb6; op2val:0x3f501537; op3val:0x3efc93a8; valaddr_reg:x16; val_offset:348; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 348, x17, x15, 1608, x18)

inst_710:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1b5eb6 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x501537 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7c93a8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1b5eb6; op2val:0x3f501537; op3val:0x3efc93a8; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 1616, x18)

inst_711:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x014793 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x27add7 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x295af7 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f014793; op2val:0x3ea7add7; op3val:0x3e295af7; valaddr_reg:x16; val_offset:372; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 372, x17, x15, 1624, x18)

inst_712:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x014793 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x27add7 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x295af7 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f014793; op2val:0x3ea7add7; op3val:0x3e295af7; valaddr_reg:x16; val_offset:384; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 384, x17, x15, 1632, x18)

inst_713:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x014793 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x27add7 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x295af7 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f014793; op2val:0x3ea7add7; op3val:0x3e295af7; valaddr_reg:x16; val_offset:396; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 396, x17, x15, 1640, x18)

inst_714:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x014793 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x27add7 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x295af7 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f014793; op2val:0x3ea7add7; op3val:0x3e295af7; valaddr_reg:x16; val_offset:408; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 408, x17, x15, 1648, x18)

inst_715:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x014793 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x27add7 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x295af7 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f014793; op2val:0x3ea7add7; op3val:0x3e295af7; valaddr_reg:x16; val_offset:420; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 420, x17, x15, 1656, x18)

inst_716:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x396cff and fs2 == 0 and fe2 == 0x80 and fm2 == 0x48b03d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x115ccf and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e396cff; op2val:0x4048b03d; op3val:0x3f115ccf; valaddr_reg:x16; val_offset:432; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 432, x17, x15, 1664, x18)

inst_717:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x396cff and fs2 == 0 and fe2 == 0x80 and fm2 == 0x48b03d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x115ccf and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e396cff; op2val:0x4048b03d; op3val:0x3f115ccf; valaddr_reg:x16; val_offset:444; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 444, x17, x15, 1672, x18)

inst_718:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x396cff and fs2 == 0 and fe2 == 0x80 and fm2 == 0x48b03d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x115ccf and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e396cff; op2val:0x4048b03d; op3val:0x3f115ccf; valaddr_reg:x16; val_offset:456; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 456, x17, x15, 1680, x18)

inst_719:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x396cff and fs2 == 0 and fe2 == 0x80 and fm2 == 0x48b03d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x115ccf and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e396cff; op2val:0x4048b03d; op3val:0x3f115ccf; valaddr_reg:x16; val_offset:468; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 468, x17, x15, 1688, x18)

inst_720:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x396cff and fs2 == 0 and fe2 == 0x80 and fm2 == 0x48b03d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x115ccf and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e396cff; op2val:0x4048b03d; op3val:0x3f115ccf; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1696, x18)

inst_721:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x05d9f9 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x5aca42 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x64cabe and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d85d9f9; op2val:0x415aca42; op3val:0x3f64cabe; valaddr_reg:x16; val_offset:492; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 492, x17, x15, 1704, x18)

inst_722:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x05d9f9 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x5aca42 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x64cabe and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d85d9f9; op2val:0x415aca42; op3val:0x3f64cabe; valaddr_reg:x16; val_offset:504; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 504, x17, x15, 1712, x18)

inst_723:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x05d9f9 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x5aca42 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x64cabe and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d85d9f9; op2val:0x415aca42; op3val:0x3f64cabe; valaddr_reg:x16; val_offset:516; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 516, x17, x15, 1720, x18)

inst_724:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x05d9f9 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x5aca42 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x64cabe and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d85d9f9; op2val:0x415aca42; op3val:0x3f64cabe; valaddr_reg:x16; val_offset:528; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 528, x17, x15, 1728, x18)

inst_725:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x05d9f9 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x5aca42 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x64cabe and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d85d9f9; op2val:0x415aca42; op3val:0x3f64cabe; valaddr_reg:x16; val_offset:540; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 540, x17, x15, 1736, x18)

inst_726:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4f7fc7 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x25e3e8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x067616 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4f7fc7; op2val:0x3f25e3e8; op3val:0x3f067616; valaddr_reg:x16; val_offset:552; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 552, x17, x15, 1744, x18)

inst_727:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4f7fc7 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x25e3e8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x067616 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4f7fc7; op2val:0x3f25e3e8; op3val:0x3f067616; valaddr_reg:x16; val_offset:564; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 564, x17, x15, 1752, x18)

inst_728:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4f7fc7 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x25e3e8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x067616 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4f7fc7; op2val:0x3f25e3e8; op3val:0x3f067616; valaddr_reg:x16; val_offset:576; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 576, x17, x15, 1760, x18)

inst_729:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4f7fc7 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x25e3e8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x067616 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4f7fc7; op2val:0x3f25e3e8; op3val:0x3f067616; valaddr_reg:x16; val_offset:588; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 588, x17, x15, 1768, x18)

inst_730:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4f7fc7 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x25e3e8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x067616 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4f7fc7; op2val:0x3f25e3e8; op3val:0x3f067616; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1776, x18)

inst_731:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x08a9b0 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x574acd and fs3 == 0 and fe3 == 0x7d and fm3 == 0x65dce3 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e88a9b0; op2val:0x3fd74acd; op3val:0x3ee5dce3; valaddr_reg:x16; val_offset:612; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 612, x17, x15, 1784, x18)

inst_732:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x08a9b0 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x574acd and fs3 == 0 and fe3 == 0x7d and fm3 == 0x65dce3 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e88a9b0; op2val:0x3fd74acd; op3val:0x3ee5dce3; valaddr_reg:x16; val_offset:624; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 624, x17, x15, 1792, x18)

inst_733:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x08a9b0 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x574acd and fs3 == 0 and fe3 == 0x7d and fm3 == 0x65dce3 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e88a9b0; op2val:0x3fd74acd; op3val:0x3ee5dce3; valaddr_reg:x16; val_offset:636; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 636, x17, x15, 1800, x18)

inst_734:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x08a9b0 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x574acd and fs3 == 0 and fe3 == 0x7d and fm3 == 0x65dce3 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e88a9b0; op2val:0x3fd74acd; op3val:0x3ee5dce3; valaddr_reg:x16; val_offset:648; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 648, x17, x15, 1808, x18)

inst_735:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x08a9b0 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x574acd and fs3 == 0 and fe3 == 0x7d and fm3 == 0x65dce3 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e88a9b0; op2val:0x3fd74acd; op3val:0x3ee5dce3; valaddr_reg:x16; val_offset:660; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 660, x17, x15, 1816, x18)

inst_736:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3fe297 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2825f0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7c1246 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3fe297; op2val:0x3fa825f0; op3val:0x3f7c1246; valaddr_reg:x16; val_offset:672; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 672, x17, x15, 1824, x18)

inst_737:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3fe297 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2825f0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7c1246 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3fe297; op2val:0x3fa825f0; op3val:0x3f7c1246; valaddr_reg:x16; val_offset:684; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 684, x17, x15, 1832, x18)

inst_738:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3fe297 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2825f0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7c1246 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3fe297; op2val:0x3fa825f0; op3val:0x3f7c1246; valaddr_reg:x16; val_offset:696; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 696, x17, x15, 1840, x18)

inst_739:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3fe297 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2825f0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7c1246 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3fe297; op2val:0x3fa825f0; op3val:0x3f7c1246; valaddr_reg:x16; val_offset:708; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 708, x17, x15, 1848, x18)

inst_740:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3fe297 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2825f0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7c1246 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3fe297; op2val:0x3fa825f0; op3val:0x3f7c1246; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1856, x18)

inst_741:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x272af0 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x407558 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7b59a9 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f272af0; op2val:0x3fc07558; op3val:0x3f7b59a9; valaddr_reg:x16; val_offset:732; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 732, x17, x15, 1864, x18)

inst_742:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x272af0 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x407558 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7b59a9 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f272af0; op2val:0x3fc07558; op3val:0x3f7b59a9; valaddr_reg:x16; val_offset:744; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 744, x17, x15, 1872, x18)

inst_743:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x272af0 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x407558 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7b59a9 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f272af0; op2val:0x3fc07558; op3val:0x3f7b59a9; valaddr_reg:x16; val_offset:756; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 756, x17, x15, 1880, x18)

inst_744:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x272af0 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x407558 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7b59a9 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f272af0; op2val:0x3fc07558; op3val:0x3f7b59a9; valaddr_reg:x16; val_offset:768; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 768, x17, x15, 1888, x18)

inst_745:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x272af0 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x407558 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7b59a9 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f272af0; op2val:0x3fc07558; op3val:0x3f7b59a9; valaddr_reg:x16; val_offset:780; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 780, x17, x15, 1896, x18)

inst_746:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7ff463 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x527eb3 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x527527 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3efff463; op2val:0x3fd27eb3; op3val:0x3f527527; valaddr_reg:x16; val_offset:792; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 792, x17, x15, 1904, x18)

inst_747:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7ff463 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x527eb3 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x527527 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3efff463; op2val:0x3fd27eb3; op3val:0x3f527527; valaddr_reg:x16; val_offset:804; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 804, x17, x15, 1912, x18)

inst_748:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7ff463 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x527eb3 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x527527 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3efff463; op2val:0x3fd27eb3; op3val:0x3f527527; valaddr_reg:x16; val_offset:816; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 816, x17, x15, 1920, x18)

inst_749:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7ff463 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x527eb3 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x527527 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3efff463; op2val:0x3fd27eb3; op3val:0x3f527527; valaddr_reg:x16; val_offset:828; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 828, x17, x15, 1928, x18)

inst_750:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7ff463 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x527eb3 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x527527 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3efff463; op2val:0x3fd27eb3; op3val:0x3f527527; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1936, x18)

inst_751:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x764616 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3cf2e1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x35c520 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e764616; op2val:0x403cf2e1; op3val:0x3f35c520; valaddr_reg:x16; val_offset:852; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 852, x17, x15, 1944, x18)

inst_752:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x764616 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3cf2e1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x35c520 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e764616; op2val:0x403cf2e1; op3val:0x3f35c520; valaddr_reg:x16; val_offset:864; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 864, x17, x15, 1952, x18)

inst_753:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x764616 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3cf2e1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x35c520 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e764616; op2val:0x403cf2e1; op3val:0x3f35c520; valaddr_reg:x16; val_offset:876; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 876, x17, x15, 1960, x18)

inst_754:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x764616 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3cf2e1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x35c520 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e764616; op2val:0x403cf2e1; op3val:0x3f35c520; valaddr_reg:x16; val_offset:888; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 888, x17, x15, 1968, x18)

inst_755:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x764616 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3cf2e1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x35c520 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e764616; op2val:0x403cf2e1; op3val:0x3f35c520; valaddr_reg:x16; val_offset:900; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 900, x17, x15, 1976, x18)

inst_756:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x302144 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x014cc5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x31eb2a and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f302144; op2val:0x3f814cc5; op3val:0x3f31eb2a; valaddr_reg:x16; val_offset:912; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 912, x17, x15, 1984, x18)

inst_757:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x302144 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x014cc5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x31eb2a and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f302144; op2val:0x3f814cc5; op3val:0x3f31eb2a; valaddr_reg:x16; val_offset:924; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 924, x17, x15, 1992, x18)

inst_758:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x302144 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x014cc5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x31eb2a and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f302144; op2val:0x3f814cc5; op3val:0x3f31eb2a; valaddr_reg:x16; val_offset:936; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 936, x17, x15, 2000, x18)

inst_759:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x302144 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x014cc5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x31eb2a and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f302144; op2val:0x3f814cc5; op3val:0x3f31eb2a; valaddr_reg:x16; val_offset:948; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 948, x17, x15, 2008, x18)

inst_760:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x302144 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x014cc5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x31eb2a and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f302144; op2val:0x3f814cc5; op3val:0x3f31eb2a; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 2016, x18)

inst_761:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x731a50 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x57303f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4c58ea and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f731a50; op2val:0x3f57303f; op3val:0x3f4c58ea; valaddr_reg:x16; val_offset:972; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 972, x17, x15, 2024, x18)
RVTEST_SIGBASE(x15,signature_x15_4)

inst_762:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x731a50 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x57303f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4c58ea and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f731a50; op2val:0x3f57303f; op3val:0x3f4c58ea; valaddr_reg:x16; val_offset:984; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 984, x17, x15, 0, x18)

inst_763:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x731a50 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x57303f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4c58ea and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f731a50; op2val:0x3f57303f; op3val:0x3f4c58ea; valaddr_reg:x16; val_offset:996; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 996, x17, x15, 8, x18)

inst_764:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x731a50 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x57303f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4c58ea and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f731a50; op2val:0x3f57303f; op3val:0x3f4c58ea; valaddr_reg:x16; val_offset:1008; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1008, x17, x15, 16, x18)

inst_765:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x731a50 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x57303f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4c58ea and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f731a50; op2val:0x3f57303f; op3val:0x3f4c58ea; valaddr_reg:x16; val_offset:1020; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1020, x17, x15, 24, x18)

inst_766:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x63fafd and fs2 == 0 and fe2 == 0x7e and fm2 == 0x710d76 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x56ab45 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f63fafd; op2val:0x3f710d76; op3val:0x3f56ab45; valaddr_reg:x16; val_offset:1032; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1032, x17, x15, 32, x18)

inst_767:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x63fafd and fs2 == 0 and fe2 == 0x7e and fm2 == 0x710d76 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x56ab45 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f63fafd; op2val:0x3f710d76; op3val:0x3f56ab45; valaddr_reg:x16; val_offset:1044; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1044, x17, x15, 40, x18)

inst_768:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x63fafd and fs2 == 0 and fe2 == 0x7e and fm2 == 0x710d76 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x56ab45 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f63fafd; op2val:0x3f710d76; op3val:0x3f56ab45; valaddr_reg:x16; val_offset:1056; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1056, x17, x15, 48, x18)

inst_769:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x63fafd and fs2 == 0 and fe2 == 0x7e and fm2 == 0x710d76 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x56ab45 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f63fafd; op2val:0x3f710d76; op3val:0x3f56ab45; valaddr_reg:x16; val_offset:1068; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1068, x17, x15, 56, x18)

inst_770:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x63fafd and fs2 == 0 and fe2 == 0x7e and fm2 == 0x710d76 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x56ab45 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f63fafd; op2val:0x3f710d76; op3val:0x3f56ab45; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 64, x18)

inst_771:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x723831 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4e0d58 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x42f5d8 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef23831; op2val:0x3fce0d58; op3val:0x3f42f5d8; valaddr_reg:x16; val_offset:1092; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1092, x17, x15, 72, x18)

inst_772:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x723831 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4e0d58 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x42f5d8 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef23831; op2val:0x3fce0d58; op3val:0x3f42f5d8; valaddr_reg:x16; val_offset:1104; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1104, x17, x15, 80, x18)

inst_773:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x723831 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4e0d58 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x42f5d8 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef23831; op2val:0x3fce0d58; op3val:0x3f42f5d8; valaddr_reg:x16; val_offset:1116; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1116, x17, x15, 88, x18)

inst_774:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x723831 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4e0d58 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x42f5d8 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef23831; op2val:0x3fce0d58; op3val:0x3f42f5d8; valaddr_reg:x16; val_offset:1128; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1128, x17, x15, 96, x18)

inst_775:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x723831 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4e0d58 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x42f5d8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef23831; op2val:0x3fce0d58; op3val:0x3f42f5d8; valaddr_reg:x16; val_offset:1140; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1140, x17, x15, 104, x18)

inst_776:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3b6d8b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x183cce and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5eeb1f and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3b6d8b; op2val:0x3f983cce; op3val:0x3f5eeb1f; valaddr_reg:x16; val_offset:1152; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1152, x17, x15, 112, x18)

inst_777:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3b6d8b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x183cce and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5eeb1f and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3b6d8b; op2val:0x3f983cce; op3val:0x3f5eeb1f; valaddr_reg:x16; val_offset:1164; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1164, x17, x15, 120, x18)

inst_778:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3b6d8b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x183cce and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5eeb1f and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3b6d8b; op2val:0x3f983cce; op3val:0x3f5eeb1f; valaddr_reg:x16; val_offset:1176; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1176, x17, x15, 128, x18)

inst_779:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3b6d8b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x183cce and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5eeb1f and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3b6d8b; op2val:0x3f983cce; op3val:0x3f5eeb1f; valaddr_reg:x16; val_offset:1188; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1188, x17, x15, 136, x18)

inst_780:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3b6d8b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x183cce and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5eeb1f and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3b6d8b; op2val:0x3f983cce; op3val:0x3f5eeb1f; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 144, x18)

inst_781:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x64d4c7 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x28031b and fs3 == 0 and fe3 == 0x7b and fm3 == 0x162e6a and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee4d4c7; op2val:0x3e28031b; op3val:0x3d962e6a; valaddr_reg:x16; val_offset:1212; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1212, x17, x15, 152, x18)

inst_782:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x64d4c7 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x28031b and fs3 == 0 and fe3 == 0x7b and fm3 == 0x162e6a and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee4d4c7; op2val:0x3e28031b; op3val:0x3d962e6a; valaddr_reg:x16; val_offset:1224; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1224, x17, x15, 160, x18)

inst_783:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x64d4c7 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x28031b and fs3 == 0 and fe3 == 0x7b and fm3 == 0x162e6a and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee4d4c7; op2val:0x3e28031b; op3val:0x3d962e6a; valaddr_reg:x16; val_offset:1236; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1236, x17, x15, 168, x18)

inst_784:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x64d4c7 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x28031b and fs3 == 0 and fe3 == 0x7b and fm3 == 0x162e6a and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee4d4c7; op2val:0x3e28031b; op3val:0x3d962e6a; valaddr_reg:x16; val_offset:1248; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1248, x17, x15, 176, x18)

inst_785:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x64d4c7 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x28031b and fs3 == 0 and fe3 == 0x7b and fm3 == 0x162e6a and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee4d4c7; op2val:0x3e28031b; op3val:0x3d962e6a; valaddr_reg:x16; val_offset:1260; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1260, x17, x15, 184, x18)

inst_786:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0bd57f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1adc21 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x292d59 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0bd57f; op2val:0x3f9adc21; op3val:0x3f292d59; valaddr_reg:x16; val_offset:1272; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1272, x17, x15, 192, x18)

inst_787:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0bd57f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1adc21 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x292d59 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0bd57f; op2val:0x3f9adc21; op3val:0x3f292d59; valaddr_reg:x16; val_offset:1284; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1284, x17, x15, 200, x18)

inst_788:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0bd57f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1adc21 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x292d59 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0bd57f; op2val:0x3f9adc21; op3val:0x3f292d59; valaddr_reg:x16; val_offset:1296; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1296, x17, x15, 208, x18)

inst_789:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0bd57f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1adc21 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x292d59 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0bd57f; op2val:0x3f9adc21; op3val:0x3f292d59; valaddr_reg:x16; val_offset:1308; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1308, x17, x15, 216, x18)

inst_790:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0bd57f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1adc21 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x292d59 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0bd57f; op2val:0x3f9adc21; op3val:0x3f292d59; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 224, x18)

inst_791:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6ef1d3 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x168c60 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x0c84b7 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6ef1d3; op2val:0x3e168c60; op3val:0x3e0c84b7; valaddr_reg:x16; val_offset:1332; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1332, x17, x15, 232, x18)

inst_792:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6ef1d3 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x168c60 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x0c84b7 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6ef1d3; op2val:0x3e168c60; op3val:0x3e0c84b7; valaddr_reg:x16; val_offset:1344; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1344, x17, x15, 240, x18)

inst_793:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6ef1d3 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x168c60 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x0c84b7 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6ef1d3; op2val:0x3e168c60; op3val:0x3e0c84b7; valaddr_reg:x16; val_offset:1356; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1356, x17, x15, 248, x18)

inst_794:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6ef1d3 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x168c60 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x0c84b7 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6ef1d3; op2val:0x3e168c60; op3val:0x3e0c84b7; valaddr_reg:x16; val_offset:1368; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1368, x17, x15, 256, x18)

inst_795:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6ef1d3 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x168c60 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x0c84b7 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6ef1d3; op2val:0x3e168c60; op3val:0x3e0c84b7; valaddr_reg:x16; val_offset:1380; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1380, x17, x15, 264, x18)

inst_796:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6a8fd9 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x20ad6a and fs3 == 0 and fe3 == 0x7c and fm3 == 0x1338cc and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6a8fd9; op2val:0x3e20ad6a; op3val:0x3e1338cc; valaddr_reg:x16; val_offset:1392; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1392, x17, x15, 272, x18)

inst_797:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6a8fd9 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x20ad6a and fs3 == 0 and fe3 == 0x7c and fm3 == 0x1338cc and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6a8fd9; op2val:0x3e20ad6a; op3val:0x3e1338cc; valaddr_reg:x16; val_offset:1404; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1404, x17, x15, 280, x18)

inst_798:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6a8fd9 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x20ad6a and fs3 == 0 and fe3 == 0x7c and fm3 == 0x1338cc and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6a8fd9; op2val:0x3e20ad6a; op3val:0x3e1338cc; valaddr_reg:x16; val_offset:1416; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1416, x17, x15, 288, x18)

inst_799:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6a8fd9 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x20ad6a and fs3 == 0 and fe3 == 0x7c and fm3 == 0x1338cc and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6a8fd9; op2val:0x3e20ad6a; op3val:0x3e1338cc; valaddr_reg:x16; val_offset:1428; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1428, x17, x15, 296, x18)

inst_800:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6a8fd9 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x20ad6a and fs3 == 0 and fe3 == 0x7c and fm3 == 0x1338cc and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6a8fd9; op2val:0x3e20ad6a; op3val:0x3e1338cc; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 304, x18)

inst_801:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3b2abe and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0aeb1c and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4b21df and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ebb2abe; op2val:0x3f0aeb1c; op3val:0x3e4b21df; valaddr_reg:x16; val_offset:1452; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1452, x17, x15, 312, x18)

inst_802:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3b2abe and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0aeb1c and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4b21df and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ebb2abe; op2val:0x3f0aeb1c; op3val:0x3e4b21df; valaddr_reg:x16; val_offset:1464; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1464, x17, x15, 320, x18)

inst_803:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3b2abe and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0aeb1c and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4b21df and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ebb2abe; op2val:0x3f0aeb1c; op3val:0x3e4b21df; valaddr_reg:x16; val_offset:1476; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1476, x17, x15, 328, x18)

inst_804:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3b2abe and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0aeb1c and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4b21df and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ebb2abe; op2val:0x3f0aeb1c; op3val:0x3e4b21df; valaddr_reg:x16; val_offset:1488; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1488, x17, x15, 336, x18)

inst_805:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3b2abe and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0aeb1c and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4b21df and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ebb2abe; op2val:0x3f0aeb1c; op3val:0x3e4b21df; valaddr_reg:x16; val_offset:1500; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1500, x17, x15, 344, x18)

inst_806:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6d7645 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x081dd6 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x7c8503 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6d7645; op2val:0x3d881dd6; op3val:0x3d7c8503; valaddr_reg:x16; val_offset:1512; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1512, x17, x15, 352, x18)

inst_807:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6d7645 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x081dd6 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x7c8503 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6d7645; op2val:0x3d881dd6; op3val:0x3d7c8503; valaddr_reg:x16; val_offset:1524; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1524, x17, x15, 360, x18)

inst_808:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6d7645 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x081dd6 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x7c8503 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6d7645; op2val:0x3d881dd6; op3val:0x3d7c8503; valaddr_reg:x16; val_offset:1536; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1536, x17, x15, 368, x18)

inst_809:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6d7645 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x081dd6 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x7c8503 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6d7645; op2val:0x3d881dd6; op3val:0x3d7c8503; valaddr_reg:x16; val_offset:1548; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1548, x17, x15, 376, x18)

inst_810:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6d7645 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x081dd6 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x7c8503 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6d7645; op2val:0x3d881dd6; op3val:0x3d7c8503; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 384, x18)

inst_811:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1fa384 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x6bec3d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x131e6c and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e9fa384; op2val:0x3febec3d; op3val:0x3f131e6c; valaddr_reg:x16; val_offset:1572; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1572, x17, x15, 392, x18)

inst_812:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1fa384 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x6bec3d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x131e6c and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e9fa384; op2val:0x3febec3d; op3val:0x3f131e6c; valaddr_reg:x16; val_offset:1584; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1584, x17, x15, 400, x18)

inst_813:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1fa384 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x6bec3d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x131e6c and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e9fa384; op2val:0x3febec3d; op3val:0x3f131e6c; valaddr_reg:x16; val_offset:1596; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1596, x17, x15, 408, x18)

inst_814:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1fa384 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x6bec3d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x131e6c and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e9fa384; op2val:0x3febec3d; op3val:0x3f131e6c; valaddr_reg:x16; val_offset:1608; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1608, x17, x15, 416, x18)

inst_815:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1fa384 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x6bec3d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x131e6c and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e9fa384; op2val:0x3febec3d; op3val:0x3f131e6c; valaddr_reg:x16; val_offset:1620; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1620, x17, x15, 424, x18)

inst_816:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x691901 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x047d49 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7145f1 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f691901; op2val:0x3f847d49; op3val:0x3f7145f1; valaddr_reg:x16; val_offset:1632; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1632, x17, x15, 432, x18)

inst_817:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x691901 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x047d49 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7145f1 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f691901; op2val:0x3f847d49; op3val:0x3f7145f1; valaddr_reg:x16; val_offset:1644; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1644, x17, x15, 440, x18)

inst_818:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x691901 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x047d49 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7145f1 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f691901; op2val:0x3f847d49; op3val:0x3f7145f1; valaddr_reg:x16; val_offset:1656; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1656, x17, x15, 448, x18)

inst_819:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x691901 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x047d49 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7145f1 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f691901; op2val:0x3f847d49; op3val:0x3f7145f1; valaddr_reg:x16; val_offset:1668; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1668, x17, x15, 456, x18)

inst_820:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x691901 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x047d49 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7145f1 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f691901; op2val:0x3f847d49; op3val:0x3f7145f1; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 464, x18)

inst_821:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5bdafb and fs2 == 0 and fe2 == 0x7e and fm2 == 0x329a6d and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1962e2 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3edbdafb; op2val:0x3f329a6d; op3val:0x3e9962e2; valaddr_reg:x16; val_offset:1692; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1692, x17, x15, 472, x18)

inst_822:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5bdafb and fs2 == 0 and fe2 == 0x7e and fm2 == 0x329a6d and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1962e2 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3edbdafb; op2val:0x3f329a6d; op3val:0x3e9962e2; valaddr_reg:x16; val_offset:1704; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1704, x17, x15, 480, x18)

inst_823:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5bdafb and fs2 == 0 and fe2 == 0x7e and fm2 == 0x329a6d and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1962e2 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3edbdafb; op2val:0x3f329a6d; op3val:0x3e9962e2; valaddr_reg:x16; val_offset:1716; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1716, x17, x15, 488, x18)

inst_824:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5bdafb and fs2 == 0 and fe2 == 0x7e and fm2 == 0x329a6d and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1962e2 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3edbdafb; op2val:0x3f329a6d; op3val:0x3e9962e2; valaddr_reg:x16; val_offset:1728; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1728, x17, x15, 496, x18)

inst_825:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5bdafb and fs2 == 0 and fe2 == 0x7e and fm2 == 0x329a6d and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1962e2 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3edbdafb; op2val:0x3f329a6d; op3val:0x3e9962e2; valaddr_reg:x16; val_offset:1740; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1740, x17, x15, 504, x18)

inst_826:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x59c305 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x429aba and fs3 == 0 and fe3 == 0x7b and fm3 == 0x258968 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f59c305; op2val:0x3dc29aba; op3val:0x3da58968; valaddr_reg:x16; val_offset:1752; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1752, x17, x15, 512, x18)

inst_827:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x59c305 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x429aba and fs3 == 0 and fe3 == 0x7b and fm3 == 0x258968 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f59c305; op2val:0x3dc29aba; op3val:0x3da58968; valaddr_reg:x16; val_offset:1764; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1764, x17, x15, 520, x18)

inst_828:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x59c305 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x429aba and fs3 == 0 and fe3 == 0x7b and fm3 == 0x258968 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f59c305; op2val:0x3dc29aba; op3val:0x3da58968; valaddr_reg:x16; val_offset:1776; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1776, x17, x15, 528, x18)

inst_829:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x59c305 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x429aba and fs3 == 0 and fe3 == 0x7b and fm3 == 0x258968 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f59c305; op2val:0x3dc29aba; op3val:0x3da58968; valaddr_reg:x16; val_offset:1788; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1788, x17, x15, 536, x18)

inst_830:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x59c305 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x429aba and fs3 == 0 and fe3 == 0x7b and fm3 == 0x258968 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f59c305; op2val:0x3dc29aba; op3val:0x3da58968; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 544, x18)

inst_831:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x395d93 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x030f36 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3dcbcc and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e395d93; op2val:0x40830f36; op3val:0x3f3dcbcc; valaddr_reg:x16; val_offset:1812; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1812, x17, x15, 552, x18)

inst_832:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x395d93 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x030f36 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3dcbcc and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e395d93; op2val:0x40830f36; op3val:0x3f3dcbcc; valaddr_reg:x16; val_offset:1824; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1824, x17, x15, 560, x18)

inst_833:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x395d93 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x030f36 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3dcbcc and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e395d93; op2val:0x40830f36; op3val:0x3f3dcbcc; valaddr_reg:x16; val_offset:1836; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1836, x17, x15, 568, x18)

inst_834:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x395d93 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x030f36 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3dcbcc and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e395d93; op2val:0x40830f36; op3val:0x3f3dcbcc; valaddr_reg:x16; val_offset:1848; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1848, x17, x15, 576, x18)

inst_835:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x395d93 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x030f36 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3dcbcc and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e395d93; op2val:0x40830f36; op3val:0x3f3dcbcc; valaddr_reg:x16; val_offset:1860; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1860, x17, x15, 584, x18)

inst_836:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x13e726 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x1d02ba and fs3 == 0 and fe3 == 0x7b and fm3 == 0x356cac and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f13e726; op2val:0x3e1d02ba; op3val:0x3db56cac; valaddr_reg:x16; val_offset:1872; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1872, x17, x15, 592, x18)

inst_837:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x13e726 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x1d02ba and fs3 == 0 and fe3 == 0x7b and fm3 == 0x356cac and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f13e726; op2val:0x3e1d02ba; op3val:0x3db56cac; valaddr_reg:x16; val_offset:1884; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1884, x17, x15, 600, x18)

inst_838:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x13e726 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x1d02ba and fs3 == 0 and fe3 == 0x7b and fm3 == 0x356cac and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f13e726; op2val:0x3e1d02ba; op3val:0x3db56cac; valaddr_reg:x16; val_offset:1896; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1896, x17, x15, 608, x18)

inst_839:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x13e726 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x1d02ba and fs3 == 0 and fe3 == 0x7b and fm3 == 0x356cac and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f13e726; op2val:0x3e1d02ba; op3val:0x3db56cac; valaddr_reg:x16; val_offset:1908; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1908, x17, x15, 616, x18)

inst_840:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x13e726 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x1d02ba and fs3 == 0 and fe3 == 0x7b and fm3 == 0x356cac and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f13e726; op2val:0x3e1d02ba; op3val:0x3db56cac; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 624, x18)

inst_841:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3ac40b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x18b81d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5ed572 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3ac40b; op2val:0x3f98b81d; op3val:0x3f5ed572; valaddr_reg:x16; val_offset:1932; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1932, x17, x15, 632, x18)

inst_842:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3ac40b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x18b81d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5ed572 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3ac40b; op2val:0x3f98b81d; op3val:0x3f5ed572; valaddr_reg:x16; val_offset:1944; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1944, x17, x15, 640, x18)

inst_843:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3ac40b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x18b81d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5ed572 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3ac40b; op2val:0x3f98b81d; op3val:0x3f5ed572; valaddr_reg:x16; val_offset:1956; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1956, x17, x15, 648, x18)

inst_844:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3ac40b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x18b81d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5ed572 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3ac40b; op2val:0x3f98b81d; op3val:0x3f5ed572; valaddr_reg:x16; val_offset:1968; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1968, x17, x15, 656, x18)

inst_845:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3ac40b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x18b81d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5ed572 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3ac40b; op2val:0x3f98b81d; op3val:0x3f5ed572; valaddr_reg:x16; val_offset:1980; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1980, x17, x15, 664, x18)

inst_846:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x75dd8c and fs2 == 0 and fe2 == 0x7c and fm2 == 0x6ba28f and fs3 == 0 and fe3 == 0x7c and fm3 == 0x624e7f and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f75dd8c; op2val:0x3e6ba28f; op3val:0x3e624e7f; valaddr_reg:x16; val_offset:1992; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1992, x17, x15, 672, x18)

inst_847:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x75dd8c and fs2 == 0 and fe2 == 0x7c and fm2 == 0x6ba28f and fs3 == 0 and fe3 == 0x7c and fm3 == 0x624e7f and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f75dd8c; op2val:0x3e6ba28f; op3val:0x3e624e7f; valaddr_reg:x16; val_offset:2004; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 2004, x17, x15, 680, x18)

inst_848:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x75dd8c and fs2 == 0 and fe2 == 0x7c and fm2 == 0x6ba28f and fs3 == 0 and fe3 == 0x7c and fm3 == 0x624e7f and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f75dd8c; op2val:0x3e6ba28f; op3val:0x3e624e7f; valaddr_reg:x16; val_offset:2016; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 2016, x17, x15, 688, x18)

inst_849:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x75dd8c and fs2 == 0 and fe2 == 0x7c and fm2 == 0x6ba28f and fs3 == 0 and fe3 == 0x7c and fm3 == 0x624e7f and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f75dd8c; op2val:0x3e6ba28f; op3val:0x3e624e7f; valaddr_reg:x16; val_offset:2028; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 2028, x17, x15, 696, x18)
addi x16,x16,2040

inst_850:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x75dd8c and fs2 == 0 and fe2 == 0x7c and fm2 == 0x6ba28f and fs3 == 0 and fe3 == 0x7c and fm3 == 0x624e7f and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f75dd8c; op2val:0x3e6ba28f; op3val:0x3e624e7f; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 704, x18)

inst_851:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x652d2a and fs2 == 0 and fe2 == 0x7e and fm2 == 0x520582 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3c03fa and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f652d2a; op2val:0x3f520582; op3val:0x3f3c03fa; valaddr_reg:x16; val_offset:12; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 12, x17, x15, 712, x18)

inst_852:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x652d2a and fs2 == 0 and fe2 == 0x7e and fm2 == 0x520582 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3c03fa and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f652d2a; op2val:0x3f520582; op3val:0x3f3c03fa; valaddr_reg:x16; val_offset:24; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 24, x17, x15, 720, x18)

inst_853:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x652d2a and fs2 == 0 and fe2 == 0x7e and fm2 == 0x520582 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3c03fa and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f652d2a; op2val:0x3f520582; op3val:0x3f3c03fa; valaddr_reg:x16; val_offset:36; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 36, x17, x15, 728, x18)

inst_854:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x652d2a and fs2 == 0 and fe2 == 0x7e and fm2 == 0x520582 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3c03fa and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f652d2a; op2val:0x3f520582; op3val:0x3f3c03fa; valaddr_reg:x16; val_offset:48; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 48, x17, x15, 736, x18)

inst_855:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x652d2a and fs2 == 0 and fe2 == 0x7e and fm2 == 0x520582 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3c03fa and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f652d2a; op2val:0x3f520582; op3val:0x3f3c03fa; valaddr_reg:x16; val_offset:60; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 60, x17, x15, 744, x18)

inst_856:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x58b75a and fs2 == 0 and fe2 == 0x7c and fm2 == 0x08f2c9 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x67dde0 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e58b75a; op2val:0x3e08f2c9; op3val:0x3ce7dde0; valaddr_reg:x16; val_offset:72; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 72, x17, x15, 752, x18)

inst_857:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x58b75a and fs2 == 0 and fe2 == 0x7c and fm2 == 0x08f2c9 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x67dde0 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e58b75a; op2val:0x3e08f2c9; op3val:0x3ce7dde0; valaddr_reg:x16; val_offset:84; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 84, x17, x15, 760, x18)

inst_858:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x58b75a and fs2 == 0 and fe2 == 0x7c and fm2 == 0x08f2c9 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x67dde0 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e58b75a; op2val:0x3e08f2c9; op3val:0x3ce7dde0; valaddr_reg:x16; val_offset:96; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 96, x17, x15, 768, x18)

inst_859:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x58b75a and fs2 == 0 and fe2 == 0x7c and fm2 == 0x08f2c9 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x67dde0 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e58b75a; op2val:0x3e08f2c9; op3val:0x3ce7dde0; valaddr_reg:x16; val_offset:108; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 108, x17, x15, 776, x18)

inst_860:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x58b75a and fs2 == 0 and fe2 == 0x7c and fm2 == 0x08f2c9 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x67dde0 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e58b75a; op2val:0x3e08f2c9; op3val:0x3ce7dde0; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 784, x18)

inst_861:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6f8aa3 and fs2 == 0 and fe2 == 0x79 and fm2 == 0x029814 and fs3 == 0 and fe3 == 0x78 and fm3 == 0x746568 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6f8aa3; op2val:0x3c829814; op3val:0x3c746568; valaddr_reg:x16; val_offset:132; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 132, x17, x15, 792, x18)

inst_862:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6f8aa3 and fs2 == 0 and fe2 == 0x79 and fm2 == 0x029814 and fs3 == 0 and fe3 == 0x78 and fm3 == 0x746568 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6f8aa3; op2val:0x3c829814; op3val:0x3c746568; valaddr_reg:x16; val_offset:144; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 144, x17, x15, 800, x18)

inst_863:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6f8aa3 and fs2 == 0 and fe2 == 0x79 and fm2 == 0x029814 and fs3 == 0 and fe3 == 0x78 and fm3 == 0x746568 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6f8aa3; op2val:0x3c829814; op3val:0x3c746568; valaddr_reg:x16; val_offset:156; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 156, x17, x15, 808, x18)

inst_864:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6f8aa3 and fs2 == 0 and fe2 == 0x79 and fm2 == 0x029814 and fs3 == 0 and fe3 == 0x78 and fm3 == 0x746568 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6f8aa3; op2val:0x3c829814; op3val:0x3c746568; valaddr_reg:x16; val_offset:168; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 168, x17, x15, 816, x18)

inst_865:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6f8aa3 and fs2 == 0 and fe2 == 0x79 and fm2 == 0x029814 and fs3 == 0 and fe3 == 0x78 and fm3 == 0x746568 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6f8aa3; op2val:0x3c829814; op3val:0x3c746568; valaddr_reg:x16; val_offset:180; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 180, x17, x15, 824, x18)

inst_866:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x408ca1 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x260194 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x79b8c2 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec08ca1; op2val:0x3fa60194; op3val:0x3ef9b8c2; valaddr_reg:x16; val_offset:192; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 192, x17, x15, 832, x18)

inst_867:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x408ca1 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x260194 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x79b8c2 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec08ca1; op2val:0x3fa60194; op3val:0x3ef9b8c2; valaddr_reg:x16; val_offset:204; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 204, x17, x15, 840, x18)

inst_868:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x408ca1 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x260194 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x79b8c2 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec08ca1; op2val:0x3fa60194; op3val:0x3ef9b8c2; valaddr_reg:x16; val_offset:216; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 216, x17, x15, 848, x18)

inst_869:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x408ca1 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x260194 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x79b8c2 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec08ca1; op2val:0x3fa60194; op3val:0x3ef9b8c2; valaddr_reg:x16; val_offset:228; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 228, x17, x15, 856, x18)

inst_870:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x408ca1 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x260194 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x79b8c2 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec08ca1; op2val:0x3fa60194; op3val:0x3ef9b8c2; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 864, x18)

inst_871:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7b5efa and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2e49bb and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2b22f4 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7b5efa; op2val:0x3f2e49bb; op3val:0x3f2b22f4; valaddr_reg:x16; val_offset:252; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 252, x17, x15, 872, x18)

inst_872:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7b5efa and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2e49bb and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2b22f4 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7b5efa; op2val:0x3f2e49bb; op3val:0x3f2b22f4; valaddr_reg:x16; val_offset:264; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 264, x17, x15, 880, x18)

inst_873:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7b5efa and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2e49bb and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2b22f4 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7b5efa; op2val:0x3f2e49bb; op3val:0x3f2b22f4; valaddr_reg:x16; val_offset:276; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 276, x17, x15, 888, x18)

inst_874:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7b5efa and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2e49bb and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2b22f4 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7b5efa; op2val:0x3f2e49bb; op3val:0x3f2b22f4; valaddr_reg:x16; val_offset:288; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 288, x17, x15, 896, x18)

inst_875:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7b5efa and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2e49bb and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2b22f4 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7b5efa; op2val:0x3f2e49bb; op3val:0x3f2b22f4; valaddr_reg:x16; val_offset:300; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 300, x17, x15, 904, x18)

inst_876:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x645386 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x209aa6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0f3e23 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee45386; op2val:0x3fa09aa6; op3val:0x3f0f3e23; valaddr_reg:x16; val_offset:312; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 312, x17, x15, 912, x18)

inst_877:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x645386 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x209aa6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0f3e23 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee45386; op2val:0x3fa09aa6; op3val:0x3f0f3e23; valaddr_reg:x16; val_offset:324; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 324, x17, x15, 920, x18)

inst_878:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x645386 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x209aa6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0f3e23 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee45386; op2val:0x3fa09aa6; op3val:0x3f0f3e23; valaddr_reg:x16; val_offset:336; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 336, x17, x15, 928, x18)

inst_879:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x645386 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x209aa6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0f3e23 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee45386; op2val:0x3fa09aa6; op3val:0x3f0f3e23; valaddr_reg:x16; val_offset:348; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 348, x17, x15, 936, x18)

inst_880:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x645386 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x209aa6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0f3e23 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee45386; op2val:0x3fa09aa6; op3val:0x3f0f3e23; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 944, x18)

inst_881:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0e423e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x61da64 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7b032a and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8e423e; op2val:0x4061da64; op3val:0x3f7b032a; valaddr_reg:x16; val_offset:372; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 372, x17, x15, 952, x18)

inst_882:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0e423e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x61da64 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7b032a and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8e423e; op2val:0x4061da64; op3val:0x3f7b032a; valaddr_reg:x16; val_offset:384; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 384, x17, x15, 960, x18)

inst_883:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0e423e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x61da64 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7b032a and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8e423e; op2val:0x4061da64; op3val:0x3f7b032a; valaddr_reg:x16; val_offset:396; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 396, x17, x15, 968, x18)

inst_884:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0e423e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x61da64 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7b032a and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8e423e; op2val:0x4061da64; op3val:0x3f7b032a; valaddr_reg:x16; val_offset:408; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 408, x17, x15, 976, x18)

inst_885:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0e423e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x61da64 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7b032a and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8e423e; op2val:0x4061da64; op3val:0x3f7b032a; valaddr_reg:x16; val_offset:420; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 420, x17, x15, 984, x18)

inst_886:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4de3ad and fs2 == 0 and fe2 == 0x7e and fm2 == 0x58eb01 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2e751b and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4de3ad; op2val:0x3f58eb01; op3val:0x3f2e751b; valaddr_reg:x16; val_offset:432; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 432, x17, x15, 992, x18)

inst_887:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4de3ad and fs2 == 0 and fe2 == 0x7e and fm2 == 0x58eb01 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2e751b and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4de3ad; op2val:0x3f58eb01; op3val:0x3f2e751b; valaddr_reg:x16; val_offset:444; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 444, x17, x15, 1000, x18)

inst_888:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4de3ad and fs2 == 0 and fe2 == 0x7e and fm2 == 0x58eb01 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2e751b and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4de3ad; op2val:0x3f58eb01; op3val:0x3f2e751b; valaddr_reg:x16; val_offset:456; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 456, x17, x15, 1008, x18)

inst_889:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4de3ad and fs2 == 0 and fe2 == 0x7e and fm2 == 0x58eb01 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2e751b and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4de3ad; op2val:0x3f58eb01; op3val:0x3f2e751b; valaddr_reg:x16; val_offset:468; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 468, x17, x15, 1016, x18)

inst_890:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4de3ad and fs2 == 0 and fe2 == 0x7e and fm2 == 0x58eb01 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2e751b and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4de3ad; op2val:0x3f58eb01; op3val:0x3f2e751b; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1024, x18)

inst_891:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x78029d and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2ea2fe and fs3 == 0 and fe3 == 0x7e and fm3 == 0x292faf and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef8029d; op2val:0x3faea2fe; op3val:0x3f292faf; valaddr_reg:x16; val_offset:492; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 492, x17, x15, 1032, x18)

inst_892:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x78029d and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2ea2fe and fs3 == 0 and fe3 == 0x7e and fm3 == 0x292faf and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef8029d; op2val:0x3faea2fe; op3val:0x3f292faf; valaddr_reg:x16; val_offset:504; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 504, x17, x15, 1040, x18)

inst_893:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x78029d and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2ea2fe and fs3 == 0 and fe3 == 0x7e and fm3 == 0x292faf and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef8029d; op2val:0x3faea2fe; op3val:0x3f292faf; valaddr_reg:x16; val_offset:516; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 516, x17, x15, 1048, x18)

inst_894:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x78029d and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2ea2fe and fs3 == 0 and fe3 == 0x7e and fm3 == 0x292faf and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef8029d; op2val:0x3faea2fe; op3val:0x3f292faf; valaddr_reg:x16; val_offset:528; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 528, x17, x15, 1056, x18)

inst_895:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x78029d and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2ea2fe and fs3 == 0 and fe3 == 0x7e and fm3 == 0x292faf and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef8029d; op2val:0x3faea2fe; op3val:0x3f292faf; valaddr_reg:x16; val_offset:540; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 540, x17, x15, 1064, x18)

inst_896:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x56aa29 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2d8dab and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1187c9 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f56aa29; op2val:0x3f2d8dab; op3val:0x3f1187c9; valaddr_reg:x16; val_offset:552; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 552, x17, x15, 1072, x18)

inst_897:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x56aa29 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2d8dab and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1187c9 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f56aa29; op2val:0x3f2d8dab; op3val:0x3f1187c9; valaddr_reg:x16; val_offset:564; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 564, x17, x15, 1080, x18)

inst_898:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x56aa29 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2d8dab and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1187c9 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f56aa29; op2val:0x3f2d8dab; op3val:0x3f1187c9; valaddr_reg:x16; val_offset:576; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 576, x17, x15, 1088, x18)

inst_899:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x56aa29 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2d8dab and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1187c9 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f56aa29; op2val:0x3f2d8dab; op3val:0x3f1187c9; valaddr_reg:x16; val_offset:588; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 588, x17, x15, 1096, x18)

inst_900:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x56aa29 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2d8dab and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1187c9 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f56aa29; op2val:0x3f2d8dab; op3val:0x3f1187c9; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1104, x18)

inst_901:
// fs1 == 0 and fe1 == 0x78 and fm1 == 0x25f232 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x0457d2 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x2b939f and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3c25f232; op2val:0x418457d2; op3val:0x3e2b939f; valaddr_reg:x16; val_offset:612; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 612, x17, x15, 1112, x18)

inst_902:
// fs1 == 0 and fe1 == 0x78 and fm1 == 0x25f232 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x0457d2 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x2b939f and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3c25f232; op2val:0x418457d2; op3val:0x3e2b939f; valaddr_reg:x16; val_offset:624; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 624, x17, x15, 1120, x18)

inst_903:
// fs1 == 0 and fe1 == 0x78 and fm1 == 0x25f232 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x0457d2 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x2b939f and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3c25f232; op2val:0x418457d2; op3val:0x3e2b939f; valaddr_reg:x16; val_offset:636; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 636, x17, x15, 1128, x18)

inst_904:
// fs1 == 0 and fe1 == 0x78 and fm1 == 0x25f232 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x0457d2 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x2b939f and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3c25f232; op2val:0x418457d2; op3val:0x3e2b939f; valaddr_reg:x16; val_offset:648; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 648, x17, x15, 1136, x18)

inst_905:
// fs1 == 0 and fe1 == 0x78 and fm1 == 0x25f232 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x0457d2 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x2b939f and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3c25f232; op2val:0x418457d2; op3val:0x3e2b939f; valaddr_reg:x16; val_offset:660; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 660, x17, x15, 1144, x18)

inst_906:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1a0bd6 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5a228f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0342e0 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1a0bd6; op2val:0x3f5a228f; op3val:0x3f0342e0; valaddr_reg:x16; val_offset:672; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 672, x17, x15, 1152, x18)

inst_907:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1a0bd6 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5a228f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0342e0 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1a0bd6; op2val:0x3f5a228f; op3val:0x3f0342e0; valaddr_reg:x16; val_offset:684; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 684, x17, x15, 1160, x18)

inst_908:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1a0bd6 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5a228f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0342e0 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1a0bd6; op2val:0x3f5a228f; op3val:0x3f0342e0; valaddr_reg:x16; val_offset:696; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 696, x17, x15, 1168, x18)

inst_909:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1a0bd6 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5a228f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0342e0 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1a0bd6; op2val:0x3f5a228f; op3val:0x3f0342e0; valaddr_reg:x16; val_offset:708; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 708, x17, x15, 1176, x18)

inst_910:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1a0bd6 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5a228f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0342e0 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1a0bd6; op2val:0x3f5a228f; op3val:0x3f0342e0; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1184, x18)

inst_911:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x47c917 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x794851 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x428b07 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f47c917; op2val:0x3d794851; op3val:0x3d428b07; valaddr_reg:x16; val_offset:732; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 732, x17, x15, 1192, x18)

inst_912:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x47c917 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x794851 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x428b07 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f47c917; op2val:0x3d794851; op3val:0x3d428b07; valaddr_reg:x16; val_offset:744; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 744, x17, x15, 1200, x18)

inst_913:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x47c917 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x794851 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x428b07 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f47c917; op2val:0x3d794851; op3val:0x3d428b07; valaddr_reg:x16; val_offset:756; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 756, x17, x15, 1208, x18)

inst_914:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x47c917 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x794851 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x428b07 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f47c917; op2val:0x3d794851; op3val:0x3d428b07; valaddr_reg:x16; val_offset:768; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 768, x17, x15, 1216, x18)

inst_915:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x47c917 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x794851 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x428b07 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f47c917; op2val:0x3d794851; op3val:0x3d428b07; valaddr_reg:x16; val_offset:780; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 780, x17, x15, 1224, x18)

inst_916:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x6ff556 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x0dd2d8 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x04efc3 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3deff556; op2val:0x3e8dd2d8; op3val:0x3d04efc3; valaddr_reg:x16; val_offset:792; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 792, x17, x15, 1232, x18)

inst_917:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x6ff556 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x0dd2d8 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x04efc3 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3deff556; op2val:0x3e8dd2d8; op3val:0x3d04efc3; valaddr_reg:x16; val_offset:804; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 804, x17, x15, 1240, x18)

inst_918:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x6ff556 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x0dd2d8 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x04efc3 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3deff556; op2val:0x3e8dd2d8; op3val:0x3d04efc3; valaddr_reg:x16; val_offset:816; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 816, x17, x15, 1248, x18)

inst_919:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x6ff556 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x0dd2d8 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x04efc3 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3deff556; op2val:0x3e8dd2d8; op3val:0x3d04efc3; valaddr_reg:x16; val_offset:828; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 828, x17, x15, 1256, x18)

inst_920:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x6ff556 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x0dd2d8 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x04efc3 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3deff556; op2val:0x3e8dd2d8; op3val:0x3d04efc3; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1264, x18)

inst_921:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2df2db and fs2 == 0 and fe2 == 0x80 and fm2 == 0x217182 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5b65ba and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eadf2db; op2val:0x40217182; op3val:0x3f5b65ba; valaddr_reg:x16; val_offset:852; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 852, x17, x15, 1272, x18)

inst_922:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2df2db and fs2 == 0 and fe2 == 0x80 and fm2 == 0x217182 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5b65ba and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eadf2db; op2val:0x40217182; op3val:0x3f5b65ba; valaddr_reg:x16; val_offset:864; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 864, x17, x15, 1280, x18)

inst_923:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2df2db and fs2 == 0 and fe2 == 0x80 and fm2 == 0x217182 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5b65ba and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eadf2db; op2val:0x40217182; op3val:0x3f5b65ba; valaddr_reg:x16; val_offset:876; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 876, x17, x15, 1288, x18)

inst_924:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2df2db and fs2 == 0 and fe2 == 0x80 and fm2 == 0x217182 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5b65ba and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eadf2db; op2val:0x40217182; op3val:0x3f5b65ba; valaddr_reg:x16; val_offset:888; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 888, x17, x15, 1296, x18)

inst_925:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2df2db and fs2 == 0 and fe2 == 0x80 and fm2 == 0x217182 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5b65ba and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eadf2db; op2val:0x40217182; op3val:0x3f5b65ba; valaddr_reg:x16; val_offset:900; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 900, x17, x15, 1304, x18)

inst_926:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x58762f and fs2 == 0 and fe2 == 0x7d and fm2 == 0x2be52f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1158bc and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f58762f; op2val:0x3eabe52f; op3val:0x3e9158bc; valaddr_reg:x16; val_offset:912; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 912, x17, x15, 1312, x18)

inst_927:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x58762f and fs2 == 0 and fe2 == 0x7d and fm2 == 0x2be52f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1158bc and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f58762f; op2val:0x3eabe52f; op3val:0x3e9158bc; valaddr_reg:x16; val_offset:924; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 924, x17, x15, 1320, x18)

inst_928:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x58762f and fs2 == 0 and fe2 == 0x7d and fm2 == 0x2be52f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1158bc and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f58762f; op2val:0x3eabe52f; op3val:0x3e9158bc; valaddr_reg:x16; val_offset:936; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 936, x17, x15, 1328, x18)

inst_929:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x58762f and fs2 == 0 and fe2 == 0x7d and fm2 == 0x2be52f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1158bc and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f58762f; op2val:0x3eabe52f; op3val:0x3e9158bc; valaddr_reg:x16; val_offset:948; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 948, x17, x15, 1336, x18)

inst_930:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x58762f and fs2 == 0 and fe2 == 0x7d and fm2 == 0x2be52f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1158bc and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f58762f; op2val:0x3eabe52f; op3val:0x3e9158bc; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 1344, x18)

inst_931:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5d3fe0 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x740361 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x52e3ce and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e5d3fe0; op2val:0x3ef40361; op3val:0x3dd2e3ce; valaddr_reg:x16; val_offset:972; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 972, x17, x15, 1352, x18)

inst_932:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5d3fe0 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x740361 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x52e3ce and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e5d3fe0; op2val:0x3ef40361; op3val:0x3dd2e3ce; valaddr_reg:x16; val_offset:984; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 984, x17, x15, 1360, x18)

inst_933:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5d3fe0 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x740361 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x52e3ce and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e5d3fe0; op2val:0x3ef40361; op3val:0x3dd2e3ce; valaddr_reg:x16; val_offset:996; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 996, x17, x15, 1368, x18)

inst_934:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5d3fe0 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x740361 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x52e3ce and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e5d3fe0; op2val:0x3ef40361; op3val:0x3dd2e3ce; valaddr_reg:x16; val_offset:1008; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1008, x17, x15, 1376, x18)

inst_935:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5d3fe0 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x740361 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x52e3ce and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e5d3fe0; op2val:0x3ef40361; op3val:0x3dd2e3ce; valaddr_reg:x16; val_offset:1020; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1020, x17, x15, 1384, x18)

inst_936:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6d47f5 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x3694a8 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x293af2 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6d47f5; op2val:0x3eb694a8; op3val:0x3ea93af2; valaddr_reg:x16; val_offset:1032; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1032, x17, x15, 1392, x18)

inst_937:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6d47f5 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x3694a8 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x293af2 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6d47f5; op2val:0x3eb694a8; op3val:0x3ea93af2; valaddr_reg:x16; val_offset:1044; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1044, x17, x15, 1400, x18)

inst_938:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6d47f5 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x3694a8 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x293af2 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6d47f5; op2val:0x3eb694a8; op3val:0x3ea93af2; valaddr_reg:x16; val_offset:1056; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1056, x17, x15, 1408, x18)

inst_939:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6d47f5 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x3694a8 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x293af2 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6d47f5; op2val:0x3eb694a8; op3val:0x3ea93af2; valaddr_reg:x16; val_offset:1068; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1068, x17, x15, 1416, x18)

inst_940:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6d47f5 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x3694a8 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x293af2 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6d47f5; op2val:0x3eb694a8; op3val:0x3ea93af2; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 1424, x18)

inst_941:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6d6d9e and fs2 == 0 and fe2 == 0x7e and fm2 == 0x519a30 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x42657f and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6d6d9e; op2val:0x3f519a30; op3val:0x3f42657f; valaddr_reg:x16; val_offset:1092; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1092, x17, x15, 1432, x18)

inst_942:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6d6d9e and fs2 == 0 and fe2 == 0x7e and fm2 == 0x519a30 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x42657f and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6d6d9e; op2val:0x3f519a30; op3val:0x3f42657f; valaddr_reg:x16; val_offset:1104; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1104, x17, x15, 1440, x18)

inst_943:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6d6d9e and fs2 == 0 and fe2 == 0x7e and fm2 == 0x519a30 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x42657f and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6d6d9e; op2val:0x3f519a30; op3val:0x3f42657f; valaddr_reg:x16; val_offset:1116; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1116, x17, x15, 1448, x18)

inst_944:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6d6d9e and fs2 == 0 and fe2 == 0x7e and fm2 == 0x519a30 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x42657f and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6d6d9e; op2val:0x3f519a30; op3val:0x3f42657f; valaddr_reg:x16; val_offset:1128; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1128, x17, x15, 1456, x18)

inst_945:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6d6d9e and fs2 == 0 and fe2 == 0x7e and fm2 == 0x519a30 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x42657f and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6d6d9e; op2val:0x3f519a30; op3val:0x3f42657f; valaddr_reg:x16; val_offset:1140; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1140, x17, x15, 1464, x18)

inst_946:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x60dd62 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2297b4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0ed159 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f60dd62; op2val:0x3f2297b4; op3val:0x3f0ed159; valaddr_reg:x16; val_offset:1152; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1152, x17, x15, 1472, x18)

inst_947:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x60dd62 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2297b4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0ed159 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f60dd62; op2val:0x3f2297b4; op3val:0x3f0ed159; valaddr_reg:x16; val_offset:1164; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1164, x17, x15, 1480, x18)

inst_948:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x60dd62 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2297b4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0ed159 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f60dd62; op2val:0x3f2297b4; op3val:0x3f0ed159; valaddr_reg:x16; val_offset:1176; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1176, x17, x15, 1488, x18)

inst_949:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x60dd62 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2297b4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0ed159 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f60dd62; op2val:0x3f2297b4; op3val:0x3f0ed159; valaddr_reg:x16; val_offset:1188; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1188, x17, x15, 1496, x18)

inst_950:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x60dd62 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2297b4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0ed159 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f60dd62; op2val:0x3f2297b4; op3val:0x3f0ed159; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 1504, x18)

inst_951:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x23d718 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x2c92a8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5ce4c1 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e23d718; op2val:0x40ac92a8; op3val:0x3f5ce4c1; valaddr_reg:x16; val_offset:1212; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1212, x17, x15, 1512, x18)

inst_952:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x23d718 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x2c92a8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5ce4c1 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e23d718; op2val:0x40ac92a8; op3val:0x3f5ce4c1; valaddr_reg:x16; val_offset:1224; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1224, x17, x15, 1520, x18)

inst_953:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x23d718 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x2c92a8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5ce4c1 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e23d718; op2val:0x40ac92a8; op3val:0x3f5ce4c1; valaddr_reg:x16; val_offset:1236; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1236, x17, x15, 1528, x18)

inst_954:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x23d718 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x2c92a8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5ce4c1 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e23d718; op2val:0x40ac92a8; op3val:0x3f5ce4c1; valaddr_reg:x16; val_offset:1248; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1248, x17, x15, 1536, x18)

inst_955:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x23d718 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x2c92a8 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5ce4c1 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e23d718; op2val:0x40ac92a8; op3val:0x3f5ce4c1; valaddr_reg:x16; val_offset:1260; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1260, x17, x15, 1544, x18)

inst_956:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x618768 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x03e329 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x6860d3 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee18768; op2val:0x3e03e329; op3val:0x3d6860d3; valaddr_reg:x16; val_offset:1272; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1272, x17, x15, 1552, x18)

inst_957:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x618768 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x03e329 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x6860d3 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee18768; op2val:0x3e03e329; op3val:0x3d6860d3; valaddr_reg:x16; val_offset:1284; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1284, x17, x15, 1560, x18)

inst_958:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x618768 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x03e329 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x6860d3 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee18768; op2val:0x3e03e329; op3val:0x3d6860d3; valaddr_reg:x16; val_offset:1296; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1296, x17, x15, 1568, x18)

inst_959:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x618768 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x03e329 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x6860d3 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee18768; op2val:0x3e03e329; op3val:0x3d6860d3; valaddr_reg:x16; val_offset:1308; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1308, x17, x15, 1576, x18)

inst_960:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x618768 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x03e329 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x6860d3 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee18768; op2val:0x3e03e329; op3val:0x3d6860d3; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 1584, x18)

inst_961:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x6cd40c and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4ce36a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3d8b5c and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d6cd40c; op2val:0x414ce36a; op3val:0x3f3d8b5c; valaddr_reg:x16; val_offset:1332; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1332, x17, x15, 1592, x18)

inst_962:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x6cd40c and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4ce36a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3d8b5c and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d6cd40c; op2val:0x414ce36a; op3val:0x3f3d8b5c; valaddr_reg:x16; val_offset:1344; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1344, x17, x15, 1600, x18)

inst_963:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x6cd40c and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4ce36a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3d8b5c and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d6cd40c; op2val:0x414ce36a; op3val:0x3f3d8b5c; valaddr_reg:x16; val_offset:1356; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1356, x17, x15, 1608, x18)

inst_964:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x6cd40c and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4ce36a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3d8b5c and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d6cd40c; op2val:0x414ce36a; op3val:0x3f3d8b5c; valaddr_reg:x16; val_offset:1368; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1368, x17, x15, 1616, x18)

inst_965:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x6cd40c and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4ce36a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3d8b5c and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d6cd40c; op2val:0x414ce36a; op3val:0x3f3d8b5c; valaddr_reg:x16; val_offset:1380; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1380, x17, x15, 1624, x18)

inst_966:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1a001d and fs2 == 0 and fe2 == 0x7d and fm2 == 0x522a34 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x7cdaf7 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e9a001d; op2val:0x3ed22a34; op3val:0x3dfcdaf7; valaddr_reg:x16; val_offset:1392; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1392, x17, x15, 1632, x18)

inst_967:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1a001d and fs2 == 0 and fe2 == 0x7d and fm2 == 0x522a34 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x7cdaf7 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e9a001d; op2val:0x3ed22a34; op3val:0x3dfcdaf7; valaddr_reg:x16; val_offset:1404; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1404, x17, x15, 1640, x18)

inst_968:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1a001d and fs2 == 0 and fe2 == 0x7d and fm2 == 0x522a34 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x7cdaf7 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e9a001d; op2val:0x3ed22a34; op3val:0x3dfcdaf7; valaddr_reg:x16; val_offset:1416; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1416, x17, x15, 1648, x18)

inst_969:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1a001d and fs2 == 0 and fe2 == 0x7d and fm2 == 0x522a34 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x7cdaf7 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e9a001d; op2val:0x3ed22a34; op3val:0x3dfcdaf7; valaddr_reg:x16; val_offset:1428; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1428, x17, x15, 1656, x18)

inst_970:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1a001d and fs2 == 0 and fe2 == 0x7d and fm2 == 0x522a34 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x7cdaf7 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e9a001d; op2val:0x3ed22a34; op3val:0x3dfcdaf7; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 1664, x18)

inst_971:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x059f69 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x65875e and fs3 == 0 and fe3 == 0x7a and fm3 == 0x6f9c83 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f059f69; op2val:0x3de5875e; op3val:0x3d6f9c83; valaddr_reg:x16; val_offset:1452; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1452, x17, x15, 1672, x18)

inst_972:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x059f69 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x65875e and fs3 == 0 and fe3 == 0x7a and fm3 == 0x6f9c83 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f059f69; op2val:0x3de5875e; op3val:0x3d6f9c83; valaddr_reg:x16; val_offset:1464; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1464, x17, x15, 1680, x18)

inst_973:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x059f69 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x65875e and fs3 == 0 and fe3 == 0x7a and fm3 == 0x6f9c83 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f059f69; op2val:0x3de5875e; op3val:0x3d6f9c83; valaddr_reg:x16; val_offset:1476; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1476, x17, x15, 1688, x18)

inst_974:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x059f69 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x65875e and fs3 == 0 and fe3 == 0x7a and fm3 == 0x6f9c83 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f059f69; op2val:0x3de5875e; op3val:0x3d6f9c83; valaddr_reg:x16; val_offset:1488; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1488, x17, x15, 1696, x18)

inst_975:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x059f69 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x65875e and fs3 == 0 and fe3 == 0x7a and fm3 == 0x6f9c83 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f059f69; op2val:0x3de5875e; op3val:0x3d6f9c83; valaddr_reg:x16; val_offset:1500; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1500, x17, x15, 1704, x18)

inst_976:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0c3310 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5a2a37 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6ef536 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0c3310; op2val:0x3f5a2a37; op3val:0x3eeef536; valaddr_reg:x16; val_offset:1512; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1512, x17, x15, 1712, x18)

inst_977:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0c3310 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5a2a37 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6ef536 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0c3310; op2val:0x3f5a2a37; op3val:0x3eeef536; valaddr_reg:x16; val_offset:1524; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1524, x17, x15, 1720, x18)

inst_978:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0c3310 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5a2a37 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6ef536 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0c3310; op2val:0x3f5a2a37; op3val:0x3eeef536; valaddr_reg:x16; val_offset:1536; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1536, x17, x15, 1728, x18)

inst_979:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0c3310 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5a2a37 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6ef536 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0c3310; op2val:0x3f5a2a37; op3val:0x3eeef536; valaddr_reg:x16; val_offset:1548; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1548, x17, x15, 1736, x18)

inst_980:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0c3310 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5a2a37 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6ef536 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0c3310; op2val:0x3f5a2a37; op3val:0x3eeef536; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1744, x18)

inst_981:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x79c5f8 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x213e5f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1d525c and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef9c5f8; op2val:0x3f213e5f; op3val:0x3e9d525c; valaddr_reg:x16; val_offset:1572; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1572, x17, x15, 1752, x18)

inst_982:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x79c5f8 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x213e5f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1d525c and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef9c5f8; op2val:0x3f213e5f; op3val:0x3e9d525c; valaddr_reg:x16; val_offset:1584; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1584, x17, x15, 1760, x18)

inst_983:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x79c5f8 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x213e5f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1d525c and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef9c5f8; op2val:0x3f213e5f; op3val:0x3e9d525c; valaddr_reg:x16; val_offset:1596; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1596, x17, x15, 1768, x18)

inst_984:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x79c5f8 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x213e5f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1d525c and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef9c5f8; op2val:0x3f213e5f; op3val:0x3e9d525c; valaddr_reg:x16; val_offset:1608; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1608, x17, x15, 1776, x18)

inst_985:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x79c5f8 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x213e5f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1d525c and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef9c5f8; op2val:0x3f213e5f; op3val:0x3e9d525c; valaddr_reg:x16; val_offset:1620; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1620, x17, x15, 1784, x18)

inst_986:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4662be and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2356b6 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7d2823 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec662be; op2val:0x3fa356b6; op3val:0x3efd2823; valaddr_reg:x16; val_offset:1632; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1632, x17, x15, 1792, x18)

inst_987:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4662be and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2356b6 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7d2823 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec662be; op2val:0x3fa356b6; op3val:0x3efd2823; valaddr_reg:x16; val_offset:1644; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1644, x17, x15, 1800, x18)

inst_988:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4662be and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2356b6 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7d2823 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec662be; op2val:0x3fa356b6; op3val:0x3efd2823; valaddr_reg:x16; val_offset:1656; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1656, x17, x15, 1808, x18)

inst_989:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4662be and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2356b6 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7d2823 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec662be; op2val:0x3fa356b6; op3val:0x3efd2823; valaddr_reg:x16; val_offset:1668; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1668, x17, x15, 1816, x18)

inst_990:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4662be and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2356b6 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7d2823 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec662be; op2val:0x3fa356b6; op3val:0x3efd2823; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1824, x18)

inst_991:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x333978 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x4b958c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0e8745 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3db33978; op2val:0x40cb958c; op3val:0x3f0e8745; valaddr_reg:x16; val_offset:1692; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1692, x17, x15, 1832, x18)

inst_992:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x333978 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x4b958c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0e8745 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3db33978; op2val:0x40cb958c; op3val:0x3f0e8745; valaddr_reg:x16; val_offset:1704; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1704, x17, x15, 1840, x18)

inst_993:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x333978 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x4b958c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0e8745 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3db33978; op2val:0x40cb958c; op3val:0x3f0e8745; valaddr_reg:x16; val_offset:1716; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1716, x17, x15, 1848, x18)

inst_994:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x333978 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x4b958c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0e8745 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3db33978; op2val:0x40cb958c; op3val:0x3f0e8745; valaddr_reg:x16; val_offset:1728; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1728, x17, x15, 1856, x18)

inst_995:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x333978 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x4b958c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0e8745 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3db33978; op2val:0x40cb958c; op3val:0x3f0e8745; valaddr_reg:x16; val_offset:1740; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1740, x17, x15, 1864, x18)

inst_996:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x606501 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0c30fd and fs3 == 0 and fe3 == 0x7c and fm3 == 0x75c45b and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee06501; op2val:0x3f0c30fd; op3val:0x3e75c45b; valaddr_reg:x16; val_offset:1752; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1752, x17, x15, 1872, x18)

inst_997:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x606501 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0c30fd and fs3 == 0 and fe3 == 0x7c and fm3 == 0x75c45b and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee06501; op2val:0x3f0c30fd; op3val:0x3e75c45b; valaddr_reg:x16; val_offset:1764; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1764, x17, x15, 1880, x18)

inst_998:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x606501 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0c30fd and fs3 == 0 and fe3 == 0x7c and fm3 == 0x75c45b and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee06501; op2val:0x3f0c30fd; op3val:0x3e75c45b; valaddr_reg:x16; val_offset:1776; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1776, x17, x15, 1888, x18)

inst_999:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x606501 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0c30fd and fs3 == 0 and fe3 == 0x7c and fm3 == 0x75c45b and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee06501; op2val:0x3f0c30fd; op3val:0x3e75c45b; valaddr_reg:x16; val_offset:1788; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1788, x17, x15, 1896, x18)

inst_1000:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x606501 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0c30fd and fs3 == 0 and fe3 == 0x7c and fm3 == 0x75c45b and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee06501; op2val:0x3f0c30fd; op3val:0x3e75c45b; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1904, x18)

inst_1001:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x693462 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0a580e and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7c0ce9 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e693462; op2val:0x400a580e; op3val:0x3efc0ce9; valaddr_reg:x16; val_offset:1812; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1812, x17, x15, 1912, x18)

inst_1002:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x693462 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0a580e and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7c0ce9 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e693462; op2val:0x400a580e; op3val:0x3efc0ce9; valaddr_reg:x16; val_offset:1824; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1824, x17, x15, 1920, x18)

inst_1003:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x693462 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0a580e and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7c0ce9 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e693462; op2val:0x400a580e; op3val:0x3efc0ce9; valaddr_reg:x16; val_offset:1836; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1836, x17, x15, 1928, x18)

inst_1004:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x693462 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0a580e and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7c0ce9 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e693462; op2val:0x400a580e; op3val:0x3efc0ce9; valaddr_reg:x16; val_offset:1848; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1848, x17, x15, 1936, x18)

inst_1005:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x693462 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0a580e and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7c0ce9 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e693462; op2val:0x400a580e; op3val:0x3efc0ce9; valaddr_reg:x16; val_offset:1860; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1860, x17, x15, 1944, x18)

inst_1006:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4062ad and fs2 == 0 and fe2 == 0x7e and fm2 == 0x76515b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x391bf6 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4062ad; op2val:0x3f76515b; op3val:0x3f391bf6; valaddr_reg:x16; val_offset:1872; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1872, x17, x15, 1952, x18)

inst_1007:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4062ad and fs2 == 0 and fe2 == 0x7e and fm2 == 0x76515b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x391bf6 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4062ad; op2val:0x3f76515b; op3val:0x3f391bf6; valaddr_reg:x16; val_offset:1884; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1884, x17, x15, 1960, x18)

inst_1008:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4062ad and fs2 == 0 and fe2 == 0x7e and fm2 == 0x76515b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x391bf6 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4062ad; op2val:0x3f76515b; op3val:0x3f391bf6; valaddr_reg:x16; val_offset:1896; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1896, x17, x15, 1968, x18)

inst_1009:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4062ad and fs2 == 0 and fe2 == 0x7e and fm2 == 0x76515b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x391bf6 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4062ad; op2val:0x3f76515b; op3val:0x3f391bf6; valaddr_reg:x16; val_offset:1908; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1908, x17, x15, 1976, x18)

inst_1010:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4062ad and fs2 == 0 and fe2 == 0x7e and fm2 == 0x76515b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x391bf6 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4062ad; op2val:0x3f76515b; op3val:0x3f391bf6; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1984, x18)

inst_1011:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x64d603 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x7bda2e and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6120dd and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f64d603; op2val:0x3efbda2e; op3val:0x3ee120dd; valaddr_reg:x16; val_offset:1932; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1932, x17, x15, 1992, x18)

inst_1012:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x64d603 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x7bda2e and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6120dd and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f64d603; op2val:0x3efbda2e; op3val:0x3ee120dd; valaddr_reg:x16; val_offset:1944; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1944, x17, x15, 2000, x18)

inst_1013:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x64d603 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x7bda2e and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6120dd and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f64d603; op2val:0x3efbda2e; op3val:0x3ee120dd; valaddr_reg:x16; val_offset:1956; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1956, x17, x15, 2008, x18)

inst_1014:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x64d603 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x7bda2e and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6120dd and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f64d603; op2val:0x3efbda2e; op3val:0x3ee120dd; valaddr_reg:x16; val_offset:1968; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1968, x17, x15, 2016, x18)

inst_1015:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x64d603 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x7bda2e and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6120dd and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f64d603; op2val:0x3efbda2e; op3val:0x3ee120dd; valaddr_reg:x16; val_offset:1980; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1980, x17, x15, 2024, x18)
RVTEST_SIGBASE(x15,signature_x15_5)

inst_1016:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x639d1f and fs2 == 0 and fe2 == 0x7d and fm2 == 0x78745d and fs3 == 0 and fe3 == 0x7c and fm3 == 0x5ce7ad and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee39d1f; op2val:0x3ef8745d; op3val:0x3e5ce7ad; valaddr_reg:x16; val_offset:1992; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1992, x17, x15, 0, x18)

inst_1017:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x639d1f and fs2 == 0 and fe2 == 0x7d and fm2 == 0x78745d and fs3 == 0 and fe3 == 0x7c and fm3 == 0x5ce7ad and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee39d1f; op2val:0x3ef8745d; op3val:0x3e5ce7ad; valaddr_reg:x16; val_offset:2004; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 2004, x17, x15, 8, x18)

inst_1018:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x639d1f and fs2 == 0 and fe2 == 0x7d and fm2 == 0x78745d and fs3 == 0 and fe3 == 0x7c and fm3 == 0x5ce7ad and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee39d1f; op2val:0x3ef8745d; op3val:0x3e5ce7ad; valaddr_reg:x16; val_offset:2016; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 2016, x17, x15, 16, x18)

inst_1019:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x639d1f and fs2 == 0 and fe2 == 0x7d and fm2 == 0x78745d and fs3 == 0 and fe3 == 0x7c and fm3 == 0x5ce7ad and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee39d1f; op2val:0x3ef8745d; op3val:0x3e5ce7ad; valaddr_reg:x16; val_offset:2028; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 2028, x17, x15, 24, x18)
addi x16,x16,2040

inst_1020:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x639d1f and fs2 == 0 and fe2 == 0x7d and fm2 == 0x78745d and fs3 == 0 and fe3 == 0x7c and fm3 == 0x5ce7ad and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee39d1f; op2val:0x3ef8745d; op3val:0x3e5ce7ad; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 32, x18)

inst_1021:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2c8c6f and fs2 == 0 and fe2 == 0x7e and fm2 == 0x36efd8 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x769aff and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2c8c6f; op2val:0x3f36efd8; op3val:0x3ef69aff; valaddr_reg:x16; val_offset:12; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 12, x17, x15, 40, x18)

inst_1022:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2c8c6f and fs2 == 0 and fe2 == 0x7e and fm2 == 0x36efd8 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x769aff and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2c8c6f; op2val:0x3f36efd8; op3val:0x3ef69aff; valaddr_reg:x16; val_offset:24; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 24, x17, x15, 48, x18)

inst_1023:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2c8c6f and fs2 == 0 and fe2 == 0x7e and fm2 == 0x36efd8 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x769aff and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2c8c6f; op2val:0x3f36efd8; op3val:0x3ef69aff; valaddr_reg:x16; val_offset:36; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 36, x17, x15, 56, x18)

inst_1024:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2c8c6f and fs2 == 0 and fe2 == 0x7e and fm2 == 0x36efd8 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x769aff and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2c8c6f; op2val:0x3f36efd8; op3val:0x3ef69aff; valaddr_reg:x16; val_offset:48; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 48, x17, x15, 64, x18)

inst_1025:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2c8c6f and fs2 == 0 and fe2 == 0x7e and fm2 == 0x36efd8 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x769aff and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2c8c6f; op2val:0x3f36efd8; op3val:0x3ef69aff; valaddr_reg:x16; val_offset:60; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 60, x17, x15, 72, x18)

inst_1026:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0cb377 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4e95eb and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6315a0 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8cb377; op2val:0x3fce95eb; op3val:0x3ee315a0; valaddr_reg:x16; val_offset:72; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 72, x17, x15, 80, x18)

inst_1027:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0cb377 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4e95eb and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6315a0 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8cb377; op2val:0x3fce95eb; op3val:0x3ee315a0; valaddr_reg:x16; val_offset:84; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 84, x17, x15, 88, x18)

inst_1028:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0cb377 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4e95eb and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6315a0 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8cb377; op2val:0x3fce95eb; op3val:0x3ee315a0; valaddr_reg:x16; val_offset:96; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 96, x17, x15, 96, x18)

inst_1029:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0cb377 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4e95eb and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6315a0 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8cb377; op2val:0x3fce95eb; op3val:0x3ee315a0; valaddr_reg:x16; val_offset:108; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 108, x17, x15, 104, x18)

inst_1030:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0cb377 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4e95eb and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6315a0 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8cb377; op2val:0x3fce95eb; op3val:0x3ee315a0; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 112, x18)

inst_1031:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x53e115 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x22da5d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x06c92a and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f53e115; op2val:0x3f22da5d; op3val:0x3f06c92a; valaddr_reg:x16; val_offset:132; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 132, x17, x15, 120, x18)

inst_1032:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x53e115 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x22da5d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x06c92a and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f53e115; op2val:0x3f22da5d; op3val:0x3f06c92a; valaddr_reg:x16; val_offset:144; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 144, x17, x15, 128, x18)

inst_1033:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x53e115 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x22da5d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x06c92a and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f53e115; op2val:0x3f22da5d; op3val:0x3f06c92a; valaddr_reg:x16; val_offset:156; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 156, x17, x15, 136, x18)

inst_1034:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x53e115 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x22da5d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x06c92a and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f53e115; op2val:0x3f22da5d; op3val:0x3f06c92a; valaddr_reg:x16; val_offset:168; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 168, x17, x15, 144, x18)

inst_1035:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x53e115 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x22da5d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x06c92a and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f53e115; op2val:0x3f22da5d; op3val:0x3f06c92a; valaddr_reg:x16; val_offset:180; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 180, x17, x15, 152, x18)

inst_1036:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7efe47 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x4e761b and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4da642 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7efe47; op2val:0x3e4e761b; op3val:0x3e4da642; valaddr_reg:x16; val_offset:192; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 192, x17, x15, 160, x18)

inst_1037:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7efe47 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x4e761b and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4da642 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7efe47; op2val:0x3e4e761b; op3val:0x3e4da642; valaddr_reg:x16; val_offset:204; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 204, x17, x15, 168, x18)

inst_1038:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7efe47 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x4e761b and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4da642 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7efe47; op2val:0x3e4e761b; op3val:0x3e4da642; valaddr_reg:x16; val_offset:216; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 216, x17, x15, 176, x18)

inst_1039:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7efe47 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x4e761b and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4da642 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7efe47; op2val:0x3e4e761b; op3val:0x3e4da642; valaddr_reg:x16; val_offset:228; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 228, x17, x15, 184, x18)

inst_1040:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7efe47 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x4e761b and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4da642 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7efe47; op2val:0x3e4e761b; op3val:0x3e4da642; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 192, x18)

inst_1041:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0f53f9 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3ac285 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x511fd7 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0f53f9; op2val:0x3fbac285; op3val:0x3f511fd7; valaddr_reg:x16; val_offset:252; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 252, x17, x15, 200, x18)

inst_1042:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0f53f9 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3ac285 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x511fd7 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0f53f9; op2val:0x3fbac285; op3val:0x3f511fd7; valaddr_reg:x16; val_offset:264; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 264, x17, x15, 208, x18)

inst_1043:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0f53f9 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3ac285 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x511fd7 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0f53f9; op2val:0x3fbac285; op3val:0x3f511fd7; valaddr_reg:x16; val_offset:276; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 276, x17, x15, 216, x18)

inst_1044:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0f53f9 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3ac285 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x511fd7 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0f53f9; op2val:0x3fbac285; op3val:0x3f511fd7; valaddr_reg:x16; val_offset:288; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 288, x17, x15, 224, x18)

inst_1045:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0f53f9 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3ac285 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x511fd7 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0f53f9; op2val:0x3fbac285; op3val:0x3f511fd7; valaddr_reg:x16; val_offset:300; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 300, x17, x15, 232, x18)

inst_1046:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x73f6f1 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x03cd5e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7b3628 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef3f6f1; op2val:0x4003cd5e; op3val:0x3f7b3628; valaddr_reg:x16; val_offset:312; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 312, x17, x15, 240, x18)

inst_1047:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x73f6f1 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x03cd5e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7b3628 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef3f6f1; op2val:0x4003cd5e; op3val:0x3f7b3628; valaddr_reg:x16; val_offset:324; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 324, x17, x15, 248, x18)

inst_1048:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x73f6f1 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x03cd5e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7b3628 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef3f6f1; op2val:0x4003cd5e; op3val:0x3f7b3628; valaddr_reg:x16; val_offset:336; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 336, x17, x15, 256, x18)

inst_1049:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x73f6f1 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x03cd5e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7b3628 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef3f6f1; op2val:0x4003cd5e; op3val:0x3f7b3628; valaddr_reg:x16; val_offset:348; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 348, x17, x15, 264, x18)

inst_1050:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x73f6f1 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x03cd5e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7b3628 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef3f6f1; op2val:0x4003cd5e; op3val:0x3f7b3628; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 272, x18)

inst_1051:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7f27de and fs2 == 0 and fe2 == 0x7e and fm2 == 0x707fae and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6fb4a3 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eff27de; op2val:0x3f707fae; op3val:0x3eefb4a3; valaddr_reg:x16; val_offset:372; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 372, x17, x15, 280, x18)

inst_1052:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7f27de and fs2 == 0 and fe2 == 0x7e and fm2 == 0x707fae and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6fb4a3 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eff27de; op2val:0x3f707fae; op3val:0x3eefb4a3; valaddr_reg:x16; val_offset:384; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 384, x17, x15, 288, x18)

inst_1053:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7f27de and fs2 == 0 and fe2 == 0x7e and fm2 == 0x707fae and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6fb4a3 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eff27de; op2val:0x3f707fae; op3val:0x3eefb4a3; valaddr_reg:x16; val_offset:396; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 396, x17, x15, 296, x18)

inst_1054:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7f27de and fs2 == 0 and fe2 == 0x7e and fm2 == 0x707fae and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6fb4a3 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eff27de; op2val:0x3f707fae; op3val:0x3eefb4a3; valaddr_reg:x16; val_offset:408; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 408, x17, x15, 304, x18)

inst_1055:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7f27de and fs2 == 0 and fe2 == 0x7e and fm2 == 0x707fae and fs3 == 0 and fe3 == 0x7d and fm3 == 0x6fb4a3 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eff27de; op2val:0x3f707fae; op3val:0x3eefb4a3; valaddr_reg:x16; val_offset:420; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 420, x17, x15, 312, x18)

inst_1056:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1451b4 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x116c20 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x2881d9 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1451b4; op2val:0x3e116c20; op3val:0x3da881d9; valaddr_reg:x16; val_offset:432; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 432, x17, x15, 320, x18)

inst_1057:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1451b4 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x116c20 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x2881d9 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1451b4; op2val:0x3e116c20; op3val:0x3da881d9; valaddr_reg:x16; val_offset:444; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 444, x17, x15, 328, x18)

inst_1058:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1451b4 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x116c20 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x2881d9 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1451b4; op2val:0x3e116c20; op3val:0x3da881d9; valaddr_reg:x16; val_offset:456; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 456, x17, x15, 336, x18)

inst_1059:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1451b4 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x116c20 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x2881d9 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1451b4; op2val:0x3e116c20; op3val:0x3da881d9; valaddr_reg:x16; val_offset:468; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 468, x17, x15, 344, x18)

inst_1060:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1451b4 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x116c20 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x2881d9 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1451b4; op2val:0x3e116c20; op3val:0x3da881d9; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 352, x18)

inst_1061:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x55534f and fs2 == 0 and fe2 == 0x7c and fm2 == 0x6b357e and fs3 == 0 and fe3 == 0x7b and fm3 == 0x44000d and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed5534f; op2val:0x3e6b357e; op3val:0x3dc4000d; valaddr_reg:x16; val_offset:492; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 492, x17, x15, 360, x18)

inst_1062:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x55534f and fs2 == 0 and fe2 == 0x7c and fm2 == 0x6b357e and fs3 == 0 and fe3 == 0x7b and fm3 == 0x44000d and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed5534f; op2val:0x3e6b357e; op3val:0x3dc4000d; valaddr_reg:x16; val_offset:504; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 504, x17, x15, 368, x18)

inst_1063:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x55534f and fs2 == 0 and fe2 == 0x7c and fm2 == 0x6b357e and fs3 == 0 and fe3 == 0x7b and fm3 == 0x44000d and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed5534f; op2val:0x3e6b357e; op3val:0x3dc4000d; valaddr_reg:x16; val_offset:516; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 516, x17, x15, 376, x18)

inst_1064:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x55534f and fs2 == 0 and fe2 == 0x7c and fm2 == 0x6b357e and fs3 == 0 and fe3 == 0x7b and fm3 == 0x44000d and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed5534f; op2val:0x3e6b357e; op3val:0x3dc4000d; valaddr_reg:x16; val_offset:528; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 528, x17, x15, 384, x18)

inst_1065:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x55534f and fs2 == 0 and fe2 == 0x7c and fm2 == 0x6b357e and fs3 == 0 and fe3 == 0x7b and fm3 == 0x44000d and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed5534f; op2val:0x3e6b357e; op3val:0x3dc4000d; valaddr_reg:x16; val_offset:540; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 540, x17, x15, 392, x18)

inst_1066:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x256e69 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x56a69b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0ab5f6 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f256e69; op2val:0x3f56a69b; op3val:0x3f0ab5f6; valaddr_reg:x16; val_offset:552; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 552, x17, x15, 400, x18)

inst_1067:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x256e69 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x56a69b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0ab5f6 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f256e69; op2val:0x3f56a69b; op3val:0x3f0ab5f6; valaddr_reg:x16; val_offset:564; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 564, x17, x15, 408, x18)

inst_1068:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x256e69 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x56a69b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0ab5f6 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f256e69; op2val:0x3f56a69b; op3val:0x3f0ab5f6; valaddr_reg:x16; val_offset:576; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 576, x17, x15, 416, x18)

inst_1069:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x256e69 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x56a69b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0ab5f6 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f256e69; op2val:0x3f56a69b; op3val:0x3f0ab5f6; valaddr_reg:x16; val_offset:588; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 588, x17, x15, 424, x18)

inst_1070:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x256e69 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x56a69b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0ab5f6 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f256e69; op2val:0x3f56a69b; op3val:0x3f0ab5f6; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 432, x18)

inst_1071:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5e71f4 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x54156a and fs3 == 0 and fe3 == 0x7b and fm3 == 0x3848fa and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5e71f4; op2val:0x3dd4156a; op3val:0x3db848fa; valaddr_reg:x16; val_offset:612; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 612, x17, x15, 440, x18)

inst_1072:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5e71f4 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x54156a and fs3 == 0 and fe3 == 0x7b and fm3 == 0x3848fa and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5e71f4; op2val:0x3dd4156a; op3val:0x3db848fa; valaddr_reg:x16; val_offset:624; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 624, x17, x15, 448, x18)

inst_1073:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5e71f4 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x54156a and fs3 == 0 and fe3 == 0x7b and fm3 == 0x3848fa and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5e71f4; op2val:0x3dd4156a; op3val:0x3db848fa; valaddr_reg:x16; val_offset:636; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 636, x17, x15, 456, x18)

inst_1074:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5e71f4 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x54156a and fs3 == 0 and fe3 == 0x7b and fm3 == 0x3848fa and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5e71f4; op2val:0x3dd4156a; op3val:0x3db848fa; valaddr_reg:x16; val_offset:648; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 648, x17, x15, 464, x18)

inst_1075:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5e71f4 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x54156a and fs3 == 0 and fe3 == 0x7b and fm3 == 0x3848fa and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5e71f4; op2val:0x3dd4156a; op3val:0x3db848fa; valaddr_reg:x16; val_offset:660; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 660, x17, x15, 472, x18)

inst_1076:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3d9a44 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x48d160 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x14bb97 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3d9a44; op2val:0x3f48d160; op3val:0x3f14bb97; valaddr_reg:x16; val_offset:672; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 672, x17, x15, 480, x18)

inst_1077:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3d9a44 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x48d160 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x14bb97 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3d9a44; op2val:0x3f48d160; op3val:0x3f14bb97; valaddr_reg:x16; val_offset:684; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 684, x17, x15, 488, x18)

inst_1078:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3d9a44 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x48d160 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x14bb97 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3d9a44; op2val:0x3f48d160; op3val:0x3f14bb97; valaddr_reg:x16; val_offset:696; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 696, x17, x15, 496, x18)

inst_1079:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3d9a44 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x48d160 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x14bb97 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3d9a44; op2val:0x3f48d160; op3val:0x3f14bb97; valaddr_reg:x16; val_offset:708; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 708, x17, x15, 504, x18)

inst_1080:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3d9a44 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x48d160 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x14bb97 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3d9a44; op2val:0x3f48d160; op3val:0x3f14bb97; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 512, x18)

inst_1081:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x426c02 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0b6781 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x53be81 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f426c02; op2val:0x3f0b6781; op3val:0x3ed3be81; valaddr_reg:x16; val_offset:732; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 732, x17, x15, 520, x18)

inst_1082:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x426c02 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0b6781 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x53be81 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f426c02; op2val:0x3f0b6781; op3val:0x3ed3be81; valaddr_reg:x16; val_offset:744; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 744, x17, x15, 528, x18)

inst_1083:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x426c02 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0b6781 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x53be81 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f426c02; op2val:0x3f0b6781; op3val:0x3ed3be81; valaddr_reg:x16; val_offset:756; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 756, x17, x15, 536, x18)

inst_1084:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x426c02 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0b6781 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x53be81 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f426c02; op2val:0x3f0b6781; op3val:0x3ed3be81; valaddr_reg:x16; val_offset:768; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 768, x17, x15, 544, x18)

inst_1085:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x426c02 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0b6781 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x53be81 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f426c02; op2val:0x3f0b6781; op3val:0x3ed3be81; valaddr_reg:x16; val_offset:780; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 780, x17, x15, 552, x18)

inst_1086:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3f87c0 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x71ed07 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x350023 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3f87c0; op2val:0x3f71ed07; op3val:0x3f350023; valaddr_reg:x16; val_offset:792; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 792, x17, x15, 560, x18)

inst_1087:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3f87c0 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x71ed07 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x350023 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3f87c0; op2val:0x3f71ed07; op3val:0x3f350023; valaddr_reg:x16; val_offset:804; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 804, x17, x15, 568, x18)

inst_1088:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3f87c0 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x71ed07 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x350023 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3f87c0; op2val:0x3f71ed07; op3val:0x3f350023; valaddr_reg:x16; val_offset:816; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 816, x17, x15, 576, x18)

inst_1089:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3f87c0 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x71ed07 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x350023 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3f87c0; op2val:0x3f71ed07; op3val:0x3f350023; valaddr_reg:x16; val_offset:828; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 828, x17, x15, 584, x18)

inst_1090:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3f87c0 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x71ed07 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x350023 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3f87c0; op2val:0x3f71ed07; op3val:0x3f350023; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 592, x18)

inst_1091:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x32045b and fs2 == 0 and fe2 == 0x81 and fm2 == 0x1139a9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x49f921 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e32045b; op2val:0x409139a9; op3val:0x3f49f921; valaddr_reg:x16; val_offset:852; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 852, x17, x15, 600, x18)

inst_1092:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x32045b and fs2 == 0 and fe2 == 0x81 and fm2 == 0x1139a9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x49f921 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e32045b; op2val:0x409139a9; op3val:0x3f49f921; valaddr_reg:x16; val_offset:864; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 864, x17, x15, 608, x18)

inst_1093:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x32045b and fs2 == 0 and fe2 == 0x81 and fm2 == 0x1139a9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x49f921 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e32045b; op2val:0x409139a9; op3val:0x3f49f921; valaddr_reg:x16; val_offset:876; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 876, x17, x15, 616, x18)

inst_1094:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x32045b and fs2 == 0 and fe2 == 0x81 and fm2 == 0x1139a9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x49f921 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e32045b; op2val:0x409139a9; op3val:0x3f49f921; valaddr_reg:x16; val_offset:888; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 888, x17, x15, 624, x18)

inst_1095:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x32045b and fs2 == 0 and fe2 == 0x81 and fm2 == 0x1139a9 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x49f921 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e32045b; op2val:0x409139a9; op3val:0x3f49f921; valaddr_reg:x16; val_offset:900; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 900, x17, x15, 632, x18)

inst_1096:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x10f1dd and fs2 == 0 and fe2 == 0x7c and fm2 == 0x67f684 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x0355d2 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f10f1dd; op2val:0x3e67f684; op3val:0x3e0355d2; valaddr_reg:x16; val_offset:912; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 912, x17, x15, 640, x18)

inst_1097:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x10f1dd and fs2 == 0 and fe2 == 0x7c and fm2 == 0x67f684 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x0355d2 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f10f1dd; op2val:0x3e67f684; op3val:0x3e0355d2; valaddr_reg:x16; val_offset:924; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 924, x17, x15, 648, x18)

inst_1098:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x10f1dd and fs2 == 0 and fe2 == 0x7c and fm2 == 0x67f684 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x0355d2 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f10f1dd; op2val:0x3e67f684; op3val:0x3e0355d2; valaddr_reg:x16; val_offset:936; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 936, x17, x15, 656, x18)

inst_1099:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x10f1dd and fs2 == 0 and fe2 == 0x7c and fm2 == 0x67f684 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x0355d2 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f10f1dd; op2val:0x3e67f684; op3val:0x3e0355d2; valaddr_reg:x16; val_offset:948; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 948, x17, x15, 664, x18)

inst_1100:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x10f1dd and fs2 == 0 and fe2 == 0x7c and fm2 == 0x67f684 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x0355d2 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f10f1dd; op2val:0x3e67f684; op3val:0x3e0355d2; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 672, x18)

inst_1101:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7263f8 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x0f919e and fs3 == 0 and fe3 == 0x7b and fm3 == 0x07efb7 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef263f8; op2val:0x3e0f919e; op3val:0x3d87efb7; valaddr_reg:x16; val_offset:972; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 972, x17, x15, 680, x18)

inst_1102:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7263f8 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x0f919e and fs3 == 0 and fe3 == 0x7b and fm3 == 0x07efb7 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef263f8; op2val:0x3e0f919e; op3val:0x3d87efb7; valaddr_reg:x16; val_offset:984; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 984, x17, x15, 688, x18)

inst_1103:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7263f8 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x0f919e and fs3 == 0 and fe3 == 0x7b and fm3 == 0x07efb7 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef263f8; op2val:0x3e0f919e; op3val:0x3d87efb7; valaddr_reg:x16; val_offset:996; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 996, x17, x15, 696, x18)

inst_1104:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7263f8 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x0f919e and fs3 == 0 and fe3 == 0x7b and fm3 == 0x07efb7 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef263f8; op2val:0x3e0f919e; op3val:0x3d87efb7; valaddr_reg:x16; val_offset:1008; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1008, x17, x15, 704, x18)

inst_1105:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7263f8 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x0f919e and fs3 == 0 and fe3 == 0x7b and fm3 == 0x07efb7 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef263f8; op2val:0x3e0f919e; op3val:0x3d87efb7; valaddr_reg:x16; val_offset:1020; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1020, x17, x15, 712, x18)

inst_1106:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x6e77b9 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x408dc1 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x335dd7 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3cee77b9; op2val:0x41408dc1; op3val:0x3eb35dd7; valaddr_reg:x16; val_offset:1032; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1032, x17, x15, 720, x18)

inst_1107:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x6e77b9 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x408dc1 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x335dd7 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3cee77b9; op2val:0x41408dc1; op3val:0x3eb35dd7; valaddr_reg:x16; val_offset:1044; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1044, x17, x15, 728, x18)

inst_1108:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x6e77b9 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x408dc1 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x335dd7 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3cee77b9; op2val:0x41408dc1; op3val:0x3eb35dd7; valaddr_reg:x16; val_offset:1056; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1056, x17, x15, 736, x18)

inst_1109:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x6e77b9 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x408dc1 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x335dd7 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3cee77b9; op2val:0x41408dc1; op3val:0x3eb35dd7; valaddr_reg:x16; val_offset:1068; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1068, x17, x15, 744, x18)

inst_1110:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x6e77b9 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x408dc1 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x335dd7 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3cee77b9; op2val:0x41408dc1; op3val:0x3eb35dd7; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 752, x18)

inst_1111:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5e77d7 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1131f3 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7c5a93 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5e77d7; op2val:0x3f9131f3; op3val:0x3f7c5a93; valaddr_reg:x16; val_offset:1092; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1092, x17, x15, 760, x18)

inst_1112:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5e77d7 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1131f3 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7c5a93 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5e77d7; op2val:0x3f9131f3; op3val:0x3f7c5a93; valaddr_reg:x16; val_offset:1104; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1104, x17, x15, 768, x18)

inst_1113:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5e77d7 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1131f3 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7c5a93 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5e77d7; op2val:0x3f9131f3; op3val:0x3f7c5a93; valaddr_reg:x16; val_offset:1116; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1116, x17, x15, 776, x18)

inst_1114:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5e77d7 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1131f3 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7c5a93 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5e77d7; op2val:0x3f9131f3; op3val:0x3f7c5a93; valaddr_reg:x16; val_offset:1128; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1128, x17, x15, 784, x18)

inst_1115:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5e77d7 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1131f3 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7c5a93 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5e77d7; op2val:0x3f9131f3; op3val:0x3f7c5a93; valaddr_reg:x16; val_offset:1140; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1140, x17, x15, 792, x18)

inst_1116:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x264bb1 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x31deb9 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x671607 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f264bb1; op2val:0x3f31deb9; op3val:0x3ee71607; valaddr_reg:x16; val_offset:1152; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1152, x17, x15, 800, x18)

inst_1117:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x264bb1 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x31deb9 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x671607 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f264bb1; op2val:0x3f31deb9; op3val:0x3ee71607; valaddr_reg:x16; val_offset:1164; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1164, x17, x15, 808, x18)

inst_1118:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x264bb1 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x31deb9 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x671607 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f264bb1; op2val:0x3f31deb9; op3val:0x3ee71607; valaddr_reg:x16; val_offset:1176; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1176, x17, x15, 816, x18)

inst_1119:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x264bb1 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x31deb9 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x671607 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f264bb1; op2val:0x3f31deb9; op3val:0x3ee71607; valaddr_reg:x16; val_offset:1188; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1188, x17, x15, 824, x18)

inst_1120:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x264bb1 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x31deb9 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x671607 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f264bb1; op2val:0x3f31deb9; op3val:0x3ee71607; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 832, x18)

inst_1121:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x21556e and fs2 == 0 and fe2 == 0x83 and fm2 == 0x0b38ee and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2f7a87 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ca1556e; op2val:0x418b38ee; op3val:0x3eaf7a87; valaddr_reg:x16; val_offset:1212; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1212, x17, x15, 840, x18)

inst_1122:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x21556e and fs2 == 0 and fe2 == 0x83 and fm2 == 0x0b38ee and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2f7a87 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ca1556e; op2val:0x418b38ee; op3val:0x3eaf7a87; valaddr_reg:x16; val_offset:1224; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1224, x17, x15, 848, x18)

inst_1123:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x21556e and fs2 == 0 and fe2 == 0x83 and fm2 == 0x0b38ee and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2f7a87 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ca1556e; op2val:0x418b38ee; op3val:0x3eaf7a87; valaddr_reg:x16; val_offset:1236; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1236, x17, x15, 856, x18)

inst_1124:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x21556e and fs2 == 0 and fe2 == 0x83 and fm2 == 0x0b38ee and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2f7a87 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ca1556e; op2val:0x418b38ee; op3val:0x3eaf7a87; valaddr_reg:x16; val_offset:1248; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1248, x17, x15, 864, x18)

inst_1125:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x21556e and fs2 == 0 and fe2 == 0x83 and fm2 == 0x0b38ee and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2f7a87 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ca1556e; op2val:0x418b38ee; op3val:0x3eaf7a87; valaddr_reg:x16; val_offset:1260; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1260, x17, x15, 872, x18)

inst_1126:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5a9452 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x50113f and fs3 == 0 and fe3 == 0x7c and fm3 == 0x31a73c and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5a9452; op2val:0x3e50113f; op3val:0x3e31a73c; valaddr_reg:x16; val_offset:1272; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1272, x17, x15, 880, x18)

inst_1127:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5a9452 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x50113f and fs3 == 0 and fe3 == 0x7c and fm3 == 0x31a73c and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5a9452; op2val:0x3e50113f; op3val:0x3e31a73c; valaddr_reg:x16; val_offset:1284; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1284, x17, x15, 888, x18)

inst_1128:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5a9452 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x50113f and fs3 == 0 and fe3 == 0x7c and fm3 == 0x31a73c and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5a9452; op2val:0x3e50113f; op3val:0x3e31a73c; valaddr_reg:x16; val_offset:1296; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1296, x17, x15, 896, x18)

inst_1129:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5a9452 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x50113f and fs3 == 0 and fe3 == 0x7c and fm3 == 0x31a73c and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5a9452; op2val:0x3e50113f; op3val:0x3e31a73c; valaddr_reg:x16; val_offset:1308; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1308, x17, x15, 904, x18)

inst_1130:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5a9452 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x50113f and fs3 == 0 and fe3 == 0x7c and fm3 == 0x31a73c and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5a9452; op2val:0x3e50113f; op3val:0x3e31a73c; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 912, x18)

inst_1131:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x42dce7 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x022767 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x462458 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dc2dce7; op2val:0x40022767; op3val:0x3e462458; valaddr_reg:x16; val_offset:1332; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1332, x17, x15, 920, x18)

inst_1132:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x42dce7 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x022767 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x462458 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dc2dce7; op2val:0x40022767; op3val:0x3e462458; valaddr_reg:x16; val_offset:1344; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1344, x17, x15, 928, x18)

inst_1133:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x42dce7 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x022767 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x462458 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dc2dce7; op2val:0x40022767; op3val:0x3e462458; valaddr_reg:x16; val_offset:1356; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1356, x17, x15, 936, x18)

inst_1134:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x42dce7 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x022767 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x462458 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dc2dce7; op2val:0x40022767; op3val:0x3e462458; valaddr_reg:x16; val_offset:1368; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1368, x17, x15, 944, x18)

inst_1135:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x42dce7 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x022767 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x462458 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dc2dce7; op2val:0x40022767; op3val:0x3e462458; valaddr_reg:x16; val_offset:1380; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1380, x17, x15, 952, x18)

inst_1136:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5f7a69 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x78edcf and fs3 == 0 and fe3 == 0x7e and fm3 == 0x594e30 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5f7a69; op2val:0x3f78edcf; op3val:0x3f594e30; valaddr_reg:x16; val_offset:1392; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1392, x17, x15, 960, x18)

inst_1137:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5f7a69 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x78edcf and fs3 == 0 and fe3 == 0x7e and fm3 == 0x594e30 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5f7a69; op2val:0x3f78edcf; op3val:0x3f594e30; valaddr_reg:x16; val_offset:1404; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1404, x17, x15, 968, x18)

inst_1138:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5f7a69 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x78edcf and fs3 == 0 and fe3 == 0x7e and fm3 == 0x594e30 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5f7a69; op2val:0x3f78edcf; op3val:0x3f594e30; valaddr_reg:x16; val_offset:1416; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1416, x17, x15, 976, x18)

inst_1139:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5f7a69 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x78edcf and fs3 == 0 and fe3 == 0x7e and fm3 == 0x594e30 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5f7a69; op2val:0x3f78edcf; op3val:0x3f594e30; valaddr_reg:x16; val_offset:1428; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1428, x17, x15, 984, x18)

inst_1140:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5f7a69 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x78edcf and fs3 == 0 and fe3 == 0x7e and fm3 == 0x594e30 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5f7a69; op2val:0x3f78edcf; op3val:0x3f594e30; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 992, x18)

inst_1141:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0ce730 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x41057e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x547aa3 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8ce730; op2val:0x4041057e; op3val:0x3f547aa3; valaddr_reg:x16; val_offset:1452; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1452, x17, x15, 1000, x18)

inst_1142:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0ce730 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x41057e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x547aa3 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8ce730; op2val:0x4041057e; op3val:0x3f547aa3; valaddr_reg:x16; val_offset:1464; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1464, x17, x15, 1008, x18)

inst_1143:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0ce730 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x41057e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x547aa3 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8ce730; op2val:0x4041057e; op3val:0x3f547aa3; valaddr_reg:x16; val_offset:1476; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1476, x17, x15, 1016, x18)

inst_1144:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0ce730 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x41057e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x547aa3 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8ce730; op2val:0x4041057e; op3val:0x3f547aa3; valaddr_reg:x16; val_offset:1488; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1488, x17, x15, 1024, x18)

inst_1145:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0ce730 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x41057e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x547aa3 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8ce730; op2val:0x4041057e; op3val:0x3f547aa3; valaddr_reg:x16; val_offset:1500; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1500, x17, x15, 1032, x18)

inst_1146:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x193eb6 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x360530 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x59eb61 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f193eb6; op2val:0x3db60530; op3val:0x3d59eb61; valaddr_reg:x16; val_offset:1512; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1512, x17, x15, 1040, x18)

inst_1147:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x193eb6 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x360530 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x59eb61 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f193eb6; op2val:0x3db60530; op3val:0x3d59eb61; valaddr_reg:x16; val_offset:1524; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1524, x17, x15, 1048, x18)

inst_1148:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x193eb6 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x360530 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x59eb61 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f193eb6; op2val:0x3db60530; op3val:0x3d59eb61; valaddr_reg:x16; val_offset:1536; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1536, x17, x15, 1056, x18)

inst_1149:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x193eb6 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x360530 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x59eb61 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f193eb6; op2val:0x3db60530; op3val:0x3d59eb61; valaddr_reg:x16; val_offset:1548; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1548, x17, x15, 1064, x18)

inst_1150:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x193eb6 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x360530 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x59eb61 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f193eb6; op2val:0x3db60530; op3val:0x3d59eb61; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1072, x18)

inst_1151:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x682ef9 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x2a87c4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1aaa54 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ce82ef9; op2val:0x41aa87c4; op3val:0x3f1aaa54; valaddr_reg:x16; val_offset:1572; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1572, x17, x15, 1080, x18)

inst_1152:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x682ef9 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x2a87c4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1aaa54 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ce82ef9; op2val:0x41aa87c4; op3val:0x3f1aaa54; valaddr_reg:x16; val_offset:1584; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1584, x17, x15, 1088, x18)

inst_1153:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x682ef9 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x2a87c4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1aaa54 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ce82ef9; op2val:0x41aa87c4; op3val:0x3f1aaa54; valaddr_reg:x16; val_offset:1596; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1596, x17, x15, 1096, x18)

inst_1154:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x682ef9 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x2a87c4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1aaa54 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ce82ef9; op2val:0x41aa87c4; op3val:0x3f1aaa54; valaddr_reg:x16; val_offset:1608; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1608, x17, x15, 1104, x18)

inst_1155:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x682ef9 and fs2 == 0 and fe2 == 0x83 and fm2 == 0x2a87c4 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1aaa54 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ce82ef9; op2val:0x41aa87c4; op3val:0x3f1aaa54; valaddr_reg:x16; val_offset:1620; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1620, x17, x15, 1112, x18)

inst_1156:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2ae027 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x18c7cc and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4bf4e8 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2ae027; op2val:0x3e98c7cc; op3val:0x3e4bf4e8; valaddr_reg:x16; val_offset:1632; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1632, x17, x15, 1120, x18)

inst_1157:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2ae027 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x18c7cc and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4bf4e8 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2ae027; op2val:0x3e98c7cc; op3val:0x3e4bf4e8; valaddr_reg:x16; val_offset:1644; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1644, x17, x15, 1128, x18)

inst_1158:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2ae027 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x18c7cc and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4bf4e8 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2ae027; op2val:0x3e98c7cc; op3val:0x3e4bf4e8; valaddr_reg:x16; val_offset:1656; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1656, x17, x15, 1136, x18)

inst_1159:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2ae027 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x18c7cc and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4bf4e8 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2ae027; op2val:0x3e98c7cc; op3val:0x3e4bf4e8; valaddr_reg:x16; val_offset:1668; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1668, x17, x15, 1144, x18)

inst_1160:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2ae027 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x18c7cc and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4bf4e8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2ae027; op2val:0x3e98c7cc; op3val:0x3e4bf4e8; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1152, x18)

inst_1161:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x524c66 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x036cc2 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x57ece1 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f524c66; op2val:0x3e836cc2; op3val:0x3e57ece1; valaddr_reg:x16; val_offset:1692; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1692, x17, x15, 1160, x18)

inst_1162:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x524c66 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x036cc2 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x57ece1 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f524c66; op2val:0x3e836cc2; op3val:0x3e57ece1; valaddr_reg:x16; val_offset:1704; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1704, x17, x15, 1168, x18)

inst_1163:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x524c66 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x036cc2 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x57ece1 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f524c66; op2val:0x3e836cc2; op3val:0x3e57ece1; valaddr_reg:x16; val_offset:1716; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1716, x17, x15, 1176, x18)

inst_1164:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x524c66 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x036cc2 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x57ece1 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f524c66; op2val:0x3e836cc2; op3val:0x3e57ece1; valaddr_reg:x16; val_offset:1728; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1728, x17, x15, 1184, x18)

inst_1165:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x524c66 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x036cc2 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x57ece1 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f524c66; op2val:0x3e836cc2; op3val:0x3e57ece1; valaddr_reg:x16; val_offset:1740; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1740, x17, x15, 1192, x18)

inst_1166:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x7fdb2d and fs2 == 0 and fe2 == 0x80 and fm2 == 0x05b2e0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x059fa5 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e7fdb2d; op2val:0x4005b2e0; op3val:0x3f059fa5; valaddr_reg:x16; val_offset:1752; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1752, x17, x15, 1200, x18)

inst_1167:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x7fdb2d and fs2 == 0 and fe2 == 0x80 and fm2 == 0x05b2e0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x059fa5 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e7fdb2d; op2val:0x4005b2e0; op3val:0x3f059fa5; valaddr_reg:x16; val_offset:1764; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1764, x17, x15, 1208, x18)

inst_1168:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x7fdb2d and fs2 == 0 and fe2 == 0x80 and fm2 == 0x05b2e0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x059fa5 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e7fdb2d; op2val:0x4005b2e0; op3val:0x3f059fa5; valaddr_reg:x16; val_offset:1776; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1776, x17, x15, 1216, x18)

inst_1169:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x7fdb2d and fs2 == 0 and fe2 == 0x80 and fm2 == 0x05b2e0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x059fa5 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e7fdb2d; op2val:0x4005b2e0; op3val:0x3f059fa5; valaddr_reg:x16; val_offset:1788; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1788, x17, x15, 1224, x18)

inst_1170:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x7fdb2d and fs2 == 0 and fe2 == 0x80 and fm2 == 0x05b2e0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x059fa5 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e7fdb2d; op2val:0x4005b2e0; op3val:0x3f059fa5; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1232, x18)

inst_1171:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x38c6c3 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1a6ca8 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x5eebfe and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3db8c6c3; op2val:0x401a6ca8; op3val:0x3e5eebfe; valaddr_reg:x16; val_offset:1812; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1812, x17, x15, 1240, x18)

inst_1172:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x38c6c3 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1a6ca8 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x5eebfe and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3db8c6c3; op2val:0x401a6ca8; op3val:0x3e5eebfe; valaddr_reg:x16; val_offset:1824; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1824, x17, x15, 1248, x18)

inst_1173:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x38c6c3 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1a6ca8 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x5eebfe and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3db8c6c3; op2val:0x401a6ca8; op3val:0x3e5eebfe; valaddr_reg:x16; val_offset:1836; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1836, x17, x15, 1256, x18)

inst_1174:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x38c6c3 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1a6ca8 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x5eebfe and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3db8c6c3; op2val:0x401a6ca8; op3val:0x3e5eebfe; valaddr_reg:x16; val_offset:1848; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1848, x17, x15, 1264, x18)

inst_1175:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x38c6c3 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1a6ca8 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x5eebfe and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3db8c6c3; op2val:0x401a6ca8; op3val:0x3e5eebfe; valaddr_reg:x16; val_offset:1860; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1860, x17, x15, 1272, x18)

inst_1176:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6a4bf5 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x3de0b0 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2dc7b7 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6a4bf5; op2val:0x3ebde0b0; op3val:0x3eadc7b7; valaddr_reg:x16; val_offset:1872; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1872, x17, x15, 1280, x18)

inst_1177:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6a4bf5 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x3de0b0 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2dc7b7 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6a4bf5; op2val:0x3ebde0b0; op3val:0x3eadc7b7; valaddr_reg:x16; val_offset:1884; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1884, x17, x15, 1288, x18)

inst_1178:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6a4bf5 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x3de0b0 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2dc7b7 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6a4bf5; op2val:0x3ebde0b0; op3val:0x3eadc7b7; valaddr_reg:x16; val_offset:1896; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1896, x17, x15, 1296, x18)

inst_1179:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6a4bf5 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x3de0b0 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2dc7b7 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6a4bf5; op2val:0x3ebde0b0; op3val:0x3eadc7b7; valaddr_reg:x16; val_offset:1908; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1908, x17, x15, 1304, x18)

inst_1180:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6a4bf5 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x3de0b0 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2dc7b7 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6a4bf5; op2val:0x3ebde0b0; op3val:0x3eadc7b7; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1312, x18)

inst_1181:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x31acdc and fs2 == 0 and fe2 == 0x7e and fm2 == 0x13cdcc and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4d2a30 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb1acdc; op2val:0x3f13cdcc; op3val:0x3e4d2a30; valaddr_reg:x16; val_offset:1932; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1932, x17, x15, 1320, x18)

inst_1182:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x31acdc and fs2 == 0 and fe2 == 0x7e and fm2 == 0x13cdcc and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4d2a30 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb1acdc; op2val:0x3f13cdcc; op3val:0x3e4d2a30; valaddr_reg:x16; val_offset:1944; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1944, x17, x15, 1328, x18)

inst_1183:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x31acdc and fs2 == 0 and fe2 == 0x7e and fm2 == 0x13cdcc and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4d2a30 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb1acdc; op2val:0x3f13cdcc; op3val:0x3e4d2a30; valaddr_reg:x16; val_offset:1956; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1956, x17, x15, 1336, x18)

inst_1184:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x31acdc and fs2 == 0 and fe2 == 0x7e and fm2 == 0x13cdcc and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4d2a30 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb1acdc; op2val:0x3f13cdcc; op3val:0x3e4d2a30; valaddr_reg:x16; val_offset:1968; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1968, x17, x15, 1344, x18)

inst_1185:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x31acdc and fs2 == 0 and fe2 == 0x7e and fm2 == 0x13cdcc and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4d2a30 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb1acdc; op2val:0x3f13cdcc; op3val:0x3e4d2a30; valaddr_reg:x16; val_offset:1980; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1980, x17, x15, 1352, x18)

inst_1186:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2364de and fs2 == 0 and fe2 == 0x80 and fm2 == 0x50c768 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x05413a and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e2364de; op2val:0x4050c768; op3val:0x3f05413a; valaddr_reg:x16; val_offset:1992; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1992, x17, x15, 1360, x18)

inst_1187:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2364de and fs2 == 0 and fe2 == 0x80 and fm2 == 0x50c768 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x05413a and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e2364de; op2val:0x4050c768; op3val:0x3f05413a; valaddr_reg:x16; val_offset:2004; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 2004, x17, x15, 1368, x18)

inst_1188:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2364de and fs2 == 0 and fe2 == 0x80 and fm2 == 0x50c768 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x05413a and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e2364de; op2val:0x4050c768; op3val:0x3f05413a; valaddr_reg:x16; val_offset:2016; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 2016, x17, x15, 1376, x18)

inst_1189:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2364de and fs2 == 0 and fe2 == 0x80 and fm2 == 0x50c768 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x05413a and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e2364de; op2val:0x4050c768; op3val:0x3f05413a; valaddr_reg:x16; val_offset:2028; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 2028, x17, x15, 1384, x18)
addi x16,x16,2040

inst_1190:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2364de and fs2 == 0 and fe2 == 0x80 and fm2 == 0x50c768 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x05413a and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e2364de; op2val:0x4050c768; op3val:0x3f05413a; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 1392, x18)

inst_1191:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x407a5e and fs2 == 0 and fe2 == 0x7d and fm2 == 0x07c63a and fs3 == 0 and fe3 == 0x7b and fm3 == 0x4c2b24 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec07a5e; op2val:0x3e87c63a; op3val:0x3dcc2b24; valaddr_reg:x16; val_offset:12; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 12, x17, x15, 1400, x18)

inst_1192:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x407a5e and fs2 == 0 and fe2 == 0x7d and fm2 == 0x07c63a and fs3 == 0 and fe3 == 0x7b and fm3 == 0x4c2b24 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec07a5e; op2val:0x3e87c63a; op3val:0x3dcc2b24; valaddr_reg:x16; val_offset:24; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 24, x17, x15, 1408, x18)

inst_1193:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x407a5e and fs2 == 0 and fe2 == 0x7d and fm2 == 0x07c63a and fs3 == 0 and fe3 == 0x7b and fm3 == 0x4c2b24 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec07a5e; op2val:0x3e87c63a; op3val:0x3dcc2b24; valaddr_reg:x16; val_offset:36; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 36, x17, x15, 1416, x18)

inst_1194:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x407a5e and fs2 == 0 and fe2 == 0x7d and fm2 == 0x07c63a and fs3 == 0 and fe3 == 0x7b and fm3 == 0x4c2b24 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec07a5e; op2val:0x3e87c63a; op3val:0x3dcc2b24; valaddr_reg:x16; val_offset:48; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 48, x17, x15, 1424, x18)

inst_1195:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x407a5e and fs2 == 0 and fe2 == 0x7d and fm2 == 0x07c63a and fs3 == 0 and fe3 == 0x7b and fm3 == 0x4c2b24 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec07a5e; op2val:0x3e87c63a; op3val:0x3dcc2b24; valaddr_reg:x16; val_offset:60; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 60, x17, x15, 1432, x18)

inst_1196:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4da4aa and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7d8e7a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4bae2f and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4da4aa; op2val:0x3f7d8e7a; op3val:0x3f4bae2f; valaddr_reg:x16; val_offset:72; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 72, x17, x15, 1440, x18)

inst_1197:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4da4aa and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7d8e7a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4bae2f and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4da4aa; op2val:0x3f7d8e7a; op3val:0x3f4bae2f; valaddr_reg:x16; val_offset:84; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 84, x17, x15, 1448, x18)

inst_1198:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4da4aa and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7d8e7a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4bae2f and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4da4aa; op2val:0x3f7d8e7a; op3val:0x3f4bae2f; valaddr_reg:x16; val_offset:96; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 96, x17, x15, 1456, x18)

inst_1199:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4da4aa and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7d8e7a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4bae2f and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4da4aa; op2val:0x3f7d8e7a; op3val:0x3f4bae2f; valaddr_reg:x16; val_offset:108; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 108, x17, x15, 1464, x18)

inst_1200:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4da4aa and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7d8e7a and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4bae2f and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4da4aa; op2val:0x3f7d8e7a; op3val:0x3f4bae2f; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 1472, x18)

inst_1201:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x478fc7 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7de756 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x45ed6e and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f478fc7; op2val:0x3f7de756; op3val:0x3f45ed6e; valaddr_reg:x16; val_offset:132; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 132, x17, x15, 1480, x18)

inst_1202:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x478fc7 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7de756 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x45ed6e and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f478fc7; op2val:0x3f7de756; op3val:0x3f45ed6e; valaddr_reg:x16; val_offset:144; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 144, x17, x15, 1488, x18)

inst_1203:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x478fc7 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7de756 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x45ed6e and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f478fc7; op2val:0x3f7de756; op3val:0x3f45ed6e; valaddr_reg:x16; val_offset:156; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 156, x17, x15, 1496, x18)

inst_1204:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x478fc7 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7de756 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x45ed6e and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f478fc7; op2val:0x3f7de756; op3val:0x3f45ed6e; valaddr_reg:x16; val_offset:168; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 168, x17, x15, 1504, x18)

inst_1205:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x478fc7 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7de756 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x45ed6e and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f478fc7; op2val:0x3f7de756; op3val:0x3f45ed6e; valaddr_reg:x16; val_offset:180; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 180, x17, x15, 1512, x18)

inst_1206:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x385142 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x61e910 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x22a738 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d385142; op2val:0x4161e910; op3val:0x3f22a738; valaddr_reg:x16; val_offset:192; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 192, x17, x15, 1520, x18)

inst_1207:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x385142 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x61e910 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x22a738 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d385142; op2val:0x4161e910; op3val:0x3f22a738; valaddr_reg:x16; val_offset:204; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 204, x17, x15, 1528, x18)

inst_1208:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x385142 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x61e910 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x22a738 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d385142; op2val:0x4161e910; op3val:0x3f22a738; valaddr_reg:x16; val_offset:216; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 216, x17, x15, 1536, x18)

inst_1209:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x385142 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x61e910 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x22a738 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d385142; op2val:0x4161e910; op3val:0x3f22a738; valaddr_reg:x16; val_offset:228; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 228, x17, x15, 1544, x18)

inst_1210:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x385142 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x61e910 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x22a738 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d385142; op2val:0x4161e910; op3val:0x3f22a738; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 1552, x18)

inst_1211:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x00fb07 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x427e95 and fs3 == 0 and fe3 == 0x78 and fm3 == 0x43fc05 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d80fb07; op2val:0x3e427e95; op3val:0x3c43fc05; valaddr_reg:x16; val_offset:252; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 252, x17, x15, 1560, x18)

inst_1212:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x00fb07 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x427e95 and fs3 == 0 and fe3 == 0x78 and fm3 == 0x43fc05 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d80fb07; op2val:0x3e427e95; op3val:0x3c43fc05; valaddr_reg:x16; val_offset:264; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 264, x17, x15, 1568, x18)

inst_1213:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x00fb07 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x427e95 and fs3 == 0 and fe3 == 0x78 and fm3 == 0x43fc05 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d80fb07; op2val:0x3e427e95; op3val:0x3c43fc05; valaddr_reg:x16; val_offset:276; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 276, x17, x15, 1576, x18)

inst_1214:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x00fb07 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x427e95 and fs3 == 0 and fe3 == 0x78 and fm3 == 0x43fc05 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d80fb07; op2val:0x3e427e95; op3val:0x3c43fc05; valaddr_reg:x16; val_offset:288; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 288, x17, x15, 1584, x18)

inst_1215:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x00fb07 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x427e95 and fs3 == 0 and fe3 == 0x78 and fm3 == 0x43fc05 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d80fb07; op2val:0x3e427e95; op3val:0x3c43fc05; valaddr_reg:x16; val_offset:300; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 300, x17, x15, 1592, x18)

inst_1216:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x321d3f and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4b6398 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0d827c and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d321d3f; op2val:0x414b6398; op3val:0x3f0d827c; valaddr_reg:x16; val_offset:312; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 312, x17, x15, 1600, x18)

inst_1217:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x321d3f and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4b6398 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0d827c and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d321d3f; op2val:0x414b6398; op3val:0x3f0d827c; valaddr_reg:x16; val_offset:324; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 324, x17, x15, 1608, x18)

inst_1218:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x321d3f and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4b6398 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0d827c and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d321d3f; op2val:0x414b6398; op3val:0x3f0d827c; valaddr_reg:x16; val_offset:336; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 336, x17, x15, 1616, x18)

inst_1219:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x321d3f and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4b6398 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0d827c and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d321d3f; op2val:0x414b6398; op3val:0x3f0d827c; valaddr_reg:x16; val_offset:348; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 348, x17, x15, 1624, x18)

inst_1220:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x321d3f and fs2 == 0 and fe2 == 0x82 and fm2 == 0x4b6398 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0d827c and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d321d3f; op2val:0x414b6398; op3val:0x3f0d827c; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 1632, x18)

inst_1221:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3da6bf and fs2 == 0 and fe2 == 0x7d and fm2 == 0x548125 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1d6dc3 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3da6bf; op2val:0x3ed48125; op3val:0x3e9d6dc3; valaddr_reg:x16; val_offset:372; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 372, x17, x15, 1640, x18)

inst_1222:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3da6bf and fs2 == 0 and fe2 == 0x7d and fm2 == 0x548125 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1d6dc3 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3da6bf; op2val:0x3ed48125; op3val:0x3e9d6dc3; valaddr_reg:x16; val_offset:384; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 384, x17, x15, 1648, x18)

inst_1223:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3da6bf and fs2 == 0 and fe2 == 0x7d and fm2 == 0x548125 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1d6dc3 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3da6bf; op2val:0x3ed48125; op3val:0x3e9d6dc3; valaddr_reg:x16; val_offset:396; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 396, x17, x15, 1656, x18)

inst_1224:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3da6bf and fs2 == 0 and fe2 == 0x7d and fm2 == 0x548125 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1d6dc3 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3da6bf; op2val:0x3ed48125; op3val:0x3e9d6dc3; valaddr_reg:x16; val_offset:408; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 408, x17, x15, 1664, x18)

inst_1225:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3da6bf and fs2 == 0 and fe2 == 0x7d and fm2 == 0x548125 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1d6dc3 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3da6bf; op2val:0x3ed48125; op3val:0x3e9d6dc3; valaddr_reg:x16; val_offset:420; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 420, x17, x15, 1672, x18)

inst_1226:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x78d91d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x3dc53e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x387806 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f78d91d; op2val:0x3f3dc53e; op3val:0x3f387806; valaddr_reg:x16; val_offset:432; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 432, x17, x15, 1680, x18)

inst_1227:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x78d91d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x3dc53e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x387806 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f78d91d; op2val:0x3f3dc53e; op3val:0x3f387806; valaddr_reg:x16; val_offset:444; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 444, x17, x15, 1688, x18)

inst_1228:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x78d91d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x3dc53e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x387806 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f78d91d; op2val:0x3f3dc53e; op3val:0x3f387806; valaddr_reg:x16; val_offset:456; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 456, x17, x15, 1696, x18)

inst_1229:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x78d91d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x3dc53e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x387806 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f78d91d; op2val:0x3f3dc53e; op3val:0x3f387806; valaddr_reg:x16; val_offset:468; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 468, x17, x15, 1704, x18)

inst_1230:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x78d91d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x3dc53e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x387806 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f78d91d; op2val:0x3f3dc53e; op3val:0x3f387806; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1712, x18)

inst_1231:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x24f9da and fs2 == 0 and fe2 == 0x7f and fm2 == 0x40dde1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7894c1 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f24f9da; op2val:0x3fc0dde1; op3val:0x3f7894c1; valaddr_reg:x16; val_offset:492; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 492, x17, x15, 1720, x18)

inst_1232:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x24f9da and fs2 == 0 and fe2 == 0x7f and fm2 == 0x40dde1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7894c1 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f24f9da; op2val:0x3fc0dde1; op3val:0x3f7894c1; valaddr_reg:x16; val_offset:504; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 504, x17, x15, 1728, x18)

inst_1233:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x24f9da and fs2 == 0 and fe2 == 0x7f and fm2 == 0x40dde1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7894c1 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f24f9da; op2val:0x3fc0dde1; op3val:0x3f7894c1; valaddr_reg:x16; val_offset:516; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 516, x17, x15, 1736, x18)

inst_1234:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x24f9da and fs2 == 0 and fe2 == 0x7f and fm2 == 0x40dde1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7894c1 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f24f9da; op2val:0x3fc0dde1; op3val:0x3f7894c1; valaddr_reg:x16; val_offset:528; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 528, x17, x15, 1744, x18)

inst_1235:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x24f9da and fs2 == 0 and fe2 == 0x7f and fm2 == 0x40dde1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7894c1 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f24f9da; op2val:0x3fc0dde1; op3val:0x3f7894c1; valaddr_reg:x16; val_offset:540; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 540, x17, x15, 1752, x18)

inst_1236:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x45f466 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1fb179 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x76f80e and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f45f466; op2val:0x3f1fb179; op3val:0x3ef6f80e; valaddr_reg:x16; val_offset:552; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 552, x17, x15, 1760, x18)

inst_1237:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x45f466 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1fb179 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x76f80e and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f45f466; op2val:0x3f1fb179; op3val:0x3ef6f80e; valaddr_reg:x16; val_offset:564; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 564, x17, x15, 1768, x18)

inst_1238:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x45f466 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1fb179 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x76f80e and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f45f466; op2val:0x3f1fb179; op3val:0x3ef6f80e; valaddr_reg:x16; val_offset:576; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 576, x17, x15, 1776, x18)

inst_1239:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x45f466 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1fb179 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x76f80e and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f45f466; op2val:0x3f1fb179; op3val:0x3ef6f80e; valaddr_reg:x16; val_offset:588; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 588, x17, x15, 1784, x18)

inst_1240:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x45f466 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1fb179 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x76f80e and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f45f466; op2val:0x3f1fb179; op3val:0x3ef6f80e; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1792, x18)

inst_1241:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x3a06ed and fs2 == 0 and fe2 == 0x7f and fm2 == 0x37481f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x052f5d and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e3a06ed; op2val:0x3fb7481f; op3val:0x3e852f5d; valaddr_reg:x16; val_offset:612; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 612, x17, x15, 1800, x18)

inst_1242:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x3a06ed and fs2 == 0 and fe2 == 0x7f and fm2 == 0x37481f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x052f5d and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e3a06ed; op2val:0x3fb7481f; op3val:0x3e852f5d; valaddr_reg:x16; val_offset:624; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 624, x17, x15, 1808, x18)

inst_1243:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x3a06ed and fs2 == 0 and fe2 == 0x7f and fm2 == 0x37481f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x052f5d and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e3a06ed; op2val:0x3fb7481f; op3val:0x3e852f5d; valaddr_reg:x16; val_offset:636; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 636, x17, x15, 1816, x18)

inst_1244:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x3a06ed and fs2 == 0 and fe2 == 0x7f and fm2 == 0x37481f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x052f5d and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e3a06ed; op2val:0x3fb7481f; op3val:0x3e852f5d; valaddr_reg:x16; val_offset:648; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 648, x17, x15, 1824, x18)

inst_1245:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x3a06ed and fs2 == 0 and fe2 == 0x7f and fm2 == 0x37481f and fs3 == 0 and fe3 == 0x7d and fm3 == 0x052f5d and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e3a06ed; op2val:0x3fb7481f; op3val:0x3e852f5d; valaddr_reg:x16; val_offset:660; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 660, x17, x15, 1832, x18)

inst_1246:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x16e879 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x286e71 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x469355 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e16e879; op2val:0x3fa86e71; op3val:0x3e469355; valaddr_reg:x16; val_offset:672; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 672, x17, x15, 1840, x18)

inst_1247:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x16e879 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x286e71 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x469355 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e16e879; op2val:0x3fa86e71; op3val:0x3e469355; valaddr_reg:x16; val_offset:684; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 684, x17, x15, 1848, x18)

inst_1248:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x16e879 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x286e71 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x469355 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e16e879; op2val:0x3fa86e71; op3val:0x3e469355; valaddr_reg:x16; val_offset:696; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 696, x17, x15, 1856, x18)

inst_1249:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x16e879 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x286e71 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x469355 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e16e879; op2val:0x3fa86e71; op3val:0x3e469355; valaddr_reg:x16; val_offset:708; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 708, x17, x15, 1864, x18)

inst_1250:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x16e879 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x286e71 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x469355 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e16e879; op2val:0x3fa86e71; op3val:0x3e469355; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1872, x18)

inst_1251:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x410332 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x23c8b6 and fs3 == 0 and fe3 == 0x78 and fm3 == 0x76f8b9 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e410332; op2val:0x3da3c8b6; op3val:0x3c76f8b9; valaddr_reg:x16; val_offset:732; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 732, x17, x15, 1880, x18)

inst_1252:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x410332 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x23c8b6 and fs3 == 0 and fe3 == 0x78 and fm3 == 0x76f8b9 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e410332; op2val:0x3da3c8b6; op3val:0x3c76f8b9; valaddr_reg:x16; val_offset:744; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 744, x17, x15, 1888, x18)

inst_1253:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x410332 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x23c8b6 and fs3 == 0 and fe3 == 0x78 and fm3 == 0x76f8b9 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e410332; op2val:0x3da3c8b6; op3val:0x3c76f8b9; valaddr_reg:x16; val_offset:756; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 756, x17, x15, 1896, x18)

inst_1254:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x410332 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x23c8b6 and fs3 == 0 and fe3 == 0x78 and fm3 == 0x76f8b9 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e410332; op2val:0x3da3c8b6; op3val:0x3c76f8b9; valaddr_reg:x16; val_offset:768; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 768, x17, x15, 1904, x18)

inst_1255:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x410332 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x23c8b6 and fs3 == 0 and fe3 == 0x78 and fm3 == 0x76f8b9 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e410332; op2val:0x3da3c8b6; op3val:0x3c76f8b9; valaddr_reg:x16; val_offset:780; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 780, x17, x15, 1912, x18)

inst_1256:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2b9b13 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x145c11 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x46e6bd and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2b9b13; op2val:0x3f945c11; op3val:0x3f46e6bd; valaddr_reg:x16; val_offset:792; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 792, x17, x15, 1920, x18)

inst_1257:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2b9b13 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x145c11 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x46e6bd and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2b9b13; op2val:0x3f945c11; op3val:0x3f46e6bd; valaddr_reg:x16; val_offset:804; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 804, x17, x15, 1928, x18)

inst_1258:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2b9b13 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x145c11 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x46e6bd and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2b9b13; op2val:0x3f945c11; op3val:0x3f46e6bd; valaddr_reg:x16; val_offset:816; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 816, x17, x15, 1936, x18)

inst_1259:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2b9b13 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x145c11 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x46e6bd and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2b9b13; op2val:0x3f945c11; op3val:0x3f46e6bd; valaddr_reg:x16; val_offset:828; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 828, x17, x15, 1944, x18)

inst_1260:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2b9b13 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x145c11 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x46e6bd and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2b9b13; op2val:0x3f945c11; op3val:0x3f46e6bd; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1952, x18)

inst_1261:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6f500c and fs2 == 0 and fe2 == 0x7d and fm2 == 0x72062a and fs3 == 0 and fe3 == 0x7c and fm3 == 0x623f6f and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eef500c; op2val:0x3ef2062a; op3val:0x3e623f6f; valaddr_reg:x16; val_offset:852; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 852, x17, x15, 1960, x18)

inst_1262:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6f500c and fs2 == 0 and fe2 == 0x7d and fm2 == 0x72062a and fs3 == 0 and fe3 == 0x7c and fm3 == 0x623f6f and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eef500c; op2val:0x3ef2062a; op3val:0x3e623f6f; valaddr_reg:x16; val_offset:864; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 864, x17, x15, 1968, x18)

inst_1263:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6f500c and fs2 == 0 and fe2 == 0x7d and fm2 == 0x72062a and fs3 == 0 and fe3 == 0x7c and fm3 == 0x623f6f and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eef500c; op2val:0x3ef2062a; op3val:0x3e623f6f; valaddr_reg:x16; val_offset:876; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 876, x17, x15, 1976, x18)

inst_1264:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6f500c and fs2 == 0 and fe2 == 0x7d and fm2 == 0x72062a and fs3 == 0 and fe3 == 0x7c and fm3 == 0x623f6f and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eef500c; op2val:0x3ef2062a; op3val:0x3e623f6f; valaddr_reg:x16; val_offset:888; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 888, x17, x15, 1984, x18)

inst_1265:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6f500c and fs2 == 0 and fe2 == 0x7d and fm2 == 0x72062a and fs3 == 0 and fe3 == 0x7c and fm3 == 0x623f6f and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eef500c; op2val:0x3ef2062a; op3val:0x3e623f6f; valaddr_reg:x16; val_offset:900; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 900, x17, x15, 1992, x18)

inst_1266:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x553cbb and fs2 == 0 and fe2 == 0x7d and fm2 == 0x0c2f3a and fs3 == 0 and fe3 == 0x7c and fm3 == 0x69891b and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f553cbb; op2val:0x3e8c2f3a; op3val:0x3e69891b; valaddr_reg:x16; val_offset:912; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 912, x17, x15, 2000, x18)

inst_1267:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x553cbb and fs2 == 0 and fe2 == 0x7d and fm2 == 0x0c2f3a and fs3 == 0 and fe3 == 0x7c and fm3 == 0x69891b and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f553cbb; op2val:0x3e8c2f3a; op3val:0x3e69891b; valaddr_reg:x16; val_offset:924; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 924, x17, x15, 2008, x18)

inst_1268:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x553cbb and fs2 == 0 and fe2 == 0x7d and fm2 == 0x0c2f3a and fs3 == 0 and fe3 == 0x7c and fm3 == 0x69891b and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f553cbb; op2val:0x3e8c2f3a; op3val:0x3e69891b; valaddr_reg:x16; val_offset:936; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 936, x17, x15, 2016, x18)

inst_1269:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x553cbb and fs2 == 0 and fe2 == 0x7d and fm2 == 0x0c2f3a and fs3 == 0 and fe3 == 0x7c and fm3 == 0x69891b and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f553cbb; op2val:0x3e8c2f3a; op3val:0x3e69891b; valaddr_reg:x16; val_offset:948; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 948, x17, x15, 2024, x18)
RVTEST_SIGBASE(x15,signature_x15_6)

inst_1270:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x553cbb and fs2 == 0 and fe2 == 0x7d and fm2 == 0x0c2f3a and fs3 == 0 and fe3 == 0x7c and fm3 == 0x69891b and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f553cbb; op2val:0x3e8c2f3a; op3val:0x3e69891b; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 0, x18)

inst_1271:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3d278d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5b6b16 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x221ff6 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3d278d; op2val:0x3f5b6b16; op3val:0x3f221ff6; valaddr_reg:x16; val_offset:972; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 972, x17, x15, 8, x18)

inst_1272:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3d278d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5b6b16 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x221ff6 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3d278d; op2val:0x3f5b6b16; op3val:0x3f221ff6; valaddr_reg:x16; val_offset:984; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 984, x17, x15, 16, x18)

inst_1273:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3d278d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5b6b16 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x221ff6 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3d278d; op2val:0x3f5b6b16; op3val:0x3f221ff6; valaddr_reg:x16; val_offset:996; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 996, x17, x15, 24, x18)

inst_1274:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3d278d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5b6b16 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x221ff6 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3d278d; op2val:0x3f5b6b16; op3val:0x3f221ff6; valaddr_reg:x16; val_offset:1008; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1008, x17, x15, 32, x18)

inst_1275:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3d278d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5b6b16 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x221ff6 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3d278d; op2val:0x3f5b6b16; op3val:0x3f221ff6; valaddr_reg:x16; val_offset:1020; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1020, x17, x15, 40, x18)

inst_1276:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0bf485 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0e429b and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1b8c18 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e0bf485; op2val:0x400e429b; op3val:0x3e9b8c18; valaddr_reg:x16; val_offset:1032; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1032, x17, x15, 48, x18)

inst_1277:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0bf485 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0e429b and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1b8c18 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e0bf485; op2val:0x400e429b; op3val:0x3e9b8c18; valaddr_reg:x16; val_offset:1044; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1044, x17, x15, 56, x18)

inst_1278:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0bf485 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0e429b and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1b8c18 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e0bf485; op2val:0x400e429b; op3val:0x3e9b8c18; valaddr_reg:x16; val_offset:1056; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1056, x17, x15, 64, x18)

inst_1279:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0bf485 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0e429b and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1b8c18 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e0bf485; op2val:0x400e429b; op3val:0x3e9b8c18; valaddr_reg:x16; val_offset:1068; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1068, x17, x15, 72, x18)

inst_1280:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0bf485 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0e429b and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1b8c18 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e0bf485; op2val:0x400e429b; op3val:0x3e9b8c18; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 80, x18)

inst_1281:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x719ba3 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x3a9bd7 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x301e29 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef19ba3; op2val:0x3d3a9bd7; op3val:0x3cb01e29; valaddr_reg:x16; val_offset:1092; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1092, x17, x15, 88, x18)

inst_1282:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x719ba3 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x3a9bd7 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x301e29 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef19ba3; op2val:0x3d3a9bd7; op3val:0x3cb01e29; valaddr_reg:x16; val_offset:1104; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1104, x17, x15, 96, x18)

inst_1283:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x719ba3 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x3a9bd7 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x301e29 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef19ba3; op2val:0x3d3a9bd7; op3val:0x3cb01e29; valaddr_reg:x16; val_offset:1116; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1116, x17, x15, 104, x18)

inst_1284:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x719ba3 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x3a9bd7 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x301e29 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef19ba3; op2val:0x3d3a9bd7; op3val:0x3cb01e29; valaddr_reg:x16; val_offset:1128; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1128, x17, x15, 112, x18)

inst_1285:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x719ba3 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x3a9bd7 and fs3 == 0 and fe3 == 0x79 and fm3 == 0x301e29 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef19ba3; op2val:0x3d3a9bd7; op3val:0x3cb01e29; valaddr_reg:x16; val_offset:1140; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1140, x17, x15, 120, x18)

inst_1286:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x69e54d and fs2 == 0 and fe2 == 0x80 and fm2 == 0x084edd and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7913be and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee9e54d; op2val:0x40084edd; op3val:0x3f7913be; valaddr_reg:x16; val_offset:1152; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1152, x17, x15, 128, x18)

inst_1287:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x69e54d and fs2 == 0 and fe2 == 0x80 and fm2 == 0x084edd and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7913be and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee9e54d; op2val:0x40084edd; op3val:0x3f7913be; valaddr_reg:x16; val_offset:1164; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1164, x17, x15, 136, x18)

inst_1288:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x69e54d and fs2 == 0 and fe2 == 0x80 and fm2 == 0x084edd and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7913be and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee9e54d; op2val:0x40084edd; op3val:0x3f7913be; valaddr_reg:x16; val_offset:1176; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1176, x17, x15, 144, x18)

inst_1289:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x69e54d and fs2 == 0 and fe2 == 0x80 and fm2 == 0x084edd and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7913be and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee9e54d; op2val:0x40084edd; op3val:0x3f7913be; valaddr_reg:x16; val_offset:1188; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1188, x17, x15, 152, x18)

inst_1290:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x69e54d and fs2 == 0 and fe2 == 0x80 and fm2 == 0x084edd and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7913be and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee9e54d; op2val:0x40084edd; op3val:0x3f7913be; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 160, x18)

inst_1291:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x71883f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x678e5c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5a7841 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef1883f; op2val:0x3fe78e5c; op3val:0x3f5a7841; valaddr_reg:x16; val_offset:1212; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1212, x17, x15, 168, x18)

inst_1292:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x71883f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x678e5c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5a7841 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef1883f; op2val:0x3fe78e5c; op3val:0x3f5a7841; valaddr_reg:x16; val_offset:1224; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1224, x17, x15, 176, x18)

inst_1293:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x71883f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x678e5c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5a7841 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef1883f; op2val:0x3fe78e5c; op3val:0x3f5a7841; valaddr_reg:x16; val_offset:1236; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1236, x17, x15, 184, x18)

inst_1294:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x71883f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x678e5c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5a7841 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef1883f; op2val:0x3fe78e5c; op3val:0x3f5a7841; valaddr_reg:x16; val_offset:1248; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1248, x17, x15, 192, x18)

inst_1295:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x71883f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x678e5c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5a7841 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef1883f; op2val:0x3fe78e5c; op3val:0x3f5a7841; valaddr_reg:x16; val_offset:1260; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1260, x17, x15, 200, x18)

inst_1296:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7a1666 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x4d826d and fs3 == 0 and fe3 == 0x7a and fm3 == 0x48c35a and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7a1666; op2val:0x3d4d826d; op3val:0x3d48c35a; valaddr_reg:x16; val_offset:1272; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1272, x17, x15, 208, x18)

inst_1297:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7a1666 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x4d826d and fs3 == 0 and fe3 == 0x7a and fm3 == 0x48c35a and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7a1666; op2val:0x3d4d826d; op3val:0x3d48c35a; valaddr_reg:x16; val_offset:1284; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1284, x17, x15, 216, x18)

inst_1298:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7a1666 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x4d826d and fs3 == 0 and fe3 == 0x7a and fm3 == 0x48c35a and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7a1666; op2val:0x3d4d826d; op3val:0x3d48c35a; valaddr_reg:x16; val_offset:1296; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1296, x17, x15, 224, x18)

inst_1299:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7a1666 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x4d826d and fs3 == 0 and fe3 == 0x7a and fm3 == 0x48c35a and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7a1666; op2val:0x3d4d826d; op3val:0x3d48c35a; valaddr_reg:x16; val_offset:1308; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1308, x17, x15, 232, x18)

inst_1300:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7a1666 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x4d826d and fs3 == 0 and fe3 == 0x7a and fm3 == 0x48c35a and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7a1666; op2val:0x3d4d826d; op3val:0x3d48c35a; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 240, x18)

inst_1301:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2f4089 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x1cca89 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x56abf5 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e2f4089; op2val:0x409cca89; op3val:0x3f56abf5; valaddr_reg:x16; val_offset:1332; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1332, x17, x15, 248, x18)

inst_1302:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2f4089 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x1cca89 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x56abf5 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e2f4089; op2val:0x409cca89; op3val:0x3f56abf5; valaddr_reg:x16; val_offset:1344; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1344, x17, x15, 256, x18)

inst_1303:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2f4089 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x1cca89 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x56abf5 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e2f4089; op2val:0x409cca89; op3val:0x3f56abf5; valaddr_reg:x16; val_offset:1356; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1356, x17, x15, 264, x18)

inst_1304:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2f4089 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x1cca89 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x56abf5 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e2f4089; op2val:0x409cca89; op3val:0x3f56abf5; valaddr_reg:x16; val_offset:1368; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1368, x17, x15, 272, x18)

inst_1305:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2f4089 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x1cca89 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x56abf5 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e2f4089; op2val:0x409cca89; op3val:0x3f56abf5; valaddr_reg:x16; val_offset:1380; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1380, x17, x15, 280, x18)

inst_1306:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x284904 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0f2a13 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3c38e4 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f284904; op2val:0x3f8f2a13; op3val:0x3f3c38e4; valaddr_reg:x16; val_offset:1392; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1392, x17, x15, 288, x18)

inst_1307:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x284904 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0f2a13 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3c38e4 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f284904; op2val:0x3f8f2a13; op3val:0x3f3c38e4; valaddr_reg:x16; val_offset:1404; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1404, x17, x15, 296, x18)

inst_1308:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x284904 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0f2a13 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3c38e4 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f284904; op2val:0x3f8f2a13; op3val:0x3f3c38e4; valaddr_reg:x16; val_offset:1416; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1416, x17, x15, 304, x18)

inst_1309:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x284904 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0f2a13 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3c38e4 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f284904; op2val:0x3f8f2a13; op3val:0x3f3c38e4; valaddr_reg:x16; val_offset:1428; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1428, x17, x15, 312, x18)

inst_1310:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x284904 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x0f2a13 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3c38e4 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f284904; op2val:0x3f8f2a13; op3val:0x3f3c38e4; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 320, x18)

inst_1311:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6a0376 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7b6f2f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x65d708 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6a0376; op2val:0x3f7b6f2f; op3val:0x3f65d708; valaddr_reg:x16; val_offset:1452; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1452, x17, x15, 328, x18)

inst_1312:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6a0376 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7b6f2f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x65d708 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6a0376; op2val:0x3f7b6f2f; op3val:0x3f65d708; valaddr_reg:x16; val_offset:1464; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1464, x17, x15, 336, x18)

inst_1313:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6a0376 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7b6f2f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x65d708 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6a0376; op2val:0x3f7b6f2f; op3val:0x3f65d708; valaddr_reg:x16; val_offset:1476; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1476, x17, x15, 344, x18)

inst_1314:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6a0376 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7b6f2f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x65d708 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6a0376; op2val:0x3f7b6f2f; op3val:0x3f65d708; valaddr_reg:x16; val_offset:1488; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1488, x17, x15, 352, x18)

inst_1315:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6a0376 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7b6f2f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x65d708 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6a0376; op2val:0x3f7b6f2f; op3val:0x3f65d708; valaddr_reg:x16; val_offset:1500; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1500, x17, x15, 360, x18)

inst_1316:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x08b4ea and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7771f6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x042369 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f08b4ea; op2val:0x3f7771f6; op3val:0x3f042369; valaddr_reg:x16; val_offset:1512; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1512, x17, x15, 368, x18)

inst_1317:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x08b4ea and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7771f6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x042369 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f08b4ea; op2val:0x3f7771f6; op3val:0x3f042369; valaddr_reg:x16; val_offset:1524; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1524, x17, x15, 376, x18)

inst_1318:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x08b4ea and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7771f6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x042369 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f08b4ea; op2val:0x3f7771f6; op3val:0x3f042369; valaddr_reg:x16; val_offset:1536; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1536, x17, x15, 384, x18)

inst_1319:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x08b4ea and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7771f6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x042369 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f08b4ea; op2val:0x3f7771f6; op3val:0x3f042369; valaddr_reg:x16; val_offset:1548; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1548, x17, x15, 392, x18)

inst_1320:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x08b4ea and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7771f6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x042369 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f08b4ea; op2val:0x3f7771f6; op3val:0x3f042369; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 400, x18)

inst_1321:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x1ab047 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x3b0429 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x620290 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e1ab047; op2val:0x3d3b0429; op3val:0x3be20290; valaddr_reg:x16; val_offset:1572; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1572, x17, x15, 408, x18)

inst_1322:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x1ab047 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x3b0429 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x620290 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e1ab047; op2val:0x3d3b0429; op3val:0x3be20290; valaddr_reg:x16; val_offset:1584; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1584, x17, x15, 416, x18)

inst_1323:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x1ab047 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x3b0429 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x620290 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e1ab047; op2val:0x3d3b0429; op3val:0x3be20290; valaddr_reg:x16; val_offset:1596; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1596, x17, x15, 424, x18)

inst_1324:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x1ab047 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x3b0429 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x620290 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e1ab047; op2val:0x3d3b0429; op3val:0x3be20290; valaddr_reg:x16; val_offset:1608; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1608, x17, x15, 432, x18)

inst_1325:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x1ab047 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x3b0429 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x620290 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e1ab047; op2val:0x3d3b0429; op3val:0x3be20290; valaddr_reg:x16; val_offset:1620; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1620, x17, x15, 440, x18)

inst_1326:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x22c62f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x30948c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x608d69 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f22c62f; op2val:0x3fb0948c; op3val:0x3f608d69; valaddr_reg:x16; val_offset:1632; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1632, x17, x15, 448, x18)

inst_1327:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x22c62f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x30948c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x608d69 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f22c62f; op2val:0x3fb0948c; op3val:0x3f608d69; valaddr_reg:x16; val_offset:1644; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1644, x17, x15, 456, x18)

inst_1328:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x22c62f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x30948c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x608d69 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f22c62f; op2val:0x3fb0948c; op3val:0x3f608d69; valaddr_reg:x16; val_offset:1656; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1656, x17, x15, 464, x18)

inst_1329:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x22c62f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x30948c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x608d69 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f22c62f; op2val:0x3fb0948c; op3val:0x3f608d69; valaddr_reg:x16; val_offset:1668; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1668, x17, x15, 472, x18)

inst_1330:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x22c62f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x30948c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x608d69 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f22c62f; op2val:0x3fb0948c; op3val:0x3f608d69; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 480, x18)

inst_1331:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3f6c09 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5f6e28 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x27117a and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3f6c09; op2val:0x3f5f6e28; op3val:0x3f27117a; valaddr_reg:x16; val_offset:1692; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1692, x17, x15, 488, x18)

inst_1332:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3f6c09 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5f6e28 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x27117a and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3f6c09; op2val:0x3f5f6e28; op3val:0x3f27117a; valaddr_reg:x16; val_offset:1704; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1704, x17, x15, 496, x18)

inst_1333:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3f6c09 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5f6e28 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x27117a and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3f6c09; op2val:0x3f5f6e28; op3val:0x3f27117a; valaddr_reg:x16; val_offset:1716; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1716, x17, x15, 504, x18)

inst_1334:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3f6c09 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5f6e28 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x27117a and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3f6c09; op2val:0x3f5f6e28; op3val:0x3f27117a; valaddr_reg:x16; val_offset:1728; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1728, x17, x15, 512, x18)

inst_1335:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3f6c09 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5f6e28 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x27117a and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f3f6c09; op2val:0x3f5f6e28; op3val:0x3f27117a; valaddr_reg:x16; val_offset:1740; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1740, x17, x15, 520, x18)

inst_1336:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4598bf and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0d32be and fs3 == 0 and fe3 == 0x7e and fm3 == 0x59f898 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec598bf; op2val:0x400d32be; op3val:0x3f59f898; valaddr_reg:x16; val_offset:1752; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1752, x17, x15, 528, x18)

inst_1337:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4598bf and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0d32be and fs3 == 0 and fe3 == 0x7e and fm3 == 0x59f898 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec598bf; op2val:0x400d32be; op3val:0x3f59f898; valaddr_reg:x16; val_offset:1764; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1764, x17, x15, 536, x18)

inst_1338:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4598bf and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0d32be and fs3 == 0 and fe3 == 0x7e and fm3 == 0x59f898 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec598bf; op2val:0x400d32be; op3val:0x3f59f898; valaddr_reg:x16; val_offset:1776; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1776, x17, x15, 544, x18)

inst_1339:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4598bf and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0d32be and fs3 == 0 and fe3 == 0x7e and fm3 == 0x59f898 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec598bf; op2val:0x400d32be; op3val:0x3f59f898; valaddr_reg:x16; val_offset:1788; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1788, x17, x15, 552, x18)

inst_1340:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4598bf and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0d32be and fs3 == 0 and fe3 == 0x7e and fm3 == 0x59f898 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ec598bf; op2val:0x400d32be; op3val:0x3f59f898; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 560, x18)

inst_1341:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7978c6 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x040d12 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x00af03 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7978c6; op2val:0x3e040d12; op3val:0x3e00af03; valaddr_reg:x16; val_offset:1812; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1812, x17, x15, 568, x18)

inst_1342:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7978c6 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x040d12 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x00af03 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7978c6; op2val:0x3e040d12; op3val:0x3e00af03; valaddr_reg:x16; val_offset:1824; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1824, x17, x15, 576, x18)

inst_1343:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7978c6 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x040d12 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x00af03 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7978c6; op2val:0x3e040d12; op3val:0x3e00af03; valaddr_reg:x16; val_offset:1836; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1836, x17, x15, 584, x18)

inst_1344:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7978c6 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x040d12 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x00af03 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7978c6; op2val:0x3e040d12; op3val:0x3e00af03; valaddr_reg:x16; val_offset:1848; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1848, x17, x15, 592, x18)

inst_1345:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7978c6 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x040d12 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x00af03 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7978c6; op2val:0x3e040d12; op3val:0x3e00af03; valaddr_reg:x16; val_offset:1860; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1860, x17, x15, 600, x18)

inst_1346:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x66066e and fs2 == 0 and fe2 == 0x7e and fm2 == 0x355008 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x22ea75 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f66066e; op2val:0x3f355008; op3val:0x3f22ea75; valaddr_reg:x16; val_offset:1872; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1872, x17, x15, 608, x18)

inst_1347:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x66066e and fs2 == 0 and fe2 == 0x7e and fm2 == 0x355008 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x22ea75 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f66066e; op2val:0x3f355008; op3val:0x3f22ea75; valaddr_reg:x16; val_offset:1884; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1884, x17, x15, 616, x18)

inst_1348:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x66066e and fs2 == 0 and fe2 == 0x7e and fm2 == 0x355008 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x22ea75 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f66066e; op2val:0x3f355008; op3val:0x3f22ea75; valaddr_reg:x16; val_offset:1896; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1896, x17, x15, 624, x18)

inst_1349:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x66066e and fs2 == 0 and fe2 == 0x7e and fm2 == 0x355008 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x22ea75 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f66066e; op2val:0x3f355008; op3val:0x3f22ea75; valaddr_reg:x16; val_offset:1908; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1908, x17, x15, 632, x18)

inst_1350:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x66066e and fs2 == 0 and fe2 == 0x7e and fm2 == 0x355008 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x22ea75 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f66066e; op2val:0x3f355008; op3val:0x3f22ea75; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 640, x18)

inst_1351:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7ff0b6 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5953ae and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5946b3 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7ff0b6; op2val:0x3f5953ae; op3val:0x3f5946b3; valaddr_reg:x16; val_offset:1932; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1932, x17, x15, 648, x18)

inst_1352:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7ff0b6 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5953ae and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5946b3 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7ff0b6; op2val:0x3f5953ae; op3val:0x3f5946b3; valaddr_reg:x16; val_offset:1944; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1944, x17, x15, 656, x18)

inst_1353:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7ff0b6 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5953ae and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5946b3 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7ff0b6; op2val:0x3f5953ae; op3val:0x3f5946b3; valaddr_reg:x16; val_offset:1956; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1956, x17, x15, 664, x18)

inst_1354:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7ff0b6 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5953ae and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5946b3 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7ff0b6; op2val:0x3f5953ae; op3val:0x3f5946b3; valaddr_reg:x16; val_offset:1968; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1968, x17, x15, 672, x18)

inst_1355:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7ff0b6 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5953ae and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5946b3 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7ff0b6; op2val:0x3f5953ae; op3val:0x3f5946b3; valaddr_reg:x16; val_offset:1980; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1980, x17, x15, 680, x18)

inst_1356:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x28f23e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x37c202 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x728a67 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f28f23e; op2val:0x3fb7c202; op3val:0x3f728a67; valaddr_reg:x16; val_offset:1992; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1992, x17, x15, 688, x18)

inst_1357:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x28f23e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x37c202 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x728a67 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f28f23e; op2val:0x3fb7c202; op3val:0x3f728a67; valaddr_reg:x16; val_offset:2004; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 2004, x17, x15, 696, x18)

inst_1358:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x28f23e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x37c202 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x728a67 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f28f23e; op2val:0x3fb7c202; op3val:0x3f728a67; valaddr_reg:x16; val_offset:2016; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 2016, x17, x15, 704, x18)

inst_1359:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x28f23e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x37c202 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x728a67 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f28f23e; op2val:0x3fb7c202; op3val:0x3f728a67; valaddr_reg:x16; val_offset:2028; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 2028, x17, x15, 712, x18)
addi x16,x16,2040

inst_1360:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x28f23e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x37c202 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x728a67 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f28f23e; op2val:0x3fb7c202; op3val:0x3f728a67; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 720, x18)

inst_1361:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4a8e7e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x078413 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x56734c and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4a8e7e; op2val:0x3f878413; op3val:0x3f56734c; valaddr_reg:x16; val_offset:12; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 12, x17, x15, 728, x18)

inst_1362:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4a8e7e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x078413 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x56734c and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4a8e7e; op2val:0x3f878413; op3val:0x3f56734c; valaddr_reg:x16; val_offset:24; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 24, x17, x15, 736, x18)

inst_1363:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4a8e7e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x078413 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x56734c and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4a8e7e; op2val:0x3f878413; op3val:0x3f56734c; valaddr_reg:x16; val_offset:36; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 36, x17, x15, 744, x18)

inst_1364:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4a8e7e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x078413 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x56734c and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4a8e7e; op2val:0x3f878413; op3val:0x3f56734c; valaddr_reg:x16; val_offset:48; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 48, x17, x15, 752, x18)

inst_1365:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4a8e7e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x078413 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x56734c and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4a8e7e; op2val:0x3f878413; op3val:0x3f56734c; valaddr_reg:x16; val_offset:60; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 60, x17, x15, 760, x18)

inst_1366:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x701086 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7e9b98 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6ec24e and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f701086; op2val:0x3f7e9b98; op3val:0x3f6ec24e; valaddr_reg:x16; val_offset:72; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 72, x17, x15, 768, x18)

inst_1367:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x701086 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7e9b98 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6ec24e and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f701086; op2val:0x3f7e9b98; op3val:0x3f6ec24e; valaddr_reg:x16; val_offset:84; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 84, x17, x15, 776, x18)

inst_1368:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x701086 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7e9b98 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6ec24e and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f701086; op2val:0x3f7e9b98; op3val:0x3f6ec24e; valaddr_reg:x16; val_offset:96; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 96, x17, x15, 784, x18)

inst_1369:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x701086 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7e9b98 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6ec24e and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f701086; op2val:0x3f7e9b98; op3val:0x3f6ec24e; valaddr_reg:x16; val_offset:108; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 108, x17, x15, 792, x18)

inst_1370:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x701086 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7e9b98 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6ec24e and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f701086; op2val:0x3f7e9b98; op3val:0x3f6ec24e; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 800, x18)

inst_1371:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x657e97 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x50de96 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3b3e65 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f657e97; op2val:0x3ed0de96; op3val:0x3ebb3e65; valaddr_reg:x16; val_offset:132; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 132, x17, x15, 808, x18)

inst_1372:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x657e97 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x50de96 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3b3e65 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f657e97; op2val:0x3ed0de96; op3val:0x3ebb3e65; valaddr_reg:x16; val_offset:144; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 144, x17, x15, 816, x18)

inst_1373:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x657e97 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x50de96 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3b3e65 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f657e97; op2val:0x3ed0de96; op3val:0x3ebb3e65; valaddr_reg:x16; val_offset:156; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 156, x17, x15, 824, x18)

inst_1374:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x657e97 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x50de96 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3b3e65 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f657e97; op2val:0x3ed0de96; op3val:0x3ebb3e65; valaddr_reg:x16; val_offset:168; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 168, x17, x15, 832, x18)

inst_1375:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x657e97 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x50de96 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x3b3e65 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f657e97; op2val:0x3ed0de96; op3val:0x3ebb3e65; valaddr_reg:x16; val_offset:180; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 180, x17, x15, 840, x18)

inst_1376:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1b8d0e and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7d3827 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x19dc85 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1b8d0e; op2val:0x3f7d3827; op3val:0x3f19dc85; valaddr_reg:x16; val_offset:192; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 192, x17, x15, 848, x18)

inst_1377:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1b8d0e and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7d3827 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x19dc85 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1b8d0e; op2val:0x3f7d3827; op3val:0x3f19dc85; valaddr_reg:x16; val_offset:204; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 204, x17, x15, 856, x18)

inst_1378:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1b8d0e and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7d3827 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x19dc85 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1b8d0e; op2val:0x3f7d3827; op3val:0x3f19dc85; valaddr_reg:x16; val_offset:216; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 216, x17, x15, 864, x18)

inst_1379:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1b8d0e and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7d3827 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x19dc85 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1b8d0e; op2val:0x3f7d3827; op3val:0x3f19dc85; valaddr_reg:x16; val_offset:228; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 228, x17, x15, 872, x18)

inst_1380:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1b8d0e and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7d3827 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x19dc85 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1b8d0e; op2val:0x3f7d3827; op3val:0x3f19dc85; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 880, x18)

inst_1381:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x007f9d and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4e2cca and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4efa59 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e007f9d; op2val:0x3fce2cca; op3val:0x3e4efa59; valaddr_reg:x16; val_offset:252; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 252, x17, x15, 888, x18)

inst_1382:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x007f9d and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4e2cca and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4efa59 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e007f9d; op2val:0x3fce2cca; op3val:0x3e4efa59; valaddr_reg:x16; val_offset:264; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 264, x17, x15, 896, x18)

inst_1383:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x007f9d and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4e2cca and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4efa59 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e007f9d; op2val:0x3fce2cca; op3val:0x3e4efa59; valaddr_reg:x16; val_offset:276; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 276, x17, x15, 904, x18)

inst_1384:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x007f9d and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4e2cca and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4efa59 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e007f9d; op2val:0x3fce2cca; op3val:0x3e4efa59; valaddr_reg:x16; val_offset:288; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 288, x17, x15, 912, x18)

inst_1385:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x007f9d and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4e2cca and fs3 == 0 and fe3 == 0x7c and fm3 == 0x4efa59 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e007f9d; op2val:0x3fce2cca; op3val:0x3e4efa59; valaddr_reg:x16; val_offset:300; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 300, x17, x15, 920, x18)

inst_1386:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x4dc1a3 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0c2a3b and fs3 == 0 and fe3 == 0x7c and fm3 == 0x614fad and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dcdc1a3; op2val:0x400c2a3b; op3val:0x3e614fad; valaddr_reg:x16; val_offset:312; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 312, x17, x15, 928, x18)

inst_1387:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x4dc1a3 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0c2a3b and fs3 == 0 and fe3 == 0x7c and fm3 == 0x614fad and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dcdc1a3; op2val:0x400c2a3b; op3val:0x3e614fad; valaddr_reg:x16; val_offset:324; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 324, x17, x15, 936, x18)

inst_1388:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x4dc1a3 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0c2a3b and fs3 == 0 and fe3 == 0x7c and fm3 == 0x614fad and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dcdc1a3; op2val:0x400c2a3b; op3val:0x3e614fad; valaddr_reg:x16; val_offset:336; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 336, x17, x15, 944, x18)

inst_1389:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x4dc1a3 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0c2a3b and fs3 == 0 and fe3 == 0x7c and fm3 == 0x614fad and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dcdc1a3; op2val:0x400c2a3b; op3val:0x3e614fad; valaddr_reg:x16; val_offset:348; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 348, x17, x15, 952, x18)

inst_1390:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x4dc1a3 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0c2a3b and fs3 == 0 and fe3 == 0x7c and fm3 == 0x614fad and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dcdc1a3; op2val:0x400c2a3b; op3val:0x3e614fad; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 960, x18)

inst_1391:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x25c91a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3afb27 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x722d85 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ea5c91a; op2val:0x403afb27; op3val:0x3f722d85; valaddr_reg:x16; val_offset:372; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 372, x17, x15, 968, x18)

inst_1392:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x25c91a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3afb27 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x722d85 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ea5c91a; op2val:0x403afb27; op3val:0x3f722d85; valaddr_reg:x16; val_offset:384; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 384, x17, x15, 976, x18)

inst_1393:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x25c91a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3afb27 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x722d85 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ea5c91a; op2val:0x403afb27; op3val:0x3f722d85; valaddr_reg:x16; val_offset:396; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 396, x17, x15, 984, x18)

inst_1394:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x25c91a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3afb27 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x722d85 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ea5c91a; op2val:0x403afb27; op3val:0x3f722d85; valaddr_reg:x16; val_offset:408; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 408, x17, x15, 992, x18)

inst_1395:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x25c91a and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3afb27 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x722d85 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ea5c91a; op2val:0x403afb27; op3val:0x3f722d85; valaddr_reg:x16; val_offset:420; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 420, x17, x15, 1000, x18)

inst_1396:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x781181 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x4a0d7c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x43cae2 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef81181; op2val:0x3f4a0d7c; op3val:0x3ec3cae2; valaddr_reg:x16; val_offset:432; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 432, x17, x15, 1008, x18)

inst_1397:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x781181 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x4a0d7c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x43cae2 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef81181; op2val:0x3f4a0d7c; op3val:0x3ec3cae2; valaddr_reg:x16; val_offset:444; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 444, x17, x15, 1016, x18)

inst_1398:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x781181 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x4a0d7c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x43cae2 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef81181; op2val:0x3f4a0d7c; op3val:0x3ec3cae2; valaddr_reg:x16; val_offset:456; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 456, x17, x15, 1024, x18)

inst_1399:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x781181 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x4a0d7c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x43cae2 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef81181; op2val:0x3f4a0d7c; op3val:0x3ec3cae2; valaddr_reg:x16; val_offset:468; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 468, x17, x15, 1032, x18)

inst_1400:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x781181 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x4a0d7c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x43cae2 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef81181; op2val:0x3f4a0d7c; op3val:0x3ec3cae2; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1040, x18)

inst_1401:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x401c63 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x532aee and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1e779d and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d401c63; op2val:0x40d32aee; op3val:0x3e9e779d; valaddr_reg:x16; val_offset:492; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 492, x17, x15, 1048, x18)

inst_1402:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x401c63 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x532aee and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1e779d and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d401c63; op2val:0x40d32aee; op3val:0x3e9e779d; valaddr_reg:x16; val_offset:504; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 504, x17, x15, 1056, x18)

inst_1403:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x401c63 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x532aee and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1e779d and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d401c63; op2val:0x40d32aee; op3val:0x3e9e779d; valaddr_reg:x16; val_offset:516; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 516, x17, x15, 1064, x18)

inst_1404:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x401c63 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x532aee and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1e779d and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d401c63; op2val:0x40d32aee; op3val:0x3e9e779d; valaddr_reg:x16; val_offset:528; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 528, x17, x15, 1072, x18)

inst_1405:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x401c63 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x532aee and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1e779d and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d401c63; op2val:0x40d32aee; op3val:0x3e9e779d; valaddr_reg:x16; val_offset:540; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 540, x17, x15, 1080, x18)

inst_1406:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x217899 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x300224 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5e0885 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f217899; op2val:0x3f300224; op3val:0x3ede0885; valaddr_reg:x16; val_offset:552; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 552, x17, x15, 1088, x18)

inst_1407:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x217899 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x300224 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5e0885 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f217899; op2val:0x3f300224; op3val:0x3ede0885; valaddr_reg:x16; val_offset:564; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 564, x17, x15, 1096, x18)

inst_1408:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x217899 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x300224 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5e0885 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f217899; op2val:0x3f300224; op3val:0x3ede0885; valaddr_reg:x16; val_offset:576; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 576, x17, x15, 1104, x18)

inst_1409:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x217899 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x300224 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5e0885 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f217899; op2val:0x3f300224; op3val:0x3ede0885; valaddr_reg:x16; val_offset:588; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 588, x17, x15, 1112, x18)

inst_1410:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x217899 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x300224 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5e0885 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f217899; op2val:0x3f300224; op3val:0x3ede0885; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1120, x18)

inst_1411:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7ef3b8 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x155c72 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x14bfec and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7ef3b8; op2val:0x3f155c72; op3val:0x3f14bfec; valaddr_reg:x16; val_offset:612; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 612, x17, x15, 1128, x18)

inst_1412:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7ef3b8 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x155c72 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x14bfec and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7ef3b8; op2val:0x3f155c72; op3val:0x3f14bfec; valaddr_reg:x16; val_offset:624; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 624, x17, x15, 1136, x18)

inst_1413:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7ef3b8 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x155c72 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x14bfec and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7ef3b8; op2val:0x3f155c72; op3val:0x3f14bfec; valaddr_reg:x16; val_offset:636; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 636, x17, x15, 1144, x18)

inst_1414:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7ef3b8 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x155c72 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x14bfec and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7ef3b8; op2val:0x3f155c72; op3val:0x3f14bfec; valaddr_reg:x16; val_offset:648; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 648, x17, x15, 1152, x18)

inst_1415:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7ef3b8 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x155c72 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x14bfec and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7ef3b8; op2val:0x3f155c72; op3val:0x3f14bfec; valaddr_reg:x16; val_offset:660; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 660, x17, x15, 1160, x18)

inst_1416:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x525e67 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x65ad08 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3cbca3 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed25e67; op2val:0x3fe5ad08; op3val:0x3f3cbca3; valaddr_reg:x16; val_offset:672; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 672, x17, x15, 1168, x18)

inst_1417:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x525e67 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x65ad08 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3cbca3 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed25e67; op2val:0x3fe5ad08; op3val:0x3f3cbca3; valaddr_reg:x16; val_offset:684; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 684, x17, x15, 1176, x18)

inst_1418:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x525e67 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x65ad08 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3cbca3 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed25e67; op2val:0x3fe5ad08; op3val:0x3f3cbca3; valaddr_reg:x16; val_offset:696; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 696, x17, x15, 1184, x18)

inst_1419:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x525e67 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x65ad08 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3cbca3 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed25e67; op2val:0x3fe5ad08; op3val:0x3f3cbca3; valaddr_reg:x16; val_offset:708; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 708, x17, x15, 1192, x18)

inst_1420:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x525e67 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x65ad08 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3cbca3 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed25e67; op2val:0x3fe5ad08; op3val:0x3f3cbca3; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1200, x18)

inst_1421:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x444416 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2bfa70 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x03d97b and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f444416; op2val:0x3f2bfa70; op3val:0x3f03d97b; valaddr_reg:x16; val_offset:732; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 732, x17, x15, 1208, x18)

inst_1422:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x444416 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2bfa70 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x03d97b and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f444416; op2val:0x3f2bfa70; op3val:0x3f03d97b; valaddr_reg:x16; val_offset:744; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 744, x17, x15, 1216, x18)

inst_1423:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x444416 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2bfa70 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x03d97b and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f444416; op2val:0x3f2bfa70; op3val:0x3f03d97b; valaddr_reg:x16; val_offset:756; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 756, x17, x15, 1224, x18)

inst_1424:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x444416 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2bfa70 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x03d97b and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f444416; op2val:0x3f2bfa70; op3val:0x3f03d97b; valaddr_reg:x16; val_offset:768; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 768, x17, x15, 1232, x18)

inst_1425:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x444416 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2bfa70 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x03d97b and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f444416; op2val:0x3f2bfa70; op3val:0x3f03d97b; valaddr_reg:x16; val_offset:780; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 780, x17, x15, 1240, x18)

inst_1426:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x52e365 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x6eadac and fs3 == 0 and fe3 == 0x7e and fm3 == 0x449e79 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f52e365; op2val:0x3f6eadac; op3val:0x3f449e79; valaddr_reg:x16; val_offset:792; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 792, x17, x15, 1248, x18)

inst_1427:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x52e365 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x6eadac and fs3 == 0 and fe3 == 0x7e and fm3 == 0x449e79 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f52e365; op2val:0x3f6eadac; op3val:0x3f449e79; valaddr_reg:x16; val_offset:804; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 804, x17, x15, 1256, x18)

inst_1428:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x52e365 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x6eadac and fs3 == 0 and fe3 == 0x7e and fm3 == 0x449e79 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f52e365; op2val:0x3f6eadac; op3val:0x3f449e79; valaddr_reg:x16; val_offset:816; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 816, x17, x15, 1264, x18)

inst_1429:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x52e365 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x6eadac and fs3 == 0 and fe3 == 0x7e and fm3 == 0x449e79 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f52e365; op2val:0x3f6eadac; op3val:0x3f449e79; valaddr_reg:x16; val_offset:828; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 828, x17, x15, 1272, x18)

inst_1430:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x52e365 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x6eadac and fs3 == 0 and fe3 == 0x7e and fm3 == 0x449e79 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f52e365; op2val:0x3f6eadac; op3val:0x3f449e79; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1280, x18)

inst_1431:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x2d220b and fs2 == 0 and fe2 == 0x83 and fm2 == 0x20b36c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x595d3f and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d2d220b; op2val:0x41a0b36c; op3val:0x3f595d3f; valaddr_reg:x16; val_offset:852; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 852, x17, x15, 1288, x18)

inst_1432:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x2d220b and fs2 == 0 and fe2 == 0x83 and fm2 == 0x20b36c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x595d3f and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d2d220b; op2val:0x41a0b36c; op3val:0x3f595d3f; valaddr_reg:x16; val_offset:864; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 864, x17, x15, 1296, x18)

inst_1433:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x2d220b and fs2 == 0 and fe2 == 0x83 and fm2 == 0x20b36c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x595d3f and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d2d220b; op2val:0x41a0b36c; op3val:0x3f595d3f; valaddr_reg:x16; val_offset:876; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 876, x17, x15, 1304, x18)

inst_1434:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x2d220b and fs2 == 0 and fe2 == 0x83 and fm2 == 0x20b36c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x595d3f and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d2d220b; op2val:0x41a0b36c; op3val:0x3f595d3f; valaddr_reg:x16; val_offset:888; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 888, x17, x15, 1312, x18)

inst_1435:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x2d220b and fs2 == 0 and fe2 == 0x83 and fm2 == 0x20b36c and fs3 == 0 and fe3 == 0x7e and fm3 == 0x595d3f and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d2d220b; op2val:0x41a0b36c; op3val:0x3f595d3f; valaddr_reg:x16; val_offset:900; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 900, x17, x15, 1320, x18)

inst_1436:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x242792 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x38efb7 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x6d2c4f and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f242792; op2val:0x3e38efb7; op3val:0x3ded2c4f; valaddr_reg:x16; val_offset:912; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 912, x17, x15, 1328, x18)

inst_1437:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x242792 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x38efb7 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x6d2c4f and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f242792; op2val:0x3e38efb7; op3val:0x3ded2c4f; valaddr_reg:x16; val_offset:924; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 924, x17, x15, 1336, x18)

inst_1438:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x242792 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x38efb7 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x6d2c4f and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f242792; op2val:0x3e38efb7; op3val:0x3ded2c4f; valaddr_reg:x16; val_offset:936; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 936, x17, x15, 1344, x18)

inst_1439:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x242792 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x38efb7 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x6d2c4f and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f242792; op2val:0x3e38efb7; op3val:0x3ded2c4f; valaddr_reg:x16; val_offset:948; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 948, x17, x15, 1352, x18)

inst_1440:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x242792 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x38efb7 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x6d2c4f and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f242792; op2val:0x3e38efb7; op3val:0x3ded2c4f; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 1360, x18)

inst_1441:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x38b965 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x4f708d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x15af20 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f38b965; op2val:0x3f4f708d; op3val:0x3f15af20; valaddr_reg:x16; val_offset:972; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 972, x17, x15, 1368, x18)

inst_1442:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x38b965 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x4f708d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x15af20 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f38b965; op2val:0x3f4f708d; op3val:0x3f15af20; valaddr_reg:x16; val_offset:984; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 984, x17, x15, 1376, x18)

inst_1443:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x38b965 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x4f708d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x15af20 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f38b965; op2val:0x3f4f708d; op3val:0x3f15af20; valaddr_reg:x16; val_offset:996; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 996, x17, x15, 1384, x18)

inst_1444:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x38b965 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x4f708d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x15af20 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f38b965; op2val:0x3f4f708d; op3val:0x3f15af20; valaddr_reg:x16; val_offset:1008; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1008, x17, x15, 1392, x18)

inst_1445:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x38b965 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x4f708d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x15af20 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f38b965; op2val:0x3f4f708d; op3val:0x3f15af20; valaddr_reg:x16; val_offset:1020; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1020, x17, x15, 1400, x18)

inst_1446:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x390eb4 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x40ac66 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x0b47a7 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e390eb4; op2val:0x3f40ac66; op3val:0x3e0b47a7; valaddr_reg:x16; val_offset:1032; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1032, x17, x15, 1408, x18)

inst_1447:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x390eb4 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x40ac66 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x0b47a7 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e390eb4; op2val:0x3f40ac66; op3val:0x3e0b47a7; valaddr_reg:x16; val_offset:1044; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1044, x17, x15, 1416, x18)

inst_1448:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x390eb4 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x40ac66 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x0b47a7 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e390eb4; op2val:0x3f40ac66; op3val:0x3e0b47a7; valaddr_reg:x16; val_offset:1056; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1056, x17, x15, 1424, x18)

inst_1449:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x390eb4 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x40ac66 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x0b47a7 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e390eb4; op2val:0x3f40ac66; op3val:0x3e0b47a7; valaddr_reg:x16; val_offset:1068; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1068, x17, x15, 1432, x18)

inst_1450:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x390eb4 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x40ac66 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x0b47a7 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e390eb4; op2val:0x3f40ac66; op3val:0x3e0b47a7; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 1440, x18)

inst_1451:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x66afcf and fs2 == 0 and fe2 == 0x7d and fm2 == 0x0484b2 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x6ed475 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee6afcf; op2val:0x3e8484b2; op3val:0x3deed475; valaddr_reg:x16; val_offset:1092; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1092, x17, x15, 1448, x18)

inst_1452:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x66afcf and fs2 == 0 and fe2 == 0x7d and fm2 == 0x0484b2 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x6ed475 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee6afcf; op2val:0x3e8484b2; op3val:0x3deed475; valaddr_reg:x16; val_offset:1104; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1104, x17, x15, 1456, x18)

inst_1453:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x66afcf and fs2 == 0 and fe2 == 0x7d and fm2 == 0x0484b2 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x6ed475 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee6afcf; op2val:0x3e8484b2; op3val:0x3deed475; valaddr_reg:x16; val_offset:1116; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1116, x17, x15, 1464, x18)

inst_1454:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x66afcf and fs2 == 0 and fe2 == 0x7d and fm2 == 0x0484b2 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x6ed475 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee6afcf; op2val:0x3e8484b2; op3val:0x3deed475; valaddr_reg:x16; val_offset:1128; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1128, x17, x15, 1472, x18)

inst_1455:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x66afcf and fs2 == 0 and fe2 == 0x7d and fm2 == 0x0484b2 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x6ed475 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee6afcf; op2val:0x3e8484b2; op3val:0x3deed475; valaddr_reg:x16; val_offset:1140; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1140, x17, x15, 1480, x18)

inst_1456:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6b5f06 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x195dd2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0d020d and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6b5f06; op2val:0x3f195dd2; op3val:0x3f0d020d; valaddr_reg:x16; val_offset:1152; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1152, x17, x15, 1488, x18)

inst_1457:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6b5f06 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x195dd2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0d020d and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6b5f06; op2val:0x3f195dd2; op3val:0x3f0d020d; valaddr_reg:x16; val_offset:1164; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1164, x17, x15, 1496, x18)

inst_1458:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6b5f06 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x195dd2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0d020d and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6b5f06; op2val:0x3f195dd2; op3val:0x3f0d020d; valaddr_reg:x16; val_offset:1176; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1176, x17, x15, 1504, x18)

inst_1459:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6b5f06 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x195dd2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0d020d and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6b5f06; op2val:0x3f195dd2; op3val:0x3f0d020d; valaddr_reg:x16; val_offset:1188; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1188, x17, x15, 1512, x18)

inst_1460:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6b5f06 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x195dd2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0d020d and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6b5f06; op2val:0x3f195dd2; op3val:0x3f0d020d; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 1520, x18)

inst_1461:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1beab8 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x582dd4 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x03a9f5 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1beab8; op2val:0x3e582dd4; op3val:0x3e03a9f5; valaddr_reg:x16; val_offset:1212; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1212, x17, x15, 1528, x18)

inst_1462:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1beab8 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x582dd4 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x03a9f5 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1beab8; op2val:0x3e582dd4; op3val:0x3e03a9f5; valaddr_reg:x16; val_offset:1224; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1224, x17, x15, 1536, x18)

inst_1463:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1beab8 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x582dd4 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x03a9f5 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1beab8; op2val:0x3e582dd4; op3val:0x3e03a9f5; valaddr_reg:x16; val_offset:1236; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1236, x17, x15, 1544, x18)

inst_1464:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1beab8 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x582dd4 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x03a9f5 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1beab8; op2val:0x3e582dd4; op3val:0x3e03a9f5; valaddr_reg:x16; val_offset:1248; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1248, x17, x15, 1552, x18)

inst_1465:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1beab8 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x582dd4 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x03a9f5 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1beab8; op2val:0x3e582dd4; op3val:0x3e03a9f5; valaddr_reg:x16; val_offset:1260; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1260, x17, x15, 1560, x18)

inst_1466:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5ee38f and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5d3946 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x409c50 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5ee38f; op2val:0x3f5d3946; op3val:0x3f409c50; valaddr_reg:x16; val_offset:1272; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1272, x17, x15, 1568, x18)

inst_1467:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5ee38f and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5d3946 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x409c50 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5ee38f; op2val:0x3f5d3946; op3val:0x3f409c50; valaddr_reg:x16; val_offset:1284; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1284, x17, x15, 1576, x18)

inst_1468:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5ee38f and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5d3946 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x409c50 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5ee38f; op2val:0x3f5d3946; op3val:0x3f409c50; valaddr_reg:x16; val_offset:1296; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1296, x17, x15, 1584, x18)

inst_1469:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5ee38f and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5d3946 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x409c50 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5ee38f; op2val:0x3f5d3946; op3val:0x3f409c50; valaddr_reg:x16; val_offset:1308; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1308, x17, x15, 1592, x18)

inst_1470:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5ee38f and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5d3946 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x409c50 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5ee38f; op2val:0x3f5d3946; op3val:0x3f409c50; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 1600, x18)

inst_1471:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x70e85c and fs2 == 0 and fe2 == 0x7c and fm2 == 0x7c3294 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x6d5454 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f70e85c; op2val:0x3e7c3294; op3val:0x3e6d5454; valaddr_reg:x16; val_offset:1332; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1332, x17, x15, 1608, x18)

inst_1472:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x70e85c and fs2 == 0 and fe2 == 0x7c and fm2 == 0x7c3294 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x6d5454 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f70e85c; op2val:0x3e7c3294; op3val:0x3e6d5454; valaddr_reg:x16; val_offset:1344; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1344, x17, x15, 1616, x18)

inst_1473:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x70e85c and fs2 == 0 and fe2 == 0x7c and fm2 == 0x7c3294 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x6d5454 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f70e85c; op2val:0x3e7c3294; op3val:0x3e6d5454; valaddr_reg:x16; val_offset:1356; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1356, x17, x15, 1624, x18)

inst_1474:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x70e85c and fs2 == 0 and fe2 == 0x7c and fm2 == 0x7c3294 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x6d5454 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f70e85c; op2val:0x3e7c3294; op3val:0x3e6d5454; valaddr_reg:x16; val_offset:1368; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1368, x17, x15, 1632, x18)

inst_1475:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x70e85c and fs2 == 0 and fe2 == 0x7c and fm2 == 0x7c3294 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x6d5454 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f70e85c; op2val:0x3e7c3294; op3val:0x3e6d5454; valaddr_reg:x16; val_offset:1380; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1380, x17, x15, 1640, x18)

inst_1476:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x54fac8 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x07d6dd and fs3 == 0 and fe3 == 0x7e and fm3 == 0x620602 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f54fac8; op2val:0x3f87d6dd; op3val:0x3f620602; valaddr_reg:x16; val_offset:1392; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1392, x17, x15, 1648, x18)

inst_1477:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x54fac8 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x07d6dd and fs3 == 0 and fe3 == 0x7e and fm3 == 0x620602 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f54fac8; op2val:0x3f87d6dd; op3val:0x3f620602; valaddr_reg:x16; val_offset:1404; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1404, x17, x15, 1656, x18)

inst_1478:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x54fac8 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x07d6dd and fs3 == 0 and fe3 == 0x7e and fm3 == 0x620602 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f54fac8; op2val:0x3f87d6dd; op3val:0x3f620602; valaddr_reg:x16; val_offset:1416; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1416, x17, x15, 1664, x18)

inst_1479:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x54fac8 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x07d6dd and fs3 == 0 and fe3 == 0x7e and fm3 == 0x620602 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f54fac8; op2val:0x3f87d6dd; op3val:0x3f620602; valaddr_reg:x16; val_offset:1428; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1428, x17, x15, 1672, x18)

inst_1480:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x54fac8 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x07d6dd and fs3 == 0 and fe3 == 0x7e and fm3 == 0x620602 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f54fac8; op2val:0x3f87d6dd; op3val:0x3f620602; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 1680, x18)

inst_1481:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7a3950 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0cfcb1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x09ce56 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7a3950; op2val:0x3f0cfcb1; op3val:0x3f09ce56; valaddr_reg:x16; val_offset:1452; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1452, x17, x15, 1688, x18)

inst_1482:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7a3950 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0cfcb1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x09ce56 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7a3950; op2val:0x3f0cfcb1; op3val:0x3f09ce56; valaddr_reg:x16; val_offset:1464; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1464, x17, x15, 1696, x18)

inst_1483:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7a3950 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0cfcb1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x09ce56 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7a3950; op2val:0x3f0cfcb1; op3val:0x3f09ce56; valaddr_reg:x16; val_offset:1476; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1476, x17, x15, 1704, x18)

inst_1484:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7a3950 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0cfcb1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x09ce56 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7a3950; op2val:0x3f0cfcb1; op3val:0x3f09ce56; valaddr_reg:x16; val_offset:1488; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1488, x17, x15, 1712, x18)

inst_1485:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7a3950 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0cfcb1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x09ce56 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7a3950; op2val:0x3f0cfcb1; op3val:0x3f09ce56; valaddr_reg:x16; val_offset:1500; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1500, x17, x15, 1720, x18)

inst_1486:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1d3cc5 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0a1aba and fs3 == 0 and fe3 == 0x7d and fm3 == 0x29a659 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1d3cc5; op2val:0x3f0a1aba; op3val:0x3ea9a659; valaddr_reg:x16; val_offset:1512; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1512, x17, x15, 1728, x18)

inst_1487:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1d3cc5 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0a1aba and fs3 == 0 and fe3 == 0x7d and fm3 == 0x29a659 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1d3cc5; op2val:0x3f0a1aba; op3val:0x3ea9a659; valaddr_reg:x16; val_offset:1524; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1524, x17, x15, 1736, x18)

inst_1488:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1d3cc5 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0a1aba and fs3 == 0 and fe3 == 0x7d and fm3 == 0x29a659 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1d3cc5; op2val:0x3f0a1aba; op3val:0x3ea9a659; valaddr_reg:x16; val_offset:1536; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1536, x17, x15, 1744, x18)

inst_1489:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1d3cc5 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0a1aba and fs3 == 0 and fe3 == 0x7d and fm3 == 0x29a659 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1d3cc5; op2val:0x3f0a1aba; op3val:0x3ea9a659; valaddr_reg:x16; val_offset:1548; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1548, x17, x15, 1752, x18)

inst_1490:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1d3cc5 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0a1aba and fs3 == 0 and fe3 == 0x7d and fm3 == 0x29a659 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1d3cc5; op2val:0x3f0a1aba; op3val:0x3ea9a659; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1760, x18)

inst_1491:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x365959 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x008ec6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3724bf and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e365959; op2val:0x40808ec6; op3val:0x3f3724bf; valaddr_reg:x16; val_offset:1572; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1572, x17, x15, 1768, x18)

inst_1492:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x365959 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x008ec6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3724bf and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e365959; op2val:0x40808ec6; op3val:0x3f3724bf; valaddr_reg:x16; val_offset:1584; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1584, x17, x15, 1776, x18)

inst_1493:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x365959 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x008ec6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3724bf and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e365959; op2val:0x40808ec6; op3val:0x3f3724bf; valaddr_reg:x16; val_offset:1596; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1596, x17, x15, 1784, x18)

inst_1494:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x365959 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x008ec6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3724bf and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e365959; op2val:0x40808ec6; op3val:0x3f3724bf; valaddr_reg:x16; val_offset:1608; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1608, x17, x15, 1792, x18)

inst_1495:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x365959 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x008ec6 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3724bf and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e365959; op2val:0x40808ec6; op3val:0x3f3724bf; valaddr_reg:x16; val_offset:1620; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1620, x17, x15, 1800, x18)

inst_1496:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x34ab86 and fs2 == 0 and fe2 == 0x79 and fm2 == 0x204797 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x623b75 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb4ab86; op2val:0x3ca04797; op3val:0x3be23b75; valaddr_reg:x16; val_offset:1632; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1632, x17, x15, 1808, x18)

inst_1497:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x34ab86 and fs2 == 0 and fe2 == 0x79 and fm2 == 0x204797 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x623b75 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb4ab86; op2val:0x3ca04797; op3val:0x3be23b75; valaddr_reg:x16; val_offset:1644; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1644, x17, x15, 1816, x18)

inst_1498:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x34ab86 and fs2 == 0 and fe2 == 0x79 and fm2 == 0x204797 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x623b75 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb4ab86; op2val:0x3ca04797; op3val:0x3be23b75; valaddr_reg:x16; val_offset:1656; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1656, x17, x15, 1824, x18)

inst_1499:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x34ab86 and fs2 == 0 and fe2 == 0x79 and fm2 == 0x204797 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x623b75 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb4ab86; op2val:0x3ca04797; op3val:0x3be23b75; valaddr_reg:x16; val_offset:1668; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1668, x17, x15, 1832, x18)

inst_1500:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x34ab86 and fs2 == 0 and fe2 == 0x79 and fm2 == 0x204797 and fs3 == 0 and fe3 == 0x77 and fm3 == 0x623b75 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb4ab86; op2val:0x3ca04797; op3val:0x3be23b75; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1840, x18)

inst_1501:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7077f7 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x22b51b and fs3 == 0 and fe3 == 0x7d and fm3 == 0x18d609 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7077f7; op2val:0x3ea2b51b; op3val:0x3e98d609; valaddr_reg:x16; val_offset:1692; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1692, x17, x15, 1848, x18)

inst_1502:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7077f7 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x22b51b and fs3 == 0 and fe3 == 0x7d and fm3 == 0x18d609 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7077f7; op2val:0x3ea2b51b; op3val:0x3e98d609; valaddr_reg:x16; val_offset:1704; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1704, x17, x15, 1856, x18)

inst_1503:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7077f7 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x22b51b and fs3 == 0 and fe3 == 0x7d and fm3 == 0x18d609 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7077f7; op2val:0x3ea2b51b; op3val:0x3e98d609; valaddr_reg:x16; val_offset:1716; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1716, x17, x15, 1864, x18)

inst_1504:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7077f7 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x22b51b and fs3 == 0 and fe3 == 0x7d and fm3 == 0x18d609 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7077f7; op2val:0x3ea2b51b; op3val:0x3e98d609; valaddr_reg:x16; val_offset:1728; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1728, x17, x15, 1872, x18)

inst_1505:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7077f7 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x22b51b and fs3 == 0 and fe3 == 0x7d and fm3 == 0x18d609 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7077f7; op2val:0x3ea2b51b; op3val:0x3e98d609; valaddr_reg:x16; val_offset:1740; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1740, x17, x15, 1880, x18)

inst_1506:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x06a17d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x237c29 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2bf43d and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f06a17d; op2val:0x3f237c29; op3val:0x3eabf43d; valaddr_reg:x16; val_offset:1752; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1752, x17, x15, 1888, x18)

inst_1507:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x06a17d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x237c29 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2bf43d and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f06a17d; op2val:0x3f237c29; op3val:0x3eabf43d; valaddr_reg:x16; val_offset:1764; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1764, x17, x15, 1896, x18)

inst_1508:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x06a17d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x237c29 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2bf43d and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f06a17d; op2val:0x3f237c29; op3val:0x3eabf43d; valaddr_reg:x16; val_offset:1776; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1776, x17, x15, 1904, x18)

inst_1509:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x06a17d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x237c29 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2bf43d and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f06a17d; op2val:0x3f237c29; op3val:0x3eabf43d; valaddr_reg:x16; val_offset:1788; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1788, x17, x15, 1912, x18)

inst_1510:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x06a17d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x237c29 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x2bf43d and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f06a17d; op2val:0x3f237c29; op3val:0x3eabf43d; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1920, x18)

inst_1511:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x23df7c and fs2 == 0 and fe2 == 0x7d and fm2 == 0x30fc1f and fs3 == 0 and fe3 == 0x7a and fm3 == 0x629613 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e23df7c; op2val:0x3eb0fc1f; op3val:0x3d629613; valaddr_reg:x16; val_offset:1812; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1812, x17, x15, 1928, x18)

inst_1512:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x23df7c and fs2 == 0 and fe2 == 0x7d and fm2 == 0x30fc1f and fs3 == 0 and fe3 == 0x7a and fm3 == 0x629613 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e23df7c; op2val:0x3eb0fc1f; op3val:0x3d629613; valaddr_reg:x16; val_offset:1824; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1824, x17, x15, 1936, x18)

inst_1513:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x23df7c and fs2 == 0 and fe2 == 0x7d and fm2 == 0x30fc1f and fs3 == 0 and fe3 == 0x7a and fm3 == 0x629613 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e23df7c; op2val:0x3eb0fc1f; op3val:0x3d629613; valaddr_reg:x16; val_offset:1836; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1836, x17, x15, 1944, x18)

inst_1514:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x23df7c and fs2 == 0 and fe2 == 0x7d and fm2 == 0x30fc1f and fs3 == 0 and fe3 == 0x7a and fm3 == 0x629613 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e23df7c; op2val:0x3eb0fc1f; op3val:0x3d629613; valaddr_reg:x16; val_offset:1848; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1848, x17, x15, 1952, x18)

inst_1515:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x23df7c and fs2 == 0 and fe2 == 0x7d and fm2 == 0x30fc1f and fs3 == 0 and fe3 == 0x7a and fm3 == 0x629613 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e23df7c; op2val:0x3eb0fc1f; op3val:0x3d629613; valaddr_reg:x16; val_offset:1860; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1860, x17, x15, 1960, x18)

inst_1516:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5717f9 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x25afc2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0b3620 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed717f9; op2val:0x3fa5afc2; op3val:0x3f0b3620; valaddr_reg:x16; val_offset:1872; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1872, x17, x15, 1968, x18)

inst_1517:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5717f9 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x25afc2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0b3620 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed717f9; op2val:0x3fa5afc2; op3val:0x3f0b3620; valaddr_reg:x16; val_offset:1884; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1884, x17, x15, 1976, x18)

inst_1518:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5717f9 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x25afc2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0b3620 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed717f9; op2val:0x3fa5afc2; op3val:0x3f0b3620; valaddr_reg:x16; val_offset:1896; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1896, x17, x15, 1984, x18)

inst_1519:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5717f9 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x25afc2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0b3620 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed717f9; op2val:0x3fa5afc2; op3val:0x3f0b3620; valaddr_reg:x16; val_offset:1908; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1908, x17, x15, 1992, x18)

inst_1520:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5717f9 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x25afc2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0b3620 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed717f9; op2val:0x3fa5afc2; op3val:0x3f0b3620; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 2000, x18)

inst_1521:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1c023e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2a658c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4faec0 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e9c023e; op2val:0x3faa658c; op3val:0x3ecfaec0; valaddr_reg:x16; val_offset:1932; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1932, x17, x15, 2008, x18)

inst_1522:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1c023e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2a658c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4faec0 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e9c023e; op2val:0x3faa658c; op3val:0x3ecfaec0; valaddr_reg:x16; val_offset:1944; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1944, x17, x15, 2016, x18)

inst_1523:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1c023e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2a658c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4faec0 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e9c023e; op2val:0x3faa658c; op3val:0x3ecfaec0; valaddr_reg:x16; val_offset:1956; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1956, x17, x15, 2024, x18)
RVTEST_SIGBASE(x15,signature_x15_7)

inst_1524:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1c023e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2a658c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4faec0 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e9c023e; op2val:0x3faa658c; op3val:0x3ecfaec0; valaddr_reg:x16; val_offset:1968; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1968, x17, x15, 0, x18)

inst_1525:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1c023e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2a658c and fs3 == 0 and fe3 == 0x7d and fm3 == 0x4faec0 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e9c023e; op2val:0x3faa658c; op3val:0x3ecfaec0; valaddr_reg:x16; val_offset:1980; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1980, x17, x15, 8, x18)

inst_1526:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x7f057d and fs2 == 0 and fe2 == 0x81 and fm2 == 0x305ad1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2fae3e and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dff057d; op2val:0x40b05ad1; op3val:0x3f2fae3e; valaddr_reg:x16; val_offset:1992; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1992, x17, x15, 16, x18)

inst_1527:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x7f057d and fs2 == 0 and fe2 == 0x81 and fm2 == 0x305ad1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2fae3e and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dff057d; op2val:0x40b05ad1; op3val:0x3f2fae3e; valaddr_reg:x16; val_offset:2004; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 2004, x17, x15, 24, x18)

inst_1528:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x7f057d and fs2 == 0 and fe2 == 0x81 and fm2 == 0x305ad1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2fae3e and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dff057d; op2val:0x40b05ad1; op3val:0x3f2fae3e; valaddr_reg:x16; val_offset:2016; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 2016, x17, x15, 32, x18)

inst_1529:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x7f057d and fs2 == 0 and fe2 == 0x81 and fm2 == 0x305ad1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2fae3e and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dff057d; op2val:0x40b05ad1; op3val:0x3f2fae3e; valaddr_reg:x16; val_offset:2028; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 2028, x17, x15, 40, x18)
addi x16,x16,2040

inst_1530:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x7f057d and fs2 == 0 and fe2 == 0x81 and fm2 == 0x305ad1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x2fae3e and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3dff057d; op2val:0x40b05ad1; op3val:0x3f2fae3e; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 48, x18)

inst_1531:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x711455 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x682403 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5a9c58 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e711455; op2val:0x3fe82403; op3val:0x3eda9c58; valaddr_reg:x16; val_offset:12; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 12, x17, x15, 56, x18)

inst_1532:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x711455 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x682403 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5a9c58 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e711455; op2val:0x3fe82403; op3val:0x3eda9c58; valaddr_reg:x16; val_offset:24; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 24, x17, x15, 64, x18)

inst_1533:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x711455 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x682403 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5a9c58 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e711455; op2val:0x3fe82403; op3val:0x3eda9c58; valaddr_reg:x16; val_offset:36; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 36, x17, x15, 72, x18)

inst_1534:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x711455 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x682403 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5a9c58 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e711455; op2val:0x3fe82403; op3val:0x3eda9c58; valaddr_reg:x16; val_offset:48; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 48, x17, x15, 80, x18)

inst_1535:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x711455 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x682403 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x5a9c58 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e711455; op2val:0x3fe82403; op3val:0x3eda9c58; valaddr_reg:x16; val_offset:60; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 60, x17, x15, 88, x18)

inst_1536:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x75f683 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x30ce37 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x29df9c and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f75f683; op2val:0x3eb0ce37; op3val:0x3ea9df9c; valaddr_reg:x16; val_offset:72; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 72, x17, x15, 96, x18)

inst_1537:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x75f683 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x30ce37 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x29df9c and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f75f683; op2val:0x3eb0ce37; op3val:0x3ea9df9c; valaddr_reg:x16; val_offset:84; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 84, x17, x15, 104, x18)

inst_1538:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x75f683 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x30ce37 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x29df9c and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f75f683; op2val:0x3eb0ce37; op3val:0x3ea9df9c; valaddr_reg:x16; val_offset:96; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 96, x17, x15, 112, x18)

inst_1539:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x75f683 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x30ce37 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x29df9c and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f75f683; op2val:0x3eb0ce37; op3val:0x3ea9df9c; valaddr_reg:x16; val_offset:108; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 108, x17, x15, 120, x18)

inst_1540:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x75f683 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x30ce37 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x29df9c and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f75f683; op2val:0x3eb0ce37; op3val:0x3ea9df9c; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 128, x18)

inst_1541:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x59178a and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1a45c1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x02d350 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f59178a; op2val:0x3f1a45c1; op3val:0x3f02d350; valaddr_reg:x16; val_offset:132; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 132, x17, x15, 136, x18)

inst_1542:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x59178a and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1a45c1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x02d350 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f59178a; op2val:0x3f1a45c1; op3val:0x3f02d350; valaddr_reg:x16; val_offset:144; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 144, x17, x15, 144, x18)

inst_1543:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x59178a and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1a45c1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x02d350 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f59178a; op2val:0x3f1a45c1; op3val:0x3f02d350; valaddr_reg:x16; val_offset:156; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 156, x17, x15, 152, x18)

inst_1544:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x59178a and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1a45c1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x02d350 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f59178a; op2val:0x3f1a45c1; op3val:0x3f02d350; valaddr_reg:x16; val_offset:168; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 168, x17, x15, 160, x18)

inst_1545:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x59178a and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1a45c1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x02d350 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f59178a; op2val:0x3f1a45c1; op3val:0x3f02d350; valaddr_reg:x16; val_offset:180; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 180, x17, x15, 168, x18)

inst_1546:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x14f5e7 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x55b1be and fs3 == 0 and fe3 == 0x7c and fm3 == 0x78b00c and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f14f5e7; op2val:0x3ed5b1be; op3val:0x3e78b00c; valaddr_reg:x16; val_offset:192; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 192, x17, x15, 176, x18)

inst_1547:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x14f5e7 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x55b1be and fs3 == 0 and fe3 == 0x7c and fm3 == 0x78b00c and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f14f5e7; op2val:0x3ed5b1be; op3val:0x3e78b00c; valaddr_reg:x16; val_offset:204; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 204, x17, x15, 184, x18)

inst_1548:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x14f5e7 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x55b1be and fs3 == 0 and fe3 == 0x7c and fm3 == 0x78b00c and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f14f5e7; op2val:0x3ed5b1be; op3val:0x3e78b00c; valaddr_reg:x16; val_offset:216; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 216, x17, x15, 192, x18)

inst_1549:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x14f5e7 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x55b1be and fs3 == 0 and fe3 == 0x7c and fm3 == 0x78b00c and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f14f5e7; op2val:0x3ed5b1be; op3val:0x3e78b00c; valaddr_reg:x16; val_offset:228; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 228, x17, x15, 200, x18)

inst_1550:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x14f5e7 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x55b1be and fs3 == 0 and fe3 == 0x7c and fm3 == 0x78b00c and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f14f5e7; op2val:0x3ed5b1be; op3val:0x3e78b00c; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 208, x18)

inst_1551:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x22685b and fs2 == 0 and fe2 == 0x84 and fm2 == 0x31f146 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x61c670 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ca2685b; op2val:0x4231f146; op3val:0x3f61c670; valaddr_reg:x16; val_offset:252; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 252, x17, x15, 216, x18)

inst_1552:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x22685b and fs2 == 0 and fe2 == 0x84 and fm2 == 0x31f146 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x61c670 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ca2685b; op2val:0x4231f146; op3val:0x3f61c670; valaddr_reg:x16; val_offset:264; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 264, x17, x15, 224, x18)

inst_1553:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x22685b and fs2 == 0 and fe2 == 0x84 and fm2 == 0x31f146 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x61c670 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ca2685b; op2val:0x4231f146; op3val:0x3f61c670; valaddr_reg:x16; val_offset:276; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 276, x17, x15, 232, x18)

inst_1554:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x22685b and fs2 == 0 and fe2 == 0x84 and fm2 == 0x31f146 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x61c670 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ca2685b; op2val:0x4231f146; op3val:0x3f61c670; valaddr_reg:x16; val_offset:288; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 288, x17, x15, 240, x18)

inst_1555:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x22685b and fs2 == 0 and fe2 == 0x84 and fm2 == 0x31f146 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x61c670 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ca2685b; op2val:0x4231f146; op3val:0x3f61c670; valaddr_reg:x16; val_offset:300; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 300, x17, x15, 248, x18)

inst_1556:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0a8625 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x287066 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3649b5 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8a8625; op2val:0x40287066; op3val:0x3f3649b5; valaddr_reg:x16; val_offset:312; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 312, x17, x15, 256, x18)

inst_1557:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0a8625 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x287066 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3649b5 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8a8625; op2val:0x40287066; op3val:0x3f3649b5; valaddr_reg:x16; val_offset:324; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 324, x17, x15, 264, x18)

inst_1558:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0a8625 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x287066 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3649b5 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8a8625; op2val:0x40287066; op3val:0x3f3649b5; valaddr_reg:x16; val_offset:336; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 336, x17, x15, 272, x18)

inst_1559:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0a8625 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x287066 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3649b5 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8a8625; op2val:0x40287066; op3val:0x3f3649b5; valaddr_reg:x16; val_offset:348; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 348, x17, x15, 280, x18)

inst_1560:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0a8625 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x287066 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3649b5 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e8a8625; op2val:0x40287066; op3val:0x3f3649b5; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 288, x18)

inst_1561:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x731971 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x06a4f3 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x7fb7e9 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef31971; op2val:0x3e86a4f3; op3val:0x3dffb7e9; valaddr_reg:x16; val_offset:372; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 372, x17, x15, 296, x18)

inst_1562:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x731971 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x06a4f3 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x7fb7e9 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef31971; op2val:0x3e86a4f3; op3val:0x3dffb7e9; valaddr_reg:x16; val_offset:384; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 384, x17, x15, 304, x18)

inst_1563:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x731971 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x06a4f3 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x7fb7e9 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef31971; op2val:0x3e86a4f3; op3val:0x3dffb7e9; valaddr_reg:x16; val_offset:396; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 396, x17, x15, 312, x18)

inst_1564:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x731971 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x06a4f3 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x7fb7e9 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef31971; op2val:0x3e86a4f3; op3val:0x3dffb7e9; valaddr_reg:x16; val_offset:408; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 408, x17, x15, 320, x18)

inst_1565:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x731971 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x06a4f3 and fs3 == 0 and fe3 == 0x7b and fm3 == 0x7fb7e9 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ef31971; op2val:0x3e86a4f3; op3val:0x3dffb7e9; valaddr_reg:x16; val_offset:420; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 420, x17, x15, 328, x18)

inst_1566:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4182e4 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1020fe and fs3 == 0 and fe3 == 0x7d and fm3 == 0x59e522 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4182e4; op2val:0x3f1020fe; op3val:0x3ed9e522; valaddr_reg:x16; val_offset:432; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 432, x17, x15, 336, x18)

inst_1567:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4182e4 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1020fe and fs3 == 0 and fe3 == 0x7d and fm3 == 0x59e522 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4182e4; op2val:0x3f1020fe; op3val:0x3ed9e522; valaddr_reg:x16; val_offset:444; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 444, x17, x15, 344, x18)

inst_1568:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4182e4 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1020fe and fs3 == 0 and fe3 == 0x7d and fm3 == 0x59e522 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4182e4; op2val:0x3f1020fe; op3val:0x3ed9e522; valaddr_reg:x16; val_offset:456; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 456, x17, x15, 352, x18)

inst_1569:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4182e4 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1020fe and fs3 == 0 and fe3 == 0x7d and fm3 == 0x59e522 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4182e4; op2val:0x3f1020fe; op3val:0x3ed9e522; valaddr_reg:x16; val_offset:468; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 468, x17, x15, 360, x18)

inst_1570:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4182e4 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1020fe and fs3 == 0 and fe3 == 0x7d and fm3 == 0x59e522 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f4182e4; op2val:0x3f1020fe; op3val:0x3ed9e522; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 368, x18)

inst_1571:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x528e2f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3b60b4 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1a1d66 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e528e2f; op2val:0x3fbb60b4; op3val:0x3e9a1d66; valaddr_reg:x16; val_offset:492; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 492, x17, x15, 376, x18)

inst_1572:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x528e2f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3b60b4 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1a1d66 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e528e2f; op2val:0x3fbb60b4; op3val:0x3e9a1d66; valaddr_reg:x16; val_offset:504; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 504, x17, x15, 384, x18)

inst_1573:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x528e2f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3b60b4 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1a1d66 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e528e2f; op2val:0x3fbb60b4; op3val:0x3e9a1d66; valaddr_reg:x16; val_offset:516; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 516, x17, x15, 392, x18)

inst_1574:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x528e2f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3b60b4 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1a1d66 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e528e2f; op2val:0x3fbb60b4; op3val:0x3e9a1d66; valaddr_reg:x16; val_offset:528; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 528, x17, x15, 400, x18)

inst_1575:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x528e2f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3b60b4 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1a1d66 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e528e2f; op2val:0x3fbb60b4; op3val:0x3e9a1d66; valaddr_reg:x16; val_offset:540; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 540, x17, x15, 408, x18)

inst_1576:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0bfc1b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x23e98e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x334278 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0bfc1b; op2val:0x3fa3e98e; op3val:0x3f334278; valaddr_reg:x16; val_offset:552; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 552, x17, x15, 416, x18)

inst_1577:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0bfc1b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x23e98e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x334278 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0bfc1b; op2val:0x3fa3e98e; op3val:0x3f334278; valaddr_reg:x16; val_offset:564; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 564, x17, x15, 424, x18)

inst_1578:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0bfc1b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x23e98e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x334278 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0bfc1b; op2val:0x3fa3e98e; op3val:0x3f334278; valaddr_reg:x16; val_offset:576; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 576, x17, x15, 432, x18)

inst_1579:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0bfc1b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x23e98e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x334278 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0bfc1b; op2val:0x3fa3e98e; op3val:0x3f334278; valaddr_reg:x16; val_offset:588; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 588, x17, x15, 440, x18)

inst_1580:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0bfc1b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x23e98e and fs3 == 0 and fe3 == 0x7e and fm3 == 0x334278 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f0bfc1b; op2val:0x3fa3e98e; op3val:0x3f334278; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 448, x18)

inst_1581:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2f940d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1ab13b and fs3 == 0 and fe3 == 0x7d and fm3 == 0x54313c and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2f940d; op2val:0x3f1ab13b; op3val:0x3ed4313c; valaddr_reg:x16; val_offset:612; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 612, x17, x15, 456, x18)

inst_1582:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2f940d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1ab13b and fs3 == 0 and fe3 == 0x7d and fm3 == 0x54313c and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2f940d; op2val:0x3f1ab13b; op3val:0x3ed4313c; valaddr_reg:x16; val_offset:624; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 624, x17, x15, 464, x18)

inst_1583:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2f940d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1ab13b and fs3 == 0 and fe3 == 0x7d and fm3 == 0x54313c and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2f940d; op2val:0x3f1ab13b; op3val:0x3ed4313c; valaddr_reg:x16; val_offset:636; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 636, x17, x15, 472, x18)

inst_1584:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2f940d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1ab13b and fs3 == 0 and fe3 == 0x7d and fm3 == 0x54313c and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2f940d; op2val:0x3f1ab13b; op3val:0x3ed4313c; valaddr_reg:x16; val_offset:648; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 648, x17, x15, 480, x18)

inst_1585:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2f940d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1ab13b and fs3 == 0 and fe3 == 0x7d and fm3 == 0x54313c and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2f940d; op2val:0x3f1ab13b; op3val:0x3ed4313c; valaddr_reg:x16; val_offset:660; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 660, x17, x15, 488, x18)

inst_1586:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x23a29d and fs2 == 0 and fe2 == 0x7f and fm2 == 0x653fe7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x12894f and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ea3a29d; op2val:0x3fe53fe7; op3val:0x3f12894f; valaddr_reg:x16; val_offset:672; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 672, x17, x15, 496, x18)

inst_1587:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x23a29d and fs2 == 0 and fe2 == 0x7f and fm2 == 0x653fe7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x12894f and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ea3a29d; op2val:0x3fe53fe7; op3val:0x3f12894f; valaddr_reg:x16; val_offset:684; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 684, x17, x15, 504, x18)

inst_1588:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x23a29d and fs2 == 0 and fe2 == 0x7f and fm2 == 0x653fe7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x12894f and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ea3a29d; op2val:0x3fe53fe7; op3val:0x3f12894f; valaddr_reg:x16; val_offset:696; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 696, x17, x15, 512, x18)

inst_1589:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x23a29d and fs2 == 0 and fe2 == 0x7f and fm2 == 0x653fe7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x12894f and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ea3a29d; op2val:0x3fe53fe7; op3val:0x3f12894f; valaddr_reg:x16; val_offset:708; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 708, x17, x15, 520, x18)

inst_1590:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x23a29d and fs2 == 0 and fe2 == 0x7f and fm2 == 0x653fe7 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x12894f and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ea3a29d; op2val:0x3fe53fe7; op3val:0x3f12894f; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 528, x18)

inst_1591:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x70bdfa and fs2 == 0 and fe2 == 0x7e and fm2 == 0x582867 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4b464a and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f70bdfa; op2val:0x3f582867; op3val:0x3f4b464a; valaddr_reg:x16; val_offset:732; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 732, x17, x15, 536, x18)

inst_1592:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x70bdfa and fs2 == 0 and fe2 == 0x7e and fm2 == 0x582867 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4b464a and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f70bdfa; op2val:0x3f582867; op3val:0x3f4b464a; valaddr_reg:x16; val_offset:744; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 744, x17, x15, 544, x18)

inst_1593:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x70bdfa and fs2 == 0 and fe2 == 0x7e and fm2 == 0x582867 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4b464a and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f70bdfa; op2val:0x3f582867; op3val:0x3f4b464a; valaddr_reg:x16; val_offset:756; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 756, x17, x15, 552, x18)

inst_1594:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x70bdfa and fs2 == 0 and fe2 == 0x7e and fm2 == 0x582867 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4b464a and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f70bdfa; op2val:0x3f582867; op3val:0x3f4b464a; valaddr_reg:x16; val_offset:768; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 768, x17, x15, 560, x18)

inst_1595:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x70bdfa and fs2 == 0 and fe2 == 0x7e and fm2 == 0x582867 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x4b464a and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f70bdfa; op2val:0x3f582867; op3val:0x3f4b464a; valaddr_reg:x16; val_offset:780; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 780, x17, x15, 568, x18)

inst_1596:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x678e09 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x04a0a1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6fed0f and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee78e09; op2val:0x4004a0a1; op3val:0x3f6fed0f; valaddr_reg:x16; val_offset:792; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 792, x17, x15, 576, x18)

inst_1597:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x678e09 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x04a0a1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6fed0f and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee78e09; op2val:0x4004a0a1; op3val:0x3f6fed0f; valaddr_reg:x16; val_offset:804; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 804, x17, x15, 584, x18)

inst_1598:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x678e09 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x04a0a1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6fed0f and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee78e09; op2val:0x4004a0a1; op3val:0x3f6fed0f; valaddr_reg:x16; val_offset:816; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 816, x17, x15, 592, x18)

inst_1599:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x678e09 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x04a0a1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6fed0f and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee78e09; op2val:0x4004a0a1; op3val:0x3f6fed0f; valaddr_reg:x16; val_offset:828; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 828, x17, x15, 600, x18)

inst_1600:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x678e09 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x04a0a1 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6fed0f and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ee78e09; op2val:0x4004a0a1; op3val:0x3f6fed0f; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 608, x18)

inst_1601:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x38e055 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x5e79e0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x20aa8d and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb8e055; op2val:0x3fde79e0; op3val:0x3f20aa8d; valaddr_reg:x16; val_offset:852; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 852, x17, x15, 616, x18)

inst_1602:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x38e055 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x5e79e0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x20aa8d and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb8e055; op2val:0x3fde79e0; op3val:0x3f20aa8d; valaddr_reg:x16; val_offset:864; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 864, x17, x15, 624, x18)

inst_1603:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x38e055 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x5e79e0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x20aa8d and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb8e055; op2val:0x3fde79e0; op3val:0x3f20aa8d; valaddr_reg:x16; val_offset:876; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 876, x17, x15, 632, x18)

inst_1604:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x38e055 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x5e79e0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x20aa8d and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb8e055; op2val:0x3fde79e0; op3val:0x3f20aa8d; valaddr_reg:x16; val_offset:888; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 888, x17, x15, 640, x18)

inst_1605:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x38e055 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x5e79e0 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x20aa8d and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb8e055; op2val:0x3fde79e0; op3val:0x3f20aa8d; valaddr_reg:x16; val_offset:900; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 900, x17, x15, 648, x18)

inst_1606:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x51bbea and fs2 == 0 and fe2 == 0x7e and fm2 == 0x02bcfa and fs3 == 0 and fe3 == 0x7d and fm3 == 0x563880 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f51bbea; op2val:0x3f02bcfa; op3val:0x3ed63880; valaddr_reg:x16; val_offset:912; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 912, x17, x15, 656, x18)

inst_1607:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x51bbea and fs2 == 0 and fe2 == 0x7e and fm2 == 0x02bcfa and fs3 == 0 and fe3 == 0x7d and fm3 == 0x563880 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f51bbea; op2val:0x3f02bcfa; op3val:0x3ed63880; valaddr_reg:x16; val_offset:924; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 924, x17, x15, 664, x18)

inst_1608:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x51bbea and fs2 == 0 and fe2 == 0x7e and fm2 == 0x02bcfa and fs3 == 0 and fe3 == 0x7d and fm3 == 0x563880 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f51bbea; op2val:0x3f02bcfa; op3val:0x3ed63880; valaddr_reg:x16; val_offset:936; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 936, x17, x15, 672, x18)

inst_1609:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x51bbea and fs2 == 0 and fe2 == 0x7e and fm2 == 0x02bcfa and fs3 == 0 and fe3 == 0x7d and fm3 == 0x563880 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f51bbea; op2val:0x3f02bcfa; op3val:0x3ed63880; valaddr_reg:x16; val_offset:948; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 948, x17, x15, 680, x18)

inst_1610:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x51bbea and fs2 == 0 and fe2 == 0x7e and fm2 == 0x02bcfa and fs3 == 0 and fe3 == 0x7d and fm3 == 0x563880 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f51bbea; op2val:0x3f02bcfa; op3val:0x3ed63880; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 688, x18)

inst_1611:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x310755 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x0823d8 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3c495f and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f310755; op2val:0x3e8823d8; op3val:0x3e3c495f; valaddr_reg:x16; val_offset:972; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 972, x17, x15, 696, x18)

inst_1612:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x310755 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x0823d8 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3c495f and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f310755; op2val:0x3e8823d8; op3val:0x3e3c495f; valaddr_reg:x16; val_offset:984; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 984, x17, x15, 704, x18)

inst_1613:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x310755 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x0823d8 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3c495f and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f310755; op2val:0x3e8823d8; op3val:0x3e3c495f; valaddr_reg:x16; val_offset:996; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 996, x17, x15, 712, x18)

inst_1614:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x310755 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x0823d8 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3c495f and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f310755; op2val:0x3e8823d8; op3val:0x3e3c495f; valaddr_reg:x16; val_offset:1008; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1008, x17, x15, 720, x18)

inst_1615:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x310755 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x0823d8 and fs3 == 0 and fe3 == 0x7c and fm3 == 0x3c495f and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f310755; op2val:0x3e8823d8; op3val:0x3e3c495f; valaddr_reg:x16; val_offset:1020; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1020, x17, x15, 728, x18)

inst_1616:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5b1219 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x03f54f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x61d85e and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5b1219; op2val:0x3f83f54f; op3val:0x3f61d85e; valaddr_reg:x16; val_offset:1032; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1032, x17, x15, 736, x18)

inst_1617:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5b1219 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x03f54f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x61d85e and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5b1219; op2val:0x3f83f54f; op3val:0x3f61d85e; valaddr_reg:x16; val_offset:1044; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1044, x17, x15, 744, x18)

inst_1618:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5b1219 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x03f54f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x61d85e and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5b1219; op2val:0x3f83f54f; op3val:0x3f61d85e; valaddr_reg:x16; val_offset:1056; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1056, x17, x15, 752, x18)

inst_1619:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5b1219 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x03f54f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x61d85e and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5b1219; op2val:0x3f83f54f; op3val:0x3f61d85e; valaddr_reg:x16; val_offset:1068; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1068, x17, x15, 760, x18)

inst_1620:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5b1219 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x03f54f and fs3 == 0 and fe3 == 0x7e and fm3 == 0x61d85e and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5b1219; op2val:0x3f83f54f; op3val:0x3f61d85e; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 768, x18)

inst_1621:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x10eda4 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x209e30 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x35dc2a and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e10eda4; op2val:0x40a09e30; op3val:0x3f35dc2a; valaddr_reg:x16; val_offset:1092; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1092, x17, x15, 776, x18)

inst_1622:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x10eda4 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x209e30 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x35dc2a and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e10eda4; op2val:0x40a09e30; op3val:0x3f35dc2a; valaddr_reg:x16; val_offset:1104; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1104, x17, x15, 784, x18)

inst_1623:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x10eda4 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x209e30 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x35dc2a and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e10eda4; op2val:0x40a09e30; op3val:0x3f35dc2a; valaddr_reg:x16; val_offset:1116; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1116, x17, x15, 792, x18)

inst_1624:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x10eda4 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x209e30 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x35dc2a and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e10eda4; op2val:0x40a09e30; op3val:0x3f35dc2a; valaddr_reg:x16; val_offset:1128; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1128, x17, x15, 800, x18)

inst_1625:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x10eda4 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x209e30 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x35dc2a and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3e10eda4; op2val:0x40a09e30; op3val:0x3f35dc2a; valaddr_reg:x16; val_offset:1140; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1140, x17, x15, 808, x18)

inst_1626:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x4284a7 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x209c2d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x741328 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3cc284a7; op2val:0x42209c2d; op3val:0x3f741328; valaddr_reg:x16; val_offset:1152; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1152, x17, x15, 816, x18)

inst_1627:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x4284a7 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x209c2d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x741328 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3cc284a7; op2val:0x42209c2d; op3val:0x3f741328; valaddr_reg:x16; val_offset:1164; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1164, x17, x15, 824, x18)

inst_1628:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x4284a7 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x209c2d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x741328 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3cc284a7; op2val:0x42209c2d; op3val:0x3f741328; valaddr_reg:x16; val_offset:1176; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1176, x17, x15, 832, x18)

inst_1629:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x4284a7 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x209c2d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x741328 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3cc284a7; op2val:0x42209c2d; op3val:0x3f741328; valaddr_reg:x16; val_offset:1188; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1188, x17, x15, 840, x18)

inst_1630:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x4284a7 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x209c2d and fs3 == 0 and fe3 == 0x7e and fm3 == 0x741328 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3cc284a7; op2val:0x42209c2d; op3val:0x3f741328; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 848, x18)

inst_1631:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5885f6 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x369bf5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1a7325 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed885f6; op2val:0x3fb69bf5; op3val:0x3f1a7325; valaddr_reg:x16; val_offset:1212; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1212, x17, x15, 856, x18)

inst_1632:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5885f6 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x369bf5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1a7325 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed885f6; op2val:0x3fb69bf5; op3val:0x3f1a7325; valaddr_reg:x16; val_offset:1224; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1224, x17, x15, 864, x18)

inst_1633:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5885f6 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x369bf5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1a7325 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed885f6; op2val:0x3fb69bf5; op3val:0x3f1a7325; valaddr_reg:x16; val_offset:1236; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1236, x17, x15, 872, x18)

inst_1634:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5885f6 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x369bf5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1a7325 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed885f6; op2val:0x3fb69bf5; op3val:0x3f1a7325; valaddr_reg:x16; val_offset:1248; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1248, x17, x15, 880, x18)

inst_1635:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5885f6 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x369bf5 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x1a7325 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ed885f6; op2val:0x3fb69bf5; op3val:0x3f1a7325; valaddr_reg:x16; val_offset:1260; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1260, x17, x15, 888, x18)

inst_1636:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3ec112 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x0fb8d5 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x562f25 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ebec112; op2val:0x3e0fb8d5; op3val:0x3d562f25; valaddr_reg:x16; val_offset:1272; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1272, x17, x15, 896, x18)

inst_1637:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3ec112 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x0fb8d5 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x562f25 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ebec112; op2val:0x3e0fb8d5; op3val:0x3d562f25; valaddr_reg:x16; val_offset:1284; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1284, x17, x15, 904, x18)

inst_1638:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3ec112 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x0fb8d5 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x562f25 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ebec112; op2val:0x3e0fb8d5; op3val:0x3d562f25; valaddr_reg:x16; val_offset:1296; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1296, x17, x15, 912, x18)

inst_1639:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3ec112 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x0fb8d5 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x562f25 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ebec112; op2val:0x3e0fb8d5; op3val:0x3d562f25; valaddr_reg:x16; val_offset:1308; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1308, x17, x15, 920, x18)

inst_1640:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3ec112 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x0fb8d5 and fs3 == 0 and fe3 == 0x7a and fm3 == 0x562f25 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ebec112; op2val:0x3e0fb8d5; op3val:0x3d562f25; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 928, x18)

inst_1641:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x604e83 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x62f285 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x46d9cf and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f604e83; op2val:0x3f62f285; op3val:0x3f46d9cf; valaddr_reg:x16; val_offset:1332; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1332, x17, x15, 936, x18)

inst_1642:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x604e83 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x62f285 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x46d9cf and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f604e83; op2val:0x3f62f285; op3val:0x3f46d9cf; valaddr_reg:x16; val_offset:1344; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1344, x17, x15, 944, x18)

inst_1643:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x604e83 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x62f285 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x46d9cf and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f604e83; op2val:0x3f62f285; op3val:0x3f46d9cf; valaddr_reg:x16; val_offset:1356; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1356, x17, x15, 952, x18)

inst_1644:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x604e83 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x62f285 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x46d9cf and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f604e83; op2val:0x3f62f285; op3val:0x3f46d9cf; valaddr_reg:x16; val_offset:1368; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1368, x17, x15, 960, x18)

inst_1645:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x604e83 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x62f285 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x46d9cf and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f604e83; op2val:0x3f62f285; op3val:0x3f46d9cf; valaddr_reg:x16; val_offset:1380; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1380, x17, x15, 968, x18)

inst_1646:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1352b5 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x1a0c4e and fs3 == 0 and fe3 == 0x7c and fm3 == 0x314dad and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1352b5; op2val:0x3e9a0c4e; op3val:0x3e314dad; valaddr_reg:x16; val_offset:1392; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1392, x17, x15, 976, x18)

inst_1647:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1352b5 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x1a0c4e and fs3 == 0 and fe3 == 0x7c and fm3 == 0x314dad and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1352b5; op2val:0x3e9a0c4e; op3val:0x3e314dad; valaddr_reg:x16; val_offset:1404; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1404, x17, x15, 984, x18)

inst_1648:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1352b5 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x1a0c4e and fs3 == 0 and fe3 == 0x7c and fm3 == 0x314dad and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1352b5; op2val:0x3e9a0c4e; op3val:0x3e314dad; valaddr_reg:x16; val_offset:1416; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1416, x17, x15, 992, x18)

inst_1649:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1352b5 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x1a0c4e and fs3 == 0 and fe3 == 0x7c and fm3 == 0x314dad and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1352b5; op2val:0x3e9a0c4e; op3val:0x3e314dad; valaddr_reg:x16; val_offset:1428; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1428, x17, x15, 1000, x18)

inst_1650:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1352b5 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x1a0c4e and fs3 == 0 and fe3 == 0x7c and fm3 == 0x314dad and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f1352b5; op2val:0x3e9a0c4e; op3val:0x3e314dad; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 1008, x18)

inst_1651:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6e1df4 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7a426b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x68c708 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6e1df4; op2val:0x3f7a426b; op3val:0x3f68c708; valaddr_reg:x16; val_offset:1452; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1452, x17, x15, 1016, x18)

inst_1652:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6e1df4 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7a426b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x68c708 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6e1df4; op2val:0x3f7a426b; op3val:0x3f68c708; valaddr_reg:x16; val_offset:1464; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1464, x17, x15, 1024, x18)

inst_1653:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6e1df4 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7a426b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x68c708 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6e1df4; op2val:0x3f7a426b; op3val:0x3f68c708; valaddr_reg:x16; val_offset:1476; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1476, x17, x15, 1032, x18)

inst_1654:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6e1df4 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7a426b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x68c708 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6e1df4; op2val:0x3f7a426b; op3val:0x3f68c708; valaddr_reg:x16; val_offset:1488; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1488, x17, x15, 1040, x18)

inst_1655:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6e1df4 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7a426b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x68c708 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f6e1df4; op2val:0x3f7a426b; op3val:0x3f68c708; valaddr_reg:x16; val_offset:1500; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1500, x17, x15, 1048, x18)

inst_1656:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7666af and fs2 == 0 and fe2 == 0x7e and fm2 == 0x16a286 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x10fc98 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7666af; op2val:0x3f16a286; op3val:0x3f10fc98; valaddr_reg:x16; val_offset:1512; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1512, x17, x15, 1056, x18)

inst_1657:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7666af and fs2 == 0 and fe2 == 0x7e and fm2 == 0x16a286 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x10fc98 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7666af; op2val:0x3f16a286; op3val:0x3f10fc98; valaddr_reg:x16; val_offset:1524; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1524, x17, x15, 1064, x18)

inst_1658:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7666af and fs2 == 0 and fe2 == 0x7e and fm2 == 0x16a286 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x10fc98 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7666af; op2val:0x3f16a286; op3val:0x3f10fc98; valaddr_reg:x16; val_offset:1536; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1536, x17, x15, 1072, x18)

inst_1659:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7666af and fs2 == 0 and fe2 == 0x7e and fm2 == 0x16a286 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x10fc98 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7666af; op2val:0x3f16a286; op3val:0x3f10fc98; valaddr_reg:x16; val_offset:1548; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1548, x17, x15, 1080, x18)

inst_1660:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7666af and fs2 == 0 and fe2 == 0x7e and fm2 == 0x16a286 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x10fc98 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7666af; op2val:0x3f16a286; op3val:0x3f10fc98; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1088, x18)

inst_1661:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7126fb and fs2 == 0 and fe2 == 0x7e and fm2 == 0x05dc36 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7c3162 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7126fb; op2val:0x3f05dc36; op3val:0x3efc3162; valaddr_reg:x16; val_offset:1572; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1572, x17, x15, 1096, x18)

inst_1662:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7126fb and fs2 == 0 and fe2 == 0x7e and fm2 == 0x05dc36 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7c3162 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7126fb; op2val:0x3f05dc36; op3val:0x3efc3162; valaddr_reg:x16; val_offset:1584; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1584, x17, x15, 1104, x18)

inst_1663:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7126fb and fs2 == 0 and fe2 == 0x7e and fm2 == 0x05dc36 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7c3162 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7126fb; op2val:0x3f05dc36; op3val:0x3efc3162; valaddr_reg:x16; val_offset:1596; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1596, x17, x15, 1112, x18)

inst_1664:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7126fb and fs2 == 0 and fe2 == 0x7e and fm2 == 0x05dc36 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7c3162 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7126fb; op2val:0x3f05dc36; op3val:0x3efc3162; valaddr_reg:x16; val_offset:1608; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1608, x17, x15, 1120, x18)

inst_1665:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7126fb and fs2 == 0 and fe2 == 0x7e and fm2 == 0x05dc36 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x7c3162 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f7126fb; op2val:0x3f05dc36; op3val:0x3efc3162; valaddr_reg:x16; val_offset:1620; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1620, x17, x15, 1128, x18)

inst_1666:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6da0df and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2ef018 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x226236 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eeda0df; op2val:0x3faef018; op3val:0x3f226236; valaddr_reg:x16; val_offset:1632; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1632, x17, x15, 1136, x18)

inst_1667:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6da0df and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2ef018 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x226236 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eeda0df; op2val:0x3faef018; op3val:0x3f226236; valaddr_reg:x16; val_offset:1644; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1644, x17, x15, 1144, x18)

inst_1668:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6da0df and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2ef018 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x226236 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eeda0df; op2val:0x3faef018; op3val:0x3f226236; valaddr_reg:x16; val_offset:1656; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1656, x17, x15, 1152, x18)

inst_1669:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6da0df and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2ef018 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x226236 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eeda0df; op2val:0x3faef018; op3val:0x3f226236; valaddr_reg:x16; val_offset:1668; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1668, x17, x15, 1160, x18)

inst_1670:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6da0df and fs2 == 0 and fe2 == 0x7f and fm2 == 0x2ef018 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x226236 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eeda0df; op2val:0x3faef018; op3val:0x3f226236; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1168, x18)

inst_1671:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x32b8b7 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2a10d2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6d74d0 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb2b8b7; op2val:0x402a10d2; op3val:0x3f6d74d0; valaddr_reg:x16; val_offset:1692; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1692, x17, x15, 1176, x18)

inst_1672:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x32b8b7 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2a10d2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6d74d0 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb2b8b7; op2val:0x402a10d2; op3val:0x3f6d74d0; valaddr_reg:x16; val_offset:1704; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1704, x17, x15, 1184, x18)

inst_1673:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x32b8b7 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2a10d2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6d74d0 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb2b8b7; op2val:0x402a10d2; op3val:0x3f6d74d0; valaddr_reg:x16; val_offset:1716; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1716, x17, x15, 1192, x18)

inst_1674:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x32b8b7 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2a10d2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6d74d0 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb2b8b7; op2val:0x402a10d2; op3val:0x3f6d74d0; valaddr_reg:x16; val_offset:1728; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1728, x17, x15, 1200, x18)

inst_1675:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x32b8b7 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2a10d2 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x6d74d0 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eb2b8b7; op2val:0x402a10d2; op3val:0x3f6d74d0; valaddr_reg:x16; val_offset:1740; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1740, x17, x15, 1208, x18)

inst_1676:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2d194b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x20bf06 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5961f2 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2d194b; op2val:0x3fa0bf06; op3val:0x3f5961f2; valaddr_reg:x16; val_offset:1752; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1752, x17, x15, 1216, x18)

inst_1677:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2d194b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x20bf06 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5961f2 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2d194b; op2val:0x3fa0bf06; op3val:0x3f5961f2; valaddr_reg:x16; val_offset:1764; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1764, x17, x15, 1224, x18)

inst_1678:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2d194b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x20bf06 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5961f2 and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2d194b; op2val:0x3fa0bf06; op3val:0x3f5961f2; valaddr_reg:x16; val_offset:1776; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1776, x17, x15, 1232, x18)

inst_1679:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2d194b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x20bf06 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5961f2 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2d194b; op2val:0x3fa0bf06; op3val:0x3f5961f2; valaddr_reg:x16; val_offset:1788; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1788, x17, x15, 1240, x18)

inst_1680:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2d194b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x20bf06 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x5961f2 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f2d194b; op2val:0x3fa0bf06; op3val:0x3f5961f2; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1248, x18)

inst_1681:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3a380d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5427f0 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1a5378 and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eba380d; op2val:0x3f5427f0; op3val:0x3e9a5378; valaddr_reg:x16; val_offset:1812; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1812, x17, x15, 1256, x18)

inst_1682:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3a380d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5427f0 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1a5378 and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eba380d; op2val:0x3f5427f0; op3val:0x3e9a5378; valaddr_reg:x16; val_offset:1824; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1824, x17, x15, 1264, x18)

inst_1683:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3a380d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5427f0 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1a5378 and rm_val == 1  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eba380d; op2val:0x3f5427f0; op3val:0x3e9a5378; valaddr_reg:x16; val_offset:1836; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1836, x17, x15, 1272, x18)

inst_1684:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3a380d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5427f0 and fs3 == 0 and fe3 == 0x7d and fm3 == 0x1a5378 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3eba380d; op2val:0x3f5427f0; op3val:0x3e9a5378; valaddr_reg:x16; val_offset:1848; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1848, x17, x15, 1280, x18)

inst_1685:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5f3d90 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5ba602 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3f8a6e and rm_val == 4  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5f3d90; op2val:0x3f5ba602; op3val:0x3f3f8a6e; valaddr_reg:x16; val_offset:1860; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1860, x17, x15, 1288, x18)

inst_1686:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5f3d90 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5ba602 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3f8a6e and rm_val == 3  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5f3d90; op2val:0x3f5ba602; op3val:0x3f3f8a6e; valaddr_reg:x16; val_offset:1872; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1872, x17, x15, 1296, x18)

inst_1687:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5f3d90 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5ba602 and fs3 == 0 and fe3 == 0x7e and fm3 == 0x3f8a6e and rm_val == 2  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f5f3d90; op2val:0x3f5ba602; op3val:0x3f3f8a6e; valaddr_reg:x16; val_offset:1884; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1884, x17, x15, 1304, x18)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
test_fp:
.word 0x3f2d194b
.word 0x3f2d194b
.word 0x3f2d194b
.word 0x3eba380d
.word 0x3f5427f0
.word 0x3eba380d
.word 0x3eba380d
.word 0x3f5427f0
.word 0x3eba380d
.word 0x3eba380d
.word 0x3f5427f0
.word 0x3e9a5378
.word 0x3eba380d
.word 0x3f5427f0
.word 0x3f5427f0
.word 0x3eba380d
.word 0x3f5427f0
.word 0x3f5427f0
.word 0x3f5f3d90
.word 0x3f5f3d90
.word 0x3f3f8a6e
.word 0x3f5f3d90
.word 0x3f5f3d90
.word 0x3f3f8a6e
.word 0x3f5f3d90
.word 0x3f5f3d90
.word 0x3f5f3d90
.word 0x3f5f3d90
.word 0x3f5ba602
.word 0x3f3f8a6e
.word 0x3f5f3d90
.word 0x3f5ba602
.word 0x3f3f8a6e
.word 0x3eb58044
.word 0x3ffb6387
.word 0x3f323b53
.word 0x3eb58044
.word 0x3ffb6387
.word 0x3f323b53
.word 0x3eb58044
.word 0x3ffb6387
.word 0x3f323b53
.word 0x3eb58044
.word 0x3ffb6387
.word 0x3f323b53
.word 0x3eb58044
.word 0x3ffb6387
.word 0x3f323b53
.word 0x3f4475d8
.word 0x3dd5b4f6
.word 0x3da400ec
.word 0x3f4475d8
.word 0x3dd5b4f6
.word 0x3da400ec
.word 0x3f4475d8
.word 0x3dd5b4f6
.word 0x3da400ec
.word 0x3f4475d8
.word 0x3dd5b4f6
.word 0x3da400ec
.word 0x3f4475d8
.word 0x3dd5b4f6
.word 0x3da400ec
.word 0x3f75e04b
.word 0x3e681ae8
.word 0x3e5eed1c
.word 0x3f75e04b
.word 0x3e681ae8
.word 0x3e5eed1c
.word 0x3f75e04b
.word 0x3e681ae8
.word 0x3e5eed1c
.word 0x3f75e04b
.word 0x3e681ae8
.word 0x3e5eed1c
.word 0x3f75e04b
.word 0x3e681ae8
.word 0x3e5eed1c
.word 0x3f0aecbe
.word 0x3f5392e0
.word 0x3ee5a1ac
.word 0x3f0aecbe
.word 0x3f5392e0
.word 0x3ee5a1ac
.word 0x3f0aecbe
.word 0x3f5392e0
.word 0x3ee5a1ac
.word 0x3f0aecbe
.word 0x3f5392e0
.word 0x3ee5a1ac
.word 0x3f0aecbe
.word 0x3f5392e0
.word 0x3ee5a1ac
.word 0x3eb48ec9
.word 0x3f2abcea
.word 0x3e70d820
.word 0x3eb48ec9
.word 0x3f2abcea
.word 0x3e70d820
.word 0x3eb48ec9
.word 0x3f2abcea
.word 0x3e70d820
.word 0x3eb48ec9
.word 0x3f2abcea
.word 0x3e70d820
.word 0x3eb48ec9
.word 0x3f2abcea
.word 0x3e70d820
.word 0x3d6fa798
.word 0x40983049
.word 0x3e8e78b6
.word 0x3d6fa798
.word 0x40983049
.word 0x3e8e78b6
.word 0x3d6fa798
.word 0x40983049
.word 0x3e8e78b6
.word 0x3d6fa798
.word 0x40983049
.word 0x3e8e78b6
.word 0x3d6fa798
.word 0x40983049
.word 0x3e8e78b6
.word 0x3ef48c7e
.word 0x3f2a6656
.word 0x3ea2c70e
.word 0x3ef48c7e
.word 0x3f2a6656
.word 0x3ea2c70e
.word 0x3ef48c7e
.word 0x3f2a6656
.word 0x3ea2c70e
.word 0x3ef48c7e
.word 0x3f2a6656
.word 0x3ea2c70e
.word 0x3ef48c7e
.word 0x3f2a6656
.word 0x3ea2c70e
.word 0x3f64158f
.word 0x3f72f97b
.word 0x3f587aa8
.word 0x3f64158f
.word 0x3f72f97b
.word 0x3f587aa8
.word 0x3f64158f
.word 0x3f72f97b
.word 0x3f587aa8
.word 0x3f64158f
.word 0x3f72f97b
.word 0x3f587aa8
.word 0x3f64158f
.word 0x3f72f97b
.word 0x3f587aa8
.word 0x3ce36696
.word 0x41d896e0
.word 0x3f406494
.word 0x3ce36696
.word 0x41d896e0
.word 0x3f406494
.word 0x3ce36696
.word 0x41d896e0
.word 0x3f406494
.word 0x3ce36696
.word 0x41d896e0
.word 0x3f406494
.word 0x3ce36696
.word 0x41d896e0
.word 0x3f406494
.word 0x3e3298be
.word 0x3f5426d9
.word 0x3e140197
.word 0x3e3298be
.word 0x3f5426d9
.word 0x3e140197
.word 0x3e3298be
.word 0x3f5426d9
.word 0x3e140197
.word 0x3e3298be
.word 0x3f5426d9
.word 0x3e140197
.word 0x3e3298be
.word 0x3f5426d9
.word 0x3e140197
.word 0x3f1bc546
.word 0x3df64855
.word 0x3d95db95
.word 0x3f1bc546
.word 0x3df64855
.word 0x3d95db95
.word 0x3f1bc546
.word 0x3df64855
.word 0x3d95db95
.word 0x3f1bc546
.word 0x3df64855
.word 0x3d95db95
.word 0x3f1bc546
.word 0x3df64855
.word 0x3d95db95
.word 0x3ed35d9a
.word 0x401b0092
.word 0x3f7ff44a
.word 0x3ed35d9a
.word 0x401b0092
.word 0x3f7ff44a
.word 0x3ed35d9a
.word 0x401b0092
.word 0x3f7ff44a
.word 0x3ed35d9a
.word 0x401b0092
.word 0x3f7ff44a
.word 0x3ed35d9a
.word 0x401b0092
.word 0x3f7ff44a
.word 0x3dd59d10
.word 0x40a19988
.word 0x3f06d7e3
.word 0x3dd59d10
.word 0x40a19988
.word 0x3f06d7e3
.word 0x3dd59d10
.word 0x40a19988
.word 0x3f06d7e3
.word 0x3dd59d10
.word 0x40a19988
.word 0x3f06d7e3
.word 0x3dd59d10
.word 0x40a19988
.word 0x3f06d7e3
.word 0x3f77bee3
.word 0x3e99af70
.word 0x3e94badf
.word 0x3f77bee3
.word 0x3e99af70
.word 0x3e94badf
.word 0x3f77bee3
.word 0x3e99af70
.word 0x3e94badf
.word 0x3f77bee3
.word 0x3e99af70
.word 0x3e94badf
.word 0x3f77bee3
.word 0x3e99af70
.word 0x3e94badf
.word 0x3e0228dd
.word 0x40f642f5
.word 0x3f7a6aa0
.word 0x3e0228dd
.word 0x40f642f5
.word 0x3f7a6aa0
.word 0x3e0228dd
.word 0x40f642f5
.word 0x3f7a6aa0
.word 0x3e0228dd
.word 0x40f642f5
.word 0x3f7a6aa0
.word 0x3e0228dd
.word 0x40f642f5
.word 0x3f7a6aa0
.word 0x3d3ca5a9
.word 0x405244e6
.word 0x3e1af2aa
.word 0x3d3ca5a9
.word 0x405244e6
.word 0x3e1af2aa
.word 0x3d3ca5a9
.word 0x405244e6
.word 0x3e1af2aa
.word 0x3d3ca5a9
.word 0x405244e6
.word 0x3e1af2aa
.word 0x3d3ca5a9
.word 0x405244e6
.word 0x3e1af2aa
.word 0x3f19a984
.word 0x3f6c568d
.word 0x3f0ddc39
.word 0x3f19a984
.word 0x3f6c568d
.word 0x3f0ddc39
.word 0x3f19a984
.word 0x3f6c568d
.word 0x3f0ddc39
.word 0x3f19a984
.word 0x3f6c568d
.word 0x3f0ddc39
.word 0x3f19a984
.word 0x3f6c568d
.word 0x3f0ddc39
.word 0x3f3a9e60
.word 0x3f83f668
.word 0x3f406557
.word 0x3f3a9e60
.word 0x3f83f668
.word 0x3f406557
.word 0x3f3a9e60
.word 0x3f83f668
.word 0x3f406557
.word 0x3f3a9e60
.word 0x3f83f668
.word 0x3f406557
.word 0x3f3a9e60
.word 0x3f83f668
.word 0x3f406557
.word 0x3e0c6e13
.word 0x40b6f292
.word 0x3f48b6a3
.word 0x3e0c6e13
.word 0x40b6f292
.word 0x3f48b6a3
.word 0x3e0c6e13
.word 0x40b6f292
.word 0x3f48b6a3
.word 0x3e0c6e13
.word 0x40b6f292
.word 0x3f48b6a3
.word 0x3e0c6e13
.word 0x40b6f292
.word 0x3f48b6a3
.word 0x3efe42e9
.word 0x3f3eed7e
.word 0x3ebda18a
.word 0x3efe42e9
.word 0x3f3eed7e
.word 0x3ebda18a
.word 0x3efe42e9
.word 0x3f3eed7e
.word 0x3ebda18a
.word 0x3efe42e9
.word 0x3f3eed7e
.word 0x3ebda18a
.word 0x3efe42e9
.word 0x3f3eed7e
.word 0x3ebda18a
.word 0x3d045c75
.word 0x41d86732
.word 0x3f5fc6bc
.word 0x3d045c75
.word 0x41d86732
.word 0x3f5fc6bc
.word 0x3d045c75
.word 0x41d86732
.word 0x3f5fc6bc
.word 0x3d045c75
.word 0x41d86732
.word 0x3f5fc6bc
.word 0x3d045c75
.word 0x41d86732
.word 0x3f5fc6bc
.word 0x3f701cde
.word 0x3f45318c
.word 0x3f38f4b0
.word 0x3f701cde
.word 0x3f45318c
.word 0x3f38f4b0
.word 0x3f701cde
.word 0x3f45318c
.word 0x3f38f4b0
.word 0x3f701cde
.word 0x3f45318c
.word 0x3f38f4b0
.word 0x3f701cde
.word 0x3f45318c
.word 0x3f38f4b0
.word 0x3f1f85b8
.word 0x3f87f11b
.word 0x3f296b85
.word 0x3f1f85b8
.word 0x3f87f11b
.word 0x3f296b85
.word 0x3f1f85b8
.word 0x3f87f11b
.word 0x3f296b85
.word 0x3f1f85b8
.word 0x3f87f11b
.word 0x3f296b85
.word 0x3f1f85b8
.word 0x3f87f11b
.word 0x3f296b85
.word 0x3f160bb9
.word 0x3f4fd4a5
.word 0x3ef3a03b
.word 0x3f160bb9
.word 0x3f4fd4a5
.word 0x3ef3a03b
.word 0x3f160bb9
.word 0x3f4fd4a5
.word 0x3ef3a03b
.word 0x3f160bb9
.word 0x3f4fd4a5
.word 0x3ef3a03b
.word 0x3f160bb9
.word 0x3f4fd4a5
.word 0x3ef3a03b
.word 0x3e802ce0
.word 0x40161f4e
.word 0x3f1653f0
.word 0x3e802ce0
.word 0x40161f4e
.word 0x3f1653f0
.word 0x3e802ce0
.word 0x40161f4e
.word 0x3f1653f0
.word 0x3e802ce0
.word 0x40161f4e
.word 0x3f1653f0
.word 0x3e802ce0
.word 0x40161f4e
.word 0x3f1653f0
.word 0x3edc5b10
.word 0x3e862153
.word 0x3de6e8b4
.word 0x3edc5b10
.word 0x3e862153
.word 0x3de6e8b4
.word 0x3edc5b10
.word 0x3e862153
.word 0x3de6e8b4
.word 0x3edc5b10
.word 0x3e862153
.word 0x3de6e8b4
.word 0x3edc5b10
.word 0x3e862153
.word 0x3de6e8b4
.word 0x3f42c899
.word 0x3f798795
.word 0x3f3ddc47
.word 0x3f42c899
.word 0x3f798795
.word 0x3f3ddc47
.word 0x3f42c899
.word 0x3f798795
.word 0x3f3ddc47
.word 0x3f42c899
.word 0x3f798795
.word 0x3f3ddc47
.word 0x3f42c899
.word 0x3f798795
.word 0x3f3ddc47
.word 0x3f28759f
.word 0x3fb0cbde
.word 0x3f68ae0a
.word 0x3f28759f
.word 0x3fb0cbde
.word 0x3f68ae0a
.word 0x3f28759f
.word 0x3fb0cbde
.word 0x3f68ae0a
.word 0x3f28759f
.word 0x3fb0cbde
.word 0x3f68ae0a
.word 0x3f28759f
.word 0x3fb0cbde
.word 0x3f68ae0a
.word 0x3f4ebe68
.word 0x3f901e2a
.word 0x3f68c6ef
.word 0x3f4ebe68
.word 0x3f901e2a
.word 0x3f68c6ef
.word 0x3f4ebe68
.word 0x3f901e2a
.word 0x3f68c6ef
.word 0x3f4ebe68
.word 0x3f901e2a
.word 0x3f68c6ef
.word 0x3f4ebe68
.word 0x3f901e2a
.word 0x3f68c6ef
.word 0x3f0ccf64
.word 0x3fc8399d
.word 0x3f5c436e
.word 0x3f0ccf64
.word 0x3fc8399d
.word 0x3f5c436e
.word 0x3f0ccf64
.word 0x3fc8399d
.word 0x3f5c436e
.word 0x3f0ccf64
.word 0x3fc8399d
.word 0x3f5c436e
.word 0x3f0ccf64
.word 0x3fc8399d
.word 0x3f5c436e
.word 0x3dbffb13
.word 0x3d1a0522
.word 0x3b6701c7
.word 0x3dbffb13
.word 0x3d1a0522
.word 0x3b6701c7
.word 0x3dbffb13
.word 0x3d1a0522
.word 0x3b6701c7
.word 0x3dbffb13
.word 0x3d1a0522
.word 0x3b6701c7
.word 0x3dbffb13
.word 0x3d1a0522
.word 0x3b6701c7
.word 0x3f00bfa4
.word 0x3fc68336
.word 0x3f47ac6c
.word 0x3f00bfa4
.word 0x3fc68336
.word 0x3f47ac6c
.word 0x3f00bfa4
.word 0x3fc68336
.word 0x3f47ac6c
.word 0x3f00bfa4
.word 0x3fc68336
.word 0x3f47ac6c
.word 0x3f00bfa4
.word 0x3fc68336
.word 0x3f47ac6c
.word 0x3f4ac8dd
.word 0x3df3229f
.word 0x3dc09817
.word 0x3f4ac8dd
.word 0x3df3229f
.word 0x3dc09817
.word 0x3f4ac8dd
.word 0x3df3229f
.word 0x3dc09817
.word 0x3f4ac8dd
.word 0x3df3229f
.word 0x3dc09817
.word 0x3f4ac8dd
.word 0x3df3229f
.word 0x3dc09817
.word 0x3f5529b3
.word 0x3f80df59
.word 0x3f569da6
.word 0x3f5529b3
.word 0x3f80df59
.word 0x3f569da6
.word 0x3f5529b3
.word 0x3f80df59
.word 0x3f569da6
.word 0x3f5529b3
.word 0x3f80df59
.word 0x3f569da6
.word 0x3f5529b3
.word 0x3f80df59
.word 0x3f569da6
.word 0x3ee2a6ba
.word 0x3faf1e33
.word 0x3f1b0ab6
.word 0x3ee2a6ba
.word 0x3faf1e33
.word 0x3f1b0ab6
.word 0x3ee2a6ba
.word 0x3faf1e33
.word 0x3f1b0ab6
.word 0x3ee2a6ba
.word 0x3faf1e33
.word 0x3f1b0ab6
.word 0x3ee2a6ba
.word 0x3faf1e33
.word 0x3f1b0ab6
.word 0x3eb02161
.word 0x40021340
.word 0x3f32fc64
.word 0x3eb02161
.word 0x40021340
.word 0x3f32fc64
.word 0x3eb02161
.word 0x40021340
.word 0x3f32fc64
.word 0x3eb02161
.word 0x40021340
.word 0x3f32fc64
.word 0x3eb02161
.word 0x40021340
.word 0x3f32fc64
.word 0x3cc22e85
.word 0x41f9b112
.word 0x3f3d658f
.word 0x3cc22e85
.word 0x41f9b112
.word 0x3f3d658f
.word 0x3cc22e85
.word 0x41f9b112
.word 0x3f3d658f
.word 0x3cc22e85
.word 0x41f9b112
.word 0x3f3d658f
.word 0x3cc22e85
.word 0x41f9b112
.word 0x3f3d658f
.word 0x3f33c539
.word 0x3ebe45ff
.word 0x3e859d88
.word 0x3f33c539
.word 0x3ebe45ff
.word 0x3e859d88
.word 0x3f33c539
.word 0x3ebe45ff
.word 0x3e859d88
.word 0x3f33c539
.word 0x3ebe45ff
.word 0x3e859d88
.word 0x3f33c539
.word 0x3ebe45ff
.word 0x3e859d88
.word 0x3f071ef1
.word 0x3f9f2ae3
.word 0x3f2805b6
.word 0x3f071ef1
.word 0x3f9f2ae3
.word 0x3f2805b6
.word 0x3f071ef1
.word 0x3f9f2ae3
.word 0x3f2805b6
.word 0x3f071ef1
.word 0x3f9f2ae3
.word 0x3f2805b6
.word 0x3f071ef1
.word 0x3f9f2ae3
.word 0x3f2805b6
.word 0x3d95f5ea
.word 0x413eb11b
.word 0x3f5f6886
.word 0x3d95f5ea
.word 0x413eb11b
.word 0x3f5f6886
.word 0x3d95f5ea
.word 0x413eb11b
.word 0x3f5f6886
.word 0x3d95f5ea
.word 0x413eb11b
.word 0x3f5f6886
.word 0x3d95f5ea
.word 0x413eb11b
.word 0x3f5f6886
.word 0x541289e6
.word 0x406a90b3
.word 0x52c89c02
.word 0x541289e6
.word 0x406a90b3
.word 0x52c89c02
.word 0x541289e6
.word 0x406a90b3
.word 0x52c89c02
.word 0x541289e6
.word 0x406a90b3
.word 0x52c89c02
.word 0x541289e6
.word 0x406a90b3
.word 0x52c89c02
.word 0x54c0aeda
.word 0x400bd51a
.word 0x54a4fd58
.word 0x54c0aeda
.word 0x400bd51a
.word 0x54a4fd58
.word 0x54c0aeda
.word 0x400bd51a
.word 0x54a4fd58
.word 0x54c0aeda
.word 0x400bd51a
.word 0x54a4fd58
.word 0x54c0aeda
.word 0x400bd51a
.word 0x54a4fd58
.word 0x54bb7b74
.word 0x3ffd948c
.word 0x5466d72e
.word 0x54bb7b74
.word 0x3ffd948c
.word 0x5466d72e
.word 0x54bb7b74
.word 0x3ffd948c
.word 0x5466d72e
.word 0x54bb7b74
.word 0x3ffd948c
.word 0x5466d72e
.word 0x54bb7b74
.word 0x3ffd948c
.word 0x5466d72e
.word 0x54b835e9
.word 0x3fbaaf30
.word 0x52caa762
.word 0x54b835e9
.word 0x3fbaaf30
.word 0x52caa762
.word 0x54b835e9
.word 0x3fbaaf30
.word 0x52caa762
.word 0x54b835e9
.word 0x3fbaaf30
.word 0x52caa762
.word 0x54b835e9
.word 0x3fbaaf30
.word 0x52caa762
.word 0x54f0d1ac
.word 0x3fd2cd49
.word 0x548c9a37
.word 0x54f0d1ac
.word 0x3fd2cd49
.word 0x548c9a37
.word 0x54f0d1ac
.word 0x3fd2cd49
.word 0x548c9a37
.word 0x54f0d1ac
.word 0x3fd2cd49
.word 0x548c9a37
.word 0x54f0d1ac
.word 0x3fd2cd49
.word 0x548c9a37
.word 0x54a18263
.word 0x40421a83
.word 0x54e9d626
.word 0x54a18263
.word 0x40421a83
.word 0x54e9d626
.word 0x54a18263
.word 0x40421a83
.word 0x54e9d626
.word 0x54a18263
.word 0x40421a83
.word 0x54e9d626
.word 0x54a18263
.word 0x40421a83
.word 0x54e9d626
.word 0x54e25f4b
.word 0x400324ab
.word 0x54cfdcc2
.word 0x54e25f4b
.word 0x400324ab
.word 0x54cfdcc2
.word 0x54e25f4b
.word 0x400324ab
.word 0x54cfdcc2
.word 0x54e25f4b
.word 0x400324ab
.word 0x54cfdcc2
.word 0x54e25f4b
.word 0x400324ab
.word 0x54cfdcc2
.word 0x543f27a3
.word 0x40a7aa05
.word 0x54f4c73f
.word 0x543f27a3
.word 0x40a7aa05
.word 0x54f4c73f
.word 0x543f27a3
.word 0x40a7aa05
.word 0x54f4c73f
.word 0x543f27a3
.word 0x40a7aa05
.word 0x54f4c73f
.word 0x543f27a3
.word 0x40a7aa05
.word 0x54f4c73f
.word 0x5482ce78
.word 0x40150871
.word 0x53c267ca
.word 0x5482ce78
.word 0x40150871
.word 0x53c267ca
.word 0x5482ce78
.word 0x40150871
.word 0x53c267ca
.word 0x5482ce78
.word 0x40150871
.word 0x53c267ca
.word 0x5482ce78
.word 0x40150871
.word 0x53c267ca
.word 0x53ff4efa
.word 0x40a273b5
.word 0x54080d80
.word 0x53ff4efa
.word 0x40a273b5
.word 0x54080d80
.word 0x53ff4efa
.word 0x40a273b5
.word 0x54080d80
.word 0x53ff4efa
.word 0x40a273b5
.word 0x54080d80
.word 0x53ff4efa
.word 0x40a273b5
.word 0x54080d80
.word 0x54123d34
.word 0x40d8daee
.word 0x54ef82d1
.word 0x54123d34
.word 0x40d8daee
.word 0x54ef82d1
.word 0x54123d34
.word 0x40d8daee
.word 0x54ef82d1
.word 0x54123d34
.word 0x40d8daee
.word 0x54ef82d1
.word 0x54123d34
.word 0x40d8daee
.word 0x54ef82d1
.word 0x53504d42
.word 0x41904e80
.word 0x54d5ad53
.word 0x53504d42
.word 0x41904e80
.word 0x54d5ad53
.word 0x53504d42
.word 0x41904e80
.word 0x54d5ad53
.word 0x53504d42
.word 0x41904e80
.word 0x54d5ad53
.word 0x53504d42
.word 0x41904e80
.word 0x54d5ad53
.word 0x540ce126
.word 0x4073d2ab
.word 0x52c5b4c4
.word 0x540ce126
.word 0x4073d2ab
.word 0x52c5b4c4
.word 0x540ce126
.word 0x4073d2ab
.word 0x52c5b4c4
.word 0x540ce126
.word 0x4073d2ab
.word 0x52c5b4c4
.word 0x540ce126
.word 0x4073d2ab
.word 0x52c5b4c4
.word 0x5438aee4
.word 0x407d6076
.word 0x545b29bb
.word 0x5438aee4
.word 0x407d6076
.word 0x545b29bb
.word 0x5438aee4
.word 0x407d6076
.word 0x545b29bb
.word 0x5438aee4
.word 0x407d6076
.word 0x545b29bb
.word 0x5438aee4
.word 0x407d6076
.word 0x545b29bb
.word 0x54ffb0de
.word 0x3fcba918
.word 0x5496d448
.word 0x54ffb0de
.word 0x3fcba918
.word 0x5496d448
.word 0x54ffb0de
.word 0x3fcba918
.word 0x5496d448
.word 0x54ffb0de
.word 0x3fcba918
.word 0x5496d448
.word 0x54ffb0de
.word 0x3fcba918
.word 0x5496d448
.word 0x543e93e2
.word 0x406f7ee4
.word 0x54492a1c
.word 0x543e93e2
.word 0x406f7ee4
.word 0x54492a1c
.word 0x543e93e2
.word 0x406f7ee4
.word 0x54492a1c
.word 0x543e93e2
.word 0x406f7ee4
.word 0x54492a1c
.word 0x543e93e2
.word 0x406f7ee4
.word 0x54492a1c
.word 0x54e6cd11
.word 0x3fb71fc8
.word 0x541464fc
.word 0x54e6cd11
.word 0x3fb71fc8
.word 0x541464fc
.word 0x54e6cd11
.word 0x3fb71fc8
.word 0x541464fc
.word 0x54e6cd11
.word 0x3fb71fc8
.word 0x541464fc
.word 0x54e6cd11
.word 0x3fb71fc8
.word 0x541464fc
.word 0x54ed287a
.word 0x3fecafff
.word 0x54b688b6
.word 0x54ed287a
.word 0x3fecafff
.word 0x54b688b6
.word 0x54ed287a
.word 0x3fecafff
.word 0x54b688b6
.word 0x54ed287a
.word 0x3fecafff
.word 0x54b688b6
.word 0x54ed287a
.word 0x3fecafff
.word 0x54b688b6
.word 0x54d6cff7
.word 0x3faada94
.word 0x5375d83d
.word 0x54d6cff7
.word 0x3faada94
.word 0x5375d83d
.word 0x54d6cff7
.word 0x3faada94
.word 0x5375d83d
.word 0x54d6cff7
.word 0x3faada94
.word 0x5375d83d
.word 0x54d6cff7
.word 0x3faada94
.word 0x5375d83d
.word 0x50643f15
.word 0x447b57b6
.word 0x54c0301b
.word 0x50643f15
.word 0x447b57b6
.word 0x54c0301b
.word 0x50643f15
.word 0x447b57b6
.word 0x54c0301b
.word 0x50643f15
.word 0x447b57b6
.word 0x54c0301b
.word 0x50643f15
.word 0x447b57b6
.word 0x54c0301b
.word 0x5421d4fb
.word 0x40ba4e76
.word 0x54d71962
.word 0x5421d4fb
.word 0x40ba4e76
.word 0x54d71962
.word 0x5421d4fb
.word 0x40ba4e76
.word 0x54d71962
.word 0x5421d4fb
.word 0x40ba4e76
.word 0x54d71962
.word 0x5421d4fb
.word 0x40ba4e76
.word 0x54d71962
.word 0x5390158d
.word 0x4118d2cd
.word 0x54301b8b
.word 0x5390158d
.word 0x4118d2cd
.word 0x54301b8b
.word 0x5390158d
.word 0x4118d2cd
.word 0x54301b8b
.word 0x5390158d
.word 0x4118d2cd
.word 0x54301b8b
.word 0x5390158d
.word 0x4118d2cd
.word 0x54301b8b
.word 0x5466ca0e
.word 0x4038daa2
.word 0x541a9953
.word 0x5466ca0e
.word 0x4038daa2
.word 0x541a9953
.word 0x5466ca0e
.word 0x4038daa2
.word 0x541a9953
.word 0x5466ca0e
.word 0x4038daa2
.word 0x541a9953
.word 0x5466ca0e
.word 0x4038daa2
.word 0x541a9953
.word 0x50eb4e1e
.word 0x43cfbad5
.word 0x547bbf98
.word 0x50eb4e1e
.word 0x43cfbad5
.word 0x547bbf98
.word 0x50eb4e1e
.word 0x43cfbad5
.word 0x547bbf98
.word 0x50eb4e1e
.word 0x43cfbad5
.word 0x547bbf98
.word 0x50eb4e1e
.word 0x43cfbad5
.word 0x547bbf98
.word 0x5478e76d
.word 0x4006eb27
.word 0x524b7184
.word 0x5478e76d
.word 0x4006eb27
.word 0x524b7184
.word 0x5478e76d
.word 0x4006eb27
.word 0x524b7184
.word 0x5478e76d
.word 0x4006eb27
.word 0x524b7184
.word 0x5478e76d
.word 0x4006eb27
.word 0x524b7184
.word 0x53ecefd2
.word 0x41033993
.word 0x54e5d00a
.word 0x53ecefd2
.word 0x41033993
.word 0x54e5d00a
.word 0x53ecefd2
.word 0x41033993
.word 0x54e5d00a
.word 0x53ecefd2
.word 0x41033993
.word 0x54e5d00a
.word 0x53ecefd2
.word 0x41033993
.word 0x54e5d00a
.word 0x54e30966
.word 0x3ff5d750
.word 0x54b40de5
.word 0x54e30966
.word 0x3ff5d750
.word 0x54b40de5
.word 0x54e30966
.word 0x3ff5d750
.word 0x54b40de5
.word 0x54e30966
.word 0x3ff5d750
.word 0x54b40de5
.word 0x54e30966
.word 0x3ff5d750
.word 0x54b40de5
.word 0x54d1f9be
.word 0x3feb72f1
.word 0x54823d11
.word 0x54d1f9be
.word 0x3feb72f1
.word 0x54823d11
.word 0x54d1f9be
.word 0x3feb72f1
.word 0x54823d11
.word 0x54d1f9be
.word 0x3feb72f1
.word 0x54823d11
.word 0x54d1f9be
.word 0x3feb72f1
.word 0x54823d11
.word 0x54f3e6cb
.word 0x3f982a29
.word 0x5387c9a0
.word 0x54f3e6cb
.word 0x3f982a29
.word 0x5387c9a0
.word 0x54f3e6cb
.word 0x3f982a29
.word 0x5387c9a0
.word 0x54f3e6cb
.word 0x3f982a29
.word 0x5387c9a0
.word 0x54f3e6cb
.word 0x3f982a29
.word 0x5387c9a0
.word 0x53912478
.word 0x412c0a36
.word 0x5486292c
.word 0x53912478
.word 0x412c0a36
.word 0x5486292c
.word 0x53912478
.word 0x412c0a36
.word 0x5486292c
.word 0x53912478
.word 0x412c0a36
.word 0x5486292c
.word 0x53912478
.word 0x412c0a36
.word 0x5486292c
.word 0x53d7c40c
.word 0x40f02cf5
.word 0x5494db60
.word 0x53d7c40c
.word 0x40f02cf5
.word 0x5494db60
.word 0x53d7c40c
.word 0x40f02cf5
.word 0x5494db60
.word 0x53d7c40c
.word 0x40f02cf5
.word 0x5494db60
.word 0x53d7c40c
.word 0x40f02cf5
.word 0x5494db60
.word 0x53d6df92
.word 0x411459a7
.word 0x54f21202
.word 0x53d6df92
.word 0x411459a7
.word 0x54f21202
.word 0x53d6df92
.word 0x411459a7
.word 0x54f21202
.word 0x53d6df92
.word 0x411459a7
.word 0x54f21202
.word 0x53d6df92
.word 0x411459a7
.word 0x54f21202
.word 0x54661e70
.word 0x4034a6d3
.word 0x54098d71
.word 0x54661e70
.word 0x4034a6d3
.word 0x54098d71
.word 0x54661e70
.word 0x4034a6d3
.word 0x54098d71
.word 0x54661e70
.word 0x4034a6d3
.word 0x54098d71
.word 0x54661e70
.word 0x4034a6d3
.word 0x54098d71
.word 0x54d1e4d1
.word 0x4019a0ab
.word 0x54f7d5f1
.word 0x54d1e4d1
.word 0x4019a0ab
.word 0x54f7d5f1
.word 0x54d1e4d1
.word 0x4019a0ab
.word 0x54f7d5f1
.word 0x54d1e4d1
.word 0x4019a0ab
.word 0x54f7d5f1
.word 0x54d1e4d1
.word 0x4019a0ab
.word 0x54f7d5f1
.word 0x520f6581
.word 0x42a6b273
.word 0x546afe39
.word 0x520f6581
.word 0x42a6b273
.word 0x546afe39
.word 0x520f6581
.word 0x42a6b273
.word 0x546afe39
.word 0x520f6581
.word 0x42a6b273
.word 0x546afe39
.word 0x520f6581
.word 0x42a6b273
.word 0x546afe39
.word 0x54fa6673
.word 0x3ffd6214
.word 0x54efae5d
.word 0x54fa6673
.word 0x3ffd6214
.word 0x54efae5d
.word 0x54fa6673
.word 0x3ffd6214
.word 0x54efae5d
.word 0x54fa6673
.word 0x3ffd6214
.word 0x54efae5d
.word 0x54fa6673
.word 0x3ffd6214
.word 0x54efae5d
.word 0x54e4c718
.word 0x3fabc4fb
.word 0x53cc0833
.word 0x54e4c718
.word 0x3fabc4fb
.word 0x53cc0833
.word 0x54e4c718
.word 0x3fabc4fb
.word 0x53cc0833
.word 0x54e4c718
.word 0x3fabc4fb
.word 0x53cc0833
.word 0x54e4c718
.word 0x3fabc4fb
.word 0x53cc0833
.word 0x546ec401
.word 0x4019809d
.word 0x5372b1a1
.word 0x546ec401
.word 0x4019809d
.word 0x5372b1a1
.word 0x546ec401
.word 0x4019809d
.word 0x5372b1a1
.word 0x546ec401
.word 0x4019809d
.word 0x5372b1a1
.word 0x546ec401
.word 0x4019809d
.word 0x5372b1a1
.word 0x54843baf
.word 0x403579a7
.word 0x546de84a
.word 0x54843baf
.word 0x403579a7
.word 0x546de84a
.word 0x54843baf
.word 0x403579a7
.word 0x546de84a
.word 0x54843baf
.word 0x403579a7
.word 0x546de84a
.word 0x54843baf
.word 0x403579a7
.word 0x546de84a
.word 0x54acfb2d
.word 0x3ff4873d
.word 0x5414eb24
.word 0x54acfb2d
.word 0x3ff4873d
.word 0x5414eb24
.word 0x54acfb2d
.word 0x3ff4873d
.word 0x5414eb24
.word 0x54acfb2d
.word 0x3ff4873d
.word 0x5414eb24
.word 0x54acfb2d
.word 0x3ff4873d
.word 0x5414eb24
.word 0x54ac084b
.word 0x402128fd
.word 0x54b1330c
.word 0x54ac084b
.word 0x402128fd
.word 0x54b1330c
.word 0x54ac084b
.word 0x402128fd
.word 0x54b1330c
.word 0x54ac084b
.word 0x402128fd
.word 0x54b1330c
.word 0x54ac084b
.word 0x402128fd
.word 0x54b1330c
.word 0x52f877af
.word 0x41a75387
.word 0x54099c95
.word 0x52f877af
.word 0x41a75387
.word 0x54099c95
.word 0x52f877af
.word 0x41a75387
.word 0x54099c95
.word 0x52f877af
.word 0x41a75387
.word 0x54099c95
.word 0x52f877af
.word 0x41a75387
.word 0x54099c95
.word 0x3edd4e56
.word 0x4012385e
.word 0x3f7cced1
.word 0x3edd4e56
.word 0x4012385e
.word 0x3f7cced1
.word 0x3edd4e56
.word 0x4012385e
.word 0x3f7cced1
.word 0x3edd4e56
.word 0x4012385e
.word 0x3f7cced1
.word 0x3edd4e56
.word 0x4012385e
.word 0x3f7cced1
.word 0x3e837907
.word 0x402d5d9a
.word 0x3f3211b7
.word 0x3e837907
.word 0x402d5d9a
.word 0x3f3211b7
.word 0x3e837907
.word 0x402d5d9a
.word 0x3f3211b7
.word 0x3e837907
.word 0x402d5d9a
.word 0x3f3211b7
.word 0x3e837907
.word 0x402d5d9a
.word 0x3f3211b7
.word 0x3f5a4259
.word 0x3f60045a
.word 0x3f3efdc5
.word 0x3f5a4259
.word 0x3f60045a
.word 0x3f3efdc5
.word 0x3f5a4259
.word 0x3f60045a
.word 0x3f3efdc5
.word 0x3f5a4259
.word 0x3f60045a
.word 0x3f3efdc5
.word 0x3f5a4259
.word 0x3f60045a
.word 0x3f3efdc5
.word 0x3eb6e7c5
.word 0x40254602
.word 0x3f6c2ace
.word 0x3eb6e7c5
.word 0x40254602
.word 0x3f6c2ace
.word 0x3eb6e7c5
.word 0x40254602
.word 0x3f6c2ace
.word 0x3eb6e7c5
.word 0x40254602
.word 0x3f6c2ace
.word 0x3eb6e7c5
.word 0x40254602
.word 0x3f6c2ace
.word 0x3e6e9f63
.word 0x3fd26405
.word 0x3ec41bfb
.word 0x3e6e9f63
.word 0x3fd26405
.word 0x3ec41bfb
.word 0x3e6e9f63
.word 0x3fd26405
.word 0x3ec41bfb
.word 0x3e6e9f63
.word 0x3fd26405
.word 0x3ec41bfb
.word 0x3e6e9f63
.word 0x3fd26405
.word 0x3ec41bfb
.word 0x3f055f97
.word 0x3f1b6c3a
.word 0x3ea1f286
.word 0x3f055f97
.word 0x3f1b6c3a
.word 0x3ea1f286
.word 0x3f055f97
.word 0x3f1b6c3a
.word 0x3ea1f286
.word 0x3f055f97
.word 0x3f1b6c3a
.word 0x3ea1f286
.word 0x3f055f97
.word 0x3f1b6c3a
.word 0x3ea1f286
.word 0x3f018c92
.word 0x3f9c2ca7
.word 0x3f1e1084
.word 0x3f018c92
.word 0x3f9c2ca7
.word 0x3f1e1084
.word 0x3f018c92
.word 0x3f9c2ca7
.word 0x3f1e1084
.word 0x3f018c92
.word 0x3f9c2ca7
.word 0x3f1e1084
.word 0x3f018c92
.word 0x3f9c2ca7
.word 0x3f1e1084
.word 0x3e85352f
.word 0x3dbf01c2
.word 0x3cc6c732
.word 0x3e85352f
.word 0x3dbf01c2
.word 0x3cc6c732
.word 0x3e85352f
.word 0x3dbf01c2
.word 0x3cc6c732
.word 0x3e85352f
.word 0x3dbf01c2
.word 0x3cc6c732
.word 0x3e85352f
.word 0x3dbf01c2
.word 0x3cc6c732
.word 0x3e8a9499
.word 0x403bee17
.word 0x3f4b76dd
.word 0x3e8a9499
.word 0x403bee17
.word 0x3f4b76dd
.word 0x3e8a9499
.word 0x403bee17
.word 0x3f4b76dd
.word 0x3e8a9499
.word 0x403bee17
.word 0x3f4b76dd
.word 0x3e8a9499
.word 0x403bee17
.word 0x3f4b76dd
.word 0x3f6cf0d8
.word 0x3f4b2414
.word 0x3f3c0460
.word 0x3f6cf0d8
.word 0x3f4b2414
.word 0x3f3c0460
.word 0x3f6cf0d8
.word 0x3f4b2414
.word 0x3f3c0460
.word 0x3f6cf0d8
.word 0x3f4b2414
.word 0x3f3c0460
.word 0x3f6cf0d8
.word 0x3f4b2414
.word 0x3f3c0460
.word 0x3e86c3ae
.word 0x4035d451
.word 0x3f3f703e
.word 0x3e86c3ae
.word 0x4035d451
.word 0x3f3f703e
.word 0x3e86c3ae
.word 0x4035d451
.word 0x3f3f703e
.word 0x3e86c3ae
.word 0x4035d451
.word 0x3f3f703e
.word 0x3e86c3ae
.word 0x4035d451
.word 0x3f3f703e
.word 0x3eae704c
.word 0x402f70d9
.word 0x3f6f1752
.word 0x3eae704c
.word 0x402f70d9
.word 0x3f6f1752
.word 0x3eae704c
.word 0x402f70d9
.word 0x3f6f1752
.word 0x3eae704c
.word 0x402f70d9
.word 0x3f6f1752
.word 0x3eae704c
.word 0x402f70d9
.word 0x3f6f1752
.word 0x3efe7a94
.word 0x3f6f6675
.word 0x3eedfa4a
.word 0x3efe7a94
.word 0x3f6f6675
.word 0x3eedfa4a
.word 0x3efe7a94
.word 0x3f6f6675
.word 0x3eedfa4a
.word 0x3efe7a94
.word 0x3f6f6675
.word 0x3eedfa4a
.word 0x3efe7a94
.word 0x3f6f6675
.word 0x3eedfa4a
.word 0x3e4f285f
.word 0x3f9f46ca
.word 0x3e80e35c
.word 0x3e4f285f
.word 0x3f9f46ca
.word 0x3e80e35c
.word 0x3e4f285f
.word 0x3f9f46ca
.word 0x3e80e35c
.word 0x3e4f285f
.word 0x3f9f46ca
.word 0x3e80e35c
.word 0x3e4f285f
.word 0x3f9f46ca
.word 0x3e80e35c
.word 0x3f02bd9b
.word 0x3ff9cd8b
.word 0x3f7f26ca
.word 0x3f02bd9b
.word 0x3ff9cd8b
.word 0x3f7f26ca
.word 0x3f02bd9b
.word 0x3ff9cd8b
.word 0x3f7f26ca
.word 0x3f02bd9b
.word 0x3ff9cd8b
.word 0x3f7f26ca
.word 0x3f02bd9b
.word 0x3ff9cd8b
.word 0x3f7f26ca
.word 0x3ebf5f3e
.word 0x3f5ab71a
.word 0x3ea37ffc
.word 0x3ebf5f3e
.word 0x3f5ab71a
.word 0x3ea37ffc
.word 0x3ebf5f3e
.word 0x3f5ab71a
.word 0x3ea37ffc
.word 0x3ebf5f3e
.word 0x3f5ab71a
.word 0x3ea37ffc
.word 0x3ebf5f3e
.word 0x3f5ab71a
.word 0x3ea37ffc
.word 0x3ee208b7
.word 0x3f57d970
.word 0x3ebe954f
.word 0x3ee208b7
.word 0x3f57d970
.word 0x3ebe954f
.word 0x3ee208b7
.word 0x3f57d970
.word 0x3ebe954f
.word 0x3ee208b7
.word 0x3f57d970
.word 0x3ebe954f
.word 0x3ee208b7
.word 0x3f57d970
.word 0x3ebe954f
.word 0x3f652431
.word 0x3e3bd335
.word 0x3e281e7c
.word 0x3f652431
.word 0x3e3bd335
.word 0x3e281e7c
.word 0x3f652431
.word 0x3e3bd335
.word 0x3e281e7c
.word 0x3f652431
.word 0x3e3bd335
.word 0x3e281e7c
.word 0x3f652431
.word 0x3e3bd335
.word 0x3e281e7c
.word 0x3f5ded9a
.word 0x3f3cc8ed
.word 0x3f23a8ac
.word 0x3f5ded9a
.word 0x3f3cc8ed
.word 0x3f23a8ac
.word 0x3f5ded9a
.word 0x3f3cc8ed
.word 0x3f23a8ac
.word 0x3f5ded9a
.word 0x3f3cc8ed
.word 0x3f23a8ac
.word 0x3f5ded9a
.word 0x3f3cc8ed
.word 0x3f23a8ac
.word 0x3f45229a
.word 0x3fa10a9b
.word 0x3f7805dd
.word 0x3f45229a
.word 0x3fa10a9b
.word 0x3f7805dd
.word 0x3f45229a
.word 0x3fa10a9b
.word 0x3f7805dd
.word 0x3f45229a
.word 0x3fa10a9b
.word 0x3f7805dd
.word 0x3f45229a
.word 0x3fa10a9b
.word 0x3f7805dd
.word 0x3ea25b89
.word 0x3f779446
.word 0x3e9d045b
.word 0x3ea25b89
.word 0x3f779446
.word 0x3e9d045b
.word 0x3ea25b89
.word 0x3f779446
.word 0x3e9d045b
.word 0x3ea25b89
.word 0x3f779446
.word 0x3e9d045b
.word 0x3ea25b89
.word 0x3f779446
.word 0x3e9d045b
.word 0x3ed4f5e3
.word 0x3e83ebde
.word 0x3ddb7c15
.word 0x3ed4f5e3
.word 0x3e83ebde
.word 0x3ddb7c15
.word 0x3ed4f5e3
.word 0x3e83ebde
.word 0x3ddb7c15
.word 0x3ed4f5e3
.word 0x3e83ebde
.word 0x3ddb7c15
.word 0x3ed4f5e3
.word 0x3e83ebde
.word 0x3ddb7c15
.word 0x3e480297
.word 0x3f63847b
.word 0x3e31c1ce
.word 0x3e480297
.word 0x3f63847b
.word 0x3e31c1ce
.word 0x3e480297
.word 0x3f63847b
.word 0x3e31c1ce
.word 0x3e480297
.word 0x3f63847b
.word 0x3e31c1ce
.word 0x3e480297
.word 0x3f63847b
.word 0x3e31c1ce
.word 0x3efdc313
.word 0x3eaa83ba
.word 0x3e29061e
.word 0x3efdc313
.word 0x3eaa83ba
.word 0x3e29061e
.word 0x3efdc313
.word 0x3eaa83ba
.word 0x3e29061e
.word 0x3efdc313
.word 0x3eaa83ba
.word 0x3e29061e
.word 0x3efdc313
.word 0x3eaa83ba
.word 0x3e29061e
.word 0x3f5c5656
.word 0x3f0da6b6
.word 0x3ef3d615
.word 0x3f5c5656
.word 0x3f0da6b6
.word 0x3ef3d615
.word 0x3f5c5656
.word 0x3f0da6b6
.word 0x3ef3d615
.word 0x3f5c5656
.word 0x3f0da6b6
.word 0x3ef3d615
.word 0x3f5c5656
.word 0x3f0da6b6
.word 0x3ef3d615
.word 0x3e884488
.word 0x3f349f09
.word 0x3e4049af
.word 0x3e884488
.word 0x3f349f09
.word 0x3e4049af
.word 0x3e884488
.word 0x3f349f09
.word 0x3e4049af
.word 0x3e884488
.word 0x3f349f09
.word 0x3e4049af
.word 0x3e884488
.word 0x3f349f09
.word 0x3e4049af
.word 0x3ddd4d53
.word 0x405cb8f0
.word 0x3ebece52
.word 0x3ddd4d53
.word 0x405cb8f0
.word 0x3ebece52
.word 0x3ddd4d53
.word 0x405cb8f0
.word 0x3ebece52
.word 0x3ddd4d53
.word 0x405cb8f0
.word 0x3ebece52
.word 0x3ddd4d53
.word 0x405cb8f0
.word 0x3ebece52
.word 0x3f74ca4e
.word 0x3e30631c
.word 0x3e28a9db
.word 0x3f74ca4e
.word 0x3e30631c
.word 0x3e28a9db
.word 0x3f74ca4e
.word 0x3e30631c
.word 0x3e28a9db
.word 0x3f74ca4e
.word 0x3e30631c
.word 0x3e28a9db
.word 0x3f74ca4e
.word 0x3e30631c
.word 0x3e28a9db
.word 0x3e8d3b74
.word 0x3fa58e8f
.word 0x3eb6abf0
.word 0x3e8d3b74
.word 0x3fa58e8f
.word 0x3eb6abf0
.word 0x3e8d3b74
.word 0x3fa58e8f
.word 0x3eb6abf0
.word 0x3e8d3b74
.word 0x3fa58e8f
.word 0x3eb6abf0
.word 0x3e8d3b74
.word 0x3fa58e8f
.word 0x3eb6abf0
.word 0x3c7a32dc
.word 0x425ec93d
.word 0x3f59bcc8
.word 0x3c7a32dc
.word 0x425ec93d
.word 0x3f59bcc8
.word 0x3c7a32dc
.word 0x425ec93d
.word 0x3f59bcc8
.word 0x3c7a32dc
.word 0x425ec93d
.word 0x3f59bcc8
.word 0x3c7a32dc
.word 0x425ec93d
.word 0x3f59bcc8
.word 0x3f1c48a6
.word 0x3f8d4a0b
.word 0x3f2c826e
.word 0x3f1c48a6
.word 0x3f8d4a0b
.word 0x3f2c826e
.word 0x3f1c48a6
.word 0x3f8d4a0b
.word 0x3f2c826e
.word 0x3f1c48a6
.word 0x3f8d4a0b
.word 0x3f2c826e
.word 0x3f1c48a6
.word 0x3f8d4a0b
.word 0x3f2c826e
.word 0x3e91694e
.word 0x3ed9f8e9
.word 0x3df79f4c
.word 0x3e91694e
.word 0x3ed9f8e9
.word 0x3df79f4c
.word 0x3e91694e
.word 0x3ed9f8e9
.word 0x3df79f4c
.word 0x3e91694e
.word 0x3ed9f8e9
.word 0x3df79f4c
.word 0x3e91694e
.word 0x3ed9f8e9
.word 0x3df79f4c
.word 0x3e7f7246
.word 0x3fafb7b6
.word 0x3eaf566f
.word 0x3e7f7246
.word 0x3fafb7b6
.word 0x3eaf566f
.word 0x3e7f7246
.word 0x3fafb7b6
.word 0x3eaf566f
.word 0x3e7f7246
.word 0x3fafb7b6
.word 0x3eaf566f
.word 0x3e7f7246
.word 0x3fafb7b6
.word 0x3eaf566f
.word 0x3ed42e6d
.word 0x3f916b0f
.word 0x3ef10e11
.word 0x3ed42e6d
.word 0x3f916b0f
.word 0x3ef10e11
.word 0x3ed42e6d
.word 0x3f916b0f
.word 0x3ef10e11
.word 0x3ed42e6d
.word 0x3f916b0f
.word 0x3ef10e11
.word 0x3ed42e6d
.word 0x3f916b0f
.word 0x3ef10e11
.word 0x3f321d07
.word 0x3f8d245f
.word 0x3f446697
.word 0x3f321d07
.word 0x3f8d245f
.word 0x3f446697
.word 0x3f321d07
.word 0x3f8d245f
.word 0x3f446697
.word 0x3f321d07
.word 0x3f8d245f
.word 0x3f446697
.word 0x3f321d07
.word 0x3f8d245f
.word 0x3f446697
.word 0x3f755550
.word 0x3f828f91
.word 0x3f7a3dd2
.word 0x3f755550
.word 0x3f828f91
.word 0x3f7a3dd2
.word 0x3f755550
.word 0x3f828f91
.word 0x3f7a3dd2
.word 0x3f755550
.word 0x3f828f91
.word 0x3f7a3dd2
.word 0x3f755550
.word 0x3f828f91
.word 0x3f7a3dd2
.word 0x3f6905eb
.word 0x3f28e209
.word 0x3f19b9a2
.word 0x3f6905eb
.word 0x3f28e209
.word 0x3f19b9a2
.word 0x3f6905eb
.word 0x3f28e209
.word 0x3f19b9a2
.word 0x3f6905eb
.word 0x3f28e209
.word 0x3f19b9a2
.word 0x3f6905eb
.word 0x3f28e209
.word 0x3f19b9a2
.word 0x3f7ebb8f
.word 0x3f3d4f5c
.word 0x3f3c5f70
.word 0x3f7ebb8f
.word 0x3f3d4f5c
.word 0x3f3c5f70
.word 0x3f7ebb8f
.word 0x3f3d4f5c
.word 0x3f3c5f70
.word 0x3f7ebb8f
.word 0x3f3d4f5c
.word 0x3f3c5f70
.word 0x3f7ebb8f
.word 0x3f3d4f5c
.word 0x3f3c5f70
.word 0x3f4c8c92
.word 0x3f1eadd2
.word 0x3efd934a
.word 0x3f4c8c92
.word 0x3f1eadd2
.word 0x3efd934a
.word 0x3f4c8c92
.word 0x3f1eadd2
.word 0x3efd934a
.word 0x3f4c8c92
.word 0x3f1eadd2
.word 0x3efd934a
.word 0x3f4c8c92
.word 0x3f1eadd2
.word 0x3efd934a
.word 0x3f067dc1
.word 0x3f724c19
.word 0x3efe95b7
.word 0x3f067dc1
.word 0x3f724c19
.word 0x3efe95b7
.word 0x3f067dc1
.word 0x3f724c19
.word 0x3efe95b7
.word 0x3f067dc1
.word 0x3f724c19
.word 0x3efe95b7
.word 0x3f067dc1
.word 0x3f724c19
.word 0x3efe95b7
.word 0x3f7fb9f2
.word 0x3f1e7915
.word 0x3f1e4db7
.word 0x3f7fb9f2
.word 0x3f1e7915
.word 0x3f1e4db7
.word 0x3f7fb9f2
.word 0x3f1e7915
.word 0x3f1e4db7
.word 0x3f7fb9f2
.word 0x3f1e7915
.word 0x3f1e4db7
.word 0x3f7fb9f2
.word 0x3f1e7915
.word 0x3f1e4db7
.word 0x3f30c177
.word 0x3f6e8f75
.word 0x3f24b6ea
.word 0x3f30c177
.word 0x3f6e8f75
.word 0x3f24b6ea
.word 0x3f30c177
.word 0x3f6e8f75
.word 0x3f24b6ea
.word 0x3f30c177
.word 0x3f6e8f75
.word 0x3f24b6ea
.word 0x3f30c177
.word 0x3f6e8f75
.word 0x3f24b6ea
.word 0x3f416bf4
.word 0x3d3a2083
.word 0x3d0ca100
.word 0x3f416bf4
.word 0x3d3a2083
.word 0x3d0ca100
.word 0x3f416bf4
.word 0x3d3a2083
.word 0x3d0ca100
.word 0x3f416bf4
.word 0x3d3a2083
.word 0x3d0ca100
.word 0x3f416bf4
.word 0x3d3a2083
.word 0x3d0ca100
.word 0x3ce045bc
.word 0x41845a39
.word 0x3ee7e5ff
.word 0x3ce045bc
.word 0x41845a39
.word 0x3ee7e5ff
.word 0x3ce045bc
.word 0x41845a39
.word 0x3ee7e5ff
.word 0x3ce045bc
.word 0x41845a39
.word 0x3ee7e5ff
.word 0x3ce045bc
.word 0x41845a39
.word 0x3ee7e5ff
.word 0x3f3c9c1a
.word 0x3d5472a0
.word 0x3d1c85b9
.word 0x3f3c9c1a
.word 0x3d5472a0
.word 0x3d1c85b9
.word 0x3f3c9c1a
.word 0x3d5472a0
.word 0x3d1c85b9
.word 0x3f3c9c1a
.word 0x3d5472a0
.word 0x3d1c85b9
.word 0x3f3c9c1a
.word 0x3d5472a0
.word 0x3d1c85b9
.word 0x3f57abeb
.word 0x3f28659f
.word 0x3f0dde70
.word 0x3f57abeb
.word 0x3f28659f
.word 0x3f0dde70
.word 0x3f57abeb
.word 0x3f28659f
.word 0x3f0dde70
.word 0x3f57abeb
.word 0x3f28659f
.word 0x3f0dde70
.word 0x3f57abeb
.word 0x3f28659f
.word 0x3f0dde70
.word 0x3f34fa1e
.word 0x3f43bea4
.word 0x3f0a614a
.word 0x3f34fa1e
.word 0x3f43bea4
.word 0x3f0a614a
.word 0x3f34fa1e
.word 0x3f43bea4
.word 0x3f0a614a
.word 0x3f34fa1e
.word 0x3f43bea4
.word 0x3f0a614a
.word 0x3f34fa1e
.word 0x3f43bea4
.word 0x3f0a614a
.word 0x3f37d338
.word 0x3f871495
.word 0x3f41fe55
.word 0x3f37d338
.word 0x3f871495
.word 0x3f41fe55
.word 0x3f37d338
.word 0x3f871495
.word 0x3f41fe55
.word 0x3f37d338
.word 0x3f871495
.word 0x3f41fe55
.word 0x3f37d338
.word 0x3f871495
.word 0x3f41fe55
.word 0x3e0491bb
.word 0x4022de2c
.word 0x3ea8ae8c
.word 0x3e0491bb
.word 0x4022de2c
.word 0x3ea8ae8c
.word 0x3e0491bb
.word 0x4022de2c
.word 0x3ea8ae8c
.word 0x3e0491bb
.word 0x4022de2c
.word 0x3ea8ae8c
.word 0x3e0491bb
.word 0x4022de2c
.word 0x3ea8ae8c
.word 0x3f6a5f33
.word 0x3e318a3d
.word 0x3e228a62
.word 0x3f6a5f33
.word 0x3e318a3d
.word 0x3e228a62
.word 0x3f6a5f33
.word 0x3e318a3d
.word 0x3e228a62
.word 0x3f6a5f33
.word 0x3e318a3d
.word 0x3e228a62
.word 0x3f6a5f33
.word 0x3e318a3d
.word 0x3e228a62
.word 0x3f3e9166
.word 0x3f8fe109
.word 0x3f563579
.word 0x3f3e9166
.word 0x3f8fe109
.word 0x3f563579
.word 0x3f3e9166
.word 0x3f8fe109
.word 0x3f563579
.word 0x3f3e9166
.word 0x3f8fe109
.word 0x3f563579
.word 0x3f3e9166
.word 0x3f8fe109
.word 0x3f563579
.word 0x3f6de51c
.word 0x3e8ec2de
.word 0x3e84aa2b
.word 0x3f6de51c
.word 0x3e8ec2de
.word 0x3e84aa2b
.word 0x3f6de51c
.word 0x3e8ec2de
.word 0x3e84aa2b
.word 0x3f6de51c
.word 0x3e8ec2de
.word 0x3e84aa2b
.word 0x3f6de51c
.word 0x3e8ec2de
.word 0x3e84aa2b
.word 0x3f721397
.word 0x3f6b944a
.word 0x3f5ec435
.word 0x3f721397
.word 0x3f6b944a
.word 0x3f5ec435
.word 0x3f721397
.word 0x3f6b944a
.word 0x3f5ec435
.word 0x3f721397
.word 0x3f6b944a
.word 0x3f5ec435
.word 0x3f721397
.word 0x3f6b944a
.word 0x3f5ec435
.word 0x3f1865bb
.word 0x3f8c4989
.word 0x3f2706d2
.word 0x3f1865bb
.word 0x3f8c4989
.word 0x3f2706d2
.word 0x3f1865bb
.word 0x3f8c4989
.word 0x3f2706d2
.word 0x3f1865bb
.word 0x3f8c4989
.word 0x3f2706d2
.word 0x3f1865bb
.word 0x3f8c4989
.word 0x3f2706d2
.word 0x3e962816
.word 0x3f9ee0d4
.word 0x3eba613a
.word 0x3e962816
.word 0x3f9ee0d4
.word 0x3eba613a
.word 0x3e962816
.word 0x3f9ee0d4
.word 0x3eba613a
.word 0x3e962816
.word 0x3f9ee0d4
.word 0x3eba613a
.word 0x3e962816
.word 0x3f9ee0d4
.word 0x3eba613a
.word 0x3f284482
.word 0x3e82a3ed
.word 0x3e2bbd13
.word 0x3f284482
.word 0x3e82a3ed
.word 0x3e2bbd13
.word 0x3f284482
.word 0x3e82a3ed
.word 0x3e2bbd13
.word 0x3f284482
.word 0x3e82a3ed
.word 0x3e2bbd13
.word 0x3f284482
.word 0x3e82a3ed
.word 0x3e2bbd13
.word 0x3e9fe050
.word 0x3d665561
.word 0x3c8fd8db
.word 0x3e9fe050
.word 0x3d665561
.word 0x3c8fd8db
.word 0x3e9fe050
.word 0x3d665561
.word 0x3c8fd8db
.word 0x3e9fe050
.word 0x3d665561
.word 0x3c8fd8db
.word 0x3e9fe050
.word 0x3d665561
.word 0x3c8fd8db
.word 0x3f1b5eb6
.word 0x3f501537
.word 0x3efc93a8
.word 0x3f1b5eb6
.word 0x3f501537
.word 0x3efc93a8
.word 0x3f1b5eb6
.word 0x3f501537
.word 0x3efc93a8
.word 0x3f1b5eb6
.word 0x3f501537
.word 0x3efc93a8
.word 0x3f1b5eb6
.word 0x3f501537
.word 0x3efc93a8
.word 0x3f014793
.word 0x3ea7add7
.word 0x3e295af7
.word 0x3f014793
.word 0x3ea7add7
.word 0x3e295af7
.word 0x3f014793
.word 0x3ea7add7
.word 0x3e295af7
.word 0x3f014793
.word 0x3ea7add7
.word 0x3e295af7
.word 0x3f014793
.word 0x3ea7add7
.word 0x3e295af7
.word 0x3e396cff
.word 0x4048b03d
.word 0x3f115ccf
.word 0x3e396cff
.word 0x4048b03d
.word 0x3f115ccf
.word 0x3e396cff
.word 0x4048b03d
.word 0x3f115ccf
.word 0x3e396cff
.word 0x4048b03d
.word 0x3f115ccf
.word 0x3e396cff
.word 0x4048b03d
.word 0x3f115ccf
.word 0x3d85d9f9
.word 0x415aca42
.word 0x3f64cabe
.word 0x3d85d9f9
.word 0x415aca42
.word 0x3f64cabe
.word 0x3d85d9f9
.word 0x415aca42
.word 0x3f64cabe
.word 0x3d85d9f9
.word 0x415aca42
.word 0x3f64cabe
.word 0x3d85d9f9
.word 0x415aca42
.word 0x3f64cabe
.word 0x3f4f7fc7
.word 0x3f25e3e8
.word 0x3f067616
.word 0x3f4f7fc7
.word 0x3f25e3e8
.word 0x3f067616
.word 0x3f4f7fc7
.word 0x3f25e3e8
.word 0x3f067616
.word 0x3f4f7fc7
.word 0x3f25e3e8
.word 0x3f067616
.word 0x3f4f7fc7
.word 0x3f25e3e8
.word 0x3f067616
.word 0x3e88a9b0
.word 0x3fd74acd
.word 0x3ee5dce3
.word 0x3e88a9b0
.word 0x3fd74acd
.word 0x3ee5dce3
.word 0x3e88a9b0
.word 0x3fd74acd
.word 0x3ee5dce3
.word 0x3e88a9b0
.word 0x3fd74acd
.word 0x3ee5dce3
.word 0x3e88a9b0
.word 0x3fd74acd
.word 0x3ee5dce3
.word 0x3f3fe297
.word 0x3fa825f0
.word 0x3f7c1246
.word 0x3f3fe297
.word 0x3fa825f0
.word 0x3f7c1246
.word 0x3f3fe297
.word 0x3fa825f0
.word 0x3f7c1246
.word 0x3f3fe297
.word 0x3fa825f0
.word 0x3f7c1246
.word 0x3f3fe297
.word 0x3fa825f0
.word 0x3f7c1246
.word 0x3f272af0
.word 0x3fc07558
.word 0x3f7b59a9
.word 0x3f272af0
.word 0x3fc07558
.word 0x3f7b59a9
.word 0x3f272af0
.word 0x3fc07558
.word 0x3f7b59a9
.word 0x3f272af0
.word 0x3fc07558
.word 0x3f7b59a9
.word 0x3f272af0
.word 0x3fc07558
.word 0x3f7b59a9
.word 0x3efff463
.word 0x3fd27eb3
.word 0x3f527527
.word 0x3efff463
.word 0x3fd27eb3
.word 0x3f527527
.word 0x3efff463
.word 0x3fd27eb3
.word 0x3f527527
.word 0x3efff463
.word 0x3fd27eb3
.word 0x3f527527
.word 0x3efff463
.word 0x3fd27eb3
.word 0x3f527527
.word 0x3e764616
.word 0x403cf2e1
.word 0x3f35c520
.word 0x3e764616
.word 0x403cf2e1
.word 0x3f35c520
.word 0x3e764616
.word 0x403cf2e1
.word 0x3f35c520
.word 0x3e764616
.word 0x403cf2e1
.word 0x3f35c520
.word 0x3e764616
.word 0x403cf2e1
.word 0x3f35c520
.word 0x3f302144
.word 0x3f814cc5
.word 0x3f31eb2a
.word 0x3f302144
.word 0x3f814cc5
.word 0x3f31eb2a
.word 0x3f302144
.word 0x3f814cc5
.word 0x3f31eb2a
.word 0x3f302144
.word 0x3f814cc5
.word 0x3f31eb2a
.word 0x3f302144
.word 0x3f814cc5
.word 0x3f31eb2a
.word 0x3f731a50
.word 0x3f57303f
.word 0x3f4c58ea
.word 0x3f731a50
.word 0x3f57303f
.word 0x3f4c58ea
.word 0x3f731a50
.word 0x3f57303f
.word 0x3f4c58ea
.word 0x3f731a50
.word 0x3f57303f
.word 0x3f4c58ea
.word 0x3f731a50
.word 0x3f57303f
.word 0x3f4c58ea
.word 0x3f63fafd
.word 0x3f710d76
.word 0x3f56ab45
.word 0x3f63fafd
.word 0x3f710d76
.word 0x3f56ab45
.word 0x3f63fafd
.word 0x3f710d76
.word 0x3f56ab45
.word 0x3f63fafd
.word 0x3f710d76
.word 0x3f56ab45
.word 0x3f63fafd
.word 0x3f710d76
.word 0x3f56ab45
.word 0x3ef23831
.word 0x3fce0d58
.word 0x3f42f5d8
.word 0x3ef23831
.word 0x3fce0d58
.word 0x3f42f5d8
.word 0x3ef23831
.word 0x3fce0d58
.word 0x3f42f5d8
.word 0x3ef23831
.word 0x3fce0d58
.word 0x3f42f5d8
.word 0x3ef23831
.word 0x3fce0d58
.word 0x3f42f5d8
.word 0x3f3b6d8b
.word 0x3f983cce
.word 0x3f5eeb1f
.word 0x3f3b6d8b
.word 0x3f983cce
.word 0x3f5eeb1f
.word 0x3f3b6d8b
.word 0x3f983cce
.word 0x3f5eeb1f
.word 0x3f3b6d8b
.word 0x3f983cce
.word 0x3f5eeb1f
.word 0x3f3b6d8b
.word 0x3f983cce
.word 0x3f5eeb1f
.word 0x3ee4d4c7
.word 0x3e28031b
.word 0x3d962e6a
.word 0x3ee4d4c7
.word 0x3e28031b
.word 0x3d962e6a
.word 0x3ee4d4c7
.word 0x3e28031b
.word 0x3d962e6a
.word 0x3ee4d4c7
.word 0x3e28031b
.word 0x3d962e6a
.word 0x3ee4d4c7
.word 0x3e28031b
.word 0x3d962e6a
.word 0x3f0bd57f
.word 0x3f9adc21
.word 0x3f292d59
.word 0x3f0bd57f
.word 0x3f9adc21
.word 0x3f292d59
.word 0x3f0bd57f
.word 0x3f9adc21
.word 0x3f292d59
.word 0x3f0bd57f
.word 0x3f9adc21
.word 0x3f292d59
.word 0x3f0bd57f
.word 0x3f9adc21
.word 0x3f292d59
.word 0x3f6ef1d3
.word 0x3e168c60
.word 0x3e0c84b7
.word 0x3f6ef1d3
.word 0x3e168c60
.word 0x3e0c84b7
.word 0x3f6ef1d3
.word 0x3e168c60
.word 0x3e0c84b7
.word 0x3f6ef1d3
.word 0x3e168c60
.word 0x3e0c84b7
.word 0x3f6ef1d3
.word 0x3e168c60
.word 0x3e0c84b7
.word 0x3f6a8fd9
.word 0x3e20ad6a
.word 0x3e1338cc
.word 0x3f6a8fd9
.word 0x3e20ad6a
.word 0x3e1338cc
.word 0x3f6a8fd9
.word 0x3e20ad6a
.word 0x3e1338cc
.word 0x3f6a8fd9
.word 0x3e20ad6a
.word 0x3e1338cc
.word 0x3f6a8fd9
.word 0x3e20ad6a
.word 0x3e1338cc
.word 0x3ebb2abe
.word 0x3f0aeb1c
.word 0x3e4b21df
.word 0x3ebb2abe
.word 0x3f0aeb1c
.word 0x3e4b21df
.word 0x3ebb2abe
.word 0x3f0aeb1c
.word 0x3e4b21df
.word 0x3ebb2abe
.word 0x3f0aeb1c
.word 0x3e4b21df
.word 0x3ebb2abe
.word 0x3f0aeb1c
.word 0x3e4b21df
.word 0x3f6d7645
.word 0x3d881dd6
.word 0x3d7c8503
.word 0x3f6d7645
.word 0x3d881dd6
.word 0x3d7c8503
.word 0x3f6d7645
.word 0x3d881dd6
.word 0x3d7c8503
.word 0x3f6d7645
.word 0x3d881dd6
.word 0x3d7c8503
.word 0x3f6d7645
.word 0x3d881dd6
.word 0x3d7c8503
.word 0x3e9fa384
.word 0x3febec3d
.word 0x3f131e6c
.word 0x3e9fa384
.word 0x3febec3d
.word 0x3f131e6c
.word 0x3e9fa384
.word 0x3febec3d
.word 0x3f131e6c
.word 0x3e9fa384
.word 0x3febec3d
.word 0x3f131e6c
.word 0x3e9fa384
.word 0x3febec3d
.word 0x3f131e6c
.word 0x3f691901
.word 0x3f847d49
.word 0x3f7145f1
.word 0x3f691901
.word 0x3f847d49
.word 0x3f7145f1
.word 0x3f691901
.word 0x3f847d49
.word 0x3f7145f1
.word 0x3f691901
.word 0x3f847d49
.word 0x3f7145f1
.word 0x3f691901
.word 0x3f847d49
.word 0x3f7145f1
.word 0x3edbdafb
.word 0x3f329a6d
.word 0x3e9962e2
.word 0x3edbdafb
.word 0x3f329a6d
.word 0x3e9962e2
.word 0x3edbdafb
.word 0x3f329a6d
.word 0x3e9962e2
.word 0x3edbdafb
.word 0x3f329a6d
.word 0x3e9962e2
.word 0x3edbdafb
.word 0x3f329a6d
.word 0x3e9962e2
.word 0x3f59c305
.word 0x3dc29aba
.word 0x3da58968
.word 0x3f59c305
.word 0x3dc29aba
.word 0x3da58968
.word 0x3f59c305
.word 0x3dc29aba
.word 0x3da58968
.word 0x3f59c305
.word 0x3dc29aba
.word 0x3da58968
.word 0x3f59c305
.word 0x3dc29aba
.word 0x3da58968
.word 0x3e395d93
.word 0x40830f36
.word 0x3f3dcbcc
.word 0x3e395d93
.word 0x40830f36
.word 0x3f3dcbcc
.word 0x3e395d93
.word 0x40830f36
.word 0x3f3dcbcc
.word 0x3e395d93
.word 0x40830f36
.word 0x3f3dcbcc
.word 0x3e395d93
.word 0x40830f36
.word 0x3f3dcbcc
.word 0x3f13e726
.word 0x3e1d02ba
.word 0x3db56cac
.word 0x3f13e726
.word 0x3e1d02ba
.word 0x3db56cac
.word 0x3f13e726
.word 0x3e1d02ba
.word 0x3db56cac
.word 0x3f13e726
.word 0x3e1d02ba
.word 0x3db56cac
.word 0x3f13e726
.word 0x3e1d02ba
.word 0x3db56cac
.word 0x3f3ac40b
.word 0x3f98b81d
.word 0x3f5ed572
.word 0x3f3ac40b
.word 0x3f98b81d
.word 0x3f5ed572
.word 0x3f3ac40b
.word 0x3f98b81d
.word 0x3f5ed572
.word 0x3f3ac40b
.word 0x3f98b81d
.word 0x3f5ed572
.word 0x3f3ac40b
.word 0x3f98b81d
.word 0x3f5ed572
.word 0x3f75dd8c
.word 0x3e6ba28f
.word 0x3e624e7f
.word 0x3f75dd8c
.word 0x3e6ba28f
.word 0x3e624e7f
.word 0x3f75dd8c
.word 0x3e6ba28f
.word 0x3e624e7f
.word 0x3f75dd8c
.word 0x3e6ba28f
.word 0x3e624e7f
.word 0x3f75dd8c
.word 0x3e6ba28f
.word 0x3e624e7f
.word 0x3f652d2a
.word 0x3f520582
.word 0x3f3c03fa
.word 0x3f652d2a
.word 0x3f520582
.word 0x3f3c03fa
.word 0x3f652d2a
.word 0x3f520582
.word 0x3f3c03fa
.word 0x3f652d2a
.word 0x3f520582
.word 0x3f3c03fa
.word 0x3f652d2a
.word 0x3f520582
.word 0x3f3c03fa
.word 0x3e58b75a
.word 0x3e08f2c9
.word 0x3ce7dde0
.word 0x3e58b75a
.word 0x3e08f2c9
.word 0x3ce7dde0
.word 0x3e58b75a
.word 0x3e08f2c9
.word 0x3ce7dde0
.word 0x3e58b75a
.word 0x3e08f2c9
.word 0x3ce7dde0
.word 0x3e58b75a
.word 0x3e08f2c9
.word 0x3ce7dde0
.word 0x3f6f8aa3
.word 0x3c829814
.word 0x3c746568
.word 0x3f6f8aa3
.word 0x3c829814
.word 0x3c746568
.word 0x3f6f8aa3
.word 0x3c829814
.word 0x3c746568
.word 0x3f6f8aa3
.word 0x3c829814
.word 0x3c746568
.word 0x3f6f8aa3
.word 0x3c829814
.word 0x3c746568
.word 0x3ec08ca1
.word 0x3fa60194
.word 0x3ef9b8c2
.word 0x3ec08ca1
.word 0x3fa60194
.word 0x3ef9b8c2
.word 0x3ec08ca1
.word 0x3fa60194
.word 0x3ef9b8c2
.word 0x3ec08ca1
.word 0x3fa60194
.word 0x3ef9b8c2
.word 0x3ec08ca1
.word 0x3fa60194
.word 0x3ef9b8c2
.word 0x3f7b5efa
.word 0x3f2e49bb
.word 0x3f2b22f4
.word 0x3f7b5efa
.word 0x3f2e49bb
.word 0x3f2b22f4
.word 0x3f7b5efa
.word 0x3f2e49bb
.word 0x3f2b22f4
.word 0x3f7b5efa
.word 0x3f2e49bb
.word 0x3f2b22f4
.word 0x3f7b5efa
.word 0x3f2e49bb
.word 0x3f2b22f4
.word 0x3ee45386
.word 0x3fa09aa6
.word 0x3f0f3e23
.word 0x3ee45386
.word 0x3fa09aa6
.word 0x3f0f3e23
.word 0x3ee45386
.word 0x3fa09aa6
.word 0x3f0f3e23
.word 0x3ee45386
.word 0x3fa09aa6
.word 0x3f0f3e23
.word 0x3ee45386
.word 0x3fa09aa6
.word 0x3f0f3e23
.word 0x3e8e423e
.word 0x4061da64
.word 0x3f7b032a
.word 0x3e8e423e
.word 0x4061da64
.word 0x3f7b032a
.word 0x3e8e423e
.word 0x4061da64
.word 0x3f7b032a
.word 0x3e8e423e
.word 0x4061da64
.word 0x3f7b032a
.word 0x3e8e423e
.word 0x4061da64
.word 0x3f7b032a
.word 0x3f4de3ad
.word 0x3f58eb01
.word 0x3f2e751b
.word 0x3f4de3ad
.word 0x3f58eb01
.word 0x3f2e751b
.word 0x3f4de3ad
.word 0x3f58eb01
.word 0x3f2e751b
.word 0x3f4de3ad
.word 0x3f58eb01
.word 0x3f2e751b
.word 0x3f4de3ad
.word 0x3f58eb01
.word 0x3f2e751b
.word 0x3ef8029d
.word 0x3faea2fe
.word 0x3f292faf
.word 0x3ef8029d
.word 0x3faea2fe
.word 0x3f292faf
.word 0x3ef8029d
.word 0x3faea2fe
.word 0x3f292faf
.word 0x3ef8029d
.word 0x3faea2fe
.word 0x3f292faf
.word 0x3ef8029d
.word 0x3faea2fe
.word 0x3f292faf
.word 0x3f56aa29
.word 0x3f2d8dab
.word 0x3f1187c9
.word 0x3f56aa29
.word 0x3f2d8dab
.word 0x3f1187c9
.word 0x3f56aa29
.word 0x3f2d8dab
.word 0x3f1187c9
.word 0x3f56aa29
.word 0x3f2d8dab
.word 0x3f1187c9
.word 0x3f56aa29
.word 0x3f2d8dab
.word 0x3f1187c9
.word 0x3c25f232
.word 0x418457d2
.word 0x3e2b939f
.word 0x3c25f232
.word 0x418457d2
.word 0x3e2b939f
.word 0x3c25f232
.word 0x418457d2
.word 0x3e2b939f
.word 0x3c25f232
.word 0x418457d2
.word 0x3e2b939f
.word 0x3c25f232
.word 0x418457d2
.word 0x3e2b939f
.word 0x3f1a0bd6
.word 0x3f5a228f
.word 0x3f0342e0
.word 0x3f1a0bd6
.word 0x3f5a228f
.word 0x3f0342e0
.word 0x3f1a0bd6
.word 0x3f5a228f
.word 0x3f0342e0
.word 0x3f1a0bd6
.word 0x3f5a228f
.word 0x3f0342e0
.word 0x3f1a0bd6
.word 0x3f5a228f
.word 0x3f0342e0
.word 0x3f47c917
.word 0x3d794851
.word 0x3d428b07
.word 0x3f47c917
.word 0x3d794851
.word 0x3d428b07
.word 0x3f47c917
.word 0x3d794851
.word 0x3d428b07
.word 0x3f47c917
.word 0x3d794851
.word 0x3d428b07
.word 0x3f47c917
.word 0x3d794851
.word 0x3d428b07
.word 0x3deff556
.word 0x3e8dd2d8
.word 0x3d04efc3
.word 0x3deff556
.word 0x3e8dd2d8
.word 0x3d04efc3
.word 0x3deff556
.word 0x3e8dd2d8
.word 0x3d04efc3
.word 0x3deff556
.word 0x3e8dd2d8
.word 0x3d04efc3
.word 0x3deff556
.word 0x3e8dd2d8
.word 0x3d04efc3
.word 0x3eadf2db
.word 0x40217182
.word 0x3f5b65ba
.word 0x3eadf2db
.word 0x40217182
.word 0x3f5b65ba
.word 0x3eadf2db
.word 0x40217182
.word 0x3f5b65ba
.word 0x3eadf2db
.word 0x40217182
.word 0x3f5b65ba
.word 0x3eadf2db
.word 0x40217182
.word 0x3f5b65ba
.word 0x3f58762f
.word 0x3eabe52f
.word 0x3e9158bc
.word 0x3f58762f
.word 0x3eabe52f
.word 0x3e9158bc
.word 0x3f58762f
.word 0x3eabe52f
.word 0x3e9158bc
.word 0x3f58762f
.word 0x3eabe52f
.word 0x3e9158bc
.word 0x3f58762f
.word 0x3eabe52f
.word 0x3e9158bc
.word 0x3e5d3fe0
.word 0x3ef40361
.word 0x3dd2e3ce
.word 0x3e5d3fe0
.word 0x3ef40361
.word 0x3dd2e3ce
.word 0x3e5d3fe0
.word 0x3ef40361
.word 0x3dd2e3ce
.word 0x3e5d3fe0
.word 0x3ef40361
.word 0x3dd2e3ce
.word 0x3e5d3fe0
.word 0x3ef40361
.word 0x3dd2e3ce
.word 0x3f6d47f5
.word 0x3eb694a8
.word 0x3ea93af2
.word 0x3f6d47f5
.word 0x3eb694a8
.word 0x3ea93af2
.word 0x3f6d47f5
.word 0x3eb694a8
.word 0x3ea93af2
.word 0x3f6d47f5
.word 0x3eb694a8
.word 0x3ea93af2
.word 0x3f6d47f5
.word 0x3eb694a8
.word 0x3ea93af2
.word 0x3f6d6d9e
.word 0x3f519a30
.word 0x3f42657f
.word 0x3f6d6d9e
.word 0x3f519a30
.word 0x3f42657f
.word 0x3f6d6d9e
.word 0x3f519a30
.word 0x3f42657f
.word 0x3f6d6d9e
.word 0x3f519a30
.word 0x3f42657f
.word 0x3f6d6d9e
.word 0x3f519a30
.word 0x3f42657f
.word 0x3f60dd62
.word 0x3f2297b4
.word 0x3f0ed159
.word 0x3f60dd62
.word 0x3f2297b4
.word 0x3f0ed159
.word 0x3f60dd62
.word 0x3f2297b4
.word 0x3f0ed159
.word 0x3f60dd62
.word 0x3f2297b4
.word 0x3f0ed159
.word 0x3f60dd62
.word 0x3f2297b4
.word 0x3f0ed159
.word 0x3e23d718
.word 0x40ac92a8
.word 0x3f5ce4c1
.word 0x3e23d718
.word 0x40ac92a8
.word 0x3f5ce4c1
.word 0x3e23d718
.word 0x40ac92a8
.word 0x3f5ce4c1
.word 0x3e23d718
.word 0x40ac92a8
.word 0x3f5ce4c1
.word 0x3e23d718
.word 0x40ac92a8
.word 0x3f5ce4c1
.word 0x3ee18768
.word 0x3e03e329
.word 0x3d6860d3
.word 0x3ee18768
.word 0x3e03e329
.word 0x3d6860d3
.word 0x3ee18768
.word 0x3e03e329
.word 0x3d6860d3
.word 0x3ee18768
.word 0x3e03e329
.word 0x3d6860d3
.word 0x3ee18768
.word 0x3e03e329
.word 0x3d6860d3
.word 0x3d6cd40c
.word 0x414ce36a
.word 0x3f3d8b5c
.word 0x3d6cd40c
.word 0x414ce36a
.word 0x3f3d8b5c
.word 0x3d6cd40c
.word 0x414ce36a
.word 0x3f3d8b5c
.word 0x3d6cd40c
.word 0x414ce36a
.word 0x3f3d8b5c
.word 0x3d6cd40c
.word 0x414ce36a
.word 0x3f3d8b5c
.word 0x3e9a001d
.word 0x3ed22a34
.word 0x3dfcdaf7
.word 0x3e9a001d
.word 0x3ed22a34
.word 0x3dfcdaf7
.word 0x3e9a001d
.word 0x3ed22a34
.word 0x3dfcdaf7
.word 0x3e9a001d
.word 0x3ed22a34
.word 0x3dfcdaf7
.word 0x3e9a001d
.word 0x3ed22a34
.word 0x3dfcdaf7
.word 0x3f059f69
.word 0x3de5875e
.word 0x3d6f9c83
.word 0x3f059f69
.word 0x3de5875e
.word 0x3d6f9c83
.word 0x3f059f69
.word 0x3de5875e
.word 0x3d6f9c83
.word 0x3f059f69
.word 0x3de5875e
.word 0x3d6f9c83
.word 0x3f059f69
.word 0x3de5875e
.word 0x3d6f9c83
.word 0x3f0c3310
.word 0x3f5a2a37
.word 0x3eeef536
.word 0x3f0c3310
.word 0x3f5a2a37
.word 0x3eeef536
.word 0x3f0c3310
.word 0x3f5a2a37
.word 0x3eeef536
.word 0x3f0c3310
.word 0x3f5a2a37
.word 0x3eeef536
.word 0x3f0c3310
.word 0x3f5a2a37
.word 0x3eeef536
.word 0x3ef9c5f8
.word 0x3f213e5f
.word 0x3e9d525c
.word 0x3ef9c5f8
.word 0x3f213e5f
.word 0x3e9d525c
.word 0x3ef9c5f8
.word 0x3f213e5f
.word 0x3e9d525c
.word 0x3ef9c5f8
.word 0x3f213e5f
.word 0x3e9d525c
.word 0x3ef9c5f8
.word 0x3f213e5f
.word 0x3e9d525c
.word 0x3ec662be
.word 0x3fa356b6
.word 0x3efd2823
.word 0x3ec662be
.word 0x3fa356b6
.word 0x3efd2823
.word 0x3ec662be
.word 0x3fa356b6
.word 0x3efd2823
.word 0x3ec662be
.word 0x3fa356b6
.word 0x3efd2823
.word 0x3ec662be
.word 0x3fa356b6
.word 0x3efd2823
.word 0x3db33978
.word 0x40cb958c
.word 0x3f0e8745
.word 0x3db33978
.word 0x40cb958c
.word 0x3f0e8745
.word 0x3db33978
.word 0x40cb958c
.word 0x3f0e8745
.word 0x3db33978
.word 0x40cb958c
.word 0x3f0e8745
.word 0x3db33978
.word 0x40cb958c
.word 0x3f0e8745
.word 0x3ee06501
.word 0x3f0c30fd
.word 0x3e75c45b
.word 0x3ee06501
.word 0x3f0c30fd
.word 0x3e75c45b
.word 0x3ee06501
.word 0x3f0c30fd
.word 0x3e75c45b
.word 0x3ee06501
.word 0x3f0c30fd
.word 0x3e75c45b
.word 0x3ee06501
.word 0x3f0c30fd
.word 0x3e75c45b
.word 0x3e693462
.word 0x400a580e
.word 0x3efc0ce9
.word 0x3e693462
.word 0x400a580e
.word 0x3efc0ce9
.word 0x3e693462
.word 0x400a580e
.word 0x3efc0ce9
.word 0x3e693462
.word 0x400a580e
.word 0x3efc0ce9
.word 0x3e693462
.word 0x400a580e
.word 0x3efc0ce9
.word 0x3f4062ad
.word 0x3f76515b
.word 0x3f391bf6
.word 0x3f4062ad
.word 0x3f76515b
.word 0x3f391bf6
.word 0x3f4062ad
.word 0x3f76515b
.word 0x3f391bf6
.word 0x3f4062ad
.word 0x3f76515b
.word 0x3f391bf6
.word 0x3f4062ad
.word 0x3f76515b
.word 0x3f391bf6
.word 0x3f64d603
.word 0x3efbda2e
.word 0x3ee120dd
.word 0x3f64d603
.word 0x3efbda2e
.word 0x3ee120dd
.word 0x3f64d603
.word 0x3efbda2e
.word 0x3ee120dd
.word 0x3f64d603
.word 0x3efbda2e
.word 0x3ee120dd
.word 0x3f64d603
.word 0x3efbda2e
.word 0x3ee120dd
.word 0x3ee39d1f
.word 0x3ef8745d
.word 0x3e5ce7ad
.word 0x3ee39d1f
.word 0x3ef8745d
.word 0x3e5ce7ad
.word 0x3ee39d1f
.word 0x3ef8745d
.word 0x3e5ce7ad
.word 0x3ee39d1f
.word 0x3ef8745d
.word 0x3e5ce7ad
.word 0x3ee39d1f
.word 0x3ef8745d
.word 0x3e5ce7ad
.word 0x3f2c8c6f
.word 0x3f36efd8
.word 0x3ef69aff
.word 0x3f2c8c6f
.word 0x3f36efd8
.word 0x3ef69aff
.word 0x3f2c8c6f
.word 0x3f36efd8
.word 0x3ef69aff
.word 0x3f2c8c6f
.word 0x3f36efd8
.word 0x3ef69aff
.word 0x3f2c8c6f
.word 0x3f36efd8
.word 0x3ef69aff
.word 0x3e8cb377
.word 0x3fce95eb
.word 0x3ee315a0
.word 0x3e8cb377
.word 0x3fce95eb
.word 0x3ee315a0
.word 0x3e8cb377
.word 0x3fce95eb
.word 0x3ee315a0
.word 0x3e8cb377
.word 0x3fce95eb
.word 0x3ee315a0
.word 0x3e8cb377
.word 0x3fce95eb
.word 0x3ee315a0
.word 0x3f53e115
.word 0x3f22da5d
.word 0x3f06c92a
.word 0x3f53e115
.word 0x3f22da5d
.word 0x3f06c92a
.word 0x3f53e115
.word 0x3f22da5d
.word 0x3f06c92a
.word 0x3f53e115
.word 0x3f22da5d
.word 0x3f06c92a
.word 0x3f53e115
.word 0x3f22da5d
.word 0x3f06c92a
.word 0x3f7efe47
.word 0x3e4e761b
.word 0x3e4da642
.word 0x3f7efe47
.word 0x3e4e761b
.word 0x3e4da642
.word 0x3f7efe47
.word 0x3e4e761b
.word 0x3e4da642
.word 0x3f7efe47
.word 0x3e4e761b
.word 0x3e4da642
.word 0x3f7efe47
.word 0x3e4e761b
.word 0x3e4da642
.word 0x3f0f53f9
.word 0x3fbac285
.word 0x3f511fd7
.word 0x3f0f53f9
.word 0x3fbac285
.word 0x3f511fd7
.word 0x3f0f53f9
.word 0x3fbac285
.word 0x3f511fd7
.word 0x3f0f53f9
.word 0x3fbac285
.word 0x3f511fd7
.word 0x3f0f53f9
.word 0x3fbac285
.word 0x3f511fd7
.word 0x3ef3f6f1
.word 0x4003cd5e
.word 0x3f7b3628
.word 0x3ef3f6f1
.word 0x4003cd5e
.word 0x3f7b3628
.word 0x3ef3f6f1
.word 0x4003cd5e
.word 0x3f7b3628
.word 0x3ef3f6f1
.word 0x4003cd5e
.word 0x3f7b3628
.word 0x3ef3f6f1
.word 0x4003cd5e
.word 0x3f7b3628
.word 0x3eff27de
.word 0x3f707fae
.word 0x3eefb4a3
.word 0x3eff27de
.word 0x3f707fae
.word 0x3eefb4a3
.word 0x3eff27de
.word 0x3f707fae
.word 0x3eefb4a3
.word 0x3eff27de
.word 0x3f707fae
.word 0x3eefb4a3
.word 0x3eff27de
.word 0x3f707fae
.word 0x3eefb4a3
.word 0x3f1451b4
.word 0x3e116c20
.word 0x3da881d9
.word 0x3f1451b4
.word 0x3e116c20
.word 0x3da881d9
.word 0x3f1451b4
.word 0x3e116c20
.word 0x3da881d9
.word 0x3f1451b4
.word 0x3e116c20
.word 0x3da881d9
.word 0x3f1451b4
.word 0x3e116c20
.word 0x3da881d9
.word 0x3ed5534f
.word 0x3e6b357e
.word 0x3dc4000d
.word 0x3ed5534f
.word 0x3e6b357e
.word 0x3dc4000d
.word 0x3ed5534f
.word 0x3e6b357e
.word 0x3dc4000d
.word 0x3ed5534f
.word 0x3e6b357e
.word 0x3dc4000d
.word 0x3ed5534f
.word 0x3e6b357e
.word 0x3dc4000d
.word 0x3f256e69
.word 0x3f56a69b
.word 0x3f0ab5f6
.word 0x3f256e69
.word 0x3f56a69b
.word 0x3f0ab5f6
.word 0x3f256e69
.word 0x3f56a69b
.word 0x3f0ab5f6
.word 0x3f256e69
.word 0x3f56a69b
.word 0x3f0ab5f6
.word 0x3f256e69
.word 0x3f56a69b
.word 0x3f0ab5f6
.word 0x3f5e71f4
.word 0x3dd4156a
.word 0x3db848fa
.word 0x3f5e71f4
.word 0x3dd4156a
.word 0x3db848fa
.word 0x3f5e71f4
.word 0x3dd4156a
.word 0x3db848fa
.word 0x3f5e71f4
.word 0x3dd4156a
.word 0x3db848fa
.word 0x3f5e71f4
.word 0x3dd4156a
.word 0x3db848fa
.word 0x3f3d9a44
.word 0x3f48d160
.word 0x3f14bb97
.word 0x3f3d9a44
.word 0x3f48d160
.word 0x3f14bb97
.word 0x3f3d9a44
.word 0x3f48d160
.word 0x3f14bb97
.word 0x3f3d9a44
.word 0x3f48d160
.word 0x3f14bb97
.word 0x3f3d9a44
.word 0x3f48d160
.word 0x3f14bb97
.word 0x3f426c02
.word 0x3f0b6781
.word 0x3ed3be81
.word 0x3f426c02
.word 0x3f0b6781
.word 0x3ed3be81
.word 0x3f426c02
.word 0x3f0b6781
.word 0x3ed3be81
.word 0x3f426c02
.word 0x3f0b6781
.word 0x3ed3be81
.word 0x3f426c02
.word 0x3f0b6781
.word 0x3ed3be81
.word 0x3f3f87c0
.word 0x3f71ed07
.word 0x3f350023
.word 0x3f3f87c0
.word 0x3f71ed07
.word 0x3f350023
.word 0x3f3f87c0
.word 0x3f71ed07
.word 0x3f350023
.word 0x3f3f87c0
.word 0x3f71ed07
.word 0x3f350023
.word 0x3f3f87c0
.word 0x3f71ed07
.word 0x3f350023
.word 0x3e32045b
.word 0x409139a9
.word 0x3f49f921
.word 0x3e32045b
.word 0x409139a9
.word 0x3f49f921
.word 0x3e32045b
.word 0x409139a9
.word 0x3f49f921
.word 0x3e32045b
.word 0x409139a9
.word 0x3f49f921
.word 0x3e32045b
.word 0x409139a9
.word 0x3f49f921
.word 0x3f10f1dd
.word 0x3e67f684
.word 0x3e0355d2
.word 0x3f10f1dd
.word 0x3e67f684
.word 0x3e0355d2
.word 0x3f10f1dd
.word 0x3e67f684
.word 0x3e0355d2
.word 0x3f10f1dd
.word 0x3e67f684
.word 0x3e0355d2
.word 0x3f10f1dd
.word 0x3e67f684
.word 0x3e0355d2
.word 0x3ef263f8
.word 0x3e0f919e
.word 0x3d87efb7
.word 0x3ef263f8
.word 0x3e0f919e
.word 0x3d87efb7
.word 0x3ef263f8
.word 0x3e0f919e
.word 0x3d87efb7
.word 0x3ef263f8
.word 0x3e0f919e
.word 0x3d87efb7
.word 0x3ef263f8
.word 0x3e0f919e
.word 0x3d87efb7
.word 0x3cee77b9
.word 0x41408dc1
.word 0x3eb35dd7
.word 0x3cee77b9
.word 0x41408dc1
.word 0x3eb35dd7
.word 0x3cee77b9
.word 0x41408dc1
.word 0x3eb35dd7
.word 0x3cee77b9
.word 0x41408dc1
.word 0x3eb35dd7
.word 0x3cee77b9
.word 0x41408dc1
.word 0x3eb35dd7
.word 0x3f5e77d7
.word 0x3f9131f3
.word 0x3f7c5a93
.word 0x3f5e77d7
.word 0x3f9131f3
.word 0x3f7c5a93
.word 0x3f5e77d7
.word 0x3f9131f3
.word 0x3f7c5a93
.word 0x3f5e77d7
.word 0x3f9131f3
.word 0x3f7c5a93
.word 0x3f5e77d7
.word 0x3f9131f3
.word 0x3f7c5a93
.word 0x3f264bb1
.word 0x3f31deb9
.word 0x3ee71607
.word 0x3f264bb1
.word 0x3f31deb9
.word 0x3ee71607
.word 0x3f264bb1
.word 0x3f31deb9
.word 0x3ee71607
.word 0x3f264bb1
.word 0x3f31deb9
.word 0x3ee71607
.word 0x3f264bb1
.word 0x3f31deb9
.word 0x3ee71607
.word 0x3ca1556e
.word 0x418b38ee
.word 0x3eaf7a87
.word 0x3ca1556e
.word 0x418b38ee
.word 0x3eaf7a87
.word 0x3ca1556e
.word 0x418b38ee
.word 0x3eaf7a87
.word 0x3ca1556e
.word 0x418b38ee
.word 0x3eaf7a87
.word 0x3ca1556e
.word 0x418b38ee
.word 0x3eaf7a87
.word 0x3f5a9452
.word 0x3e50113f
.word 0x3e31a73c
.word 0x3f5a9452
.word 0x3e50113f
.word 0x3e31a73c
.word 0x3f5a9452
.word 0x3e50113f
.word 0x3e31a73c
.word 0x3f5a9452
.word 0x3e50113f
.word 0x3e31a73c
.word 0x3f5a9452
.word 0x3e50113f
.word 0x3e31a73c
.word 0x3dc2dce7
.word 0x40022767
.word 0x3e462458
.word 0x3dc2dce7
.word 0x40022767
.word 0x3e462458
.word 0x3dc2dce7
.word 0x40022767
.word 0x3e462458
.word 0x3dc2dce7
.word 0x40022767
.word 0x3e462458
.word 0x3dc2dce7
.word 0x40022767
.word 0x3e462458
.word 0x3f5f7a69
.word 0x3f78edcf
.word 0x3f594e30
.word 0x3f5f7a69
.word 0x3f78edcf
.word 0x3f594e30
.word 0x3f5f7a69
.word 0x3f78edcf
.word 0x3f594e30
.word 0x3f5f7a69
.word 0x3f78edcf
.word 0x3f594e30
.word 0x3f5f7a69
.word 0x3f78edcf
.word 0x3f594e30
.word 0x3e8ce730
.word 0x4041057e
.word 0x3f547aa3
.word 0x3e8ce730
.word 0x4041057e
.word 0x3f547aa3
.word 0x3e8ce730
.word 0x4041057e
.word 0x3f547aa3
.word 0x3e8ce730
.word 0x4041057e
.word 0x3f547aa3
.word 0x3e8ce730
.word 0x4041057e
.word 0x3f547aa3
.word 0x3f193eb6
.word 0x3db60530
.word 0x3d59eb61
.word 0x3f193eb6
.word 0x3db60530
.word 0x3d59eb61
.word 0x3f193eb6
.word 0x3db60530
.word 0x3d59eb61
.word 0x3f193eb6
.word 0x3db60530
.word 0x3d59eb61
.word 0x3f193eb6
.word 0x3db60530
.word 0x3d59eb61
.word 0x3ce82ef9
.word 0x41aa87c4
.word 0x3f1aaa54
.word 0x3ce82ef9
.word 0x41aa87c4
.word 0x3f1aaa54
.word 0x3ce82ef9
.word 0x41aa87c4
.word 0x3f1aaa54
.word 0x3ce82ef9
.word 0x41aa87c4
.word 0x3f1aaa54
.word 0x3ce82ef9
.word 0x41aa87c4
.word 0x3f1aaa54
.word 0x3f2ae027
.word 0x3e98c7cc
.word 0x3e4bf4e8
.word 0x3f2ae027
.word 0x3e98c7cc
.word 0x3e4bf4e8
.word 0x3f2ae027
.word 0x3e98c7cc
.word 0x3e4bf4e8
.word 0x3f2ae027
.word 0x3e98c7cc
.word 0x3e4bf4e8
.word 0x3f2ae027
.word 0x3e98c7cc
.word 0x3e4bf4e8
.word 0x3f524c66
.word 0x3e836cc2
.word 0x3e57ece1
.word 0x3f524c66
.word 0x3e836cc2
.word 0x3e57ece1
.word 0x3f524c66
.word 0x3e836cc2
.word 0x3e57ece1
.word 0x3f524c66
.word 0x3e836cc2
.word 0x3e57ece1
.word 0x3f524c66
.word 0x3e836cc2
.word 0x3e57ece1
.word 0x3e7fdb2d
.word 0x4005b2e0
.word 0x3f059fa5
.word 0x3e7fdb2d
.word 0x4005b2e0
.word 0x3f059fa5
.word 0x3e7fdb2d
.word 0x4005b2e0
.word 0x3f059fa5
.word 0x3e7fdb2d
.word 0x4005b2e0
.word 0x3f059fa5
.word 0x3e7fdb2d
.word 0x4005b2e0
.word 0x3f059fa5
.word 0x3db8c6c3
.word 0x401a6ca8
.word 0x3e5eebfe
.word 0x3db8c6c3
.word 0x401a6ca8
.word 0x3e5eebfe
.word 0x3db8c6c3
.word 0x401a6ca8
.word 0x3e5eebfe
.word 0x3db8c6c3
.word 0x401a6ca8
.word 0x3e5eebfe
.word 0x3db8c6c3
.word 0x401a6ca8
.word 0x3e5eebfe
.word 0x3f6a4bf5
.word 0x3ebde0b0
.word 0x3eadc7b7
.word 0x3f6a4bf5
.word 0x3ebde0b0
.word 0x3eadc7b7
.word 0x3f6a4bf5
.word 0x3ebde0b0
.word 0x3eadc7b7
.word 0x3f6a4bf5
.word 0x3ebde0b0
.word 0x3eadc7b7
.word 0x3f6a4bf5
.word 0x3ebde0b0
.word 0x3eadc7b7
.word 0x3eb1acdc
.word 0x3f13cdcc
.word 0x3e4d2a30
.word 0x3eb1acdc
.word 0x3f13cdcc
.word 0x3e4d2a30
.word 0x3eb1acdc
.word 0x3f13cdcc
.word 0x3e4d2a30
.word 0x3eb1acdc
.word 0x3f13cdcc
.word 0x3e4d2a30
.word 0x3eb1acdc
.word 0x3f13cdcc
.word 0x3e4d2a30
.word 0x3e2364de
.word 0x4050c768
.word 0x3f05413a
.word 0x3e2364de
.word 0x4050c768
.word 0x3f05413a
.word 0x3e2364de
.word 0x4050c768
.word 0x3f05413a
.word 0x3e2364de
.word 0x4050c768
.word 0x3f05413a
.word 0x3e2364de
.word 0x4050c768
.word 0x3f05413a
.word 0x3ec07a5e
.word 0x3e87c63a
.word 0x3dcc2b24
.word 0x3ec07a5e
.word 0x3e87c63a
.word 0x3dcc2b24
.word 0x3ec07a5e
.word 0x3e87c63a
.word 0x3dcc2b24
.word 0x3ec07a5e
.word 0x3e87c63a
.word 0x3dcc2b24
.word 0x3ec07a5e
.word 0x3e87c63a
.word 0x3dcc2b24
.word 0x3f4da4aa
.word 0x3f7d8e7a
.word 0x3f4bae2f
.word 0x3f4da4aa
.word 0x3f7d8e7a
.word 0x3f4bae2f
.word 0x3f4da4aa
.word 0x3f7d8e7a
.word 0x3f4bae2f
.word 0x3f4da4aa
.word 0x3f7d8e7a
.word 0x3f4bae2f
.word 0x3f4da4aa
.word 0x3f7d8e7a
.word 0x3f4bae2f
.word 0x3f478fc7
.word 0x3f7de756
.word 0x3f45ed6e
.word 0x3f478fc7
.word 0x3f7de756
.word 0x3f45ed6e
.word 0x3f478fc7
.word 0x3f7de756
.word 0x3f45ed6e
.word 0x3f478fc7
.word 0x3f7de756
.word 0x3f45ed6e
.word 0x3f478fc7
.word 0x3f7de756
.word 0x3f45ed6e
.word 0x3d385142
.word 0x4161e910
.word 0x3f22a738
.word 0x3d385142
.word 0x4161e910
.word 0x3f22a738
.word 0x3d385142
.word 0x4161e910
.word 0x3f22a738
.word 0x3d385142
.word 0x4161e910
.word 0x3f22a738
.word 0x3d385142
.word 0x4161e910
.word 0x3f22a738
.word 0x3d80fb07
.word 0x3e427e95
.word 0x3c43fc05
.word 0x3d80fb07
.word 0x3e427e95
.word 0x3c43fc05
.word 0x3d80fb07
.word 0x3e427e95
.word 0x3c43fc05
.word 0x3d80fb07
.word 0x3e427e95
.word 0x3c43fc05
.word 0x3d80fb07
.word 0x3e427e95
.word 0x3c43fc05
.word 0x3d321d3f
.word 0x414b6398
.word 0x3f0d827c
.word 0x3d321d3f
.word 0x414b6398
.word 0x3f0d827c
.word 0x3d321d3f
.word 0x414b6398
.word 0x3f0d827c
.word 0x3d321d3f
.word 0x414b6398
.word 0x3f0d827c
.word 0x3d321d3f
.word 0x414b6398
.word 0x3f0d827c
.word 0x3f3da6bf
.word 0x3ed48125
.word 0x3e9d6dc3
.word 0x3f3da6bf
.word 0x3ed48125
.word 0x3e9d6dc3
.word 0x3f3da6bf
.word 0x3ed48125
.word 0x3e9d6dc3
.word 0x3f3da6bf
.word 0x3ed48125
.word 0x3e9d6dc3
.word 0x3f3da6bf
.word 0x3ed48125
.word 0x3e9d6dc3
.word 0x3f78d91d
.word 0x3f3dc53e
.word 0x3f387806
.word 0x3f78d91d
.word 0x3f3dc53e
.word 0x3f387806
.word 0x3f78d91d
.word 0x3f3dc53e
.word 0x3f387806
.word 0x3f78d91d
.word 0x3f3dc53e
.word 0x3f387806
.word 0x3f78d91d
.word 0x3f3dc53e
.word 0x3f387806
.word 0x3f24f9da
.word 0x3fc0dde1
.word 0x3f7894c1
.word 0x3f24f9da
.word 0x3fc0dde1
.word 0x3f7894c1
.word 0x3f24f9da
.word 0x3fc0dde1
.word 0x3f7894c1
.word 0x3f24f9da
.word 0x3fc0dde1
.word 0x3f7894c1
.word 0x3f24f9da
.word 0x3fc0dde1
.word 0x3f7894c1
.word 0x3f45f466
.word 0x3f1fb179
.word 0x3ef6f80e
.word 0x3f45f466
.word 0x3f1fb179
.word 0x3ef6f80e
.word 0x3f45f466
.word 0x3f1fb179
.word 0x3ef6f80e
.word 0x3f45f466
.word 0x3f1fb179
.word 0x3ef6f80e
.word 0x3f45f466
.word 0x3f1fb179
.word 0x3ef6f80e
.word 0x3e3a06ed
.word 0x3fb7481f
.word 0x3e852f5d
.word 0x3e3a06ed
.word 0x3fb7481f
.word 0x3e852f5d
.word 0x3e3a06ed
.word 0x3fb7481f
.word 0x3e852f5d
.word 0x3e3a06ed
.word 0x3fb7481f
.word 0x3e852f5d
.word 0x3e3a06ed
.word 0x3fb7481f
.word 0x3e852f5d
.word 0x3e16e879
.word 0x3fa86e71
.word 0x3e469355
.word 0x3e16e879
.word 0x3fa86e71
.word 0x3e469355
.word 0x3e16e879
.word 0x3fa86e71
.word 0x3e469355
.word 0x3e16e879
.word 0x3fa86e71
.word 0x3e469355
.word 0x3e16e879
.word 0x3fa86e71
.word 0x3e469355
.word 0x3e410332
.word 0x3da3c8b6
.word 0x3c76f8b9
.word 0x3e410332
.word 0x3da3c8b6
.word 0x3c76f8b9
.word 0x3e410332
.word 0x3da3c8b6
.word 0x3c76f8b9
.word 0x3e410332
.word 0x3da3c8b6
.word 0x3c76f8b9
.word 0x3e410332
.word 0x3da3c8b6
.word 0x3c76f8b9
.word 0x3f2b9b13
.word 0x3f945c11
.word 0x3f46e6bd
.word 0x3f2b9b13
.word 0x3f945c11
.word 0x3f46e6bd
.word 0x3f2b9b13
.word 0x3f945c11
.word 0x3f46e6bd
.word 0x3f2b9b13
.word 0x3f945c11
.word 0x3f46e6bd
.word 0x3f2b9b13
.word 0x3f945c11
.word 0x3f46e6bd
.word 0x3eef500c
.word 0x3ef2062a
.word 0x3e623f6f
.word 0x3eef500c
.word 0x3ef2062a
.word 0x3e623f6f
.word 0x3eef500c
.word 0x3ef2062a
.word 0x3e623f6f
.word 0x3eef500c
.word 0x3ef2062a
.word 0x3e623f6f
.word 0x3eef500c
.word 0x3ef2062a
.word 0x3e623f6f
.word 0x3f553cbb
.word 0x3e8c2f3a
.word 0x3e69891b
.word 0x3f553cbb
.word 0x3e8c2f3a
.word 0x3e69891b
.word 0x3f553cbb
.word 0x3e8c2f3a
.word 0x3e69891b
.word 0x3f553cbb
.word 0x3e8c2f3a
.word 0x3e69891b
.word 0x3f553cbb
.word 0x3e8c2f3a
.word 0x3e69891b
.word 0x3f3d278d
.word 0x3f5b6b16
.word 0x3f221ff6
.word 0x3f3d278d
.word 0x3f5b6b16
.word 0x3f221ff6
.word 0x3f3d278d
.word 0x3f5b6b16
.word 0x3f221ff6
.word 0x3f3d278d
.word 0x3f5b6b16
.word 0x3f221ff6
.word 0x3f3d278d
.word 0x3f5b6b16
.word 0x3f221ff6
.word 0x3e0bf485
.word 0x400e429b
.word 0x3e9b8c18
.word 0x3e0bf485
.word 0x400e429b
.word 0x3e9b8c18
.word 0x3e0bf485
.word 0x400e429b
.word 0x3e9b8c18
.word 0x3e0bf485
.word 0x400e429b
.word 0x3e9b8c18
.word 0x3e0bf485
.word 0x400e429b
.word 0x3e9b8c18
.word 0x3ef19ba3
.word 0x3d3a9bd7
.word 0x3cb01e29
.word 0x3ef19ba3
.word 0x3d3a9bd7
.word 0x3cb01e29
.word 0x3ef19ba3
.word 0x3d3a9bd7
.word 0x3cb01e29
.word 0x3ef19ba3
.word 0x3d3a9bd7
.word 0x3cb01e29
.word 0x3ef19ba3
.word 0x3d3a9bd7
.word 0x3cb01e29
.word 0x3ee9e54d
.word 0x40084edd
.word 0x3f7913be
.word 0x3ee9e54d
.word 0x40084edd
.word 0x3f7913be
.word 0x3ee9e54d
.word 0x40084edd
.word 0x3f7913be
.word 0x3ee9e54d
.word 0x40084edd
.word 0x3f7913be
.word 0x3ee9e54d
.word 0x40084edd
.word 0x3f7913be
.word 0x3ef1883f
.word 0x3fe78e5c
.word 0x3f5a7841
.word 0x3ef1883f
.word 0x3fe78e5c
.word 0x3f5a7841
.word 0x3ef1883f
.word 0x3fe78e5c
.word 0x3f5a7841
.word 0x3ef1883f
.word 0x3fe78e5c
.word 0x3f5a7841
.word 0x3ef1883f
.word 0x3fe78e5c
.word 0x3f5a7841
.word 0x3f7a1666
.word 0x3d4d826d
.word 0x3d48c35a
.word 0x3f7a1666
.word 0x3d4d826d
.word 0x3d48c35a
.word 0x3f7a1666
.word 0x3d4d826d
.word 0x3d48c35a
.word 0x3f7a1666
.word 0x3d4d826d
.word 0x3d48c35a
.word 0x3f7a1666
.word 0x3d4d826d
.word 0x3d48c35a
.word 0x3e2f4089
.word 0x409cca89
.word 0x3f56abf5
.word 0x3e2f4089
.word 0x409cca89
.word 0x3f56abf5
.word 0x3e2f4089
.word 0x409cca89
.word 0x3f56abf5
.word 0x3e2f4089
.word 0x409cca89
.word 0x3f56abf5
.word 0x3e2f4089
.word 0x409cca89
.word 0x3f56abf5
.word 0x3f284904
.word 0x3f8f2a13
.word 0x3f3c38e4
.word 0x3f284904
.word 0x3f8f2a13
.word 0x3f3c38e4
.word 0x3f284904
.word 0x3f8f2a13
.word 0x3f3c38e4
.word 0x3f284904
.word 0x3f8f2a13
.word 0x3f3c38e4
.word 0x3f284904
.word 0x3f8f2a13
.word 0x3f3c38e4
.word 0x3f6a0376
.word 0x3f7b6f2f
.word 0x3f65d708
.word 0x3f6a0376
.word 0x3f7b6f2f
.word 0x3f65d708
.word 0x3f6a0376
.word 0x3f7b6f2f
.word 0x3f65d708
.word 0x3f6a0376
.word 0x3f7b6f2f
.word 0x3f65d708
.word 0x3f6a0376
.word 0x3f7b6f2f
.word 0x3f65d708
.word 0x3f08b4ea
.word 0x3f7771f6
.word 0x3f042369
.word 0x3f08b4ea
.word 0x3f7771f6
.word 0x3f042369
.word 0x3f08b4ea
.word 0x3f7771f6
.word 0x3f042369
.word 0x3f08b4ea
.word 0x3f7771f6
.word 0x3f042369
.word 0x3f08b4ea
.word 0x3f7771f6
.word 0x3f042369
.word 0x3e1ab047
.word 0x3d3b0429
.word 0x3be20290
.word 0x3e1ab047
.word 0x3d3b0429
.word 0x3be20290
.word 0x3e1ab047
.word 0x3d3b0429
.word 0x3be20290
.word 0x3e1ab047
.word 0x3d3b0429
.word 0x3be20290
.word 0x3e1ab047
.word 0x3d3b0429
.word 0x3be20290
.word 0x3f22c62f
.word 0x3fb0948c
.word 0x3f608d69
.word 0x3f22c62f
.word 0x3fb0948c
.word 0x3f608d69
.word 0x3f22c62f
.word 0x3fb0948c
.word 0x3f608d69
.word 0x3f22c62f
.word 0x3fb0948c
.word 0x3f608d69
.word 0x3f22c62f
.word 0x3fb0948c
.word 0x3f608d69
.word 0x3f3f6c09
.word 0x3f5f6e28
.word 0x3f27117a
.word 0x3f3f6c09
.word 0x3f5f6e28
.word 0x3f27117a
.word 0x3f3f6c09
.word 0x3f5f6e28
.word 0x3f27117a
.word 0x3f3f6c09
.word 0x3f5f6e28
.word 0x3f27117a
.word 0x3f3f6c09
.word 0x3f5f6e28
.word 0x3f27117a
.word 0x3ec598bf
.word 0x400d32be
.word 0x3f59f898
.word 0x3ec598bf
.word 0x400d32be
.word 0x3f59f898
.word 0x3ec598bf
.word 0x400d32be
.word 0x3f59f898
.word 0x3ec598bf
.word 0x400d32be
.word 0x3f59f898
.word 0x3ec598bf
.word 0x400d32be
.word 0x3f59f898
.word 0x3f7978c6
.word 0x3e040d12
.word 0x3e00af03
.word 0x3f7978c6
.word 0x3e040d12
.word 0x3e00af03
.word 0x3f7978c6
.word 0x3e040d12
.word 0x3e00af03
.word 0x3f7978c6
.word 0x3e040d12
.word 0x3e00af03
.word 0x3f7978c6
.word 0x3e040d12
.word 0x3e00af03
.word 0x3f66066e
.word 0x3f355008
.word 0x3f22ea75
.word 0x3f66066e
.word 0x3f355008
.word 0x3f22ea75
.word 0x3f66066e
.word 0x3f355008
.word 0x3f22ea75
.word 0x3f66066e
.word 0x3f355008
.word 0x3f22ea75
.word 0x3f66066e
.word 0x3f355008
.word 0x3f22ea75
.word 0x3f7ff0b6
.word 0x3f5953ae
.word 0x3f5946b3
.word 0x3f7ff0b6
.word 0x3f5953ae
.word 0x3f5946b3
.word 0x3f7ff0b6
.word 0x3f5953ae
.word 0x3f5946b3
.word 0x3f7ff0b6
.word 0x3f5953ae
.word 0x3f5946b3
.word 0x3f7ff0b6
.word 0x3f5953ae
.word 0x3f5946b3
.word 0x3f28f23e
.word 0x3fb7c202
.word 0x3f728a67
.word 0x3f28f23e
.word 0x3fb7c202
.word 0x3f728a67
.word 0x3f28f23e
.word 0x3fb7c202
.word 0x3f728a67
.word 0x3f28f23e
.word 0x3fb7c202
.word 0x3f728a67
.word 0x3f28f23e
.word 0x3fb7c202
.word 0x3f728a67
.word 0x3f4a8e7e
.word 0x3f878413
.word 0x3f56734c
.word 0x3f4a8e7e
.word 0x3f878413
.word 0x3f56734c
.word 0x3f4a8e7e
.word 0x3f878413
.word 0x3f56734c
.word 0x3f4a8e7e
.word 0x3f878413
.word 0x3f56734c
.word 0x3f4a8e7e
.word 0x3f878413
.word 0x3f56734c
.word 0x3f701086
.word 0x3f7e9b98
.word 0x3f6ec24e
.word 0x3f701086
.word 0x3f7e9b98
.word 0x3f6ec24e
.word 0x3f701086
.word 0x3f7e9b98
.word 0x3f6ec24e
.word 0x3f701086
.word 0x3f7e9b98
.word 0x3f6ec24e
.word 0x3f701086
.word 0x3f7e9b98
.word 0x3f6ec24e
.word 0x3f657e97
.word 0x3ed0de96
.word 0x3ebb3e65
.word 0x3f657e97
.word 0x3ed0de96
.word 0x3ebb3e65
.word 0x3f657e97
.word 0x3ed0de96
.word 0x3ebb3e65
.word 0x3f657e97
.word 0x3ed0de96
.word 0x3ebb3e65
.word 0x3f657e97
.word 0x3ed0de96
.word 0x3ebb3e65
.word 0x3f1b8d0e
.word 0x3f7d3827
.word 0x3f19dc85
.word 0x3f1b8d0e
.word 0x3f7d3827
.word 0x3f19dc85
.word 0x3f1b8d0e
.word 0x3f7d3827
.word 0x3f19dc85
.word 0x3f1b8d0e
.word 0x3f7d3827
.word 0x3f19dc85
.word 0x3f1b8d0e
.word 0x3f7d3827
.word 0x3f19dc85
.word 0x3e007f9d
.word 0x3fce2cca
.word 0x3e4efa59
.word 0x3e007f9d
.word 0x3fce2cca
.word 0x3e4efa59
.word 0x3e007f9d
.word 0x3fce2cca
.word 0x3e4efa59
.word 0x3e007f9d
.word 0x3fce2cca
.word 0x3e4efa59
.word 0x3e007f9d
.word 0x3fce2cca
.word 0x3e4efa59
.word 0x3dcdc1a3
.word 0x400c2a3b
.word 0x3e614fad
.word 0x3dcdc1a3
.word 0x400c2a3b
.word 0x3e614fad
.word 0x3dcdc1a3
.word 0x400c2a3b
.word 0x3e614fad
.word 0x3dcdc1a3
.word 0x400c2a3b
.word 0x3e614fad
.word 0x3dcdc1a3
.word 0x400c2a3b
.word 0x3e614fad
.word 0x3ea5c91a
.word 0x403afb27
.word 0x3f722d85
.word 0x3ea5c91a
.word 0x403afb27
.word 0x3f722d85
.word 0x3ea5c91a
.word 0x403afb27
.word 0x3f722d85
.word 0x3ea5c91a
.word 0x403afb27
.word 0x3f722d85
.word 0x3ea5c91a
.word 0x403afb27
.word 0x3f722d85
.word 0x3ef81181
.word 0x3f4a0d7c
.word 0x3ec3cae2
.word 0x3ef81181
.word 0x3f4a0d7c
.word 0x3ec3cae2
.word 0x3ef81181
.word 0x3f4a0d7c
.word 0x3ec3cae2
.word 0x3ef81181
.word 0x3f4a0d7c
.word 0x3ec3cae2
.word 0x3ef81181
.word 0x3f4a0d7c
.word 0x3ec3cae2
.word 0x3d401c63
.word 0x40d32aee
.word 0x3e9e779d
.word 0x3d401c63
.word 0x40d32aee
.word 0x3e9e779d
.word 0x3d401c63
.word 0x40d32aee
.word 0x3e9e779d
.word 0x3d401c63
.word 0x40d32aee
.word 0x3e9e779d
.word 0x3d401c63
.word 0x40d32aee
.word 0x3e9e779d
.word 0x3f217899
.word 0x3f300224
.word 0x3ede0885
.word 0x3f217899
.word 0x3f300224
.word 0x3ede0885
.word 0x3f217899
.word 0x3f300224
.word 0x3ede0885
.word 0x3f217899
.word 0x3f300224
.word 0x3ede0885
.word 0x3f217899
.word 0x3f300224
.word 0x3ede0885
.word 0x3f7ef3b8
.word 0x3f155c72
.word 0x3f14bfec
.word 0x3f7ef3b8
.word 0x3f155c72
.word 0x3f14bfec
.word 0x3f7ef3b8
.word 0x3f155c72
.word 0x3f14bfec
.word 0x3f7ef3b8
.word 0x3f155c72
.word 0x3f14bfec
.word 0x3f7ef3b8
.word 0x3f155c72
.word 0x3f14bfec
.word 0x3ed25e67
.word 0x3fe5ad08
.word 0x3f3cbca3
.word 0x3ed25e67
.word 0x3fe5ad08
.word 0x3f3cbca3
.word 0x3ed25e67
.word 0x3fe5ad08
.word 0x3f3cbca3
.word 0x3ed25e67
.word 0x3fe5ad08
.word 0x3f3cbca3
.word 0x3ed25e67
.word 0x3fe5ad08
.word 0x3f3cbca3
.word 0x3f444416
.word 0x3f2bfa70
.word 0x3f03d97b
.word 0x3f444416
.word 0x3f2bfa70
.word 0x3f03d97b
.word 0x3f444416
.word 0x3f2bfa70
.word 0x3f03d97b
.word 0x3f444416
.word 0x3f2bfa70
.word 0x3f03d97b
.word 0x3f444416
.word 0x3f2bfa70
.word 0x3f03d97b
.word 0x3f52e365
.word 0x3f6eadac
.word 0x3f449e79
.word 0x3f52e365
.word 0x3f6eadac
.word 0x3f449e79
.word 0x3f52e365
.word 0x3f6eadac
.word 0x3f449e79
.word 0x3f52e365
.word 0x3f6eadac
.word 0x3f449e79
.word 0x3f52e365
.word 0x3f6eadac
.word 0x3f449e79
.word 0x3d2d220b
.word 0x41a0b36c
.word 0x3f595d3f
.word 0x3d2d220b
.word 0x41a0b36c
.word 0x3f595d3f
.word 0x3d2d220b
.word 0x41a0b36c
.word 0x3f595d3f
.word 0x3d2d220b
.word 0x41a0b36c
.word 0x3f595d3f
.word 0x3d2d220b
.word 0x41a0b36c
.word 0x3f595d3f
.word 0x3f242792
.word 0x3e38efb7
.word 0x3ded2c4f
.word 0x3f242792
.word 0x3e38efb7
.word 0x3ded2c4f
.word 0x3f242792
.word 0x3e38efb7
.word 0x3ded2c4f
.word 0x3f242792
.word 0x3e38efb7
.word 0x3ded2c4f
.word 0x3f242792
.word 0x3e38efb7
.word 0x3ded2c4f
.word 0x3f38b965
.word 0x3f4f708d
.word 0x3f15af20
.word 0x3f38b965
.word 0x3f4f708d
.word 0x3f15af20
.word 0x3f38b965
.word 0x3f4f708d
.word 0x3f15af20
.word 0x3f38b965
.word 0x3f4f708d
.word 0x3f15af20
.word 0x3f38b965
.word 0x3f4f708d
.word 0x3f15af20
.word 0x3e390eb4
.word 0x3f40ac66
.word 0x3e0b47a7
.word 0x3e390eb4
.word 0x3f40ac66
.word 0x3e0b47a7
.word 0x3e390eb4
.word 0x3f40ac66
.word 0x3e0b47a7
.word 0x3e390eb4
.word 0x3f40ac66
.word 0x3e0b47a7
.word 0x3e390eb4
.word 0x3f40ac66
.word 0x3e0b47a7
.word 0x3ee6afcf
.word 0x3e8484b2
.word 0x3deed475
.word 0x3ee6afcf
.word 0x3e8484b2
.word 0x3deed475
.word 0x3ee6afcf
.word 0x3e8484b2
.word 0x3deed475
.word 0x3ee6afcf
.word 0x3e8484b2
.word 0x3deed475
.word 0x3ee6afcf
.word 0x3e8484b2
.word 0x3deed475
.word 0x3f6b5f06
.word 0x3f195dd2
.word 0x3f0d020d
.word 0x3f6b5f06
.word 0x3f195dd2
.word 0x3f0d020d
.word 0x3f6b5f06
.word 0x3f195dd2
.word 0x3f0d020d
.word 0x3f6b5f06
.word 0x3f195dd2
.word 0x3f0d020d
.word 0x3f6b5f06
.word 0x3f195dd2
.word 0x3f0d020d
.word 0x3f1beab8
.word 0x3e582dd4
.word 0x3e03a9f5
.word 0x3f1beab8
.word 0x3e582dd4
.word 0x3e03a9f5
.word 0x3f1beab8
.word 0x3e582dd4
.word 0x3e03a9f5
.word 0x3f1beab8
.word 0x3e582dd4
.word 0x3e03a9f5
.word 0x3f1beab8
.word 0x3e582dd4
.word 0x3e03a9f5
.word 0x3f5ee38f
.word 0x3f5d3946
.word 0x3f409c50
.word 0x3f5ee38f
.word 0x3f5d3946
.word 0x3f409c50
.word 0x3f5ee38f
.word 0x3f5d3946
.word 0x3f409c50
.word 0x3f5ee38f
.word 0x3f5d3946
.word 0x3f409c50
.word 0x3f5ee38f
.word 0x3f5d3946
.word 0x3f409c50
.word 0x3f70e85c
.word 0x3e7c3294
.word 0x3e6d5454
.word 0x3f70e85c
.word 0x3e7c3294
.word 0x3e6d5454
.word 0x3f70e85c
.word 0x3e7c3294
.word 0x3e6d5454
.word 0x3f70e85c
.word 0x3e7c3294
.word 0x3e6d5454
.word 0x3f70e85c
.word 0x3e7c3294
.word 0x3e6d5454
.word 0x3f54fac8
.word 0x3f87d6dd
.word 0x3f620602
.word 0x3f54fac8
.word 0x3f87d6dd
.word 0x3f620602
.word 0x3f54fac8
.word 0x3f87d6dd
.word 0x3f620602
.word 0x3f54fac8
.word 0x3f87d6dd
.word 0x3f620602
.word 0x3f54fac8
.word 0x3f87d6dd
.word 0x3f620602
.word 0x3f7a3950
.word 0x3f0cfcb1
.word 0x3f09ce56
.word 0x3f7a3950
.word 0x3f0cfcb1
.word 0x3f09ce56
.word 0x3f7a3950
.word 0x3f0cfcb1
.word 0x3f09ce56
.word 0x3f7a3950
.word 0x3f0cfcb1
.word 0x3f09ce56
.word 0x3f7a3950
.word 0x3f0cfcb1
.word 0x3f09ce56
.word 0x3f1d3cc5
.word 0x3f0a1aba
.word 0x3ea9a659
.word 0x3f1d3cc5
.word 0x3f0a1aba
.word 0x3ea9a659
.word 0x3f1d3cc5
.word 0x3f0a1aba
.word 0x3ea9a659
.word 0x3f1d3cc5
.word 0x3f0a1aba
.word 0x3ea9a659
.word 0x3f1d3cc5
.word 0x3f0a1aba
.word 0x3ea9a659
.word 0x3e365959
.word 0x40808ec6
.word 0x3f3724bf
.word 0x3e365959
.word 0x40808ec6
.word 0x3f3724bf
.word 0x3e365959
.word 0x40808ec6
.word 0x3f3724bf
.word 0x3e365959
.word 0x40808ec6
.word 0x3f3724bf
.word 0x3e365959
.word 0x40808ec6
.word 0x3f3724bf
.word 0x3eb4ab86
.word 0x3ca04797
.word 0x3be23b75
.word 0x3eb4ab86
.word 0x3ca04797
.word 0x3be23b75
.word 0x3eb4ab86
.word 0x3ca04797
.word 0x3be23b75
.word 0x3eb4ab86
.word 0x3ca04797
.word 0x3be23b75
.word 0x3eb4ab86
.word 0x3ca04797
.word 0x3be23b75
.word 0x3f7077f7
.word 0x3ea2b51b
.word 0x3e98d609
.word 0x3f7077f7
.word 0x3ea2b51b
.word 0x3e98d609
.word 0x3f7077f7
.word 0x3ea2b51b
.word 0x3e98d609
.word 0x3f7077f7
.word 0x3ea2b51b
.word 0x3e98d609
.word 0x3f7077f7
.word 0x3ea2b51b
.word 0x3e98d609
.word 0x3f06a17d
.word 0x3f237c29
.word 0x3eabf43d
.word 0x3f06a17d
.word 0x3f237c29
.word 0x3eabf43d
.word 0x3f06a17d
.word 0x3f237c29
.word 0x3eabf43d
.word 0x3f06a17d
.word 0x3f237c29
.word 0x3eabf43d
.word 0x3f06a17d
.word 0x3f237c29
.word 0x3eabf43d
.word 0x3e23df7c
.word 0x3eb0fc1f
.word 0x3d629613
.word 0x3e23df7c
.word 0x3eb0fc1f
.word 0x3d629613
.word 0x3e23df7c
.word 0x3eb0fc1f
.word 0x3d629613
.word 0x3e23df7c
.word 0x3eb0fc1f
.word 0x3d629613
.word 0x3e23df7c
.word 0x3eb0fc1f
.word 0x3d629613
.word 0x3ed717f9
.word 0x3fa5afc2
.word 0x3f0b3620
.word 0x3ed717f9
.word 0x3fa5afc2
.word 0x3f0b3620
.word 0x3ed717f9
.word 0x3fa5afc2
.word 0x3f0b3620
.word 0x3ed717f9
.word 0x3fa5afc2
.word 0x3f0b3620
.word 0x3ed717f9
.word 0x3fa5afc2
.word 0x3f0b3620
.word 0x3e9c023e
.word 0x3faa658c
.word 0x3ecfaec0
.word 0x3e9c023e
.word 0x3faa658c
.word 0x3ecfaec0
.word 0x3e9c023e
.word 0x3faa658c
.word 0x3ecfaec0
.word 0x3e9c023e
.word 0x3faa658c
.word 0x3ecfaec0
.word 0x3e9c023e
.word 0x3faa658c
.word 0x3ecfaec0
.word 0x3dff057d
.word 0x40b05ad1
.word 0x3f2fae3e
.word 0x3dff057d
.word 0x40b05ad1
.word 0x3f2fae3e
.word 0x3dff057d
.word 0x40b05ad1
.word 0x3f2fae3e
.word 0x3dff057d
.word 0x40b05ad1
.word 0x3f2fae3e
.word 0x3dff057d
.word 0x40b05ad1
.word 0x3f2fae3e
.word 0x3e711455
.word 0x3fe82403
.word 0x3eda9c58
.word 0x3e711455
.word 0x3fe82403
.word 0x3eda9c58
.word 0x3e711455
.word 0x3fe82403
.word 0x3eda9c58
.word 0x3e711455
.word 0x3fe82403
.word 0x3eda9c58
.word 0x3e711455
.word 0x3fe82403
.word 0x3eda9c58
.word 0x3f75f683
.word 0x3eb0ce37
.word 0x3ea9df9c
.word 0x3f75f683
.word 0x3eb0ce37
.word 0x3ea9df9c
.word 0x3f75f683
.word 0x3eb0ce37
.word 0x3ea9df9c
.word 0x3f75f683
.word 0x3eb0ce37
.word 0x3ea9df9c
.word 0x3f75f683
.word 0x3eb0ce37
.word 0x3ea9df9c
.word 0x3f59178a
.word 0x3f1a45c1
.word 0x3f02d350
.word 0x3f59178a
.word 0x3f1a45c1
.word 0x3f02d350
.word 0x3f59178a
.word 0x3f1a45c1
.word 0x3f02d350
.word 0x3f59178a
.word 0x3f1a45c1
.word 0x3f02d350
.word 0x3f59178a
.word 0x3f1a45c1
.word 0x3f02d350
.word 0x3f14f5e7
.word 0x3ed5b1be
.word 0x3e78b00c
.word 0x3f14f5e7
.word 0x3ed5b1be
.word 0x3e78b00c
.word 0x3f14f5e7
.word 0x3ed5b1be
.word 0x3e78b00c
.word 0x3f14f5e7
.word 0x3ed5b1be
.word 0x3e78b00c
.word 0x3f14f5e7
.word 0x3ed5b1be
.word 0x3e78b00c
.word 0x3ca2685b
.word 0x4231f146
.word 0x3f61c670
.word 0x3ca2685b
.word 0x4231f146
.word 0x3f61c670
.word 0x3ca2685b
.word 0x4231f146
.word 0x3f61c670
.word 0x3ca2685b
.word 0x4231f146
.word 0x3f61c670
.word 0x3ca2685b
.word 0x4231f146
.word 0x3f61c670
.word 0x3e8a8625
.word 0x40287066
.word 0x3f3649b5
.word 0x3e8a8625
.word 0x40287066
.word 0x3f3649b5
.word 0x3e8a8625
.word 0x40287066
.word 0x3f3649b5
.word 0x3e8a8625
.word 0x40287066
.word 0x3f3649b5
.word 0x3e8a8625
.word 0x40287066
.word 0x3f3649b5
.word 0x3ef31971
.word 0x3e86a4f3
.word 0x3dffb7e9
.word 0x3ef31971
.word 0x3e86a4f3
.word 0x3dffb7e9
.word 0x3ef31971
.word 0x3e86a4f3
.word 0x3dffb7e9
.word 0x3ef31971
.word 0x3e86a4f3
.word 0x3dffb7e9
.word 0x3ef31971
.word 0x3e86a4f3
.word 0x3dffb7e9
.word 0x3f4182e4
.word 0x3f1020fe
.word 0x3ed9e522
.word 0x3f4182e4
.word 0x3f1020fe
.word 0x3ed9e522
.word 0x3f4182e4
.word 0x3f1020fe
.word 0x3ed9e522
.word 0x3f4182e4
.word 0x3f1020fe
.word 0x3ed9e522
.word 0x3f4182e4
.word 0x3f1020fe
.word 0x3ed9e522
.word 0x3e528e2f
.word 0x3fbb60b4
.word 0x3e9a1d66
.word 0x3e528e2f
.word 0x3fbb60b4
.word 0x3e9a1d66
.word 0x3e528e2f
.word 0x3fbb60b4
.word 0x3e9a1d66
.word 0x3e528e2f
.word 0x3fbb60b4
.word 0x3e9a1d66
.word 0x3e528e2f
.word 0x3fbb60b4
.word 0x3e9a1d66
.word 0x3f0bfc1b
.word 0x3fa3e98e
.word 0x3f334278
.word 0x3f0bfc1b
.word 0x3fa3e98e
.word 0x3f334278
.word 0x3f0bfc1b
.word 0x3fa3e98e
.word 0x3f334278
.word 0x3f0bfc1b
.word 0x3fa3e98e
.word 0x3f334278
.word 0x3f0bfc1b
.word 0x3fa3e98e
.word 0x3f334278
.word 0x3f2f940d
.word 0x3f1ab13b
.word 0x3ed4313c
.word 0x3f2f940d
.word 0x3f1ab13b
.word 0x3ed4313c
.word 0x3f2f940d
.word 0x3f1ab13b
.word 0x3ed4313c
.word 0x3f2f940d
.word 0x3f1ab13b
.word 0x3ed4313c
.word 0x3f2f940d
.word 0x3f1ab13b
.word 0x3ed4313c
.word 0x3ea3a29d
.word 0x3fe53fe7
.word 0x3f12894f
.word 0x3ea3a29d
.word 0x3fe53fe7
.word 0x3f12894f
.word 0x3ea3a29d
.word 0x3fe53fe7
.word 0x3f12894f
.word 0x3ea3a29d
.word 0x3fe53fe7
.word 0x3f12894f
.word 0x3ea3a29d
.word 0x3fe53fe7
.word 0x3f12894f
.word 0x3f70bdfa
.word 0x3f582867
.word 0x3f4b464a
.word 0x3f70bdfa
.word 0x3f582867
.word 0x3f4b464a
.word 0x3f70bdfa
.word 0x3f582867
.word 0x3f4b464a
.word 0x3f70bdfa
.word 0x3f582867
.word 0x3f4b464a
.word 0x3f70bdfa
.word 0x3f582867
.word 0x3f4b464a
.word 0x3ee78e09
.word 0x4004a0a1
.word 0x3f6fed0f
.word 0x3ee78e09
.word 0x4004a0a1
.word 0x3f6fed0f
.word 0x3ee78e09
.word 0x4004a0a1
.word 0x3f6fed0f
.word 0x3ee78e09
.word 0x4004a0a1
.word 0x3f6fed0f
.word 0x3ee78e09
.word 0x4004a0a1
.word 0x3f6fed0f
.word 0x3eb8e055
.word 0x3fde79e0
.word 0x3f20aa8d
.word 0x3eb8e055
.word 0x3fde79e0
.word 0x3f20aa8d
.word 0x3eb8e055
.word 0x3fde79e0
.word 0x3f20aa8d
.word 0x3eb8e055
.word 0x3fde79e0
.word 0x3f20aa8d
.word 0x3eb8e055
.word 0x3fde79e0
.word 0x3f20aa8d
.word 0x3f51bbea
.word 0x3f02bcfa
.word 0x3ed63880
.word 0x3f51bbea
.word 0x3f02bcfa
.word 0x3ed63880
.word 0x3f51bbea
.word 0x3f02bcfa
.word 0x3ed63880
.word 0x3f51bbea
.word 0x3f02bcfa
.word 0x3ed63880
.word 0x3f51bbea
.word 0x3f02bcfa
.word 0x3ed63880
.word 0x3f310755
.word 0x3e8823d8
.word 0x3e3c495f
.word 0x3f310755
.word 0x3e8823d8
.word 0x3e3c495f
.word 0x3f310755
.word 0x3e8823d8
.word 0x3e3c495f
.word 0x3f310755
.word 0x3e8823d8
.word 0x3e3c495f
.word 0x3f310755
.word 0x3e8823d8
.word 0x3e3c495f
.word 0x3f5b1219
.word 0x3f83f54f
.word 0x3f61d85e
.word 0x3f5b1219
.word 0x3f83f54f
.word 0x3f61d85e
.word 0x3f5b1219
.word 0x3f83f54f
.word 0x3f61d85e
.word 0x3f5b1219
.word 0x3f83f54f
.word 0x3f61d85e
.word 0x3f5b1219
.word 0x3f83f54f
.word 0x3f61d85e
.word 0x3e10eda4
.word 0x40a09e30
.word 0x3f35dc2a
.word 0x3e10eda4
.word 0x40a09e30
.word 0x3f35dc2a
.word 0x3e10eda4
.word 0x40a09e30
.word 0x3f35dc2a
.word 0x3e10eda4
.word 0x40a09e30
.word 0x3f35dc2a
.word 0x3e10eda4
.word 0x40a09e30
.word 0x3f35dc2a
.word 0x3cc284a7
.word 0x42209c2d
.word 0x3f741328
.word 0x3cc284a7
.word 0x42209c2d
.word 0x3f741328
.word 0x3cc284a7
.word 0x42209c2d
.word 0x3f741328
.word 0x3cc284a7
.word 0x42209c2d
.word 0x3f741328
.word 0x3cc284a7
.word 0x42209c2d
.word 0x3f741328
.word 0x3ed885f6
.word 0x3fb69bf5
.word 0x3f1a7325
.word 0x3ed885f6
.word 0x3fb69bf5
.word 0x3f1a7325
.word 0x3ed885f6
.word 0x3fb69bf5
.word 0x3f1a7325
.word 0x3ed885f6
.word 0x3fb69bf5
.word 0x3f1a7325
.word 0x3ed885f6
.word 0x3fb69bf5
.word 0x3f1a7325
.word 0x3ebec112
.word 0x3e0fb8d5
.word 0x3d562f25
.word 0x3ebec112
.word 0x3e0fb8d5
.word 0x3d562f25
.word 0x3ebec112
.word 0x3e0fb8d5
.word 0x3d562f25
.word 0x3ebec112
.word 0x3e0fb8d5
.word 0x3d562f25
.word 0x3ebec112
.word 0x3e0fb8d5
.word 0x3d562f25
.word 0x3f604e83
.word 0x3f62f285
.word 0x3f46d9cf
.word 0x3f604e83
.word 0x3f62f285
.word 0x3f46d9cf
.word 0x3f604e83
.word 0x3f62f285
.word 0x3f46d9cf
.word 0x3f604e83
.word 0x3f62f285
.word 0x3f46d9cf
.word 0x3f604e83
.word 0x3f62f285
.word 0x3f46d9cf
.word 0x3f1352b5
.word 0x3e9a0c4e
.word 0x3e314dad
.word 0x3f1352b5
.word 0x3e9a0c4e
.word 0x3e314dad
.word 0x3f1352b5
.word 0x3e9a0c4e
.word 0x3e314dad
.word 0x3f1352b5
.word 0x3e9a0c4e
.word 0x3e314dad
.word 0x3f1352b5
.word 0x3e9a0c4e
.word 0x3e314dad
.word 0x3f6e1df4
.word 0x3f7a426b
.word 0x3f68c708
.word 0x3f6e1df4
.word 0x3f7a426b
.word 0x3f68c708
.word 0x3f6e1df4
.word 0x3f7a426b
.word 0x3f68c708
.word 0x3f6e1df4
.word 0x3f7a426b
.word 0x3f68c708
.word 0x3f6e1df4
.word 0x3f7a426b
.word 0x3f68c708
.word 0x3f7666af
.word 0x3f16a286
.word 0x3f10fc98
.word 0x3f7666af
.word 0x3f16a286
.word 0x3f10fc98
.word 0x3f7666af
.word 0x3f16a286
.word 0x3f10fc98
.word 0x3f7666af
.word 0x3f16a286
.word 0x3f10fc98
.word 0x3f7666af
.word 0x3f16a286
.word 0x3f10fc98
.word 0x3f7126fb
.word 0x3f05dc36
.word 0x3efc3162
.word 0x3f7126fb
.word 0x3f05dc36
.word 0x3efc3162
.word 0x3f7126fb
.word 0x3f05dc36
.word 0x3efc3162
.word 0x3f7126fb
.word 0x3f05dc36
.word 0x3efc3162
.word 0x3f7126fb
.word 0x3f05dc36
.word 0x3efc3162
.word 0x3eeda0df
.word 0x3faef018
.word 0x3f226236
.word 0x3eeda0df
.word 0x3faef018
.word 0x3f226236
.word 0x3eeda0df
.word 0x3faef018
.word 0x3f226236
.word 0x3eeda0df
.word 0x3faef018
.word 0x3f226236
.word 0x3eeda0df
.word 0x3faef018
.word 0x3f226236
.word 0x3eb2b8b7
.word 0x402a10d2
.word 0x3f6d74d0
.word 0x3eb2b8b7
.word 0x402a10d2
.word 0x3f6d74d0
.word 0x3eb2b8b7
.word 0x402a10d2
.word 0x3f6d74d0
.word 0x3eb2b8b7
.word 0x402a10d2
.word 0x3f6d74d0
.word 0x3eb2b8b7
.word 0x402a10d2
.word 0x3f6d74d0
.word 0x3f2d194b
.word 0x3fa0bf06
.word 0x3f5961f2
.word 0x3f2d194b
.word 0x3fa0bf06
.word 0x3f5961f2
.word 0x3f2d194b
.word 0x3fa0bf06
.word 0x3f5961f2
.word 0x3f2d194b
.word 0x3fa0bf06
.word 0x3f5961f2
.word 0x3f2d194b
.word 0x3fa0bf06
.word 0x3f5961f2
.word 0x3eba380d
.word 0x3f5427f0
.word 0x3e9a5378
.word 0x3eba380d
.word 0x3f5427f0
.word 0x3e9a5378
.word 0x3eba380d
.word 0x3f5427f0
.word 0x3e9a5378
.word 0x3eba380d
.word 0x3f5427f0
.word 0x3e9a5378
.word 0x3f5f3d90
.word 0x3f5ba602
.word 0x3f3f8a6e
.word 0x3f5f3d90
.word 0x3f5ba602
.word 0x3f3f8a6e
.word 0x3f5f3d90
.word 0x3f5ba602
.word 0x3f3f8a6e
RVTEST_DATA_END

RVMODEL_DATA_BEGIN


signature_x15_0:
    .fill 0*(XLEN/32),4,0xdeadbeef


signature_x15_1:
    .fill 508*(XLEN/32),4,0xdeadbeef


signature_x15_2:
    .fill 508*(XLEN/32),4,0xdeadbeef


signature_x15_3:
    .fill 508*(XLEN/32),4,0xdeadbeef


signature_x15_4:
    .fill 508*(XLEN/32),4,0xdeadbeef


signature_x15_5:
    .fill 508*(XLEN/32),4,0xdeadbeef


signature_x15_6:
    .fill 508*(XLEN/32),4,0xdeadbeef


signature_x15_7:
    .fill 328*(XLEN/32),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*(XLEN/32),4,0xdeadbeef

#endif

RVMODEL_DATA_END
