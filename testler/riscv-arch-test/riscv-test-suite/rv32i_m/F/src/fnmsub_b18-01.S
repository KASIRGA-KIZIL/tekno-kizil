
// -----------
// This file was generated by riscv_ctg (https://gitlab.com/incoresemi/riscv-compliance/riscv_ctg)
// version   : 0.5.2
// timestamp : Tue Sep  7 16:08:13 2021 GMT
// usage     : riscv_ctg \
//                  -- cgf $cgf \
//                  -- xlen $xlen \
// -----------
//
// -----------
// Copyright (c) 2021. IIT Madras. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.s instruction of the RISC-V F extension for the fnmsub_b18 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fnmsub_b18)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x16,test_fp)
RVTEST_SIGBASE(x15,signature_x15_1)

inst_0:
// rs1 == rd != rs2 and rs1 == rd != rs3 and rs3 != rs2, rs1==f13, rs2==f17, rs3==f7, rd==f13, fs1 == 0 and fe1 == 0xfc and fm1 == 0x36c1bf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f13; op2:f17; op3:f7; dest:f13; op1val:0x7e36c1bf; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f13, f17, f7, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_1:
// rs3 == rd != rs1 and rs3 == rd != rs2 and rs2 != rs1, rs1==f17, rs2==f7, rs3==f22, rd==f22, fs1 == 0 and fe1 == 0xfd and fm1 == 0x120589 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f17; op2:f7; op3:f22; dest:f22; op1val:0x7e920589; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:12; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f22, f17, f7, f22, 0x0, 0, x16, 12, x17, x15, 8, x18)

inst_2:
// rs1 != rs2 and rs1 != rd and rs1 != rs3 and rs2 != rs3 and rs2 != rd and rs3 != rd, rs1==f6, rs2==f27, rs3==f10, rd==f20, fs1 == 0 and fe1 == 0xfe and fm1 == 0x16436d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f6; op2:f27; op3:f10; dest:f20; op1val:0x7f16436d; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:24; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f20, f6, f27, f10, 0x0, 0, x16, 24, x17, x15, 16, x18)

inst_3:
// rs1 == rs2 != rs3 and rs1 == rs2 != rd and rd != rs3, rs1==f10, rs2==f10, rs3==f1, rd==f28, fs1 == 0 and fe1 == 0xfd and fm1 == 0x681a5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f10; op3:f1; dest:f28; op1val:0x7ee81a5c; op2val:0x7ee81a5c; op3val:0x71bffff8; valaddr_reg:x16; val_offset:36; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f28, f10, f10, f1, 0x0, 0, x16, 36, x17, x15, 24, x18)

inst_4:
// rs1 == rs2 == rs3 == rd, rs1==f15, rs2==f15, rs3==f15, rd==f15, fs1 == 0 and fe1 == 0xfd and fm1 == 0x0f5661 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f15; op2:f15; op3:f15; dest:f15; op1val:0x7e8f5661; op2val:0x7e8f5661; op3val:0x7e8f5661; valaddr_reg:x16; val_offset:48; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f15, f15, f15, f15, 0x0, 0, x16, 48, x17, x15, 32, x18)

inst_5:
// rd == rs2 == rs3 != rs1, rs1==f9, rs2==f18, rs3==f18, rd==f18, fs1 == 0 and fe1 == 0xfc and fm1 == 0x092190 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f9; op2:f18; op3:f18; dest:f18; op1val:0x7e092190; op2val:0x0; op3val:0x0; valaddr_reg:x16; val_offset:60; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f18, f9, f18, f18, 0x0, 0, x16, 60, x17, x15, 40, x18)

inst_6:
// rs1 == rs2 == rd != rs3, rs1==f8, rs2==f8, rs3==f14, rd==f8, fs1 == 0 and fe1 == 0xfa and fm1 == 0x7574e1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f8; op2:f8; op3:f14; dest:f8; op1val:0x7d7574e1; op2val:0x7d7574e1; op3val:0x71bffff8; valaddr_reg:x16; val_offset:72; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f8, f8, f8, f14, 0x0, 0, x16, 72, x17, x15, 48, x18)

inst_7:
// rs1 == rs3 != rs2 and rs1 == rs3 != rd and rd != rs2, rs1==f5, rs2==f28, rs3==f5, rd==f12, fs1 == 0 and fe1 == 0xfd and fm1 == 0x1202eb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f5; op2:f28; op3:f5; dest:f12; op1val:0x7e9202eb; op2val:0x0; op3val:0x7e9202eb; valaddr_reg:x16; val_offset:84; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f12, f5, f28, f5, 0x0, 0, x16, 84, x17, x15, 56, x18)

inst_8:
// rs2 == rs3 != rs1 and rs2 == rs3 != rd and rd != rs1, rs1==f22, rs2==f0, rs3==f0, rd==f11, fs1 == 0 and fe1 == 0xfe and fm1 == 0x097aef and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f22; op2:f0; op3:f0; dest:f11; op1val:0x7f097aef; op2val:0x0; op3val:0x0; valaddr_reg:x16; val_offset:96; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f11, f22, f0, f0, 0x0, 0, x16, 96, x17, x15, 64, x18)

inst_9:
// rs1 == rs2 == rs3 != rd, rs1==f25, rs2==f25, rs3==f25, rd==f31, fs1 == 0 and fe1 == 0xfd and fm1 == 0x55526b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f25; op2:f25; op3:f25; dest:f31; op1val:0x7ed5526b; op2val:0x7ed5526b; op3val:0x7ed5526b; valaddr_reg:x16; val_offset:108; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f31, f25, f25, f25, 0x0, 0, x16, 108, x17, x15, 72, x18)

inst_10:
// rs1 == rd == rs3 != rs2, rs1==f24, rs2==f5, rs3==f24, rd==f24, fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e1674 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f24; op2:f5; op3:f24; dest:f24; op1val:0x7dbe1674; op2val:0x0; op3val:0x7dbe1674; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f24, f24, f5, f24, 0x0, 0, x16, 120, x17, x15, 80, x18)

inst_11:
// rs2 == rd != rs1 and rs2 == rd != rs3 and rs3 != rs1, rs1==f2, rs2==f21, rs3==f9, rd==f21, fs1 == 0 and fe1 == 0xfc and fm1 == 0x7c800c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f2; op2:f21; op3:f9; dest:f21; op1val:0x7e7c800c; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:132; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f21, f2, f21, f9, 0x0, 0, x16, 132, x17, x15, 88, x18)

inst_12:
// rs1==f26, rs2==f23, rs3==f29, rd==f0, fs1 == 0 and fe1 == 0xfc and fm1 == 0x12c03f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f26; op2:f23; op3:f29; dest:f0; op1val:0x7e12c03f; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:144; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f0, f26, f23, f29, 0x0, 0, x16, 144, x17, x15, 96, x18)

inst_13:
// rs1==f30, rs2==f14, rs3==f8, rd==f7, fs1 == 0 and fe1 == 0xfd and fm1 == 0x0a8f7b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f30; op2:f14; op3:f8; dest:f7; op1val:0x7e8a8f7b; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:156; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f7, f30, f14, f8, 0x0, 0, x16, 156, x17, x15, 104, x18)

inst_14:
// rs1==f29, rs2==f11, rs3==f20, rd==f1, fs1 == 0 and fe1 == 0xfd and fm1 == 0x614269 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f29; op2:f11; op3:f20; dest:f1; op1val:0x7ee14269; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:168; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f1, f29, f11, f20, 0x0, 0, x16, 168, x17, x15, 112, x18)

inst_15:
// rs1==f12, rs2==f19, rs3==f21, rd==f2, fs1 == 0 and fe1 == 0xfd and fm1 == 0x786a31 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f12; op2:f19; op3:f21; dest:f2; op1val:0x7ef86a31; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:180; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f2, f12, f19, f21, 0x0, 0, x16, 180, x17, x15, 120, x18)

inst_16:
// rs1==f18, rs2==f20, rs3==f26, rd==f27, fs1 == 0 and fe1 == 0xfd and fm1 == 0x06e52a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f18; op2:f20; op3:f26; dest:f27; op1val:0x7e86e52a; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:192; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f27, f18, f20, f26, 0x0, 0, x16, 192, x17, x15, 128, x18)

inst_17:
// rs1==f19, rs2==f12, rs3==f30, rd==f16, fs1 == 0 and fe1 == 0xfc and fm1 == 0x7198e7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f19; op2:f12; op3:f30; dest:f16; op1val:0x7e7198e7; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:204; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f16, f19, f12, f30, 0x0, 0, x16, 204, x17, x15, 136, x18)

inst_18:
// rs1==f28, rs2==f29, rs3==f19, rd==f6, fs1 == 0 and fe1 == 0xfc and fm1 == 0x729bb9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f28; op2:f29; op3:f19; dest:f6; op1val:0x7e729bb9; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:216; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f6, f28, f29, f19, 0x0, 0, x16, 216, x17, x15, 144, x18)

inst_19:
// rs1==f11, rs2==f30, rs3==f12, rd==f14, fs1 == 0 and fe1 == 0xfd and fm1 == 0x40d067 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f11; op2:f30; op3:f12; dest:f14; op1val:0x7ec0d067; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:228; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f14, f11, f30, f12, 0x0, 0, x16, 228, x17, x15, 152, x18)

inst_20:
// rs1==f21, rs2==f26, rs3==f17, rd==f30, fs1 == 0 and fe1 == 0xfb and fm1 == 0x044ae8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f21; op2:f26; op3:f17; dest:f30; op1val:0x7d844ae8; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f30, f21, f26, f17, 0x0, 0, x16, 240, x17, x15, 160, x18)

inst_21:
// rs1==f31, rs2==f9, rs3==f16, rd==f19, fs1 == 0 and fe1 == 0xfe and fm1 == 0x240ddf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f31; op2:f9; op3:f16; dest:f19; op1val:0x7f240ddf; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:252; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f19, f31, f9, f16, 0x0, 0, x16, 252, x17, x15, 168, x18)

inst_22:
// rs1==f20, rs2==f31, rs3==f27, rd==f17, fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b2415 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f20; op2:f31; op3:f27; dest:f17; op1val:0x7f3b2415; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:264; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f17, f20, f31, f27, 0x0, 0, x16, 264, x17, x15, 176, x18)

inst_23:
// rs1==f1, rs2==f2, rs3==f11, rd==f4, fs1 == 0 and fe1 == 0xfa and fm1 == 0x522d12 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f1; op2:f2; op3:f11; dest:f4; op1val:0x7d522d12; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:276; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f4, f1, f2, f11, 0x0, 0, x16, 276, x17, x15, 184, x18)

inst_24:
// rs1==f27, rs2==f1, rs3==f28, rd==f25, fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f27; op2:f1; op3:f28; dest:f25; op1val:0x7dbf6d07; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:288; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f25, f27, f1, f28, 0x0, 0, x16, 288, x17, x15, 192, x18)

inst_25:
// rs1==f23, rs2==f4, rs3==f2, rd==f5, fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f23; op2:f4; op3:f2; dest:f5; op1val:0x7dc2dcac; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:300; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f5, f23, f4, f2, 0x0, 0, x16, 300, x17, x15, 200, x18)

inst_26:
// rs1==f0, rs2==f24, rs3==f4, rd==f23, fs1 == 0 and fe1 == 0xfa and fm1 == 0x2872e3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f0; op2:f24; op3:f4; dest:f23; op1val:0x7d2872e3; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:312; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f23, f0, f24, f4, 0x0, 0, x16, 312, x17, x15, 208, x18)

inst_27:
// rs1==f7, rs2==f13, rs3==f23, rd==f3, fs1 == 0 and fe1 == 0xf5 and fm1 == 0x31cc28 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f7; op2:f13; op3:f23; dest:f3; op1val:0x7ab1cc28; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:324; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f3, f7, f13, f23, 0x0, 0, x16, 324, x17, x15, 216, x18)

inst_28:
// rs1==f14, rs2==f6, rs3==f3, rd==f9, fs1 == 0 and fe1 == 0xfe and fm1 == 0x151669 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f14; op2:f6; op3:f3; dest:f9; op1val:0x7f151669; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:336; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f9, f14, f6, f3, 0x0, 0, x16, 336, x17, x15, 224, x18)

inst_29:
// rs1==f4, rs2==f16, rs3==f13, rd==f10, fs1 == 0 and fe1 == 0xfd and fm1 == 0x3597f6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f4; op2:f16; op3:f13; dest:f10; op1val:0x7eb597f6; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:348; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f10, f4, f16, f13, 0x0, 0, x16, 348, x17, x15, 232, x18)

inst_30:
// rs1==f16, rs2==f3, rs3==f31, rd==f29, fs1 == 0 and fe1 == 0xfd and fm1 == 0x226d04 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f16; op2:f3; op3:f31; dest:f29; op1val:0x7ea26d04; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f29, f16, f3, f31, 0x0, 0, x16, 360, x17, x15, 240, x18)

inst_31:
// rs1==f3, rs2==f22, rs3==f6, rd==f26, fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a785f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f3; op2:f22; op3:f6; dest:f26; op1val:0x7eca785f; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:372; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f26, f3, f22, f6, 0x0, 0, x16, 372, x17, x15, 248, x18)

inst_32:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e4e462d; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:384; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 384, x17, x15, 256, x18)

inst_33:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x506ed3 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x6bd11e and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3ffffe and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e506ed3; op2val:0xc06bd11e; op3val:0xff3ffffe; valaddr_reg:x16; val_offset:396; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 396, x17, x15, 264, x18)

inst_34:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x196401 and fs2 == 1 and fe2 == 0x83 and fm2 == 0x2037e7 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3fffff and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d196401; op2val:0xc1a037e7; op3val:0xff3fffff; valaddr_reg:x16; val_offset:408; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 408, x17, x15, 272, x18)

inst_35:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x259c47 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x14657a and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3ffffe and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f259c47; op2val:0xbf94657a; op3val:0xff3ffffe; valaddr_reg:x16; val_offset:420; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 420, x17, x15, 280, x18)

inst_36:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x716299 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4b9ff1 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3fffff and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef16299; op2val:0xbfcb9ff1; op3val:0xff3fffff; valaddr_reg:x16; val_offset:432; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 432, x17, x15, 288, x18)

inst_37:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x386f9d and fs2 == 1 and fe2 == 0x86 and fm2 == 0x053fdd and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3ffffe and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7bb86f9d; op2val:0xc3053fdd; op3val:0xff3ffffe; valaddr_reg:x16; val_offset:444; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 444, x17, x15, 296, x18)

inst_38:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e1c9c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1b6f31 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3fffff and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1e1c9c; op2val:0xbf9b6f31; op3val:0xff3fffff; valaddr_reg:x16; val_offset:456; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 456, x17, x15, 304, x18)

inst_39:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ac304 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1ecc83 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3fffff and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1ac304; op2val:0xbf9ecc83; op3val:0xff3fffff; valaddr_reg:x16; val_offset:468; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 468, x17, x15, 312, x18)

inst_40:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x30faaa and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0add22 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3fffff and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f30faaa; op2val:0xbf8add22; op3val:0xff3fffff; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 320, x18)

inst_41:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x180041 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x21aee1 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3fffff and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f180041; op2val:0xbfa1aee1; op3val:0xff3fffff; valaddr_reg:x16; val_offset:492; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 492, x17, x15, 328, x18)

inst_42:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x038f64 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3acde7 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3fffff and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e038f64; op2val:0xc0bacde7; op3val:0xff3fffff; valaddr_reg:x16; val_offset:504; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 504, x17, x15, 336, x18)

inst_43:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1cd3e2 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1cb4ff and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3fffff and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1cd3e2; op2val:0xbf9cb4ff; op3val:0xff3fffff; valaddr_reg:x16; val_offset:516; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 516, x17, x15, 344, x18)

inst_44:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4d4cf5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6f6a2e and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3fffff and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ecd4cf5; op2val:0xbfef6a2e; op3val:0xff3fffff; valaddr_reg:x16; val_offset:528; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 528, x17, x15, 352, x18)

inst_45:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x178d60 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x222970 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3ffffe and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e178d60; op2val:0xc0a22970; op3val:0xff3ffffe; valaddr_reg:x16; val_offset:540; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 540, x17, x15, 360, x18)

inst_46:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x071b70 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x35e667 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3fffff and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e871b70; op2val:0xc035e667; op3val:0xff3fffff; valaddr_reg:x16; val_offset:552; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 552, x17, x15, 368, x18)

inst_47:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1634d7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1634d7; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:564; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 564, x17, x15, 376, x18)

inst_48:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x373e6b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb73e6b; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:576; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 576, x17, x15, 384, x18)

inst_49:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x25708a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f25708a; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:588; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 588, x17, x15, 392, x18)

inst_50:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x41e692 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e41e692; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 400, x18)

inst_51:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x031454 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e831454; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:612; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 612, x17, x15, 408, x18)

inst_52:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b1228 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eeb1228; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:624; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 624, x17, x15, 416, x18)

inst_53:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x344bd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f344bd0; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:636; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 636, x17, x15, 424, x18)

inst_54:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ee152 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e9ee152; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:648; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 648, x17, x15, 432, x18)

inst_55:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x499612 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ec99612; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:660; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 660, x17, x15, 440, x18)

inst_56:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7e8d56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7efe8d56; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:672; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 672, x17, x15, 448, x18)

inst_57:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x665064 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e665064; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:684; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 684, x17, x15, 456, x18)

inst_58:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x03f57f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e03f57f; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:696; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 696, x17, x15, 464, x18)

inst_59:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0f18e6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0f18e6; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:708; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 708, x17, x15, 472, x18)

inst_60:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x218502 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7c218502; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 480, x18)

inst_61:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d8cd3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7edd8cd3; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:732; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 732, x17, x15, 488, x18)

inst_62:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cbcd0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2cbcd0; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:744; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 744, x17, x15, 496, x18)

inst_63:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c2411 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2c2411; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:756; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 756, x17, x15, 504, x18)

inst_64:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31614f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f31614f; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:768; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 768, x17, x15, 512, x18)

inst_65:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x053104 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f053104; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:780; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 780, x17, x15, 520, x18)

inst_66:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d7e33 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2d7e33; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:792; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 792, x17, x15, 528, x18)

inst_67:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0a79d8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d0a79d8; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:804; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 804, x17, x15, 536, x18)

inst_68:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b8e8c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1b8e8c; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:816; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 816, x17, x15, 544, x18)

inst_69:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5c6cb0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e5c6cb0; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:828; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 828, x17, x15, 552, x18)

inst_70:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x620d5f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee20d5f; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 560, x18)

inst_71:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x511a8e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d511a8e; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:852; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 852, x17, x15, 568, x18)

inst_72:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2eb1b3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e2eb1b3; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:864; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 864, x17, x15, 576, x18)

inst_73:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x02f86a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e82f86a; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:876; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 876, x17, x15, 584, x18)

inst_74:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5dfbef and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e5dfbef; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:888; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 888, x17, x15, 592, x18)

inst_75:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x474d3f and fs2 == 1 and fe2 == 0x2b and fm2 == 0x2469fd and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ec74d3f; op2val:0x95a469fd; op3val:0x71bffff8; valaddr_reg:x16; val_offset:900; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 900, x17, x15, 600, x18)

inst_76:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7e964a and fs2 == 1 and fe2 == 0x2b and fm2 == 0x00b5db and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7efe964a; op2val:0x9580b5db; op3val:0x71bffff8; valaddr_reg:x16; val_offset:912; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 912, x17, x15, 608, x18)

inst_77:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20a569 and fs2 == 1 and fe2 == 0x2a and fm2 == 0x4bf9ec and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f20a569; op2val:0x954bf9ec; op3val:0x71bffff8; valaddr_reg:x16; val_offset:924; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 924, x17, x15, 616, x18)

inst_78:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0f23f2 and fs2 == 1 and fe2 == 0x2a and fm2 == 0x64ec0d and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0f23f2; op2val:0x9564ec0d; op3val:0x71bffff8; valaddr_reg:x16; val_offset:936; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 936, x17, x15, 624, x18)

inst_79:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2a90d0 and fs2 == 1 and fe2 == 0x2c and fm2 == 0x401d1a and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e2a90d0; op2val:0x96401d1a; op3val:0x71bffff8; valaddr_reg:x16; val_offset:948; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 948, x17, x15, 632, x18)

inst_80:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x320e71 and fs2 == 1 and fe2 == 0x2a and fm2 == 0x380814 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f320e71; op2val:0x95380814; op3val:0x71bffff8; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 640, x18)

inst_81:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x366e51 and fs2 == 1 and fe2 == 0x2a and fm2 == 0x339e60 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f366e51; op2val:0x95339e60; op3val:0x71bffff8; valaddr_reg:x16; val_offset:972; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 972, x17, x15, 648, x18)

inst_82:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x26ca91 and fs2 == 0 and fe2 == 0x2b and fm2 == 0x44760b and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ea6ca91; op2val:0x15c4760b; op3val:0x71bffff8; valaddr_reg:x16; val_offset:984; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 984, x17, x15, 656, x18)

inst_83:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d7cc7 and fs2 == 0 and fe2 == 0x2a and fm2 == 0x2cee00 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3d7cc7; op2val:0x152cee00; op3val:0x71bffff8; valaddr_reg:x16; val_offset:996; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 996, x17, x15, 664, x18)

inst_84:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28f4b0 and fs2 == 0 and fe2 == 0x2a and fm2 == 0x41f1b6 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f28f4b0; op2val:0x1541f1b6; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1008; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1008, x17, x15, 672, x18)

inst_85:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x351b7f and fs2 == 0 and fe2 == 0x2a and fm2 == 0x34ee69 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f351b7f; op2val:0x1534ee69; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1020; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1020, x17, x15, 680, x18)

inst_86:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x6522f2 and fs2 == 0 and fe2 == 0x32 and fm2 == 0x0f01a6 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7b6522f2; op2val:0x190f01a6; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1032; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1032, x17, x15, 688, x18)

inst_87:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6f9cda and fs2 == 0 and fe2 == 0x2d and fm2 == 0x08c107 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7def9cda; op2val:0x1688c107; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1044; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1044, x17, x15, 696, x18)

inst_88:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x30c1f0 and fs2 == 0 and fe2 == 0x2a and fm2 == 0x396244 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f30c1f0; op2val:0x15396244; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1056; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1056, x17, x15, 704, x18)

inst_89:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d41a9 and fs2 == 0 and fe2 == 0x2b and fm2 == 0x505f7a and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e9d41a9; op2val:0x15d05f7a; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1068; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1068, x17, x15, 712, x18)

inst_90:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x21312f and fs2 == 0 and fe2 == 0x2b and fm2 == 0x4b490d and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ea1312f; op2val:0x15cb490d; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 720, x18)

inst_91:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x20177e and fs2 == 0 and fe2 == 0x2b and fm2 == 0x4caebe and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ea0177e; op2val:0x15ccaebe; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1092; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1092, x17, x15, 728, x18)

inst_92:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x050002 and fs2 == 0 and fe2 == 0x2b and fm2 == 0x766039 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e850002; op2val:0x15f66039; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1104; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1104, x17, x15, 736, x18)

inst_93:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x504312 and fs2 == 0 and fe2 == 0x2c and fm2 == 0x1d571c and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e504312; op2val:0x161d571c; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1116; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1116, x17, x15, 744, x18)

inst_94:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x186be6 and fs2 == 0 and fe2 == 0x2a and fm2 == 0x56fb9a and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f186be6; op2val:0x1556fb9a; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1128; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1128, x17, x15, 752, x18)

inst_95:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x60364e and fs2 == 0 and fe2 == 0x2c and fm2 == 0x1225b6 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e60364e; op2val:0x161225b6; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1140; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1140, x17, x15, 760, x18)

inst_96:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4733d7 and fs2 == 1 and fe2 == 0x2d and fm2 == 0x247ef4 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7dc733d7; op2val:0x96a47ef4; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1152; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1152, x17, x15, 768, x18)

inst_97:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0496ad and fs2 == 1 and fe2 == 0x2b and fm2 == 0x7723f2 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8496ad; op2val:0x95f723f2; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1164; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1164, x17, x15, 776, x18)

inst_98:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1acd2f and fs2 == 1 and fe2 == 0x2a and fm2 == 0x53ad73 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1acd2f; op2val:0x9553ad73; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1176; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1176, x17, x15, 784, x18)

inst_99:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7680ff and fs2 == 1 and fe2 == 0x2b and fm2 == 0x04ee53 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef680ff; op2val:0x9584ee53; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1188; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1188, x17, x15, 792, x18)

inst_100:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1afcca and fs2 == 1 and fe2 == 0x2a and fm2 == 0x536c6d and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1afcca; op2val:0x95536c6d; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 800, x18)

inst_101:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x55f571 and fs2 == 1 and fe2 == 0x2c and fm2 == 0x1926a8 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e55f571; op2val:0x961926a8; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1212; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1212, x17, x15, 808, x18)

inst_102:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0cfe89 and fs2 == 1 and fe2 == 0x2c and fm2 == 0x686816 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e0cfe89; op2val:0x96686816; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1224; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1224, x17, x15, 816, x18)

inst_103:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20fcca and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f20fcca; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1236; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1236, x17, x15, 824, x18)

inst_104:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ae6b6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1ae6b6; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1248; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1248, x17, x15, 832, x18)

inst_105:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x12898d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e12898d; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1260; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1260, x17, x15, 840, x18)

inst_106:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4b6083 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ecb6083; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1272; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1272, x17, x15, 848, x18)

inst_107:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x39bb69 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7db9bb69; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1284; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1284, x17, x15, 856, x18)

inst_108:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2cd245 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e2cd245; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1296; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1296, x17, x15, 864, x18)

inst_109:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2d3925 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ead3925; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1308; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1308, x17, x15, 872, x18)

inst_110:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x29e684 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f29e684; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 880, x18)

inst_111:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79b070 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef9b070; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1332; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1332, x17, x15, 888, x18)

inst_112:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x014bf6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e814bf6; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1344; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1344, x17, x15, 896, x18)

inst_113:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0202a2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e0202a2; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1356; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1356, x17, x15, 904, x18)

inst_114:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x244343 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f244343; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1368; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1368, x17, x15, 912, x18)

inst_115:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x285b7e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ea85b7e; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1380; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1380, x17, x15, 920, x18)

inst_116:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x200a1a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f200a1a; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1392; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1392, x17, x15, 928, x18)

inst_117:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x002951 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e802951; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1404; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1404, x17, x15, 936, x18)

inst_118:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x774515 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e774515; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1416; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1416, x17, x15, 944, x18)

inst_119:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1c6dc8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d9c6dc8; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1428; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1428, x17, x15, 952, x18)

inst_120:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x06075b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f06075b; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 960, x18)

inst_121:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x272145 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ea72145; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1452; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1452, x17, x15, 968, x18)

inst_122:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0feb39 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e0feb39; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1464; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1464, x17, x15, 976, x18)

inst_123:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x375161 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e375161; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1476; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1476, x17, x15, 984, x18)

inst_124:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a54c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1a54c0; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1488; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1488, x17, x15, 992, x18)

inst_125:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2ae8b7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e2ae8b7; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1500; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1500, x17, x15, 1000, x18)

inst_126:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6e17c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e6e17c2; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1512; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1512, x17, x15, 1008, x18)

inst_127:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d273b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0d273b; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1524; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1524, x17, x15, 1016, x18)

inst_128:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5a9856 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eda9856; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1536; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1536, x17, x15, 1024, x18)

inst_129:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x256764 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ca56764; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1548; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1548, x17, x15, 1032, x18)

inst_130:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1446c8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1446c8; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1040, x18)

inst_131:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10d45e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e90d45e; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1572; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1572, x17, x15, 1048, x18)

inst_132:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x66b5d2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e66b5d2; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1584; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1584, x17, x15, 1056, x18)

inst_133:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x64b7f9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee4b7f9; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1596; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1596, x17, x15, 1064, x18)

inst_134:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0dc14f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8dc14f; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1608; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1608, x17, x15, 1072, x18)

inst_135:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x70218d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e70218d; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1620; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1620, x17, x15, 1080, x18)

inst_136:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0bc23d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8bc23d; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1632; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1632, x17, x15, 1088, x18)

inst_137:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x75c78c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e75c78c; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1644; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1644, x17, x15, 1096, x18)

inst_138:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x639603 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee39603; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1656; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1656, x17, x15, 1104, x18)

inst_139:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2f394e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eaf394e; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1668; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1668, x17, x15, 1112, x18)

inst_140:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40dca5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e40dca5; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1120, x18)

inst_141:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x38f464 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f38f464; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1692; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1692, x17, x15, 1128, x18)

inst_142:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x01cbbf and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f01cbbf; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1704; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1704, x17, x15, 1136, x18)

inst_143:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x3a1788 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d3a1788; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1716; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1716, x17, x15, 1144, x18)

inst_144:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x084a01 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7c884a01; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1728; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1728, x17, x15, 1152, x18)

inst_145:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0db3dc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0db3dc; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1740; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1740, x17, x15, 1160, x18)

inst_146:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x07bc04 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f07bc04; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1752; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1752, x17, x15, 1168, x18)

inst_147:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0763b9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8763b9; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1764; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1764, x17, x15, 1176, x18)

inst_148:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x026c09 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f026c09; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1776; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1776, x17, x15, 1184, x18)

inst_149:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x330a47 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb30a47; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1788; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1788, x17, x15, 1192, x18)

inst_150:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x70e623 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef0e623; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1200, x18)

inst_151:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x38913b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d38913b; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1812; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1812, x17, x15, 1208, x18)

inst_152:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x72c1df and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef2c1df; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1824; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1824, x17, x15, 1216, x18)

inst_153:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6c7765 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eec7765; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1836; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1836, x17, x15, 1224, x18)

inst_154:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x7668ef and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7c7668ef; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1848; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1848, x17, x15, 1232, x18)

inst_155:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5eb4e5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7edeb4e5; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1860; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1860, x17, x15, 1240, x18)

inst_156:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f70d6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e9f70d6; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1872; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1872, x17, x15, 1248, x18)

inst_157:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x0cca22 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7c0cca22; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1884; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1884, x17, x15, 1256, x18)

inst_158:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5298e8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ed298e8; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1896; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1896, x17, x15, 1264, x18)

inst_159:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x481ce5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ec81ce5; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1908; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1908, x17, x15, 1272, x18)

inst_160:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3bbcb1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3bbcb1; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1280, x18)

inst_161:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x673c15 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e673c15; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1932; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1932, x17, x15, 1288, x18)

inst_162:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x36810f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e36810f; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1944; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1944, x17, x15, 1296, x18)

inst_163:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a4cbc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0a4cbc; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1956; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1956, x17, x15, 1304, x18)

inst_164:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2593da and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ea593da; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1968; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1968, x17, x15, 1312, x18)

inst_165:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42b2c3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ec2b2c3; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1980; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1980, x17, x15, 1320, x18)

inst_166:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x34996a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f34996a; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1992; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1992, x17, x15, 1328, x18)

inst_167:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6e20e0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eee20e0; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:2004; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 2004, x17, x15, 1336, x18)

inst_168:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56c198 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ed6c198; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:2016; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 2016, x17, x15, 1344, x18)

inst_169:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x64bacc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee4bacc; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:2028; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 2028, x17, x15, 1352, x18)
addi x16,x16,2040

inst_170:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7740d5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef740d5; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 1360, x18)

inst_171:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x47b540 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ec7b540; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:12; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 12, x17, x15, 1368, x18)

inst_172:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30cc1b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb0cc1b; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:24; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 24, x17, x15, 1376, x18)

inst_173:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x111231 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e911231; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:36; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 36, x17, x15, 1384, x18)

inst_174:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c289c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2c289c; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:48; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 48, x17, x15, 1392, x18)

inst_175:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x381006 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f381006; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:60; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 60, x17, x15, 1400, x18)

inst_176:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x710596 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e710596; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:72; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 72, x17, x15, 1408, x18)

inst_177:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x269d12 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f269d12; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:84; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 84, x17, x15, 1416, x18)

inst_178:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x025ce3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d025ce3; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:96; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 96, x17, x15, 1424, x18)

inst_179:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6febf0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7defebf0; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:108; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 108, x17, x15, 1432, x18)

inst_180:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6b5b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eea6b5b; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 1440, x18)

inst_181:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ca5c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e9ca5c0; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:132; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 132, x17, x15, 1448, x18)

inst_182:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x179770 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e179770; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:144; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 144, x17, x15, 1456, x18)

inst_183:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x40c8f3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7cc0c8f3; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:156; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 156, x17, x15, 1464, x18)

inst_184:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x664f14 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee64f14; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:168; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 168, x17, x15, 1472, x18)

inst_185:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x6c7439 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d6c7439; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:180; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 180, x17, x15, 1480, x18)

inst_186:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6dd39b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e6dd39b; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:192; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 192, x17, x15, 1488, x18)

inst_187:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3fb6b5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3fb6b5; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:204; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 204, x17, x15, 1496, x18)

inst_188:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4214d7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ec214d7; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:216; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 216, x17, x15, 1504, x18)

inst_189:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3c4834 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3c4834; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:228; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 228, x17, x15, 1512, x18)

inst_190:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x292241 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f292241; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 1520, x18)

inst_191:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7e2c3a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e7e2c3a; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:252; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 252, x17, x15, 1528, x18)

inst_192:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x09f0c8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f09f0c8; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:264; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 264, x17, x15, 1536, x18)

inst_193:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0a0e71 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d0a0e71; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:276; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 276, x17, x15, 1544, x18)

inst_194:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6bfb00 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eebfb00; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:288; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 288, x17, x15, 1552, x18)

inst_195:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x07c07a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d07c07a; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:300; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 300, x17, x15, 1560, x18)

inst_196:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27923e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f27923e; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:312; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 312, x17, x15, 1568, x18)

inst_197:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x139ba8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f139ba8; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:324; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 324, x17, x15, 1576, x18)

inst_198:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x61b55e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e61b55e; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:336; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 336, x17, x15, 1584, x18)

inst_199:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x67935a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7de7935a; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:348; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 348, x17, x15, 1592, x18)

inst_200:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d9e09 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e9d9e09; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 1600, x18)

inst_201:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19b6dc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f19b6dc; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:372; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 372, x17, x15, 1608, x18)

inst_202:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x07f6ba and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d87f6ba; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:384; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 384, x17, x15, 1616, x18)

inst_203:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3e0af1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3e0af1; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:396; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 396, x17, x15, 1624, x18)

inst_204:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23f4fa and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f23f4fa; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:408; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 408, x17, x15, 1632, x18)

inst_205:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x42f36d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d42f36d; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:420; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 420, x17, x15, 1640, x18)

inst_206:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5ad8ea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e5ad8ea; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:432; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 432, x17, x15, 1648, x18)

inst_207:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5c3c85 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7edc3c85; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:444; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 444, x17, x15, 1656, x18)

inst_208:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fab30 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1fab30; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:456; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 456, x17, x15, 1664, x18)

inst_209:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2224db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e2224db; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:468; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 468, x17, x15, 1672, x18)

inst_210:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x090d88 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f090d88; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1680, x18)

inst_211:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5a898a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eda898a; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:492; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 492, x17, x15, 1688, x18)

inst_212:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2db39d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2db39d; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:504; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 504, x17, x15, 1696, x18)

inst_213:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3935a3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3935a3; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:516; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 516, x17, x15, 1704, x18)

inst_214:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x253e0d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f253e0d; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:528; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 528, x17, x15, 1712, x18)

inst_215:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7a8560 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7dfa8560; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:540; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 540, x17, x15, 1720, x18)

inst_216:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x00e26f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f00e26f; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:552; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 552, x17, x15, 1728, x18)

inst_217:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3e451e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3e451e; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:564; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 564, x17, x15, 1736, x18)

inst_218:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x246dcc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f246dcc; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:576; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 576, x17, x15, 1744, x18)

inst_219:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x325b88 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f325b88; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:588; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 588, x17, x15, 1752, x18)

inst_220:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02f0c8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f02f0c8; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1760, x18)

inst_221:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d9b52 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2d9b52; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:612; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 612, x17, x15, 1768, x18)

inst_222:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x605a49 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee05a49; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:624; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 624, x17, x15, 1776, x18)

inst_223:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x60ab1f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee0ab1f; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:636; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 636, x17, x15, 1784, x18)

inst_224:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x06bfe7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e86bfe7; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:648; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 648, x17, x15, 1792, x18)

inst_225:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x142c31 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e942c31; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:660; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 660, x17, x15, 1800, x18)

inst_226:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42c803 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ec2c803; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:672; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 672, x17, x15, 1808, x18)

inst_227:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x673028 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e673028; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:684; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 684, x17, x15, 1816, x18)

inst_228:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x70a207 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef0a207; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:696; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 696, x17, x15, 1824, x18)

inst_229:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x277c74 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ea77c74; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:708; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 708, x17, x15, 1832, x18)

inst_230:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x395f47 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f395f47; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1840, x18)

inst_231:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x26a55d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e26a55d; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:732; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 732, x17, x15, 1848, x18)

inst_232:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x50d921 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7dd0d921; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:744; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 744, x17, x15, 1856, x18)

inst_233:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x15b097 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d95b097; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:756; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 756, x17, x15, 1864, x18)

inst_234:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28be0d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f28be0d; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:768; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 768, x17, x15, 1872, x18)

inst_235:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33a1f4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f33a1f4; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:780; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 780, x17, x15, 1880, x18)

inst_236:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2abc06 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eaabc06; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:792; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 792, x17, x15, 1888, x18)

inst_237:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19c644 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f19c644; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:804; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 804, x17, x15, 1896, x18)

inst_238:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x17aa7b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e97aa7b; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:816; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 816, x17, x15, 1904, x18)

inst_239:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x30d9d7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f30d9d7; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:828; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 828, x17, x15, 1912, x18)

inst_240:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x091ce4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f091ce4; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1920, x18)

inst_241:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28bb67 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f28bb67; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:852; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 852, x17, x15, 1928, x18)

inst_242:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a03a1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0a03a1; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:864; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 864, x17, x15, 1936, x18)

inst_243:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x35891f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb5891f; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:876; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 876, x17, x15, 1944, x18)

inst_244:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x262e64 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f262e64; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:888; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 888, x17, x15, 1952, x18)

inst_245:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x3e8943 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7cbe8943; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:900; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 900, x17, x15, 1960, x18)

inst_246:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x675fa1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e675fa1; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:912; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 912, x17, x15, 1968, x18)

inst_247:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x62fb73 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee2fb73; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:924; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 924, x17, x15, 1976, x18)

inst_248:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x119488 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f119488; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:936; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 936, x17, x15, 1984, x18)

inst_249:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x44b45e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d44b45e; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:948; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 948, x17, x15, 1992, x18)

inst_250:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x00e937 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f00e937; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 2000, x18)

inst_251:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0e5202 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0e5202; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:972; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 972, x17, x15, 2008, x18)

inst_252:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x48e6cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ec8e6cd; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:984; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 984, x17, x15, 2016, x18)

inst_253:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26aa29 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f26aa29; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:996; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 996, x17, x15, 2024, x18)
RVTEST_SIGBASE(x15,signature_x15_2)

inst_254:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x73c956 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef3c956; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1008; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1008, x17, x15, 0, x18)

inst_255:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6758c9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7de758c9; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1020; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1020, x17, x15, 8, x18)

inst_256:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7566f3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef566f3; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1032; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1032, x17, x15, 16, x18)

inst_257:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x36eb6c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb6eb6c; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1044; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1044, x17, x15, 24, x18)

inst_258:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2099c0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2099c0; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1056; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1056, x17, x15, 32, x18)

inst_259:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3494c8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb494c8; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1068; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1068, x17, x15, 40, x18)

inst_260:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3f29ee and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3f29ee; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 48, x18)

inst_261:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x33f756 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e33f756; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1092; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1092, x17, x15, 56, x18)

inst_262:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x472f12 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e472f12; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1104; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1104, x17, x15, 64, x18)

inst_263:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20cb47 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f20cb47; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1116; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1116, x17, x15, 72, x18)

inst_264:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x21ceeb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7c21ceeb; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1128; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1128, x17, x15, 80, x18)

inst_265:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x494dfd and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d494dfd; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1140; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1140, x17, x15, 88, x18)

inst_266:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7046ce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef046ce; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1152; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1152, x17, x15, 96, x18)

inst_267:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x67e7c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee7e7c0; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1164; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1164, x17, x15, 104, x18)

inst_268:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0e1012 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8e1012; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1176; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1176, x17, x15, 112, x18)

inst_269:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x50fbe8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ed0fbe8; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1188; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1188, x17, x15, 120, x18)

inst_270:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x681a5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee81a5c; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 128, x18)

inst_271:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0f5661 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8f5661; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1212; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1212, x17, x15, 136, x18)

inst_272:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x092190 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e092190; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1224; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1224, x17, x15, 144, x18)

inst_273:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x7574e1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d7574e1; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1236; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1236, x17, x15, 152, x18)

inst_274:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1202eb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e9202eb; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1248; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1248, x17, x15, 160, x18)

inst_275:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x097aef and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f097aef; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1260; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1260, x17, x15, 168, x18)

inst_276:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x55526b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ed5526b; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1272; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1272, x17, x15, 176, x18)

inst_277:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e1674 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7dbe1674; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1284; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1284, x17, x15, 184, x18)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
test_fp:
.word 0x7e36c1bf
.word 0x80000000
.word 0x71bffff8
.word 0x7e920589
.word 0x0
.word 0x71bffff8
.word 0x7f16436d
.word 0x0
.word 0x71bffff8
.word 0x7ee81a5c
.word 0x7ee81a5c
.word 0x71bffff8
.word 0x7e8f5661
.word 0x7e8f5661
.word 0x7e8f5661
.word 0x7e092190
.word 0x0
.word 0x0
.word 0x7d7574e1
.word 0x7d7574e1
.word 0x71bffff8
.word 0x7e9202eb
.word 0x0
.word 0x7e9202eb
.word 0x7f097aef
.word 0x0
.word 0x0
.word 0x7ed5526b
.word 0x7ed5526b
.word 0x7ed5526b
.word 0x7dbe1674
.word 0x0
.word 0x7dbe1674
.word 0x7e7c800c
.word 0x0
.word 0x71bffff8
.word 0x7e12c03f
.word 0x0
.word 0x71bffff8
.word 0x7e8a8f7b
.word 0x0
.word 0x71bffff8
.word 0x7ee14269
.word 0x0
.word 0x71bffff8
.word 0x7ef86a31
.word 0x0
.word 0x71bffff8
.word 0x7e86e52a
.word 0x0
.word 0x71bffff8
.word 0x7e7198e7
.word 0x80000000
.word 0x71bffff8
.word 0x7e729bb9
.word 0x80000000
.word 0x71bffff8
.word 0x7ec0d067
.word 0x80000000
.word 0x71bffff8
.word 0x7d844ae8
.word 0x80000000
.word 0x71bffff8
.word 0x7f240ddf
.word 0x80000000
.word 0x71bffff8
.word 0x7f3b2415
.word 0x80000000
.word 0x71bffff8
.word 0x7d522d12
.word 0x80000000
.word 0x71bffff8
.word 0x7dbf6d07
.word 0x80000000
.word 0x71bffff8
.word 0x7dc2dcac
.word 0x80000000
.word 0x71bffff8
.word 0x7d2872e3
.word 0x80000000
.word 0x71bffff8
.word 0x7ab1cc28
.word 0x80000000
.word 0x71bffff8
.word 0x7f151669
.word 0x80000000
.word 0x71bffff8
.word 0x7eb597f6
.word 0x80000000
.word 0x71bffff8
.word 0x7ea26d04
.word 0x80000000
.word 0x71bffff8
.word 0x7eca785f
.word 0x80000000
.word 0x71bffff8
.word 0x7e4e462d
.word 0x80000000
.word 0x71bffff8
.word 0x7e506ed3
.word 0xc06bd11e
.word 0xff3ffffe
.word 0x7d196401
.word 0xc1a037e7
.word 0xff3fffff
.word 0x7f259c47
.word 0xbf94657a
.word 0xff3ffffe
.word 0x7ef16299
.word 0xbfcb9ff1
.word 0xff3fffff
.word 0x7bb86f9d
.word 0xc3053fdd
.word 0xff3ffffe
.word 0x7f1e1c9c
.word 0xbf9b6f31
.word 0xff3fffff
.word 0x7f1ac304
.word 0xbf9ecc83
.word 0xff3fffff
.word 0x7f30faaa
.word 0xbf8add22
.word 0xff3fffff
.word 0x7f180041
.word 0xbfa1aee1
.word 0xff3fffff
.word 0x7e038f64
.word 0xc0bacde7
.word 0xff3fffff
.word 0x7f1cd3e2
.word 0xbf9cb4ff
.word 0xff3fffff
.word 0x7ecd4cf5
.word 0xbfef6a2e
.word 0xff3fffff
.word 0x7e178d60
.word 0xc0a22970
.word 0xff3ffffe
.word 0x7e871b70
.word 0xc035e667
.word 0xff3fffff
.word 0x7f1634d7
.word 0x80000000
.word 0x71bffff8
.word 0x7eb73e6b
.word 0x80000000
.word 0x71bffff8
.word 0x7f25708a
.word 0x80000000
.word 0x71bffff8
.word 0x7e41e692
.word 0x80000000
.word 0x71bffff8
.word 0x7e831454
.word 0x80000000
.word 0x71bffff8
.word 0x7eeb1228
.word 0x80000000
.word 0x71bffff8
.word 0x7f344bd0
.word 0x80000000
.word 0x71bffff8
.word 0x7e9ee152
.word 0x0
.word 0x71bffff8
.word 0x7ec99612
.word 0x0
.word 0x71bffff8
.word 0x7efe8d56
.word 0x0
.word 0x71bffff8
.word 0x7e665064
.word 0x0
.word 0x71bffff8
.word 0x7e03f57f
.word 0x0
.word 0x71bffff8
.word 0x7f0f18e6
.word 0x0
.word 0x71bffff8
.word 0x7c218502
.word 0x0
.word 0x71bffff8
.word 0x7edd8cd3
.word 0x0
.word 0x71bffff8
.word 0x7f2cbcd0
.word 0x0
.word 0x71bffff8
.word 0x7f2c2411
.word 0x0
.word 0x71bffff8
.word 0x7f31614f
.word 0x0
.word 0x71bffff8
.word 0x7f053104
.word 0x0
.word 0x71bffff8
.word 0x7f2d7e33
.word 0x0
.word 0x71bffff8
.word 0x7d0a79d8
.word 0x0
.word 0x71bffff8
.word 0x7f1b8e8c
.word 0x80000000
.word 0x71bffff8
.word 0x7e5c6cb0
.word 0x80000000
.word 0x71bffff8
.word 0x7ee20d5f
.word 0x80000000
.word 0x71bffff8
.word 0x7d511a8e
.word 0x80000000
.word 0x71bffff8
.word 0x7e2eb1b3
.word 0x80000000
.word 0x71bffff8
.word 0x7e82f86a
.word 0x80000000
.word 0x71bffff8
.word 0x7e5dfbef
.word 0x80000000
.word 0x71bffff8
.word 0x7ec74d3f
.word 0x95a469fd
.word 0x71bffff8
.word 0x7efe964a
.word 0x9580b5db
.word 0x71bffff8
.word 0x7f20a569
.word 0x954bf9ec
.word 0x71bffff8
.word 0x7f0f23f2
.word 0x9564ec0d
.word 0x71bffff8
.word 0x7e2a90d0
.word 0x96401d1a
.word 0x71bffff8
.word 0x7f320e71
.word 0x95380814
.word 0x71bffff8
.word 0x7f366e51
.word 0x95339e60
.word 0x71bffff8
.word 0x7ea6ca91
.word 0x15c4760b
.word 0x71bffff8
.word 0x7f3d7cc7
.word 0x152cee00
.word 0x71bffff8
.word 0x7f28f4b0
.word 0x1541f1b6
.word 0x71bffff8
.word 0x7f351b7f
.word 0x1534ee69
.word 0x71bffff8
.word 0x7b6522f2
.word 0x190f01a6
.word 0x71bffff8
.word 0x7def9cda
.word 0x1688c107
.word 0x71bffff8
.word 0x7f30c1f0
.word 0x15396244
.word 0x71bffff8
.word 0x7e9d41a9
.word 0x15d05f7a
.word 0x71bffff8
.word 0x7ea1312f
.word 0x15cb490d
.word 0x71bffff8
.word 0x7ea0177e
.word 0x15ccaebe
.word 0x71bffff8
.word 0x7e850002
.word 0x15f66039
.word 0x71bffff8
.word 0x7e504312
.word 0x161d571c
.word 0x71bffff8
.word 0x7f186be6
.word 0x1556fb9a
.word 0x71bffff8
.word 0x7e60364e
.word 0x161225b6
.word 0x71bffff8
.word 0x7dc733d7
.word 0x96a47ef4
.word 0x71bffff8
.word 0x7e8496ad
.word 0x95f723f2
.word 0x71bffff8
.word 0x7f1acd2f
.word 0x9553ad73
.word 0x71bffff8
.word 0x7ef680ff
.word 0x9584ee53
.word 0x71bffff8
.word 0x7f1afcca
.word 0x95536c6d
.word 0x71bffff8
.word 0x7e55f571
.word 0x961926a8
.word 0x71bffff8
.word 0x7e0cfe89
.word 0x96686816
.word 0x71bffff8
.word 0x7f20fcca
.word 0x80000000
.word 0x71bffff8
.word 0x7f1ae6b6
.word 0x80000000
.word 0x71bffff8
.word 0x7e12898d
.word 0x80000000
.word 0x71bffff8
.word 0x7ecb6083
.word 0x80000000
.word 0x71bffff8
.word 0x7db9bb69
.word 0x80000000
.word 0x71bffff8
.word 0x7e2cd245
.word 0x80000000
.word 0x71bffff8
.word 0x7ead3925
.word 0x80000000
.word 0x71bffff8
.word 0x7f29e684
.word 0x0
.word 0x71bffff8
.word 0x7ef9b070
.word 0x0
.word 0x71bffff8
.word 0x7e814bf6
.word 0x0
.word 0x71bffff8
.word 0x7e0202a2
.word 0x0
.word 0x71bffff8
.word 0x7f244343
.word 0x0
.word 0x71bffff8
.word 0x7ea85b7e
.word 0x0
.word 0x71bffff8
.word 0x7f200a1a
.word 0x0
.word 0x71bffff8
.word 0x7e802951
.word 0x0
.word 0x71bffff8
.word 0x7e774515
.word 0x0
.word 0x71bffff8
.word 0x7d9c6dc8
.word 0x0
.word 0x71bffff8
.word 0x7f06075b
.word 0x0
.word 0x71bffff8
.word 0x7ea72145
.word 0x0
.word 0x71bffff8
.word 0x7e0feb39
.word 0x0
.word 0x71bffff8
.word 0x7e375161
.word 0x0
.word 0x71bffff8
.word 0x7f1a54c0
.word 0x80000000
.word 0x71bffff8
.word 0x7e2ae8b7
.word 0x80000000
.word 0x71bffff8
.word 0x7e6e17c2
.word 0x80000000
.word 0x71bffff8
.word 0x7f0d273b
.word 0x80000000
.word 0x71bffff8
.word 0x7eda9856
.word 0x80000000
.word 0x71bffff8
.word 0x7ca56764
.word 0x80000000
.word 0x71bffff8
.word 0x7f1446c8
.word 0x80000000
.word 0x71bffff8
.word 0x7e90d45e
.word 0x80000000
.word 0x71bffff8
.word 0x7e66b5d2
.word 0x80000000
.word 0x71bffff8
.word 0x7ee4b7f9
.word 0x80000000
.word 0x71bffff8
.word 0x7e8dc14f
.word 0x80000000
.word 0x71bffff8
.word 0x7e70218d
.word 0x80000000
.word 0x71bffff8
.word 0x7e8bc23d
.word 0x80000000
.word 0x71bffff8
.word 0x7e75c78c
.word 0x80000000
.word 0x71bffff8
.word 0x7ee39603
.word 0x0
.word 0x71bffff8
.word 0x7eaf394e
.word 0x0
.word 0x71bffff8
.word 0x7e40dca5
.word 0x0
.word 0x71bffff8
.word 0x7f38f464
.word 0x0
.word 0x71bffff8
.word 0x7f01cbbf
.word 0x0
.word 0x71bffff8
.word 0x7d3a1788
.word 0x0
.word 0x71bffff8
.word 0x7c884a01
.word 0x0
.word 0x71bffff8
.word 0x7f0db3dc
.word 0x0
.word 0x71bffff8
.word 0x7f07bc04
.word 0x0
.word 0x71bffff8
.word 0x7e8763b9
.word 0x0
.word 0x71bffff8
.word 0x7f026c09
.word 0x0
.word 0x71bffff8
.word 0x7eb30a47
.word 0x0
.word 0x71bffff8
.word 0x7ef0e623
.word 0x0
.word 0x71bffff8
.word 0x7d38913b
.word 0x0
.word 0x71bffff8
.word 0x7ef2c1df
.word 0x80000000
.word 0x71bffff8
.word 0x7eec7765
.word 0x80000000
.word 0x71bffff8
.word 0x7c7668ef
.word 0x80000000
.word 0x71bffff8
.word 0x7edeb4e5
.word 0x80000000
.word 0x71bffff8
.word 0x7e9f70d6
.word 0x80000000
.word 0x71bffff8
.word 0x7c0cca22
.word 0x80000000
.word 0x71bffff8
.word 0x7ed298e8
.word 0x80000000
.word 0x71bffff8
.word 0x7ec81ce5
.word 0x80000000
.word 0x71bffff8
.word 0x7f3bbcb1
.word 0x80000000
.word 0x71bffff8
.word 0x7e673c15
.word 0x80000000
.word 0x71bffff8
.word 0x7e36810f
.word 0x80000000
.word 0x71bffff8
.word 0x7f0a4cbc
.word 0x80000000
.word 0x71bffff8
.word 0x7ea593da
.word 0x80000000
.word 0x71bffff8
.word 0x7ec2b2c3
.word 0x80000000
.word 0x71bffff8
.word 0x7f34996a
.word 0x0
.word 0x71bffff8
.word 0x7eee20e0
.word 0x0
.word 0x71bffff8
.word 0x7ed6c198
.word 0x0
.word 0x71bffff8
.word 0x7ee4bacc
.word 0x0
.word 0x71bffff8
.word 0x7ef740d5
.word 0x0
.word 0x71bffff8
.word 0x7ec7b540
.word 0x0
.word 0x71bffff8
.word 0x7eb0cc1b
.word 0x0
.word 0x71bffff8
.word 0x7e911231
.word 0x0
.word 0x71bffff8
.word 0x7f2c289c
.word 0x0
.word 0x71bffff8
.word 0x7f381006
.word 0x0
.word 0x71bffff8
.word 0x7e710596
.word 0x0
.word 0x71bffff8
.word 0x7f269d12
.word 0x0
.word 0x71bffff8
.word 0x7d025ce3
.word 0x0
.word 0x71bffff8
.word 0x7defebf0
.word 0x0
.word 0x71bffff8
.word 0x7eea6b5b
.word 0x80000000
.word 0x71bffff8
.word 0x7e9ca5c0
.word 0x80000000
.word 0x71bffff8
.word 0x7e179770
.word 0x80000000
.word 0x71bffff8
.word 0x7cc0c8f3
.word 0x80000000
.word 0x71bffff8
.word 0x7ee64f14
.word 0x80000000
.word 0x71bffff8
.word 0x7d6c7439
.word 0x80000000
.word 0x71bffff8
.word 0x7e6dd39b
.word 0x80000000
.word 0x71bffff8
.word 0x7f3fb6b5
.word 0x80000000
.word 0x71bffff8
.word 0x7ec214d7
.word 0x80000000
.word 0x71bffff8
.word 0x7f3c4834
.word 0x80000000
.word 0x71bffff8
.word 0x7f292241
.word 0x80000000
.word 0x71bffff8
.word 0x7e7e2c3a
.word 0x80000000
.word 0x71bffff8
.word 0x7f09f0c8
.word 0x80000000
.word 0x71bffff8
.word 0x7d0a0e71
.word 0x80000000
.word 0x71bffff8
.word 0x7eebfb00
.word 0x0
.word 0x71bffff8
.word 0x7d07c07a
.word 0x0
.word 0x71bffff8
.word 0x7f27923e
.word 0x0
.word 0x71bffff8
.word 0x7f139ba8
.word 0x0
.word 0x71bffff8
.word 0x7e61b55e
.word 0x0
.word 0x71bffff8
.word 0x7de7935a
.word 0x0
.word 0x71bffff8
.word 0x7e9d9e09
.word 0x0
.word 0x71bffff8
.word 0x7f19b6dc
.word 0x0
.word 0x71bffff8
.word 0x7d87f6ba
.word 0x0
.word 0x71bffff8
.word 0x7f3e0af1
.word 0x0
.word 0x71bffff8
.word 0x7f23f4fa
.word 0x0
.word 0x71bffff8
.word 0x7d42f36d
.word 0x0
.word 0x71bffff8
.word 0x7e5ad8ea
.word 0x0
.word 0x71bffff8
.word 0x7edc3c85
.word 0x0
.word 0x71bffff8
.word 0x7f1fab30
.word 0x80000000
.word 0x71bffff8
.word 0x7e2224db
.word 0x80000000
.word 0x71bffff8
.word 0x7f090d88
.word 0x80000000
.word 0x71bffff8
.word 0x7eda898a
.word 0x80000000
.word 0x71bffff8
.word 0x7f2db39d
.word 0x80000000
.word 0x71bffff8
.word 0x7f3935a3
.word 0x80000000
.word 0x71bffff8
.word 0x7f253e0d
.word 0x80000000
.word 0x71bffff8
.word 0x7dfa8560
.word 0x80000000
.word 0x71bffff8
.word 0x7f00e26f
.word 0x80000000
.word 0x71bffff8
.word 0x7f3e451e
.word 0x80000000
.word 0x71bffff8
.word 0x7f246dcc
.word 0x80000000
.word 0x71bffff8
.word 0x7f325b88
.word 0x80000000
.word 0x71bffff8
.word 0x7f02f0c8
.word 0x80000000
.word 0x71bffff8
.word 0x7f2d9b52
.word 0x80000000
.word 0x71bffff8
.word 0x7ee05a49
.word 0x0
.word 0x71bffff8
.word 0x7ee0ab1f
.word 0x0
.word 0x71bffff8
.word 0x7e86bfe7
.word 0x0
.word 0x71bffff8
.word 0x7e942c31
.word 0x0
.word 0x71bffff8
.word 0x7ec2c803
.word 0x0
.word 0x71bffff8
.word 0x7e673028
.word 0x0
.word 0x71bffff8
.word 0x7ef0a207
.word 0x0
.word 0x71bffff8
.word 0x7ea77c74
.word 0x0
.word 0x71bffff8
.word 0x7f395f47
.word 0x0
.word 0x71bffff8
.word 0x7e26a55d
.word 0x0
.word 0x71bffff8
.word 0x7dd0d921
.word 0x0
.word 0x71bffff8
.word 0x7d95b097
.word 0x0
.word 0x71bffff8
.word 0x7f28be0d
.word 0x0
.word 0x71bffff8
.word 0x7f33a1f4
.word 0x0
.word 0x71bffff8
.word 0x7eaabc06
.word 0x80000000
.word 0x71bffff8
.word 0x7f19c644
.word 0x80000000
.word 0x71bffff8
.word 0x7e97aa7b
.word 0x80000000
.word 0x71bffff8
.word 0x7f30d9d7
.word 0x80000000
.word 0x71bffff8
.word 0x7f091ce4
.word 0x80000000
.word 0x71bffff8
.word 0x7f28bb67
.word 0x80000000
.word 0x71bffff8
.word 0x7f0a03a1
.word 0x80000000
.word 0x71bffff8
.word 0x7eb5891f
.word 0x80000000
.word 0x71bffff8
.word 0x7f262e64
.word 0x80000000
.word 0x71bffff8
.word 0x7cbe8943
.word 0x80000000
.word 0x71bffff8
.word 0x7e675fa1
.word 0x80000000
.word 0x71bffff8
.word 0x7ee2fb73
.word 0x80000000
.word 0x71bffff8
.word 0x7f119488
.word 0x80000000
.word 0x71bffff8
.word 0x7d44b45e
.word 0x80000000
.word 0x71bffff8
.word 0x7f00e937
.word 0x0
.word 0x71bffff8
.word 0x7f0e5202
.word 0x0
.word 0x71bffff8
.word 0x7ec8e6cd
.word 0x0
.word 0x71bffff8
.word 0x7f26aa29
.word 0x0
.word 0x71bffff8
.word 0x7ef3c956
.word 0x0
.word 0x71bffff8
.word 0x7de758c9
.word 0x0
.word 0x71bffff8
.word 0x7ef566f3
.word 0x0
.word 0x71bffff8
.word 0x7eb6eb6c
.word 0x0
.word 0x71bffff8
.word 0x7f2099c0
.word 0x0
.word 0x71bffff8
.word 0x7eb494c8
.word 0x0
.word 0x71bffff8
.word 0x7f3f29ee
.word 0x0
.word 0x71bffff8
.word 0x7e33f756
.word 0x0
.word 0x71bffff8
.word 0x7e472f12
.word 0x0
.word 0x71bffff8
.word 0x7f20cb47
.word 0x0
.word 0x71bffff8
.word 0x7c21ceeb
.word 0x80000000
.word 0x71bffff8
.word 0x7d494dfd
.word 0x80000000
.word 0x71bffff8
.word 0x7ef046ce
.word 0x80000000
.word 0x71bffff8
.word 0x7ee7e7c0
.word 0x80000000
.word 0x71bffff8
.word 0x7e8e1012
.word 0x80000000
.word 0x71bffff8
.word 0x7ed0fbe8
.word 0x80000000
.word 0x71bffff8
.word 0x7ee81a5c
.word 0x0
.word 0x71bffff8
.word 0x7e8f5661
.word 0x0
.word 0x71bffff8
.word 0x7e092190
.word 0x0
.word 0x71bffff8
.word 0x7d7574e1
.word 0x0
.word 0x71bffff8
.word 0x7e9202eb
.word 0x0
.word 0x71bffff8
.word 0x7f097aef
.word 0x0
.word 0x71bffff8
.word 0x7ed5526b
.word 0x0
.word 0x71bffff8
.word 0x7dbe1674
.word 0x0
.word 0x71bffff8
RVTEST_DATA_END

RVMODEL_DATA_BEGIN


signature_x15_0:
    .fill 0*(XLEN/32),4,0xdeadbeef


signature_x15_1:
    .fill 508*(XLEN/32),4,0xdeadbeef


signature_x15_2:
    .fill 48*(XLEN/32),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*(XLEN/32),4,0xdeadbeef

#endif

RVMODEL_DATA_END
