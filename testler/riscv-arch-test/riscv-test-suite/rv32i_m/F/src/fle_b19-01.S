
// -----------
// This file was generated by riscv_ctg (https://gitlab.com/incoresemi/riscv-compliance/riscv_ctg)
// version   : 0.5.2
// timestamp : Tue Sep  7 16:47:14 2021 GMT
// usage     : riscv_ctg \
//                  -- cgf $cgf \
//                  -- xlen $xlen \
// -----------
//
// -----------
// Copyright (c) 2021. IIT Madras. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fle.s instruction of the RISC-V F extension for the fle_b19 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fle_b19)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x16,test_fp)
RVTEST_SIGBASE(x15,signature_x15_1)

inst_0:// rs1 == rs2, rs1==f8, rs2==f8, rd==x11, fs1 == 0 and fe1 == 0xfc and fm1 == 0x36c1bf and fs2 == 0 and fe2 == 0xfc and fm2 == 0x36c1bf and rm_val == 0  
// opcode: fle.s ; op1:f8; op2:f8; dest:x11; op1val:0x7e36c1bf; op2val:0x7e36c1bf; valaddr_reg:x16; val_offset:0; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x11, f8, f8, 0, x16, 0, x17, x15, 0, x18)

inst_1:// rs1 != rs2, rs1==f14, rs2==f6, rd==x28, fs1 == 0 and fe1 == 0x00 and fm1 == 0x0007f0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x0007f0 and rm_val == 0  
// opcode: fle.s ; op1:f14; op2:f6; dest:x28; op1val:0x7f0; op2val:0x7f0; valaddr_reg:x16; val_offset:8; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x28, f14, f6, 0, x16, 8, x17, x15, 8, x18)

inst_2:// rs1==f15, rs2==f22, rd==x29, fs1 == 0 and fe1 == 0x00 and fm1 == 0x0007f0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x108f54 and rm_val == 0  
// opcode: fle.s ; op1:f15; op2:f22; dest:x29; op1val:0x7f0; op2val:0x80108f54; valaddr_reg:x16; val_offset:16; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x29, f15, f22, 0, x16, 16, x17, x15, 16, x18)

inst_3:// rs1==f18, rs2==f28, rd==x3, fs1 == 1 and fe1 == 0x7f and fm1 == 0x42a917 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x0007f0 and rm_val == 0  
// opcode: fle.s ; op1:f18; op2:f28; dest:x3; op1val:0xbfc2a917; op2val:0x7f0; valaddr_reg:x16; val_offset:24; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x3, f18, f28, 0, x16, 24, x17, x15, 24, x18)

inst_4:// rs1==f7, rs2==f10, rd==x20, fs1 == 0 and fe1 == 0x00 and fm1 == 0x0007f0 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x42a917 and rm_val == 0  
// opcode: fle.s ; op1:f7; op2:f10; dest:x20; op1val:0x7f0; op2val:0xbfc2a917; valaddr_reg:x16; val_offset:32; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x20, f7, f10, 0, x16, 32, x17, x15, 32, x18)
RVTEST_VALBASEMOV(x20, x16)
RVTEST_SIGBASE(x19,signature_x19_0)

inst_5:// rs1==f12, rs2==f17, rd==x15, fs1 == 0 and fe1 == 0x00 and fm1 == 0x0007f0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x365c4c and rm_val == 0  
// opcode: fle.s ; op1:f12; op2:f17; dest:x15; op1val:0x7f0; op2val:0x80365c4c; valaddr_reg:x20; val_offset:40; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x15, f12, f17, 0, x20, 40, x21, x19, 0, x18)
RVTEST_VALBASEMOV(x16, x20)
RVTEST_SIGBASE(x15,signature_x15_2)

inst_6:// rs1==f20, rs2==f9, rd==x4, fs1 == 1 and fe1 == 0x81 and fm1 == 0x1fc053 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x0007f0 and rm_val == 0  
// opcode: fle.s ; op1:f20; op2:f9; dest:x4; op1val:0xc09fc053; op2val:0x7f0; valaddr_reg:x16; val_offset:48; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x4, f20, f9, 0, x16, 48, x17, x15, 0, x18)

inst_7:// rs1==f23, rs2==f2, rd==x24, fs1 == 0 and fe1 == 0x00 and fm1 == 0x0007f0 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x1fc053 and rm_val == 0  
// opcode: fle.s ; op1:f23; op2:f2; dest:x24; op1val:0x7f0; op2val:0xc09fc053; valaddr_reg:x16; val_offset:56; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x24, f23, f2, 0, x16, 56, x17, x15, 8, x18)

inst_8:// rs1==f2, rs2==f5, rd==x7, fs1 == 0 and fe1 == 0x00 and fm1 == 0x0007f0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x21e733 and rm_val == 0  
// opcode: fle.s ; op1:f2; op2:f5; dest:x7; op1val:0x7f0; op2val:0x8021e733; valaddr_reg:x16; val_offset:64; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x7, f2, f5, 0, x16, 64, x17, x15, 16, x18)

inst_9:// rs1==f21, rs2==f14, rd==x14, fs1 == 1 and fe1 == 0x80 and fm1 == 0x4743c4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x0007f0 and rm_val == 0  
// opcode: fle.s ; op1:f21; op2:f14; dest:x14; op1val:0xc04743c4; op2val:0x7f0; valaddr_reg:x16; val_offset:72; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x14, f21, f14, 0, x16, 72, x17, x15, 24, x18)

inst_10:// rs1==f16, rs2==f30, rd==x21, fs1 == 0 and fe1 == 0x00 and fm1 == 0x0007f0 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4743c4 and rm_val == 0  
// opcode: fle.s ; op1:f16; op2:f30; dest:x21; op1val:0x7f0; op2val:0xc04743c4; valaddr_reg:x16; val_offset:80; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x21, f16, f30, 0, x16, 80, x17, x15, 32, x18)
RVTEST_VALBASEMOV(x20, x16)
RVTEST_SIGBASE(x19,signature_x19_1)

inst_11:// rs1==f28, rs2==f24, rd==x17, fs1 == 0 and fe1 == 0x00 and fm1 == 0x0007f0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0a66e8 and rm_val == 0  
// opcode: fle.s ; op1:f28; op2:f24; dest:x17; op1val:0x7f0; op2val:0x800a66e8; valaddr_reg:x20; val_offset:88; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x17, f28, f24, 0, x20, 88, x21, x19, 0, x18)

inst_12:// rs1==f9, rs2==f0, rd==x16, fs1 == 1 and fe1 == 0x82 and fm1 == 0x18d7ea and fs2 == 0 and fe2 == 0x00 and fm2 == 0x0007f0 and rm_val == 0  
// opcode: fle.s ; op1:f9; op2:f0; dest:x16; op1val:0xc118d7ea; op2val:0x7f0; valaddr_reg:x20; val_offset:96; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x16, f9, f0, 0, x20, 96, x21, x19, 8, x18)
RVTEST_VALBASEMOV(x16, x20)
RVTEST_SIGBASE(x15,signature_x15_3)

inst_13:// rs1==f6, rs2==f20, rd==x26, fs1 == 0 and fe1 == 0x00 and fm1 == 0x0007f0 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x18d7ea and rm_val == 0  
// opcode: fle.s ; op1:f6; op2:f20; dest:x26; op1val:0x7f0; op2val:0xc118d7ea; valaddr_reg:x16; val_offset:104; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x26, f6, f20, 0, x16, 104, x17, x15, 0, x18)

inst_14:// rs1==f0, rs2==f19, rd==x0, fs1 == 0 and fe1 == 0x00 and fm1 == 0x0007f0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x19595f and rm_val == 0  
// opcode: fle.s ; op1:f0; op2:f19; dest:x0; op1val:0x7f0; op2val:0x8019595f; valaddr_reg:x16; val_offset:112; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x0, f0, f19, 0, x16, 112, x17, x15, 8, x18)

inst_15:// rs1==f5, rs2==f4, rd==x19, fs1 == 1 and fe1 == 0x80 and fm1 == 0x14fd1d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x0007f0 and rm_val == 0  
// opcode: fle.s ; op1:f5; op2:f4; dest:x19; op1val:0xc014fd1d; op2val:0x7f0; valaddr_reg:x16; val_offset:120; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x19, f5, f4, 0, x16, 120, x17, x15, 16, x18)

inst_16:// rs1==f19, rs2==f15, rd==x13, fs1 == 0 and fe1 == 0x00 and fm1 == 0x0007f0 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x14fd1d and rm_val == 0  
// opcode: fle.s ; op1:f19; op2:f15; dest:x13; op1val:0x7f0; op2val:0xc014fd1d; valaddr_reg:x16; val_offset:128; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x13, f19, f15, 0, x16, 128, x17, x15, 24, x18)

inst_17:// rs1==f4, rs2==f21, rd==x5, fs1 == 0 and fe1 == 0x00 and fm1 == 0x0007f0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x217bcd and rm_val == 0  
// opcode: fle.s ; op1:f4; op2:f21; dest:x5; op1val:0x7f0; op2val:0x217bcd; valaddr_reg:x16; val_offset:136; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x5, f4, f21, 0, x16, 136, x17, x15, 32, x18)

inst_18:// rs1==f11, rs2==f23, rd==x23, fs1 == 0 and fe1 == 0x80 and fm1 == 0x44cc84 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x0007f0 and rm_val == 0  
// opcode: fle.s ; op1:f11; op2:f23; dest:x23; op1val:0x4044cc84; op2val:0x7f0; valaddr_reg:x16; val_offset:144; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x23, f11, f23, 0, x16, 144, x17, x15, 40, x18)

inst_19:// rs1==f3, rs2==f16, rd==x10, fs1 == 0 and fe1 == 0x00 and fm1 == 0x0007f0 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x44cc84 and rm_val == 0  
// opcode: fle.s ; op1:f3; op2:f16; dest:x10; op1val:0x7f0; op2val:0x4044cc84; valaddr_reg:x16; val_offset:152; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x10, f3, f16, 0, x16, 152, x17, x15, 48, x18)

inst_20:// rs1==f10, rs2==f27, rd==x31, fs1 == 0 and fe1 == 0x00 and fm1 == 0x0007f0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x28e67d and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f27; dest:x31; op1val:0x7f0; op2val:0x28e67d; valaddr_reg:x16; val_offset:160; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x31, f10, f27, 0, x16, 160, x17, x15, 56, x18)

inst_21:// rs1==f13, rs2==f25, rd==x8, fs1 == 0 and fe1 == 0x80 and fm1 == 0x706405 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x0007f0 and rm_val == 0  
// opcode: fle.s ; op1:f13; op2:f25; dest:x8; op1val:0x40706405; op2val:0x7f0; valaddr_reg:x16; val_offset:168; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x8, f13, f25, 0, x16, 168, x17, x15, 64, x18)

inst_22:// rs1==f22, rs2==f13, rd==x6, fs1 == 0 and fe1 == 0x00 and fm1 == 0x0007f0 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x706405 and rm_val == 0  
// opcode: fle.s ; op1:f22; op2:f13; dest:x6; op1val:0x7f0; op2val:0x40706405; valaddr_reg:x16; val_offset:176; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x6, f22, f13, 0, x16, 176, x17, x15, 72, x18)

inst_23:// rs1==f17, rs2==f3, rd==x1, fs1 == 0 and fe1 == 0x00 and fm1 == 0x0007f0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3fb8a4 and rm_val == 0  
// opcode: fle.s ; op1:f17; op2:f3; dest:x1; op1val:0x7f0; op2val:0x3fb8a4; valaddr_reg:x16; val_offset:184; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x1, f17, f3, 0, x16, 184, x17, x15, 80, x18)

inst_24:// rs1==f26, rs2==f7, rd==x22, fs1 == 0 and fe1 == 0x81 and fm1 == 0x3b428c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x0007f0 and rm_val == 0  
// opcode: fle.s ; op1:f26; op2:f7; dest:x22; op1val:0x40bb428c; op2val:0x7f0; valaddr_reg:x16; val_offset:192; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x22, f26, f7, 0, x16, 192, x17, x15, 88, x18)

inst_25:// rs1==f27, rs2==f1, rd==x25, fs1 == 0 and fe1 == 0x00 and fm1 == 0x0007f0 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x3b428c and rm_val == 0  
// opcode: fle.s ; op1:f27; op2:f1; dest:x25; op1val:0x7f0; op2val:0x40bb428c; valaddr_reg:x16; val_offset:200; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x25, f27, f1, 0, x16, 200, x17, x15, 96, x18)

inst_26:// rs1==f1, rs2==f31, rd==x9, fs1 == 0 and fe1 == 0x00 and fm1 == 0x0007f0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00d7bf and rm_val == 0  
// opcode: fle.s ; op1:f1; op2:f31; dest:x9; op1val:0x7f0; op2val:0xd7bf; valaddr_reg:x16; val_offset:208; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x9, f1, f31, 0, x16, 208, x17, x15, 104, x18)

inst_27:// rs1==f31, rs2==f26, rd==x30, fs1 == 0 and fe1 == 0x81 and fm1 == 0x77aa21 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x0007f0 and rm_val == 0  
// opcode: fle.s ; op1:f31; op2:f26; dest:x30; op1val:0x40f7aa21; op2val:0x7f0; valaddr_reg:x16; val_offset:216; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x30, f31, f26, 0, x16, 216, x17, x15, 112, x18)

inst_28:// rs1==f29, rs2==f18, rd==x12, fs1 == 0 and fe1 == 0x00 and fm1 == 0x0007f0 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x77aa21 and rm_val == 0  
// opcode: fle.s ; op1:f29; op2:f18; dest:x12; op1val:0x7f0; op2val:0x40f7aa21; valaddr_reg:x16; val_offset:224; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f29, f18, 0, x16, 224, x17, x15, 120, x18)

inst_29:// rs1==f25, rs2==f11, rd==x27, fs1 == 0 and fe1 == 0x00 and fm1 == 0x0007f0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x17ad58 and rm_val == 0  
// opcode: fle.s ; op1:f25; op2:f11; dest:x27; op1val:0x7f0; op2val:0x17ad58; valaddr_reg:x16; val_offset:232; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x27, f25, f11, 0, x16, 232, x17, x15, 128, x18)

inst_30:// rs1==f30, rs2==f29, rd==x18, fs1 == 0 and fe1 == 0x80 and fm1 == 0x0b2963 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x0007f0 and rm_val == 0  
// opcode: fle.s ; op1:f30; op2:f29; dest:x18; op1val:0x400b2963; op2val:0x7f0; valaddr_reg:x16; val_offset:240; correctval:0; testreg:x22
TEST_FCMP_OP(fle.s, x18, f30, f29, 0, x16, 240, x17, x15, 136, x22)

inst_31:// rs1==f24, rs2==f12, rd==x2, fs1 == 0 and fe1 == 0x00 and fm1 == 0x0007f0 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0b2963 and rm_val == 0  
// opcode: fle.s ; op1:f24; op2:f12; dest:x2; op1val:0x7f0; op2val:0x400b2963; valaddr_reg:x16; val_offset:248; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x2, f24, f12, 0, x16, 248, x17, x15, 144, x18)

inst_32:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x0007f0 and fs2 == 1 and fe2 == 0xfb and fm2 == 0x4aaeb1 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f0; op2val:0xfdcaaeb1; valaddr_reg:x16; val_offset:256; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 256, x17, x15, 152, x18)

inst_33:// fs1 == 1 and fe1 == 0x80 and fm1 == 0x578765 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x0007f0 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xc0578765; op2val:0x7f0; valaddr_reg:x16; val_offset:264; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 264, x17, x15, 160, x18)

inst_34:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x0007f0 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x578765 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f0; op2val:0xc0578765; valaddr_reg:x16; val_offset:272; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 272, x17, x15, 168, x18)

inst_35:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x0007f0 and fs2 == 1 and fe2 == 0xfd and fm2 == 0x491492 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f0; op2val:0xfec91492; valaddr_reg:x16; val_offset:280; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 280, x17, x15, 176, x18)

inst_36:// fs1 == 1 and fe1 == 0x7f and fm1 == 0x2b0f6c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x0007f0 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xbfab0f6c; op2val:0x7f0; valaddr_reg:x16; val_offset:288; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 288, x17, x15, 184, x18)

inst_37:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x0007f0 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2b0f6c and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f0; op2val:0xbfab0f6c; valaddr_reg:x16; val_offset:296; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 296, x17, x15, 192, x18)

inst_38:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x0007f0 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x130229 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f0; op2val:0xff130229; valaddr_reg:x16; val_offset:304; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 304, x17, x15, 200, x18)

inst_39:// fs1 == 1 and fe1 == 0x7f and fm1 == 0x7a1f35 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x0007f0 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xbffa1f35; op2val:0x7f0; valaddr_reg:x16; val_offset:312; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 312, x17, x15, 208, x18)

inst_40:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x0007f0 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7a1f35 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f0; op2val:0xbffa1f35; valaddr_reg:x16; val_offset:320; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 320, x17, x15, 216, x18)

inst_41:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x0007f0 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x336b1f and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f0; op2val:0xff336b1f; valaddr_reg:x16; val_offset:328; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 328, x17, x15, 224, x18)

inst_42:// fs1 == 1 and fe1 == 0x80 and fm1 == 0x18a1e0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x0007f0 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xc018a1e0; op2val:0x7f0; valaddr_reg:x16; val_offset:336; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 336, x17, x15, 232, x18)

inst_43:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x0007f0 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x18a1e0 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f0; op2val:0xc018a1e0; valaddr_reg:x16; val_offset:344; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 344, x17, x15, 240, x18)

inst_44:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x0007f0 and fs2 == 1 and fe2 == 0xfd and fm2 == 0x2f0416 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f0; op2val:0xfeaf0416; valaddr_reg:x16; val_offset:352; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 352, x17, x15, 248, x18)

inst_45:// fs1 == 1 and fe1 == 0x7f and fm1 == 0x14e31a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x0007f0 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xbf94e31a; op2val:0x7f0; valaddr_reg:x16; val_offset:360; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 360, x17, x15, 256, x18)

inst_46:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x0007f0 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x14e31a and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f0; op2val:0xbf94e31a; valaddr_reg:x16; val_offset:368; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 368, x17, x15, 264, x18)

inst_47:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x0007f0 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x73c956 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f0; op2val:0x7ef3c956; valaddr_reg:x16; val_offset:376; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 376, x17, x15, 272, x18)

inst_48:// fs1 == 0 and fe1 == 0x7f and fm1 == 0x4f63fe and fs2 == 0 and fe2 == 0x00 and fm2 == 0x0007f0 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x3fcf63fe; op2val:0x7f0; valaddr_reg:x16; val_offset:384; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 384, x17, x15, 280, x18)

inst_49:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x0007f0 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4f63fe and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f0; op2val:0x3fcf63fe; valaddr_reg:x16; val_offset:392; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 392, x17, x15, 288, x18)

inst_50:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x0007f0 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x2099c0 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f0; op2val:0x7f2099c0; valaddr_reg:x16; val_offset:400; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 400, x17, x15, 296, x18)

inst_51:// fs1 == 0 and fe1 == 0x80 and fm1 == 0x089fb6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x0007f0 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x40089fb6; op2val:0x7f0; valaddr_reg:x16; val_offset:408; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 408, x17, x15, 304, x18)

inst_52:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x0007f0 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x089fb6 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f0; op2val:0x40089fb6; valaddr_reg:x16; val_offset:416; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 416, x17, x15, 312, x18)

inst_53:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x0007f0 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x472f12 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f0; op2val:0x7e472f12; valaddr_reg:x16; val_offset:424; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 424, x17, x15, 320, x18)

inst_54:// fs1 == 0 and fe1 == 0x81 and fm1 == 0x53cf02 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x0007f0 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x40d3cf02; op2val:0x7f0; valaddr_reg:x16; val_offset:432; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 432, x17, x15, 328, x18)

inst_55:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x0007f0 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x53cf02 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f0; op2val:0x40d3cf02; valaddr_reg:x16; val_offset:440; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 440, x17, x15, 336, x18)

inst_56:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x0007f0 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x7046ce and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f0; op2val:0x7ef046ce; valaddr_reg:x16; val_offset:448; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 448, x17, x15, 344, x18)

inst_57:// fs1 == 0 and fe1 == 0x7f and fm1 == 0x4c679b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x0007f0 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x3fcc679b; op2val:0x7f0; valaddr_reg:x16; val_offset:456; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 456, x17, x15, 352, x18)

inst_58:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x0007f0 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4c679b and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f0; op2val:0x3fcc679b; valaddr_reg:x16; val_offset:464; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 464, x17, x15, 360, x18)

inst_59:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x0007f0 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x36c1bf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f0; op2val:0x7e36c1bf; valaddr_reg:x16; val_offset:472; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 472, x17, x15, 368, x18)

inst_60:// fs1 == 0 and fe1 == 0x81 and fm1 == 0x425723 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x0007f0 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x40c25723; op2val:0x7f0; valaddr_reg:x16; val_offset:480; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 480, x17, x15, 376, x18)

inst_61:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x0007f0 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x425723 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f0; op2val:0x40c25723; valaddr_reg:x16; val_offset:488; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 488, x17, x15, 384, x18)

inst_62:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x108f54 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x108f54 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x80108f54; op2val:0x80108f54; valaddr_reg:x16; val_offset:496; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 496, x17, x15, 392, x18)

inst_63:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x108f54 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x42a917 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x80108f54; op2val:0xbfc2a917; valaddr_reg:x16; val_offset:504; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 504, x17, x15, 400, x18)

inst_64:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x108f54 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x0007f0 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x80108f54; op2val:0x7f0; valaddr_reg:x16; val_offset:512; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 512, x17, x15, 408, x18)

inst_65:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x108f54 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x365c4c and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x80108f54; op2val:0x80365c4c; valaddr_reg:x16; val_offset:520; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 520, x17, x15, 416, x18)

inst_66:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x365c4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x108f54 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x80365c4c; op2val:0x80108f54; valaddr_reg:x16; val_offset:528; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 528, x17, x15, 424, x18)

inst_67:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x108f54 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x21e733 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x80108f54; op2val:0x8021e733; valaddr_reg:x16; val_offset:536; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 536, x17, x15, 432, x18)

inst_68:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x21e733 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x108f54 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8021e733; op2val:0x80108f54; valaddr_reg:x16; val_offset:544; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 544, x17, x15, 440, x18)

inst_69:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x108f54 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x01a7ee and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x80108f54; op2val:0x8001a7ee; valaddr_reg:x16; val_offset:552; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 552, x17, x15, 448, x18)

inst_70:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x01a7ee and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0a66e8 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8001a7ee; op2val:0x800a66e8; valaddr_reg:x16; val_offset:560; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 560, x17, x15, 456, x18)

inst_71:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x680514 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x01a7ee and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x80680514; op2val:0x8001a7ee; valaddr_reg:x16; val_offset:568; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 568, x17, x15, 464, x18)

inst_72:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x01a7ee and fs2 == 1 and fe2 == 0x00 and fm2 == 0x680514 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8001a7ee; op2val:0x80680514; valaddr_reg:x16; val_offset:576; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 576, x17, x15, 472, x18)

inst_73:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x108f54 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0a66e8 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x80108f54; op2val:0x800a66e8; valaddr_reg:x16; val_offset:584; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 584, x17, x15, 480, x18)

inst_74:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x108f54 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x19595f and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x80108f54; op2val:0x8019595f; valaddr_reg:x16; val_offset:592; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 592, x17, x15, 488, x18)

inst_75:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x19595f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x108f54 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8019595f; op2val:0x80108f54; valaddr_reg:x16; val_offset:600; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 600, x17, x15, 496, x18)

inst_76:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x108f54 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x217bcd and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x80108f54; op2val:0x217bcd; valaddr_reg:x16; val_offset:608; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 608, x17, x15, 504, x18)

inst_77:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x217bcd and fs2 == 1 and fe2 == 0x00 and fm2 == 0x108f54 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x217bcd; op2val:0x80108f54; valaddr_reg:x16; val_offset:616; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 616, x17, x15, 512, x18)

inst_78:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x108f54 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x28e67d and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x80108f54; op2val:0x28e67d; valaddr_reg:x16; val_offset:624; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 624, x17, x15, 520, x18)

inst_79:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x28e67d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x108f54 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x28e67d; op2val:0x80108f54; valaddr_reg:x16; val_offset:632; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 632, x17, x15, 528, x18)

inst_80:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x108f54 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3fb8a4 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x80108f54; op2val:0x3fb8a4; valaddr_reg:x16; val_offset:640; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 640, x17, x15, 536, x18)

inst_81:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x3fb8a4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x108f54 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x3fb8a4; op2val:0x80108f54; valaddr_reg:x16; val_offset:648; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 648, x17, x15, 544, x18)

inst_82:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x108f54 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x002a64 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x80108f54; op2val:0x80002a64; valaddr_reg:x16; val_offset:656; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 656, x17, x15, 552, x18)

inst_83:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x002a64 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00d7bf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x80002a64; op2val:0xd7bf; valaddr_reg:x16; val_offset:664; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 664, x17, x15, 560, x18)

inst_84:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x5446a0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x002a64 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x5446a0; op2val:0x80002a64; valaddr_reg:x16; val_offset:672; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 672, x17, x15, 568, x18)

inst_85:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x002a64 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5446a0 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x80002a64; op2val:0x5446a0; valaddr_reg:x16; val_offset:680; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 680, x17, x15, 576, x18)

inst_86:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x108f54 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00d7bf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x80108f54; op2val:0xd7bf; valaddr_reg:x16; val_offset:688; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 688, x17, x15, 584, x18)

inst_87:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x108f54 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x17ad58 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x80108f54; op2val:0x17ad58; valaddr_reg:x16; val_offset:696; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 696, x17, x15, 592, x18)

inst_88:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x17ad58 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x108f54 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x17ad58; op2val:0x80108f54; valaddr_reg:x16; val_offset:704; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 704, x17, x15, 600, x18)

inst_89:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x108f54 and fs2 == 1 and fe2 == 0xfa and fm2 == 0x370ed0 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x80108f54; op2val:0xfd370ed0; valaddr_reg:x16; val_offset:712; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 712, x17, x15, 608, x18)

inst_90:// fs1 == 1 and fe1 == 0xfa and fm1 == 0x370ed0 and fs2 == 1 and fe2 == 0xfb and fm2 == 0x4aaeb1 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfd370ed0; op2val:0xfdcaaeb1; valaddr_reg:x16; val_offset:720; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 720, x17, x15, 616, x18)

inst_91:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x24ab9b and fs2 == 1 and fe2 == 0xfa and fm2 == 0x370ed0 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8024ab9b; op2val:0xfd370ed0; valaddr_reg:x16; val_offset:728; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 728, x17, x15, 624, x18)

inst_92:// fs1 == 1 and fe1 == 0xfa and fm1 == 0x370ed0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x24ab9b and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfd370ed0; op2val:0x8024ab9b; valaddr_reg:x16; val_offset:736; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 736, x17, x15, 632, x18)

inst_93:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x108f54 and fs2 == 1 and fe2 == 0xfb and fm2 == 0x4aaeb1 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x80108f54; op2val:0xfdcaaeb1; valaddr_reg:x16; val_offset:744; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 744, x17, x15, 640, x18)

inst_94:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x108f54 and fs2 == 1 and fe2 == 0xfd and fm2 == 0x64d284 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x80108f54; op2val:0xfee4d284; valaddr_reg:x16; val_offset:752; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 752, x17, x15, 648, x18)

inst_95:// fs1 == 1 and fe1 == 0xfd and fm1 == 0x64d284 and fs2 == 1 and fe2 == 0xfd and fm2 == 0x491492 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfee4d284; op2val:0xfec91492; valaddr_reg:x16; val_offset:760; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 760, x17, x15, 656, x18)

inst_96:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0e8d5c and fs2 == 1 and fe2 == 0xfd and fm2 == 0x64d284 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x800e8d5c; op2val:0xfee4d284; valaddr_reg:x16; val_offset:768; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 768, x17, x15, 664, x18)

inst_97:// fs1 == 1 and fe1 == 0xfd and fm1 == 0x64d284 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0e8d5c and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfee4d284; op2val:0x800e8d5c; valaddr_reg:x16; val_offset:776; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 776, x17, x15, 672, x18)

inst_98:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x108f54 and fs2 == 1 and fe2 == 0xfd and fm2 == 0x491492 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x80108f54; op2val:0xfec91492; valaddr_reg:x16; val_offset:784; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 784, x17, x15, 680, x18)

inst_99:// fs1 == 1 and fe1 == 0xfd and fm1 == 0x64d284 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x130229 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfee4d284; op2val:0xff130229; valaddr_reg:x16; val_offset:792; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 792, x17, x15, 688, x18)

inst_100:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x15472c and fs2 == 1 and fe2 == 0xfd and fm2 == 0x64d284 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8015472c; op2val:0xfee4d284; valaddr_reg:x16; val_offset:800; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 800, x17, x15, 696, x18)

inst_101:// fs1 == 1 and fe1 == 0xfd and fm1 == 0x64d284 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x15472c and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfee4d284; op2val:0x8015472c; valaddr_reg:x16; val_offset:808; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 808, x17, x15, 704, x18)

inst_102:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x108f54 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x130229 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x80108f54; op2val:0xff130229; valaddr_reg:x16; val_offset:816; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 816, x17, x15, 712, x18)

inst_103:// fs1 == 1 and fe1 == 0xfd and fm1 == 0x64d284 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x336b1f and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfee4d284; op2val:0xff336b1f; valaddr_reg:x16; val_offset:824; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 824, x17, x15, 720, x18)

inst_104:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x19f813 and fs2 == 1 and fe2 == 0xfd and fm2 == 0x64d284 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8019f813; op2val:0xfee4d284; valaddr_reg:x16; val_offset:832; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 832, x17, x15, 728, x18)

inst_105:// fs1 == 1 and fe1 == 0xfd and fm1 == 0x64d284 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x19f813 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfee4d284; op2val:0x8019f813; valaddr_reg:x16; val_offset:840; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 840, x17, x15, 736, x18)

inst_106:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x108f54 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x336b1f and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x80108f54; op2val:0xff336b1f; valaddr_reg:x16; val_offset:848; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 848, x17, x15, 744, x18)

inst_107:// fs1 == 1 and fe1 == 0xfd and fm1 == 0x64d284 and fs2 == 1 and fe2 == 0xfd and fm2 == 0x2f0416 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfee4d284; op2val:0xfeaf0416; valaddr_reg:x16; val_offset:856; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 856, x17, x15, 752, x18)

inst_108:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0caa79 and fs2 == 1 and fe2 == 0xfd and fm2 == 0x64d284 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x800caa79; op2val:0xfee4d284; valaddr_reg:x16; val_offset:864; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 864, x17, x15, 760, x18)

inst_109:// fs1 == 1 and fe1 == 0xfd and fm1 == 0x64d284 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0caa79 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfee4d284; op2val:0x800caa79; valaddr_reg:x16; val_offset:872; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 872, x17, x15, 768, x18)

inst_110:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x108f54 and fs2 == 1 and fe2 == 0xfd and fm2 == 0x2f0416 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x80108f54; op2val:0xfeaf0416; valaddr_reg:x16; val_offset:880; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 880, x17, x15, 776, x18)

inst_111:// fs1 == 1 and fe1 == 0xfd and fm1 == 0x64d284 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x73c956 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfee4d284; op2val:0x7ef3c956; valaddr_reg:x16; val_offset:888; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 888, x17, x15, 784, x18)

inst_112:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x11a491 and fs2 == 1 and fe2 == 0xfd and fm2 == 0x64d284 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x11a491; op2val:0xfee4d284; valaddr_reg:x16; val_offset:896; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 896, x17, x15, 792, x18)

inst_113:// fs1 == 1 and fe1 == 0xfd and fm1 == 0x64d284 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x11a491 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfee4d284; op2val:0x11a491; valaddr_reg:x16; val_offset:904; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 904, x17, x15, 800, x18)

inst_114:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x108f54 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x73c956 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x80108f54; op2val:0x7ef3c956; valaddr_reg:x16; val_offset:912; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 912, x17, x15, 808, x18)

inst_115:// fs1 == 1 and fe1 == 0xfd and fm1 == 0x64d284 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x2099c0 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfee4d284; op2val:0x7f2099c0; valaddr_reg:x16; val_offset:920; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 920, x17, x15, 816, x18)

inst_116:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x173ecf and fs2 == 1 and fe2 == 0xfd and fm2 == 0x64d284 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x173ecf; op2val:0xfee4d284; valaddr_reg:x16; val_offset:928; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 928, x17, x15, 824, x18)

inst_117:// fs1 == 1 and fe1 == 0xfd and fm1 == 0x64d284 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x173ecf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfee4d284; op2val:0x173ecf; valaddr_reg:x16; val_offset:936; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 936, x17, x15, 832, x18)

inst_118:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x108f54 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x2099c0 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x80108f54; op2val:0x7f2099c0; valaddr_reg:x16; val_offset:944; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 944, x17, x15, 840, x18)

inst_119:// fs1 == 1 and fe1 == 0xfa and fm1 == 0x370ed0 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x472f12 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfd370ed0; op2val:0x7e472f12; valaddr_reg:x16; val_offset:952; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 952, x17, x15, 848, x18)

inst_120:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x481322 and fs2 == 1 and fe2 == 0xfa and fm2 == 0x370ed0 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x481322; op2val:0xfd370ed0; valaddr_reg:x16; val_offset:960; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 960, x17, x15, 856, x18)

inst_121:// fs1 == 1 and fe1 == 0xfa and fm1 == 0x370ed0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x481322 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfd370ed0; op2val:0x481322; valaddr_reg:x16; val_offset:968; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 968, x17, x15, 864, x18)

inst_122:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x108f54 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x472f12 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x80108f54; op2val:0x7e472f12; valaddr_reg:x16; val_offset:976; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 976, x17, x15, 872, x18)

inst_123:// fs1 == 1 and fe1 == 0xfd and fm1 == 0x64d284 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x7046ce and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfee4d284; op2val:0x7ef046ce; valaddr_reg:x16; val_offset:984; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 984, x17, x15, 880, x18)

inst_124:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x11638a and fs2 == 1 and fe2 == 0xfd and fm2 == 0x64d284 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x11638a; op2val:0xfee4d284; valaddr_reg:x16; val_offset:992; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 992, x17, x15, 888, x18)

inst_125:// fs1 == 1 and fe1 == 0xfd and fm1 == 0x64d284 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x11638a and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfee4d284; op2val:0x11638a; valaddr_reg:x16; val_offset:1000; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1000, x17, x15, 896, x18)

inst_126:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x108f54 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x7046ce and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x80108f54; op2val:0x7ef046ce; valaddr_reg:x16; val_offset:1008; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1008, x17, x15, 904, x18)

inst_127:// fs1 == 1 and fe1 == 0xfa and fm1 == 0x370ed0 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x36c1bf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfd370ed0; op2val:0x7e36c1bf; valaddr_reg:x16; val_offset:1016; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1016, x17, x15, 912, x18)

inst_128:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x42216f and fs2 == 1 and fe2 == 0xfa and fm2 == 0x370ed0 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x42216f; op2val:0xfd370ed0; valaddr_reg:x16; val_offset:1024; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1024, x17, x15, 920, x18)

inst_129:// fs1 == 1 and fe1 == 0xfa and fm1 == 0x370ed0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x42216f and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfd370ed0; op2val:0x42216f; valaddr_reg:x16; val_offset:1032; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1032, x17, x15, 928, x18)

inst_130:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x108f54 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x36c1bf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x80108f54; op2val:0x7e36c1bf; valaddr_reg:x16; val_offset:1040; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1040, x17, x15, 936, x18)

inst_131:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x365c4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x365c4c and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x80365c4c; op2val:0x80365c4c; valaddr_reg:x16; val_offset:1048; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1048, x17, x15, 944, x18)

inst_132:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x365c4c and fs2 == 1 and fe2 == 0x81 and fm2 == 0x1fc053 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x80365c4c; op2val:0xc09fc053; valaddr_reg:x16; val_offset:1056; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1056, x17, x15, 952, x18)

inst_133:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x365c4c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x0007f0 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x80365c4c; op2val:0x7f0; valaddr_reg:x16; val_offset:1064; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1064, x17, x15, 960, x18)

inst_134:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x365c4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x21e733 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x80365c4c; op2val:0x8021e733; valaddr_reg:x16; val_offset:1072; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1072, x17, x15, 968, x18)

inst_135:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x21e733 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x365c4c and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8021e733; op2val:0x80365c4c; valaddr_reg:x16; val_offset:1080; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1080, x17, x15, 976, x18)

inst_136:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x365c4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x056fa1 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x80365c4c; op2val:0x80056fa1; valaddr_reg:x16; val_offset:1088; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1088, x17, x15, 984, x18)

inst_137:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x056fa1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0a66e8 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x80056fa1; op2val:0x800a66e8; valaddr_reg:x16; val_offset:1096; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1096, x17, x15, 992, x18)

inst_138:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x680514 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x056fa1 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x80680514; op2val:0x80056fa1; valaddr_reg:x16; val_offset:1104; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1104, x17, x15, 1000, x18)

inst_139:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x056fa1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x680514 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x80056fa1; op2val:0x80680514; valaddr_reg:x16; val_offset:1112; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1112, x17, x15, 1008, x18)

inst_140:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x365c4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0a66e8 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x80365c4c; op2val:0x800a66e8; valaddr_reg:x16; val_offset:1120; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1120, x17, x15, 1016, x18)

inst_141:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x365c4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x19595f and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x80365c4c; op2val:0x8019595f; valaddr_reg:x16; val_offset:1128; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1128, x17, x15, 1024, x18)

inst_142:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x19595f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x365c4c and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8019595f; op2val:0x80365c4c; valaddr_reg:x16; val_offset:1136; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1136, x17, x15, 1032, x18)

inst_143:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x365c4c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x217bcd and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x80365c4c; op2val:0x217bcd; valaddr_reg:x16; val_offset:1144; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1144, x17, x15, 1040, x18)

inst_144:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x217bcd and fs2 == 1 and fe2 == 0x00 and fm2 == 0x365c4c and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x217bcd; op2val:0x80365c4c; valaddr_reg:x16; val_offset:1152; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1152, x17, x15, 1048, x18)

inst_145:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x365c4c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x28e67d and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x80365c4c; op2val:0x28e67d; valaddr_reg:x16; val_offset:1160; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1160, x17, x15, 1056, x18)

inst_146:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x28e67d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x365c4c and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x28e67d; op2val:0x80365c4c; valaddr_reg:x16; val_offset:1168; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1168, x17, x15, 1064, x18)

inst_147:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x365c4c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3fb8a4 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x80365c4c; op2val:0x3fb8a4; valaddr_reg:x16; val_offset:1176; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1176, x17, x15, 1072, x18)

inst_148:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x3fb8a4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x365c4c and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x3fb8a4; op2val:0x80365c4c; valaddr_reg:x16; val_offset:1184; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1184, x17, x15, 1080, x18)

inst_149:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x365c4c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x008b29 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x80365c4c; op2val:0x80008b29; valaddr_reg:x16; val_offset:1192; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1192, x17, x15, 1088, x18)

inst_150:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x008b29 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00d7bf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x80008b29; op2val:0xd7bf; valaddr_reg:x16; val_offset:1200; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1200, x17, x15, 1096, x18)

inst_151:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x5446a0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x008b29 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x5446a0; op2val:0x80008b29; valaddr_reg:x16; val_offset:1208; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1208, x17, x15, 1104, x18)

inst_152:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x008b29 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5446a0 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x80008b29; op2val:0x5446a0; valaddr_reg:x16; val_offset:1216; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1216, x17, x15, 1112, x18)

inst_153:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x365c4c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00d7bf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x80365c4c; op2val:0xd7bf; valaddr_reg:x16; val_offset:1224; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1224, x17, x15, 1120, x18)

inst_154:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x365c4c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x17ad58 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x80365c4c; op2val:0x17ad58; valaddr_reg:x16; val_offset:1232; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1232, x17, x15, 1128, x18)

inst_155:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x17ad58 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x365c4c and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x17ad58; op2val:0x80365c4c; valaddr_reg:x16; val_offset:1240; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1240, x17, x15, 1136, x18)

inst_156:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x365c4c and fs2 == 1 and fe2 == 0xfc and fm2 == 0x163ab8 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x80365c4c; op2val:0xfe163ab8; valaddr_reg:x16; val_offset:1248; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1248, x17, x15, 1144, x18)

inst_157:// fs1 == 1 and fe1 == 0xfc and fm1 == 0x163ab8 and fs2 == 1 and fe2 == 0xfb and fm2 == 0x4aaeb1 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfe163ab8; op2val:0xfdcaaeb1; valaddr_reg:x16; val_offset:1256; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1256, x17, x15, 1152, x18)

inst_158:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x24ab9b and fs2 == 1 and fe2 == 0xfc and fm2 == 0x163ab8 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8024ab9b; op2val:0xfe163ab8; valaddr_reg:x16; val_offset:1264; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1264, x17, x15, 1160, x18)

inst_159:// fs1 == 1 and fe1 == 0xfc and fm1 == 0x163ab8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x24ab9b and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfe163ab8; op2val:0x8024ab9b; valaddr_reg:x16; val_offset:1272; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1272, x17, x15, 1168, x18)

inst_160:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x365c4c and fs2 == 1 and fe2 == 0xfb and fm2 == 0x4aaeb1 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x80365c4c; op2val:0xfdcaaeb1; valaddr_reg:x16; val_offset:1280; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1280, x17, x15, 1176, x18)

inst_161:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x365c4c and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x80365c4c; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1288; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1288, x17, x15, 1184, x18)

inst_162:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfd and fm2 == 0x491492 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff7fffff; op2val:0xfec91492; valaddr_reg:x16; val_offset:1296; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1296, x17, x15, 1192, x18)

inst_163:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0e8d5c and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x800e8d5c; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1304; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1304, x17, x15, 1200, x18)

inst_164:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0e8d5c and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff7fffff; op2val:0x800e8d5c; valaddr_reg:x16; val_offset:1312; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1312, x17, x15, 1208, x18)

inst_165:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x365c4c and fs2 == 1 and fe2 == 0xfd and fm2 == 0x491492 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x80365c4c; op2val:0xfec91492; valaddr_reg:x16; val_offset:1320; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1320, x17, x15, 1216, x18)

inst_166:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x130229 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff7fffff; op2val:0xff130229; valaddr_reg:x16; val_offset:1328; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1328, x17, x15, 1224, x18)

inst_167:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x15472c and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8015472c; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1336; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1336, x17, x15, 1232, x18)

inst_168:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x15472c and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff7fffff; op2val:0x8015472c; valaddr_reg:x16; val_offset:1344; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1344, x17, x15, 1240, x18)

inst_169:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x365c4c and fs2 == 1 and fe2 == 0xfe and fm2 == 0x130229 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x80365c4c; op2val:0xff130229; valaddr_reg:x16; val_offset:1352; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1352, x17, x15, 1248, x18)

inst_170:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x336b1f and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff7fffff; op2val:0xff336b1f; valaddr_reg:x16; val_offset:1360; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1360, x17, x15, 1256, x18)

inst_171:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x19f813 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8019f813; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1368; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1368, x17, x15, 1264, x18)

inst_172:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x19f813 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff7fffff; op2val:0x8019f813; valaddr_reg:x16; val_offset:1376; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1376, x17, x15, 1272, x18)

inst_173:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x365c4c and fs2 == 1 and fe2 == 0xfe and fm2 == 0x336b1f and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x80365c4c; op2val:0xff336b1f; valaddr_reg:x16; val_offset:1384; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1384, x17, x15, 1280, x18)

inst_174:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfd and fm2 == 0x2f0416 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff7fffff; op2val:0xfeaf0416; valaddr_reg:x16; val_offset:1392; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1392, x17, x15, 1288, x18)

inst_175:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0caa79 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x800caa79; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1400; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1400, x17, x15, 1296, x18)

inst_176:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0caa79 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff7fffff; op2val:0x800caa79; valaddr_reg:x16; val_offset:1408; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1408, x17, x15, 1304, x18)

inst_177:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x365c4c and fs2 == 1 and fe2 == 0xfd and fm2 == 0x2f0416 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x80365c4c; op2val:0xfeaf0416; valaddr_reg:x16; val_offset:1416; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1416, x17, x15, 1312, x18)

inst_178:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfd and fm2 == 0x73c956 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff7fffff; op2val:0x7ef3c956; valaddr_reg:x16; val_offset:1424; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1424, x17, x15, 1320, x18)

inst_179:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x11a491 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x11a491; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1432; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1432, x17, x15, 1328, x18)

inst_180:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x11a491 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff7fffff; op2val:0x11a491; valaddr_reg:x16; val_offset:1440; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1440, x17, x15, 1336, x18)

inst_181:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x365c4c and fs2 == 0 and fe2 == 0xfd and fm2 == 0x73c956 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x80365c4c; op2val:0x7ef3c956; valaddr_reg:x16; val_offset:1448; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1448, x17, x15, 1344, x18)

inst_182:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x2099c0 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff7fffff; op2val:0x7f2099c0; valaddr_reg:x16; val_offset:1456; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1456, x17, x15, 1352, x18)

inst_183:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x173ecf and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x173ecf; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1464; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1464, x17, x15, 1360, x18)

inst_184:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x173ecf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff7fffff; op2val:0x173ecf; valaddr_reg:x16; val_offset:1472; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1472, x17, x15, 1368, x18)

inst_185:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x365c4c and fs2 == 0 and fe2 == 0xfe and fm2 == 0x2099c0 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x80365c4c; op2val:0x7f2099c0; valaddr_reg:x16; val_offset:1480; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1480, x17, x15, 1376, x18)

inst_186:// fs1 == 1 and fe1 == 0xfc and fm1 == 0x163ab8 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x472f12 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfe163ab8; op2val:0x7e472f12; valaddr_reg:x16; val_offset:1488; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1488, x17, x15, 1384, x18)

inst_187:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x481322 and fs2 == 1 and fe2 == 0xfc and fm2 == 0x163ab8 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x481322; op2val:0xfe163ab8; valaddr_reg:x16; val_offset:1496; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1496, x17, x15, 1392, x18)

inst_188:// fs1 == 1 and fe1 == 0xfc and fm1 == 0x163ab8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x481322 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfe163ab8; op2val:0x481322; valaddr_reg:x16; val_offset:1504; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1504, x17, x15, 1400, x18)

inst_189:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x365c4c and fs2 == 0 and fe2 == 0xfc and fm2 == 0x472f12 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x80365c4c; op2val:0x7e472f12; valaddr_reg:x16; val_offset:1512; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1512, x17, x15, 1408, x18)

inst_190:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfd and fm2 == 0x7046ce and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff7fffff; op2val:0x7ef046ce; valaddr_reg:x16; val_offset:1520; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1520, x17, x15, 1416, x18)

inst_191:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x11638a and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x11638a; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1528; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1528, x17, x15, 1424, x18)

inst_192:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x11638a and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff7fffff; op2val:0x11638a; valaddr_reg:x16; val_offset:1536; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1536, x17, x15, 1432, x18)

inst_193:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x365c4c and fs2 == 0 and fe2 == 0xfd and fm2 == 0x7046ce and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x80365c4c; op2val:0x7ef046ce; valaddr_reg:x16; val_offset:1544; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1544, x17, x15, 1440, x18)

inst_194:// fs1 == 1 and fe1 == 0xfc and fm1 == 0x163ab8 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x36c1bf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfe163ab8; op2val:0x7e36c1bf; valaddr_reg:x16; val_offset:1552; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1552, x17, x15, 1448, x18)

inst_195:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x42216f and fs2 == 1 and fe2 == 0xfc and fm2 == 0x163ab8 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x42216f; op2val:0xfe163ab8; valaddr_reg:x16; val_offset:1560; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1560, x17, x15, 1456, x18)

inst_196:// fs1 == 1 and fe1 == 0xfc and fm1 == 0x163ab8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x42216f and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfe163ab8; op2val:0x42216f; valaddr_reg:x16; val_offset:1568; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1568, x17, x15, 1464, x18)

inst_197:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x365c4c and fs2 == 0 and fe2 == 0xfc and fm2 == 0x36c1bf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x80365c4c; op2val:0x7e36c1bf; valaddr_reg:x16; val_offset:1576; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1576, x17, x15, 1472, x18)

inst_198:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x21e733 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x21e733 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8021e733; op2val:0x8021e733; valaddr_reg:x16; val_offset:1584; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1584, x17, x15, 1480, x18)

inst_199:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x21e733 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x4743c4 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8021e733; op2val:0xc04743c4; valaddr_reg:x16; val_offset:1592; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1592, x17, x15, 1488, x18)

inst_200:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x21e733 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x0007f0 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8021e733; op2val:0x7f0; valaddr_reg:x16; val_offset:1600; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1600, x17, x15, 1496, x18)

inst_201:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x21e733 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0363eb and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8021e733; op2val:0x800363eb; valaddr_reg:x16; val_offset:1608; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1608, x17, x15, 1504, x18)

inst_202:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0363eb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0a66e8 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x800363eb; op2val:0x800a66e8; valaddr_reg:x16; val_offset:1616; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1616, x17, x15, 1512, x18)

inst_203:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x680514 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0363eb and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x80680514; op2val:0x800363eb; valaddr_reg:x16; val_offset:1624; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1624, x17, x15, 1520, x18)

inst_204:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0363eb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x680514 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x800363eb; op2val:0x80680514; valaddr_reg:x16; val_offset:1632; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1632, x17, x15, 1528, x18)

inst_205:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x21e733 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0a66e8 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8021e733; op2val:0x800a66e8; valaddr_reg:x16; val_offset:1640; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1640, x17, x15, 1536, x18)

inst_206:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x21e733 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x19595f and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8021e733; op2val:0x8019595f; valaddr_reg:x16; val_offset:1648; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1648, x17, x15, 1544, x18)

inst_207:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x19595f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x21e733 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8019595f; op2val:0x8021e733; valaddr_reg:x16; val_offset:1656; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1656, x17, x15, 1552, x18)

inst_208:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x21e733 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x217bcd and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8021e733; op2val:0x217bcd; valaddr_reg:x16; val_offset:1664; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1664, x17, x15, 1560, x18)

inst_209:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x217bcd and fs2 == 1 and fe2 == 0x00 and fm2 == 0x21e733 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x217bcd; op2val:0x8021e733; valaddr_reg:x16; val_offset:1672; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1672, x17, x15, 1568, x18)

inst_210:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x21e733 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x28e67d and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8021e733; op2val:0x28e67d; valaddr_reg:x16; val_offset:1680; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1680, x17, x15, 1576, x18)

inst_211:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x28e67d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x21e733 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x28e67d; op2val:0x8021e733; valaddr_reg:x16; val_offset:1688; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1688, x17, x15, 1584, x18)

inst_212:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x21e733 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3fb8a4 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8021e733; op2val:0x3fb8a4; valaddr_reg:x16; val_offset:1696; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1696, x17, x15, 1592, x18)

inst_213:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x3fb8a4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x21e733 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x3fb8a4; op2val:0x8021e733; valaddr_reg:x16; val_offset:1704; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1704, x17, x15, 1600, x18)

inst_214:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x21e733 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0056ca and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8021e733; op2val:0x800056ca; valaddr_reg:x16; val_offset:1712; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1712, x17, x15, 1608, x18)

inst_215:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0056ca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00d7bf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x800056ca; op2val:0xd7bf; valaddr_reg:x16; val_offset:1720; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1720, x17, x15, 1616, x18)

inst_216:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x5446a0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0056ca and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x5446a0; op2val:0x800056ca; valaddr_reg:x16; val_offset:1728; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1728, x17, x15, 1624, x18)

inst_217:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0056ca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5446a0 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x800056ca; op2val:0x5446a0; valaddr_reg:x16; val_offset:1736; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1736, x17, x15, 1632, x18)

inst_218:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x21e733 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00d7bf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8021e733; op2val:0xd7bf; valaddr_reg:x16; val_offset:1744; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1744, x17, x15, 1640, x18)

inst_219:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x21e733 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x17ad58 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8021e733; op2val:0x17ad58; valaddr_reg:x16; val_offset:1752; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1752, x17, x15, 1648, x18)

inst_220:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x17ad58 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x21e733 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x17ad58; op2val:0x8021e733; valaddr_reg:x16; val_offset:1760; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1760, x17, x15, 1656, x18)

inst_221:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x21e733 and fs2 == 1 and fe2 == 0xfb and fm2 == 0x3b633c and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8021e733; op2val:0xfdbb633c; valaddr_reg:x16; val_offset:1768; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1768, x17, x15, 1664, x18)

inst_222:// fs1 == 1 and fe1 == 0xfb and fm1 == 0x3b633c and fs2 == 1 and fe2 == 0xfb and fm2 == 0x4aaeb1 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfdbb633c; op2val:0xfdcaaeb1; valaddr_reg:x16; val_offset:1776; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1776, x17, x15, 1672, x18)

inst_223:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x24ab9b and fs2 == 1 and fe2 == 0xfb and fm2 == 0x3b633c and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8024ab9b; op2val:0xfdbb633c; valaddr_reg:x16; val_offset:1784; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1784, x17, x15, 1680, x18)

inst_224:// fs1 == 1 and fe1 == 0xfb and fm1 == 0x3b633c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x24ab9b and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfdbb633c; op2val:0x8024ab9b; valaddr_reg:x16; val_offset:1792; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1792, x17, x15, 1688, x18)

inst_225:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x21e733 and fs2 == 1 and fe2 == 0xfb and fm2 == 0x4aaeb1 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8021e733; op2val:0xfdcaaeb1; valaddr_reg:x16; val_offset:1800; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1800, x17, x15, 1696, x18)

inst_226:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x21e733 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x6a3c0b and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8021e733; op2val:0xff6a3c0b; valaddr_reg:x16; val_offset:1808; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1808, x17, x15, 1704, x18)

inst_227:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x6a3c0b and fs2 == 1 and fe2 == 0xfd and fm2 == 0x491492 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff6a3c0b; op2val:0xfec91492; valaddr_reg:x16; val_offset:1816; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1816, x17, x15, 1712, x18)

inst_228:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0e8d5c and fs2 == 1 and fe2 == 0xfe and fm2 == 0x6a3c0b and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x800e8d5c; op2val:0xff6a3c0b; valaddr_reg:x16; val_offset:1824; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1824, x17, x15, 1720, x18)

inst_229:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x6a3c0b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0e8d5c and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff6a3c0b; op2val:0x800e8d5c; valaddr_reg:x16; val_offset:1832; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1832, x17, x15, 1728, x18)

inst_230:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x21e733 and fs2 == 1 and fe2 == 0xfd and fm2 == 0x491492 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8021e733; op2val:0xfec91492; valaddr_reg:x16; val_offset:1840; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1840, x17, x15, 1736, x18)

inst_231:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x6a3c0b and fs2 == 1 and fe2 == 0xfe and fm2 == 0x130229 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff6a3c0b; op2val:0xff130229; valaddr_reg:x16; val_offset:1848; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1848, x17, x15, 1744, x18)

inst_232:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x15472c and fs2 == 1 and fe2 == 0xfe and fm2 == 0x6a3c0b and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8015472c; op2val:0xff6a3c0b; valaddr_reg:x16; val_offset:1856; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1856, x17, x15, 1752, x18)

inst_233:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x6a3c0b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x15472c and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff6a3c0b; op2val:0x8015472c; valaddr_reg:x16; val_offset:1864; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1864, x17, x15, 1760, x18)

inst_234:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x21e733 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x130229 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8021e733; op2val:0xff130229; valaddr_reg:x16; val_offset:1872; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1872, x17, x15, 1768, x18)

inst_235:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x6a3c0b and fs2 == 1 and fe2 == 0xfe and fm2 == 0x336b1f and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff6a3c0b; op2val:0xff336b1f; valaddr_reg:x16; val_offset:1880; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1880, x17, x15, 1776, x18)

inst_236:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x19f813 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x6a3c0b and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8019f813; op2val:0xff6a3c0b; valaddr_reg:x16; val_offset:1888; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1888, x17, x15, 1784, x18)

inst_237:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x6a3c0b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x19f813 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff6a3c0b; op2val:0x8019f813; valaddr_reg:x16; val_offset:1896; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1896, x17, x15, 1792, x18)

inst_238:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x21e733 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x336b1f and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8021e733; op2val:0xff336b1f; valaddr_reg:x16; val_offset:1904; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1904, x17, x15, 1800, x18)

inst_239:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x6a3c0b and fs2 == 1 and fe2 == 0xfd and fm2 == 0x2f0416 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff6a3c0b; op2val:0xfeaf0416; valaddr_reg:x16; val_offset:1912; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1912, x17, x15, 1808, x18)

inst_240:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0caa79 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x6a3c0b and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x800caa79; op2val:0xff6a3c0b; valaddr_reg:x16; val_offset:1920; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1920, x17, x15, 1816, x18)

inst_241:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x6a3c0b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0caa79 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff6a3c0b; op2val:0x800caa79; valaddr_reg:x16; val_offset:1928; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1928, x17, x15, 1824, x18)

inst_242:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x21e733 and fs2 == 1 and fe2 == 0xfd and fm2 == 0x2f0416 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8021e733; op2val:0xfeaf0416; valaddr_reg:x16; val_offset:1936; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1936, x17, x15, 1832, x18)

inst_243:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x6a3c0b and fs2 == 0 and fe2 == 0xfd and fm2 == 0x73c956 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff6a3c0b; op2val:0x7ef3c956; valaddr_reg:x16; val_offset:1944; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1944, x17, x15, 1840, x18)

inst_244:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x11a491 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x6a3c0b and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x11a491; op2val:0xff6a3c0b; valaddr_reg:x16; val_offset:1952; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1952, x17, x15, 1848, x18)

inst_245:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x6a3c0b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x11a491 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff6a3c0b; op2val:0x11a491; valaddr_reg:x16; val_offset:1960; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1960, x17, x15, 1856, x18)

inst_246:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x21e733 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x73c956 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8021e733; op2val:0x7ef3c956; valaddr_reg:x16; val_offset:1968; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1968, x17, x15, 1864, x18)

inst_247:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x6a3c0b and fs2 == 0 and fe2 == 0xfe and fm2 == 0x2099c0 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff6a3c0b; op2val:0x7f2099c0; valaddr_reg:x16; val_offset:1976; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1976, x17, x15, 1872, x18)

inst_248:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x173ecf and fs2 == 1 and fe2 == 0xfe and fm2 == 0x6a3c0b and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x173ecf; op2val:0xff6a3c0b; valaddr_reg:x16; val_offset:1984; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1984, x17, x15, 1880, x18)

inst_249:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x6a3c0b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x173ecf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff6a3c0b; op2val:0x173ecf; valaddr_reg:x16; val_offset:1992; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1992, x17, x15, 1888, x18)

inst_250:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x21e733 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x2099c0 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8021e733; op2val:0x7f2099c0; valaddr_reg:x16; val_offset:2000; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 2000, x17, x15, 1896, x18)

inst_251:// fs1 == 1 and fe1 == 0xfb and fm1 == 0x3b633c and fs2 == 0 and fe2 == 0xfc and fm2 == 0x472f12 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfdbb633c; op2val:0x7e472f12; valaddr_reg:x16; val_offset:2008; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 2008, x17, x15, 1904, x18)

inst_252:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x481322 and fs2 == 1 and fe2 == 0xfb and fm2 == 0x3b633c and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x481322; op2val:0xfdbb633c; valaddr_reg:x16; val_offset:2016; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 2016, x17, x15, 1912, x18)

inst_253:// fs1 == 1 and fe1 == 0xfb and fm1 == 0x3b633c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x481322 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfdbb633c; op2val:0x481322; valaddr_reg:x16; val_offset:2024; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 2024, x17, x15, 1920, x18)
addi x16,x16,2032

inst_254:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x21e733 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x472f12 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8021e733; op2val:0x7e472f12; valaddr_reg:x16; val_offset:0; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 0, x17, x15, 1928, x18)

inst_255:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x6a3c0b and fs2 == 0 and fe2 == 0xfd and fm2 == 0x7046ce and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff6a3c0b; op2val:0x7ef046ce; valaddr_reg:x16; val_offset:8; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 8, x17, x15, 1936, x18)

inst_256:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x11638a and fs2 == 1 and fe2 == 0xfe and fm2 == 0x6a3c0b and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x11638a; op2val:0xff6a3c0b; valaddr_reg:x16; val_offset:16; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 16, x17, x15, 1944, x18)

inst_257:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x6a3c0b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x11638a and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff6a3c0b; op2val:0x11638a; valaddr_reg:x16; val_offset:24; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 24, x17, x15, 1952, x18)

inst_258:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x21e733 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x7046ce and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8021e733; op2val:0x7ef046ce; valaddr_reg:x16; val_offset:32; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 32, x17, x15, 1960, x18)

inst_259:// fs1 == 1 and fe1 == 0xfb and fm1 == 0x3b633c and fs2 == 0 and fe2 == 0xfc and fm2 == 0x36c1bf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfdbb633c; op2val:0x7e36c1bf; valaddr_reg:x16; val_offset:40; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 40, x17, x15, 1968, x18)

inst_260:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x42216f and fs2 == 1 and fe2 == 0xfb and fm2 == 0x3b633c and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x42216f; op2val:0xfdbb633c; valaddr_reg:x16; val_offset:48; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 48, x17, x15, 1976, x18)

inst_261:// fs1 == 1 and fe1 == 0xfb and fm1 == 0x3b633c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x42216f and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfdbb633c; op2val:0x42216f; valaddr_reg:x16; val_offset:56; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 56, x17, x15, 1984, x18)

inst_262:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x21e733 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x36c1bf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8021e733; op2val:0x7e36c1bf; valaddr_reg:x16; val_offset:64; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 64, x17, x15, 1992, x18)

inst_263:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0a66e8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0a66e8 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x800a66e8; op2val:0x800a66e8; valaddr_reg:x16; val_offset:72; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 72, x17, x15, 2000, x18)

inst_264:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0a66e8 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x18d7ea and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x800a66e8; op2val:0xc118d7ea; valaddr_reg:x16; val_offset:80; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 80, x17, x15, 2008, x18)

inst_265:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0a66e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x0007f0 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x800a66e8; op2val:0x7f0; valaddr_reg:x16; val_offset:88; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 88, x17, x15, 2016, x18)

inst_266:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0a66e8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x680514 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x800a66e8; op2val:0x80680514; valaddr_reg:x16; val_offset:96; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 96, x17, x15, 2024, x18)
RVTEST_SIGBASE(x15,signature_x15_4)

inst_267:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x680514 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x108f54 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x80680514; op2val:0x80108f54; valaddr_reg:x16; val_offset:104; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 104, x17, x15, 0, x18)

inst_268:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0a66e8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x108f54 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x800a66e8; op2val:0x80108f54; valaddr_reg:x16; val_offset:112; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 112, x17, x15, 8, x18)

inst_269:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x680514 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x365c4c and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x80680514; op2val:0x80365c4c; valaddr_reg:x16; val_offset:120; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 120, x17, x15, 16, x18)

inst_270:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0a66e8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x365c4c and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x800a66e8; op2val:0x80365c4c; valaddr_reg:x16; val_offset:128; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 128, x17, x15, 24, x18)

inst_271:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x680514 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x21e733 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x80680514; op2val:0x8021e733; valaddr_reg:x16; val_offset:136; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 136, x17, x15, 32, x18)

inst_272:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0a66e8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x21e733 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x800a66e8; op2val:0x8021e733; valaddr_reg:x16; val_offset:144; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 144, x17, x15, 40, x18)

inst_273:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x680514 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x19595f and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x80680514; op2val:0x8019595f; valaddr_reg:x16; val_offset:152; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 152, x17, x15, 48, x18)

inst_274:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0288ef and fs2 == 1 and fe2 == 0x00 and fm2 == 0x680514 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x800288ef; op2val:0x80680514; valaddr_reg:x16; val_offset:160; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 160, x17, x15, 56, x18)

inst_275:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x680514 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0288ef and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x80680514; op2val:0x800288ef; valaddr_reg:x16; val_offset:168; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 168, x17, x15, 64, x18)

inst_276:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0a66e8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x19595f and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x800a66e8; op2val:0x8019595f; valaddr_reg:x16; val_offset:176; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 176, x17, x15, 72, x18)

inst_277:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x680514 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x217bcd and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x80680514; op2val:0x217bcd; valaddr_reg:x16; val_offset:184; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 184, x17, x15, 80, x18)

inst_278:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x03592e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x680514 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x3592e; op2val:0x80680514; valaddr_reg:x16; val_offset:192; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 192, x17, x15, 88, x18)

inst_279:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x680514 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x03592e and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x80680514; op2val:0x3592e; valaddr_reg:x16; val_offset:200; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 200, x17, x15, 96, x18)

inst_280:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0a66e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x217bcd and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x800a66e8; op2val:0x217bcd; valaddr_reg:x16; val_offset:208; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 208, x17, x15, 104, x18)

inst_281:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x680514 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x28e67d and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x80680514; op2val:0x28e67d; valaddr_reg:x16; val_offset:216; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 216, x17, x15, 112, x18)

inst_282:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x04170c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x680514 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x4170c; op2val:0x80680514; valaddr_reg:x16; val_offset:224; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 224, x17, x15, 120, x18)

inst_283:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x680514 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x04170c and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x80680514; op2val:0x4170c; valaddr_reg:x16; val_offset:232; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 232, x17, x15, 128, x18)

inst_284:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0a66e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x28e67d and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x800a66e8; op2val:0x28e67d; valaddr_reg:x16; val_offset:240; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 240, x17, x15, 136, x18)

inst_285:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x680514 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3fb8a4 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x80680514; op2val:0x3fb8a4; valaddr_reg:x16; val_offset:248; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 248, x17, x15, 144, x18)

inst_286:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x065f43 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x680514 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x65f43; op2val:0x80680514; valaddr_reg:x16; val_offset:256; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 256, x17, x15, 152, x18)

inst_287:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x680514 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x065f43 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x80680514; op2val:0x65f43; valaddr_reg:x16; val_offset:264; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 264, x17, x15, 160, x18)

inst_288:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0a66e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3fb8a4 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x800a66e8; op2val:0x3fb8a4; valaddr_reg:x16; val_offset:272; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 272, x17, x15, 168, x18)

inst_289:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0a66e8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x010a4a and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x800a66e8; op2val:0x80010a4a; valaddr_reg:x16; val_offset:280; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 280, x17, x15, 176, x18)

inst_290:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x010a4a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00d7bf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x80010a4a; op2val:0xd7bf; valaddr_reg:x16; val_offset:288; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 288, x17, x15, 184, x18)

inst_291:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x086d76 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x010a4a and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x86d76; op2val:0x80010a4a; valaddr_reg:x16; val_offset:296; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 296, x17, x15, 192, x18)

inst_292:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x010a4a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x086d76 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x80010a4a; op2val:0x86d76; valaddr_reg:x16; val_offset:304; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 304, x17, x15, 200, x18)

inst_293:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0a66e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00d7bf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x800a66e8; op2val:0xd7bf; valaddr_reg:x16; val_offset:312; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 312, x17, x15, 208, x18)

inst_294:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x680514 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x17ad58 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x80680514; op2val:0x17ad58; valaddr_reg:x16; val_offset:320; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 320, x17, x15, 216, x18)

inst_295:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x025e22 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x680514 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x25e22; op2val:0x80680514; valaddr_reg:x16; val_offset:328; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 328, x17, x15, 224, x18)

inst_296:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x680514 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x025e22 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x80680514; op2val:0x25e22; valaddr_reg:x16; val_offset:336; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 336, x17, x15, 232, x18)

inst_297:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0a66e8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x17ad58 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x800a66e8; op2val:0x17ad58; valaddr_reg:x16; val_offset:344; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 344, x17, x15, 240, x18)

inst_298:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0a66e8 and fs2 == 1 and fe2 == 0xfd and fm2 == 0x0fbbb6 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x800a66e8; op2val:0xfe8fbbb6; valaddr_reg:x16; val_offset:352; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 352, x17, x15, 248, x18)

inst_299:// fs1 == 1 and fe1 == 0xfd and fm1 == 0x0fbbb6 and fs2 == 1 and fe2 == 0xfb and fm2 == 0x4aaeb1 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfe8fbbb6; op2val:0xfdcaaeb1; valaddr_reg:x16; val_offset:360; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 360, x17, x15, 256, x18)

inst_300:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x03aac2 and fs2 == 1 and fe2 == 0xfd and fm2 == 0x0fbbb6 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8003aac2; op2val:0xfe8fbbb6; valaddr_reg:x16; val_offset:368; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 368, x17, x15, 264, x18)

inst_301:// fs1 == 1 and fe1 == 0xfd and fm1 == 0x0fbbb6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x03aac2 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfe8fbbb6; op2val:0x8003aac2; valaddr_reg:x16; val_offset:376; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 376, x17, x15, 272, x18)

inst_302:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0a66e8 and fs2 == 1 and fe2 == 0xfb and fm2 == 0x4aaeb1 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x800a66e8; op2val:0xfdcaaeb1; valaddr_reg:x16; val_offset:384; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 384, x17, x15, 280, x18)

inst_303:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0a66e8 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x800a66e8; op2val:0xff7fffff; valaddr_reg:x16; val_offset:392; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 392, x17, x15, 288, x18)

inst_304:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x017489 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x80017489; op2val:0xff7fffff; valaddr_reg:x16; val_offset:400; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 400, x17, x15, 296, x18)

inst_305:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x017489 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff7fffff; op2val:0x80017489; valaddr_reg:x16; val_offset:408; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 408, x17, x15, 304, x18)

inst_306:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0a66e8 and fs2 == 1 and fe2 == 0xfd and fm2 == 0x491492 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x800a66e8; op2val:0xfec91492; valaddr_reg:x16; val_offset:416; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 416, x17, x15, 312, x18)

inst_307:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0220b7 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x800220b7; op2val:0xff7fffff; valaddr_reg:x16; val_offset:424; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 424, x17, x15, 320, x18)

inst_308:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0220b7 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff7fffff; op2val:0x800220b7; valaddr_reg:x16; val_offset:432; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 432, x17, x15, 328, x18)

inst_309:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0a66e8 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x130229 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x800a66e8; op2val:0xff130229; valaddr_reg:x16; val_offset:440; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 440, x17, x15, 336, x18)

inst_310:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0298ce and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x800298ce; op2val:0xff7fffff; valaddr_reg:x16; val_offset:448; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 448, x17, x15, 344, x18)

inst_311:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0298ce and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff7fffff; op2val:0x800298ce; valaddr_reg:x16; val_offset:456; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 456, x17, x15, 352, x18)

inst_312:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0a66e8 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x336b1f and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x800a66e8; op2val:0xff336b1f; valaddr_reg:x16; val_offset:464; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 464, x17, x15, 360, x18)

inst_313:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x01443f and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8001443f; op2val:0xff7fffff; valaddr_reg:x16; val_offset:472; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 472, x17, x15, 368, x18)

inst_314:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x01443f and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff7fffff; op2val:0x8001443f; valaddr_reg:x16; val_offset:480; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 480, x17, x15, 376, x18)

inst_315:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0a66e8 and fs2 == 1 and fe2 == 0xfd and fm2 == 0x2f0416 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x800a66e8; op2val:0xfeaf0416; valaddr_reg:x16; val_offset:488; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 488, x17, x15, 384, x18)

inst_316:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x01c3a8 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x1c3a8; op2val:0xff7fffff; valaddr_reg:x16; val_offset:496; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 496, x17, x15, 392, x18)

inst_317:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x01c3a8 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff7fffff; op2val:0x1c3a8; valaddr_reg:x16; val_offset:504; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 504, x17, x15, 400, x18)

inst_318:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0a66e8 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x73c956 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x800a66e8; op2val:0x7ef3c956; valaddr_reg:x16; val_offset:512; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 512, x17, x15, 408, x18)

inst_319:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x025314 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x25314; op2val:0xff7fffff; valaddr_reg:x16; val_offset:520; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 520, x17, x15, 416, x18)

inst_320:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x025314 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff7fffff; op2val:0x25314; valaddr_reg:x16; val_offset:528; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 528, x17, x15, 424, x18)

inst_321:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0a66e8 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x2099c0 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x800a66e8; op2val:0x7f2099c0; valaddr_reg:x16; val_offset:536; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 536, x17, x15, 432, x18)

inst_322:// fs1 == 1 and fe1 == 0xfd and fm1 == 0x0fbbb6 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x472f12 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfe8fbbb6; op2val:0x7e472f12; valaddr_reg:x16; val_offset:544; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 544, x17, x15, 440, x18)

inst_323:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x07351d and fs2 == 1 and fe2 == 0xfd and fm2 == 0x0fbbb6 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7351d; op2val:0xfe8fbbb6; valaddr_reg:x16; val_offset:552; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 552, x17, x15, 448, x18)

inst_324:// fs1 == 1 and fe1 == 0xfd and fm1 == 0x0fbbb6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x07351d and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfe8fbbb6; op2val:0x7351d; valaddr_reg:x16; val_offset:560; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 560, x17, x15, 456, x18)

inst_325:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0a66e8 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x472f12 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x800a66e8; op2val:0x7e472f12; valaddr_reg:x16; val_offset:568; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 568, x17, x15, 464, x18)

inst_326:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x01bd27 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x1bd27; op2val:0xff7fffff; valaddr_reg:x16; val_offset:576; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 576, x17, x15, 472, x18)

inst_327:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x01bd27 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff7fffff; op2val:0x1bd27; valaddr_reg:x16; val_offset:584; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 584, x17, x15, 480, x18)

inst_328:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0a66e8 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x7046ce and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x800a66e8; op2val:0x7ef046ce; valaddr_reg:x16; val_offset:592; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 592, x17, x15, 488, x18)

inst_329:// fs1 == 1 and fe1 == 0xfd and fm1 == 0x0fbbb6 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x36c1bf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfe8fbbb6; op2val:0x7e36c1bf; valaddr_reg:x16; val_offset:600; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 600, x17, x15, 496, x18)

inst_330:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x069cf1 and fs2 == 1 and fe2 == 0xfd and fm2 == 0x0fbbb6 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x69cf1; op2val:0xfe8fbbb6; valaddr_reg:x16; val_offset:608; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 608, x17, x15, 504, x18)

inst_331:// fs1 == 1 and fe1 == 0xfd and fm1 == 0x0fbbb6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x069cf1 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfe8fbbb6; op2val:0x69cf1; valaddr_reg:x16; val_offset:616; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 616, x17, x15, 512, x18)

inst_332:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0a66e8 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x36c1bf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x800a66e8; op2val:0x7e36c1bf; valaddr_reg:x16; val_offset:624; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 624, x17, x15, 520, x18)

inst_333:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x19595f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x19595f and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8019595f; op2val:0x8019595f; valaddr_reg:x16; val_offset:632; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 632, x17, x15, 528, x18)

inst_334:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x19595f and fs2 == 1 and fe2 == 0x80 and fm2 == 0x14fd1d and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8019595f; op2val:0xc014fd1d; valaddr_reg:x16; val_offset:640; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 640, x17, x15, 536, x18)

inst_335:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x19595f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x0007f0 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8019595f; op2val:0x7f0; valaddr_reg:x16; val_offset:648; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 648, x17, x15, 544, x18)

inst_336:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x19595f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0288ef and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8019595f; op2val:0x800288ef; valaddr_reg:x16; val_offset:656; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 656, x17, x15, 552, x18)

inst_337:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0288ef and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0a66e8 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x800288ef; op2val:0x800a66e8; valaddr_reg:x16; val_offset:664; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 664, x17, x15, 560, x18)

inst_338:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x19595f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0a66e8 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8019595f; op2val:0x800a66e8; valaddr_reg:x16; val_offset:672; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 672, x17, x15, 568, x18)

inst_339:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x19595f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x217bcd and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8019595f; op2val:0x217bcd; valaddr_reg:x16; val_offset:680; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 680, x17, x15, 576, x18)

inst_340:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x217bcd and fs2 == 1 and fe2 == 0x00 and fm2 == 0x19595f and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x217bcd; op2val:0x8019595f; valaddr_reg:x16; val_offset:688; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 688, x17, x15, 584, x18)

inst_341:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x19595f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x28e67d and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8019595f; op2val:0x28e67d; valaddr_reg:x16; val_offset:696; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 696, x17, x15, 592, x18)

inst_342:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x28e67d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x19595f and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x28e67d; op2val:0x8019595f; valaddr_reg:x16; val_offset:704; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 704, x17, x15, 600, x18)

inst_343:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x19595f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3fb8a4 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8019595f; op2val:0x3fb8a4; valaddr_reg:x16; val_offset:712; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 712, x17, x15, 608, x18)

inst_344:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x3fb8a4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x19595f and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x3fb8a4; op2val:0x8019595f; valaddr_reg:x16; val_offset:720; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 720, x17, x15, 616, x18)

inst_345:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x19595f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0040e4 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8019595f; op2val:0x800040e4; valaddr_reg:x16; val_offset:728; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 728, x17, x15, 624, x18)

inst_346:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0040e4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00d7bf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x800040e4; op2val:0xd7bf; valaddr_reg:x16; val_offset:736; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 736, x17, x15, 632, x18)

inst_347:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x5446a0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0040e4 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x5446a0; op2val:0x800040e4; valaddr_reg:x16; val_offset:744; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 744, x17, x15, 640, x18)

inst_348:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0040e4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5446a0 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x800040e4; op2val:0x5446a0; valaddr_reg:x16; val_offset:752; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 752, x17, x15, 648, x18)

inst_349:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x19595f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00d7bf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8019595f; op2val:0xd7bf; valaddr_reg:x16; val_offset:760; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 760, x17, x15, 656, x18)

inst_350:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x19595f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x17ad58 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8019595f; op2val:0x17ad58; valaddr_reg:x16; val_offset:768; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 768, x17, x15, 664, x18)

inst_351:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x17ad58 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x19595f and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x17ad58; op2val:0x8019595f; valaddr_reg:x16; val_offset:776; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 776, x17, x15, 672, x18)

inst_352:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x19595f and fs2 == 1 and fe2 == 0xfb and fm2 == 0x0c1bbb and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8019595f; op2val:0xfd8c1bbb; valaddr_reg:x16; val_offset:784; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 784, x17, x15, 680, x18)

inst_353:// fs1 == 1 and fe1 == 0xfb and fm1 == 0x0c1bbb and fs2 == 1 and fe2 == 0xfb and fm2 == 0x4aaeb1 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfd8c1bbb; op2val:0xfdcaaeb1; valaddr_reg:x16; val_offset:792; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 792, x17, x15, 688, x18)

inst_354:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x24ab9b and fs2 == 1 and fe2 == 0xfb and fm2 == 0x0c1bbb and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8024ab9b; op2val:0xfd8c1bbb; valaddr_reg:x16; val_offset:800; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 800, x17, x15, 696, x18)

inst_355:// fs1 == 1 and fe1 == 0xfb and fm1 == 0x0c1bbb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x24ab9b and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfd8c1bbb; op2val:0x8024ab9b; valaddr_reg:x16; val_offset:808; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 808, x17, x15, 704, x18)

inst_356:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x19595f and fs2 == 1 and fe2 == 0xfb and fm2 == 0x4aaeb1 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8019595f; op2val:0xfdcaaeb1; valaddr_reg:x16; val_offset:816; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 816, x17, x15, 712, x18)

inst_357:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x19595f and fs2 == 1 and fe2 == 0xfe and fm2 == 0x2f22aa and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8019595f; op2val:0xff2f22aa; valaddr_reg:x16; val_offset:824; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 824, x17, x15, 720, x18)

inst_358:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x2f22aa and fs2 == 1 and fe2 == 0xfd and fm2 == 0x491492 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff2f22aa; op2val:0xfec91492; valaddr_reg:x16; val_offset:832; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 832, x17, x15, 728, x18)

inst_359:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0e8d5c and fs2 == 1 and fe2 == 0xfe and fm2 == 0x2f22aa and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x800e8d5c; op2val:0xff2f22aa; valaddr_reg:x16; val_offset:840; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 840, x17, x15, 736, x18)

inst_360:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x2f22aa and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0e8d5c and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff2f22aa; op2val:0x800e8d5c; valaddr_reg:x16; val_offset:848; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 848, x17, x15, 744, x18)

inst_361:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x19595f and fs2 == 1 and fe2 == 0xfd and fm2 == 0x491492 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8019595f; op2val:0xfec91492; valaddr_reg:x16; val_offset:856; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 856, x17, x15, 752, x18)

inst_362:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x2f22aa and fs2 == 1 and fe2 == 0xfe and fm2 == 0x130229 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff2f22aa; op2val:0xff130229; valaddr_reg:x16; val_offset:864; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 864, x17, x15, 760, x18)

inst_363:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x15472c and fs2 == 1 and fe2 == 0xfe and fm2 == 0x2f22aa and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8015472c; op2val:0xff2f22aa; valaddr_reg:x16; val_offset:872; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 872, x17, x15, 768, x18)

inst_364:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x2f22aa and fs2 == 1 and fe2 == 0x00 and fm2 == 0x15472c and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff2f22aa; op2val:0x8015472c; valaddr_reg:x16; val_offset:880; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 880, x17, x15, 776, x18)

inst_365:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x19595f and fs2 == 1 and fe2 == 0xfe and fm2 == 0x130229 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8019595f; op2val:0xff130229; valaddr_reg:x16; val_offset:888; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 888, x17, x15, 784, x18)

inst_366:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x2f22aa and fs2 == 1 and fe2 == 0xfe and fm2 == 0x336b1f and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff2f22aa; op2val:0xff336b1f; valaddr_reg:x16; val_offset:896; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 896, x17, x15, 792, x18)

inst_367:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x19f813 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x2f22aa and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8019f813; op2val:0xff2f22aa; valaddr_reg:x16; val_offset:904; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 904, x17, x15, 800, x18)

inst_368:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x2f22aa and fs2 == 1 and fe2 == 0x00 and fm2 == 0x19f813 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff2f22aa; op2val:0x8019f813; valaddr_reg:x16; val_offset:912; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 912, x17, x15, 808, x18)

inst_369:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x19595f and fs2 == 1 and fe2 == 0xfe and fm2 == 0x336b1f and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8019595f; op2val:0xff336b1f; valaddr_reg:x16; val_offset:920; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 920, x17, x15, 816, x18)

inst_370:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x2f22aa and fs2 == 1 and fe2 == 0xfd and fm2 == 0x2f0416 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff2f22aa; op2val:0xfeaf0416; valaddr_reg:x16; val_offset:928; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 928, x17, x15, 824, x18)

inst_371:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0caa79 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x2f22aa and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x800caa79; op2val:0xff2f22aa; valaddr_reg:x16; val_offset:936; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 936, x17, x15, 832, x18)

inst_372:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x2f22aa and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0caa79 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff2f22aa; op2val:0x800caa79; valaddr_reg:x16; val_offset:944; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 944, x17, x15, 840, x18)

inst_373:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x19595f and fs2 == 1 and fe2 == 0xfd and fm2 == 0x2f0416 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8019595f; op2val:0xfeaf0416; valaddr_reg:x16; val_offset:952; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 952, x17, x15, 848, x18)

inst_374:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x2f22aa and fs2 == 0 and fe2 == 0xfd and fm2 == 0x73c956 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff2f22aa; op2val:0x7ef3c956; valaddr_reg:x16; val_offset:960; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 960, x17, x15, 856, x18)

inst_375:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x11a491 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x2f22aa and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x11a491; op2val:0xff2f22aa; valaddr_reg:x16; val_offset:968; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 968, x17, x15, 864, x18)

inst_376:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x2f22aa and fs2 == 0 and fe2 == 0x00 and fm2 == 0x11a491 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff2f22aa; op2val:0x11a491; valaddr_reg:x16; val_offset:976; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 976, x17, x15, 872, x18)

inst_377:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x19595f and fs2 == 0 and fe2 == 0xfd and fm2 == 0x73c956 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8019595f; op2val:0x7ef3c956; valaddr_reg:x16; val_offset:984; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 984, x17, x15, 880, x18)

inst_378:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x2f22aa and fs2 == 0 and fe2 == 0xfe and fm2 == 0x2099c0 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff2f22aa; op2val:0x7f2099c0; valaddr_reg:x16; val_offset:992; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 992, x17, x15, 888, x18)

inst_379:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x173ecf and fs2 == 1 and fe2 == 0xfe and fm2 == 0x2f22aa and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x173ecf; op2val:0xff2f22aa; valaddr_reg:x16; val_offset:1000; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1000, x17, x15, 896, x18)

inst_380:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x2f22aa and fs2 == 0 and fe2 == 0x00 and fm2 == 0x173ecf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff2f22aa; op2val:0x173ecf; valaddr_reg:x16; val_offset:1008; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1008, x17, x15, 904, x18)

inst_381:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x19595f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x2099c0 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8019595f; op2val:0x7f2099c0; valaddr_reg:x16; val_offset:1016; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1016, x17, x15, 912, x18)

inst_382:// fs1 == 1 and fe1 == 0xfb and fm1 == 0x0c1bbb and fs2 == 0 and fe2 == 0xfc and fm2 == 0x472f12 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfd8c1bbb; op2val:0x7e472f12; valaddr_reg:x16; val_offset:1024; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1024, x17, x15, 920, x18)

inst_383:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x481322 and fs2 == 1 and fe2 == 0xfb and fm2 == 0x0c1bbb and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x481322; op2val:0xfd8c1bbb; valaddr_reg:x16; val_offset:1032; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1032, x17, x15, 928, x18)

inst_384:// fs1 == 1 and fe1 == 0xfb and fm1 == 0x0c1bbb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x481322 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfd8c1bbb; op2val:0x481322; valaddr_reg:x16; val_offset:1040; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1040, x17, x15, 936, x18)

inst_385:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x19595f and fs2 == 0 and fe2 == 0xfc and fm2 == 0x472f12 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8019595f; op2val:0x7e472f12; valaddr_reg:x16; val_offset:1048; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1048, x17, x15, 944, x18)

inst_386:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x2f22aa and fs2 == 0 and fe2 == 0xfd and fm2 == 0x7046ce and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff2f22aa; op2val:0x7ef046ce; valaddr_reg:x16; val_offset:1056; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1056, x17, x15, 952, x18)

inst_387:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x11638a and fs2 == 1 and fe2 == 0xfe and fm2 == 0x2f22aa and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x11638a; op2val:0xff2f22aa; valaddr_reg:x16; val_offset:1064; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1064, x17, x15, 960, x18)

inst_388:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x2f22aa and fs2 == 0 and fe2 == 0x00 and fm2 == 0x11638a and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff2f22aa; op2val:0x11638a; valaddr_reg:x16; val_offset:1072; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1072, x17, x15, 968, x18)

inst_389:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x19595f and fs2 == 0 and fe2 == 0xfd and fm2 == 0x7046ce and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8019595f; op2val:0x7ef046ce; valaddr_reg:x16; val_offset:1080; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1080, x17, x15, 976, x18)

inst_390:// fs1 == 1 and fe1 == 0xfb and fm1 == 0x0c1bbb and fs2 == 0 and fe2 == 0xfc and fm2 == 0x36c1bf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfd8c1bbb; op2val:0x7e36c1bf; valaddr_reg:x16; val_offset:1088; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1088, x17, x15, 984, x18)

inst_391:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x42216f and fs2 == 1 and fe2 == 0xfb and fm2 == 0x0c1bbb and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x42216f; op2val:0xfd8c1bbb; valaddr_reg:x16; val_offset:1096; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1096, x17, x15, 992, x18)

inst_392:// fs1 == 1 and fe1 == 0xfb and fm1 == 0x0c1bbb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x42216f and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfd8c1bbb; op2val:0x42216f; valaddr_reg:x16; val_offset:1104; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1104, x17, x15, 1000, x18)

inst_393:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x19595f and fs2 == 0 and fe2 == 0xfc and fm2 == 0x36c1bf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8019595f; op2val:0x7e36c1bf; valaddr_reg:x16; val_offset:1112; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1112, x17, x15, 1008, x18)

inst_394:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x217bcd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x217bcd and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x217bcd; op2val:0x217bcd; valaddr_reg:x16; val_offset:1120; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1120, x17, x15, 1016, x18)

inst_395:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x217bcd and fs2 == 0 and fe2 == 0x80 and fm2 == 0x44cc84 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x217bcd; op2val:0x4044cc84; valaddr_reg:x16; val_offset:1128; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1128, x17, x15, 1024, x18)

inst_396:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x217bcd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x0007f0 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x217bcd; op2val:0x7f0; valaddr_reg:x16; val_offset:1136; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1136, x17, x15, 1032, x18)

inst_397:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x217bcd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x03592e and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x217bcd; op2val:0x3592e; valaddr_reg:x16; val_offset:1144; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1144, x17, x15, 1040, x18)

inst_398:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x03592e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0a66e8 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x3592e; op2val:0x800a66e8; valaddr_reg:x16; val_offset:1152; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1152, x17, x15, 1048, x18)

inst_399:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x217bcd and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0a66e8 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x217bcd; op2val:0x800a66e8; valaddr_reg:x16; val_offset:1160; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1160, x17, x15, 1056, x18)

inst_400:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x217bcd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x28e67d and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x217bcd; op2val:0x28e67d; valaddr_reg:x16; val_offset:1168; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1168, x17, x15, 1064, x18)

inst_401:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x28e67d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x217bcd and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x28e67d; op2val:0x217bcd; valaddr_reg:x16; val_offset:1176; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1176, x17, x15, 1072, x18)

inst_402:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x217bcd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3fb8a4 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x217bcd; op2val:0x3fb8a4; valaddr_reg:x16; val_offset:1184; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1184, x17, x15, 1080, x18)

inst_403:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x3fb8a4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x217bcd and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x3fb8a4; op2val:0x217bcd; valaddr_reg:x16; val_offset:1192; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1192, x17, x15, 1088, x18)

inst_404:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x217bcd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x0055b7 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x217bcd; op2val:0x55b7; valaddr_reg:x16; val_offset:1200; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1200, x17, x15, 1096, x18)

inst_405:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x0055b7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00d7bf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x55b7; op2val:0xd7bf; valaddr_reg:x16; val_offset:1208; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1208, x17, x15, 1104, x18)

inst_406:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x5446a0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x0055b7 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x5446a0; op2val:0x55b7; valaddr_reg:x16; val_offset:1216; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1216, x17, x15, 1112, x18)

inst_407:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x0055b7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5446a0 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x55b7; op2val:0x5446a0; valaddr_reg:x16; val_offset:1224; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1224, x17, x15, 1120, x18)

inst_408:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x217bcd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00d7bf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x217bcd; op2val:0xd7bf; valaddr_reg:x16; val_offset:1232; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1232, x17, x15, 1128, x18)

inst_409:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x217bcd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x17ad58 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x217bcd; op2val:0x17ad58; valaddr_reg:x16; val_offset:1240; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1240, x17, x15, 1136, x18)

inst_410:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x17ad58 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x217bcd and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x17ad58; op2val:0x217bcd; valaddr_reg:x16; val_offset:1248; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1248, x17, x15, 1144, x18)

inst_411:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x217bcd and fs2 == 0 and fe2 == 0xfb and fm2 == 0x39119c and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x217bcd; op2val:0x7db9119c; valaddr_reg:x16; val_offset:1256; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1256, x17, x15, 1152, x18)

inst_412:// fs1 == 0 and fe1 == 0xfb and fm1 == 0x39119c and fs2 == 1 and fe2 == 0xfb and fm2 == 0x4aaeb1 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7db9119c; op2val:0xfdcaaeb1; valaddr_reg:x16; val_offset:1264; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1264, x17, x15, 1160, x18)

inst_413:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x24ab9b and fs2 == 0 and fe2 == 0xfb and fm2 == 0x39119c and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8024ab9b; op2val:0x7db9119c; valaddr_reg:x16; val_offset:1272; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1272, x17, x15, 1168, x18)

inst_414:// fs1 == 0 and fe1 == 0xfb and fm1 == 0x39119c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x24ab9b and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7db9119c; op2val:0x8024ab9b; valaddr_reg:x16; val_offset:1280; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1280, x17, x15, 1176, x18)

inst_415:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x217bcd and fs2 == 1 and fe2 == 0xfb and fm2 == 0x4aaeb1 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x217bcd; op2val:0xfdcaaeb1; valaddr_reg:x16; val_offset:1288; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1288, x17, x15, 1184, x18)

inst_416:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x217bcd and fs2 == 0 and fe2 == 0xfe and fm2 == 0x675603 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x217bcd; op2val:0x7f675603; valaddr_reg:x16; val_offset:1296; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1296, x17, x15, 1192, x18)

inst_417:// fs1 == 0 and fe1 == 0xfe and fm1 == 0x675603 and fs2 == 1 and fe2 == 0xfd and fm2 == 0x491492 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f675603; op2val:0xfec91492; valaddr_reg:x16; val_offset:1304; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1304, x17, x15, 1200, x18)

inst_418:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0e8d5c and fs2 == 0 and fe2 == 0xfe and fm2 == 0x675603 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x800e8d5c; op2val:0x7f675603; valaddr_reg:x16; val_offset:1312; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1312, x17, x15, 1208, x18)

inst_419:// fs1 == 0 and fe1 == 0xfe and fm1 == 0x675603 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0e8d5c and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f675603; op2val:0x800e8d5c; valaddr_reg:x16; val_offset:1320; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1320, x17, x15, 1216, x18)

inst_420:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x217bcd and fs2 == 1 and fe2 == 0xfd and fm2 == 0x491492 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x217bcd; op2val:0xfec91492; valaddr_reg:x16; val_offset:1328; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1328, x17, x15, 1224, x18)

inst_421:// fs1 == 0 and fe1 == 0xfe and fm1 == 0x675603 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x130229 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f675603; op2val:0xff130229; valaddr_reg:x16; val_offset:1336; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1336, x17, x15, 1232, x18)

inst_422:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x15472c and fs2 == 0 and fe2 == 0xfe and fm2 == 0x675603 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8015472c; op2val:0x7f675603; valaddr_reg:x16; val_offset:1344; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1344, x17, x15, 1240, x18)

inst_423:// fs1 == 0 and fe1 == 0xfe and fm1 == 0x675603 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x15472c and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f675603; op2val:0x8015472c; valaddr_reg:x16; val_offset:1352; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1352, x17, x15, 1248, x18)

inst_424:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x217bcd and fs2 == 1 and fe2 == 0xfe and fm2 == 0x130229 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x217bcd; op2val:0xff130229; valaddr_reg:x16; val_offset:1360; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1360, x17, x15, 1256, x18)

inst_425:// fs1 == 0 and fe1 == 0xfe and fm1 == 0x675603 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x336b1f and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f675603; op2val:0xff336b1f; valaddr_reg:x16; val_offset:1368; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1368, x17, x15, 1264, x18)

inst_426:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x19f813 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x675603 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8019f813; op2val:0x7f675603; valaddr_reg:x16; val_offset:1376; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1376, x17, x15, 1272, x18)

inst_427:// fs1 == 0 and fe1 == 0xfe and fm1 == 0x675603 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x19f813 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f675603; op2val:0x8019f813; valaddr_reg:x16; val_offset:1384; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1384, x17, x15, 1280, x18)

inst_428:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x217bcd and fs2 == 1 and fe2 == 0xfe and fm2 == 0x336b1f and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x217bcd; op2val:0xff336b1f; valaddr_reg:x16; val_offset:1392; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1392, x17, x15, 1288, x18)

inst_429:// fs1 == 0 and fe1 == 0xfe and fm1 == 0x675603 and fs2 == 1 and fe2 == 0xfd and fm2 == 0x2f0416 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f675603; op2val:0xfeaf0416; valaddr_reg:x16; val_offset:1400; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1400, x17, x15, 1296, x18)

inst_430:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0caa79 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x675603 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x800caa79; op2val:0x7f675603; valaddr_reg:x16; val_offset:1408; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1408, x17, x15, 1304, x18)

inst_431:// fs1 == 0 and fe1 == 0xfe and fm1 == 0x675603 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0caa79 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f675603; op2val:0x800caa79; valaddr_reg:x16; val_offset:1416; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1416, x17, x15, 1312, x18)

inst_432:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x217bcd and fs2 == 1 and fe2 == 0xfd and fm2 == 0x2f0416 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x217bcd; op2val:0xfeaf0416; valaddr_reg:x16; val_offset:1424; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1424, x17, x15, 1320, x18)

inst_433:// fs1 == 0 and fe1 == 0xfe and fm1 == 0x675603 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x73c956 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f675603; op2val:0x7ef3c956; valaddr_reg:x16; val_offset:1432; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1432, x17, x15, 1328, x18)

inst_434:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x11a491 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x675603 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x11a491; op2val:0x7f675603; valaddr_reg:x16; val_offset:1440; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1440, x17, x15, 1336, x18)

inst_435:// fs1 == 0 and fe1 == 0xfe and fm1 == 0x675603 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x11a491 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f675603; op2val:0x11a491; valaddr_reg:x16; val_offset:1448; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1448, x17, x15, 1344, x18)

inst_436:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x217bcd and fs2 == 0 and fe2 == 0xfd and fm2 == 0x73c956 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x217bcd; op2val:0x7ef3c956; valaddr_reg:x16; val_offset:1456; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1456, x17, x15, 1352, x18)

inst_437:// fs1 == 0 and fe1 == 0xfe and fm1 == 0x675603 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x2099c0 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f675603; op2val:0x7f2099c0; valaddr_reg:x16; val_offset:1464; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1464, x17, x15, 1360, x18)

inst_438:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x173ecf and fs2 == 0 and fe2 == 0xfe and fm2 == 0x675603 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x173ecf; op2val:0x7f675603; valaddr_reg:x16; val_offset:1472; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1472, x17, x15, 1368, x18)

inst_439:// fs1 == 0 and fe1 == 0xfe and fm1 == 0x675603 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x173ecf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f675603; op2val:0x173ecf; valaddr_reg:x16; val_offset:1480; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1480, x17, x15, 1376, x18)

inst_440:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x217bcd and fs2 == 0 and fe2 == 0xfe and fm2 == 0x2099c0 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x217bcd; op2val:0x7f2099c0; valaddr_reg:x16; val_offset:1488; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1488, x17, x15, 1384, x18)

inst_441:// fs1 == 0 and fe1 == 0xfb and fm1 == 0x39119c and fs2 == 0 and fe2 == 0xfc and fm2 == 0x472f12 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7db9119c; op2val:0x7e472f12; valaddr_reg:x16; val_offset:1496; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1496, x17, x15, 1392, x18)

inst_442:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x481322 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x39119c and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x481322; op2val:0x7db9119c; valaddr_reg:x16; val_offset:1504; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1504, x17, x15, 1400, x18)

inst_443:// fs1 == 0 and fe1 == 0xfb and fm1 == 0x39119c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x481322 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7db9119c; op2val:0x481322; valaddr_reg:x16; val_offset:1512; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1512, x17, x15, 1408, x18)

inst_444:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x217bcd and fs2 == 0 and fe2 == 0xfc and fm2 == 0x472f12 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x217bcd; op2val:0x7e472f12; valaddr_reg:x16; val_offset:1520; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1520, x17, x15, 1416, x18)

inst_445:// fs1 == 0 and fe1 == 0xfe and fm1 == 0x675603 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x7046ce and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f675603; op2val:0x7ef046ce; valaddr_reg:x16; val_offset:1528; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1528, x17, x15, 1424, x18)

inst_446:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x11638a and fs2 == 0 and fe2 == 0xfe and fm2 == 0x675603 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x11638a; op2val:0x7f675603; valaddr_reg:x16; val_offset:1536; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1536, x17, x15, 1432, x18)

inst_447:// fs1 == 0 and fe1 == 0xfe and fm1 == 0x675603 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x11638a and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f675603; op2val:0x11638a; valaddr_reg:x16; val_offset:1544; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1544, x17, x15, 1440, x18)

inst_448:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x217bcd and fs2 == 0 and fe2 == 0xfd and fm2 == 0x7046ce and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x217bcd; op2val:0x7ef046ce; valaddr_reg:x16; val_offset:1552; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1552, x17, x15, 1448, x18)

inst_449:// fs1 == 0 and fe1 == 0xfb and fm1 == 0x39119c and fs2 == 0 and fe2 == 0xfc and fm2 == 0x36c1bf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7db9119c; op2val:0x7e36c1bf; valaddr_reg:x16; val_offset:1560; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1560, x17, x15, 1456, x18)

inst_450:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x42216f and fs2 == 0 and fe2 == 0xfb and fm2 == 0x39119c and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x42216f; op2val:0x7db9119c; valaddr_reg:x16; val_offset:1568; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1568, x17, x15, 1464, x18)

inst_451:// fs1 == 0 and fe1 == 0xfb and fm1 == 0x39119c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x42216f and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7db9119c; op2val:0x42216f; valaddr_reg:x16; val_offset:1576; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1576, x17, x15, 1472, x18)

inst_452:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x217bcd and fs2 == 0 and fe2 == 0xfc and fm2 == 0x36c1bf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x217bcd; op2val:0x7e36c1bf; valaddr_reg:x16; val_offset:1584; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1584, x17, x15, 1480, x18)

inst_453:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x28e67d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x28e67d and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x28e67d; op2val:0x28e67d; valaddr_reg:x16; val_offset:1592; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1592, x17, x15, 1488, x18)

inst_454:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x28e67d and fs2 == 0 and fe2 == 0x80 and fm2 == 0x706405 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x28e67d; op2val:0x40706405; valaddr_reg:x16; val_offset:1600; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1600, x17, x15, 1496, x18)

inst_455:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x28e67d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x0007f0 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x28e67d; op2val:0x7f0; valaddr_reg:x16; val_offset:1608; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1608, x17, x15, 1504, x18)

inst_456:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x28e67d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x04170c and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x28e67d; op2val:0x4170c; valaddr_reg:x16; val_offset:1616; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1616, x17, x15, 1512, x18)

inst_457:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x04170c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0a66e8 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x4170c; op2val:0x800a66e8; valaddr_reg:x16; val_offset:1624; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1624, x17, x15, 1520, x18)

inst_458:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x28e67d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0a66e8 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x28e67d; op2val:0x800a66e8; valaddr_reg:x16; val_offset:1632; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1632, x17, x15, 1528, x18)

inst_459:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x28e67d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3fb8a4 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x28e67d; op2val:0x3fb8a4; valaddr_reg:x16; val_offset:1640; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1640, x17, x15, 1536, x18)

inst_460:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x3fb8a4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x28e67d and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x3fb8a4; op2val:0x28e67d; valaddr_reg:x16; val_offset:1648; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1648, x17, x15, 1544, x18)

inst_461:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x28e67d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x0068b4 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x28e67d; op2val:0x68b4; valaddr_reg:x16; val_offset:1656; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1656, x17, x15, 1552, x18)

inst_462:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x0068b4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00d7bf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x68b4; op2val:0xd7bf; valaddr_reg:x16; val_offset:1664; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1664, x17, x15, 1560, x18)

inst_463:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x5446a0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x0068b4 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x5446a0; op2val:0x68b4; valaddr_reg:x16; val_offset:1672; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1672, x17, x15, 1568, x18)

inst_464:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x0068b4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5446a0 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x68b4; op2val:0x5446a0; valaddr_reg:x16; val_offset:1680; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1680, x17, x15, 1576, x18)

inst_465:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x28e67d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00d7bf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x28e67d; op2val:0xd7bf; valaddr_reg:x16; val_offset:1688; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1688, x17, x15, 1584, x18)

inst_466:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x28e67d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x17ad58 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x28e67d; op2val:0x17ad58; valaddr_reg:x16; val_offset:1696; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1696, x17, x15, 1592, x18)

inst_467:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x17ad58 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x28e67d and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x17ad58; op2val:0x28e67d; valaddr_reg:x16; val_offset:1704; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1704, x17, x15, 1600, x18)

inst_468:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x28e67d and fs2 == 0 and fe2 == 0xfb and fm2 == 0x620ff4 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x28e67d; op2val:0x7de20ff4; valaddr_reg:x16; val_offset:1712; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1712, x17, x15, 1608, x18)

inst_469:// fs1 == 0 and fe1 == 0xfb and fm1 == 0x620ff4 and fs2 == 1 and fe2 == 0xfb and fm2 == 0x4aaeb1 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7de20ff4; op2val:0xfdcaaeb1; valaddr_reg:x16; val_offset:1720; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1720, x17, x15, 1616, x18)

inst_470:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x24ab9b and fs2 == 0 and fe2 == 0xfb and fm2 == 0x620ff4 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8024ab9b; op2val:0x7de20ff4; valaddr_reg:x16; val_offset:1728; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1728, x17, x15, 1624, x18)

inst_471:// fs1 == 0 and fe1 == 0xfb and fm1 == 0x620ff4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x24ab9b and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7de20ff4; op2val:0x8024ab9b; valaddr_reg:x16; val_offset:1736; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1736, x17, x15, 1632, x18)

inst_472:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x28e67d and fs2 == 1 and fe2 == 0xfb and fm2 == 0x4aaeb1 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x28e67d; op2val:0xfdcaaeb1; valaddr_reg:x16; val_offset:1744; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1744, x17, x15, 1640, x18)

inst_473:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x28e67d and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x28e67d; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1752; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1752, x17, x15, 1648, x18)

inst_474:// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfd and fm2 == 0x491492 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f7fffff; op2val:0xfec91492; valaddr_reg:x16; val_offset:1760; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1760, x17, x15, 1656, x18)

inst_475:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0e8d5c and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x800e8d5c; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1768; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1768, x17, x15, 1664, x18)

inst_476:// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0e8d5c and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f7fffff; op2val:0x800e8d5c; valaddr_reg:x16; val_offset:1776; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1776, x17, x15, 1672, x18)

inst_477:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x28e67d and fs2 == 1 and fe2 == 0xfd and fm2 == 0x491492 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x28e67d; op2val:0xfec91492; valaddr_reg:x16; val_offset:1784; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1784, x17, x15, 1680, x18)

inst_478:// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x130229 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f7fffff; op2val:0xff130229; valaddr_reg:x16; val_offset:1792; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1792, x17, x15, 1688, x18)

inst_479:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x15472c and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8015472c; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1800; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1800, x17, x15, 1696, x18)

inst_480:// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x15472c and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f7fffff; op2val:0x8015472c; valaddr_reg:x16; val_offset:1808; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1808, x17, x15, 1704, x18)

inst_481:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x28e67d and fs2 == 1 and fe2 == 0xfe and fm2 == 0x130229 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x28e67d; op2val:0xff130229; valaddr_reg:x16; val_offset:1816; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1816, x17, x15, 1712, x18)

inst_482:// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfe and fm2 == 0x336b1f and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f7fffff; op2val:0xff336b1f; valaddr_reg:x16; val_offset:1824; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1824, x17, x15, 1720, x18)

inst_483:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x19f813 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8019f813; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1832; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1832, x17, x15, 1728, x18)

inst_484:// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x19f813 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f7fffff; op2val:0x8019f813; valaddr_reg:x16; val_offset:1840; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1840, x17, x15, 1736, x18)

inst_485:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x28e67d and fs2 == 1 and fe2 == 0xfe and fm2 == 0x336b1f and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x28e67d; op2val:0xff336b1f; valaddr_reg:x16; val_offset:1848; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1848, x17, x15, 1744, x18)

inst_486:// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfd and fm2 == 0x2f0416 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f7fffff; op2val:0xfeaf0416; valaddr_reg:x16; val_offset:1856; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1856, x17, x15, 1752, x18)

inst_487:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0caa79 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x800caa79; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1864; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1864, x17, x15, 1760, x18)

inst_488:// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0caa79 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f7fffff; op2val:0x800caa79; valaddr_reg:x16; val_offset:1872; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1872, x17, x15, 1768, x18)

inst_489:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x28e67d and fs2 == 1 and fe2 == 0xfd and fm2 == 0x2f0416 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x28e67d; op2val:0xfeaf0416; valaddr_reg:x16; val_offset:1880; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1880, x17, x15, 1776, x18)

inst_490:// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfd and fm2 == 0x73c956 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f7fffff; op2val:0x7ef3c956; valaddr_reg:x16; val_offset:1888; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1888, x17, x15, 1784, x18)

inst_491:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x11a491 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x11a491; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1896; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1896, x17, x15, 1792, x18)

inst_492:// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x11a491 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f7fffff; op2val:0x11a491; valaddr_reg:x16; val_offset:1904; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1904, x17, x15, 1800, x18)

inst_493:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x28e67d and fs2 == 0 and fe2 == 0xfd and fm2 == 0x73c956 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x28e67d; op2val:0x7ef3c956; valaddr_reg:x16; val_offset:1912; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1912, x17, x15, 1808, x18)

inst_494:// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfe and fm2 == 0x2099c0 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f7fffff; op2val:0x7f2099c0; valaddr_reg:x16; val_offset:1920; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1920, x17, x15, 1816, x18)

inst_495:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x173ecf and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x173ecf; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1928; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1928, x17, x15, 1824, x18)

inst_496:// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x173ecf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f7fffff; op2val:0x173ecf; valaddr_reg:x16; val_offset:1936; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1936, x17, x15, 1832, x18)

inst_497:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x28e67d and fs2 == 0 and fe2 == 0xfe and fm2 == 0x2099c0 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x28e67d; op2val:0x7f2099c0; valaddr_reg:x16; val_offset:1944; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1944, x17, x15, 1840, x18)

inst_498:// fs1 == 0 and fe1 == 0xfb and fm1 == 0x620ff4 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x472f12 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7de20ff4; op2val:0x7e472f12; valaddr_reg:x16; val_offset:1952; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1952, x17, x15, 1848, x18)

inst_499:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x481322 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x620ff4 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x481322; op2val:0x7de20ff4; valaddr_reg:x16; val_offset:1960; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1960, x17, x15, 1856, x18)

inst_500:// fs1 == 0 and fe1 == 0xfb and fm1 == 0x620ff4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x481322 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7de20ff4; op2val:0x481322; valaddr_reg:x16; val_offset:1968; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1968, x17, x15, 1864, x18)

inst_501:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x28e67d and fs2 == 0 and fe2 == 0xfc and fm2 == 0x472f12 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x28e67d; op2val:0x7e472f12; valaddr_reg:x16; val_offset:1976; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1976, x17, x15, 1872, x18)

inst_502:// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfd and fm2 == 0x7046ce and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f7fffff; op2val:0x7ef046ce; valaddr_reg:x16; val_offset:1984; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1984, x17, x15, 1880, x18)

inst_503:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x11638a and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x11638a; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1992; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1992, x17, x15, 1888, x18)

inst_504:// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x11638a and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f7fffff; op2val:0x11638a; valaddr_reg:x16; val_offset:2000; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 2000, x17, x15, 1896, x18)

inst_505:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x28e67d and fs2 == 0 and fe2 == 0xfd and fm2 == 0x7046ce and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x28e67d; op2val:0x7ef046ce; valaddr_reg:x16; val_offset:2008; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 2008, x17, x15, 1904, x18)

inst_506:// fs1 == 0 and fe1 == 0xfb and fm1 == 0x620ff4 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x36c1bf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7de20ff4; op2val:0x7e36c1bf; valaddr_reg:x16; val_offset:2016; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 2016, x17, x15, 1912, x18)

inst_507:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x42216f and fs2 == 0 and fe2 == 0xfb and fm2 == 0x620ff4 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x42216f; op2val:0x7de20ff4; valaddr_reg:x16; val_offset:2024; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 2024, x17, x15, 1920, x18)
addi x16,x16,2032

inst_508:// fs1 == 0 and fe1 == 0xfb and fm1 == 0x620ff4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x42216f and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7de20ff4; op2val:0x42216f; valaddr_reg:x16; val_offset:0; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 0, x17, x15, 1928, x18)

inst_509:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x28e67d and fs2 == 0 and fe2 == 0xfc and fm2 == 0x36c1bf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x28e67d; op2val:0x7e36c1bf; valaddr_reg:x16; val_offset:8; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 8, x17, x15, 1936, x18)

inst_510:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x3fb8a4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3fb8a4 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x3fb8a4; op2val:0x3fb8a4; valaddr_reg:x16; val_offset:16; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 16, x17, x15, 1944, x18)

inst_511:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x3fb8a4 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x3b428c and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x3fb8a4; op2val:0x40bb428c; valaddr_reg:x16; val_offset:24; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 24, x17, x15, 1952, x18)

inst_512:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x3fb8a4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x0007f0 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x3fb8a4; op2val:0x7f0; valaddr_reg:x16; val_offset:32; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 32, x17, x15, 1960, x18)

inst_513:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x3fb8a4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x065f43 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x3fb8a4; op2val:0x65f43; valaddr_reg:x16; val_offset:40; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 40, x17, x15, 1968, x18)

inst_514:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x065f43 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0a66e8 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x65f43; op2val:0x800a66e8; valaddr_reg:x16; val_offset:48; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 48, x17, x15, 1976, x18)

inst_515:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x3fb8a4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0a66e8 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x3fb8a4; op2val:0x800a66e8; valaddr_reg:x16; val_offset:56; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 56, x17, x15, 1984, x18)

inst_516:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x3fb8a4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00a320 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x3fb8a4; op2val:0xa320; valaddr_reg:x16; val_offset:64; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 64, x17, x15, 1992, x18)

inst_517:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00a320 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00d7bf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xa320; op2val:0xd7bf; valaddr_reg:x16; val_offset:72; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 72, x17, x15, 2000, x18)

inst_518:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x5446a0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00a320 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x5446a0; op2val:0xa320; valaddr_reg:x16; val_offset:80; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 80, x17, x15, 2008, x18)

inst_519:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00a320 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5446a0 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xa320; op2val:0x5446a0; valaddr_reg:x16; val_offset:88; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 88, x17, x15, 2016, x18)

inst_520:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x3fb8a4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00d7bf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x3fb8a4; op2val:0xd7bf; valaddr_reg:x16; val_offset:96; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 96, x17, x15, 2024, x18)
RVTEST_SIGBASE(x15,signature_x15_5)

inst_521:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x3fb8a4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x17ad58 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x3fb8a4; op2val:0x17ad58; valaddr_reg:x16; val_offset:104; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 104, x17, x15, 0, x18)

inst_522:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x17ad58 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3fb8a4 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x17ad58; op2val:0x3fb8a4; valaddr_reg:x16; val_offset:112; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 112, x17, x15, 8, x18)

inst_523:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x3fb8a4 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x301931 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x3fb8a4; op2val:0x7e301931; valaddr_reg:x16; val_offset:120; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 120, x17, x15, 16, x18)

inst_524:// fs1 == 0 and fe1 == 0xfc and fm1 == 0x301931 and fs2 == 1 and fe2 == 0xfb and fm2 == 0x4aaeb1 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7e301931; op2val:0xfdcaaeb1; valaddr_reg:x16; val_offset:128; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 128, x17, x15, 24, x18)

inst_525:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x24ab9b and fs2 == 0 and fe2 == 0xfc and fm2 == 0x301931 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8024ab9b; op2val:0x7e301931; valaddr_reg:x16; val_offset:136; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 136, x17, x15, 32, x18)

inst_526:// fs1 == 0 and fe1 == 0xfc and fm1 == 0x301931 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x24ab9b and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7e301931; op2val:0x8024ab9b; valaddr_reg:x16; val_offset:144; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 144, x17, x15, 40, x18)

inst_527:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x3fb8a4 and fs2 == 1 and fe2 == 0xfb and fm2 == 0x4aaeb1 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x3fb8a4; op2val:0xfdcaaeb1; valaddr_reg:x16; val_offset:152; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 152, x17, x15, 48, x18)

inst_528:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x3fb8a4 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x3fb8a4; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:160; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 160, x17, x15, 56, x18)

inst_529:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x3fb8a4 and fs2 == 1 and fe2 == 0xfd and fm2 == 0x491492 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x3fb8a4; op2val:0xfec91492; valaddr_reg:x16; val_offset:168; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 168, x17, x15, 64, x18)

inst_530:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x3fb8a4 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x130229 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x3fb8a4; op2val:0xff130229; valaddr_reg:x16; val_offset:176; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 176, x17, x15, 72, x18)

inst_531:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x3fb8a4 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x336b1f and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x3fb8a4; op2val:0xff336b1f; valaddr_reg:x16; val_offset:184; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 184, x17, x15, 80, x18)

inst_532:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x3fb8a4 and fs2 == 1 and fe2 == 0xfd and fm2 == 0x2f0416 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x3fb8a4; op2val:0xfeaf0416; valaddr_reg:x16; val_offset:192; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 192, x17, x15, 88, x18)

inst_533:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x3fb8a4 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x73c956 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x3fb8a4; op2val:0x7ef3c956; valaddr_reg:x16; val_offset:200; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 200, x17, x15, 96, x18)

inst_534:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x3fb8a4 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x2099c0 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x3fb8a4; op2val:0x7f2099c0; valaddr_reg:x16; val_offset:208; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 208, x17, x15, 104, x18)

inst_535:// fs1 == 0 and fe1 == 0xfc and fm1 == 0x301931 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x472f12 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7e301931; op2val:0x7e472f12; valaddr_reg:x16; val_offset:216; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 216, x17, x15, 112, x18)

inst_536:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x481322 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x301931 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x481322; op2val:0x7e301931; valaddr_reg:x16; val_offset:224; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 224, x17, x15, 120, x18)

inst_537:// fs1 == 0 and fe1 == 0xfc and fm1 == 0x301931 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x481322 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7e301931; op2val:0x481322; valaddr_reg:x16; val_offset:232; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 232, x17, x15, 128, x18)

inst_538:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x3fb8a4 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x472f12 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x3fb8a4; op2val:0x7e472f12; valaddr_reg:x16; val_offset:240; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 240, x17, x15, 136, x18)

inst_539:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x3fb8a4 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x7046ce and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x3fb8a4; op2val:0x7ef046ce; valaddr_reg:x16; val_offset:248; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 248, x17, x15, 144, x18)

inst_540:// fs1 == 0 and fe1 == 0xfc and fm1 == 0x301931 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x36c1bf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7e301931; op2val:0x7e36c1bf; valaddr_reg:x16; val_offset:256; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 256, x17, x15, 152, x18)

inst_541:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x42216f and fs2 == 0 and fe2 == 0xfc and fm2 == 0x301931 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x42216f; op2val:0x7e301931; valaddr_reg:x16; val_offset:264; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 264, x17, x15, 160, x18)

inst_542:// fs1 == 0 and fe1 == 0xfc and fm1 == 0x301931 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x42216f and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7e301931; op2val:0x42216f; valaddr_reg:x16; val_offset:272; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 272, x17, x15, 168, x18)

inst_543:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x3fb8a4 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x36c1bf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x3fb8a4; op2val:0x7e36c1bf; valaddr_reg:x16; val_offset:280; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 280, x17, x15, 176, x18)

inst_544:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00d7bf and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00d7bf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xd7bf; op2val:0xd7bf; valaddr_reg:x16; val_offset:288; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 288, x17, x15, 184, x18)

inst_545:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00d7bf and fs2 == 0 and fe2 == 0x81 and fm2 == 0x77aa21 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xd7bf; op2val:0x40f7aa21; valaddr_reg:x16; val_offset:296; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 296, x17, x15, 192, x18)

inst_546:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00d7bf and fs2 == 0 and fe2 == 0x00 and fm2 == 0x0007f0 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xd7bf; op2val:0x7f0; valaddr_reg:x16; val_offset:304; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 304, x17, x15, 200, x18)

inst_547:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00d7bf and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5446a0 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xd7bf; op2val:0x5446a0; valaddr_reg:x16; val_offset:312; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 312, x17, x15, 208, x18)

inst_548:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x5446a0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x108f54 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x5446a0; op2val:0x80108f54; valaddr_reg:x16; val_offset:320; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 320, x17, x15, 216, x18)

inst_549:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00d7bf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x108f54 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xd7bf; op2val:0x80108f54; valaddr_reg:x16; val_offset:328; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 328, x17, x15, 224, x18)

inst_550:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x5446a0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x365c4c and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x5446a0; op2val:0x80365c4c; valaddr_reg:x16; val_offset:336; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 336, x17, x15, 232, x18)

inst_551:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00d7bf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x365c4c and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xd7bf; op2val:0x80365c4c; valaddr_reg:x16; val_offset:344; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 344, x17, x15, 240, x18)

inst_552:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x5446a0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x21e733 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x5446a0; op2val:0x8021e733; valaddr_reg:x16; val_offset:352; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 352, x17, x15, 248, x18)

inst_553:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00d7bf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x21e733 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xd7bf; op2val:0x8021e733; valaddr_reg:x16; val_offset:360; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 360, x17, x15, 256, x18)

inst_554:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00d7bf and fs2 == 0 and fe2 == 0x00 and fm2 == 0x086d76 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xd7bf; op2val:0x86d76; valaddr_reg:x16; val_offset:368; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 368, x17, x15, 264, x18)

inst_555:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x086d76 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0a66e8 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x86d76; op2val:0x800a66e8; valaddr_reg:x16; val_offset:376; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 376, x17, x15, 272, x18)

inst_556:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00d7bf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0a66e8 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xd7bf; op2val:0x800a66e8; valaddr_reg:x16; val_offset:384; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 384, x17, x15, 280, x18)

inst_557:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x5446a0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x19595f and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x5446a0; op2val:0x8019595f; valaddr_reg:x16; val_offset:392; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 392, x17, x15, 288, x18)

inst_558:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00d7bf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x19595f and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xd7bf; op2val:0x8019595f; valaddr_reg:x16; val_offset:400; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 400, x17, x15, 296, x18)

inst_559:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x5446a0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x217bcd and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x5446a0; op2val:0x217bcd; valaddr_reg:x16; val_offset:408; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 408, x17, x15, 304, x18)

inst_560:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00d7bf and fs2 == 0 and fe2 == 0x00 and fm2 == 0x217bcd and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xd7bf; op2val:0x217bcd; valaddr_reg:x16; val_offset:416; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 416, x17, x15, 312, x18)

inst_561:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x5446a0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x28e67d and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x5446a0; op2val:0x28e67d; valaddr_reg:x16; val_offset:424; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 424, x17, x15, 320, x18)

inst_562:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00d7bf and fs2 == 0 and fe2 == 0x00 and fm2 == 0x28e67d and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xd7bf; op2val:0x28e67d; valaddr_reg:x16; val_offset:432; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 432, x17, x15, 328, x18)

inst_563:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x5446a0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3fb8a4 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x5446a0; op2val:0x3fb8a4; valaddr_reg:x16; val_offset:440; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 440, x17, x15, 336, x18)

inst_564:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00d7bf and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3fb8a4 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xd7bf; op2val:0x3fb8a4; valaddr_reg:x16; val_offset:448; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 448, x17, x15, 344, x18)

inst_565:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x5446a0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x17ad58 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x5446a0; op2val:0x17ad58; valaddr_reg:x16; val_offset:456; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 456, x17, x15, 352, x18)

inst_566:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x003c9d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5446a0 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x3c9d; op2val:0x5446a0; valaddr_reg:x16; val_offset:464; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 464, x17, x15, 360, x18)

inst_567:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x5446a0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x003c9d and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x5446a0; op2val:0x3c9d; valaddr_reg:x16; val_offset:472; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 472, x17, x15, 368, x18)

inst_568:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00d7bf and fs2 == 0 and fe2 == 0x00 and fm2 == 0x17ad58 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xd7bf; op2val:0x17ad58; valaddr_reg:x16; val_offset:480; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 480, x17, x15, 376, x18)

inst_569:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00d7bf and fs2 == 0 and fe2 == 0xfc and fm2 == 0x68e714 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xd7bf; op2val:0x7e68e714; valaddr_reg:x16; val_offset:488; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 488, x17, x15, 384, x18)

inst_570:// fs1 == 0 and fe1 == 0xfc and fm1 == 0x68e714 and fs2 == 1 and fe2 == 0xfb and fm2 == 0x4aaeb1 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7e68e714; op2val:0xfdcaaeb1; valaddr_reg:x16; val_offset:496; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 496, x17, x15, 392, x18)

inst_571:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x005de0 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x68e714 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x80005de0; op2val:0x7e68e714; valaddr_reg:x16; val_offset:504; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 504, x17, x15, 400, x18)

inst_572:// fs1 == 0 and fe1 == 0xfc and fm1 == 0x68e714 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x005de0 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7e68e714; op2val:0x80005de0; valaddr_reg:x16; val_offset:512; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 512, x17, x15, 408, x18)

inst_573:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00d7bf and fs2 == 1 and fe2 == 0xfb and fm2 == 0x4aaeb1 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xd7bf; op2val:0xfdcaaeb1; valaddr_reg:x16; val_offset:520; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 520, x17, x15, 416, x18)

inst_574:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00d7bf and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xd7bf; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:528; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 528, x17, x15, 424, x18)

inst_575:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x002540 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x80002540; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:536; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 536, x17, x15, 432, x18)

inst_576:// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x002540 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f7fffff; op2val:0x80002540; valaddr_reg:x16; val_offset:544; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 544, x17, x15, 440, x18)

inst_577:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00d7bf and fs2 == 1 and fe2 == 0xfd and fm2 == 0x491492 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xd7bf; op2val:0xfec91492; valaddr_reg:x16; val_offset:552; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 552, x17, x15, 448, x18)

inst_578:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x003678 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x80003678; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:560; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 560, x17, x15, 456, x18)

inst_579:// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x003678 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f7fffff; op2val:0x80003678; valaddr_reg:x16; val_offset:568; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 568, x17, x15, 464, x18)

inst_580:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00d7bf and fs2 == 1 and fe2 == 0xfe and fm2 == 0x130229 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xd7bf; op2val:0xff130229; valaddr_reg:x16; val_offset:576; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 576, x17, x15, 472, x18)

inst_581:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x00427b and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8000427b; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:584; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 584, x17, x15, 480, x18)

inst_582:// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x00427b and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f7fffff; op2val:0x8000427b; valaddr_reg:x16; val_offset:592; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 592, x17, x15, 488, x18)

inst_583:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00d7bf and fs2 == 1 and fe2 == 0xfe and fm2 == 0x336b1f and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xd7bf; op2val:0xff336b1f; valaddr_reg:x16; val_offset:600; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 600, x17, x15, 496, x18)

inst_584:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x00206c and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8000206c; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:608; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 608, x17, x15, 504, x18)

inst_585:// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0x00 and fm2 == 0x00206c and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f7fffff; op2val:0x8000206c; valaddr_reg:x16; val_offset:616; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 616, x17, x15, 512, x18)

inst_586:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00d7bf and fs2 == 1 and fe2 == 0xfd and fm2 == 0x2f0416 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xd7bf; op2val:0xfeaf0416; valaddr_reg:x16; val_offset:624; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 624, x17, x15, 520, x18)

inst_587:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x002d2a and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x2d2a; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:632; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 632, x17, x15, 528, x18)

inst_588:// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x002d2a and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f7fffff; op2val:0x2d2a; valaddr_reg:x16; val_offset:640; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 640, x17, x15, 536, x18)

inst_589:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00d7bf and fs2 == 0 and fe2 == 0xfd and fm2 == 0x73c956 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xd7bf; op2val:0x7ef3c956; valaddr_reg:x16; val_offset:648; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 648, x17, x15, 544, x18)

inst_590:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x003b82 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x3b82; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:656; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 656, x17, x15, 552, x18)

inst_591:// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x003b82 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f7fffff; op2val:0x3b82; valaddr_reg:x16; val_offset:664; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 664, x17, x15, 560, x18)

inst_592:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00d7bf and fs2 == 0 and fe2 == 0xfe and fm2 == 0x2099c0 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xd7bf; op2val:0x7f2099c0; valaddr_reg:x16; val_offset:672; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 672, x17, x15, 568, x18)

inst_593:// fs1 == 0 and fe1 == 0xfc and fm1 == 0x68e714 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x472f12 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7e68e714; op2val:0x7e472f12; valaddr_reg:x16; val_offset:680; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 680, x17, x15, 576, x18)

inst_594:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00b882 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x68e714 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xb882; op2val:0x7e68e714; valaddr_reg:x16; val_offset:688; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 688, x17, x15, 584, x18)

inst_595:// fs1 == 0 and fe1 == 0xfc and fm1 == 0x68e714 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00b882 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7e68e714; op2val:0xb882; valaddr_reg:x16; val_offset:696; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 696, x17, x15, 592, x18)

inst_596:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00d7bf and fs2 == 0 and fe2 == 0xfc and fm2 == 0x472f12 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xd7bf; op2val:0x7e472f12; valaddr_reg:x16; val_offset:704; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 704, x17, x15, 600, x18)

inst_597:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x002c83 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x2c83; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:712; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 712, x17, x15, 608, x18)

inst_598:// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x002c83 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f7fffff; op2val:0x2c83; valaddr_reg:x16; val_offset:720; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 720, x17, x15, 616, x18)

inst_599:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00d7bf and fs2 == 0 and fe2 == 0xfd and fm2 == 0x7046ce and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xd7bf; op2val:0x7ef046ce; valaddr_reg:x16; val_offset:728; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 728, x17, x15, 624, x18)

inst_600:// fs1 == 0 and fe1 == 0xfc and fm1 == 0x68e714 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x36c1bf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7e68e714; op2val:0x7e36c1bf; valaddr_reg:x16; val_offset:736; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 736, x17, x15, 632, x18)

inst_601:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00a94b and fs2 == 0 and fe2 == 0xfc and fm2 == 0x68e714 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xa94b; op2val:0x7e68e714; valaddr_reg:x16; val_offset:744; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 744, x17, x15, 640, x18)

inst_602:// fs1 == 0 and fe1 == 0xfc and fm1 == 0x68e714 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00a94b and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7e68e714; op2val:0xa94b; valaddr_reg:x16; val_offset:752; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 752, x17, x15, 648, x18)

inst_603:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00d7bf and fs2 == 0 and fe2 == 0xfc and fm2 == 0x36c1bf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xd7bf; op2val:0x7e36c1bf; valaddr_reg:x16; val_offset:760; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 760, x17, x15, 656, x18)

inst_604:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x17ad58 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x17ad58 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x17ad58; op2val:0x17ad58; valaddr_reg:x16; val_offset:768; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 768, x17, x15, 664, x18)

inst_605:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x17ad58 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0b2963 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x17ad58; op2val:0x400b2963; valaddr_reg:x16; val_offset:776; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 776, x17, x15, 672, x18)

inst_606:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x17ad58 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x0007f0 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x17ad58; op2val:0x7f0; valaddr_reg:x16; val_offset:784; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 784, x17, x15, 680, x18)

inst_607:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x17ad58 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x025e22 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x17ad58; op2val:0x25e22; valaddr_reg:x16; val_offset:792; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 792, x17, x15, 688, x18)

inst_608:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x025e22 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0a66e8 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x25e22; op2val:0x800a66e8; valaddr_reg:x16; val_offset:800; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 800, x17, x15, 696, x18)

inst_609:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x17ad58 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0a66e8 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x17ad58; op2val:0x800a66e8; valaddr_reg:x16; val_offset:808; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 808, x17, x15, 704, x18)

inst_610:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x17ad58 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x003c9d and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x17ad58; op2val:0x3c9d; valaddr_reg:x16; val_offset:816; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 816, x17, x15, 712, x18)

inst_611:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x003c9d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00d7bf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x3c9d; op2val:0xd7bf; valaddr_reg:x16; val_offset:824; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 824, x17, x15, 720, x18)

inst_612:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x17ad58 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00d7bf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x17ad58; op2val:0xd7bf; valaddr_reg:x16; val_offset:832; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 832, x17, x15, 728, x18)

inst_613:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x17ad58 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x02ddf4 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x17ad58; op2val:0x7d82ddf4; valaddr_reg:x16; val_offset:840; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 840, x17, x15, 736, x18)

inst_614:// fs1 == 0 and fe1 == 0xfb and fm1 == 0x02ddf4 and fs2 == 1 and fe2 == 0xfb and fm2 == 0x4aaeb1 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7d82ddf4; op2val:0xfdcaaeb1; valaddr_reg:x16; val_offset:848; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 848, x17, x15, 744, x18)

inst_615:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x24ab9b and fs2 == 0 and fe2 == 0xfb and fm2 == 0x02ddf4 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8024ab9b; op2val:0x7d82ddf4; valaddr_reg:x16; val_offset:856; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 856, x17, x15, 752, x18)

inst_616:// fs1 == 0 and fe1 == 0xfb and fm1 == 0x02ddf4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x24ab9b and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7d82ddf4; op2val:0x8024ab9b; valaddr_reg:x16; val_offset:864; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 864, x17, x15, 760, x18)

inst_617:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x17ad58 and fs2 == 1 and fe2 == 0xfb and fm2 == 0x4aaeb1 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x17ad58; op2val:0xfdcaaeb1; valaddr_reg:x16; val_offset:872; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 872, x17, x15, 768, x18)

inst_618:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x17ad58 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x239571 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x17ad58; op2val:0x7f239571; valaddr_reg:x16; val_offset:880; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 880, x17, x15, 776, x18)

inst_619:// fs1 == 0 and fe1 == 0xfe and fm1 == 0x239571 and fs2 == 1 and fe2 == 0xfd and fm2 == 0x491492 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f239571; op2val:0xfec91492; valaddr_reg:x16; val_offset:888; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 888, x17, x15, 784, x18)

inst_620:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0e8d5c and fs2 == 0 and fe2 == 0xfe and fm2 == 0x239571 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x800e8d5c; op2val:0x7f239571; valaddr_reg:x16; val_offset:896; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 896, x17, x15, 792, x18)

inst_621:// fs1 == 0 and fe1 == 0xfe and fm1 == 0x239571 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0e8d5c and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f239571; op2val:0x800e8d5c; valaddr_reg:x16; val_offset:904; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 904, x17, x15, 800, x18)

inst_622:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x17ad58 and fs2 == 1 and fe2 == 0xfd and fm2 == 0x491492 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x17ad58; op2val:0xfec91492; valaddr_reg:x16; val_offset:912; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 912, x17, x15, 808, x18)

inst_623:// fs1 == 0 and fe1 == 0xfe and fm1 == 0x239571 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x130229 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f239571; op2val:0xff130229; valaddr_reg:x16; val_offset:920; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 920, x17, x15, 816, x18)

inst_624:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x15472c and fs2 == 0 and fe2 == 0xfe and fm2 == 0x239571 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8015472c; op2val:0x7f239571; valaddr_reg:x16; val_offset:928; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 928, x17, x15, 824, x18)

inst_625:// fs1 == 0 and fe1 == 0xfe and fm1 == 0x239571 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x15472c and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f239571; op2val:0x8015472c; valaddr_reg:x16; val_offset:936; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 936, x17, x15, 832, x18)

inst_626:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x17ad58 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x130229 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x17ad58; op2val:0xff130229; valaddr_reg:x16; val_offset:944; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 944, x17, x15, 840, x18)

inst_627:// fs1 == 0 and fe1 == 0xfe and fm1 == 0x239571 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x336b1f and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f239571; op2val:0xff336b1f; valaddr_reg:x16; val_offset:952; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 952, x17, x15, 848, x18)

inst_628:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x19f813 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x239571 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8019f813; op2val:0x7f239571; valaddr_reg:x16; val_offset:960; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 960, x17, x15, 856, x18)

inst_629:// fs1 == 0 and fe1 == 0xfe and fm1 == 0x239571 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x19f813 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f239571; op2val:0x8019f813; valaddr_reg:x16; val_offset:968; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 968, x17, x15, 864, x18)

inst_630:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x17ad58 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x336b1f and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x17ad58; op2val:0xff336b1f; valaddr_reg:x16; val_offset:976; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 976, x17, x15, 872, x18)

inst_631:// fs1 == 0 and fe1 == 0xfe and fm1 == 0x239571 and fs2 == 1 and fe2 == 0xfd and fm2 == 0x2f0416 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f239571; op2val:0xfeaf0416; valaddr_reg:x16; val_offset:984; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 984, x17, x15, 880, x18)

inst_632:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0caa79 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x239571 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x800caa79; op2val:0x7f239571; valaddr_reg:x16; val_offset:992; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 992, x17, x15, 888, x18)

inst_633:// fs1 == 0 and fe1 == 0xfe and fm1 == 0x239571 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0caa79 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f239571; op2val:0x800caa79; valaddr_reg:x16; val_offset:1000; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1000, x17, x15, 896, x18)

inst_634:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x17ad58 and fs2 == 1 and fe2 == 0xfd and fm2 == 0x2f0416 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x17ad58; op2val:0xfeaf0416; valaddr_reg:x16; val_offset:1008; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1008, x17, x15, 904, x18)

inst_635:// fs1 == 0 and fe1 == 0xfe and fm1 == 0x239571 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x73c956 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f239571; op2val:0x7ef3c956; valaddr_reg:x16; val_offset:1016; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1016, x17, x15, 912, x18)

inst_636:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x11a491 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x239571 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x11a491; op2val:0x7f239571; valaddr_reg:x16; val_offset:1024; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1024, x17, x15, 920, x18)

inst_637:// fs1 == 0 and fe1 == 0xfe and fm1 == 0x239571 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x11a491 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f239571; op2val:0x11a491; valaddr_reg:x16; val_offset:1032; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1032, x17, x15, 928, x18)

inst_638:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x17ad58 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x73c956 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x17ad58; op2val:0x7ef3c956; valaddr_reg:x16; val_offset:1040; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1040, x17, x15, 936, x18)

inst_639:// fs1 == 0 and fe1 == 0xfe and fm1 == 0x239571 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x2099c0 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f239571; op2val:0x7f2099c0; valaddr_reg:x16; val_offset:1048; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1048, x17, x15, 944, x18)

inst_640:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x173ecf and fs2 == 0 and fe2 == 0xfe and fm2 == 0x239571 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x173ecf; op2val:0x7f239571; valaddr_reg:x16; val_offset:1056; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1056, x17, x15, 952, x18)

inst_641:// fs1 == 0 and fe1 == 0xfe and fm1 == 0x239571 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x173ecf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f239571; op2val:0x173ecf; valaddr_reg:x16; val_offset:1064; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1064, x17, x15, 960, x18)

inst_642:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x17ad58 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x2099c0 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x17ad58; op2val:0x7f2099c0; valaddr_reg:x16; val_offset:1072; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1072, x17, x15, 968, x18)

inst_643:// fs1 == 0 and fe1 == 0xfb and fm1 == 0x02ddf4 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x472f12 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7d82ddf4; op2val:0x7e472f12; valaddr_reg:x16; val_offset:1080; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1080, x17, x15, 976, x18)

inst_644:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x481322 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x02ddf4 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x481322; op2val:0x7d82ddf4; valaddr_reg:x16; val_offset:1088; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1088, x17, x15, 984, x18)

inst_645:// fs1 == 0 and fe1 == 0xfb and fm1 == 0x02ddf4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x481322 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7d82ddf4; op2val:0x481322; valaddr_reg:x16; val_offset:1096; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1096, x17, x15, 992, x18)

inst_646:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x17ad58 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x472f12 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x17ad58; op2val:0x7e472f12; valaddr_reg:x16; val_offset:1104; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1104, x17, x15, 1000, x18)

inst_647:// fs1 == 0 and fe1 == 0xfe and fm1 == 0x239571 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x7046ce and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f239571; op2val:0x7ef046ce; valaddr_reg:x16; val_offset:1112; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1112, x17, x15, 1008, x18)

inst_648:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x11638a and fs2 == 0 and fe2 == 0xfe and fm2 == 0x239571 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x11638a; op2val:0x7f239571; valaddr_reg:x16; val_offset:1120; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1120, x17, x15, 1016, x18)

inst_649:// fs1 == 0 and fe1 == 0xfe and fm1 == 0x239571 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x11638a and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f239571; op2val:0x11638a; valaddr_reg:x16; val_offset:1128; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1128, x17, x15, 1024, x18)

inst_650:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x17ad58 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x7046ce and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x17ad58; op2val:0x7ef046ce; valaddr_reg:x16; val_offset:1136; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1136, x17, x15, 1032, x18)

inst_651:// fs1 == 0 and fe1 == 0xfb and fm1 == 0x02ddf4 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x36c1bf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7d82ddf4; op2val:0x7e36c1bf; valaddr_reg:x16; val_offset:1144; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1144, x17, x15, 1040, x18)

inst_652:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x42216f and fs2 == 0 and fe2 == 0xfb and fm2 == 0x02ddf4 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x42216f; op2val:0x7d82ddf4; valaddr_reg:x16; val_offset:1152; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1152, x17, x15, 1048, x18)

inst_653:// fs1 == 0 and fe1 == 0xfb and fm1 == 0x02ddf4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x42216f and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7d82ddf4; op2val:0x42216f; valaddr_reg:x16; val_offset:1160; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1160, x17, x15, 1056, x18)

inst_654:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x17ad58 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x36c1bf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x17ad58; op2val:0x7e36c1bf; valaddr_reg:x16; val_offset:1168; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1168, x17, x15, 1064, x18)

inst_655:// fs1 == 1 and fe1 == 0xfb and fm1 == 0x4aaeb1 and fs2 == 1 and fe2 == 0xfb and fm2 == 0x4aaeb1 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfdcaaeb1; op2val:0xfdcaaeb1; valaddr_reg:x16; val_offset:1176; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1176, x17, x15, 1072, x18)

inst_656:// fs1 == 1 and fe1 == 0xfb and fm1 == 0x4aaeb1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x578765 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfdcaaeb1; op2val:0xc0578765; valaddr_reg:x16; val_offset:1184; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1184, x17, x15, 1080, x18)

inst_657:// fs1 == 1 and fe1 == 0xfb and fm1 == 0x4aaeb1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x0007f0 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfdcaaeb1; op2val:0x7f0; valaddr_reg:x16; val_offset:1192; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1192, x17, x15, 1088, x18)

inst_658:// fs1 == 1 and fe1 == 0xfb and fm1 == 0x4aaeb1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x24ab9b and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfdcaaeb1; op2val:0x8024ab9b; valaddr_reg:x16; val_offset:1200; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1200, x17, x15, 1096, x18)

inst_659:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x24ab9b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x108f54 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8024ab9b; op2val:0x80108f54; valaddr_reg:x16; val_offset:1208; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1208, x17, x15, 1104, x18)

inst_660:// fs1 == 1 and fe1 == 0xfb and fm1 == 0x4aaeb1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x108f54 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfdcaaeb1; op2val:0x80108f54; valaddr_reg:x16; val_offset:1216; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1216, x17, x15, 1112, x18)

inst_661:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x24ab9b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x365c4c and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8024ab9b; op2val:0x80365c4c; valaddr_reg:x16; val_offset:1224; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1224, x17, x15, 1120, x18)

inst_662:// fs1 == 1 and fe1 == 0xfb and fm1 == 0x4aaeb1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x365c4c and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfdcaaeb1; op2val:0x80365c4c; valaddr_reg:x16; val_offset:1232; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1232, x17, x15, 1128, x18)

inst_663:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x24ab9b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x21e733 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8024ab9b; op2val:0x8021e733; valaddr_reg:x16; val_offset:1240; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1240, x17, x15, 1136, x18)

inst_664:// fs1 == 1 and fe1 == 0xfb and fm1 == 0x4aaeb1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x21e733 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfdcaaeb1; op2val:0x8021e733; valaddr_reg:x16; val_offset:1248; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1248, x17, x15, 1144, x18)

inst_665:// fs1 == 1 and fe1 == 0xfb and fm1 == 0x4aaeb1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x03aac2 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfdcaaeb1; op2val:0x8003aac2; valaddr_reg:x16; val_offset:1256; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1256, x17, x15, 1152, x18)

inst_666:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x03aac2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0a66e8 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8003aac2; op2val:0x800a66e8; valaddr_reg:x16; val_offset:1264; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1264, x17, x15, 1160, x18)

inst_667:// fs1 == 1 and fe1 == 0xfb and fm1 == 0x4aaeb1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0a66e8 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfdcaaeb1; op2val:0x800a66e8; valaddr_reg:x16; val_offset:1272; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1272, x17, x15, 1168, x18)

inst_668:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x24ab9b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x19595f and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8024ab9b; op2val:0x8019595f; valaddr_reg:x16; val_offset:1280; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1280, x17, x15, 1176, x18)

inst_669:// fs1 == 1 and fe1 == 0xfb and fm1 == 0x4aaeb1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x19595f and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfdcaaeb1; op2val:0x8019595f; valaddr_reg:x16; val_offset:1288; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1288, x17, x15, 1184, x18)

inst_670:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x24ab9b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x217bcd and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8024ab9b; op2val:0x217bcd; valaddr_reg:x16; val_offset:1296; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1296, x17, x15, 1192, x18)

inst_671:// fs1 == 1 and fe1 == 0xfb and fm1 == 0x4aaeb1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x217bcd and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfdcaaeb1; op2val:0x217bcd; valaddr_reg:x16; val_offset:1304; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1304, x17, x15, 1200, x18)

inst_672:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x24ab9b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x28e67d and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8024ab9b; op2val:0x28e67d; valaddr_reg:x16; val_offset:1312; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1312, x17, x15, 1208, x18)

inst_673:// fs1 == 1 and fe1 == 0xfb and fm1 == 0x4aaeb1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x28e67d and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfdcaaeb1; op2val:0x28e67d; valaddr_reg:x16; val_offset:1320; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1320, x17, x15, 1216, x18)

inst_674:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x24ab9b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3fb8a4 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8024ab9b; op2val:0x3fb8a4; valaddr_reg:x16; val_offset:1328; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1328, x17, x15, 1224, x18)

inst_675:// fs1 == 1 and fe1 == 0xfb and fm1 == 0x4aaeb1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3fb8a4 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfdcaaeb1; op2val:0x3fb8a4; valaddr_reg:x16; val_offset:1336; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1336, x17, x15, 1232, x18)

inst_676:// fs1 == 1 and fe1 == 0xfb and fm1 == 0x4aaeb1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x005de0 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfdcaaeb1; op2val:0x80005de0; valaddr_reg:x16; val_offset:1344; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1344, x17, x15, 1240, x18)

inst_677:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x005de0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00d7bf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x80005de0; op2val:0xd7bf; valaddr_reg:x16; val_offset:1352; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1352, x17, x15, 1248, x18)

inst_678:// fs1 == 1 and fe1 == 0xfb and fm1 == 0x4aaeb1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00d7bf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfdcaaeb1; op2val:0xd7bf; valaddr_reg:x16; val_offset:1360; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1360, x17, x15, 1256, x18)

inst_679:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x24ab9b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x17ad58 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8024ab9b; op2val:0x17ad58; valaddr_reg:x16; val_offset:1368; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1368, x17, x15, 1264, x18)

inst_680:// fs1 == 1 and fe1 == 0xfb and fm1 == 0x4aaeb1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x17ad58 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfdcaaeb1; op2val:0x17ad58; valaddr_reg:x16; val_offset:1376; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1376, x17, x15, 1272, x18)

inst_681:// fs1 == 1 and fe1 == 0xfb and fm1 == 0x4aaeb1 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7d5a5e and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfdcaaeb1; op2val:0xff7d5a5e; valaddr_reg:x16; val_offset:1384; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1384, x17, x15, 1280, x18)

inst_682:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7d5a5e and fs2 == 1 and fe2 == 0xfd and fm2 == 0x491492 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff7d5a5e; op2val:0xfec91492; valaddr_reg:x16; val_offset:1392; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1392, x17, x15, 1288, x18)

inst_683:// fs1 == 1 and fe1 == 0xfa and fm1 == 0x20dd41 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7d5a5e and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfd20dd41; op2val:0xff7d5a5e; valaddr_reg:x16; val_offset:1400; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1400, x17, x15, 1296, x18)

inst_684:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7d5a5e and fs2 == 1 and fe2 == 0xfa and fm2 == 0x20dd41 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff7d5a5e; op2val:0xfd20dd41; valaddr_reg:x16; val_offset:1408; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1408, x17, x15, 1304, x18)

inst_685:// fs1 == 1 and fe1 == 0xfb and fm1 == 0x4aaeb1 and fs2 == 1 and fe2 == 0xfd and fm2 == 0x491492 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfdcaaeb1; op2val:0xfec91492; valaddr_reg:x16; val_offset:1416; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1416, x17, x15, 1312, x18)

inst_686:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7d5a5e and fs2 == 1 and fe2 == 0xfe and fm2 == 0x130229 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff7d5a5e; op2val:0xff130229; valaddr_reg:x16; val_offset:1424; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1424, x17, x15, 1320, x18)

inst_687:// fs1 == 1 and fe1 == 0xfa and fm1 == 0x6b36a9 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7d5a5e and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfd6b36a9; op2val:0xff7d5a5e; valaddr_reg:x16; val_offset:1432; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1432, x17, x15, 1328, x18)

inst_688:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7d5a5e and fs2 == 1 and fe2 == 0xfa and fm2 == 0x6b36a9 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff7d5a5e; op2val:0xfd6b36a9; valaddr_reg:x16; val_offset:1440; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1440, x17, x15, 1336, x18)

inst_689:// fs1 == 1 and fe1 == 0xfb and fm1 == 0x4aaeb1 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x130229 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfdcaaeb1; op2val:0xff130229; valaddr_reg:x16; val_offset:1448; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1448, x17, x15, 1344, x18)

inst_690:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7d5a5e and fs2 == 1 and fe2 == 0xfe and fm2 == 0x336b1f and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff7d5a5e; op2val:0xff336b1f; valaddr_reg:x16; val_offset:1456; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1456, x17, x15, 1352, x18)

inst_691:// fs1 == 1 and fe1 == 0xfb and fm1 == 0x0f88e6 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7d5a5e and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfd8f88e6; op2val:0xff7d5a5e; valaddr_reg:x16; val_offset:1464; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1464, x17, x15, 1360, x18)

inst_692:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7d5a5e and fs2 == 1 and fe2 == 0xfb and fm2 == 0x0f88e6 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff7d5a5e; op2val:0xfd8f88e6; valaddr_reg:x16; val_offset:1472; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1472, x17, x15, 1368, x18)

inst_693:// fs1 == 1 and fe1 == 0xfb and fm1 == 0x4aaeb1 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x336b1f and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfdcaaeb1; op2val:0xff336b1f; valaddr_reg:x16; val_offset:1480; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1480, x17, x15, 1376, x18)

inst_694:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7d5a5e and fs2 == 1 and fe2 == 0xfd and fm2 == 0x2f0416 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff7d5a5e; op2val:0xfeaf0416; valaddr_reg:x16; val_offset:1488; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1488, x17, x15, 1384, x18)

inst_695:// fs1 == 1 and fe1 == 0xfa and fm1 == 0x0c0345 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7d5a5e and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfd0c0345; op2val:0xff7d5a5e; valaddr_reg:x16; val_offset:1496; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1496, x17, x15, 1392, x18)

inst_696:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7d5a5e and fs2 == 1 and fe2 == 0xfa and fm2 == 0x0c0345 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff7d5a5e; op2val:0xfd0c0345; valaddr_reg:x16; val_offset:1504; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1504, x17, x15, 1400, x18)

inst_697:// fs1 == 1 and fe1 == 0xfb and fm1 == 0x4aaeb1 and fs2 == 1 and fe2 == 0xfd and fm2 == 0x2f0416 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfdcaaeb1; op2val:0xfeaf0416; valaddr_reg:x16; val_offset:1512; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1512, x17, x15, 1408, x18)

inst_698:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7d5a5e and fs2 == 0 and fe2 == 0xfd and fm2 == 0x73c956 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff7d5a5e; op2val:0x7ef3c956; valaddr_reg:x16; val_offset:1520; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1520, x17, x15, 1416, x18)

inst_699:// fs1 == 0 and fe1 == 0xfa and fm1 == 0x430778 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7d5a5e and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7d430778; op2val:0xff7d5a5e; valaddr_reg:x16; val_offset:1528; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1528, x17, x15, 1424, x18)

inst_700:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7d5a5e and fs2 == 0 and fe2 == 0xfa and fm2 == 0x430778 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff7d5a5e; op2val:0x7d430778; valaddr_reg:x16; val_offset:1536; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1536, x17, x15, 1432, x18)

inst_701:// fs1 == 1 and fe1 == 0xfb and fm1 == 0x4aaeb1 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x73c956 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfdcaaeb1; op2val:0x7ef3c956; valaddr_reg:x16; val_offset:1544; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1544, x17, x15, 1440, x18)

inst_702:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7d5a5e and fs2 == 0 and fe2 == 0xfe and fm2 == 0x2099c0 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff7d5a5e; op2val:0x7f2099c0; valaddr_reg:x16; val_offset:1552; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1552, x17, x15, 1448, x18)

inst_703:// fs1 == 0 and fe1 == 0xfb and fm1 == 0x007b00 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7d5a5e and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7d807b00; op2val:0xff7d5a5e; valaddr_reg:x16; val_offset:1560; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1560, x17, x15, 1456, x18)

inst_704:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7d5a5e and fs2 == 0 and fe2 == 0xfb and fm2 == 0x007b00 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff7d5a5e; op2val:0x7d807b00; valaddr_reg:x16; val_offset:1568; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1568, x17, x15, 1464, x18)

inst_705:// fs1 == 1 and fe1 == 0xfb and fm1 == 0x4aaeb1 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x2099c0 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfdcaaeb1; op2val:0x7f2099c0; valaddr_reg:x16; val_offset:1576; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1576, x17, x15, 1472, x18)

inst_706:// fs1 == 1 and fe1 == 0xfb and fm1 == 0x4aaeb1 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x472f12 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfdcaaeb1; op2val:0x7e472f12; valaddr_reg:x16; val_offset:1584; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1584, x17, x15, 1480, x18)

inst_707:// fs1 == 0 and fe1 == 0xfc and fm1 == 0x472f12 and fs2 == 1 and fe2 == 0xfb and fm2 == 0x4aaeb1 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7e472f12; op2val:0xfdcaaeb1; valaddr_reg:x16; val_offset:1592; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1592, x17, x15, 1488, x18)

inst_708:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7d5a5e and fs2 == 0 and fe2 == 0xfd and fm2 == 0x7046ce and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff7d5a5e; op2val:0x7ef046ce; valaddr_reg:x16; val_offset:1600; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1600, x17, x15, 1496, x18)

inst_709:// fs1 == 0 and fe1 == 0xfa and fm1 == 0x4038a5 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7d5a5e and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7d4038a5; op2val:0xff7d5a5e; valaddr_reg:x16; val_offset:1608; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1608, x17, x15, 1504, x18)

inst_710:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x7d5a5e and fs2 == 0 and fe2 == 0xfa and fm2 == 0x4038a5 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff7d5a5e; op2val:0x7d4038a5; valaddr_reg:x16; val_offset:1616; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1616, x17, x15, 1512, x18)

inst_711:// fs1 == 1 and fe1 == 0xfb and fm1 == 0x4aaeb1 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x7046ce and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfdcaaeb1; op2val:0x7ef046ce; valaddr_reg:x16; val_offset:1624; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1624, x17, x15, 1520, x18)

inst_712:// fs1 == 1 and fe1 == 0xfb and fm1 == 0x4aaeb1 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x36c1bf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfdcaaeb1; op2val:0x7e36c1bf; valaddr_reg:x16; val_offset:1632; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1632, x17, x15, 1528, x18)

inst_713:// fs1 == 0 and fe1 == 0xfc and fm1 == 0x36c1bf and fs2 == 1 and fe2 == 0xfb and fm2 == 0x4aaeb1 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7e36c1bf; op2val:0xfdcaaeb1; valaddr_reg:x16; val_offset:1640; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1640, x17, x15, 1536, x18)

inst_714:// fs1 == 1 and fe1 == 0xfd and fm1 == 0x491492 and fs2 == 1 and fe2 == 0xfd and fm2 == 0x491492 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfec91492; op2val:0xfec91492; valaddr_reg:x16; val_offset:1648; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1648, x17, x15, 1544, x18)

inst_715:// fs1 == 1 and fe1 == 0xfd and fm1 == 0x491492 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2b0f6c and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfec91492; op2val:0xbfab0f6c; valaddr_reg:x16; val_offset:1656; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1656, x17, x15, 1552, x18)

inst_716:// fs1 == 1 and fe1 == 0xfd and fm1 == 0x491492 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x0007f0 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfec91492; op2val:0x7f0; valaddr_reg:x16; val_offset:1664; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1664, x17, x15, 1560, x18)

inst_717:// fs1 == 1 and fe1 == 0xfd and fm1 == 0x491492 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0e8d5c and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfec91492; op2val:0x800e8d5c; valaddr_reg:x16; val_offset:1672; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1672, x17, x15, 1568, x18)

inst_718:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0e8d5c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x108f54 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x800e8d5c; op2val:0x80108f54; valaddr_reg:x16; val_offset:1680; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1680, x17, x15, 1576, x18)

inst_719:// fs1 == 1 and fe1 == 0xfd and fm1 == 0x491492 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x108f54 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfec91492; op2val:0x80108f54; valaddr_reg:x16; val_offset:1688; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1688, x17, x15, 1584, x18)

inst_720:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0e8d5c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x365c4c and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x800e8d5c; op2val:0x80365c4c; valaddr_reg:x16; val_offset:1696; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1696, x17, x15, 1592, x18)

inst_721:// fs1 == 1 and fe1 == 0xfd and fm1 == 0x491492 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x365c4c and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfec91492; op2val:0x80365c4c; valaddr_reg:x16; val_offset:1704; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1704, x17, x15, 1600, x18)

inst_722:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0e8d5c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x21e733 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x800e8d5c; op2val:0x8021e733; valaddr_reg:x16; val_offset:1712; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1712, x17, x15, 1608, x18)

inst_723:// fs1 == 1 and fe1 == 0xfd and fm1 == 0x491492 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x21e733 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfec91492; op2val:0x8021e733; valaddr_reg:x16; val_offset:1720; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1720, x17, x15, 1616, x18)

inst_724:// fs1 == 1 and fe1 == 0xfd and fm1 == 0x491492 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x017489 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfec91492; op2val:0x80017489; valaddr_reg:x16; val_offset:1728; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1728, x17, x15, 1624, x18)

inst_725:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x017489 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0a66e8 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x80017489; op2val:0x800a66e8; valaddr_reg:x16; val_offset:1736; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1736, x17, x15, 1632, x18)

inst_726:// fs1 == 1 and fe1 == 0xfd and fm1 == 0x491492 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0a66e8 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfec91492; op2val:0x800a66e8; valaddr_reg:x16; val_offset:1744; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1744, x17, x15, 1640, x18)

inst_727:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0e8d5c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x19595f and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x800e8d5c; op2val:0x8019595f; valaddr_reg:x16; val_offset:1752; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1752, x17, x15, 1648, x18)

inst_728:// fs1 == 1 and fe1 == 0xfd and fm1 == 0x491492 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x19595f and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfec91492; op2val:0x8019595f; valaddr_reg:x16; val_offset:1760; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1760, x17, x15, 1656, x18)

inst_729:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0e8d5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x217bcd and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x800e8d5c; op2val:0x217bcd; valaddr_reg:x16; val_offset:1768; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1768, x17, x15, 1664, x18)

inst_730:// fs1 == 1 and fe1 == 0xfd and fm1 == 0x491492 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x217bcd and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfec91492; op2val:0x217bcd; valaddr_reg:x16; val_offset:1776; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1776, x17, x15, 1672, x18)

inst_731:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0e8d5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x28e67d and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x800e8d5c; op2val:0x28e67d; valaddr_reg:x16; val_offset:1784; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1784, x17, x15, 1680, x18)

inst_732:// fs1 == 1 and fe1 == 0xfd and fm1 == 0x491492 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x28e67d and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfec91492; op2val:0x28e67d; valaddr_reg:x16; val_offset:1792; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1792, x17, x15, 1688, x18)

inst_733:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0e8d5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3fb8a4 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x800e8d5c; op2val:0x3fb8a4; valaddr_reg:x16; val_offset:1800; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1800, x17, x15, 1696, x18)

inst_734:// fs1 == 1 and fe1 == 0xfd and fm1 == 0x491492 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3fb8a4 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfec91492; op2val:0x3fb8a4; valaddr_reg:x16; val_offset:1808; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1808, x17, x15, 1704, x18)

inst_735:// fs1 == 1 and fe1 == 0xfd and fm1 == 0x491492 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x002540 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfec91492; op2val:0x80002540; valaddr_reg:x16; val_offset:1816; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1816, x17, x15, 1712, x18)

inst_736:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x002540 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00d7bf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x80002540; op2val:0xd7bf; valaddr_reg:x16; val_offset:1824; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1824, x17, x15, 1720, x18)

inst_737:// fs1 == 1 and fe1 == 0xfd and fm1 == 0x491492 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00d7bf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfec91492; op2val:0xd7bf; valaddr_reg:x16; val_offset:1832; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1832, x17, x15, 1728, x18)

inst_738:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0e8d5c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x17ad58 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x800e8d5c; op2val:0x17ad58; valaddr_reg:x16; val_offset:1840; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1840, x17, x15, 1736, x18)

inst_739:// fs1 == 1 and fe1 == 0xfd and fm1 == 0x491492 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x17ad58 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfec91492; op2val:0x17ad58; valaddr_reg:x16; val_offset:1848; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1848, x17, x15, 1744, x18)

inst_740:// fs1 == 1 and fe1 == 0xfd and fm1 == 0x491492 and fs2 == 1 and fe2 == 0xfa and fm2 == 0x20dd41 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfec91492; op2val:0xfd20dd41; valaddr_reg:x16; val_offset:1856; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1856, x17, x15, 1752, x18)

inst_741:// fs1 == 1 and fe1 == 0xfa and fm1 == 0x20dd41 and fs2 == 1 and fe2 == 0xfb and fm2 == 0x4aaeb1 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfd20dd41; op2val:0xfdcaaeb1; valaddr_reg:x16; val_offset:1864; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1864, x17, x15, 1760, x18)

inst_742:// fs1 == 1 and fe1 == 0xfd and fm1 == 0x491492 and fs2 == 1 and fe2 == 0xfb and fm2 == 0x4aaeb1 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfec91492; op2val:0xfdcaaeb1; valaddr_reg:x16; val_offset:1872; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1872, x17, x15, 1768, x18)

inst_743:// fs1 == 1 and fe1 == 0xfd and fm1 == 0x491492 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x130229 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfec91492; op2val:0xff130229; valaddr_reg:x16; val_offset:1880; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1880, x17, x15, 1776, x18)

inst_744:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x130229 and fs2 == 1 and fe2 == 0xfd and fm2 == 0x491492 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff130229; op2val:0xfec91492; valaddr_reg:x16; val_offset:1888; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1888, x17, x15, 1784, x18)

inst_745:// fs1 == 1 and fe1 == 0xfd and fm1 == 0x491492 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x336b1f and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfec91492; op2val:0xff336b1f; valaddr_reg:x16; val_offset:1896; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1896, x17, x15, 1792, x18)

inst_746:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x336b1f and fs2 == 1 and fe2 == 0xfd and fm2 == 0x491492 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff336b1f; op2val:0xfec91492; valaddr_reg:x16; val_offset:1904; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1904, x17, x15, 1800, x18)

inst_747:// fs1 == 1 and fe1 == 0xfd and fm1 == 0x491492 and fs2 == 1 and fe2 == 0xfd and fm2 == 0x2f0416 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfec91492; op2val:0xfeaf0416; valaddr_reg:x16; val_offset:1912; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1912, x17, x15, 1808, x18)

inst_748:// fs1 == 1 and fe1 == 0xfd and fm1 == 0x2f0416 and fs2 == 1 and fe2 == 0xfd and fm2 == 0x491492 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfeaf0416; op2val:0xfec91492; valaddr_reg:x16; val_offset:1920; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1920, x17, x15, 1816, x18)

inst_749:// fs1 == 1 and fe1 == 0xfd and fm1 == 0x491492 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x73c956 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfec91492; op2val:0x7ef3c956; valaddr_reg:x16; val_offset:1928; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1928, x17, x15, 1824, x18)

inst_750:// fs1 == 0 and fe1 == 0xfd and fm1 == 0x73c956 and fs2 == 1 and fe2 == 0xfd and fm2 == 0x491492 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7ef3c956; op2val:0xfec91492; valaddr_reg:x16; val_offset:1936; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1936, x17, x15, 1832, x18)

inst_751:// fs1 == 1 and fe1 == 0xfd and fm1 == 0x491492 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x2099c0 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfec91492; op2val:0x7f2099c0; valaddr_reg:x16; val_offset:1944; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1944, x17, x15, 1840, x18)

inst_752:// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2099c0 and fs2 == 1 and fe2 == 0xfd and fm2 == 0x491492 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f2099c0; op2val:0xfec91492; valaddr_reg:x16; val_offset:1952; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1952, x17, x15, 1848, x18)

inst_753:// fs1 == 1 and fe1 == 0xfa and fm1 == 0x20dd41 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x472f12 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfd20dd41; op2val:0x7e472f12; valaddr_reg:x16; val_offset:1960; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1960, x17, x15, 1856, x18)

inst_754:// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfa and fm2 == 0x20dd41 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f7fffff; op2val:0xfd20dd41; valaddr_reg:x16; val_offset:1968; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1968, x17, x15, 1864, x18)

inst_755:// fs1 == 1 and fe1 == 0xfa and fm1 == 0x20dd41 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfd20dd41; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1976; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1976, x17, x15, 1872, x18)

inst_756:// fs1 == 1 and fe1 == 0xfd and fm1 == 0x491492 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x472f12 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfec91492; op2val:0x7e472f12; valaddr_reg:x16; val_offset:1984; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1984, x17, x15, 1880, x18)

inst_757:// fs1 == 1 and fe1 == 0xfd and fm1 == 0x491492 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x7046ce and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfec91492; op2val:0x7ef046ce; valaddr_reg:x16; val_offset:1992; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1992, x17, x15, 1888, x18)

inst_758:// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7046ce and fs2 == 1 and fe2 == 0xfd and fm2 == 0x491492 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7ef046ce; op2val:0xfec91492; valaddr_reg:x16; val_offset:2000; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 2000, x17, x15, 1896, x18)

inst_759:// fs1 == 1 and fe1 == 0xfa and fm1 == 0x20dd41 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x36c1bf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfd20dd41; op2val:0x7e36c1bf; valaddr_reg:x16; val_offset:2008; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 2008, x17, x15, 1904, x18)

inst_760:// fs1 == 1 and fe1 == 0xfd and fm1 == 0x491492 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x36c1bf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfec91492; op2val:0x7e36c1bf; valaddr_reg:x16; val_offset:2016; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 2016, x17, x15, 1912, x18)

inst_761:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x130229 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x130229 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff130229; op2val:0xff130229; valaddr_reg:x16; val_offset:2024; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 2024, x17, x15, 1920, x18)
addi x16,x16,2032

inst_762:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x130229 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7a1f35 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff130229; op2val:0xbffa1f35; valaddr_reg:x16; val_offset:0; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 0, x17, x15, 1928, x18)

inst_763:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x130229 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x0007f0 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff130229; op2val:0x7f0; valaddr_reg:x16; val_offset:8; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 8, x17, x15, 1936, x18)

inst_764:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x130229 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x15472c and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff130229; op2val:0x8015472c; valaddr_reg:x16; val_offset:16; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 16, x17, x15, 1944, x18)

inst_765:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x15472c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x108f54 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8015472c; op2val:0x80108f54; valaddr_reg:x16; val_offset:24; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 24, x17, x15, 1952, x18)

inst_766:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x130229 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x108f54 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff130229; op2val:0x80108f54; valaddr_reg:x16; val_offset:32; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 32, x17, x15, 1960, x18)

inst_767:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x15472c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x365c4c and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8015472c; op2val:0x80365c4c; valaddr_reg:x16; val_offset:40; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 40, x17, x15, 1968, x18)

inst_768:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x130229 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x365c4c and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff130229; op2val:0x80365c4c; valaddr_reg:x16; val_offset:48; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 48, x17, x15, 1976, x18)

inst_769:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x15472c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x21e733 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8015472c; op2val:0x8021e733; valaddr_reg:x16; val_offset:56; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 56, x17, x15, 1984, x18)

inst_770:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x130229 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x21e733 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff130229; op2val:0x8021e733; valaddr_reg:x16; val_offset:64; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 64, x17, x15, 1992, x18)

inst_771:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x130229 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0220b7 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff130229; op2val:0x800220b7; valaddr_reg:x16; val_offset:72; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 72, x17, x15, 2000, x18)

inst_772:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0220b7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0a66e8 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x800220b7; op2val:0x800a66e8; valaddr_reg:x16; val_offset:80; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 80, x17, x15, 2008, x18)

inst_773:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x130229 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0a66e8 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff130229; op2val:0x800a66e8; valaddr_reg:x16; val_offset:88; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 88, x17, x15, 2016, x18)

inst_774:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x15472c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x19595f and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8015472c; op2val:0x8019595f; valaddr_reg:x16; val_offset:96; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 96, x17, x15, 2024, x18)
RVTEST_SIGBASE(x15,signature_x15_6)

inst_775:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x130229 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x19595f and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff130229; op2val:0x8019595f; valaddr_reg:x16; val_offset:104; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 104, x17, x15, 0, x18)

inst_776:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x15472c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x217bcd and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8015472c; op2val:0x217bcd; valaddr_reg:x16; val_offset:112; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 112, x17, x15, 8, x18)

inst_777:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x130229 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x217bcd and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff130229; op2val:0x217bcd; valaddr_reg:x16; val_offset:120; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 120, x17, x15, 16, x18)

inst_778:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x15472c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x28e67d and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8015472c; op2val:0x28e67d; valaddr_reg:x16; val_offset:128; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 128, x17, x15, 24, x18)

inst_779:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x130229 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x28e67d and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff130229; op2val:0x28e67d; valaddr_reg:x16; val_offset:136; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 136, x17, x15, 32, x18)

inst_780:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x15472c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3fb8a4 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8015472c; op2val:0x3fb8a4; valaddr_reg:x16; val_offset:144; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 144, x17, x15, 40, x18)

inst_781:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x130229 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3fb8a4 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff130229; op2val:0x3fb8a4; valaddr_reg:x16; val_offset:152; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 152, x17, x15, 48, x18)

inst_782:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x130229 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x003678 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff130229; op2val:0x80003678; valaddr_reg:x16; val_offset:160; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 160, x17, x15, 56, x18)

inst_783:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x003678 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00d7bf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x80003678; op2val:0xd7bf; valaddr_reg:x16; val_offset:168; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 168, x17, x15, 64, x18)

inst_784:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x130229 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00d7bf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff130229; op2val:0xd7bf; valaddr_reg:x16; val_offset:176; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 176, x17, x15, 72, x18)

inst_785:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x15472c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x17ad58 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8015472c; op2val:0x17ad58; valaddr_reg:x16; val_offset:184; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 184, x17, x15, 80, x18)

inst_786:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x130229 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x17ad58 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff130229; op2val:0x17ad58; valaddr_reg:x16; val_offset:192; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 192, x17, x15, 88, x18)

inst_787:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x130229 and fs2 == 1 and fe2 == 0xfa and fm2 == 0x6b36a9 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff130229; op2val:0xfd6b36a9; valaddr_reg:x16; val_offset:200; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 200, x17, x15, 96, x18)

inst_788:// fs1 == 1 and fe1 == 0xfa and fm1 == 0x6b36a9 and fs2 == 1 and fe2 == 0xfb and fm2 == 0x4aaeb1 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfd6b36a9; op2val:0xfdcaaeb1; valaddr_reg:x16; val_offset:208; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 208, x17, x15, 104, x18)

inst_789:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x130229 and fs2 == 1 and fe2 == 0xfb and fm2 == 0x4aaeb1 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff130229; op2val:0xfdcaaeb1; valaddr_reg:x16; val_offset:216; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 216, x17, x15, 112, x18)

inst_790:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x130229 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x336b1f and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff130229; op2val:0xff336b1f; valaddr_reg:x16; val_offset:224; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 224, x17, x15, 120, x18)

inst_791:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x336b1f and fs2 == 1 and fe2 == 0xfe and fm2 == 0x130229 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff336b1f; op2val:0xff130229; valaddr_reg:x16; val_offset:232; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 232, x17, x15, 128, x18)

inst_792:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x130229 and fs2 == 1 and fe2 == 0xfd and fm2 == 0x2f0416 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff130229; op2val:0xfeaf0416; valaddr_reg:x16; val_offset:240; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 240, x17, x15, 136, x18)

inst_793:// fs1 == 1 and fe1 == 0xfd and fm1 == 0x2f0416 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x130229 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfeaf0416; op2val:0xff130229; valaddr_reg:x16; val_offset:248; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 248, x17, x15, 144, x18)

inst_794:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x130229 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x73c956 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff130229; op2val:0x7ef3c956; valaddr_reg:x16; val_offset:256; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 256, x17, x15, 152, x18)

inst_795:// fs1 == 0 and fe1 == 0xfd and fm1 == 0x73c956 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x130229 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7ef3c956; op2val:0xff130229; valaddr_reg:x16; val_offset:264; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 264, x17, x15, 160, x18)

inst_796:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x130229 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x2099c0 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff130229; op2val:0x7f2099c0; valaddr_reg:x16; val_offset:272; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 272, x17, x15, 168, x18)

inst_797:// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2099c0 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x130229 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f2099c0; op2val:0xff130229; valaddr_reg:x16; val_offset:280; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 280, x17, x15, 176, x18)

inst_798:// fs1 == 1 and fe1 == 0xfa and fm1 == 0x6b36a9 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x472f12 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfd6b36a9; op2val:0x7e472f12; valaddr_reg:x16; val_offset:288; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 288, x17, x15, 184, x18)

inst_799:// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfa and fm2 == 0x6b36a9 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f7fffff; op2val:0xfd6b36a9; valaddr_reg:x16; val_offset:296; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 296, x17, x15, 192, x18)

inst_800:// fs1 == 1 and fe1 == 0xfa and fm1 == 0x6b36a9 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfd6b36a9; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:304; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 304, x17, x15, 200, x18)

inst_801:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x130229 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x472f12 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff130229; op2val:0x7e472f12; valaddr_reg:x16; val_offset:312; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 312, x17, x15, 208, x18)

inst_802:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x130229 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x7046ce and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff130229; op2val:0x7ef046ce; valaddr_reg:x16; val_offset:320; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 320, x17, x15, 216, x18)

inst_803:// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7046ce and fs2 == 1 and fe2 == 0xfe and fm2 == 0x130229 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7ef046ce; op2val:0xff130229; valaddr_reg:x16; val_offset:328; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 328, x17, x15, 224, x18)

inst_804:// fs1 == 1 and fe1 == 0xfa and fm1 == 0x6b36a9 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x36c1bf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfd6b36a9; op2val:0x7e36c1bf; valaddr_reg:x16; val_offset:336; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 336, x17, x15, 232, x18)

inst_805:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x130229 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x36c1bf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff130229; op2val:0x7e36c1bf; valaddr_reg:x16; val_offset:344; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 344, x17, x15, 240, x18)

inst_806:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x336b1f and fs2 == 1 and fe2 == 0xfe and fm2 == 0x336b1f and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff336b1f; op2val:0xff336b1f; valaddr_reg:x16; val_offset:352; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 352, x17, x15, 248, x18)

inst_807:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x336b1f and fs2 == 1 and fe2 == 0x80 and fm2 == 0x18a1e0 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff336b1f; op2val:0xc018a1e0; valaddr_reg:x16; val_offset:360; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 360, x17, x15, 256, x18)

inst_808:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x336b1f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x0007f0 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff336b1f; op2val:0x7f0; valaddr_reg:x16; val_offset:368; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 368, x17, x15, 264, x18)

inst_809:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x336b1f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x19f813 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff336b1f; op2val:0x8019f813; valaddr_reg:x16; val_offset:376; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 376, x17, x15, 272, x18)

inst_810:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x19f813 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x108f54 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8019f813; op2val:0x80108f54; valaddr_reg:x16; val_offset:384; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 384, x17, x15, 280, x18)

inst_811:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x336b1f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x108f54 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff336b1f; op2val:0x80108f54; valaddr_reg:x16; val_offset:392; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 392, x17, x15, 288, x18)

inst_812:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x19f813 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x365c4c and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8019f813; op2val:0x80365c4c; valaddr_reg:x16; val_offset:400; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 400, x17, x15, 296, x18)

inst_813:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x336b1f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x365c4c and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff336b1f; op2val:0x80365c4c; valaddr_reg:x16; val_offset:408; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 408, x17, x15, 304, x18)

inst_814:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x19f813 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x21e733 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8019f813; op2val:0x8021e733; valaddr_reg:x16; val_offset:416; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 416, x17, x15, 312, x18)

inst_815:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x336b1f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x21e733 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff336b1f; op2val:0x8021e733; valaddr_reg:x16; val_offset:424; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 424, x17, x15, 320, x18)

inst_816:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x336b1f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0298ce and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff336b1f; op2val:0x800298ce; valaddr_reg:x16; val_offset:432; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 432, x17, x15, 328, x18)

inst_817:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0298ce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0a66e8 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x800298ce; op2val:0x800a66e8; valaddr_reg:x16; val_offset:440; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 440, x17, x15, 336, x18)

inst_818:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x336b1f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0a66e8 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff336b1f; op2val:0x800a66e8; valaddr_reg:x16; val_offset:448; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 448, x17, x15, 344, x18)

inst_819:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x19f813 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x19595f and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8019f813; op2val:0x8019595f; valaddr_reg:x16; val_offset:456; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 456, x17, x15, 352, x18)

inst_820:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x336b1f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x19595f and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff336b1f; op2val:0x8019595f; valaddr_reg:x16; val_offset:464; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 464, x17, x15, 360, x18)

inst_821:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x19f813 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x217bcd and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8019f813; op2val:0x217bcd; valaddr_reg:x16; val_offset:472; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 472, x17, x15, 368, x18)

inst_822:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x336b1f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x217bcd and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff336b1f; op2val:0x217bcd; valaddr_reg:x16; val_offset:480; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 480, x17, x15, 376, x18)

inst_823:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x19f813 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x28e67d and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8019f813; op2val:0x28e67d; valaddr_reg:x16; val_offset:488; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 488, x17, x15, 384, x18)

inst_824:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x336b1f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x28e67d and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff336b1f; op2val:0x28e67d; valaddr_reg:x16; val_offset:496; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 496, x17, x15, 392, x18)

inst_825:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x19f813 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3fb8a4 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8019f813; op2val:0x3fb8a4; valaddr_reg:x16; val_offset:504; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 504, x17, x15, 400, x18)

inst_826:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x336b1f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3fb8a4 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff336b1f; op2val:0x3fb8a4; valaddr_reg:x16; val_offset:512; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 512, x17, x15, 408, x18)

inst_827:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x336b1f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x00427b and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff336b1f; op2val:0x8000427b; valaddr_reg:x16; val_offset:520; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 520, x17, x15, 416, x18)

inst_828:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x00427b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00d7bf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8000427b; op2val:0xd7bf; valaddr_reg:x16; val_offset:528; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 528, x17, x15, 424, x18)

inst_829:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x336b1f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00d7bf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff336b1f; op2val:0xd7bf; valaddr_reg:x16; val_offset:536; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 536, x17, x15, 432, x18)

inst_830:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x19f813 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x17ad58 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8019f813; op2val:0x17ad58; valaddr_reg:x16; val_offset:544; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 544, x17, x15, 440, x18)

inst_831:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x336b1f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x17ad58 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff336b1f; op2val:0x17ad58; valaddr_reg:x16; val_offset:552; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 552, x17, x15, 448, x18)

inst_832:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x336b1f and fs2 == 1 and fe2 == 0xfb and fm2 == 0x0f88e6 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff336b1f; op2val:0xfd8f88e6; valaddr_reg:x16; val_offset:560; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 560, x17, x15, 456, x18)

inst_833:// fs1 == 1 and fe1 == 0xfb and fm1 == 0x0f88e6 and fs2 == 1 and fe2 == 0xfb and fm2 == 0x4aaeb1 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfd8f88e6; op2val:0xfdcaaeb1; valaddr_reg:x16; val_offset:568; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 568, x17, x15, 464, x18)

inst_834:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x336b1f and fs2 == 1 and fe2 == 0xfb and fm2 == 0x4aaeb1 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff336b1f; op2val:0xfdcaaeb1; valaddr_reg:x16; val_offset:576; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 576, x17, x15, 472, x18)

inst_835:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x336b1f and fs2 == 1 and fe2 == 0xfd and fm2 == 0x2f0416 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff336b1f; op2val:0xfeaf0416; valaddr_reg:x16; val_offset:584; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 584, x17, x15, 480, x18)

inst_836:// fs1 == 1 and fe1 == 0xfd and fm1 == 0x2f0416 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x336b1f and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfeaf0416; op2val:0xff336b1f; valaddr_reg:x16; val_offset:592; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 592, x17, x15, 488, x18)

inst_837:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x336b1f and fs2 == 0 and fe2 == 0xfd and fm2 == 0x73c956 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff336b1f; op2val:0x7ef3c956; valaddr_reg:x16; val_offset:600; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 600, x17, x15, 496, x18)

inst_838:// fs1 == 0 and fe1 == 0xfd and fm1 == 0x73c956 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x336b1f and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7ef3c956; op2val:0xff336b1f; valaddr_reg:x16; val_offset:608; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 608, x17, x15, 504, x18)

inst_839:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x336b1f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x2099c0 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff336b1f; op2val:0x7f2099c0; valaddr_reg:x16; val_offset:616; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 616, x17, x15, 512, x18)

inst_840:// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2099c0 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x336b1f and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f2099c0; op2val:0xff336b1f; valaddr_reg:x16; val_offset:624; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 624, x17, x15, 520, x18)

inst_841:// fs1 == 1 and fe1 == 0xfb and fm1 == 0x0f88e6 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x472f12 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfd8f88e6; op2val:0x7e472f12; valaddr_reg:x16; val_offset:632; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 632, x17, x15, 528, x18)

inst_842:// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfb and fm2 == 0x0f88e6 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f7fffff; op2val:0xfd8f88e6; valaddr_reg:x16; val_offset:640; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 640, x17, x15, 536, x18)

inst_843:// fs1 == 1 and fe1 == 0xfb and fm1 == 0x0f88e6 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfd8f88e6; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:648; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 648, x17, x15, 544, x18)

inst_844:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x336b1f and fs2 == 0 and fe2 == 0xfc and fm2 == 0x472f12 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff336b1f; op2val:0x7e472f12; valaddr_reg:x16; val_offset:656; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 656, x17, x15, 552, x18)

inst_845:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x336b1f and fs2 == 0 and fe2 == 0xfd and fm2 == 0x7046ce and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff336b1f; op2val:0x7ef046ce; valaddr_reg:x16; val_offset:664; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 664, x17, x15, 560, x18)

inst_846:// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7046ce and fs2 == 1 and fe2 == 0xfe and fm2 == 0x336b1f and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7ef046ce; op2val:0xff336b1f; valaddr_reg:x16; val_offset:672; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 672, x17, x15, 568, x18)

inst_847:// fs1 == 1 and fe1 == 0xfb and fm1 == 0x0f88e6 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x36c1bf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfd8f88e6; op2val:0x7e36c1bf; valaddr_reg:x16; val_offset:680; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 680, x17, x15, 576, x18)

inst_848:// fs1 == 1 and fe1 == 0xfe and fm1 == 0x336b1f and fs2 == 0 and fe2 == 0xfc and fm2 == 0x36c1bf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xff336b1f; op2val:0x7e36c1bf; valaddr_reg:x16; val_offset:688; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 688, x17, x15, 584, x18)

inst_849:// fs1 == 1 and fe1 == 0xfd and fm1 == 0x2f0416 and fs2 == 1 and fe2 == 0xfd and fm2 == 0x2f0416 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfeaf0416; op2val:0xfeaf0416; valaddr_reg:x16; val_offset:696; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 696, x17, x15, 592, x18)

inst_850:// fs1 == 1 and fe1 == 0xfd and fm1 == 0x2f0416 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x14e31a and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfeaf0416; op2val:0xbf94e31a; valaddr_reg:x16; val_offset:704; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 704, x17, x15, 600, x18)

inst_851:// fs1 == 1 and fe1 == 0xfd and fm1 == 0x2f0416 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x0007f0 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfeaf0416; op2val:0x7f0; valaddr_reg:x16; val_offset:712; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 712, x17, x15, 608, x18)

inst_852:// fs1 == 1 and fe1 == 0xfd and fm1 == 0x2f0416 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0caa79 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfeaf0416; op2val:0x800caa79; valaddr_reg:x16; val_offset:720; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 720, x17, x15, 616, x18)

inst_853:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0caa79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x108f54 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x800caa79; op2val:0x80108f54; valaddr_reg:x16; val_offset:728; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 728, x17, x15, 624, x18)

inst_854:// fs1 == 1 and fe1 == 0xfd and fm1 == 0x2f0416 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x108f54 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfeaf0416; op2val:0x80108f54; valaddr_reg:x16; val_offset:736; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 736, x17, x15, 632, x18)

inst_855:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0caa79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x365c4c and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x800caa79; op2val:0x80365c4c; valaddr_reg:x16; val_offset:744; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 744, x17, x15, 640, x18)

inst_856:// fs1 == 1 and fe1 == 0xfd and fm1 == 0x2f0416 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x365c4c and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfeaf0416; op2val:0x80365c4c; valaddr_reg:x16; val_offset:752; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 752, x17, x15, 648, x18)

inst_857:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0caa79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x21e733 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x800caa79; op2val:0x8021e733; valaddr_reg:x16; val_offset:760; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 760, x17, x15, 656, x18)

inst_858:// fs1 == 1 and fe1 == 0xfd and fm1 == 0x2f0416 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x21e733 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfeaf0416; op2val:0x8021e733; valaddr_reg:x16; val_offset:768; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 768, x17, x15, 664, x18)

inst_859:// fs1 == 1 and fe1 == 0xfd and fm1 == 0x2f0416 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x01443f and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfeaf0416; op2val:0x8001443f; valaddr_reg:x16; val_offset:776; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 776, x17, x15, 672, x18)

inst_860:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x01443f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0a66e8 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8001443f; op2val:0x800a66e8; valaddr_reg:x16; val_offset:784; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 784, x17, x15, 680, x18)

inst_861:// fs1 == 1 and fe1 == 0xfd and fm1 == 0x2f0416 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0a66e8 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfeaf0416; op2val:0x800a66e8; valaddr_reg:x16; val_offset:792; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 792, x17, x15, 688, x18)

inst_862:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0caa79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x19595f and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x800caa79; op2val:0x8019595f; valaddr_reg:x16; val_offset:800; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 800, x17, x15, 696, x18)

inst_863:// fs1 == 1 and fe1 == 0xfd and fm1 == 0x2f0416 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x19595f and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfeaf0416; op2val:0x8019595f; valaddr_reg:x16; val_offset:808; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 808, x17, x15, 704, x18)

inst_864:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0caa79 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x217bcd and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x800caa79; op2val:0x217bcd; valaddr_reg:x16; val_offset:816; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 816, x17, x15, 712, x18)

inst_865:// fs1 == 1 and fe1 == 0xfd and fm1 == 0x2f0416 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x217bcd and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfeaf0416; op2val:0x217bcd; valaddr_reg:x16; val_offset:824; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 824, x17, x15, 720, x18)

inst_866:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0caa79 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x28e67d and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x800caa79; op2val:0x28e67d; valaddr_reg:x16; val_offset:832; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 832, x17, x15, 728, x18)

inst_867:// fs1 == 1 and fe1 == 0xfd and fm1 == 0x2f0416 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x28e67d and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfeaf0416; op2val:0x28e67d; valaddr_reg:x16; val_offset:840; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 840, x17, x15, 736, x18)

inst_868:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0caa79 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3fb8a4 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x800caa79; op2val:0x3fb8a4; valaddr_reg:x16; val_offset:848; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 848, x17, x15, 744, x18)

inst_869:// fs1 == 1 and fe1 == 0xfd and fm1 == 0x2f0416 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3fb8a4 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfeaf0416; op2val:0x3fb8a4; valaddr_reg:x16; val_offset:856; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 856, x17, x15, 752, x18)

inst_870:// fs1 == 1 and fe1 == 0xfd and fm1 == 0x2f0416 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x00206c and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfeaf0416; op2val:0x8000206c; valaddr_reg:x16; val_offset:864; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 864, x17, x15, 760, x18)

inst_871:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x00206c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00d7bf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x8000206c; op2val:0xd7bf; valaddr_reg:x16; val_offset:872; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 872, x17, x15, 768, x18)

inst_872:// fs1 == 1 and fe1 == 0xfd and fm1 == 0x2f0416 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00d7bf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfeaf0416; op2val:0xd7bf; valaddr_reg:x16; val_offset:880; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 880, x17, x15, 776, x18)

inst_873:// fs1 == 1 and fe1 == 0x00 and fm1 == 0x0caa79 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x17ad58 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x800caa79; op2val:0x17ad58; valaddr_reg:x16; val_offset:888; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 888, x17, x15, 784, x18)

inst_874:// fs1 == 1 and fe1 == 0xfd and fm1 == 0x2f0416 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x17ad58 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfeaf0416; op2val:0x17ad58; valaddr_reg:x16; val_offset:896; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 896, x17, x15, 792, x18)

inst_875:// fs1 == 1 and fe1 == 0xfd and fm1 == 0x2f0416 and fs2 == 1 and fe2 == 0xfa and fm2 == 0x0c0345 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfeaf0416; op2val:0xfd0c0345; valaddr_reg:x16; val_offset:904; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 904, x17, x15, 800, x18)

inst_876:// fs1 == 1 and fe1 == 0xfa and fm1 == 0x0c0345 and fs2 == 1 and fe2 == 0xfb and fm2 == 0x4aaeb1 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfd0c0345; op2val:0xfdcaaeb1; valaddr_reg:x16; val_offset:912; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 912, x17, x15, 808, x18)

inst_877:// fs1 == 1 and fe1 == 0xfd and fm1 == 0x2f0416 and fs2 == 1 and fe2 == 0xfb and fm2 == 0x4aaeb1 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfeaf0416; op2val:0xfdcaaeb1; valaddr_reg:x16; val_offset:920; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 920, x17, x15, 816, x18)

inst_878:// fs1 == 1 and fe1 == 0xfd and fm1 == 0x2f0416 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x73c956 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfeaf0416; op2val:0x7ef3c956; valaddr_reg:x16; val_offset:928; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 928, x17, x15, 824, x18)

inst_879:// fs1 == 0 and fe1 == 0xfd and fm1 == 0x73c956 and fs2 == 1 and fe2 == 0xfd and fm2 == 0x2f0416 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7ef3c956; op2val:0xfeaf0416; valaddr_reg:x16; val_offset:936; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 936, x17, x15, 832, x18)

inst_880:// fs1 == 1 and fe1 == 0xfd and fm1 == 0x2f0416 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x2099c0 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfeaf0416; op2val:0x7f2099c0; valaddr_reg:x16; val_offset:944; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 944, x17, x15, 840, x18)

inst_881:// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2099c0 and fs2 == 1 and fe2 == 0xfd and fm2 == 0x2f0416 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f2099c0; op2val:0xfeaf0416; valaddr_reg:x16; val_offset:952; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 952, x17, x15, 848, x18)

inst_882:// fs1 == 1 and fe1 == 0xfa and fm1 == 0x0c0345 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x472f12 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfd0c0345; op2val:0x7e472f12; valaddr_reg:x16; val_offset:960; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 960, x17, x15, 856, x18)

inst_883:// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 1 and fe2 == 0xfa and fm2 == 0x0c0345 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f7fffff; op2val:0xfd0c0345; valaddr_reg:x16; val_offset:968; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 968, x17, x15, 864, x18)

inst_884:// fs1 == 1 and fe1 == 0xfa and fm1 == 0x0c0345 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfd0c0345; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:976; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 976, x17, x15, 872, x18)

inst_885:// fs1 == 1 and fe1 == 0xfd and fm1 == 0x2f0416 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x472f12 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfeaf0416; op2val:0x7e472f12; valaddr_reg:x16; val_offset:984; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 984, x17, x15, 880, x18)

inst_886:// fs1 == 1 and fe1 == 0xfd and fm1 == 0x2f0416 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x7046ce and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfeaf0416; op2val:0x7ef046ce; valaddr_reg:x16; val_offset:992; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 992, x17, x15, 888, x18)

inst_887:// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7046ce and fs2 == 1 and fe2 == 0xfd and fm2 == 0x2f0416 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7ef046ce; op2val:0xfeaf0416; valaddr_reg:x16; val_offset:1000; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1000, x17, x15, 896, x18)

inst_888:// fs1 == 1 and fe1 == 0xfa and fm1 == 0x0c0345 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x36c1bf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfd0c0345; op2val:0x7e36c1bf; valaddr_reg:x16; val_offset:1008; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1008, x17, x15, 904, x18)

inst_889:// fs1 == 1 and fe1 == 0xfd and fm1 == 0x2f0416 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x36c1bf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xfeaf0416; op2val:0x7e36c1bf; valaddr_reg:x16; val_offset:1016; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1016, x17, x15, 912, x18)

inst_890:// fs1 == 0 and fe1 == 0xfd and fm1 == 0x73c956 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x73c956 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7ef3c956; op2val:0x7ef3c956; valaddr_reg:x16; val_offset:1024; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1024, x17, x15, 920, x18)

inst_891:// fs1 == 0 and fe1 == 0xfd and fm1 == 0x73c956 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4f63fe and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7ef3c956; op2val:0x3fcf63fe; valaddr_reg:x16; val_offset:1032; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1032, x17, x15, 928, x18)

inst_892:// fs1 == 0 and fe1 == 0xfd and fm1 == 0x73c956 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x0007f0 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7ef3c956; op2val:0x7f0; valaddr_reg:x16; val_offset:1040; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1040, x17, x15, 936, x18)

inst_893:// fs1 == 0 and fe1 == 0xfd and fm1 == 0x73c956 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x11a491 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7ef3c956; op2val:0x11a491; valaddr_reg:x16; val_offset:1048; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1048, x17, x15, 944, x18)

inst_894:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x11a491 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x108f54 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x11a491; op2val:0x80108f54; valaddr_reg:x16; val_offset:1056; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1056, x17, x15, 952, x18)

inst_895:// fs1 == 0 and fe1 == 0xfd and fm1 == 0x73c956 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x108f54 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7ef3c956; op2val:0x80108f54; valaddr_reg:x16; val_offset:1064; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1064, x17, x15, 960, x18)

inst_896:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x11a491 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x365c4c and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x11a491; op2val:0x80365c4c; valaddr_reg:x16; val_offset:1072; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1072, x17, x15, 968, x18)

inst_897:// fs1 == 0 and fe1 == 0xfd and fm1 == 0x73c956 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x365c4c and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7ef3c956; op2val:0x80365c4c; valaddr_reg:x16; val_offset:1080; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1080, x17, x15, 976, x18)

inst_898:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x11a491 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x21e733 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x11a491; op2val:0x8021e733; valaddr_reg:x16; val_offset:1088; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1088, x17, x15, 984, x18)

inst_899:// fs1 == 0 and fe1 == 0xfd and fm1 == 0x73c956 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x21e733 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7ef3c956; op2val:0x8021e733; valaddr_reg:x16; val_offset:1096; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1096, x17, x15, 992, x18)

inst_900:// fs1 == 0 and fe1 == 0xfd and fm1 == 0x73c956 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x01c3a8 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7ef3c956; op2val:0x1c3a8; valaddr_reg:x16; val_offset:1104; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1104, x17, x15, 1000, x18)

inst_901:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x01c3a8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0a66e8 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x1c3a8; op2val:0x800a66e8; valaddr_reg:x16; val_offset:1112; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1112, x17, x15, 1008, x18)

inst_902:// fs1 == 0 and fe1 == 0xfd and fm1 == 0x73c956 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0a66e8 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7ef3c956; op2val:0x800a66e8; valaddr_reg:x16; val_offset:1120; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1120, x17, x15, 1016, x18)

inst_903:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x11a491 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x19595f and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x11a491; op2val:0x8019595f; valaddr_reg:x16; val_offset:1128; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1128, x17, x15, 1024, x18)

inst_904:// fs1 == 0 and fe1 == 0xfd and fm1 == 0x73c956 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x19595f and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7ef3c956; op2val:0x8019595f; valaddr_reg:x16; val_offset:1136; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1136, x17, x15, 1032, x18)

inst_905:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x11a491 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x217bcd and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x11a491; op2val:0x217bcd; valaddr_reg:x16; val_offset:1144; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1144, x17, x15, 1040, x18)

inst_906:// fs1 == 0 and fe1 == 0xfd and fm1 == 0x73c956 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x217bcd and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7ef3c956; op2val:0x217bcd; valaddr_reg:x16; val_offset:1152; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1152, x17, x15, 1048, x18)

inst_907:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x11a491 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x28e67d and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x11a491; op2val:0x28e67d; valaddr_reg:x16; val_offset:1160; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1160, x17, x15, 1056, x18)

inst_908:// fs1 == 0 and fe1 == 0xfd and fm1 == 0x73c956 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x28e67d and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7ef3c956; op2val:0x28e67d; valaddr_reg:x16; val_offset:1168; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1168, x17, x15, 1064, x18)

inst_909:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x11a491 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3fb8a4 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x11a491; op2val:0x3fb8a4; valaddr_reg:x16; val_offset:1176; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1176, x17, x15, 1072, x18)

inst_910:// fs1 == 0 and fe1 == 0xfd and fm1 == 0x73c956 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3fb8a4 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7ef3c956; op2val:0x3fb8a4; valaddr_reg:x16; val_offset:1184; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1184, x17, x15, 1080, x18)

inst_911:// fs1 == 0 and fe1 == 0xfd and fm1 == 0x73c956 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x002d2a and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7ef3c956; op2val:0x2d2a; valaddr_reg:x16; val_offset:1192; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1192, x17, x15, 1088, x18)

inst_912:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x002d2a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00d7bf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x2d2a; op2val:0xd7bf; valaddr_reg:x16; val_offset:1200; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1200, x17, x15, 1096, x18)

inst_913:// fs1 == 0 and fe1 == 0xfd and fm1 == 0x73c956 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00d7bf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7ef3c956; op2val:0xd7bf; valaddr_reg:x16; val_offset:1208; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1208, x17, x15, 1104, x18)

inst_914:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x11a491 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x17ad58 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x11a491; op2val:0x17ad58; valaddr_reg:x16; val_offset:1216; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1216, x17, x15, 1112, x18)

inst_915:// fs1 == 0 and fe1 == 0xfd and fm1 == 0x73c956 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x17ad58 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7ef3c956; op2val:0x17ad58; valaddr_reg:x16; val_offset:1224; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1224, x17, x15, 1120, x18)

inst_916:// fs1 == 0 and fe1 == 0xfd and fm1 == 0x73c956 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x430778 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7ef3c956; op2val:0x7d430778; valaddr_reg:x16; val_offset:1232; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1232, x17, x15, 1128, x18)

inst_917:// fs1 == 0 and fe1 == 0xfa and fm1 == 0x430778 and fs2 == 1 and fe2 == 0xfb and fm2 == 0x4aaeb1 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7d430778; op2val:0xfdcaaeb1; valaddr_reg:x16; val_offset:1240; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1240, x17, x15, 1136, x18)

inst_918:// fs1 == 0 and fe1 == 0xfd and fm1 == 0x73c956 and fs2 == 1 and fe2 == 0xfb and fm2 == 0x4aaeb1 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7ef3c956; op2val:0xfdcaaeb1; valaddr_reg:x16; val_offset:1248; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1248, x17, x15, 1144, x18)

inst_919:// fs1 == 0 and fe1 == 0xfd and fm1 == 0x73c956 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x2099c0 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7ef3c956; op2val:0x7f2099c0; valaddr_reg:x16; val_offset:1256; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1256, x17, x15, 1152, x18)

inst_920:// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2099c0 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x73c956 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f2099c0; op2val:0x7ef3c956; valaddr_reg:x16; val_offset:1264; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1264, x17, x15, 1160, x18)

inst_921:// fs1 == 0 and fe1 == 0xfa and fm1 == 0x430778 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x472f12 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7d430778; op2val:0x7e472f12; valaddr_reg:x16; val_offset:1272; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1272, x17, x15, 1168, x18)

inst_922:// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfa and fm2 == 0x430778 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f7fffff; op2val:0x7d430778; valaddr_reg:x16; val_offset:1280; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1280, x17, x15, 1176, x18)

inst_923:// fs1 == 0 and fe1 == 0xfa and fm1 == 0x430778 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7d430778; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1288; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1288, x17, x15, 1184, x18)

inst_924:// fs1 == 0 and fe1 == 0xfd and fm1 == 0x73c956 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x472f12 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7ef3c956; op2val:0x7e472f12; valaddr_reg:x16; val_offset:1296; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1296, x17, x15, 1192, x18)

inst_925:// fs1 == 0 and fe1 == 0xfd and fm1 == 0x73c956 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x7046ce and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7ef3c956; op2val:0x7ef046ce; valaddr_reg:x16; val_offset:1304; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1304, x17, x15, 1200, x18)

inst_926:// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7046ce and fs2 == 0 and fe2 == 0xfd and fm2 == 0x73c956 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7ef046ce; op2val:0x7ef3c956; valaddr_reg:x16; val_offset:1312; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1312, x17, x15, 1208, x18)

inst_927:// fs1 == 0 and fe1 == 0xfa and fm1 == 0x430778 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x36c1bf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7d430778; op2val:0x7e36c1bf; valaddr_reg:x16; val_offset:1320; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1320, x17, x15, 1216, x18)

inst_928:// fs1 == 0 and fe1 == 0xfd and fm1 == 0x73c956 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x36c1bf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7ef3c956; op2val:0x7e36c1bf; valaddr_reg:x16; val_offset:1328; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1328, x17, x15, 1224, x18)

inst_929:// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2099c0 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x2099c0 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f2099c0; op2val:0x7f2099c0; valaddr_reg:x16; val_offset:1336; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1336, x17, x15, 1232, x18)

inst_930:// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2099c0 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x089fb6 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f2099c0; op2val:0x40089fb6; valaddr_reg:x16; val_offset:1344; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1344, x17, x15, 1240, x18)

inst_931:// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2099c0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x0007f0 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f2099c0; op2val:0x7f0; valaddr_reg:x16; val_offset:1352; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1352, x17, x15, 1248, x18)

inst_932:// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2099c0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x173ecf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f2099c0; op2val:0x173ecf; valaddr_reg:x16; val_offset:1360; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1360, x17, x15, 1256, x18)

inst_933:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x173ecf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x108f54 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x173ecf; op2val:0x80108f54; valaddr_reg:x16; val_offset:1368; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1368, x17, x15, 1264, x18)

inst_934:// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2099c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x108f54 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f2099c0; op2val:0x80108f54; valaddr_reg:x16; val_offset:1376; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1376, x17, x15, 1272, x18)

inst_935:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x173ecf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x365c4c and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x173ecf; op2val:0x80365c4c; valaddr_reg:x16; val_offset:1384; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1384, x17, x15, 1280, x18)

inst_936:// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2099c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x365c4c and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f2099c0; op2val:0x80365c4c; valaddr_reg:x16; val_offset:1392; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1392, x17, x15, 1288, x18)

inst_937:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x173ecf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x21e733 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x173ecf; op2val:0x8021e733; valaddr_reg:x16; val_offset:1400; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1400, x17, x15, 1296, x18)

inst_938:// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2099c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x21e733 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f2099c0; op2val:0x8021e733; valaddr_reg:x16; val_offset:1408; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1408, x17, x15, 1304, x18)

inst_939:// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2099c0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x025314 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f2099c0; op2val:0x25314; valaddr_reg:x16; val_offset:1416; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1416, x17, x15, 1312, x18)

inst_940:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x025314 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0a66e8 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x25314; op2val:0x800a66e8; valaddr_reg:x16; val_offset:1424; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1424, x17, x15, 1320, x18)

inst_941:// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2099c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0a66e8 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f2099c0; op2val:0x800a66e8; valaddr_reg:x16; val_offset:1432; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1432, x17, x15, 1328, x18)

inst_942:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x173ecf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x19595f and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x173ecf; op2val:0x8019595f; valaddr_reg:x16; val_offset:1440; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1440, x17, x15, 1336, x18)

inst_943:// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2099c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x19595f and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f2099c0; op2val:0x8019595f; valaddr_reg:x16; val_offset:1448; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1448, x17, x15, 1344, x18)

inst_944:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x173ecf and fs2 == 0 and fe2 == 0x00 and fm2 == 0x217bcd and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x173ecf; op2val:0x217bcd; valaddr_reg:x16; val_offset:1456; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1456, x17, x15, 1352, x18)

inst_945:// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2099c0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x217bcd and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f2099c0; op2val:0x217bcd; valaddr_reg:x16; val_offset:1464; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1464, x17, x15, 1360, x18)

inst_946:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x173ecf and fs2 == 0 and fe2 == 0x00 and fm2 == 0x28e67d and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x173ecf; op2val:0x28e67d; valaddr_reg:x16; val_offset:1472; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1472, x17, x15, 1368, x18)

inst_947:// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2099c0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x28e67d and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f2099c0; op2val:0x28e67d; valaddr_reg:x16; val_offset:1480; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1480, x17, x15, 1376, x18)

inst_948:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x173ecf and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3fb8a4 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x173ecf; op2val:0x3fb8a4; valaddr_reg:x16; val_offset:1488; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1488, x17, x15, 1384, x18)

inst_949:// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2099c0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3fb8a4 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f2099c0; op2val:0x3fb8a4; valaddr_reg:x16; val_offset:1496; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1496, x17, x15, 1392, x18)

inst_950:// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2099c0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x003b82 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f2099c0; op2val:0x3b82; valaddr_reg:x16; val_offset:1504; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1504, x17, x15, 1400, x18)

inst_951:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x003b82 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00d7bf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x3b82; op2val:0xd7bf; valaddr_reg:x16; val_offset:1512; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1512, x17, x15, 1408, x18)

inst_952:// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2099c0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00d7bf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f2099c0; op2val:0xd7bf; valaddr_reg:x16; val_offset:1520; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1520, x17, x15, 1416, x18)

inst_953:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x173ecf and fs2 == 0 and fe2 == 0x00 and fm2 == 0x17ad58 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x173ecf; op2val:0x17ad58; valaddr_reg:x16; val_offset:1528; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1528, x17, x15, 1424, x18)

inst_954:// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2099c0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x17ad58 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f2099c0; op2val:0x17ad58; valaddr_reg:x16; val_offset:1536; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1536, x17, x15, 1432, x18)

inst_955:// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2099c0 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x007b00 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f2099c0; op2val:0x7d807b00; valaddr_reg:x16; val_offset:1544; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1544, x17, x15, 1440, x18)

inst_956:// fs1 == 0 and fe1 == 0xfb and fm1 == 0x007b00 and fs2 == 1 and fe2 == 0xfb and fm2 == 0x4aaeb1 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7d807b00; op2val:0xfdcaaeb1; valaddr_reg:x16; val_offset:1552; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1552, x17, x15, 1448, x18)

inst_957:// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2099c0 and fs2 == 1 and fe2 == 0xfb and fm2 == 0x4aaeb1 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f2099c0; op2val:0xfdcaaeb1; valaddr_reg:x16; val_offset:1560; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1560, x17, x15, 1456, x18)

inst_958:// fs1 == 0 and fe1 == 0xfb and fm1 == 0x007b00 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x472f12 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7d807b00; op2val:0x7e472f12; valaddr_reg:x16; val_offset:1568; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1568, x17, x15, 1464, x18)

inst_959:// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfb and fm2 == 0x007b00 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f7fffff; op2val:0x7d807b00; valaddr_reg:x16; val_offset:1576; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1576, x17, x15, 1472, x18)

inst_960:// fs1 == 0 and fe1 == 0xfb and fm1 == 0x007b00 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7d807b00; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1584; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1584, x17, x15, 1480, x18)

inst_961:// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2099c0 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x472f12 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f2099c0; op2val:0x7e472f12; valaddr_reg:x16; val_offset:1592; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1592, x17, x15, 1488, x18)

inst_962:// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2099c0 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x7046ce and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f2099c0; op2val:0x7ef046ce; valaddr_reg:x16; val_offset:1600; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1600, x17, x15, 1496, x18)

inst_963:// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7046ce and fs2 == 0 and fe2 == 0xfe and fm2 == 0x2099c0 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7ef046ce; op2val:0x7f2099c0; valaddr_reg:x16; val_offset:1608; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1608, x17, x15, 1504, x18)

inst_964:// fs1 == 0 and fe1 == 0xfb and fm1 == 0x007b00 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x36c1bf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7d807b00; op2val:0x7e36c1bf; valaddr_reg:x16; val_offset:1616; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1616, x17, x15, 1512, x18)

inst_965:// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2099c0 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x36c1bf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f2099c0; op2val:0x7e36c1bf; valaddr_reg:x16; val_offset:1624; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1624, x17, x15, 1520, x18)

inst_966:// fs1 == 0 and fe1 == 0xfc and fm1 == 0x472f12 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x472f12 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7e472f12; op2val:0x7e472f12; valaddr_reg:x16; val_offset:1632; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1632, x17, x15, 1528, x18)

inst_967:// fs1 == 0 and fe1 == 0xfc and fm1 == 0x472f12 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x53cf02 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7e472f12; op2val:0x40d3cf02; valaddr_reg:x16; val_offset:1640; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1640, x17, x15, 1536, x18)

inst_968:// fs1 == 0 and fe1 == 0xfc and fm1 == 0x472f12 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x0007f0 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7e472f12; op2val:0x7f0; valaddr_reg:x16; val_offset:1648; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1648, x17, x15, 1544, x18)

inst_969:// fs1 == 0 and fe1 == 0xfc and fm1 == 0x472f12 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x481322 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7e472f12; op2val:0x481322; valaddr_reg:x16; val_offset:1656; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1656, x17, x15, 1552, x18)

inst_970:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x481322 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x108f54 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x481322; op2val:0x80108f54; valaddr_reg:x16; val_offset:1664; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1664, x17, x15, 1560, x18)

inst_971:// fs1 == 0 and fe1 == 0xfc and fm1 == 0x472f12 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x108f54 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7e472f12; op2val:0x80108f54; valaddr_reg:x16; val_offset:1672; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1672, x17, x15, 1568, x18)

inst_972:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x481322 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x365c4c and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x481322; op2val:0x80365c4c; valaddr_reg:x16; val_offset:1680; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1680, x17, x15, 1576, x18)

inst_973:// fs1 == 0 and fe1 == 0xfc and fm1 == 0x472f12 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x365c4c and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7e472f12; op2val:0x80365c4c; valaddr_reg:x16; val_offset:1688; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1688, x17, x15, 1584, x18)

inst_974:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x481322 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x21e733 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x481322; op2val:0x8021e733; valaddr_reg:x16; val_offset:1696; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1696, x17, x15, 1592, x18)

inst_975:// fs1 == 0 and fe1 == 0xfc and fm1 == 0x472f12 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x21e733 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7e472f12; op2val:0x8021e733; valaddr_reg:x16; val_offset:1704; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1704, x17, x15, 1600, x18)

inst_976:// fs1 == 0 and fe1 == 0xfc and fm1 == 0x472f12 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x07351d and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7e472f12; op2val:0x7351d; valaddr_reg:x16; val_offset:1712; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1712, x17, x15, 1608, x18)

inst_977:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x07351d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0a66e8 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7351d; op2val:0x800a66e8; valaddr_reg:x16; val_offset:1720; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1720, x17, x15, 1616, x18)

inst_978:// fs1 == 0 and fe1 == 0xfc and fm1 == 0x472f12 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0a66e8 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7e472f12; op2val:0x800a66e8; valaddr_reg:x16; val_offset:1728; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1728, x17, x15, 1624, x18)

inst_979:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x481322 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x19595f and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x481322; op2val:0x8019595f; valaddr_reg:x16; val_offset:1736; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1736, x17, x15, 1632, x18)

inst_980:// fs1 == 0 and fe1 == 0xfc and fm1 == 0x472f12 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x19595f and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7e472f12; op2val:0x8019595f; valaddr_reg:x16; val_offset:1744; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1744, x17, x15, 1640, x18)

inst_981:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x481322 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x217bcd and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x481322; op2val:0x217bcd; valaddr_reg:x16; val_offset:1752; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1752, x17, x15, 1648, x18)

inst_982:// fs1 == 0 and fe1 == 0xfc and fm1 == 0x472f12 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x217bcd and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7e472f12; op2val:0x217bcd; valaddr_reg:x16; val_offset:1760; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1760, x17, x15, 1656, x18)

inst_983:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x481322 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x28e67d and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x481322; op2val:0x28e67d; valaddr_reg:x16; val_offset:1768; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1768, x17, x15, 1664, x18)

inst_984:// fs1 == 0 and fe1 == 0xfc and fm1 == 0x472f12 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x28e67d and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7e472f12; op2val:0x28e67d; valaddr_reg:x16; val_offset:1776; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1776, x17, x15, 1672, x18)

inst_985:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x481322 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3fb8a4 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x481322; op2val:0x3fb8a4; valaddr_reg:x16; val_offset:1784; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1784, x17, x15, 1680, x18)

inst_986:// fs1 == 0 and fe1 == 0xfc and fm1 == 0x472f12 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3fb8a4 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7e472f12; op2val:0x3fb8a4; valaddr_reg:x16; val_offset:1792; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1792, x17, x15, 1688, x18)

inst_987:// fs1 == 0 and fe1 == 0xfc and fm1 == 0x472f12 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00b882 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7e472f12; op2val:0xb882; valaddr_reg:x16; val_offset:1800; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1800, x17, x15, 1696, x18)

inst_988:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00b882 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00d7bf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xb882; op2val:0xd7bf; valaddr_reg:x16; val_offset:1808; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1808, x17, x15, 1704, x18)

inst_989:// fs1 == 0 and fe1 == 0xfc and fm1 == 0x472f12 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00d7bf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7e472f12; op2val:0xd7bf; valaddr_reg:x16; val_offset:1816; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1816, x17, x15, 1712, x18)

inst_990:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x481322 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x17ad58 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x481322; op2val:0x17ad58; valaddr_reg:x16; val_offset:1824; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1824, x17, x15, 1720, x18)

inst_991:// fs1 == 0 and fe1 == 0xfc and fm1 == 0x472f12 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x17ad58 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7e472f12; op2val:0x17ad58; valaddr_reg:x16; val_offset:1832; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1832, x17, x15, 1728, x18)

inst_992:// fs1 == 0 and fe1 == 0xfc and fm1 == 0x472f12 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7e472f12; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1840; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1840, x17, x15, 1736, x18)

inst_993:// fs1 == 0 and fe1 == 0xfc and fm1 == 0x472f12 and fs2 == 1 and fe2 == 0xfd and fm2 == 0x491492 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7e472f12; op2val:0xfec91492; valaddr_reg:x16; val_offset:1848; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1848, x17, x15, 1744, x18)

inst_994:// fs1 == 0 and fe1 == 0xfc and fm1 == 0x472f12 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x130229 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7e472f12; op2val:0xff130229; valaddr_reg:x16; val_offset:1856; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1856, x17, x15, 1752, x18)

inst_995:// fs1 == 0 and fe1 == 0xfc and fm1 == 0x472f12 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x336b1f and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7e472f12; op2val:0xff336b1f; valaddr_reg:x16; val_offset:1864; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1864, x17, x15, 1760, x18)

inst_996:// fs1 == 0 and fe1 == 0xfc and fm1 == 0x472f12 and fs2 == 1 and fe2 == 0xfd and fm2 == 0x2f0416 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7e472f12; op2val:0xfeaf0416; valaddr_reg:x16; val_offset:1872; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1872, x17, x15, 1768, x18)

inst_997:// fs1 == 0 and fe1 == 0xfc and fm1 == 0x472f12 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x73c956 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7e472f12; op2val:0x7ef3c956; valaddr_reg:x16; val_offset:1880; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1880, x17, x15, 1776, x18)

inst_998:// fs1 == 0 and fe1 == 0xfc and fm1 == 0x472f12 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x2099c0 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7e472f12; op2val:0x7f2099c0; valaddr_reg:x16; val_offset:1888; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1888, x17, x15, 1784, x18)

inst_999:// fs1 == 0 and fe1 == 0xfa and fm1 == 0x4038a5 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7d4038a5; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1896; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1896, x17, x15, 1792, x18)

inst_1000:// fs1 == 0 and fe1 == 0xfe and fm1 == 0x7fffff and fs2 == 0 and fe2 == 0xfa and fm2 == 0x4038a5 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f7fffff; op2val:0x7d4038a5; valaddr_reg:x16; val_offset:1904; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1904, x17, x15, 1800, x18)

inst_1001:// fs1 == 0 and fe1 == 0xfc and fm1 == 0x472f12 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x7046ce and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7e472f12; op2val:0x7ef046ce; valaddr_reg:x16; val_offset:1912; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1912, x17, x15, 1808, x18)

inst_1002:// fs1 == 0 and fe1 == 0xfc and fm1 == 0x472f12 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x36c1bf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7e472f12; op2val:0x7e36c1bf; valaddr_reg:x16; val_offset:1920; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1920, x17, x15, 1816, x18)

inst_1003:// fs1 == 0 and fe1 == 0xfc and fm1 == 0x36c1bf and fs2 == 0 and fe2 == 0xfc and fm2 == 0x472f12 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7e36c1bf; op2val:0x7e472f12; valaddr_reg:x16; val_offset:1928; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1928, x17, x15, 1824, x18)

inst_1004:// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7046ce and fs2 == 0 and fe2 == 0xfd and fm2 == 0x7046ce and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7ef046ce; op2val:0x7ef046ce; valaddr_reg:x16; val_offset:1936; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1936, x17, x15, 1832, x18)

inst_1005:// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7046ce and fs2 == 0 and fe2 == 0x7f and fm2 == 0x4c679b and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7ef046ce; op2val:0x3fcc679b; valaddr_reg:x16; val_offset:1944; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1944, x17, x15, 1840, x18)

inst_1006:// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7046ce and fs2 == 0 and fe2 == 0x00 and fm2 == 0x0007f0 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7ef046ce; op2val:0x7f0; valaddr_reg:x16; val_offset:1952; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1952, x17, x15, 1848, x18)

inst_1007:// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7046ce and fs2 == 0 and fe2 == 0x00 and fm2 == 0x11638a and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7ef046ce; op2val:0x11638a; valaddr_reg:x16; val_offset:1960; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1960, x17, x15, 1856, x18)

inst_1008:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x11638a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x108f54 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x11638a; op2val:0x80108f54; valaddr_reg:x16; val_offset:1968; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1968, x17, x15, 1864, x18)

inst_1009:// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7046ce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x108f54 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7ef046ce; op2val:0x80108f54; valaddr_reg:x16; val_offset:1976; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1976, x17, x15, 1872, x18)

inst_1010:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x11638a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x365c4c and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x11638a; op2val:0x80365c4c; valaddr_reg:x16; val_offset:1984; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1984, x17, x15, 1880, x18)

inst_1011:// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7046ce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x365c4c and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7ef046ce; op2val:0x80365c4c; valaddr_reg:x16; val_offset:1992; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 1992, x17, x15, 1888, x18)

inst_1012:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x11638a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x21e733 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x11638a; op2val:0x8021e733; valaddr_reg:x16; val_offset:2000; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 2000, x17, x15, 1896, x18)

inst_1013:// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7046ce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x21e733 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7ef046ce; op2val:0x8021e733; valaddr_reg:x16; val_offset:2008; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 2008, x17, x15, 1904, x18)

inst_1014:// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7046ce and fs2 == 0 and fe2 == 0x00 and fm2 == 0x01bd27 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7ef046ce; op2val:0x1bd27; valaddr_reg:x16; val_offset:2016; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 2016, x17, x15, 1912, x18)

inst_1015:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x01bd27 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0a66e8 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x1bd27; op2val:0x800a66e8; valaddr_reg:x16; val_offset:2024; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 2024, x17, x15, 1920, x18)
addi x16,x16,2032

inst_1016:// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7046ce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0a66e8 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7ef046ce; op2val:0x800a66e8; valaddr_reg:x16; val_offset:0; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 0, x17, x15, 1928, x18)

inst_1017:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x11638a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x19595f and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x11638a; op2val:0x8019595f; valaddr_reg:x16; val_offset:8; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 8, x17, x15, 1936, x18)

inst_1018:// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7046ce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x19595f and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7ef046ce; op2val:0x8019595f; valaddr_reg:x16; val_offset:16; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 16, x17, x15, 1944, x18)

inst_1019:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x11638a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x217bcd and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x11638a; op2val:0x217bcd; valaddr_reg:x16; val_offset:24; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 24, x17, x15, 1952, x18)

inst_1020:// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7046ce and fs2 == 0 and fe2 == 0x00 and fm2 == 0x217bcd and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7ef046ce; op2val:0x217bcd; valaddr_reg:x16; val_offset:32; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 32, x17, x15, 1960, x18)

inst_1021:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x11638a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x28e67d and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x11638a; op2val:0x28e67d; valaddr_reg:x16; val_offset:40; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 40, x17, x15, 1968, x18)

inst_1022:// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7046ce and fs2 == 0 and fe2 == 0x00 and fm2 == 0x28e67d and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7ef046ce; op2val:0x28e67d; valaddr_reg:x16; val_offset:48; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 48, x17, x15, 1976, x18)

inst_1023:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x11638a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3fb8a4 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x11638a; op2val:0x3fb8a4; valaddr_reg:x16; val_offset:56; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 56, x17, x15, 1984, x18)

inst_1024:// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7046ce and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3fb8a4 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7ef046ce; op2val:0x3fb8a4; valaddr_reg:x16; val_offset:64; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 64, x17, x15, 1992, x18)

inst_1025:// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7046ce and fs2 == 0 and fe2 == 0x00 and fm2 == 0x002c83 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7ef046ce; op2val:0x2c83; valaddr_reg:x16; val_offset:72; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 72, x17, x15, 2000, x18)

inst_1026:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x002c83 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00d7bf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x2c83; op2val:0xd7bf; valaddr_reg:x16; val_offset:80; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 80, x17, x15, 2008, x18)

inst_1027:// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7046ce and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00d7bf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7ef046ce; op2val:0xd7bf; valaddr_reg:x16; val_offset:88; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 88, x17, x15, 2016, x18)

inst_1028:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x11638a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x17ad58 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x11638a; op2val:0x17ad58; valaddr_reg:x16; val_offset:96; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 96, x17, x15, 2024, x18)
RVTEST_SIGBASE(x15,signature_x15_7)

inst_1029:// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7046ce and fs2 == 0 and fe2 == 0x00 and fm2 == 0x17ad58 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7ef046ce; op2val:0x17ad58; valaddr_reg:x16; val_offset:104; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 104, x17, x15, 0, x18)

inst_1030:// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7046ce and fs2 == 0 and fe2 == 0xfa and fm2 == 0x4038a5 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7ef046ce; op2val:0x7d4038a5; valaddr_reg:x16; val_offset:112; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 112, x17, x15, 8, x18)

inst_1031:// fs1 == 0 and fe1 == 0xfa and fm1 == 0x4038a5 and fs2 == 1 and fe2 == 0xfb and fm2 == 0x4aaeb1 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7d4038a5; op2val:0xfdcaaeb1; valaddr_reg:x16; val_offset:120; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 120, x17, x15, 16, x18)

inst_1032:// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7046ce and fs2 == 1 and fe2 == 0xfb and fm2 == 0x4aaeb1 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7ef046ce; op2val:0xfdcaaeb1; valaddr_reg:x16; val_offset:128; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 128, x17, x15, 24, x18)

inst_1033:// fs1 == 0 and fe1 == 0xfa and fm1 == 0x4038a5 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x472f12 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7d4038a5; op2val:0x7e472f12; valaddr_reg:x16; val_offset:136; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 136, x17, x15, 32, x18)

inst_1034:// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7046ce and fs2 == 0 and fe2 == 0xfc and fm2 == 0x472f12 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7ef046ce; op2val:0x7e472f12; valaddr_reg:x16; val_offset:144; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 144, x17, x15, 40, x18)

inst_1035:// fs1 == 0 and fe1 == 0xfa and fm1 == 0x4038a5 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x36c1bf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7d4038a5; op2val:0x7e36c1bf; valaddr_reg:x16; val_offset:152; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 152, x17, x15, 48, x18)

inst_1036:// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7046ce and fs2 == 0 and fe2 == 0xfc and fm2 == 0x36c1bf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7ef046ce; op2val:0x7e36c1bf; valaddr_reg:x16; val_offset:160; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 160, x17, x15, 56, x18)

inst_1037:// fs1 == 0 and fe1 == 0xfc and fm1 == 0x36c1bf and fs2 == 0 and fe2 == 0x81 and fm2 == 0x425723 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7e36c1bf; op2val:0x40c25723; valaddr_reg:x16; val_offset:168; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 168, x17, x15, 64, x18)

inst_1038:// fs1 == 0 and fe1 == 0xfc and fm1 == 0x36c1bf and fs2 == 0 and fe2 == 0x00 and fm2 == 0x0007f0 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7e36c1bf; op2val:0x7f0; valaddr_reg:x16; val_offset:176; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 176, x17, x15, 72, x18)

inst_1039:// fs1 == 0 and fe1 == 0xfc and fm1 == 0x36c1bf and fs2 == 0 and fe2 == 0x00 and fm2 == 0x42216f and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7e36c1bf; op2val:0x42216f; valaddr_reg:x16; val_offset:184; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 184, x17, x15, 80, x18)

inst_1040:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x42216f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x108f54 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x42216f; op2val:0x80108f54; valaddr_reg:x16; val_offset:192; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 192, x17, x15, 88, x18)

inst_1041:// fs1 == 0 and fe1 == 0xfc and fm1 == 0x36c1bf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x108f54 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7e36c1bf; op2val:0x80108f54; valaddr_reg:x16; val_offset:200; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 200, x17, x15, 96, x18)

inst_1042:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x42216f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x365c4c and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x42216f; op2val:0x80365c4c; valaddr_reg:x16; val_offset:208; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 208, x17, x15, 104, x18)

inst_1043:// fs1 == 0 and fe1 == 0xfc and fm1 == 0x36c1bf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x365c4c and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7e36c1bf; op2val:0x80365c4c; valaddr_reg:x16; val_offset:216; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 216, x17, x15, 112, x18)

inst_1044:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x42216f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x21e733 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x42216f; op2val:0x8021e733; valaddr_reg:x16; val_offset:224; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 224, x17, x15, 120, x18)

inst_1045:// fs1 == 0 and fe1 == 0xfc and fm1 == 0x36c1bf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x21e733 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7e36c1bf; op2val:0x8021e733; valaddr_reg:x16; val_offset:232; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 232, x17, x15, 128, x18)

inst_1046:// fs1 == 0 and fe1 == 0xfc and fm1 == 0x36c1bf and fs2 == 0 and fe2 == 0x00 and fm2 == 0x069cf1 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7e36c1bf; op2val:0x69cf1; valaddr_reg:x16; val_offset:240; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 240, x17, x15, 136, x18)

inst_1047:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x069cf1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0a66e8 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x69cf1; op2val:0x800a66e8; valaddr_reg:x16; val_offset:248; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 248, x17, x15, 144, x18)

inst_1048:// fs1 == 0 and fe1 == 0xfc and fm1 == 0x36c1bf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x0a66e8 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7e36c1bf; op2val:0x800a66e8; valaddr_reg:x16; val_offset:256; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 256, x17, x15, 152, x18)

inst_1049:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x42216f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x19595f and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x42216f; op2val:0x8019595f; valaddr_reg:x16; val_offset:264; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 264, x17, x15, 160, x18)

inst_1050:// fs1 == 0 and fe1 == 0xfc and fm1 == 0x36c1bf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x19595f and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7e36c1bf; op2val:0x8019595f; valaddr_reg:x16; val_offset:272; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 272, x17, x15, 168, x18)

inst_1051:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x42216f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x217bcd and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x42216f; op2val:0x217bcd; valaddr_reg:x16; val_offset:280; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 280, x17, x15, 176, x18)

inst_1052:// fs1 == 0 and fe1 == 0xfc and fm1 == 0x36c1bf and fs2 == 0 and fe2 == 0x00 and fm2 == 0x217bcd and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7e36c1bf; op2val:0x217bcd; valaddr_reg:x16; val_offset:288; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 288, x17, x15, 184, x18)

inst_1053:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x42216f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x28e67d and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x42216f; op2val:0x28e67d; valaddr_reg:x16; val_offset:296; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 296, x17, x15, 192, x18)

inst_1054:// fs1 == 0 and fe1 == 0xfc and fm1 == 0x36c1bf and fs2 == 0 and fe2 == 0x00 and fm2 == 0x28e67d and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7e36c1bf; op2val:0x28e67d; valaddr_reg:x16; val_offset:304; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 304, x17, x15, 200, x18)

inst_1055:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x42216f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3fb8a4 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x42216f; op2val:0x3fb8a4; valaddr_reg:x16; val_offset:312; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 312, x17, x15, 208, x18)

inst_1056:// fs1 == 0 and fe1 == 0xfc and fm1 == 0x36c1bf and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3fb8a4 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7e36c1bf; op2val:0x3fb8a4; valaddr_reg:x16; val_offset:320; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 320, x17, x15, 216, x18)

inst_1057:// fs1 == 0 and fe1 == 0xfc and fm1 == 0x36c1bf and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00a94b and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7e36c1bf; op2val:0xa94b; valaddr_reg:x16; val_offset:328; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 328, x17, x15, 224, x18)

inst_1058:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00a94b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00d7bf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0xa94b; op2val:0xd7bf; valaddr_reg:x16; val_offset:336; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 336, x17, x15, 232, x18)

inst_1059:// fs1 == 0 and fe1 == 0xfc and fm1 == 0x36c1bf and fs2 == 0 and fe2 == 0x00 and fm2 == 0x00d7bf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7e36c1bf; op2val:0xd7bf; valaddr_reg:x16; val_offset:344; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 344, x17, x15, 240, x18)

inst_1060:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x42216f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x17ad58 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x42216f; op2val:0x17ad58; valaddr_reg:x16; val_offset:352; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 352, x17, x15, 248, x18)

inst_1061:// fs1 == 0 and fe1 == 0xfc and fm1 == 0x36c1bf and fs2 == 0 and fe2 == 0x00 and fm2 == 0x17ad58 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7e36c1bf; op2val:0x17ad58; valaddr_reg:x16; val_offset:360; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 360, x17, x15, 256, x18)

inst_1062:// fs1 == 0 and fe1 == 0xfc and fm1 == 0x36c1bf and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7e36c1bf; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:368; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 368, x17, x15, 264, x18)

inst_1063:// fs1 == 0 and fe1 == 0xfc and fm1 == 0x36c1bf and fs2 == 1 and fe2 == 0xfd and fm2 == 0x491492 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7e36c1bf; op2val:0xfec91492; valaddr_reg:x16; val_offset:376; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 376, x17, x15, 272, x18)

inst_1064:// fs1 == 0 and fe1 == 0xfc and fm1 == 0x36c1bf and fs2 == 1 and fe2 == 0xfe and fm2 == 0x130229 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7e36c1bf; op2val:0xff130229; valaddr_reg:x16; val_offset:384; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 384, x17, x15, 280, x18)

inst_1065:// fs1 == 0 and fe1 == 0xfc and fm1 == 0x36c1bf and fs2 == 1 and fe2 == 0xfe and fm2 == 0x336b1f and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7e36c1bf; op2val:0xff336b1f; valaddr_reg:x16; val_offset:392; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 392, x17, x15, 288, x18)

inst_1066:// fs1 == 0 and fe1 == 0xfc and fm1 == 0x36c1bf and fs2 == 1 and fe2 == 0xfd and fm2 == 0x2f0416 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7e36c1bf; op2val:0xfeaf0416; valaddr_reg:x16; val_offset:400; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 400, x17, x15, 296, x18)

inst_1067:// fs1 == 0 and fe1 == 0xfc and fm1 == 0x36c1bf and fs2 == 0 and fe2 == 0xfd and fm2 == 0x73c956 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7e36c1bf; op2val:0x7ef3c956; valaddr_reg:x16; val_offset:408; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 408, x17, x15, 304, x18)

inst_1068:// fs1 == 0 and fe1 == 0xfc and fm1 == 0x36c1bf and fs2 == 0 and fe2 == 0xfe and fm2 == 0x2099c0 and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7e36c1bf; op2val:0x7f2099c0; valaddr_reg:x16; val_offset:416; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 416, x17, x15, 312, x18)

inst_1069:// fs1 == 0 and fe1 == 0xfc and fm1 == 0x36c1bf and fs2 == 0 and fe2 == 0xfd and fm2 == 0x7046ce and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7e36c1bf; op2val:0x7ef046ce; valaddr_reg:x16; val_offset:424; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 424, x17, x15, 320, x18)

inst_1070:// fs1 == 0 and fe1 == 0xfc and fm1 == 0x36c1bf and fs2 == 0 and fe2 == 0xfc and fm2 == 0x36c1bf and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7e36c1bf; op2val:0x7e36c1bf; valaddr_reg:x16; val_offset:432; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 432, x17, x15, 328, x18)

inst_1071:// fs1 == 0 and fe1 == 0x00 and fm1 == 0x0007f0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x19595f and rm_val == 0  
// opcode: fle.s ; op1:f10; op2:f11; dest:x12; op1val:0x7f0; op2val:0x8019595f; valaddr_reg:x16; val_offset:440; correctval:0; testreg:x18
TEST_FCMP_OP(fle.s, x12, f10, f11, 0, x16, 440, x17, x15, 336, x18)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
test_fp:
.word 0x7e36c1bf
.word 0x7e36c1bf
.word 0x7f0
.word 0x7f0
.word 0x7f0
.word 0x80108f54
.word 0xbfc2a917
.word 0x7f0
.word 0x7f0
.word 0xbfc2a917
.word 0x7f0
.word 0x80365c4c
.word 0xc09fc053
.word 0x7f0
.word 0x7f0
.word 0xc09fc053
.word 0x7f0
.word 0x8021e733
.word 0xc04743c4
.word 0x7f0
.word 0x7f0
.word 0xc04743c4
.word 0x7f0
.word 0x800a66e8
.word 0xc118d7ea
.word 0x7f0
.word 0x7f0
.word 0xc118d7ea
.word 0x7f0
.word 0x8019595f
.word 0xc014fd1d
.word 0x7f0
.word 0x7f0
.word 0xc014fd1d
.word 0x7f0
.word 0x217bcd
.word 0x4044cc84
.word 0x7f0
.word 0x7f0
.word 0x4044cc84
.word 0x7f0
.word 0x28e67d
.word 0x40706405
.word 0x7f0
.word 0x7f0
.word 0x40706405
.word 0x7f0
.word 0x3fb8a4
.word 0x40bb428c
.word 0x7f0
.word 0x7f0
.word 0x40bb428c
.word 0x7f0
.word 0xd7bf
.word 0x40f7aa21
.word 0x7f0
.word 0x7f0
.word 0x40f7aa21
.word 0x7f0
.word 0x17ad58
.word 0x400b2963
.word 0x7f0
.word 0x7f0
.word 0x400b2963
.word 0x7f0
.word 0xfdcaaeb1
.word 0xc0578765
.word 0x7f0
.word 0x7f0
.word 0xc0578765
.word 0x7f0
.word 0xfec91492
.word 0xbfab0f6c
.word 0x7f0
.word 0x7f0
.word 0xbfab0f6c
.word 0x7f0
.word 0xff130229
.word 0xbffa1f35
.word 0x7f0
.word 0x7f0
.word 0xbffa1f35
.word 0x7f0
.word 0xff336b1f
.word 0xc018a1e0
.word 0x7f0
.word 0x7f0
.word 0xc018a1e0
.word 0x7f0
.word 0xfeaf0416
.word 0xbf94e31a
.word 0x7f0
.word 0x7f0
.word 0xbf94e31a
.word 0x7f0
.word 0x7ef3c956
.word 0x3fcf63fe
.word 0x7f0
.word 0x7f0
.word 0x3fcf63fe
.word 0x7f0
.word 0x7f2099c0
.word 0x40089fb6
.word 0x7f0
.word 0x7f0
.word 0x40089fb6
.word 0x7f0
.word 0x7e472f12
.word 0x40d3cf02
.word 0x7f0
.word 0x7f0
.word 0x40d3cf02
.word 0x7f0
.word 0x7ef046ce
.word 0x3fcc679b
.word 0x7f0
.word 0x7f0
.word 0x3fcc679b
.word 0x7f0
.word 0x7e36c1bf
.word 0x40c25723
.word 0x7f0
.word 0x7f0
.word 0x40c25723
.word 0x80108f54
.word 0x80108f54
.word 0x80108f54
.word 0xbfc2a917
.word 0x80108f54
.word 0x7f0
.word 0x80108f54
.word 0x80365c4c
.word 0x80365c4c
.word 0x80108f54
.word 0x80108f54
.word 0x8021e733
.word 0x8021e733
.word 0x80108f54
.word 0x80108f54
.word 0x8001a7ee
.word 0x8001a7ee
.word 0x800a66e8
.word 0x80680514
.word 0x8001a7ee
.word 0x8001a7ee
.word 0x80680514
.word 0x80108f54
.word 0x800a66e8
.word 0x80108f54
.word 0x8019595f
.word 0x8019595f
.word 0x80108f54
.word 0x80108f54
.word 0x217bcd
.word 0x217bcd
.word 0x80108f54
.word 0x80108f54
.word 0x28e67d
.word 0x28e67d
.word 0x80108f54
.word 0x80108f54
.word 0x3fb8a4
.word 0x3fb8a4
.word 0x80108f54
.word 0x80108f54
.word 0x80002a64
.word 0x80002a64
.word 0xd7bf
.word 0x5446a0
.word 0x80002a64
.word 0x80002a64
.word 0x5446a0
.word 0x80108f54
.word 0xd7bf
.word 0x80108f54
.word 0x17ad58
.word 0x17ad58
.word 0x80108f54
.word 0x80108f54
.word 0xfd370ed0
.word 0xfd370ed0
.word 0xfdcaaeb1
.word 0x8024ab9b
.word 0xfd370ed0
.word 0xfd370ed0
.word 0x8024ab9b
.word 0x80108f54
.word 0xfdcaaeb1
.word 0x80108f54
.word 0xfee4d284
.word 0xfee4d284
.word 0xfec91492
.word 0x800e8d5c
.word 0xfee4d284
.word 0xfee4d284
.word 0x800e8d5c
.word 0x80108f54
.word 0xfec91492
.word 0xfee4d284
.word 0xff130229
.word 0x8015472c
.word 0xfee4d284
.word 0xfee4d284
.word 0x8015472c
.word 0x80108f54
.word 0xff130229
.word 0xfee4d284
.word 0xff336b1f
.word 0x8019f813
.word 0xfee4d284
.word 0xfee4d284
.word 0x8019f813
.word 0x80108f54
.word 0xff336b1f
.word 0xfee4d284
.word 0xfeaf0416
.word 0x800caa79
.word 0xfee4d284
.word 0xfee4d284
.word 0x800caa79
.word 0x80108f54
.word 0xfeaf0416
.word 0xfee4d284
.word 0x7ef3c956
.word 0x11a491
.word 0xfee4d284
.word 0xfee4d284
.word 0x11a491
.word 0x80108f54
.word 0x7ef3c956
.word 0xfee4d284
.word 0x7f2099c0
.word 0x173ecf
.word 0xfee4d284
.word 0xfee4d284
.word 0x173ecf
.word 0x80108f54
.word 0x7f2099c0
.word 0xfd370ed0
.word 0x7e472f12
.word 0x481322
.word 0xfd370ed0
.word 0xfd370ed0
.word 0x481322
.word 0x80108f54
.word 0x7e472f12
.word 0xfee4d284
.word 0x7ef046ce
.word 0x11638a
.word 0xfee4d284
.word 0xfee4d284
.word 0x11638a
.word 0x80108f54
.word 0x7ef046ce
.word 0xfd370ed0
.word 0x7e36c1bf
.word 0x42216f
.word 0xfd370ed0
.word 0xfd370ed0
.word 0x42216f
.word 0x80108f54
.word 0x7e36c1bf
.word 0x80365c4c
.word 0x80365c4c
.word 0x80365c4c
.word 0xc09fc053
.word 0x80365c4c
.word 0x7f0
.word 0x80365c4c
.word 0x8021e733
.word 0x8021e733
.word 0x80365c4c
.word 0x80365c4c
.word 0x80056fa1
.word 0x80056fa1
.word 0x800a66e8
.word 0x80680514
.word 0x80056fa1
.word 0x80056fa1
.word 0x80680514
.word 0x80365c4c
.word 0x800a66e8
.word 0x80365c4c
.word 0x8019595f
.word 0x8019595f
.word 0x80365c4c
.word 0x80365c4c
.word 0x217bcd
.word 0x217bcd
.word 0x80365c4c
.word 0x80365c4c
.word 0x28e67d
.word 0x28e67d
.word 0x80365c4c
.word 0x80365c4c
.word 0x3fb8a4
.word 0x3fb8a4
.word 0x80365c4c
.word 0x80365c4c
.word 0x80008b29
.word 0x80008b29
.word 0xd7bf
.word 0x5446a0
.word 0x80008b29
.word 0x80008b29
.word 0x5446a0
.word 0x80365c4c
.word 0xd7bf
.word 0x80365c4c
.word 0x17ad58
.word 0x17ad58
.word 0x80365c4c
.word 0x80365c4c
.word 0xfe163ab8
.word 0xfe163ab8
.word 0xfdcaaeb1
.word 0x8024ab9b
.word 0xfe163ab8
.word 0xfe163ab8
.word 0x8024ab9b
.word 0x80365c4c
.word 0xfdcaaeb1
.word 0x80365c4c
.word 0xff7fffff
.word 0xff7fffff
.word 0xfec91492
.word 0x800e8d5c
.word 0xff7fffff
.word 0xff7fffff
.word 0x800e8d5c
.word 0x80365c4c
.word 0xfec91492
.word 0xff7fffff
.word 0xff130229
.word 0x8015472c
.word 0xff7fffff
.word 0xff7fffff
.word 0x8015472c
.word 0x80365c4c
.word 0xff130229
.word 0xff7fffff
.word 0xff336b1f
.word 0x8019f813
.word 0xff7fffff
.word 0xff7fffff
.word 0x8019f813
.word 0x80365c4c
.word 0xff336b1f
.word 0xff7fffff
.word 0xfeaf0416
.word 0x800caa79
.word 0xff7fffff
.word 0xff7fffff
.word 0x800caa79
.word 0x80365c4c
.word 0xfeaf0416
.word 0xff7fffff
.word 0x7ef3c956
.word 0x11a491
.word 0xff7fffff
.word 0xff7fffff
.word 0x11a491
.word 0x80365c4c
.word 0x7ef3c956
.word 0xff7fffff
.word 0x7f2099c0
.word 0x173ecf
.word 0xff7fffff
.word 0xff7fffff
.word 0x173ecf
.word 0x80365c4c
.word 0x7f2099c0
.word 0xfe163ab8
.word 0x7e472f12
.word 0x481322
.word 0xfe163ab8
.word 0xfe163ab8
.word 0x481322
.word 0x80365c4c
.word 0x7e472f12
.word 0xff7fffff
.word 0x7ef046ce
.word 0x11638a
.word 0xff7fffff
.word 0xff7fffff
.word 0x11638a
.word 0x80365c4c
.word 0x7ef046ce
.word 0xfe163ab8
.word 0x7e36c1bf
.word 0x42216f
.word 0xfe163ab8
.word 0xfe163ab8
.word 0x42216f
.word 0x80365c4c
.word 0x7e36c1bf
.word 0x8021e733
.word 0x8021e733
.word 0x8021e733
.word 0xc04743c4
.word 0x8021e733
.word 0x7f0
.word 0x8021e733
.word 0x800363eb
.word 0x800363eb
.word 0x800a66e8
.word 0x80680514
.word 0x800363eb
.word 0x800363eb
.word 0x80680514
.word 0x8021e733
.word 0x800a66e8
.word 0x8021e733
.word 0x8019595f
.word 0x8019595f
.word 0x8021e733
.word 0x8021e733
.word 0x217bcd
.word 0x217bcd
.word 0x8021e733
.word 0x8021e733
.word 0x28e67d
.word 0x28e67d
.word 0x8021e733
.word 0x8021e733
.word 0x3fb8a4
.word 0x3fb8a4
.word 0x8021e733
.word 0x8021e733
.word 0x800056ca
.word 0x800056ca
.word 0xd7bf
.word 0x5446a0
.word 0x800056ca
.word 0x800056ca
.word 0x5446a0
.word 0x8021e733
.word 0xd7bf
.word 0x8021e733
.word 0x17ad58
.word 0x17ad58
.word 0x8021e733
.word 0x8021e733
.word 0xfdbb633c
.word 0xfdbb633c
.word 0xfdcaaeb1
.word 0x8024ab9b
.word 0xfdbb633c
.word 0xfdbb633c
.word 0x8024ab9b
.word 0x8021e733
.word 0xfdcaaeb1
.word 0x8021e733
.word 0xff6a3c0b
.word 0xff6a3c0b
.word 0xfec91492
.word 0x800e8d5c
.word 0xff6a3c0b
.word 0xff6a3c0b
.word 0x800e8d5c
.word 0x8021e733
.word 0xfec91492
.word 0xff6a3c0b
.word 0xff130229
.word 0x8015472c
.word 0xff6a3c0b
.word 0xff6a3c0b
.word 0x8015472c
.word 0x8021e733
.word 0xff130229
.word 0xff6a3c0b
.word 0xff336b1f
.word 0x8019f813
.word 0xff6a3c0b
.word 0xff6a3c0b
.word 0x8019f813
.word 0x8021e733
.word 0xff336b1f
.word 0xff6a3c0b
.word 0xfeaf0416
.word 0x800caa79
.word 0xff6a3c0b
.word 0xff6a3c0b
.word 0x800caa79
.word 0x8021e733
.word 0xfeaf0416
.word 0xff6a3c0b
.word 0x7ef3c956
.word 0x11a491
.word 0xff6a3c0b
.word 0xff6a3c0b
.word 0x11a491
.word 0x8021e733
.word 0x7ef3c956
.word 0xff6a3c0b
.word 0x7f2099c0
.word 0x173ecf
.word 0xff6a3c0b
.word 0xff6a3c0b
.word 0x173ecf
.word 0x8021e733
.word 0x7f2099c0
.word 0xfdbb633c
.word 0x7e472f12
.word 0x481322
.word 0xfdbb633c
.word 0xfdbb633c
.word 0x481322
.word 0x8021e733
.word 0x7e472f12
.word 0xff6a3c0b
.word 0x7ef046ce
.word 0x11638a
.word 0xff6a3c0b
.word 0xff6a3c0b
.word 0x11638a
.word 0x8021e733
.word 0x7ef046ce
.word 0xfdbb633c
.word 0x7e36c1bf
.word 0x42216f
.word 0xfdbb633c
.word 0xfdbb633c
.word 0x42216f
.word 0x8021e733
.word 0x7e36c1bf
.word 0x800a66e8
.word 0x800a66e8
.word 0x800a66e8
.word 0xc118d7ea
.word 0x800a66e8
.word 0x7f0
.word 0x800a66e8
.word 0x80680514
.word 0x80680514
.word 0x80108f54
.word 0x800a66e8
.word 0x80108f54
.word 0x80680514
.word 0x80365c4c
.word 0x800a66e8
.word 0x80365c4c
.word 0x80680514
.word 0x8021e733
.word 0x800a66e8
.word 0x8021e733
.word 0x80680514
.word 0x8019595f
.word 0x800288ef
.word 0x80680514
.word 0x80680514
.word 0x800288ef
.word 0x800a66e8
.word 0x8019595f
.word 0x80680514
.word 0x217bcd
.word 0x3592e
.word 0x80680514
.word 0x80680514
.word 0x3592e
.word 0x800a66e8
.word 0x217bcd
.word 0x80680514
.word 0x28e67d
.word 0x4170c
.word 0x80680514
.word 0x80680514
.word 0x4170c
.word 0x800a66e8
.word 0x28e67d
.word 0x80680514
.word 0x3fb8a4
.word 0x65f43
.word 0x80680514
.word 0x80680514
.word 0x65f43
.word 0x800a66e8
.word 0x3fb8a4
.word 0x800a66e8
.word 0x80010a4a
.word 0x80010a4a
.word 0xd7bf
.word 0x86d76
.word 0x80010a4a
.word 0x80010a4a
.word 0x86d76
.word 0x800a66e8
.word 0xd7bf
.word 0x80680514
.word 0x17ad58
.word 0x25e22
.word 0x80680514
.word 0x80680514
.word 0x25e22
.word 0x800a66e8
.word 0x17ad58
.word 0x800a66e8
.word 0xfe8fbbb6
.word 0xfe8fbbb6
.word 0xfdcaaeb1
.word 0x8003aac2
.word 0xfe8fbbb6
.word 0xfe8fbbb6
.word 0x8003aac2
.word 0x800a66e8
.word 0xfdcaaeb1
.word 0x800a66e8
.word 0xff7fffff
.word 0x80017489
.word 0xff7fffff
.word 0xff7fffff
.word 0x80017489
.word 0x800a66e8
.word 0xfec91492
.word 0x800220b7
.word 0xff7fffff
.word 0xff7fffff
.word 0x800220b7
.word 0x800a66e8
.word 0xff130229
.word 0x800298ce
.word 0xff7fffff
.word 0xff7fffff
.word 0x800298ce
.word 0x800a66e8
.word 0xff336b1f
.word 0x8001443f
.word 0xff7fffff
.word 0xff7fffff
.word 0x8001443f
.word 0x800a66e8
.word 0xfeaf0416
.word 0x1c3a8
.word 0xff7fffff
.word 0xff7fffff
.word 0x1c3a8
.word 0x800a66e8
.word 0x7ef3c956
.word 0x25314
.word 0xff7fffff
.word 0xff7fffff
.word 0x25314
.word 0x800a66e8
.word 0x7f2099c0
.word 0xfe8fbbb6
.word 0x7e472f12
.word 0x7351d
.word 0xfe8fbbb6
.word 0xfe8fbbb6
.word 0x7351d
.word 0x800a66e8
.word 0x7e472f12
.word 0x1bd27
.word 0xff7fffff
.word 0xff7fffff
.word 0x1bd27
.word 0x800a66e8
.word 0x7ef046ce
.word 0xfe8fbbb6
.word 0x7e36c1bf
.word 0x69cf1
.word 0xfe8fbbb6
.word 0xfe8fbbb6
.word 0x69cf1
.word 0x800a66e8
.word 0x7e36c1bf
.word 0x8019595f
.word 0x8019595f
.word 0x8019595f
.word 0xc014fd1d
.word 0x8019595f
.word 0x7f0
.word 0x8019595f
.word 0x800288ef
.word 0x800288ef
.word 0x800a66e8
.word 0x8019595f
.word 0x800a66e8
.word 0x8019595f
.word 0x217bcd
.word 0x217bcd
.word 0x8019595f
.word 0x8019595f
.word 0x28e67d
.word 0x28e67d
.word 0x8019595f
.word 0x8019595f
.word 0x3fb8a4
.word 0x3fb8a4
.word 0x8019595f
.word 0x8019595f
.word 0x800040e4
.word 0x800040e4
.word 0xd7bf
.word 0x5446a0
.word 0x800040e4
.word 0x800040e4
.word 0x5446a0
.word 0x8019595f
.word 0xd7bf
.word 0x8019595f
.word 0x17ad58
.word 0x17ad58
.word 0x8019595f
.word 0x8019595f
.word 0xfd8c1bbb
.word 0xfd8c1bbb
.word 0xfdcaaeb1
.word 0x8024ab9b
.word 0xfd8c1bbb
.word 0xfd8c1bbb
.word 0x8024ab9b
.word 0x8019595f
.word 0xfdcaaeb1
.word 0x8019595f
.word 0xff2f22aa
.word 0xff2f22aa
.word 0xfec91492
.word 0x800e8d5c
.word 0xff2f22aa
.word 0xff2f22aa
.word 0x800e8d5c
.word 0x8019595f
.word 0xfec91492
.word 0xff2f22aa
.word 0xff130229
.word 0x8015472c
.word 0xff2f22aa
.word 0xff2f22aa
.word 0x8015472c
.word 0x8019595f
.word 0xff130229
.word 0xff2f22aa
.word 0xff336b1f
.word 0x8019f813
.word 0xff2f22aa
.word 0xff2f22aa
.word 0x8019f813
.word 0x8019595f
.word 0xff336b1f
.word 0xff2f22aa
.word 0xfeaf0416
.word 0x800caa79
.word 0xff2f22aa
.word 0xff2f22aa
.word 0x800caa79
.word 0x8019595f
.word 0xfeaf0416
.word 0xff2f22aa
.word 0x7ef3c956
.word 0x11a491
.word 0xff2f22aa
.word 0xff2f22aa
.word 0x11a491
.word 0x8019595f
.word 0x7ef3c956
.word 0xff2f22aa
.word 0x7f2099c0
.word 0x173ecf
.word 0xff2f22aa
.word 0xff2f22aa
.word 0x173ecf
.word 0x8019595f
.word 0x7f2099c0
.word 0xfd8c1bbb
.word 0x7e472f12
.word 0x481322
.word 0xfd8c1bbb
.word 0xfd8c1bbb
.word 0x481322
.word 0x8019595f
.word 0x7e472f12
.word 0xff2f22aa
.word 0x7ef046ce
.word 0x11638a
.word 0xff2f22aa
.word 0xff2f22aa
.word 0x11638a
.word 0x8019595f
.word 0x7ef046ce
.word 0xfd8c1bbb
.word 0x7e36c1bf
.word 0x42216f
.word 0xfd8c1bbb
.word 0xfd8c1bbb
.word 0x42216f
.word 0x8019595f
.word 0x7e36c1bf
.word 0x217bcd
.word 0x217bcd
.word 0x217bcd
.word 0x4044cc84
.word 0x217bcd
.word 0x7f0
.word 0x217bcd
.word 0x3592e
.word 0x3592e
.word 0x800a66e8
.word 0x217bcd
.word 0x800a66e8
.word 0x217bcd
.word 0x28e67d
.word 0x28e67d
.word 0x217bcd
.word 0x217bcd
.word 0x3fb8a4
.word 0x3fb8a4
.word 0x217bcd
.word 0x217bcd
.word 0x55b7
.word 0x55b7
.word 0xd7bf
.word 0x5446a0
.word 0x55b7
.word 0x55b7
.word 0x5446a0
.word 0x217bcd
.word 0xd7bf
.word 0x217bcd
.word 0x17ad58
.word 0x17ad58
.word 0x217bcd
.word 0x217bcd
.word 0x7db9119c
.word 0x7db9119c
.word 0xfdcaaeb1
.word 0x8024ab9b
.word 0x7db9119c
.word 0x7db9119c
.word 0x8024ab9b
.word 0x217bcd
.word 0xfdcaaeb1
.word 0x217bcd
.word 0x7f675603
.word 0x7f675603
.word 0xfec91492
.word 0x800e8d5c
.word 0x7f675603
.word 0x7f675603
.word 0x800e8d5c
.word 0x217bcd
.word 0xfec91492
.word 0x7f675603
.word 0xff130229
.word 0x8015472c
.word 0x7f675603
.word 0x7f675603
.word 0x8015472c
.word 0x217bcd
.word 0xff130229
.word 0x7f675603
.word 0xff336b1f
.word 0x8019f813
.word 0x7f675603
.word 0x7f675603
.word 0x8019f813
.word 0x217bcd
.word 0xff336b1f
.word 0x7f675603
.word 0xfeaf0416
.word 0x800caa79
.word 0x7f675603
.word 0x7f675603
.word 0x800caa79
.word 0x217bcd
.word 0xfeaf0416
.word 0x7f675603
.word 0x7ef3c956
.word 0x11a491
.word 0x7f675603
.word 0x7f675603
.word 0x11a491
.word 0x217bcd
.word 0x7ef3c956
.word 0x7f675603
.word 0x7f2099c0
.word 0x173ecf
.word 0x7f675603
.word 0x7f675603
.word 0x173ecf
.word 0x217bcd
.word 0x7f2099c0
.word 0x7db9119c
.word 0x7e472f12
.word 0x481322
.word 0x7db9119c
.word 0x7db9119c
.word 0x481322
.word 0x217bcd
.word 0x7e472f12
.word 0x7f675603
.word 0x7ef046ce
.word 0x11638a
.word 0x7f675603
.word 0x7f675603
.word 0x11638a
.word 0x217bcd
.word 0x7ef046ce
.word 0x7db9119c
.word 0x7e36c1bf
.word 0x42216f
.word 0x7db9119c
.word 0x7db9119c
.word 0x42216f
.word 0x217bcd
.word 0x7e36c1bf
.word 0x28e67d
.word 0x28e67d
.word 0x28e67d
.word 0x40706405
.word 0x28e67d
.word 0x7f0
.word 0x28e67d
.word 0x4170c
.word 0x4170c
.word 0x800a66e8
.word 0x28e67d
.word 0x800a66e8
.word 0x28e67d
.word 0x3fb8a4
.word 0x3fb8a4
.word 0x28e67d
.word 0x28e67d
.word 0x68b4
.word 0x68b4
.word 0xd7bf
.word 0x5446a0
.word 0x68b4
.word 0x68b4
.word 0x5446a0
.word 0x28e67d
.word 0xd7bf
.word 0x28e67d
.word 0x17ad58
.word 0x17ad58
.word 0x28e67d
.word 0x28e67d
.word 0x7de20ff4
.word 0x7de20ff4
.word 0xfdcaaeb1
.word 0x8024ab9b
.word 0x7de20ff4
.word 0x7de20ff4
.word 0x8024ab9b
.word 0x28e67d
.word 0xfdcaaeb1
.word 0x28e67d
.word 0x7f7fffff
.word 0x7f7fffff
.word 0xfec91492
.word 0x800e8d5c
.word 0x7f7fffff
.word 0x7f7fffff
.word 0x800e8d5c
.word 0x28e67d
.word 0xfec91492
.word 0x7f7fffff
.word 0xff130229
.word 0x8015472c
.word 0x7f7fffff
.word 0x7f7fffff
.word 0x8015472c
.word 0x28e67d
.word 0xff130229
.word 0x7f7fffff
.word 0xff336b1f
.word 0x8019f813
.word 0x7f7fffff
.word 0x7f7fffff
.word 0x8019f813
.word 0x28e67d
.word 0xff336b1f
.word 0x7f7fffff
.word 0xfeaf0416
.word 0x800caa79
.word 0x7f7fffff
.word 0x7f7fffff
.word 0x800caa79
.word 0x28e67d
.word 0xfeaf0416
.word 0x7f7fffff
.word 0x7ef3c956
.word 0x11a491
.word 0x7f7fffff
.word 0x7f7fffff
.word 0x11a491
.word 0x28e67d
.word 0x7ef3c956
.word 0x7f7fffff
.word 0x7f2099c0
.word 0x173ecf
.word 0x7f7fffff
.word 0x7f7fffff
.word 0x173ecf
.word 0x28e67d
.word 0x7f2099c0
.word 0x7de20ff4
.word 0x7e472f12
.word 0x481322
.word 0x7de20ff4
.word 0x7de20ff4
.word 0x481322
.word 0x28e67d
.word 0x7e472f12
.word 0x7f7fffff
.word 0x7ef046ce
.word 0x11638a
.word 0x7f7fffff
.word 0x7f7fffff
.word 0x11638a
.word 0x28e67d
.word 0x7ef046ce
.word 0x7de20ff4
.word 0x7e36c1bf
.word 0x42216f
.word 0x7de20ff4
.word 0x7de20ff4
.word 0x42216f
.word 0x28e67d
.word 0x7e36c1bf
.word 0x3fb8a4
.word 0x3fb8a4
.word 0x3fb8a4
.word 0x40bb428c
.word 0x3fb8a4
.word 0x7f0
.word 0x3fb8a4
.word 0x65f43
.word 0x65f43
.word 0x800a66e8
.word 0x3fb8a4
.word 0x800a66e8
.word 0x3fb8a4
.word 0xa320
.word 0xa320
.word 0xd7bf
.word 0x5446a0
.word 0xa320
.word 0xa320
.word 0x5446a0
.word 0x3fb8a4
.word 0xd7bf
.word 0x3fb8a4
.word 0x17ad58
.word 0x17ad58
.word 0x3fb8a4
.word 0x3fb8a4
.word 0x7e301931
.word 0x7e301931
.word 0xfdcaaeb1
.word 0x8024ab9b
.word 0x7e301931
.word 0x7e301931
.word 0x8024ab9b
.word 0x3fb8a4
.word 0xfdcaaeb1
.word 0x3fb8a4
.word 0x7f7fffff
.word 0x3fb8a4
.word 0xfec91492
.word 0x3fb8a4
.word 0xff130229
.word 0x3fb8a4
.word 0xff336b1f
.word 0x3fb8a4
.word 0xfeaf0416
.word 0x3fb8a4
.word 0x7ef3c956
.word 0x3fb8a4
.word 0x7f2099c0
.word 0x7e301931
.word 0x7e472f12
.word 0x481322
.word 0x7e301931
.word 0x7e301931
.word 0x481322
.word 0x3fb8a4
.word 0x7e472f12
.word 0x3fb8a4
.word 0x7ef046ce
.word 0x7e301931
.word 0x7e36c1bf
.word 0x42216f
.word 0x7e301931
.word 0x7e301931
.word 0x42216f
.word 0x3fb8a4
.word 0x7e36c1bf
.word 0xd7bf
.word 0xd7bf
.word 0xd7bf
.word 0x40f7aa21
.word 0xd7bf
.word 0x7f0
.word 0xd7bf
.word 0x5446a0
.word 0x5446a0
.word 0x80108f54
.word 0xd7bf
.word 0x80108f54
.word 0x5446a0
.word 0x80365c4c
.word 0xd7bf
.word 0x80365c4c
.word 0x5446a0
.word 0x8021e733
.word 0xd7bf
.word 0x8021e733
.word 0xd7bf
.word 0x86d76
.word 0x86d76
.word 0x800a66e8
.word 0xd7bf
.word 0x800a66e8
.word 0x5446a0
.word 0x8019595f
.word 0xd7bf
.word 0x8019595f
.word 0x5446a0
.word 0x217bcd
.word 0xd7bf
.word 0x217bcd
.word 0x5446a0
.word 0x28e67d
.word 0xd7bf
.word 0x28e67d
.word 0x5446a0
.word 0x3fb8a4
.word 0xd7bf
.word 0x3fb8a4
.word 0x5446a0
.word 0x17ad58
.word 0x3c9d
.word 0x5446a0
.word 0x5446a0
.word 0x3c9d
.word 0xd7bf
.word 0x17ad58
.word 0xd7bf
.word 0x7e68e714
.word 0x7e68e714
.word 0xfdcaaeb1
.word 0x80005de0
.word 0x7e68e714
.word 0x7e68e714
.word 0x80005de0
.word 0xd7bf
.word 0xfdcaaeb1
.word 0xd7bf
.word 0x7f7fffff
.word 0x80002540
.word 0x7f7fffff
.word 0x7f7fffff
.word 0x80002540
.word 0xd7bf
.word 0xfec91492
.word 0x80003678
.word 0x7f7fffff
.word 0x7f7fffff
.word 0x80003678
.word 0xd7bf
.word 0xff130229
.word 0x8000427b
.word 0x7f7fffff
.word 0x7f7fffff
.word 0x8000427b
.word 0xd7bf
.word 0xff336b1f
.word 0x8000206c
.word 0x7f7fffff
.word 0x7f7fffff
.word 0x8000206c
.word 0xd7bf
.word 0xfeaf0416
.word 0x2d2a
.word 0x7f7fffff
.word 0x7f7fffff
.word 0x2d2a
.word 0xd7bf
.word 0x7ef3c956
.word 0x3b82
.word 0x7f7fffff
.word 0x7f7fffff
.word 0x3b82
.word 0xd7bf
.word 0x7f2099c0
.word 0x7e68e714
.word 0x7e472f12
.word 0xb882
.word 0x7e68e714
.word 0x7e68e714
.word 0xb882
.word 0xd7bf
.word 0x7e472f12
.word 0x2c83
.word 0x7f7fffff
.word 0x7f7fffff
.word 0x2c83
.word 0xd7bf
.word 0x7ef046ce
.word 0x7e68e714
.word 0x7e36c1bf
.word 0xa94b
.word 0x7e68e714
.word 0x7e68e714
.word 0xa94b
.word 0xd7bf
.word 0x7e36c1bf
.word 0x17ad58
.word 0x17ad58
.word 0x17ad58
.word 0x400b2963
.word 0x17ad58
.word 0x7f0
.word 0x17ad58
.word 0x25e22
.word 0x25e22
.word 0x800a66e8
.word 0x17ad58
.word 0x800a66e8
.word 0x17ad58
.word 0x3c9d
.word 0x3c9d
.word 0xd7bf
.word 0x17ad58
.word 0xd7bf
.word 0x17ad58
.word 0x7d82ddf4
.word 0x7d82ddf4
.word 0xfdcaaeb1
.word 0x8024ab9b
.word 0x7d82ddf4
.word 0x7d82ddf4
.word 0x8024ab9b
.word 0x17ad58
.word 0xfdcaaeb1
.word 0x17ad58
.word 0x7f239571
.word 0x7f239571
.word 0xfec91492
.word 0x800e8d5c
.word 0x7f239571
.word 0x7f239571
.word 0x800e8d5c
.word 0x17ad58
.word 0xfec91492
.word 0x7f239571
.word 0xff130229
.word 0x8015472c
.word 0x7f239571
.word 0x7f239571
.word 0x8015472c
.word 0x17ad58
.word 0xff130229
.word 0x7f239571
.word 0xff336b1f
.word 0x8019f813
.word 0x7f239571
.word 0x7f239571
.word 0x8019f813
.word 0x17ad58
.word 0xff336b1f
.word 0x7f239571
.word 0xfeaf0416
.word 0x800caa79
.word 0x7f239571
.word 0x7f239571
.word 0x800caa79
.word 0x17ad58
.word 0xfeaf0416
.word 0x7f239571
.word 0x7ef3c956
.word 0x11a491
.word 0x7f239571
.word 0x7f239571
.word 0x11a491
.word 0x17ad58
.word 0x7ef3c956
.word 0x7f239571
.word 0x7f2099c0
.word 0x173ecf
.word 0x7f239571
.word 0x7f239571
.word 0x173ecf
.word 0x17ad58
.word 0x7f2099c0
.word 0x7d82ddf4
.word 0x7e472f12
.word 0x481322
.word 0x7d82ddf4
.word 0x7d82ddf4
.word 0x481322
.word 0x17ad58
.word 0x7e472f12
.word 0x7f239571
.word 0x7ef046ce
.word 0x11638a
.word 0x7f239571
.word 0x7f239571
.word 0x11638a
.word 0x17ad58
.word 0x7ef046ce
.word 0x7d82ddf4
.word 0x7e36c1bf
.word 0x42216f
.word 0x7d82ddf4
.word 0x7d82ddf4
.word 0x42216f
.word 0x17ad58
.word 0x7e36c1bf
.word 0xfdcaaeb1
.word 0xfdcaaeb1
.word 0xfdcaaeb1
.word 0xc0578765
.word 0xfdcaaeb1
.word 0x7f0
.word 0xfdcaaeb1
.word 0x8024ab9b
.word 0x8024ab9b
.word 0x80108f54
.word 0xfdcaaeb1
.word 0x80108f54
.word 0x8024ab9b
.word 0x80365c4c
.word 0xfdcaaeb1
.word 0x80365c4c
.word 0x8024ab9b
.word 0x8021e733
.word 0xfdcaaeb1
.word 0x8021e733
.word 0xfdcaaeb1
.word 0x8003aac2
.word 0x8003aac2
.word 0x800a66e8
.word 0xfdcaaeb1
.word 0x800a66e8
.word 0x8024ab9b
.word 0x8019595f
.word 0xfdcaaeb1
.word 0x8019595f
.word 0x8024ab9b
.word 0x217bcd
.word 0xfdcaaeb1
.word 0x217bcd
.word 0x8024ab9b
.word 0x28e67d
.word 0xfdcaaeb1
.word 0x28e67d
.word 0x8024ab9b
.word 0x3fb8a4
.word 0xfdcaaeb1
.word 0x3fb8a4
.word 0xfdcaaeb1
.word 0x80005de0
.word 0x80005de0
.word 0xd7bf
.word 0xfdcaaeb1
.word 0xd7bf
.word 0x8024ab9b
.word 0x17ad58
.word 0xfdcaaeb1
.word 0x17ad58
.word 0xfdcaaeb1
.word 0xff7d5a5e
.word 0xff7d5a5e
.word 0xfec91492
.word 0xfd20dd41
.word 0xff7d5a5e
.word 0xff7d5a5e
.word 0xfd20dd41
.word 0xfdcaaeb1
.word 0xfec91492
.word 0xff7d5a5e
.word 0xff130229
.word 0xfd6b36a9
.word 0xff7d5a5e
.word 0xff7d5a5e
.word 0xfd6b36a9
.word 0xfdcaaeb1
.word 0xff130229
.word 0xff7d5a5e
.word 0xff336b1f
.word 0xfd8f88e6
.word 0xff7d5a5e
.word 0xff7d5a5e
.word 0xfd8f88e6
.word 0xfdcaaeb1
.word 0xff336b1f
.word 0xff7d5a5e
.word 0xfeaf0416
.word 0xfd0c0345
.word 0xff7d5a5e
.word 0xff7d5a5e
.word 0xfd0c0345
.word 0xfdcaaeb1
.word 0xfeaf0416
.word 0xff7d5a5e
.word 0x7ef3c956
.word 0x7d430778
.word 0xff7d5a5e
.word 0xff7d5a5e
.word 0x7d430778
.word 0xfdcaaeb1
.word 0x7ef3c956
.word 0xff7d5a5e
.word 0x7f2099c0
.word 0x7d807b00
.word 0xff7d5a5e
.word 0xff7d5a5e
.word 0x7d807b00
.word 0xfdcaaeb1
.word 0x7f2099c0
.word 0xfdcaaeb1
.word 0x7e472f12
.word 0x7e472f12
.word 0xfdcaaeb1
.word 0xff7d5a5e
.word 0x7ef046ce
.word 0x7d4038a5
.word 0xff7d5a5e
.word 0xff7d5a5e
.word 0x7d4038a5
.word 0xfdcaaeb1
.word 0x7ef046ce
.word 0xfdcaaeb1
.word 0x7e36c1bf
.word 0x7e36c1bf
.word 0xfdcaaeb1
.word 0xfec91492
.word 0xfec91492
.word 0xfec91492
.word 0xbfab0f6c
.word 0xfec91492
.word 0x7f0
.word 0xfec91492
.word 0x800e8d5c
.word 0x800e8d5c
.word 0x80108f54
.word 0xfec91492
.word 0x80108f54
.word 0x800e8d5c
.word 0x80365c4c
.word 0xfec91492
.word 0x80365c4c
.word 0x800e8d5c
.word 0x8021e733
.word 0xfec91492
.word 0x8021e733
.word 0xfec91492
.word 0x80017489
.word 0x80017489
.word 0x800a66e8
.word 0xfec91492
.word 0x800a66e8
.word 0x800e8d5c
.word 0x8019595f
.word 0xfec91492
.word 0x8019595f
.word 0x800e8d5c
.word 0x217bcd
.word 0xfec91492
.word 0x217bcd
.word 0x800e8d5c
.word 0x28e67d
.word 0xfec91492
.word 0x28e67d
.word 0x800e8d5c
.word 0x3fb8a4
.word 0xfec91492
.word 0x3fb8a4
.word 0xfec91492
.word 0x80002540
.word 0x80002540
.word 0xd7bf
.word 0xfec91492
.word 0xd7bf
.word 0x800e8d5c
.word 0x17ad58
.word 0xfec91492
.word 0x17ad58
.word 0xfec91492
.word 0xfd20dd41
.word 0xfd20dd41
.word 0xfdcaaeb1
.word 0xfec91492
.word 0xfdcaaeb1
.word 0xfec91492
.word 0xff130229
.word 0xff130229
.word 0xfec91492
.word 0xfec91492
.word 0xff336b1f
.word 0xff336b1f
.word 0xfec91492
.word 0xfec91492
.word 0xfeaf0416
.word 0xfeaf0416
.word 0xfec91492
.word 0xfec91492
.word 0x7ef3c956
.word 0x7ef3c956
.word 0xfec91492
.word 0xfec91492
.word 0x7f2099c0
.word 0x7f2099c0
.word 0xfec91492
.word 0xfd20dd41
.word 0x7e472f12
.word 0x7f7fffff
.word 0xfd20dd41
.word 0xfd20dd41
.word 0x7f7fffff
.word 0xfec91492
.word 0x7e472f12
.word 0xfec91492
.word 0x7ef046ce
.word 0x7ef046ce
.word 0xfec91492
.word 0xfd20dd41
.word 0x7e36c1bf
.word 0xfec91492
.word 0x7e36c1bf
.word 0xff130229
.word 0xff130229
.word 0xff130229
.word 0xbffa1f35
.word 0xff130229
.word 0x7f0
.word 0xff130229
.word 0x8015472c
.word 0x8015472c
.word 0x80108f54
.word 0xff130229
.word 0x80108f54
.word 0x8015472c
.word 0x80365c4c
.word 0xff130229
.word 0x80365c4c
.word 0x8015472c
.word 0x8021e733
.word 0xff130229
.word 0x8021e733
.word 0xff130229
.word 0x800220b7
.word 0x800220b7
.word 0x800a66e8
.word 0xff130229
.word 0x800a66e8
.word 0x8015472c
.word 0x8019595f
.word 0xff130229
.word 0x8019595f
.word 0x8015472c
.word 0x217bcd
.word 0xff130229
.word 0x217bcd
.word 0x8015472c
.word 0x28e67d
.word 0xff130229
.word 0x28e67d
.word 0x8015472c
.word 0x3fb8a4
.word 0xff130229
.word 0x3fb8a4
.word 0xff130229
.word 0x80003678
.word 0x80003678
.word 0xd7bf
.word 0xff130229
.word 0xd7bf
.word 0x8015472c
.word 0x17ad58
.word 0xff130229
.word 0x17ad58
.word 0xff130229
.word 0xfd6b36a9
.word 0xfd6b36a9
.word 0xfdcaaeb1
.word 0xff130229
.word 0xfdcaaeb1
.word 0xff130229
.word 0xff336b1f
.word 0xff336b1f
.word 0xff130229
.word 0xff130229
.word 0xfeaf0416
.word 0xfeaf0416
.word 0xff130229
.word 0xff130229
.word 0x7ef3c956
.word 0x7ef3c956
.word 0xff130229
.word 0xff130229
.word 0x7f2099c0
.word 0x7f2099c0
.word 0xff130229
.word 0xfd6b36a9
.word 0x7e472f12
.word 0x7f7fffff
.word 0xfd6b36a9
.word 0xfd6b36a9
.word 0x7f7fffff
.word 0xff130229
.word 0x7e472f12
.word 0xff130229
.word 0x7ef046ce
.word 0x7ef046ce
.word 0xff130229
.word 0xfd6b36a9
.word 0x7e36c1bf
.word 0xff130229
.word 0x7e36c1bf
.word 0xff336b1f
.word 0xff336b1f
.word 0xff336b1f
.word 0xc018a1e0
.word 0xff336b1f
.word 0x7f0
.word 0xff336b1f
.word 0x8019f813
.word 0x8019f813
.word 0x80108f54
.word 0xff336b1f
.word 0x80108f54
.word 0x8019f813
.word 0x80365c4c
.word 0xff336b1f
.word 0x80365c4c
.word 0x8019f813
.word 0x8021e733
.word 0xff336b1f
.word 0x8021e733
.word 0xff336b1f
.word 0x800298ce
.word 0x800298ce
.word 0x800a66e8
.word 0xff336b1f
.word 0x800a66e8
.word 0x8019f813
.word 0x8019595f
.word 0xff336b1f
.word 0x8019595f
.word 0x8019f813
.word 0x217bcd
.word 0xff336b1f
.word 0x217bcd
.word 0x8019f813
.word 0x28e67d
.word 0xff336b1f
.word 0x28e67d
.word 0x8019f813
.word 0x3fb8a4
.word 0xff336b1f
.word 0x3fb8a4
.word 0xff336b1f
.word 0x8000427b
.word 0x8000427b
.word 0xd7bf
.word 0xff336b1f
.word 0xd7bf
.word 0x8019f813
.word 0x17ad58
.word 0xff336b1f
.word 0x17ad58
.word 0xff336b1f
.word 0xfd8f88e6
.word 0xfd8f88e6
.word 0xfdcaaeb1
.word 0xff336b1f
.word 0xfdcaaeb1
.word 0xff336b1f
.word 0xfeaf0416
.word 0xfeaf0416
.word 0xff336b1f
.word 0xff336b1f
.word 0x7ef3c956
.word 0x7ef3c956
.word 0xff336b1f
.word 0xff336b1f
.word 0x7f2099c0
.word 0x7f2099c0
.word 0xff336b1f
.word 0xfd8f88e6
.word 0x7e472f12
.word 0x7f7fffff
.word 0xfd8f88e6
.word 0xfd8f88e6
.word 0x7f7fffff
.word 0xff336b1f
.word 0x7e472f12
.word 0xff336b1f
.word 0x7ef046ce
.word 0x7ef046ce
.word 0xff336b1f
.word 0xfd8f88e6
.word 0x7e36c1bf
.word 0xff336b1f
.word 0x7e36c1bf
.word 0xfeaf0416
.word 0xfeaf0416
.word 0xfeaf0416
.word 0xbf94e31a
.word 0xfeaf0416
.word 0x7f0
.word 0xfeaf0416
.word 0x800caa79
.word 0x800caa79
.word 0x80108f54
.word 0xfeaf0416
.word 0x80108f54
.word 0x800caa79
.word 0x80365c4c
.word 0xfeaf0416
.word 0x80365c4c
.word 0x800caa79
.word 0x8021e733
.word 0xfeaf0416
.word 0x8021e733
.word 0xfeaf0416
.word 0x8001443f
.word 0x8001443f
.word 0x800a66e8
.word 0xfeaf0416
.word 0x800a66e8
.word 0x800caa79
.word 0x8019595f
.word 0xfeaf0416
.word 0x8019595f
.word 0x800caa79
.word 0x217bcd
.word 0xfeaf0416
.word 0x217bcd
.word 0x800caa79
.word 0x28e67d
.word 0xfeaf0416
.word 0x28e67d
.word 0x800caa79
.word 0x3fb8a4
.word 0xfeaf0416
.word 0x3fb8a4
.word 0xfeaf0416
.word 0x8000206c
.word 0x8000206c
.word 0xd7bf
.word 0xfeaf0416
.word 0xd7bf
.word 0x800caa79
.word 0x17ad58
.word 0xfeaf0416
.word 0x17ad58
.word 0xfeaf0416
.word 0xfd0c0345
.word 0xfd0c0345
.word 0xfdcaaeb1
.word 0xfeaf0416
.word 0xfdcaaeb1
.word 0xfeaf0416
.word 0x7ef3c956
.word 0x7ef3c956
.word 0xfeaf0416
.word 0xfeaf0416
.word 0x7f2099c0
.word 0x7f2099c0
.word 0xfeaf0416
.word 0xfd0c0345
.word 0x7e472f12
.word 0x7f7fffff
.word 0xfd0c0345
.word 0xfd0c0345
.word 0x7f7fffff
.word 0xfeaf0416
.word 0x7e472f12
.word 0xfeaf0416
.word 0x7ef046ce
.word 0x7ef046ce
.word 0xfeaf0416
.word 0xfd0c0345
.word 0x7e36c1bf
.word 0xfeaf0416
.word 0x7e36c1bf
.word 0x7ef3c956
.word 0x7ef3c956
.word 0x7ef3c956
.word 0x3fcf63fe
.word 0x7ef3c956
.word 0x7f0
.word 0x7ef3c956
.word 0x11a491
.word 0x11a491
.word 0x80108f54
.word 0x7ef3c956
.word 0x80108f54
.word 0x11a491
.word 0x80365c4c
.word 0x7ef3c956
.word 0x80365c4c
.word 0x11a491
.word 0x8021e733
.word 0x7ef3c956
.word 0x8021e733
.word 0x7ef3c956
.word 0x1c3a8
.word 0x1c3a8
.word 0x800a66e8
.word 0x7ef3c956
.word 0x800a66e8
.word 0x11a491
.word 0x8019595f
.word 0x7ef3c956
.word 0x8019595f
.word 0x11a491
.word 0x217bcd
.word 0x7ef3c956
.word 0x217bcd
.word 0x11a491
.word 0x28e67d
.word 0x7ef3c956
.word 0x28e67d
.word 0x11a491
.word 0x3fb8a4
.word 0x7ef3c956
.word 0x3fb8a4
.word 0x7ef3c956
.word 0x2d2a
.word 0x2d2a
.word 0xd7bf
.word 0x7ef3c956
.word 0xd7bf
.word 0x11a491
.word 0x17ad58
.word 0x7ef3c956
.word 0x17ad58
.word 0x7ef3c956
.word 0x7d430778
.word 0x7d430778
.word 0xfdcaaeb1
.word 0x7ef3c956
.word 0xfdcaaeb1
.word 0x7ef3c956
.word 0x7f2099c0
.word 0x7f2099c0
.word 0x7ef3c956
.word 0x7d430778
.word 0x7e472f12
.word 0x7f7fffff
.word 0x7d430778
.word 0x7d430778
.word 0x7f7fffff
.word 0x7ef3c956
.word 0x7e472f12
.word 0x7ef3c956
.word 0x7ef046ce
.word 0x7ef046ce
.word 0x7ef3c956
.word 0x7d430778
.word 0x7e36c1bf
.word 0x7ef3c956
.word 0x7e36c1bf
.word 0x7f2099c0
.word 0x7f2099c0
.word 0x7f2099c0
.word 0x40089fb6
.word 0x7f2099c0
.word 0x7f0
.word 0x7f2099c0
.word 0x173ecf
.word 0x173ecf
.word 0x80108f54
.word 0x7f2099c0
.word 0x80108f54
.word 0x173ecf
.word 0x80365c4c
.word 0x7f2099c0
.word 0x80365c4c
.word 0x173ecf
.word 0x8021e733
.word 0x7f2099c0
.word 0x8021e733
.word 0x7f2099c0
.word 0x25314
.word 0x25314
.word 0x800a66e8
.word 0x7f2099c0
.word 0x800a66e8
.word 0x173ecf
.word 0x8019595f
.word 0x7f2099c0
.word 0x8019595f
.word 0x173ecf
.word 0x217bcd
.word 0x7f2099c0
.word 0x217bcd
.word 0x173ecf
.word 0x28e67d
.word 0x7f2099c0
.word 0x28e67d
.word 0x173ecf
.word 0x3fb8a4
.word 0x7f2099c0
.word 0x3fb8a4
.word 0x7f2099c0
.word 0x3b82
.word 0x3b82
.word 0xd7bf
.word 0x7f2099c0
.word 0xd7bf
.word 0x173ecf
.word 0x17ad58
.word 0x7f2099c0
.word 0x17ad58
.word 0x7f2099c0
.word 0x7d807b00
.word 0x7d807b00
.word 0xfdcaaeb1
.word 0x7f2099c0
.word 0xfdcaaeb1
.word 0x7d807b00
.word 0x7e472f12
.word 0x7f7fffff
.word 0x7d807b00
.word 0x7d807b00
.word 0x7f7fffff
.word 0x7f2099c0
.word 0x7e472f12
.word 0x7f2099c0
.word 0x7ef046ce
.word 0x7ef046ce
.word 0x7f2099c0
.word 0x7d807b00
.word 0x7e36c1bf
.word 0x7f2099c0
.word 0x7e36c1bf
.word 0x7e472f12
.word 0x7e472f12
.word 0x7e472f12
.word 0x40d3cf02
.word 0x7e472f12
.word 0x7f0
.word 0x7e472f12
.word 0x481322
.word 0x481322
.word 0x80108f54
.word 0x7e472f12
.word 0x80108f54
.word 0x481322
.word 0x80365c4c
.word 0x7e472f12
.word 0x80365c4c
.word 0x481322
.word 0x8021e733
.word 0x7e472f12
.word 0x8021e733
.word 0x7e472f12
.word 0x7351d
.word 0x7351d
.word 0x800a66e8
.word 0x7e472f12
.word 0x800a66e8
.word 0x481322
.word 0x8019595f
.word 0x7e472f12
.word 0x8019595f
.word 0x481322
.word 0x217bcd
.word 0x7e472f12
.word 0x217bcd
.word 0x481322
.word 0x28e67d
.word 0x7e472f12
.word 0x28e67d
.word 0x481322
.word 0x3fb8a4
.word 0x7e472f12
.word 0x3fb8a4
.word 0x7e472f12
.word 0xb882
.word 0xb882
.word 0xd7bf
.word 0x7e472f12
.word 0xd7bf
.word 0x481322
.word 0x17ad58
.word 0x7e472f12
.word 0x17ad58
.word 0x7e472f12
.word 0x7f7fffff
.word 0x7e472f12
.word 0xfec91492
.word 0x7e472f12
.word 0xff130229
.word 0x7e472f12
.word 0xff336b1f
.word 0x7e472f12
.word 0xfeaf0416
.word 0x7e472f12
.word 0x7ef3c956
.word 0x7e472f12
.word 0x7f2099c0
.word 0x7d4038a5
.word 0x7f7fffff
.word 0x7f7fffff
.word 0x7d4038a5
.word 0x7e472f12
.word 0x7ef046ce
.word 0x7e472f12
.word 0x7e36c1bf
.word 0x7e36c1bf
.word 0x7e472f12
.word 0x7ef046ce
.word 0x7ef046ce
.word 0x7ef046ce
.word 0x3fcc679b
.word 0x7ef046ce
.word 0x7f0
.word 0x7ef046ce
.word 0x11638a
.word 0x11638a
.word 0x80108f54
.word 0x7ef046ce
.word 0x80108f54
.word 0x11638a
.word 0x80365c4c
.word 0x7ef046ce
.word 0x80365c4c
.word 0x11638a
.word 0x8021e733
.word 0x7ef046ce
.word 0x8021e733
.word 0x7ef046ce
.word 0x1bd27
.word 0x1bd27
.word 0x800a66e8
.word 0x7ef046ce
.word 0x800a66e8
.word 0x11638a
.word 0x8019595f
.word 0x7ef046ce
.word 0x8019595f
.word 0x11638a
.word 0x217bcd
.word 0x7ef046ce
.word 0x217bcd
.word 0x11638a
.word 0x28e67d
.word 0x7ef046ce
.word 0x28e67d
.word 0x11638a
.word 0x3fb8a4
.word 0x7ef046ce
.word 0x3fb8a4
.word 0x7ef046ce
.word 0x2c83
.word 0x2c83
.word 0xd7bf
.word 0x7ef046ce
.word 0xd7bf
.word 0x11638a
.word 0x17ad58
.word 0x7ef046ce
.word 0x17ad58
.word 0x7ef046ce
.word 0x7d4038a5
.word 0x7d4038a5
.word 0xfdcaaeb1
.word 0x7ef046ce
.word 0xfdcaaeb1
.word 0x7d4038a5
.word 0x7e472f12
.word 0x7ef046ce
.word 0x7e472f12
.word 0x7d4038a5
.word 0x7e36c1bf
.word 0x7ef046ce
.word 0x7e36c1bf
.word 0x7e36c1bf
.word 0x40c25723
.word 0x7e36c1bf
.word 0x7f0
.word 0x7e36c1bf
.word 0x42216f
.word 0x42216f
.word 0x80108f54
.word 0x7e36c1bf
.word 0x80108f54
.word 0x42216f
.word 0x80365c4c
.word 0x7e36c1bf
.word 0x80365c4c
.word 0x42216f
.word 0x8021e733
.word 0x7e36c1bf
.word 0x8021e733
.word 0x7e36c1bf
.word 0x69cf1
.word 0x69cf1
.word 0x800a66e8
.word 0x7e36c1bf
.word 0x800a66e8
.word 0x42216f
.word 0x8019595f
.word 0x7e36c1bf
.word 0x8019595f
.word 0x42216f
.word 0x217bcd
.word 0x7e36c1bf
.word 0x217bcd
.word 0x42216f
.word 0x28e67d
.word 0x7e36c1bf
.word 0x28e67d
.word 0x42216f
.word 0x3fb8a4
.word 0x7e36c1bf
.word 0x3fb8a4
.word 0x7e36c1bf
.word 0xa94b
.word 0xa94b
.word 0xd7bf
.word 0x7e36c1bf
.word 0xd7bf
.word 0x42216f
.word 0x17ad58
.word 0x7e36c1bf
.word 0x17ad58
.word 0x7e36c1bf
.word 0x7f7fffff
.word 0x7e36c1bf
.word 0xfec91492
.word 0x7e36c1bf
.word 0xff130229
.word 0x7e36c1bf
.word 0xff336b1f
.word 0x7e36c1bf
.word 0xfeaf0416
.word 0x7e36c1bf
.word 0x7ef3c956
.word 0x7e36c1bf
.word 0x7f2099c0
.word 0x7e36c1bf
.word 0x7ef046ce
.word 0x7e36c1bf
.word 0x7e36c1bf
.word 0x7f0
.word 0x8019595f
RVTEST_DATA_END

RVMODEL_DATA_BEGIN


signature_x15_0:
    .fill 0*(XLEN/32),4,0xdeadbeef


signature_x15_1:
    .fill 10*(XLEN/32),4,0xdeadbeef


signature_x19_0:
    .fill 2*(XLEN/32),4,0xdeadbeef


signature_x15_2:
    .fill 10*(XLEN/32),4,0xdeadbeef


signature_x19_1:
    .fill 4*(XLEN/32),4,0xdeadbeef


signature_x15_3:
    .fill 508*(XLEN/32),4,0xdeadbeef


signature_x15_4:
    .fill 508*(XLEN/32),4,0xdeadbeef


signature_x15_5:
    .fill 508*(XLEN/32),4,0xdeadbeef


signature_x15_6:
    .fill 508*(XLEN/32),4,0xdeadbeef


signature_x15_7:
    .fill 86*(XLEN/32),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*(XLEN/32),4,0xdeadbeef

#endif

RVMODEL_DATA_END
