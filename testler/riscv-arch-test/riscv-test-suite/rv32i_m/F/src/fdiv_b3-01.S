
// -----------
// This file was generated by riscv_ctg (https://gitlab.com/incoresemi/riscv-compliance/riscv_ctg)
// version   : 0.5.2
// timestamp : Tue Sep  7 16:44:09 2021 GMT
// usage     : riscv_ctg \
//                  -- cgf $cgf \
//                  -- xlen $xlen \
// -----------
//
// -----------
// Copyright (c) 2021. IIT Madras. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fdiv.s instruction of the RISC-V F extension for the fdiv_b3 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fdiv_b3)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x16,test_fp)
RVTEST_SIGBASE(x15,signature_x15_1)

inst_0:
// rs1 == rd != rs2, rs1==f21, rs2==f30, rd==f21, fs1 == 0 and fe1 == 0xfc and fm1 == 0x36c1bf and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f21; op2:f30; dest:f21; op1val:0x7e36c1bf; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:0; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f21, f21, f30, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_1:
// rs1 != rs2  and rs1 != rd and rs2 != rd, rs1==f13, rs2==f20, rd==f16, fs1 == 0 and fe1 == 0xfc and fm1 == 0x4bf975 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f13; op2:f20; dest:f16; op1val:0x7e4bf975; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:8; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f16, f13, f20, 0x4, 0, x16, 8, x17, x15, 8, x18)

inst_2:
// rs1 == rs2 == rd, rs1==f12, rs2==f12, rd==f12, fs1 == 0 and fe1 == 0xfc and fm1 == 0x4bf975 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f12; op2:f12; dest:f12; op1val:0x7e4bf975; op2val:0x7e4bf975; valaddr_reg:x16; val_offset:16; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f12, f12, 0x3, 0, x16, 16, x17, x15, 16, x18)

inst_3:
// rs1 == rs2 != rd, rs1==f14, rs2==f14, rd==f26, fs1 == 0 and fe1 == 0xfc and fm1 == 0x4bf975 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f14; op2:f14; dest:f26; op1val:0x7e4bf975; op2val:0x7e4bf975; valaddr_reg:x16; val_offset:24; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f26, f14, f14, 0x2, 0, x16, 24, x17, x15, 24, x18)

inst_4:
// rs2 == rd != rs1, rs1==f19, rs2==f8, rd==f8, fs1 == 0 and fe1 == 0xfc and fm1 == 0x4bf975 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f19; op2:f8; dest:f8; op1val:0x7e4bf975; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:32; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f8, f19, f8, 0x1, 0, x16, 32, x17, x15, 32, x18)

inst_5:
// rs1==f16, rs2==f10, rd==f13, fs1 == 0 and fe1 == 0xfc and fm1 == 0x4bf975 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f16; op2:f10; dest:f13; op1val:0x7e4bf975; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:40; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f13, f16, f10, 0x0, 0, x16, 40, x17, x15, 40, x18)

inst_6:
// rs1==f9, rs2==f23, rd==f20, fs1 == 0 and fe1 == 0xfd and fm1 == 0x7b2a84 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f9; op2:f23; dest:f20; op1val:0x7efb2a84; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:48; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f20, f9, f23, 0x4, 0, x16, 48, x17, x15, 48, x18)

inst_7:
// rs1==f11, rs2==f26, rd==f24, fs1 == 0 and fe1 == 0xfd and fm1 == 0x7b2a84 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f11; op2:f26; dest:f24; op1val:0x7efb2a84; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:56; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f24, f11, f26, 0x3, 0, x16, 56, x17, x15, 56, x18)

inst_8:
// rs1==f26, rs2==f11, rd==f23, fs1 == 0 and fe1 == 0xfd and fm1 == 0x7b2a84 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f26; op2:f11; dest:f23; op1val:0x7efb2a84; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:64; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f23, f26, f11, 0x2, 0, x16, 64, x17, x15, 64, x18)

inst_9:
// rs1==f1, rs2==f6, rd==f0, fs1 == 0 and fe1 == 0xfd and fm1 == 0x7b2a84 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f1; op2:f6; dest:f0; op1val:0x7efb2a84; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:72; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f0, f1, f6, 0x1, 0, x16, 72, x17, x15, 72, x18)

inst_10:
// rs1==f17, rs2==f18, rd==f9, fs1 == 0 and fe1 == 0xfd and fm1 == 0x7b2a84 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f17; op2:f18; dest:f9; op1val:0x7efb2a84; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:80; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f9, f17, f18, 0x0, 0, x16, 80, x17, x15, 80, x18)

inst_11:
// rs1==f25, rs2==f28, rd==f1, fs1 == 0 and fe1 == 0xfc and fm1 == 0x62f85a and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f25; op2:f28; dest:f1; op1val:0x7e62f85a; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:88; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f1, f25, f28, 0x4, 0, x16, 88, x17, x15, 88, x18)

inst_12:
// rs1==f8, rs2==f5, rd==f19, fs1 == 0 and fe1 == 0xfc and fm1 == 0x62f85a and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f8; op2:f5; dest:f19; op1val:0x7e62f85a; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:96; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f19, f8, f5, 0x3, 0, x16, 96, x17, x15, 96, x18)

inst_13:
// rs1==f10, rs2==f15, rd==f29, fs1 == 0 and fe1 == 0xfc and fm1 == 0x62f85a and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f15; dest:f29; op1val:0x7e62f85a; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:104; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f29, f10, f15, 0x2, 0, x16, 104, x17, x15, 104, x18)

inst_14:
// rs1==f5, rs2==f22, rd==f10, fs1 == 0 and fe1 == 0xfc and fm1 == 0x62f85a and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f5; op2:f22; dest:f10; op1val:0x7e62f85a; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:112; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f10, f5, f22, 0x1, 0, x16, 112, x17, x15, 112, x18)

inst_15:
// rs1==f15, rs2==f19, rd==f4, fs1 == 0 and fe1 == 0xfc and fm1 == 0x62f85a and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f15; op2:f19; dest:f4; op1val:0x7e62f85a; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:120; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f4, f15, f19, 0x0, 0, x16, 120, x17, x15, 120, x18)

inst_16:
// rs1==f0, rs2==f2, rd==f5, fs1 == 0 and fe1 == 0xfe and fm1 == 0x144df3 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f0; op2:f2; dest:f5; op1val:0x7f144df3; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:128; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f5, f0, f2, 0x4, 0, x16, 128, x17, x15, 128, x18)

inst_17:
// rs1==f6, rs2==f21, rd==f17, fs1 == 0 and fe1 == 0xfe and fm1 == 0x144df3 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f6; op2:f21; dest:f17; op1val:0x7f144df3; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:136; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f17, f6, f21, 0x3, 0, x16, 136, x17, x15, 136, x18)

inst_18:
// rs1==f30, rs2==f29, rd==f25, fs1 == 0 and fe1 == 0xfe and fm1 == 0x144df3 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f30; op2:f29; dest:f25; op1val:0x7f144df3; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:144; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f25, f30, f29, 0x2, 0, x16, 144, x17, x15, 144, x18)

inst_19:
// rs1==f29, rs2==f25, rd==f3, fs1 == 0 and fe1 == 0xfe and fm1 == 0x144df3 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f29; op2:f25; dest:f3; op1val:0x7f144df3; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:152; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f3, f29, f25, 0x1, 0, x16, 152, x17, x15, 152, x18)

inst_20:
// rs1==f31, rs2==f27, rd==f2, fs1 == 0 and fe1 == 0xfe and fm1 == 0x144df3 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f31; op2:f27; dest:f2; op1val:0x7f144df3; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:160; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f2, f31, f27, 0x0, 0, x16, 160, x17, x15, 160, x18)

inst_21:
// rs1==f24, rs2==f16, rd==f30, fs1 == 0 and fe1 == 0xfe and fm1 == 0x34ba29 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f24; op2:f16; dest:f30; op1val:0x7f34ba29; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:168; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f30, f24, f16, 0x4, 0, x16, 168, x17, x15, 168, x18)

inst_22:
// rs1==f3, rs2==f7, rd==f31, fs1 == 0 and fe1 == 0xfe and fm1 == 0x34ba29 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f3; op2:f7; dest:f31; op1val:0x7f34ba29; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:176; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f31, f3, f7, 0x3, 0, x16, 176, x17, x15, 176, x18)

inst_23:
// rs1==f28, rs2==f13, rd==f11, fs1 == 0 and fe1 == 0xfe and fm1 == 0x34ba29 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f28; op2:f13; dest:f11; op1val:0x7f34ba29; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:184; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f11, f28, f13, 0x2, 0, x16, 184, x17, x15, 184, x18)

inst_24:
// rs1==f27, rs2==f0, rd==f28, fs1 == 0 and fe1 == 0xfe and fm1 == 0x34ba29 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f27; op2:f0; dest:f28; op1val:0x7f34ba29; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:192; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f28, f27, f0, 0x1, 0, x16, 192, x17, x15, 192, x18)

inst_25:
// rs1==f2, rs2==f3, rd==f15, fs1 == 0 and fe1 == 0xfe and fm1 == 0x34ba29 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f2; op2:f3; dest:f15; op1val:0x7f34ba29; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:200; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f15, f2, f3, 0x0, 0, x16, 200, x17, x15, 200, x18)

inst_26:
// rs1==f20, rs2==f9, rd==f27, fs1 == 0 and fe1 == 0xfe and fm1 == 0x2e7b77 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f20; op2:f9; dest:f27; op1val:0x7f2e7b77; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:208; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f27, f20, f9, 0x4, 0, x16, 208, x17, x15, 208, x18)

inst_27:
// rs1==f22, rs2==f4, rd==f18, fs1 == 0 and fe1 == 0xfe and fm1 == 0x2e7b77 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f22; op2:f4; dest:f18; op1val:0x7f2e7b77; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:216; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f18, f22, f4, 0x3, 0, x16, 216, x17, x15, 216, x18)

inst_28:
// rs1==f4, rs2==f1, rd==f22, fs1 == 0 and fe1 == 0xfe and fm1 == 0x2e7b77 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f4; op2:f1; dest:f22; op1val:0x7f2e7b77; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:224; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f22, f4, f1, 0x2, 0, x16, 224, x17, x15, 224, x18)

inst_29:
// rs1==f18, rs2==f17, rd==f7, fs1 == 0 and fe1 == 0xfe and fm1 == 0x2e7b77 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f18; op2:f17; dest:f7; op1val:0x7f2e7b77; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:232; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f7, f18, f17, 0x1, 0, x16, 232, x17, x15, 232, x18)

inst_30:
// rs1==f23, rs2==f24, rd==f14, fs1 == 0 and fe1 == 0xfe and fm1 == 0x2e7b77 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f23; op2:f24; dest:f14; op1val:0x7f2e7b77; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:240; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f14, f23, f24, 0x0, 0, x16, 240, x17, x15, 240, x18)

inst_31:
// rs1==f7, rs2==f31, rd==f6, fs1 == 0 and fe1 == 0xfb and fm1 == 0x2cd834 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f7; op2:f31; dest:f6; op1val:0x7dacd834; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:248; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f6, f7, f31, 0x4, 0, x16, 248, x17, x15, 248, x18)

inst_32:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2cd834 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7dacd834; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:256; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 256, x17, x15, 256, x18)

inst_33:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2cd834 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7dacd834; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:264; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 264, x17, x15, 264, x18)

inst_34:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2cd834 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7dacd834; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:272; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 272, x17, x15, 272, x18)

inst_35:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2cd834 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7dacd834; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:280; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 280, x17, x15, 280, x18)

inst_36:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x530441 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e530441; op2val:0xff7fffff; valaddr_reg:x16; val_offset:288; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 288, x17, x15, 288, x18)

inst_37:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x530441 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e530441; op2val:0xff7fffff; valaddr_reg:x16; val_offset:296; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 296, x17, x15, 296, x18)

inst_38:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x530441 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e530441; op2val:0xff7fffff; valaddr_reg:x16; val_offset:304; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 304, x17, x15, 304, x18)

inst_39:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x530441 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e530441; op2val:0xff7fffff; valaddr_reg:x16; val_offset:312; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 312, x17, x15, 312, x18)

inst_40:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x530441 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e530441; op2val:0xff7fffff; valaddr_reg:x16; val_offset:320; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 320, x17, x15, 320, x18)

inst_41:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x51086c and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ed1086c; op2val:0xff7fffff; valaddr_reg:x16; val_offset:328; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 328, x17, x15, 328, x18)

inst_42:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x51086c and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ed1086c; op2val:0xff7fffff; valaddr_reg:x16; val_offset:336; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 336, x17, x15, 336, x18)

inst_43:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x51086c and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ed1086c; op2val:0xff7fffff; valaddr_reg:x16; val_offset:344; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 344, x17, x15, 344, x18)

inst_44:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x51086c and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ed1086c; op2val:0xff7fffff; valaddr_reg:x16; val_offset:352; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 352, x17, x15, 352, x18)

inst_45:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x51086c and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ed1086c; op2val:0xff7fffff; valaddr_reg:x16; val_offset:360; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 360, x17, x15, 360, x18)

inst_46:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x376cbc and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f376cbc; op2val:0xff7fffff; valaddr_reg:x16; val_offset:368; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 368, x17, x15, 368, x18)

inst_47:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x376cbc and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f376cbc; op2val:0xff7fffff; valaddr_reg:x16; val_offset:376; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 376, x17, x15, 376, x18)

inst_48:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x376cbc and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f376cbc; op2val:0xff7fffff; valaddr_reg:x16; val_offset:384; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 384, x17, x15, 384, x18)

inst_49:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x376cbc and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f376cbc; op2val:0xff7fffff; valaddr_reg:x16; val_offset:392; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 392, x17, x15, 392, x18)

inst_50:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x376cbc and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f376cbc; op2val:0xff7fffff; valaddr_reg:x16; val_offset:400; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 400, x17, x15, 400, x18)

inst_51:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x215a9a and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e215a9a; op2val:0xff7fffff; valaddr_reg:x16; val_offset:408; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 408, x17, x15, 408, x18)

inst_52:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x215a9a and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e215a9a; op2val:0xff7fffff; valaddr_reg:x16; val_offset:416; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 416, x17, x15, 416, x18)

inst_53:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x215a9a and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e215a9a; op2val:0xff7fffff; valaddr_reg:x16; val_offset:424; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 424, x17, x15, 424, x18)

inst_54:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x215a9a and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e215a9a; op2val:0xff7fffff; valaddr_reg:x16; val_offset:432; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 432, x17, x15, 432, x18)

inst_55:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x215a9a and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e215a9a; op2val:0xff7fffff; valaddr_reg:x16; val_offset:440; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 440, x17, x15, 440, x18)

inst_56:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27824d and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ea7824d; op2val:0xff7fffff; valaddr_reg:x16; val_offset:448; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 448, x17, x15, 448, x18)

inst_57:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27824d and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ea7824d; op2val:0xff7fffff; valaddr_reg:x16; val_offset:456; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 456, x17, x15, 456, x18)

inst_58:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27824d and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ea7824d; op2val:0xff7fffff; valaddr_reg:x16; val_offset:464; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 464, x17, x15, 464, x18)

inst_59:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27824d and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ea7824d; op2val:0xff7fffff; valaddr_reg:x16; val_offset:472; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 472, x17, x15, 472, x18)

inst_60:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27824d and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ea7824d; op2val:0xff7fffff; valaddr_reg:x16; val_offset:480; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 480, x17, x15, 480, x18)

inst_61:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x292c77 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ba92c77; op2val:0xff7fffff; valaddr_reg:x16; val_offset:488; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 488, x17, x15, 488, x18)

inst_62:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x292c77 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ba92c77; op2val:0xff7fffff; valaddr_reg:x16; val_offset:496; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 496, x17, x15, 496, x18)

inst_63:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x292c77 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ba92c77; op2val:0xff7fffff; valaddr_reg:x16; val_offset:504; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 504, x17, x15, 504, x18)

inst_64:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x292c77 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ba92c77; op2val:0xff7fffff; valaddr_reg:x16; val_offset:512; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 512, x17, x15, 512, x18)

inst_65:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x292c77 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ba92c77; op2val:0xff7fffff; valaddr_reg:x16; val_offset:520; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 520, x17, x15, 520, x18)

inst_66:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5ed5d0 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eded5d0; op2val:0xff7fffff; valaddr_reg:x16; val_offset:528; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 528, x17, x15, 528, x18)

inst_67:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5ed5d0 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eded5d0; op2val:0xff7fffff; valaddr_reg:x16; val_offset:536; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 536, x17, x15, 536, x18)

inst_68:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5ed5d0 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eded5d0; op2val:0xff7fffff; valaddr_reg:x16; val_offset:544; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 544, x17, x15, 544, x18)

inst_69:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5ed5d0 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eded5d0; op2val:0xff7fffff; valaddr_reg:x16; val_offset:552; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 552, x17, x15, 552, x18)

inst_70:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5ed5d0 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eded5d0; op2val:0xff7fffff; valaddr_reg:x16; val_offset:560; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 560, x17, x15, 560, x18)

inst_71:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x601303 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e601303; op2val:0xff7fffff; valaddr_reg:x16; val_offset:568; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 568, x17, x15, 568, x18)

inst_72:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x601303 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e601303; op2val:0xff7fffff; valaddr_reg:x16; val_offset:576; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 576, x17, x15, 576, x18)

inst_73:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x601303 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e601303; op2val:0xff7fffff; valaddr_reg:x16; val_offset:584; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 584, x17, x15, 584, x18)

inst_74:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x601303 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e601303; op2val:0xff7fffff; valaddr_reg:x16; val_offset:592; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 592, x17, x15, 592, x18)

inst_75:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x601303 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e601303; op2val:0xff7fffff; valaddr_reg:x16; val_offset:600; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 600, x17, x15, 600, x18)

inst_76:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0e4c72 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7d8e4c72; op2val:0xff7fffff; valaddr_reg:x16; val_offset:608; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 608, x17, x15, 608, x18)

inst_77:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0e4c72 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7d8e4c72; op2val:0xff7fffff; valaddr_reg:x16; val_offset:616; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 616, x17, x15, 616, x18)

inst_78:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0e4c72 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7d8e4c72; op2val:0xff7fffff; valaddr_reg:x16; val_offset:624; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 624, x17, x15, 624, x18)

inst_79:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0e4c72 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7d8e4c72; op2val:0xff7fffff; valaddr_reg:x16; val_offset:632; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 632, x17, x15, 632, x18)

inst_80:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0e4c72 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7d8e4c72; op2val:0xff7fffff; valaddr_reg:x16; val_offset:640; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 640, x17, x15, 640, x18)

inst_81:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bf641 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f0bf641; op2val:0xff7fffff; valaddr_reg:x16; val_offset:648; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 648, x17, x15, 648, x18)

inst_82:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bf641 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f0bf641; op2val:0xff7fffff; valaddr_reg:x16; val_offset:656; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 656, x17, x15, 656, x18)

inst_83:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bf641 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f0bf641; op2val:0xff7fffff; valaddr_reg:x16; val_offset:664; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 664, x17, x15, 664, x18)

inst_84:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bf641 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f0bf641; op2val:0xff7fffff; valaddr_reg:x16; val_offset:672; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 672, x17, x15, 672, x18)

inst_85:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bf641 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f0bf641; op2val:0xff7fffff; valaddr_reg:x16; val_offset:680; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 680, x17, x15, 680, x18)

inst_86:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x70b43d and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e70b43d; op2val:0xff7fffff; valaddr_reg:x16; val_offset:688; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 688, x17, x15, 688, x18)

inst_87:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x70b43d and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e70b43d; op2val:0xff7fffff; valaddr_reg:x16; val_offset:696; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 696, x17, x15, 696, x18)

inst_88:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x70b43d and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e70b43d; op2val:0xff7fffff; valaddr_reg:x16; val_offset:704; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 704, x17, x15, 704, x18)

inst_89:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x70b43d and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e70b43d; op2val:0xff7fffff; valaddr_reg:x16; val_offset:712; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 712, x17, x15, 712, x18)

inst_90:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x70b43d and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e70b43d; op2val:0xff7fffff; valaddr_reg:x16; val_offset:720; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 720, x17, x15, 720, x18)

inst_91:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e43d898; op2val:0xff7fffff; valaddr_reg:x16; val_offset:728; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 728, x17, x15, 728, x18)

inst_92:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e43d898; op2val:0xff7fffff; valaddr_reg:x16; val_offset:736; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 736, x17, x15, 736, x18)

inst_93:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e43d898; op2val:0xff7fffff; valaddr_reg:x16; val_offset:744; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 744, x17, x15, 744, x18)

inst_94:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e43d898; op2val:0xff7fffff; valaddr_reg:x16; val_offset:752; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 752, x17, x15, 752, x18)

inst_95:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x43d898 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e43d898; op2val:0xff7fffff; valaddr_reg:x16; val_offset:760; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 760, x17, x15, 760, x18)

inst_96:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24d9b0 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f24d9b0; op2val:0xff7fffff; valaddr_reg:x16; val_offset:768; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 768, x17, x15, 768, x18)

inst_97:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24d9b0 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f24d9b0; op2val:0xff7fffff; valaddr_reg:x16; val_offset:776; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 776, x17, x15, 776, x18)

inst_98:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24d9b0 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f24d9b0; op2val:0xff7fffff; valaddr_reg:x16; val_offset:784; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 784, x17, x15, 784, x18)

inst_99:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24d9b0 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f24d9b0; op2val:0xff7fffff; valaddr_reg:x16; val_offset:792; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 792, x17, x15, 792, x18)

inst_100:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x24d9b0 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f24d9b0; op2val:0xff7fffff; valaddr_reg:x16; val_offset:800; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 800, x17, x15, 800, x18)

inst_101:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0fc236 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e0fc236; op2val:0xff7fffff; valaddr_reg:x16; val_offset:808; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 808, x17, x15, 808, x18)

inst_102:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0fc236 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e0fc236; op2val:0xff7fffff; valaddr_reg:x16; val_offset:816; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 816, x17, x15, 816, x18)

inst_103:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0fc236 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e0fc236; op2val:0xff7fffff; valaddr_reg:x16; val_offset:824; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 824, x17, x15, 824, x18)

inst_104:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0fc236 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e0fc236; op2val:0xff7fffff; valaddr_reg:x16; val_offset:832; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 832, x17, x15, 832, x18)

inst_105:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0fc236 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e0fc236; op2val:0xff7fffff; valaddr_reg:x16; val_offset:840; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 840, x17, x15, 840, x18)

inst_106:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x11a16e and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e11a16e; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:848; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 848, x17, x15, 848, x18)

inst_107:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x11a16e and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e11a16e; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:856; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 856, x17, x15, 856, x18)

inst_108:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x11a16e and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e11a16e; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:864; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 864, x17, x15, 864, x18)

inst_109:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x11a16e and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e11a16e; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:872; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 872, x17, x15, 872, x18)

inst_110:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x11a16e and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e11a16e; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:880; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 880, x17, x15, 880, x18)

inst_111:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23f1fb and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f23f1fb; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:888; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 888, x17, x15, 888, x18)

inst_112:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23f1fb and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f23f1fb; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:896; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 896, x17, x15, 896, x18)

inst_113:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23f1fb and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f23f1fb; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:904; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 904, x17, x15, 904, x18)

inst_114:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23f1fb and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f23f1fb; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:912; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 912, x17, x15, 912, x18)

inst_115:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23f1fb and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f23f1fb; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:920; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 920, x17, x15, 920, x18)

inst_116:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x01aad7 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f01aad7; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:928; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 928, x17, x15, 928, x18)

inst_117:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x01aad7 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f01aad7; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:936; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 936, x17, x15, 936, x18)

inst_118:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x01aad7 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f01aad7; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:944; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 944, x17, x15, 944, x18)

inst_119:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x01aad7 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f01aad7; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:952; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 952, x17, x15, 952, x18)

inst_120:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x01aad7 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f01aad7; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:960; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 960, x17, x15, 960, x18)

inst_121:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x344f5f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e344f5f; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:968; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 968, x17, x15, 968, x18)

inst_122:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x344f5f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e344f5f; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:976; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 976, x17, x15, 976, x18)

inst_123:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x344f5f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e344f5f; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:984; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 984, x17, x15, 984, x18)

inst_124:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x344f5f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e344f5f; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:992; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 992, x17, x15, 992, x18)

inst_125:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x344f5f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e344f5f; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1000; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1000, x17, x15, 1000, x18)

inst_126:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x337ad1 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eb37ad1; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1008; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1008, x17, x15, 1008, x18)

inst_127:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x337ad1 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eb37ad1; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1016; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1016, x17, x15, 1016, x18)

inst_128:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x337ad1 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eb37ad1; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1024; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1024, x17, x15, 1024, x18)

inst_129:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x337ad1 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eb37ad1; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1032; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1032, x17, x15, 1032, x18)

inst_130:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x337ad1 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eb37ad1; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1040; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1040, x17, x15, 1040, x18)

inst_131:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0cd956 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f0cd956; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1048; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1048, x17, x15, 1048, x18)

inst_132:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0cd956 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f0cd956; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1056; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1056, x17, x15, 1056, x18)

inst_133:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0cd956 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f0cd956; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1064; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1064, x17, x15, 1064, x18)

inst_134:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0cd956 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f0cd956; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1072; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1072, x17, x15, 1072, x18)

inst_135:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0cd956 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f0cd956; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1080; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1080, x17, x15, 1080, x18)

inst_136:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x247a01 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f247a01; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1088; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1088, x17, x15, 1088, x18)

inst_137:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x247a01 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f247a01; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1096; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1096, x17, x15, 1096, x18)

inst_138:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x247a01 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f247a01; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1104; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1104, x17, x15, 1104, x18)

inst_139:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x247a01 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f247a01; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1112; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1112, x17, x15, 1112, x18)

inst_140:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x247a01 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f247a01; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1120; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1120, x17, x15, 1120, x18)

inst_141:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x38d1a5 and fs2 == 0 and fe2 == 0xd2 and fm2 == 0x38d1a5 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eb8d1a5; op2val:0x6938d1a5; valaddr_reg:x16; val_offset:1128; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1128, x17, x15, 1128, x18)

inst_142:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x38d1a5 and fs2 == 0 and fe2 == 0xd2 and fm2 == 0x38d1a5 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eb8d1a5; op2val:0x6938d1a5; valaddr_reg:x16; val_offset:1136; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1136, x17, x15, 1136, x18)

inst_143:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x38d1a5 and fs2 == 0 and fe2 == 0xd2 and fm2 == 0x38d1a5 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eb8d1a5; op2val:0x6938d1a5; valaddr_reg:x16; val_offset:1144; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1144, x17, x15, 1144, x18)

inst_144:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x38d1a5 and fs2 == 0 and fe2 == 0xd2 and fm2 == 0x38d1a5 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eb8d1a5; op2val:0x6938d1a5; valaddr_reg:x16; val_offset:1152; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1152, x17, x15, 1152, x18)

inst_145:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x38d1a5 and fs2 == 0 and fe2 == 0xd2 and fm2 == 0x38d1a5 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eb8d1a5; op2val:0x6938d1a5; valaddr_reg:x16; val_offset:1160; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1160, x17, x15, 1160, x18)

inst_146:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dc006 and fs2 == 0 and fe2 == 0xd3 and fm2 == 0x1dc006 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f1dc006; op2val:0x699dc006; valaddr_reg:x16; val_offset:1168; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1168, x17, x15, 1168, x18)

inst_147:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dc006 and fs2 == 0 and fe2 == 0xd3 and fm2 == 0x1dc006 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f1dc006; op2val:0x699dc006; valaddr_reg:x16; val_offset:1176; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1176, x17, x15, 1176, x18)

inst_148:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dc006 and fs2 == 0 and fe2 == 0xd3 and fm2 == 0x1dc006 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f1dc006; op2val:0x699dc006; valaddr_reg:x16; val_offset:1184; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1184, x17, x15, 1184, x18)

inst_149:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dc006 and fs2 == 0 and fe2 == 0xd3 and fm2 == 0x1dc006 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f1dc006; op2val:0x699dc006; valaddr_reg:x16; val_offset:1192; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1192, x17, x15, 1192, x18)

inst_150:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1dc006 and fs2 == 0 and fe2 == 0xd3 and fm2 == 0x1dc006 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f1dc006; op2val:0x699dc006; valaddr_reg:x16; val_offset:1200; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1200, x17, x15, 1200, x18)

inst_151:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x33bb79 and fs2 == 0 and fe2 == 0xd2 and fm2 == 0x33bb79 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eb3bb79; op2val:0x6933bb79; valaddr_reg:x16; val_offset:1208; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1208, x17, x15, 1208, x18)

inst_152:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x33bb79 and fs2 == 0 and fe2 == 0xd2 and fm2 == 0x33bb79 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eb3bb79; op2val:0x6933bb79; valaddr_reg:x16; val_offset:1216; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1216, x17, x15, 1216, x18)

inst_153:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x33bb79 and fs2 == 0 and fe2 == 0xd2 and fm2 == 0x33bb79 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eb3bb79; op2val:0x6933bb79; valaddr_reg:x16; val_offset:1224; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1224, x17, x15, 1224, x18)

inst_154:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x33bb79 and fs2 == 0 and fe2 == 0xd2 and fm2 == 0x33bb79 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eb3bb79; op2val:0x6933bb79; valaddr_reg:x16; val_offset:1232; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1232, x17, x15, 1232, x18)

inst_155:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x33bb79 and fs2 == 0 and fe2 == 0xd2 and fm2 == 0x33bb79 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eb3bb79; op2val:0x6933bb79; valaddr_reg:x16; val_offset:1240; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1240, x17, x15, 1240, x18)

inst_156:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x382999 and fs2 == 0 and fe2 == 0xd2 and fm2 == 0x382999 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eb82999; op2val:0x69382999; valaddr_reg:x16; val_offset:1248; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1248, x17, x15, 1248, x18)

inst_157:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x382999 and fs2 == 0 and fe2 == 0xd2 and fm2 == 0x382999 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eb82999; op2val:0x69382999; valaddr_reg:x16; val_offset:1256; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1256, x17, x15, 1256, x18)

inst_158:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x382999 and fs2 == 0 and fe2 == 0xd2 and fm2 == 0x382999 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eb82999; op2val:0x69382999; valaddr_reg:x16; val_offset:1264; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1264, x17, x15, 1264, x18)

inst_159:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x382999 and fs2 == 0 and fe2 == 0xd2 and fm2 == 0x382999 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eb82999; op2val:0x69382999; valaddr_reg:x16; val_offset:1272; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1272, x17, x15, 1272, x18)

inst_160:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x382999 and fs2 == 0 and fe2 == 0xd2 and fm2 == 0x382999 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eb82999; op2val:0x69382999; valaddr_reg:x16; val_offset:1280; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1280, x17, x15, 1280, x18)

inst_161:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5c95cc and fs2 == 0 and fe2 == 0xd0 and fm2 == 0x5c95cc and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ddc95cc; op2val:0x685c95cc; valaddr_reg:x16; val_offset:1288; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1288, x17, x15, 1288, x18)

inst_162:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5c95cc and fs2 == 0 and fe2 == 0xd0 and fm2 == 0x5c95cc and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ddc95cc; op2val:0x685c95cc; valaddr_reg:x16; val_offset:1296; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1296, x17, x15, 1296, x18)

inst_163:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5c95cc and fs2 == 0 and fe2 == 0xd0 and fm2 == 0x5c95cc and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ddc95cc; op2val:0x685c95cc; valaddr_reg:x16; val_offset:1304; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1304, x17, x15, 1304, x18)

inst_164:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5c95cc and fs2 == 0 and fe2 == 0xd0 and fm2 == 0x5c95cc and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ddc95cc; op2val:0x685c95cc; valaddr_reg:x16; val_offset:1312; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1312, x17, x15, 1312, x18)

inst_165:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5c95cc and fs2 == 0 and fe2 == 0xd0 and fm2 == 0x5c95cc and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ddc95cc; op2val:0x685c95cc; valaddr_reg:x16; val_offset:1320; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1320, x17, x15, 1320, x18)

inst_166:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x77540f and fs2 == 0 and fe2 == 0xd1 and fm2 == 0x77540f and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e77540f; op2val:0x68f7540f; valaddr_reg:x16; val_offset:1328; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1328, x17, x15, 1328, x18)

inst_167:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x77540f and fs2 == 0 and fe2 == 0xd1 and fm2 == 0x77540f and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e77540f; op2val:0x68f7540f; valaddr_reg:x16; val_offset:1336; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1336, x17, x15, 1336, x18)

inst_168:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x77540f and fs2 == 0 and fe2 == 0xd1 and fm2 == 0x77540f and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e77540f; op2val:0x68f7540f; valaddr_reg:x16; val_offset:1344; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1344, x17, x15, 1344, x18)

inst_169:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x77540f and fs2 == 0 and fe2 == 0xd1 and fm2 == 0x77540f and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e77540f; op2val:0x68f7540f; valaddr_reg:x16; val_offset:1352; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1352, x17, x15, 1352, x18)

inst_170:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x77540f and fs2 == 0 and fe2 == 0xd1 and fm2 == 0x77540f and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e77540f; op2val:0x68f7540f; valaddr_reg:x16; val_offset:1360; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1360, x17, x15, 1360, x18)

inst_171:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x044948 and fs2 == 0 and fe2 == 0xd1 and fm2 == 0x044948 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e044948; op2val:0x68844948; valaddr_reg:x16; val_offset:1368; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1368, x17, x15, 1368, x18)

inst_172:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x044948 and fs2 == 0 and fe2 == 0xd1 and fm2 == 0x044948 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e044948; op2val:0x68844948; valaddr_reg:x16; val_offset:1376; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1376, x17, x15, 1376, x18)

inst_173:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x044948 and fs2 == 0 and fe2 == 0xd1 and fm2 == 0x044948 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e044948; op2val:0x68844948; valaddr_reg:x16; val_offset:1384; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1384, x17, x15, 1384, x18)

inst_174:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x044948 and fs2 == 0 and fe2 == 0xd1 and fm2 == 0x044948 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e044948; op2val:0x68844948; valaddr_reg:x16; val_offset:1392; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1392, x17, x15, 1392, x18)

inst_175:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x044948 and fs2 == 0 and fe2 == 0xd1 and fm2 == 0x044948 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e044948; op2val:0x68844948; valaddr_reg:x16; val_offset:1400; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1400, x17, x15, 1400, x18)

inst_176:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x381fbe and fs2 == 1 and fe2 == 0xd2 and fm2 == 0x381fbe and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eb81fbe; op2val:0xe9381fbe; valaddr_reg:x16; val_offset:1408; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1408, x17, x15, 1408, x18)

inst_177:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x381fbe and fs2 == 1 and fe2 == 0xd2 and fm2 == 0x381fbe and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eb81fbe; op2val:0xe9381fbe; valaddr_reg:x16; val_offset:1416; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1416, x17, x15, 1416, x18)

inst_178:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x381fbe and fs2 == 1 and fe2 == 0xd2 and fm2 == 0x381fbe and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eb81fbe; op2val:0xe9381fbe; valaddr_reg:x16; val_offset:1424; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1424, x17, x15, 1424, x18)

inst_179:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x381fbe and fs2 == 1 and fe2 == 0xd2 and fm2 == 0x381fbe and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eb81fbe; op2val:0xe9381fbe; valaddr_reg:x16; val_offset:1432; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1432, x17, x15, 1432, x18)

inst_180:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x381fbe and fs2 == 1 and fe2 == 0xd2 and fm2 == 0x381fbe and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eb81fbe; op2val:0xe9381fbe; valaddr_reg:x16; val_offset:1440; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1440, x17, x15, 1440, x18)

inst_181:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271edb and fs2 == 1 and fe2 == 0xd1 and fm2 == 0x271edb and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e271edb; op2val:0xe8a71edb; valaddr_reg:x16; val_offset:1448; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1448, x17, x15, 1448, x18)

inst_182:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271edb and fs2 == 1 and fe2 == 0xd1 and fm2 == 0x271edb and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e271edb; op2val:0xe8a71edb; valaddr_reg:x16; val_offset:1456; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1456, x17, x15, 1456, x18)

inst_183:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271edb and fs2 == 1 and fe2 == 0xd1 and fm2 == 0x271edb and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e271edb; op2val:0xe8a71edb; valaddr_reg:x16; val_offset:1464; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1464, x17, x15, 1464, x18)

inst_184:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271edb and fs2 == 1 and fe2 == 0xd1 and fm2 == 0x271edb and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e271edb; op2val:0xe8a71edb; valaddr_reg:x16; val_offset:1472; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1472, x17, x15, 1472, x18)

inst_185:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271edb and fs2 == 1 and fe2 == 0xd1 and fm2 == 0x271edb and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e271edb; op2val:0xe8a71edb; valaddr_reg:x16; val_offset:1480; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1480, x17, x15, 1480, x18)

inst_186:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x608143 and fs2 == 1 and fe2 == 0xd2 and fm2 == 0x608143 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ee08143; op2val:0xe9608143; valaddr_reg:x16; val_offset:1488; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1488, x17, x15, 1488, x18)

inst_187:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x608143 and fs2 == 1 and fe2 == 0xd2 and fm2 == 0x608143 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ee08143; op2val:0xe9608143; valaddr_reg:x16; val_offset:1496; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1496, x17, x15, 1496, x18)

inst_188:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x608143 and fs2 == 1 and fe2 == 0xd2 and fm2 == 0x608143 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ee08143; op2val:0xe9608143; valaddr_reg:x16; val_offset:1504; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1504, x17, x15, 1504, x18)

inst_189:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x608143 and fs2 == 1 and fe2 == 0xd2 and fm2 == 0x608143 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ee08143; op2val:0xe9608143; valaddr_reg:x16; val_offset:1512; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1512, x17, x15, 1512, x18)

inst_190:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x608143 and fs2 == 1 and fe2 == 0xd2 and fm2 == 0x608143 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ee08143; op2val:0xe9608143; valaddr_reg:x16; val_offset:1520; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1520, x17, x15, 1520, x18)

inst_191:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1eab47 and fs2 == 1 and fe2 == 0xd2 and fm2 == 0x1eab46 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e9eab47; op2val:0xe91eab46; valaddr_reg:x16; val_offset:1528; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1528, x17, x15, 1528, x18)

inst_192:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1eab47 and fs2 == 1 and fe2 == 0xd2 and fm2 == 0x1eab46 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e9eab47; op2val:0xe91eab46; valaddr_reg:x16; val_offset:1536; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1536, x17, x15, 1536, x18)

inst_193:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1eab47 and fs2 == 1 and fe2 == 0xd2 and fm2 == 0x1eab46 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e9eab47; op2val:0xe91eab46; valaddr_reg:x16; val_offset:1544; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1544, x17, x15, 1544, x18)

inst_194:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1eab47 and fs2 == 1 and fe2 == 0xd2 and fm2 == 0x1eab46 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e9eab47; op2val:0xe91eab46; valaddr_reg:x16; val_offset:1552; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1552, x17, x15, 1552, x18)

inst_195:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1eab47 and fs2 == 1 and fe2 == 0xd2 and fm2 == 0x1eab46 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e9eab47; op2val:0xe91eab46; valaddr_reg:x16; val_offset:1560; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1560, x17, x15, 1560, x18)

inst_196:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x633927 and fs2 == 1 and fe2 == 0xd1 and fm2 == 0x633927 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e633927; op2val:0xe8e33927; valaddr_reg:x16; val_offset:1568; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1568, x17, x15, 1568, x18)

inst_197:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x633927 and fs2 == 1 and fe2 == 0xd1 and fm2 == 0x633927 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e633927; op2val:0xe8e33927; valaddr_reg:x16; val_offset:1576; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1576, x17, x15, 1576, x18)

inst_198:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x633927 and fs2 == 1 and fe2 == 0xd1 and fm2 == 0x633927 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e633927; op2val:0xe8e33927; valaddr_reg:x16; val_offset:1584; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1584, x17, x15, 1584, x18)

inst_199:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x633927 and fs2 == 1 and fe2 == 0xd1 and fm2 == 0x633927 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e633927; op2val:0xe8e33927; valaddr_reg:x16; val_offset:1592; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1592, x17, x15, 1592, x18)

inst_200:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x633927 and fs2 == 1 and fe2 == 0xd1 and fm2 == 0x633927 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e633927; op2val:0xe8e33927; valaddr_reg:x16; val_offset:1600; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1600, x17, x15, 1600, x18)

inst_201:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x04b289 and fs2 == 1 and fe2 == 0xd3 and fm2 == 0x04b289 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f04b289; op2val:0xe984b289; valaddr_reg:x16; val_offset:1608; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1608, x17, x15, 1608, x18)

inst_202:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x04b289 and fs2 == 1 and fe2 == 0xd3 and fm2 == 0x04b289 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f04b289; op2val:0xe984b289; valaddr_reg:x16; val_offset:1616; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1616, x17, x15, 1616, x18)

inst_203:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x04b289 and fs2 == 1 and fe2 == 0xd3 and fm2 == 0x04b289 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f04b289; op2val:0xe984b289; valaddr_reg:x16; val_offset:1624; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1624, x17, x15, 1624, x18)

inst_204:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x04b289 and fs2 == 1 and fe2 == 0xd3 and fm2 == 0x04b289 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f04b289; op2val:0xe984b289; valaddr_reg:x16; val_offset:1632; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1632, x17, x15, 1632, x18)

inst_205:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x04b289 and fs2 == 1 and fe2 == 0xd3 and fm2 == 0x04b289 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f04b289; op2val:0xe984b289; valaddr_reg:x16; val_offset:1640; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1640, x17, x15, 1640, x18)

inst_206:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x71cd8a and fs2 == 1 and fe2 == 0xd1 and fm2 == 0x71cd8a and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e71cd8a; op2val:0xe8f1cd8a; valaddr_reg:x16; val_offset:1648; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1648, x17, x15, 1648, x18)

inst_207:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x71cd8a and fs2 == 1 and fe2 == 0xd1 and fm2 == 0x71cd8a and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e71cd8a; op2val:0xe8f1cd8a; valaddr_reg:x16; val_offset:1656; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1656, x17, x15, 1656, x18)

inst_208:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x71cd8a and fs2 == 1 and fe2 == 0xd1 and fm2 == 0x71cd8a and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e71cd8a; op2val:0xe8f1cd8a; valaddr_reg:x16; val_offset:1664; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1664, x17, x15, 1664, x18)

inst_209:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x71cd8a and fs2 == 1 and fe2 == 0xd1 and fm2 == 0x71cd8a and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e71cd8a; op2val:0xe8f1cd8a; valaddr_reg:x16; val_offset:1672; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1672, x17, x15, 1672, x18)

inst_210:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x71cd8a and fs2 == 1 and fe2 == 0xd1 and fm2 == 0x71cd8a and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e71cd8a; op2val:0xe8f1cd8a; valaddr_reg:x16; val_offset:1680; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1680, x17, x15, 1680, x18)

inst_211:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x18f859 and fs2 == 1 and fe2 == 0xd1 and fm2 == 0x18f858 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e18f859; op2val:0xe898f858; valaddr_reg:x16; val_offset:1688; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1688, x17, x15, 1688, x18)

inst_212:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x18f859 and fs2 == 1 and fe2 == 0xd1 and fm2 == 0x18f858 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e18f859; op2val:0xe898f858; valaddr_reg:x16; val_offset:1696; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1696, x17, x15, 1696, x18)

inst_213:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x18f859 and fs2 == 1 and fe2 == 0xd1 and fm2 == 0x18f858 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e18f859; op2val:0xe898f858; valaddr_reg:x16; val_offset:1704; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1704, x17, x15, 1704, x18)

inst_214:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x18f859 and fs2 == 1 and fe2 == 0xd1 and fm2 == 0x18f858 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e18f859; op2val:0xe898f858; valaddr_reg:x16; val_offset:1712; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1712, x17, x15, 1712, x18)

inst_215:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x18f859 and fs2 == 1 and fe2 == 0xd1 and fm2 == 0x18f858 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e18f859; op2val:0xe898f858; valaddr_reg:x16; val_offset:1720; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1720, x17, x15, 1720, x18)

inst_216:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0eeeea and fs2 == 1 and fe2 == 0xd1 and fm2 == 0x0eeeea and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e0eeeea; op2val:0xe88eeeea; valaddr_reg:x16; val_offset:1728; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1728, x17, x15, 1728, x18)

inst_217:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0eeeea and fs2 == 1 and fe2 == 0xd1 and fm2 == 0x0eeeea and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e0eeeea; op2val:0xe88eeeea; valaddr_reg:x16; val_offset:1736; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1736, x17, x15, 1736, x18)

inst_218:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0eeeea and fs2 == 1 and fe2 == 0xd1 and fm2 == 0x0eeeea and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e0eeeea; op2val:0xe88eeeea; valaddr_reg:x16; val_offset:1744; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1744, x17, x15, 1744, x18)

inst_219:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0eeeea and fs2 == 1 and fe2 == 0xd1 and fm2 == 0x0eeeea and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e0eeeea; op2val:0xe88eeeea; valaddr_reg:x16; val_offset:1752; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1752, x17, x15, 1752, x18)

inst_220:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0eeeea and fs2 == 1 and fe2 == 0xd1 and fm2 == 0x0eeeea and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e0eeeea; op2val:0xe88eeeea; valaddr_reg:x16; val_offset:1760; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1760, x17, x15, 1760, x18)

inst_221:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2a21ee and fs2 == 1 and fe2 == 0xd2 and fm2 == 0x2a21ee and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eaa21ee; op2val:0xe92a21ee; valaddr_reg:x16; val_offset:1768; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1768, x17, x15, 1768, x18)

inst_222:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2a21ee and fs2 == 1 and fe2 == 0xd2 and fm2 == 0x2a21ee and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eaa21ee; op2val:0xe92a21ee; valaddr_reg:x16; val_offset:1776; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1776, x17, x15, 1776, x18)

inst_223:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2a21ee and fs2 == 1 and fe2 == 0xd2 and fm2 == 0x2a21ee and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eaa21ee; op2val:0xe92a21ee; valaddr_reg:x16; val_offset:1784; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1784, x17, x15, 1784, x18)

inst_224:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2a21ee and fs2 == 1 and fe2 == 0xd2 and fm2 == 0x2a21ee and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eaa21ee; op2val:0xe92a21ee; valaddr_reg:x16; val_offset:1792; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1792, x17, x15, 1792, x18)

inst_225:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2a21ee and fs2 == 1 and fe2 == 0xd2 and fm2 == 0x2a21ee and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eaa21ee; op2val:0xe92a21ee; valaddr_reg:x16; val_offset:1800; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1800, x17, x15, 1800, x18)

inst_226:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ffd6d and fs2 == 1 and fe2 == 0xd3 and fm2 == 0x2ffd6d and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f2ffd6d; op2val:0xe9affd6d; valaddr_reg:x16; val_offset:1808; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1808, x17, x15, 1808, x18)

inst_227:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ffd6d and fs2 == 1 and fe2 == 0xd3 and fm2 == 0x2ffd6d and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f2ffd6d; op2val:0xe9affd6d; valaddr_reg:x16; val_offset:1816; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1816, x17, x15, 1816, x18)

inst_228:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ffd6d and fs2 == 1 and fe2 == 0xd3 and fm2 == 0x2ffd6d and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f2ffd6d; op2val:0xe9affd6d; valaddr_reg:x16; val_offset:1824; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1824, x17, x15, 1824, x18)

inst_229:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ffd6d and fs2 == 1 and fe2 == 0xd3 and fm2 == 0x2ffd6d and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f2ffd6d; op2val:0xe9affd6d; valaddr_reg:x16; val_offset:1832; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1832, x17, x15, 1832, x18)

inst_230:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ffd6d and fs2 == 1 and fe2 == 0xd3 and fm2 == 0x2ffd6d and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f2ffd6d; op2val:0xe9affd6d; valaddr_reg:x16; val_offset:1840; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1840, x17, x15, 1840, x18)

inst_231:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x133df8 and fs2 == 1 and fe2 == 0xd0 and fm2 == 0x133df8 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7d933df8; op2val:0xe8133df8; valaddr_reg:x16; val_offset:1848; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1848, x17, x15, 1848, x18)

inst_232:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x133df8 and fs2 == 1 and fe2 == 0xd0 and fm2 == 0x133df8 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7d933df8; op2val:0xe8133df8; valaddr_reg:x16; val_offset:1856; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1856, x17, x15, 1856, x18)

inst_233:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x133df8 and fs2 == 1 and fe2 == 0xd0 and fm2 == 0x133df8 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7d933df8; op2val:0xe8133df8; valaddr_reg:x16; val_offset:1864; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1864, x17, x15, 1864, x18)

inst_234:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x133df8 and fs2 == 1 and fe2 == 0xd0 and fm2 == 0x133df8 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7d933df8; op2val:0xe8133df8; valaddr_reg:x16; val_offset:1872; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1872, x17, x15, 1872, x18)

inst_235:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x133df8 and fs2 == 1 and fe2 == 0xd0 and fm2 == 0x133df8 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7d933df8; op2val:0xe8133df8; valaddr_reg:x16; val_offset:1880; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1880, x17, x15, 1880, x18)

inst_236:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c4d11 and fs2 == 1 and fe2 == 0xd3 and fm2 == 0x2c4d10 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f2c4d11; op2val:0xe9ac4d10; valaddr_reg:x16; val_offset:1888; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1888, x17, x15, 1888, x18)

inst_237:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c4d11 and fs2 == 1 and fe2 == 0xd3 and fm2 == 0x2c4d10 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f2c4d11; op2val:0xe9ac4d10; valaddr_reg:x16; val_offset:1896; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1896, x17, x15, 1896, x18)

inst_238:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c4d11 and fs2 == 1 and fe2 == 0xd3 and fm2 == 0x2c4d10 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f2c4d11; op2val:0xe9ac4d10; valaddr_reg:x16; val_offset:1904; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1904, x17, x15, 1904, x18)

inst_239:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c4d11 and fs2 == 1 and fe2 == 0xd3 and fm2 == 0x2c4d10 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f2c4d11; op2val:0xe9ac4d10; valaddr_reg:x16; val_offset:1912; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1912, x17, x15, 1912, x18)

inst_240:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c4d11 and fs2 == 1 and fe2 == 0xd3 and fm2 == 0x2c4d10 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f2c4d11; op2val:0xe9ac4d10; valaddr_reg:x16; val_offset:1920; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1920, x17, x15, 1920, x18)

inst_241:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39bfb2 and fs2 == 1 and fe2 == 0xd2 and fm2 == 0x39bfb2 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eb9bfb2; op2val:0xe939bfb2; valaddr_reg:x16; val_offset:1928; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1928, x17, x15, 1928, x18)

inst_242:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39bfb2 and fs2 == 1 and fe2 == 0xd2 and fm2 == 0x39bfb2 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eb9bfb2; op2val:0xe939bfb2; valaddr_reg:x16; val_offset:1936; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1936, x17, x15, 1936, x18)

inst_243:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39bfb2 and fs2 == 1 and fe2 == 0xd2 and fm2 == 0x39bfb2 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eb9bfb2; op2val:0xe939bfb2; valaddr_reg:x16; val_offset:1944; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1944, x17, x15, 1944, x18)

inst_244:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39bfb2 and fs2 == 1 and fe2 == 0xd2 and fm2 == 0x39bfb2 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eb9bfb2; op2val:0xe939bfb2; valaddr_reg:x16; val_offset:1952; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1952, x17, x15, 1952, x18)

inst_245:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39bfb2 and fs2 == 1 and fe2 == 0xd2 and fm2 == 0x39bfb2 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eb9bfb2; op2val:0xe939bfb2; valaddr_reg:x16; val_offset:1960; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1960, x17, x15, 1960, x18)

inst_246:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x01615c and fs2 == 0 and fe2 == 0xd3 and fm2 == 0x01615b and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f01615c; op2val:0x6981615b; valaddr_reg:x16; val_offset:1968; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1968, x17, x15, 1968, x18)

inst_247:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x01615c and fs2 == 0 and fe2 == 0xd3 and fm2 == 0x01615b and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f01615c; op2val:0x6981615b; valaddr_reg:x16; val_offset:1976; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1976, x17, x15, 1976, x18)

inst_248:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x01615c and fs2 == 0 and fe2 == 0xd3 and fm2 == 0x01615b and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f01615c; op2val:0x6981615b; valaddr_reg:x16; val_offset:1984; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1984, x17, x15, 1984, x18)

inst_249:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x01615c and fs2 == 0 and fe2 == 0xd3 and fm2 == 0x01615b and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f01615c; op2val:0x6981615b; valaddr_reg:x16; val_offset:1992; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1992, x17, x15, 1992, x18)

inst_250:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x01615c and fs2 == 0 and fe2 == 0xd3 and fm2 == 0x01615b and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f01615c; op2val:0x6981615b; valaddr_reg:x16; val_offset:2000; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 2000, x17, x15, 2000, x18)

inst_251:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x04a412 and fs2 == 0 and fe2 == 0xd3 and fm2 == 0x04a412 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f04a412; op2val:0x6984a412; valaddr_reg:x16; val_offset:2008; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 2008, x17, x15, 2008, x18)

inst_252:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x04a412 and fs2 == 0 and fe2 == 0xd3 and fm2 == 0x04a412 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f04a412; op2val:0x6984a412; valaddr_reg:x16; val_offset:2016; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 2016, x17, x15, 2016, x18)

inst_253:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x04a412 and fs2 == 0 and fe2 == 0xd3 and fm2 == 0x04a412 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f04a412; op2val:0x6984a412; valaddr_reg:x16; val_offset:2024; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 2024, x17, x15, 2024, x18)
addi x16,x16,2032
RVTEST_SIGBASE(x15,signature_x15_2)

inst_254:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x04a412 and fs2 == 0 and fe2 == 0xd3 and fm2 == 0x04a412 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f04a412; op2val:0x6984a412; valaddr_reg:x16; val_offset:0; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 0, x17, x15, 0, x18)

inst_255:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x04a412 and fs2 == 0 and fe2 == 0xd3 and fm2 == 0x04a412 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f04a412; op2val:0x6984a412; valaddr_reg:x16; val_offset:8; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 8, x17, x15, 8, x18)

inst_256:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0f80a5 and fs2 == 0 and fe2 == 0xd3 and fm2 == 0x0f80a5 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f0f80a5; op2val:0x698f80a5; valaddr_reg:x16; val_offset:16; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 16, x17, x15, 16, x18)

inst_257:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0f80a5 and fs2 == 0 and fe2 == 0xd3 and fm2 == 0x0f80a5 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f0f80a5; op2val:0x698f80a5; valaddr_reg:x16; val_offset:24; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 24, x17, x15, 24, x18)

inst_258:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0f80a5 and fs2 == 0 and fe2 == 0xd3 and fm2 == 0x0f80a5 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f0f80a5; op2val:0x698f80a5; valaddr_reg:x16; val_offset:32; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 32, x17, x15, 32, x18)

inst_259:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0f80a5 and fs2 == 0 and fe2 == 0xd3 and fm2 == 0x0f80a5 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f0f80a5; op2val:0x698f80a5; valaddr_reg:x16; val_offset:40; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 40, x17, x15, 40, x18)

inst_260:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0f80a5 and fs2 == 0 and fe2 == 0xd3 and fm2 == 0x0f80a5 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f0f80a5; op2val:0x698f80a5; valaddr_reg:x16; val_offset:48; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 48, x17, x15, 48, x18)

inst_261:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3ad3ab and fs2 == 0 and fe2 == 0xd3 and fm2 == 0x3ad3aa and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f3ad3ab; op2val:0x69bad3aa; valaddr_reg:x16; val_offset:56; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 56, x17, x15, 56, x18)

inst_262:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3ad3ab and fs2 == 0 and fe2 == 0xd3 and fm2 == 0x3ad3aa and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f3ad3ab; op2val:0x69bad3aa; valaddr_reg:x16; val_offset:64; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 64, x17, x15, 64, x18)

inst_263:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3ad3ab and fs2 == 0 and fe2 == 0xd3 and fm2 == 0x3ad3aa and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f3ad3ab; op2val:0x69bad3aa; valaddr_reg:x16; val_offset:72; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 72, x17, x15, 72, x18)

inst_264:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3ad3ab and fs2 == 0 and fe2 == 0xd3 and fm2 == 0x3ad3aa and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f3ad3ab; op2val:0x69bad3aa; valaddr_reg:x16; val_offset:80; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 80, x17, x15, 80, x18)

inst_265:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3ad3ab and fs2 == 0 and fe2 == 0xd3 and fm2 == 0x3ad3aa and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f3ad3ab; op2val:0x69bad3aa; valaddr_reg:x16; val_offset:88; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 88, x17, x15, 88, x18)

inst_266:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x7fc6b5 and fs2 == 0 and fe2 == 0xcf and fm2 == 0x7fc6b5 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7d7fc6b5; op2val:0x67ffc6b5; valaddr_reg:x16; val_offset:96; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 96, x17, x15, 96, x18)

inst_267:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x7fc6b5 and fs2 == 0 and fe2 == 0xcf and fm2 == 0x7fc6b5 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7d7fc6b5; op2val:0x67ffc6b5; valaddr_reg:x16; val_offset:104; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 104, x17, x15, 104, x18)

inst_268:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x7fc6b5 and fs2 == 0 and fe2 == 0xcf and fm2 == 0x7fc6b5 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7d7fc6b5; op2val:0x67ffc6b5; valaddr_reg:x16; val_offset:112; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 112, x17, x15, 112, x18)

inst_269:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x7fc6b5 and fs2 == 0 and fe2 == 0xcf and fm2 == 0x7fc6b5 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7d7fc6b5; op2val:0x67ffc6b5; valaddr_reg:x16; val_offset:120; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 120, x17, x15, 120, x18)

inst_270:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x7fc6b5 and fs2 == 0 and fe2 == 0xcf and fm2 == 0x7fc6b5 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7d7fc6b5; op2val:0x67ffc6b5; valaddr_reg:x16; val_offset:128; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 128, x17, x15, 128, x18)

inst_271:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x06825d and fs2 == 0 and fe2 == 0xd2 and fm2 == 0x06825d and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e86825d; op2val:0x6906825d; valaddr_reg:x16; val_offset:136; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 136, x17, x15, 136, x18)

inst_272:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x06825d and fs2 == 0 and fe2 == 0xd2 and fm2 == 0x06825d and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e86825d; op2val:0x6906825d; valaddr_reg:x16; val_offset:144; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 144, x17, x15, 144, x18)

inst_273:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x06825d and fs2 == 0 and fe2 == 0xd2 and fm2 == 0x06825d and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e86825d; op2val:0x6906825d; valaddr_reg:x16; val_offset:152; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 152, x17, x15, 152, x18)

inst_274:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x06825d and fs2 == 0 and fe2 == 0xd2 and fm2 == 0x06825d and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e86825d; op2val:0x6906825d; valaddr_reg:x16; val_offset:160; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 160, x17, x15, 160, x18)

inst_275:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x06825d and fs2 == 0 and fe2 == 0xd2 and fm2 == 0x06825d and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e86825d; op2val:0x6906825d; valaddr_reg:x16; val_offset:168; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 168, x17, x15, 168, x18)

inst_276:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d1be6 and fs2 == 0 and fe2 == 0xd2 and fm2 == 0x0d1be6 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e8d1be6; op2val:0x690d1be6; valaddr_reg:x16; val_offset:176; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 176, x17, x15, 176, x18)

inst_277:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d1be6 and fs2 == 0 and fe2 == 0xd2 and fm2 == 0x0d1be6 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e8d1be6; op2val:0x690d1be6; valaddr_reg:x16; val_offset:184; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 184, x17, x15, 184, x18)

inst_278:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d1be6 and fs2 == 0 and fe2 == 0xd2 and fm2 == 0x0d1be6 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e8d1be6; op2val:0x690d1be6; valaddr_reg:x16; val_offset:192; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 192, x17, x15, 192, x18)

inst_279:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d1be6 and fs2 == 0 and fe2 == 0xd2 and fm2 == 0x0d1be6 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e8d1be6; op2val:0x690d1be6; valaddr_reg:x16; val_offset:200; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 200, x17, x15, 200, x18)

inst_280:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0d1be6 and fs2 == 0 and fe2 == 0xd2 and fm2 == 0x0d1be6 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e8d1be6; op2val:0x690d1be6; valaddr_reg:x16; val_offset:208; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 208, x17, x15, 208, x18)

inst_281:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x10ae28 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f10ae28; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:216; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 216, x17, x15, 216, x18)

inst_282:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x10ae28 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f10ae28; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:224; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 224, x17, x15, 224, x18)

inst_283:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x10ae28 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f10ae28; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:232; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 232, x17, x15, 232, x18)

inst_284:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x10ae28 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f10ae28; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:240; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 240, x17, x15, 240, x18)

inst_285:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x10ae28 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f10ae28; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:248; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 248, x17, x15, 248, x18)

inst_286:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ff954 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e3ff954; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:256; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 256, x17, x15, 256, x18)

inst_287:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ff954 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e3ff954; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:264; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 264, x17, x15, 264, x18)

inst_288:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ff954 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e3ff954; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:272; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 272, x17, x15, 272, x18)

inst_289:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ff954 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e3ff954; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:280; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 280, x17, x15, 280, x18)

inst_290:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ff954 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e3ff954; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:288; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 288, x17, x15, 288, x18)

inst_291:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x39f3eb and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e39f3eb; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:296; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 296, x17, x15, 296, x18)

inst_292:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x39f3eb and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e39f3eb; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:304; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 304, x17, x15, 304, x18)

inst_293:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x39f3eb and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e39f3eb; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:312; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 312, x17, x15, 312, x18)

inst_294:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x39f3eb and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e39f3eb; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:320; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 320, x17, x15, 320, x18)

inst_295:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x39f3eb and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e39f3eb; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:328; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 328, x17, x15, 328, x18)

inst_296:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x58913a and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ed8913a; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:336; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 336, x17, x15, 336, x18)

inst_297:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x58913a and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ed8913a; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:344; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 344, x17, x15, 344, x18)

inst_298:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x58913a and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ed8913a; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:352; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 352, x17, x15, 352, x18)

inst_299:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x58913a and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ed8913a; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:360; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 360, x17, x15, 360, x18)

inst_300:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x58913a and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ed8913a; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:368; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 368, x17, x15, 368, x18)

inst_301:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x3bd20e and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7d3bd20e; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:376; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 376, x17, x15, 376, x18)

inst_302:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x3bd20e and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7d3bd20e; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:384; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 384, x17, x15, 384, x18)

inst_303:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x3bd20e and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7d3bd20e; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:392; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 392, x17, x15, 392, x18)

inst_304:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x3bd20e and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7d3bd20e; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:400; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 400, x17, x15, 400, x18)

inst_305:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x3bd20e and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7d3bd20e; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:408; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 408, x17, x15, 408, x18)

inst_306:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0fcd1f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f0fcd1f; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:416; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 416, x17, x15, 416, x18)

inst_307:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0fcd1f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f0fcd1f; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:424; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 424, x17, x15, 424, x18)

inst_308:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0fcd1f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f0fcd1f; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:432; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 432, x17, x15, 432, x18)

inst_309:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0fcd1f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f0fcd1f; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:440; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 440, x17, x15, 440, x18)

inst_310:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0fcd1f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f0fcd1f; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:448; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 448, x17, x15, 448, x18)

inst_311:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x094f70 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f094f70; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:456; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 456, x17, x15, 456, x18)

inst_312:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x094f70 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f094f70; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:464; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 464, x17, x15, 464, x18)

inst_313:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x094f70 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f094f70; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:472; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 472, x17, x15, 472, x18)

inst_314:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x094f70 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f094f70; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:480; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 480, x17, x15, 480, x18)

inst_315:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x094f70 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f094f70; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:488; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 488, x17, x15, 488, x18)

inst_316:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x135827 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f135827; op2val:0xff7fffff; valaddr_reg:x16; val_offset:496; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 496, x17, x15, 496, x18)

inst_317:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x135827 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f135827; op2val:0xff7fffff; valaddr_reg:x16; val_offset:504; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 504, x17, x15, 504, x18)

inst_318:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x135827 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f135827; op2val:0xff7fffff; valaddr_reg:x16; val_offset:512; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 512, x17, x15, 512, x18)

inst_319:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x135827 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f135827; op2val:0xff7fffff; valaddr_reg:x16; val_offset:520; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 520, x17, x15, 520, x18)

inst_320:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x135827 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f135827; op2val:0xff7fffff; valaddr_reg:x16; val_offset:528; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 528, x17, x15, 528, x18)

inst_321:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x195c05 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f195c05; op2val:0xff7fffff; valaddr_reg:x16; val_offset:536; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 536, x17, x15, 536, x18)

inst_322:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x195c05 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f195c05; op2val:0xff7fffff; valaddr_reg:x16; val_offset:544; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 544, x17, x15, 544, x18)

inst_323:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x195c05 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f195c05; op2val:0xff7fffff; valaddr_reg:x16; val_offset:552; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 552, x17, x15, 552, x18)

inst_324:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x195c05 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f195c05; op2val:0xff7fffff; valaddr_reg:x16; val_offset:560; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 560, x17, x15, 560, x18)

inst_325:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x195c05 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f195c05; op2val:0xff7fffff; valaddr_reg:x16; val_offset:568; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 568, x17, x15, 568, x18)

inst_326:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x36dceb and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f36dceb; op2val:0xff7fffff; valaddr_reg:x16; val_offset:576; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 576, x17, x15, 576, x18)

inst_327:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x36dceb and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f36dceb; op2val:0xff7fffff; valaddr_reg:x16; val_offset:584; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 584, x17, x15, 584, x18)

inst_328:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x36dceb and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f36dceb; op2val:0xff7fffff; valaddr_reg:x16; val_offset:592; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 592, x17, x15, 592, x18)

inst_329:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x36dceb and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f36dceb; op2val:0xff7fffff; valaddr_reg:x16; val_offset:600; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 600, x17, x15, 600, x18)

inst_330:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x36dceb and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f36dceb; op2val:0xff7fffff; valaddr_reg:x16; val_offset:608; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 608, x17, x15, 608, x18)

inst_331:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x015194 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f015194; op2val:0xff7fffff; valaddr_reg:x16; val_offset:616; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 616, x17, x15, 616, x18)

inst_332:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x015194 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f015194; op2val:0xff7fffff; valaddr_reg:x16; val_offset:624; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 624, x17, x15, 624, x18)

inst_333:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x015194 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f015194; op2val:0xff7fffff; valaddr_reg:x16; val_offset:632; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 632, x17, x15, 632, x18)

inst_334:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x015194 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f015194; op2val:0xff7fffff; valaddr_reg:x16; val_offset:640; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 640, x17, x15, 640, x18)

inst_335:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x015194 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f015194; op2val:0xff7fffff; valaddr_reg:x16; val_offset:648; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 648, x17, x15, 648, x18)

inst_336:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a4a99 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7dba4a99; op2val:0xff7fffff; valaddr_reg:x16; val_offset:656; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 656, x17, x15, 656, x18)

inst_337:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a4a99 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7dba4a99; op2val:0xff7fffff; valaddr_reg:x16; val_offset:664; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 664, x17, x15, 664, x18)

inst_338:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a4a99 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7dba4a99; op2val:0xff7fffff; valaddr_reg:x16; val_offset:672; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 672, x17, x15, 672, x18)

inst_339:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a4a99 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7dba4a99; op2val:0xff7fffff; valaddr_reg:x16; val_offset:680; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 680, x17, x15, 680, x18)

inst_340:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3a4a99 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7dba4a99; op2val:0xff7fffff; valaddr_reg:x16; val_offset:688; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 688, x17, x15, 688, x18)

inst_341:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x104e6f and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7c904e6f; op2val:0xff7fffff; valaddr_reg:x16; val_offset:696; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 696, x17, x15, 696, x18)

inst_342:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x104e6f and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7c904e6f; op2val:0xff7fffff; valaddr_reg:x16; val_offset:704; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 704, x17, x15, 704, x18)

inst_343:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x104e6f and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7c904e6f; op2val:0xff7fffff; valaddr_reg:x16; val_offset:712; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 712, x17, x15, 712, x18)

inst_344:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x104e6f and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7c904e6f; op2val:0xff7fffff; valaddr_reg:x16; val_offset:720; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 720, x17, x15, 720, x18)

inst_345:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x104e6f and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7c904e6f; op2val:0xff7fffff; valaddr_reg:x16; val_offset:728; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 728, x17, x15, 728, x18)

inst_346:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x290cc1 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f290cc1; op2val:0xff7fffff; valaddr_reg:x16; val_offset:736; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 736, x17, x15, 736, x18)

inst_347:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x290cc1 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f290cc1; op2val:0xff7fffff; valaddr_reg:x16; val_offset:744; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 744, x17, x15, 744, x18)

inst_348:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x290cc1 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f290cc1; op2val:0xff7fffff; valaddr_reg:x16; val_offset:752; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 752, x17, x15, 752, x18)

inst_349:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x290cc1 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f290cc1; op2val:0xff7fffff; valaddr_reg:x16; val_offset:760; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 760, x17, x15, 760, x18)

inst_350:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x290cc1 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f290cc1; op2val:0xff7fffff; valaddr_reg:x16; val_offset:768; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 768, x17, x15, 768, x18)

inst_351:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0d00c9 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7d8d00c9; op2val:0xff7fffff; valaddr_reg:x16; val_offset:776; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 776, x17, x15, 776, x18)

inst_352:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0d00c9 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7d8d00c9; op2val:0xff7fffff; valaddr_reg:x16; val_offset:784; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 784, x17, x15, 784, x18)

inst_353:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0d00c9 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7d8d00c9; op2val:0xff7fffff; valaddr_reg:x16; val_offset:792; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 792, x17, x15, 792, x18)

inst_354:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0d00c9 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7d8d00c9; op2val:0xff7fffff; valaddr_reg:x16; val_offset:800; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 800, x17, x15, 800, x18)

inst_355:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0d00c9 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7d8d00c9; op2val:0xff7fffff; valaddr_reg:x16; val_offset:808; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 808, x17, x15, 808, x18)

inst_356:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x14aa96 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f14aa96; op2val:0xff7fffff; valaddr_reg:x16; val_offset:816; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 816, x17, x15, 816, x18)

inst_357:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x14aa96 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f14aa96; op2val:0xff7fffff; valaddr_reg:x16; val_offset:824; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 824, x17, x15, 824, x18)

inst_358:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x14aa96 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f14aa96; op2val:0xff7fffff; valaddr_reg:x16; val_offset:832; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 832, x17, x15, 832, x18)

inst_359:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x14aa96 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f14aa96; op2val:0xff7fffff; valaddr_reg:x16; val_offset:840; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 840, x17, x15, 840, x18)

inst_360:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x14aa96 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f14aa96; op2val:0xff7fffff; valaddr_reg:x16; val_offset:848; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 848, x17, x15, 848, x18)

inst_361:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x70e85a and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7b70e85a; op2val:0xff7fffff; valaddr_reg:x16; val_offset:856; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 856, x17, x15, 856, x18)

inst_362:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x70e85a and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7b70e85a; op2val:0xff7fffff; valaddr_reg:x16; val_offset:864; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 864, x17, x15, 864, x18)

inst_363:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x70e85a and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7b70e85a; op2val:0xff7fffff; valaddr_reg:x16; val_offset:872; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 872, x17, x15, 872, x18)

inst_364:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x70e85a and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7b70e85a; op2val:0xff7fffff; valaddr_reg:x16; val_offset:880; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 880, x17, x15, 880, x18)

inst_365:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x70e85a and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7b70e85a; op2val:0xff7fffff; valaddr_reg:x16; val_offset:888; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 888, x17, x15, 888, x18)

inst_366:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1e69a3 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7d9e69a3; op2val:0xff7fffff; valaddr_reg:x16; val_offset:896; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 896, x17, x15, 896, x18)

inst_367:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1e69a3 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7d9e69a3; op2val:0xff7fffff; valaddr_reg:x16; val_offset:904; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 904, x17, x15, 904, x18)

inst_368:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1e69a3 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7d9e69a3; op2val:0xff7fffff; valaddr_reg:x16; val_offset:912; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 912, x17, x15, 912, x18)

inst_369:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1e69a3 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7d9e69a3; op2val:0xff7fffff; valaddr_reg:x16; val_offset:920; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 920, x17, x15, 920, x18)

inst_370:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1e69a3 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7d9e69a3; op2val:0xff7fffff; valaddr_reg:x16; val_offset:928; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 928, x17, x15, 928, x18)

inst_371:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0ce08c and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f0ce08c; op2val:0xff7fffff; valaddr_reg:x16; val_offset:936; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 936, x17, x15, 936, x18)

inst_372:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0ce08c and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f0ce08c; op2val:0xff7fffff; valaddr_reg:x16; val_offset:944; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 944, x17, x15, 944, x18)

inst_373:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0ce08c and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f0ce08c; op2val:0xff7fffff; valaddr_reg:x16; val_offset:952; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 952, x17, x15, 952, x18)

inst_374:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0ce08c and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f0ce08c; op2val:0xff7fffff; valaddr_reg:x16; val_offset:960; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 960, x17, x15, 960, x18)

inst_375:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0ce08c and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f0ce08c; op2val:0xff7fffff; valaddr_reg:x16; val_offset:968; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 968, x17, x15, 968, x18)

inst_376:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x182774 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f182774; op2val:0xff7fffff; valaddr_reg:x16; val_offset:976; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 976, x17, x15, 976, x18)

inst_377:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x182774 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f182774; op2val:0xff7fffff; valaddr_reg:x16; val_offset:984; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 984, x17, x15, 984, x18)

inst_378:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x182774 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f182774; op2val:0xff7fffff; valaddr_reg:x16; val_offset:992; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 992, x17, x15, 992, x18)

inst_379:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x182774 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f182774; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1000; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1000, x17, x15, 1000, x18)

inst_380:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x182774 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f182774; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1008; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1008, x17, x15, 1008, x18)

inst_381:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7e51b6 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7efe51b6; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1016; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1016, x17, x15, 1016, x18)

inst_382:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7e51b6 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7efe51b6; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1024; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1024, x17, x15, 1024, x18)

inst_383:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7e51b6 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7efe51b6; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1032; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1032, x17, x15, 1032, x18)

inst_384:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7e51b6 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7efe51b6; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1040; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1040, x17, x15, 1040, x18)

inst_385:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7e51b6 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7efe51b6; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1048; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1048, x17, x15, 1048, x18)

inst_386:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3d26fe and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7dbd26fe; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1056; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1056, x17, x15, 1056, x18)

inst_387:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3d26fe and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7dbd26fe; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1064; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1064, x17, x15, 1064, x18)

inst_388:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3d26fe and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7dbd26fe; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1072; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1072, x17, x15, 1072, x18)

inst_389:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3d26fe and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7dbd26fe; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1080; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1080, x17, x15, 1080, x18)

inst_390:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3d26fe and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7dbd26fe; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1088; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1088, x17, x15, 1088, x18)

inst_391:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x495aa1 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e495aa1; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1096; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1096, x17, x15, 1096, x18)

inst_392:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x495aa1 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e495aa1; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1104; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1104, x17, x15, 1104, x18)

inst_393:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x495aa1 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e495aa1; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1112; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1112, x17, x15, 1112, x18)

inst_394:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x495aa1 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e495aa1; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1120; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1120, x17, x15, 1120, x18)

inst_395:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x495aa1 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e495aa1; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1128; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1128, x17, x15, 1128, x18)

inst_396:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c6353 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f2c6353; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1136; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1136, x17, x15, 1136, x18)

inst_397:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c6353 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f2c6353; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1144; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1144, x17, x15, 1144, x18)

inst_398:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c6353 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f2c6353; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1152; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1152, x17, x15, 1152, x18)

inst_399:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c6353 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f2c6353; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1160; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1160, x17, x15, 1160, x18)

inst_400:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c6353 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f2c6353; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1168; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1168, x17, x15, 1168, x18)

inst_401:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33ce10 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f33ce10; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1176; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1176, x17, x15, 1176, x18)

inst_402:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33ce10 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f33ce10; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1184; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1184, x17, x15, 1184, x18)

inst_403:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33ce10 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f33ce10; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1192; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1192, x17, x15, 1192, x18)

inst_404:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33ce10 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f33ce10; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1200; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1200, x17, x15, 1200, x18)

inst_405:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33ce10 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f33ce10; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1208; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1208, x17, x15, 1208, x18)

inst_406:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x238740 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ea38740; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1216; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1216, x17, x15, 1216, x18)

inst_407:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x238740 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ea38740; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1224; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1224, x17, x15, 1224, x18)

inst_408:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x238740 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ea38740; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1232; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1232, x17, x15, 1232, x18)

inst_409:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x238740 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ea38740; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1240; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1240, x17, x15, 1240, x18)

inst_410:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x238740 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ea38740; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1248; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1248, x17, x15, 1248, x18)

inst_411:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x5be595 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7d5be595; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1256; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1256, x17, x15, 1256, x18)

inst_412:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x5be595 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7d5be595; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1264; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1264, x17, x15, 1264, x18)

inst_413:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x5be595 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7d5be595; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1272; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1272, x17, x15, 1272, x18)

inst_414:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x5be595 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7d5be595; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1280; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1280, x17, x15, 1280, x18)

inst_415:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x5be595 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7d5be595; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1288; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1288, x17, x15, 1288, x18)

inst_416:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4dc2f4 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ecdc2f4; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1296; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1296, x17, x15, 1296, x18)

inst_417:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4dc2f4 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ecdc2f4; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1304; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1304, x17, x15, 1304, x18)

inst_418:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4dc2f4 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ecdc2f4; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1312; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1312, x17, x15, 1312, x18)

inst_419:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4dc2f4 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ecdc2f4; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1320; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1320, x17, x15, 1320, x18)

inst_420:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4dc2f4 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ecdc2f4; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1328; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1328, x17, x15, 1328, x18)

inst_421:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30f667 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eb0f667; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1336; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1336, x17, x15, 1336, x18)

inst_422:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30f667 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eb0f667; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1344; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1344, x17, x15, 1344, x18)

inst_423:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30f667 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eb0f667; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1352; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1352, x17, x15, 1352, x18)

inst_424:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30f667 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eb0f667; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1360; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1360, x17, x15, 1360, x18)

inst_425:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30f667 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eb0f667; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1368; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1368, x17, x15, 1368, x18)

inst_426:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x217a32 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ea17a32; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1376; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1376, x17, x15, 1376, x18)

inst_427:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x217a32 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ea17a32; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1384; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1384, x17, x15, 1384, x18)

inst_428:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x217a32 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ea17a32; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1392; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1392, x17, x15, 1392, x18)

inst_429:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x217a32 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ea17a32; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1400; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1400, x17, x15, 1400, x18)

inst_430:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x217a32 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ea17a32; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1408; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1408, x17, x15, 1408, x18)

inst_431:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3e85af and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ebe85af; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1416; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1416, x17, x15, 1416, x18)

inst_432:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3e85af and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ebe85af; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1424; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1424, x17, x15, 1424, x18)

inst_433:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3e85af and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ebe85af; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1432; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1432, x17, x15, 1432, x18)

inst_434:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3e85af and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ebe85af; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1440; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1440, x17, x15, 1440, x18)

inst_435:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3e85af and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ebe85af; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1448; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1448, x17, x15, 1448, x18)

inst_436:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25bb60 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ea5bb60; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1456; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1456, x17, x15, 1456, x18)

inst_437:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25bb60 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ea5bb60; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1464; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1464, x17, x15, 1464, x18)

inst_438:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25bb60 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ea5bb60; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1472; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1472, x17, x15, 1472, x18)

inst_439:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25bb60 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ea5bb60; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1480; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1480, x17, x15, 1480, x18)

inst_440:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25bb60 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ea5bb60; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1488; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1488, x17, x15, 1488, x18)

inst_441:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19d2a8 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f19d2a8; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1496; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1496, x17, x15, 1496, x18)

inst_442:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19d2a8 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f19d2a8; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1504; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1504, x17, x15, 1504, x18)

inst_443:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19d2a8 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f19d2a8; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1512; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1512, x17, x15, 1512, x18)

inst_444:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19d2a8 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f19d2a8; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1520; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1520, x17, x15, 1520, x18)

inst_445:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19d2a8 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f19d2a8; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1528; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1528, x17, x15, 1528, x18)

inst_446:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x16436d and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f16436d; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1536; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1536, x17, x15, 1536, x18)

inst_447:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x16436d and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f16436d; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1544; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1544, x17, x15, 1544, x18)

inst_448:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x16436d and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f16436d; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1552; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1552, x17, x15, 1552, x18)

inst_449:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x16436d and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f16436d; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1560; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1560, x17, x15, 1560, x18)

inst_450:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x16436d and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f16436d; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1568; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1568, x17, x15, 1568, x18)

inst_451:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0f5661 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e8f5661; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1576; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1576, x17, x15, 1576, x18)

inst_452:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0f5661 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e8f5661; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1584; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1584, x17, x15, 1584, x18)

inst_453:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0f5661 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e8f5661; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1592; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1592, x17, x15, 1592, x18)

inst_454:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0f5661 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e8f5661; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1600; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1600, x17, x15, 1600, x18)

inst_455:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0f5661 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e8f5661; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1608; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1608, x17, x15, 1608, x18)

inst_456:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x7574e1 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7d7574e1; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1616; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1616, x17, x15, 1616, x18)

inst_457:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x7574e1 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7d7574e1; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1624; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1624, x17, x15, 1624, x18)

inst_458:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x7574e1 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7d7574e1; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1632; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1632, x17, x15, 1632, x18)

inst_459:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x7574e1 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7d7574e1; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1640; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1640, x17, x15, 1640, x18)

inst_460:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x7574e1 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7d7574e1; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1648; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1648, x17, x15, 1648, x18)

inst_461:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x097aef and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f097aef; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1656; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1656, x17, x15, 1656, x18)

inst_462:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x097aef and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f097aef; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1664; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1664, x17, x15, 1664, x18)

inst_463:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x097aef and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f097aef; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1672; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1672, x17, x15, 1672, x18)

inst_464:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x097aef and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f097aef; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1680; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1680, x17, x15, 1680, x18)

inst_465:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x097aef and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f097aef; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1688; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1688, x17, x15, 1688, x18)

inst_466:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e1674 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7dbe1674; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1696; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1696, x17, x15, 1696, x18)

inst_467:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e1674 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7dbe1674; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1704; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1704, x17, x15, 1704, x18)

inst_468:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e1674 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7dbe1674; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1712; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1712, x17, x15, 1712, x18)

inst_469:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e1674 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7dbe1674; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1720; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1720, x17, x15, 1720, x18)

inst_470:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e1674 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7dbe1674; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1728; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1728, x17, x15, 1728, x18)

inst_471:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x12c03f and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e12c03f; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1736; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1736, x17, x15, 1736, x18)

inst_472:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x12c03f and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e12c03f; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1744; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1744, x17, x15, 1744, x18)

inst_473:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x12c03f and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e12c03f; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1752; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1752, x17, x15, 1752, x18)

inst_474:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x12c03f and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e12c03f; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1760; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1760, x17, x15, 1760, x18)

inst_475:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x12c03f and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e12c03f; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1768; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1768, x17, x15, 1768, x18)

inst_476:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x614269 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ee14269; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1776; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1776, x17, x15, 1776, x18)

inst_477:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x614269 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ee14269; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1784; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1784, x17, x15, 1784, x18)

inst_478:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x614269 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ee14269; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1792; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1792, x17, x15, 1792, x18)

inst_479:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x614269 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ee14269; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1800; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1800, x17, x15, 1800, x18)

inst_480:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x614269 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ee14269; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1808; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1808, x17, x15, 1808, x18)

inst_481:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x06e52a and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e86e52a; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1816; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1816, x17, x15, 1816, x18)

inst_482:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x06e52a and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e86e52a; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1824; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1824, x17, x15, 1824, x18)

inst_483:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x06e52a and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e86e52a; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1832; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1832, x17, x15, 1832, x18)

inst_484:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x06e52a and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e86e52a; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1840; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1840, x17, x15, 1840, x18)

inst_485:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x06e52a and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e86e52a; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1848; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1848, x17, x15, 1848, x18)

inst_486:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x729bb9 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e729bb9; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1856; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1856, x17, x15, 1856, x18)

inst_487:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x729bb9 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e729bb9; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1864; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1864, x17, x15, 1864, x18)

inst_488:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x729bb9 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e729bb9; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1872; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1872, x17, x15, 1872, x18)

inst_489:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x729bb9 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e729bb9; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1880; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1880, x17, x15, 1880, x18)

inst_490:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x729bb9 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e729bb9; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1888; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1888, x17, x15, 1888, x18)

inst_491:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x044ae8 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7d844ae8; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1896; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1896, x17, x15, 1896, x18)

inst_492:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x044ae8 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7d844ae8; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1904; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1904, x17, x15, 1904, x18)

inst_493:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x044ae8 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7d844ae8; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1912; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1912, x17, x15, 1912, x18)

inst_494:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x044ae8 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7d844ae8; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1920; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1920, x17, x15, 1920, x18)

inst_495:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x044ae8 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7d844ae8; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1928; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1928, x17, x15, 1928, x18)

inst_496:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b2415 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f3b2415; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1936; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1936, x17, x15, 1936, x18)

inst_497:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b2415 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f3b2415; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1944; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1944, x17, x15, 1944, x18)

inst_498:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b2415 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f3b2415; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1952; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1952, x17, x15, 1952, x18)

inst_499:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b2415 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f3b2415; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1960; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1960, x17, x15, 1960, x18)

inst_500:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b2415 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f3b2415; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1968; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1968, x17, x15, 1968, x18)

inst_501:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7dbf6d07; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1976; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1976, x17, x15, 1976, x18)

inst_502:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7dbf6d07; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1984; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1984, x17, x15, 1984, x18)

inst_503:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7dbf6d07; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1992; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1992, x17, x15, 1992, x18)

inst_504:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7dbf6d07; op2val:0xff7fffff; valaddr_reg:x16; val_offset:2000; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 2000, x17, x15, 2000, x18)

inst_505:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7dbf6d07; op2val:0xff7fffff; valaddr_reg:x16; val_offset:2008; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 2008, x17, x15, 2008, x18)

inst_506:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2872e3 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7d2872e3; op2val:0xff7fffff; valaddr_reg:x16; val_offset:2016; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 2016, x17, x15, 2016, x18)

inst_507:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2872e3 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7d2872e3; op2val:0xff7fffff; valaddr_reg:x16; val_offset:2024; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 2024, x17, x15, 2024, x18)
addi x16,x16,2032
RVTEST_SIGBASE(x15,signature_x15_3)

inst_508:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2872e3 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7d2872e3; op2val:0xff7fffff; valaddr_reg:x16; val_offset:0; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 0, x17, x15, 0, x18)

inst_509:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2872e3 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7d2872e3; op2val:0xff7fffff; valaddr_reg:x16; val_offset:8; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 8, x17, x15, 8, x18)

inst_510:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2872e3 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7d2872e3; op2val:0xff7fffff; valaddr_reg:x16; val_offset:16; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 16, x17, x15, 16, x18)

inst_511:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151669 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f151669; op2val:0xff7fffff; valaddr_reg:x16; val_offset:24; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 24, x17, x15, 24, x18)

inst_512:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151669 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f151669; op2val:0xff7fffff; valaddr_reg:x16; val_offset:32; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 32, x17, x15, 32, x18)

inst_513:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151669 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f151669; op2val:0xff7fffff; valaddr_reg:x16; val_offset:40; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 40, x17, x15, 40, x18)

inst_514:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151669 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f151669; op2val:0xff7fffff; valaddr_reg:x16; val_offset:48; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 48, x17, x15, 48, x18)

inst_515:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151669 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f151669; op2val:0xff7fffff; valaddr_reg:x16; val_offset:56; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 56, x17, x15, 56, x18)

inst_516:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x226d04 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ea26d04; op2val:0xff7fffff; valaddr_reg:x16; val_offset:64; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 64, x17, x15, 64, x18)

inst_517:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x226d04 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ea26d04; op2val:0xff7fffff; valaddr_reg:x16; val_offset:72; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 72, x17, x15, 72, x18)

inst_518:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x226d04 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ea26d04; op2val:0xff7fffff; valaddr_reg:x16; val_offset:80; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 80, x17, x15, 80, x18)

inst_519:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x226d04 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ea26d04; op2val:0xff7fffff; valaddr_reg:x16; val_offset:88; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 88, x17, x15, 88, x18)

inst_520:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x226d04 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ea26d04; op2val:0xff7fffff; valaddr_reg:x16; val_offset:96; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 96, x17, x15, 96, x18)

inst_521:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e4e462d; op2val:0xff7fffff; valaddr_reg:x16; val_offset:104; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 104, x17, x15, 104, x18)

inst_522:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e4e462d; op2val:0xff7fffff; valaddr_reg:x16; val_offset:112; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 112, x17, x15, 112, x18)

inst_523:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e4e462d; op2val:0xff7fffff; valaddr_reg:x16; val_offset:120; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 120, x17, x15, 120, x18)

inst_524:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e4e462d; op2val:0xff7fffff; valaddr_reg:x16; val_offset:128; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 128, x17, x15, 128, x18)

inst_525:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e4e462d; op2val:0xff7fffff; valaddr_reg:x16; val_offset:136; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 136, x17, x15, 136, x18)

inst_526:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x196401 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7d196401; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:144; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 144, x17, x15, 144, x18)

inst_527:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x196401 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7d196401; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:152; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 152, x17, x15, 152, x18)

inst_528:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x196401 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7d196401; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:160; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 160, x17, x15, 160, x18)

inst_529:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x196401 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7d196401; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:168; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 168, x17, x15, 168, x18)

inst_530:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x196401 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7d196401; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:176; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 176, x17, x15, 176, x18)

inst_531:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x716299 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ef16299; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:184; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 184, x17, x15, 184, x18)

inst_532:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x716299 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ef16299; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:192; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 192, x17, x15, 192, x18)

inst_533:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x716299 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ef16299; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:200; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 200, x17, x15, 200, x18)

inst_534:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x716299 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ef16299; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:208; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 208, x17, x15, 208, x18)

inst_535:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x716299 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ef16299; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:216; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 216, x17, x15, 216, x18)

inst_536:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e1c9c and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f1e1c9c; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:224; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 224, x17, x15, 224, x18)

inst_537:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e1c9c and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f1e1c9c; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:232; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 232, x17, x15, 232, x18)

inst_538:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e1c9c and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f1e1c9c; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:240; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 240, x17, x15, 240, x18)

inst_539:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e1c9c and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f1e1c9c; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:248; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 248, x17, x15, 248, x18)

inst_540:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e1c9c and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f1e1c9c; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:256; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 256, x17, x15, 256, x18)

inst_541:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x30faaa and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f30faaa; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:264; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 264, x17, x15, 264, x18)

inst_542:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x30faaa and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f30faaa; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:272; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 272, x17, x15, 272, x18)

inst_543:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x30faaa and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f30faaa; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:280; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 280, x17, x15, 280, x18)

inst_544:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x30faaa and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f30faaa; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:288; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 288, x17, x15, 288, x18)

inst_545:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x30faaa and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f30faaa; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:296; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 296, x17, x15, 296, x18)

inst_546:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x038f64 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e038f64; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:304; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 304, x17, x15, 304, x18)

inst_547:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x038f64 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e038f64; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:312; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 312, x17, x15, 312, x18)

inst_548:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x038f64 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e038f64; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:320; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 320, x17, x15, 320, x18)

inst_549:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x038f64 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e038f64; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:328; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 328, x17, x15, 328, x18)

inst_550:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x038f64 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e038f64; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:336; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 336, x17, x15, 336, x18)

inst_551:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4d4cf5 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ecd4cf5; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:344; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 344, x17, x15, 344, x18)

inst_552:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4d4cf5 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ecd4cf5; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:352; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 352, x17, x15, 352, x18)

inst_553:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4d4cf5 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ecd4cf5; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:360; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 360, x17, x15, 360, x18)

inst_554:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4d4cf5 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ecd4cf5; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:368; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 368, x17, x15, 368, x18)

inst_555:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4d4cf5 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ecd4cf5; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:376; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 376, x17, x15, 376, x18)

inst_556:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x071b70 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e871b70; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:384; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 384, x17, x15, 384, x18)

inst_557:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x071b70 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e871b70; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:392; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 392, x17, x15, 392, x18)

inst_558:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x071b70 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e871b70; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:400; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 400, x17, x15, 400, x18)

inst_559:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x071b70 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e871b70; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:408; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 408, x17, x15, 408, x18)

inst_560:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x071b70 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e871b70; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:416; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 416, x17, x15, 416, x18)

inst_561:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x373e6b and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eb73e6b; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:424; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 424, x17, x15, 424, x18)

inst_562:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x373e6b and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eb73e6b; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:432; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 432, x17, x15, 432, x18)

inst_563:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x373e6b and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eb73e6b; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:440; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 440, x17, x15, 440, x18)

inst_564:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x373e6b and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eb73e6b; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:448; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 448, x17, x15, 448, x18)

inst_565:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x373e6b and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eb73e6b; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:456; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 456, x17, x15, 456, x18)

inst_566:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x41e692 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e41e692; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:464; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 464, x17, x15, 464, x18)

inst_567:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x41e692 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e41e692; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:472; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 472, x17, x15, 472, x18)

inst_568:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x41e692 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e41e692; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:480; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 480, x17, x15, 480, x18)

inst_569:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x41e692 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e41e692; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:488; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 488, x17, x15, 488, x18)

inst_570:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x41e692 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e41e692; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:496; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 496, x17, x15, 496, x18)

inst_571:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b1228 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eeb1228; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:504; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 504, x17, x15, 504, x18)

inst_572:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b1228 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eeb1228; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:512; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 512, x17, x15, 512, x18)

inst_573:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b1228 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eeb1228; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:520; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 520, x17, x15, 520, x18)

inst_574:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b1228 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eeb1228; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:528; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 528, x17, x15, 528, x18)

inst_575:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b1228 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eeb1228; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:536; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 536, x17, x15, 536, x18)

inst_576:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ee152 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e9ee152; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:544; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 544, x17, x15, 544, x18)

inst_577:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ee152 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e9ee152; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:552; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 552, x17, x15, 552, x18)

inst_578:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ee152 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e9ee152; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:560; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 560, x17, x15, 560, x18)

inst_579:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ee152 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e9ee152; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:568; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 568, x17, x15, 568, x18)

inst_580:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1ee152 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e9ee152; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:576; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 576, x17, x15, 576, x18)

inst_581:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7e8d56 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7efe8d56; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:584; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 584, x17, x15, 584, x18)

inst_582:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7e8d56 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7efe8d56; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:592; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 592, x17, x15, 592, x18)

inst_583:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7e8d56 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7efe8d56; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:600; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 600, x17, x15, 600, x18)

inst_584:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7e8d56 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7efe8d56; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:608; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 608, x17, x15, 608, x18)

inst_585:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7e8d56 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7efe8d56; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:616; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 616, x17, x15, 616, x18)

inst_586:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x03f57f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e03f57f; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:624; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 624, x17, x15, 624, x18)

inst_587:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x03f57f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e03f57f; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:632; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 632, x17, x15, 632, x18)

inst_588:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x03f57f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e03f57f; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:640; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 640, x17, x15, 640, x18)

inst_589:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x03f57f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e03f57f; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:648; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 648, x17, x15, 648, x18)

inst_590:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x03f57f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e03f57f; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:656; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 656, x17, x15, 656, x18)

inst_591:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x218502 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7c218502; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:664; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 664, x17, x15, 664, x18)

inst_592:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x218502 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7c218502; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:672; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 672, x17, x15, 672, x18)

inst_593:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x218502 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7c218502; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:680; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 680, x17, x15, 680, x18)

inst_594:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x218502 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7c218502; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:688; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 688, x17, x15, 688, x18)

inst_595:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x218502 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7c218502; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:696; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 696, x17, x15, 696, x18)

inst_596:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cbcd0 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f2cbcd0; op2val:0xff7fffff; valaddr_reg:x16; val_offset:704; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 704, x17, x15, 704, x18)

inst_597:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cbcd0 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f2cbcd0; op2val:0xff7fffff; valaddr_reg:x16; val_offset:712; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 712, x17, x15, 712, x18)

inst_598:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cbcd0 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f2cbcd0; op2val:0xff7fffff; valaddr_reg:x16; val_offset:720; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 720, x17, x15, 720, x18)

inst_599:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cbcd0 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f2cbcd0; op2val:0xff7fffff; valaddr_reg:x16; val_offset:728; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 728, x17, x15, 728, x18)

inst_600:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cbcd0 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f2cbcd0; op2val:0xff7fffff; valaddr_reg:x16; val_offset:736; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 736, x17, x15, 736, x18)

inst_601:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31614f and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f31614f; op2val:0xff7fffff; valaddr_reg:x16; val_offset:744; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 744, x17, x15, 744, x18)

inst_602:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31614f and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f31614f; op2val:0xff7fffff; valaddr_reg:x16; val_offset:752; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 752, x17, x15, 752, x18)

inst_603:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31614f and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f31614f; op2val:0xff7fffff; valaddr_reg:x16; val_offset:760; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 760, x17, x15, 760, x18)

inst_604:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31614f and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f31614f; op2val:0xff7fffff; valaddr_reg:x16; val_offset:768; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 768, x17, x15, 768, x18)

inst_605:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x31614f and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f31614f; op2val:0xff7fffff; valaddr_reg:x16; val_offset:776; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 776, x17, x15, 776, x18)

inst_606:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d7e33 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f2d7e33; op2val:0xff7fffff; valaddr_reg:x16; val_offset:784; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 784, x17, x15, 784, x18)

inst_607:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d7e33 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f2d7e33; op2val:0xff7fffff; valaddr_reg:x16; val_offset:792; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 792, x17, x15, 792, x18)

inst_608:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d7e33 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f2d7e33; op2val:0xff7fffff; valaddr_reg:x16; val_offset:800; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 800, x17, x15, 800, x18)

inst_609:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d7e33 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f2d7e33; op2val:0xff7fffff; valaddr_reg:x16; val_offset:808; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 808, x17, x15, 808, x18)

inst_610:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d7e33 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f2d7e33; op2val:0xff7fffff; valaddr_reg:x16; val_offset:816; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 816, x17, x15, 816, x18)

inst_611:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b8e8c and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f1b8e8c; op2val:0xff7fffff; valaddr_reg:x16; val_offset:824; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 824, x17, x15, 824, x18)

inst_612:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b8e8c and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f1b8e8c; op2val:0xff7fffff; valaddr_reg:x16; val_offset:832; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 832, x17, x15, 832, x18)

inst_613:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b8e8c and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f1b8e8c; op2val:0xff7fffff; valaddr_reg:x16; val_offset:840; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 840, x17, x15, 840, x18)

inst_614:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b8e8c and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f1b8e8c; op2val:0xff7fffff; valaddr_reg:x16; val_offset:848; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 848, x17, x15, 848, x18)

inst_615:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b8e8c and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f1b8e8c; op2val:0xff7fffff; valaddr_reg:x16; val_offset:856; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 856, x17, x15, 856, x18)

inst_616:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x620d5f and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ee20d5f; op2val:0xff7fffff; valaddr_reg:x16; val_offset:864; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 864, x17, x15, 864, x18)

inst_617:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x620d5f and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ee20d5f; op2val:0xff7fffff; valaddr_reg:x16; val_offset:872; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 872, x17, x15, 872, x18)

inst_618:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x620d5f and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ee20d5f; op2val:0xff7fffff; valaddr_reg:x16; val_offset:880; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 880, x17, x15, 880, x18)

inst_619:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x620d5f and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ee20d5f; op2val:0xff7fffff; valaddr_reg:x16; val_offset:888; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 888, x17, x15, 888, x18)

inst_620:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x620d5f and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ee20d5f; op2val:0xff7fffff; valaddr_reg:x16; val_offset:896; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 896, x17, x15, 896, x18)

inst_621:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2eb1b3 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e2eb1b3; op2val:0xff7fffff; valaddr_reg:x16; val_offset:904; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 904, x17, x15, 904, x18)

inst_622:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2eb1b3 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e2eb1b3; op2val:0xff7fffff; valaddr_reg:x16; val_offset:912; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 912, x17, x15, 912, x18)

inst_623:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2eb1b3 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e2eb1b3; op2val:0xff7fffff; valaddr_reg:x16; val_offset:920; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 920, x17, x15, 920, x18)

inst_624:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2eb1b3 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e2eb1b3; op2val:0xff7fffff; valaddr_reg:x16; val_offset:928; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 928, x17, x15, 928, x18)

inst_625:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2eb1b3 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e2eb1b3; op2val:0xff7fffff; valaddr_reg:x16; val_offset:936; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 936, x17, x15, 936, x18)

inst_626:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5dfbef and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e5dfbef; op2val:0xff7fffff; valaddr_reg:x16; val_offset:944; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 944, x17, x15, 944, x18)

inst_627:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5dfbef and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e5dfbef; op2val:0xff7fffff; valaddr_reg:x16; val_offset:952; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 952, x17, x15, 952, x18)

inst_628:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5dfbef and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e5dfbef; op2val:0xff7fffff; valaddr_reg:x16; val_offset:960; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 960, x17, x15, 960, x18)

inst_629:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5dfbef and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e5dfbef; op2val:0xff7fffff; valaddr_reg:x16; val_offset:968; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 968, x17, x15, 968, x18)

inst_630:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5dfbef and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e5dfbef; op2val:0xff7fffff; valaddr_reg:x16; val_offset:976; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 976, x17, x15, 976, x18)

inst_631:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7e964a and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7efe964a; op2val:0xff7fffff; valaddr_reg:x16; val_offset:984; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 984, x17, x15, 984, x18)

inst_632:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7e964a and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7efe964a; op2val:0xff7fffff; valaddr_reg:x16; val_offset:992; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 992, x17, x15, 992, x18)

inst_633:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7e964a and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7efe964a; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1000; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1000, x17, x15, 1000, x18)

inst_634:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7e964a and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7efe964a; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1008; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1008, x17, x15, 1008, x18)

inst_635:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7e964a and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7efe964a; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1016; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1016, x17, x15, 1016, x18)

inst_636:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0f23f2 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f0f23f2; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1024; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1024, x17, x15, 1024, x18)

inst_637:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0f23f2 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f0f23f2; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1032; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1032, x17, x15, 1032, x18)

inst_638:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0f23f2 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f0f23f2; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1040; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1040, x17, x15, 1040, x18)

inst_639:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0f23f2 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f0f23f2; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1048; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1048, x17, x15, 1048, x18)

inst_640:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0f23f2 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f0f23f2; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1056; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1056, x17, x15, 1056, x18)

inst_641:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x320e71 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f320e71; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1064; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1064, x17, x15, 1064, x18)

inst_642:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x320e71 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f320e71; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1072; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1072, x17, x15, 1072, x18)

inst_643:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x320e71 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f320e71; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1080; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1080, x17, x15, 1080, x18)

inst_644:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x320e71 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f320e71; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1088; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1088, x17, x15, 1088, x18)

inst_645:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x320e71 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f320e71; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1096; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1096, x17, x15, 1096, x18)

inst_646:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x26ca91 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ea6ca91; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1104; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1104, x17, x15, 1104, x18)

inst_647:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x26ca91 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ea6ca91; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1112; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1112, x17, x15, 1112, x18)

inst_648:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x26ca91 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ea6ca91; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1120; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1120, x17, x15, 1120, x18)

inst_649:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x26ca91 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ea6ca91; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1128; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1128, x17, x15, 1128, x18)

inst_650:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x26ca91 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ea6ca91; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1136; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1136, x17, x15, 1136, x18)

inst_651:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28f4b0 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f28f4b0; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1144; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1144, x17, x15, 1144, x18)

inst_652:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28f4b0 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f28f4b0; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1152; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1152, x17, x15, 1152, x18)

inst_653:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28f4b0 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f28f4b0; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1160; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1160, x17, x15, 1160, x18)

inst_654:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28f4b0 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f28f4b0; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1168; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1168, x17, x15, 1168, x18)

inst_655:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28f4b0 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f28f4b0; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1176; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1176, x17, x15, 1176, x18)

inst_656:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x6522f2 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7b6522f2; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1184; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1184, x17, x15, 1184, x18)

inst_657:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x6522f2 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7b6522f2; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1192; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1192, x17, x15, 1192, x18)

inst_658:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x6522f2 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7b6522f2; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1200; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1200, x17, x15, 1200, x18)

inst_659:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x6522f2 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7b6522f2; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1208; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1208, x17, x15, 1208, x18)

inst_660:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x6522f2 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7b6522f2; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1216; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1216, x17, x15, 1216, x18)

inst_661:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x30c1f0 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f30c1f0; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1224; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1224, x17, x15, 1224, x18)

inst_662:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x30c1f0 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f30c1f0; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1232; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1232, x17, x15, 1232, x18)

inst_663:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x30c1f0 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f30c1f0; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1240; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1240, x17, x15, 1240, x18)

inst_664:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x30c1f0 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f30c1f0; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1248; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1248, x17, x15, 1248, x18)

inst_665:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x30c1f0 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f30c1f0; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1256; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1256, x17, x15, 1256, x18)

inst_666:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x21312f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ea1312f; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1264; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1264, x17, x15, 1264, x18)

inst_667:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x21312f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ea1312f; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1272; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1272, x17, x15, 1272, x18)

inst_668:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x21312f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ea1312f; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1280; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1280, x17, x15, 1280, x18)

inst_669:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x21312f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ea1312f; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1288; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1288, x17, x15, 1288, x18)

inst_670:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x21312f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ea1312f; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1296; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1296, x17, x15, 1296, x18)

inst_671:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x050002 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e850002; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1304; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1304, x17, x15, 1304, x18)

inst_672:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x050002 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e850002; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1312; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1312, x17, x15, 1312, x18)

inst_673:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x050002 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e850002; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1320; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1320, x17, x15, 1320, x18)

inst_674:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x050002 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e850002; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1328; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1328, x17, x15, 1328, x18)

inst_675:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x050002 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e850002; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1336; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1336, x17, x15, 1336, x18)

inst_676:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x186be6 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f186be6; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1344; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1344, x17, x15, 1344, x18)

inst_677:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x186be6 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f186be6; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1352; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1352, x17, x15, 1352, x18)

inst_678:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x186be6 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f186be6; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1360; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1360, x17, x15, 1360, x18)

inst_679:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x186be6 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f186be6; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1368; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1368, x17, x15, 1368, x18)

inst_680:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x186be6 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f186be6; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1376; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1376, x17, x15, 1376, x18)

inst_681:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4733d7 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7dc733d7; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1384; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1384, x17, x15, 1384, x18)

inst_682:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4733d7 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7dc733d7; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1392; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1392, x17, x15, 1392, x18)

inst_683:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4733d7 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7dc733d7; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1400; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1400, x17, x15, 1400, x18)

inst_684:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4733d7 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7dc733d7; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1408; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1408, x17, x15, 1408, x18)

inst_685:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4733d7 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7dc733d7; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1416; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1416, x17, x15, 1416, x18)

inst_686:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1acd2f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f1acd2f; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1424; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1424, x17, x15, 1424, x18)

inst_687:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1acd2f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f1acd2f; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1432; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1432, x17, x15, 1432, x18)

inst_688:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1acd2f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f1acd2f; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1440; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1440, x17, x15, 1440, x18)

inst_689:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1acd2f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f1acd2f; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1448; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1448, x17, x15, 1448, x18)

inst_690:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1acd2f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f1acd2f; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1456; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1456, x17, x15, 1456, x18)

inst_691:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1afcca and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f1afcca; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1464; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1464, x17, x15, 1464, x18)

inst_692:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1afcca and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f1afcca; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1472; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1472, x17, x15, 1472, x18)

inst_693:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1afcca and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f1afcca; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1480; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1480, x17, x15, 1480, x18)

inst_694:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1afcca and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f1afcca; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1488; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1488, x17, x15, 1488, x18)

inst_695:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1afcca and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f1afcca; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1496; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1496, x17, x15, 1496, x18)

inst_696:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0cfe89 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e0cfe89; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1504; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1504, x17, x15, 1504, x18)

inst_697:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0cfe89 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e0cfe89; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1512; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1512, x17, x15, 1512, x18)

inst_698:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0cfe89 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e0cfe89; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1520; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1520, x17, x15, 1520, x18)

inst_699:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0cfe89 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e0cfe89; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1528; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1528, x17, x15, 1528, x18)

inst_700:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0cfe89 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e0cfe89; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1536; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1536, x17, x15, 1536, x18)

inst_701:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ae6b6 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f1ae6b6; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1544; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1544, x17, x15, 1544, x18)

inst_702:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ae6b6 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f1ae6b6; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1552; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1552, x17, x15, 1552, x18)

inst_703:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ae6b6 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f1ae6b6; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1560; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1560, x17, x15, 1560, x18)

inst_704:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ae6b6 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f1ae6b6; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1568; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1568, x17, x15, 1568, x18)

inst_705:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ae6b6 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f1ae6b6; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1576; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1576, x17, x15, 1576, x18)

inst_706:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4b6083 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ecb6083; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1584; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1584, x17, x15, 1584, x18)

inst_707:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4b6083 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ecb6083; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1592; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1592, x17, x15, 1592, x18)

inst_708:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4b6083 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ecb6083; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1600; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1600, x17, x15, 1600, x18)

inst_709:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4b6083 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ecb6083; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1608; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1608, x17, x15, 1608, x18)

inst_710:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4b6083 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ecb6083; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1616; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1616, x17, x15, 1616, x18)

inst_711:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2cd245 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e2cd245; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1624; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1624, x17, x15, 1624, x18)

inst_712:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2cd245 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e2cd245; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1632; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1632, x17, x15, 1632, x18)

inst_713:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2cd245 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e2cd245; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1640; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1640, x17, x15, 1640, x18)

inst_714:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2cd245 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e2cd245; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1648; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1648, x17, x15, 1648, x18)

inst_715:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2cd245 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e2cd245; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1656; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1656, x17, x15, 1656, x18)

inst_716:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x29e684 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f29e684; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1664; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1664, x17, x15, 1664, x18)

inst_717:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x29e684 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f29e684; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1672; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1672, x17, x15, 1672, x18)

inst_718:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x29e684 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f29e684; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1680; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1680, x17, x15, 1680, x18)

inst_719:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x29e684 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f29e684; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1688; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1688, x17, x15, 1688, x18)

inst_720:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x29e684 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f29e684; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1696; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1696, x17, x15, 1696, x18)

inst_721:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x014bf6 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e814bf6; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1704; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1704, x17, x15, 1704, x18)

inst_722:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x014bf6 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e814bf6; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1712; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1712, x17, x15, 1712, x18)

inst_723:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x014bf6 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e814bf6; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1720; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1720, x17, x15, 1720, x18)

inst_724:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x014bf6 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e814bf6; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1728; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1728, x17, x15, 1728, x18)

inst_725:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x014bf6 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e814bf6; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1736; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1736, x17, x15, 1736, x18)

inst_726:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x244343 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f244343; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1744; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1744, x17, x15, 1744, x18)

inst_727:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x244343 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f244343; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1752; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1752, x17, x15, 1752, x18)

inst_728:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x244343 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f244343; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1760; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1760, x17, x15, 1760, x18)

inst_729:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x244343 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f244343; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1768; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1768, x17, x15, 1768, x18)

inst_730:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x244343 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f244343; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1776; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1776, x17, x15, 1776, x18)

inst_731:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x200a1a and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f200a1a; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1784; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1784, x17, x15, 1784, x18)

inst_732:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x200a1a and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f200a1a; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1792; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1792, x17, x15, 1792, x18)

inst_733:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x200a1a and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f200a1a; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1800; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1800, x17, x15, 1800, x18)

inst_734:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x200a1a and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f200a1a; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1808; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1808, x17, x15, 1808, x18)

inst_735:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x200a1a and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f200a1a; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1816; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1816, x17, x15, 1816, x18)

inst_736:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x774515 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e774515; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1824; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1824, x17, x15, 1824, x18)

inst_737:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x774515 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e774515; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1832; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1832, x17, x15, 1832, x18)

inst_738:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x774515 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e774515; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1840; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1840, x17, x15, 1840, x18)

inst_739:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x774515 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e774515; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1848; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1848, x17, x15, 1848, x18)

inst_740:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x774515 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e774515; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1856; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1856, x17, x15, 1856, x18)

inst_741:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x06075b and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f06075b; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1864; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1864, x17, x15, 1864, x18)

inst_742:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x06075b and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f06075b; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1872; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1872, x17, x15, 1872, x18)

inst_743:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x06075b and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f06075b; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1880; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1880, x17, x15, 1880, x18)

inst_744:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x06075b and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f06075b; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1888; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1888, x17, x15, 1888, x18)

inst_745:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x06075b and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f06075b; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1896; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1896, x17, x15, 1896, x18)

inst_746:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0feb39 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e0feb39; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1904; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1904, x17, x15, 1904, x18)

inst_747:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0feb39 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e0feb39; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1912; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1912, x17, x15, 1912, x18)

inst_748:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0feb39 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e0feb39; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1920; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1920, x17, x15, 1920, x18)

inst_749:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0feb39 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e0feb39; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1928; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1928, x17, x15, 1928, x18)

inst_750:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0feb39 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e0feb39; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1936; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1936, x17, x15, 1936, x18)

inst_751:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a54c0 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f1a54c0; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1944; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1944, x17, x15, 1944, x18)

inst_752:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a54c0 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f1a54c0; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1952; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1952, x17, x15, 1952, x18)

inst_753:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a54c0 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f1a54c0; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1960; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1960, x17, x15, 1960, x18)

inst_754:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a54c0 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f1a54c0; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1968; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1968, x17, x15, 1968, x18)

inst_755:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a54c0 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f1a54c0; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1976; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1976, x17, x15, 1976, x18)

inst_756:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6e17c2 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e6e17c2; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1984; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1984, x17, x15, 1984, x18)

inst_757:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6e17c2 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e6e17c2; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1992; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1992, x17, x15, 1992, x18)

inst_758:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6e17c2 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e6e17c2; op2val:0xff7fffff; valaddr_reg:x16; val_offset:2000; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 2000, x17, x15, 2000, x18)

inst_759:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6e17c2 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e6e17c2; op2val:0xff7fffff; valaddr_reg:x16; val_offset:2008; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 2008, x17, x15, 2008, x18)

inst_760:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6e17c2 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e6e17c2; op2val:0xff7fffff; valaddr_reg:x16; val_offset:2016; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 2016, x17, x15, 2016, x18)

inst_761:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5a9856 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eda9856; op2val:0xff7fffff; valaddr_reg:x16; val_offset:2024; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 2024, x17, x15, 2024, x18)
addi x16,x16,2032
RVTEST_SIGBASE(x15,signature_x15_4)

inst_762:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5a9856 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eda9856; op2val:0xff7fffff; valaddr_reg:x16; val_offset:0; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 0, x17, x15, 0, x18)

inst_763:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5a9856 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eda9856; op2val:0xff7fffff; valaddr_reg:x16; val_offset:8; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 8, x17, x15, 8, x18)

inst_764:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5a9856 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eda9856; op2val:0xff7fffff; valaddr_reg:x16; val_offset:16; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 16, x17, x15, 16, x18)

inst_765:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5a9856 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eda9856; op2val:0xff7fffff; valaddr_reg:x16; val_offset:24; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 24, x17, x15, 24, x18)

inst_766:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1446c8 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f1446c8; op2val:0xff7fffff; valaddr_reg:x16; val_offset:32; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 32, x17, x15, 32, x18)

inst_767:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1446c8 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f1446c8; op2val:0xff7fffff; valaddr_reg:x16; val_offset:40; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 40, x17, x15, 40, x18)

inst_768:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1446c8 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f1446c8; op2val:0xff7fffff; valaddr_reg:x16; val_offset:48; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 48, x17, x15, 48, x18)

inst_769:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1446c8 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f1446c8; op2val:0xff7fffff; valaddr_reg:x16; val_offset:56; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 56, x17, x15, 56, x18)

inst_770:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1446c8 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f1446c8; op2val:0xff7fffff; valaddr_reg:x16; val_offset:64; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 64, x17, x15, 64, x18)

inst_771:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x66b5d2 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e66b5d2; op2val:0xff7fffff; valaddr_reg:x16; val_offset:72; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 72, x17, x15, 72, x18)

inst_772:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x66b5d2 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e66b5d2; op2val:0xff7fffff; valaddr_reg:x16; val_offset:80; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 80, x17, x15, 80, x18)

inst_773:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x66b5d2 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e66b5d2; op2val:0xff7fffff; valaddr_reg:x16; val_offset:88; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 88, x17, x15, 88, x18)

inst_774:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x66b5d2 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e66b5d2; op2val:0xff7fffff; valaddr_reg:x16; val_offset:96; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 96, x17, x15, 96, x18)

inst_775:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x66b5d2 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e66b5d2; op2val:0xff7fffff; valaddr_reg:x16; val_offset:104; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 104, x17, x15, 104, x18)

inst_776:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0dc14f and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e8dc14f; op2val:0xff7fffff; valaddr_reg:x16; val_offset:112; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 112, x17, x15, 112, x18)

inst_777:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0dc14f and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e8dc14f; op2val:0xff7fffff; valaddr_reg:x16; val_offset:120; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 120, x17, x15, 120, x18)

inst_778:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0dc14f and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e8dc14f; op2val:0xff7fffff; valaddr_reg:x16; val_offset:128; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 128, x17, x15, 128, x18)

inst_779:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0dc14f and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e8dc14f; op2val:0xff7fffff; valaddr_reg:x16; val_offset:136; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 136, x17, x15, 136, x18)

inst_780:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0dc14f and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e8dc14f; op2val:0xff7fffff; valaddr_reg:x16; val_offset:144; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 144, x17, x15, 144, x18)

inst_781:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0bc23d and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e8bc23d; op2val:0xff7fffff; valaddr_reg:x16; val_offset:152; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 152, x17, x15, 152, x18)

inst_782:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0bc23d and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e8bc23d; op2val:0xff7fffff; valaddr_reg:x16; val_offset:160; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 160, x17, x15, 160, x18)

inst_783:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0bc23d and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e8bc23d; op2val:0xff7fffff; valaddr_reg:x16; val_offset:168; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 168, x17, x15, 168, x18)

inst_784:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0bc23d and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e8bc23d; op2val:0xff7fffff; valaddr_reg:x16; val_offset:176; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 176, x17, x15, 176, x18)

inst_785:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0bc23d and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e8bc23d; op2val:0xff7fffff; valaddr_reg:x16; val_offset:184; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 184, x17, x15, 184, x18)

inst_786:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x639603 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ee39603; op2val:0xff7fffff; valaddr_reg:x16; val_offset:192; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 192, x17, x15, 192, x18)

inst_787:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x639603 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ee39603; op2val:0xff7fffff; valaddr_reg:x16; val_offset:200; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 200, x17, x15, 200, x18)

inst_788:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x639603 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ee39603; op2val:0xff7fffff; valaddr_reg:x16; val_offset:208; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 208, x17, x15, 208, x18)

inst_789:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x639603 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ee39603; op2val:0xff7fffff; valaddr_reg:x16; val_offset:216; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 216, x17, x15, 216, x18)

inst_790:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x639603 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ee39603; op2val:0xff7fffff; valaddr_reg:x16; val_offset:224; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 224, x17, x15, 224, x18)

inst_791:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40dca5 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e40dca5; op2val:0xff7fffff; valaddr_reg:x16; val_offset:232; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 232, x17, x15, 232, x18)

inst_792:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40dca5 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e40dca5; op2val:0xff7fffff; valaddr_reg:x16; val_offset:240; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 240, x17, x15, 240, x18)

inst_793:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40dca5 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e40dca5; op2val:0xff7fffff; valaddr_reg:x16; val_offset:248; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 248, x17, x15, 248, x18)

inst_794:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40dca5 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e40dca5; op2val:0xff7fffff; valaddr_reg:x16; val_offset:256; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 256, x17, x15, 256, x18)

inst_795:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40dca5 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e40dca5; op2val:0xff7fffff; valaddr_reg:x16; val_offset:264; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 264, x17, x15, 264, x18)

inst_796:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x01cbbf and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f01cbbf; op2val:0xff7fffff; valaddr_reg:x16; val_offset:272; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 272, x17, x15, 272, x18)

inst_797:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x01cbbf and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f01cbbf; op2val:0xff7fffff; valaddr_reg:x16; val_offset:280; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 280, x17, x15, 280, x18)

inst_798:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x01cbbf and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f01cbbf; op2val:0xff7fffff; valaddr_reg:x16; val_offset:288; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 288, x17, x15, 288, x18)

inst_799:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x01cbbf and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f01cbbf; op2val:0xff7fffff; valaddr_reg:x16; val_offset:296; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 296, x17, x15, 296, x18)

inst_800:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x01cbbf and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f01cbbf; op2val:0xff7fffff; valaddr_reg:x16; val_offset:304; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 304, x17, x15, 304, x18)

inst_801:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x084a01 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7c884a01; op2val:0xff7fffff; valaddr_reg:x16; val_offset:312; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 312, x17, x15, 312, x18)

inst_802:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x084a01 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7c884a01; op2val:0xff7fffff; valaddr_reg:x16; val_offset:320; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 320, x17, x15, 320, x18)

inst_803:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x084a01 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7c884a01; op2val:0xff7fffff; valaddr_reg:x16; val_offset:328; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 328, x17, x15, 328, x18)

inst_804:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x084a01 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7c884a01; op2val:0xff7fffff; valaddr_reg:x16; val_offset:336; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 336, x17, x15, 336, x18)

inst_805:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x084a01 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7c884a01; op2val:0xff7fffff; valaddr_reg:x16; val_offset:344; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 344, x17, x15, 344, x18)

inst_806:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x07bc04 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f07bc04; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:352; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 352, x17, x15, 352, x18)

inst_807:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x07bc04 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f07bc04; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:360; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 360, x17, x15, 360, x18)

inst_808:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x07bc04 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f07bc04; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:368; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 368, x17, x15, 368, x18)

inst_809:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x07bc04 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f07bc04; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:376; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 376, x17, x15, 376, x18)

inst_810:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x07bc04 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f07bc04; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:384; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 384, x17, x15, 384, x18)

inst_811:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x026c09 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f026c09; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:392; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 392, x17, x15, 392, x18)

inst_812:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x026c09 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f026c09; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:400; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 400, x17, x15, 400, x18)

inst_813:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x026c09 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f026c09; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:408; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 408, x17, x15, 408, x18)

inst_814:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x026c09 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f026c09; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:416; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 416, x17, x15, 416, x18)

inst_815:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x026c09 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f026c09; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:424; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 424, x17, x15, 424, x18)

inst_816:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x70e623 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ef0e623; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:432; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 432, x17, x15, 432, x18)

inst_817:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x70e623 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ef0e623; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:440; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 440, x17, x15, 440, x18)

inst_818:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x70e623 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ef0e623; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:448; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 448, x17, x15, 448, x18)

inst_819:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x70e623 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ef0e623; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:456; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 456, x17, x15, 456, x18)

inst_820:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x70e623 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ef0e623; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:464; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 464, x17, x15, 464, x18)

inst_821:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x72c1df and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ef2c1df; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:472; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 472, x17, x15, 472, x18)

inst_822:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x72c1df and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ef2c1df; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:480; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 480, x17, x15, 480, x18)

inst_823:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x72c1df and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ef2c1df; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:488; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 488, x17, x15, 488, x18)

inst_824:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x72c1df and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ef2c1df; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:496; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 496, x17, x15, 496, x18)

inst_825:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x72c1df and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ef2c1df; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:504; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 504, x17, x15, 504, x18)

inst_826:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x7668ef and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7c7668ef; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:512; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 512, x17, x15, 512, x18)

inst_827:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x7668ef and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7c7668ef; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:520; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 520, x17, x15, 520, x18)

inst_828:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x7668ef and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7c7668ef; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:528; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 528, x17, x15, 528, x18)

inst_829:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x7668ef and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7c7668ef; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:536; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 536, x17, x15, 536, x18)

inst_830:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x7668ef and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7c7668ef; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:544; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 544, x17, x15, 544, x18)

inst_831:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f70d6 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e9f70d6; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:552; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 552, x17, x15, 552, x18)

inst_832:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f70d6 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e9f70d6; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:560; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 560, x17, x15, 560, x18)

inst_833:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f70d6 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e9f70d6; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:568; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 568, x17, x15, 568, x18)

inst_834:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f70d6 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e9f70d6; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:576; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 576, x17, x15, 576, x18)

inst_835:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f70d6 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e9f70d6; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:584; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 584, x17, x15, 584, x18)

inst_836:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5298e8 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ed298e8; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:592; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 592, x17, x15, 592, x18)

inst_837:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5298e8 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ed298e8; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:600; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 600, x17, x15, 600, x18)

inst_838:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5298e8 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ed298e8; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:608; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 608, x17, x15, 608, x18)

inst_839:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5298e8 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ed298e8; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:616; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 616, x17, x15, 616, x18)

inst_840:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5298e8 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ed298e8; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:624; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 624, x17, x15, 624, x18)

inst_841:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3bbcb1 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f3bbcb1; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:632; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 632, x17, x15, 632, x18)

inst_842:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3bbcb1 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f3bbcb1; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:640; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 640, x17, x15, 640, x18)

inst_843:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3bbcb1 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f3bbcb1; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:648; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 648, x17, x15, 648, x18)

inst_844:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3bbcb1 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f3bbcb1; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:656; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 656, x17, x15, 656, x18)

inst_845:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3bbcb1 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f3bbcb1; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:664; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 664, x17, x15, 664, x18)

inst_846:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x36810f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e36810f; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:672; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 672, x17, x15, 672, x18)

inst_847:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x36810f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e36810f; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:680; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 680, x17, x15, 680, x18)

inst_848:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x36810f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e36810f; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:688; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 688, x17, x15, 688, x18)

inst_849:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x36810f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e36810f; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:696; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 696, x17, x15, 696, x18)

inst_850:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x36810f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e36810f; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:704; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 704, x17, x15, 704, x18)

inst_851:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2593da and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ea593da; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:712; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 712, x17, x15, 712, x18)

inst_852:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2593da and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ea593da; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:720; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 720, x17, x15, 720, x18)

inst_853:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2593da and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ea593da; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:728; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 728, x17, x15, 728, x18)

inst_854:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2593da and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ea593da; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:736; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 736, x17, x15, 736, x18)

inst_855:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2593da and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ea593da; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:744; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 744, x17, x15, 744, x18)

inst_856:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x34996a and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f34996a; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:752; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 752, x17, x15, 752, x18)

inst_857:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x34996a and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f34996a; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:760; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 760, x17, x15, 760, x18)

inst_858:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x34996a and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f34996a; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:768; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 768, x17, x15, 768, x18)

inst_859:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x34996a and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f34996a; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:776; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 776, x17, x15, 776, x18)

inst_860:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x34996a and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f34996a; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:784; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 784, x17, x15, 784, x18)

inst_861:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56c198 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ed6c198; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:792; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 792, x17, x15, 792, x18)

inst_862:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56c198 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ed6c198; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:800; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 800, x17, x15, 800, x18)

inst_863:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56c198 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ed6c198; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:808; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 808, x17, x15, 808, x18)

inst_864:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56c198 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ed6c198; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:816; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 816, x17, x15, 816, x18)

inst_865:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x56c198 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ed6c198; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:824; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 824, x17, x15, 824, x18)

inst_866:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7740d5 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ef740d5; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:832; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 832, x17, x15, 832, x18)

inst_867:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7740d5 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ef740d5; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:840; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 840, x17, x15, 840, x18)

inst_868:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7740d5 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ef740d5; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:848; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 848, x17, x15, 848, x18)

inst_869:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7740d5 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ef740d5; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:856; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 856, x17, x15, 856, x18)

inst_870:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7740d5 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ef740d5; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:864; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 864, x17, x15, 864, x18)

inst_871:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30cc1b and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eb0cc1b; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:872; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 872, x17, x15, 872, x18)

inst_872:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30cc1b and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eb0cc1b; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:880; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 880, x17, x15, 880, x18)

inst_873:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30cc1b and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eb0cc1b; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:888; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 888, x17, x15, 888, x18)

inst_874:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30cc1b and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eb0cc1b; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:896; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 896, x17, x15, 896, x18)

inst_875:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30cc1b and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eb0cc1b; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:904; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 904, x17, x15, 904, x18)

inst_876:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c289c and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f2c289c; op2val:0xff7fffff; valaddr_reg:x16; val_offset:912; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 912, x17, x15, 912, x18)

inst_877:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c289c and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f2c289c; op2val:0xff7fffff; valaddr_reg:x16; val_offset:920; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 920, x17, x15, 920, x18)

inst_878:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c289c and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f2c289c; op2val:0xff7fffff; valaddr_reg:x16; val_offset:928; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 928, x17, x15, 928, x18)

inst_879:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c289c and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f2c289c; op2val:0xff7fffff; valaddr_reg:x16; val_offset:936; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 936, x17, x15, 936, x18)

inst_880:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c289c and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f2c289c; op2val:0xff7fffff; valaddr_reg:x16; val_offset:944; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 944, x17, x15, 944, x18)

inst_881:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x710596 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e710596; op2val:0xff7fffff; valaddr_reg:x16; val_offset:952; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 952, x17, x15, 952, x18)

inst_882:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x710596 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e710596; op2val:0xff7fffff; valaddr_reg:x16; val_offset:960; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 960, x17, x15, 960, x18)

inst_883:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x710596 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e710596; op2val:0xff7fffff; valaddr_reg:x16; val_offset:968; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 968, x17, x15, 968, x18)

inst_884:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x710596 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e710596; op2val:0xff7fffff; valaddr_reg:x16; val_offset:976; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 976, x17, x15, 976, x18)

inst_885:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x710596 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e710596; op2val:0xff7fffff; valaddr_reg:x16; val_offset:984; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 984, x17, x15, 984, x18)

inst_886:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x025ce3 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7d025ce3; op2val:0xff7fffff; valaddr_reg:x16; val_offset:992; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 992, x17, x15, 992, x18)

inst_887:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x025ce3 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7d025ce3; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1000; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1000, x17, x15, 1000, x18)

inst_888:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x025ce3 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7d025ce3; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1008; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1008, x17, x15, 1008, x18)

inst_889:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x025ce3 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7d025ce3; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1016; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1016, x17, x15, 1016, x18)

inst_890:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x025ce3 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7d025ce3; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1024; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1024, x17, x15, 1024, x18)

inst_891:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6b5b and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eea6b5b; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1032; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1032, x17, x15, 1032, x18)

inst_892:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6b5b and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eea6b5b; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1040; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1040, x17, x15, 1040, x18)

inst_893:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6b5b and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eea6b5b; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1048; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1048, x17, x15, 1048, x18)

inst_894:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6b5b and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eea6b5b; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1056; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1056, x17, x15, 1056, x18)

inst_895:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6b5b and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eea6b5b; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1064; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1064, x17, x15, 1064, x18)

inst_896:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x179770 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e179770; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1072; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1072, x17, x15, 1072, x18)

inst_897:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x179770 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e179770; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1080; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1080, x17, x15, 1080, x18)

inst_898:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x179770 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e179770; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1088; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1088, x17, x15, 1088, x18)

inst_899:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x179770 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e179770; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1096; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1096, x17, x15, 1096, x18)

inst_900:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x179770 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e179770; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1104; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1104, x17, x15, 1104, x18)

inst_901:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x664f14 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ee64f14; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1112; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1112, x17, x15, 1112, x18)

inst_902:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x664f14 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ee64f14; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1120; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1120, x17, x15, 1120, x18)

inst_903:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x664f14 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ee64f14; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1128; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1128, x17, x15, 1128, x18)

inst_904:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x664f14 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ee64f14; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1136; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1136, x17, x15, 1136, x18)

inst_905:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x664f14 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ee64f14; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1144; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1144, x17, x15, 1144, x18)

inst_906:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6dd39b and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e6dd39b; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1152; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1152, x17, x15, 1152, x18)

inst_907:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6dd39b and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e6dd39b; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1160; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1160, x17, x15, 1160, x18)

inst_908:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6dd39b and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e6dd39b; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1168; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1168, x17, x15, 1168, x18)

inst_909:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6dd39b and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e6dd39b; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1176; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1176, x17, x15, 1176, x18)

inst_910:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6dd39b and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e6dd39b; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1184; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1184, x17, x15, 1184, x18)

inst_911:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4214d7 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ec214d7; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1192; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1192, x17, x15, 1192, x18)

inst_912:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4214d7 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ec214d7; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1200; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1200, x17, x15, 1200, x18)

inst_913:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4214d7 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ec214d7; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1208; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1208, x17, x15, 1208, x18)

inst_914:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4214d7 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ec214d7; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1216; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1216, x17, x15, 1216, x18)

inst_915:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4214d7 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ec214d7; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1224; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1224, x17, x15, 1224, x18)

inst_916:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x292241 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f292241; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1232; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1232, x17, x15, 1232, x18)

inst_917:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x292241 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f292241; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1240; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1240, x17, x15, 1240, x18)

inst_918:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x292241 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f292241; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1248; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1248, x17, x15, 1248, x18)

inst_919:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x292241 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f292241; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1256; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1256, x17, x15, 1256, x18)

inst_920:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x292241 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f292241; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1264; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1264, x17, x15, 1264, x18)

inst_921:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x09f0c8 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f09f0c8; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1272; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1272, x17, x15, 1272, x18)

inst_922:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x09f0c8 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f09f0c8; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1280; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1280, x17, x15, 1280, x18)

inst_923:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x09f0c8 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f09f0c8; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1288; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1288, x17, x15, 1288, x18)

inst_924:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x09f0c8 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f09f0c8; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1296; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1296, x17, x15, 1296, x18)

inst_925:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x09f0c8 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f09f0c8; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1304; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1304, x17, x15, 1304, x18)

inst_926:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6bfb00 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eebfb00; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1312; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1312, x17, x15, 1312, x18)

inst_927:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6bfb00 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eebfb00; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1320; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1320, x17, x15, 1320, x18)

inst_928:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6bfb00 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eebfb00; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1328; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1328, x17, x15, 1328, x18)

inst_929:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6bfb00 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eebfb00; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1336; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1336, x17, x15, 1336, x18)

inst_930:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6bfb00 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eebfb00; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1344; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1344, x17, x15, 1344, x18)

inst_931:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27923e and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f27923e; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1352; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1352, x17, x15, 1352, x18)

inst_932:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27923e and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f27923e; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1360; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1360, x17, x15, 1360, x18)

inst_933:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27923e and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f27923e; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1368; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1368, x17, x15, 1368, x18)

inst_934:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27923e and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f27923e; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1376; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1376, x17, x15, 1376, x18)

inst_935:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27923e and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f27923e; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1384; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1384, x17, x15, 1384, x18)

inst_936:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x61b55e and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e61b55e; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1392; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1392, x17, x15, 1392, x18)

inst_937:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x61b55e and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e61b55e; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1400; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1400, x17, x15, 1400, x18)

inst_938:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x61b55e and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e61b55e; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1408; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1408, x17, x15, 1408, x18)

inst_939:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x61b55e and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e61b55e; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1416; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1416, x17, x15, 1416, x18)

inst_940:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x61b55e and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e61b55e; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1424; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1424, x17, x15, 1424, x18)

inst_941:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d9e09 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e9d9e09; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1432; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1432, x17, x15, 1432, x18)

inst_942:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d9e09 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e9d9e09; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1440; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1440, x17, x15, 1440, x18)

inst_943:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d9e09 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e9d9e09; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1448; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1448, x17, x15, 1448, x18)

inst_944:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d9e09 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e9d9e09; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1456; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1456, x17, x15, 1456, x18)

inst_945:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d9e09 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e9d9e09; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1464; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1464, x17, x15, 1464, x18)

inst_946:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x07f6ba and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7d87f6ba; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1472; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1472, x17, x15, 1472, x18)

inst_947:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x07f6ba and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7d87f6ba; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1480; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1480, x17, x15, 1480, x18)

inst_948:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x07f6ba and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7d87f6ba; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1488; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1488, x17, x15, 1488, x18)

inst_949:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x07f6ba and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7d87f6ba; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1496; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1496, x17, x15, 1496, x18)

inst_950:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x07f6ba and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7d87f6ba; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1504; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1504, x17, x15, 1504, x18)

inst_951:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23f4fa and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f23f4fa; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1512; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1512, x17, x15, 1512, x18)

inst_952:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23f4fa and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f23f4fa; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1520; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1520, x17, x15, 1520, x18)

inst_953:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23f4fa and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f23f4fa; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1528; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1528, x17, x15, 1528, x18)

inst_954:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23f4fa and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f23f4fa; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1536; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1536, x17, x15, 1536, x18)

inst_955:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23f4fa and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f23f4fa; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1544; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1544, x17, x15, 1544, x18)

inst_956:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5ad8ea and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e5ad8ea; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1552; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1552, x17, x15, 1552, x18)

inst_957:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5ad8ea and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e5ad8ea; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1560; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1560, x17, x15, 1560, x18)

inst_958:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5ad8ea and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e5ad8ea; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1568; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1568, x17, x15, 1568, x18)

inst_959:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5ad8ea and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e5ad8ea; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1576; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1576, x17, x15, 1576, x18)

inst_960:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5ad8ea and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e5ad8ea; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1584; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1584, x17, x15, 1584, x18)

inst_961:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fab30 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f1fab30; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1592; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1592, x17, x15, 1592, x18)

inst_962:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fab30 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f1fab30; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1600; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1600, x17, x15, 1600, x18)

inst_963:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fab30 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f1fab30; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1608; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1608, x17, x15, 1608, x18)

inst_964:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fab30 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f1fab30; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1616; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1616, x17, x15, 1616, x18)

inst_965:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fab30 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f1fab30; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1624; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1624, x17, x15, 1624, x18)

inst_966:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x090d88 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f090d88; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1632; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1632, x17, x15, 1632, x18)

inst_967:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x090d88 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f090d88; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1640; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1640, x17, x15, 1640, x18)

inst_968:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x090d88 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f090d88; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1648; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1648, x17, x15, 1648, x18)

inst_969:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x090d88 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f090d88; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1656; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1656, x17, x15, 1656, x18)

inst_970:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x090d88 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f090d88; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1664; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1664, x17, x15, 1664, x18)

inst_971:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2db39d and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f2db39d; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1672; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1672, x17, x15, 1672, x18)

inst_972:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2db39d and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f2db39d; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1680; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1680, x17, x15, 1680, x18)

inst_973:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2db39d and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f2db39d; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1688; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1688, x17, x15, 1688, x18)

inst_974:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2db39d and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f2db39d; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1696; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1696, x17, x15, 1696, x18)

inst_975:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2db39d and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f2db39d; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1704; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1704, x17, x15, 1704, x18)

inst_976:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x253e0d and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f253e0d; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1712; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1712, x17, x15, 1712, x18)

inst_977:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x253e0d and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f253e0d; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1720; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1720, x17, x15, 1720, x18)

inst_978:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x253e0d and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f253e0d; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1728; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1728, x17, x15, 1728, x18)

inst_979:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x253e0d and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f253e0d; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1736; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1736, x17, x15, 1736, x18)

inst_980:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x253e0d and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f253e0d; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1744; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1744, x17, x15, 1744, x18)

inst_981:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x00e26f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f00e26f; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1752; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1752, x17, x15, 1752, x18)

inst_982:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x00e26f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f00e26f; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1760; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1760, x17, x15, 1760, x18)

inst_983:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x00e26f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f00e26f; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1768; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1768, x17, x15, 1768, x18)

inst_984:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x00e26f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f00e26f; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1776; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1776, x17, x15, 1776, x18)

inst_985:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x00e26f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f00e26f; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1784; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1784, x17, x15, 1784, x18)

inst_986:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x246dcc and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f246dcc; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1792; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1792, x17, x15, 1792, x18)

inst_987:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x246dcc and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f246dcc; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1800; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1800, x17, x15, 1800, x18)

inst_988:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x246dcc and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f246dcc; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1808; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1808, x17, x15, 1808, x18)

inst_989:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x246dcc and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f246dcc; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1816; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1816, x17, x15, 1816, x18)

inst_990:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x246dcc and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f246dcc; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1824; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1824, x17, x15, 1824, x18)

inst_991:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02f0c8 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f02f0c8; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1832; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1832, x17, x15, 1832, x18)

inst_992:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02f0c8 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f02f0c8; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1840; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1840, x17, x15, 1840, x18)

inst_993:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02f0c8 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f02f0c8; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1848; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1848, x17, x15, 1848, x18)

inst_994:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02f0c8 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f02f0c8; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1856; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1856, x17, x15, 1856, x18)

inst_995:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02f0c8 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f02f0c8; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1864; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1864, x17, x15, 1864, x18)

inst_996:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x605a49 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ee05a49; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1872; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1872, x17, x15, 1872, x18)

inst_997:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x605a49 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ee05a49; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1880; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1880, x17, x15, 1880, x18)

inst_998:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x605a49 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ee05a49; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1888; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1888, x17, x15, 1888, x18)

inst_999:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x605a49 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ee05a49; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1896; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1896, x17, x15, 1896, x18)

inst_1000:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x605a49 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ee05a49; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1904; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1904, x17, x15, 1904, x18)

inst_1001:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x06bfe7 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e86bfe7; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1912; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1912, x17, x15, 1912, x18)

inst_1002:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x06bfe7 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e86bfe7; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1920; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1920, x17, x15, 1920, x18)

inst_1003:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x06bfe7 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e86bfe7; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1928; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1928, x17, x15, 1928, x18)

inst_1004:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x06bfe7 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e86bfe7; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1936; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1936, x17, x15, 1936, x18)

inst_1005:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x06bfe7 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e86bfe7; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1944; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1944, x17, x15, 1944, x18)

inst_1006:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42c803 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ec2c803; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1952; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1952, x17, x15, 1952, x18)

inst_1007:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42c803 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ec2c803; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1960; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1960, x17, x15, 1960, x18)

inst_1008:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42c803 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ec2c803; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1968; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1968, x17, x15, 1968, x18)

inst_1009:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42c803 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ec2c803; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1976; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1976, x17, x15, 1976, x18)

inst_1010:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42c803 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ec2c803; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1984; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1984, x17, x15, 1984, x18)

inst_1011:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x70a207 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ef0a207; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1992; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1992, x17, x15, 1992, x18)

inst_1012:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x70a207 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ef0a207; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:2000; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 2000, x17, x15, 2000, x18)

inst_1013:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x70a207 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ef0a207; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:2008; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 2008, x17, x15, 2008, x18)

inst_1014:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x70a207 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ef0a207; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:2016; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 2016, x17, x15, 2016, x18)

inst_1015:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x70a207 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ef0a207; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:2024; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 2024, x17, x15, 2024, x18)
addi x16,x16,2032
RVTEST_SIGBASE(x15,signature_x15_5)

inst_1016:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x395f47 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f395f47; op2val:0xff7fffff; valaddr_reg:x16; val_offset:0; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 0, x17, x15, 0, x18)

inst_1017:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x395f47 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f395f47; op2val:0xff7fffff; valaddr_reg:x16; val_offset:8; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 8, x17, x15, 8, x18)

inst_1018:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x395f47 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f395f47; op2val:0xff7fffff; valaddr_reg:x16; val_offset:16; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 16, x17, x15, 16, x18)

inst_1019:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x395f47 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f395f47; op2val:0xff7fffff; valaddr_reg:x16; val_offset:24; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 24, x17, x15, 24, x18)

inst_1020:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x395f47 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f395f47; op2val:0xff7fffff; valaddr_reg:x16; val_offset:32; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 32, x17, x15, 32, x18)

inst_1021:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x50d921 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7dd0d921; op2val:0xff7fffff; valaddr_reg:x16; val_offset:40; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 40, x17, x15, 40, x18)

inst_1022:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x50d921 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7dd0d921; op2val:0xff7fffff; valaddr_reg:x16; val_offset:48; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 48, x17, x15, 48, x18)

inst_1023:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x50d921 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7dd0d921; op2val:0xff7fffff; valaddr_reg:x16; val_offset:56; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 56, x17, x15, 56, x18)

inst_1024:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x50d921 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7dd0d921; op2val:0xff7fffff; valaddr_reg:x16; val_offset:64; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 64, x17, x15, 64, x18)

inst_1025:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x50d921 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7dd0d921; op2val:0xff7fffff; valaddr_reg:x16; val_offset:72; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 72, x17, x15, 72, x18)

inst_1026:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28be0d and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f28be0d; op2val:0xff7fffff; valaddr_reg:x16; val_offset:80; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 80, x17, x15, 80, x18)

inst_1027:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28be0d and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f28be0d; op2val:0xff7fffff; valaddr_reg:x16; val_offset:88; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 88, x17, x15, 88, x18)

inst_1028:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28be0d and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f28be0d; op2val:0xff7fffff; valaddr_reg:x16; val_offset:96; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 96, x17, x15, 96, x18)

inst_1029:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28be0d and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f28be0d; op2val:0xff7fffff; valaddr_reg:x16; val_offset:104; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 104, x17, x15, 104, x18)

inst_1030:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28be0d and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f28be0d; op2val:0xff7fffff; valaddr_reg:x16; val_offset:112; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 112, x17, x15, 112, x18)

inst_1031:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2abc06 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eaabc06; op2val:0xff7fffff; valaddr_reg:x16; val_offset:120; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 120, x17, x15, 120, x18)

inst_1032:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2abc06 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eaabc06; op2val:0xff7fffff; valaddr_reg:x16; val_offset:128; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 128, x17, x15, 128, x18)

inst_1033:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2abc06 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eaabc06; op2val:0xff7fffff; valaddr_reg:x16; val_offset:136; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 136, x17, x15, 136, x18)

inst_1034:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2abc06 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eaabc06; op2val:0xff7fffff; valaddr_reg:x16; val_offset:144; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 144, x17, x15, 144, x18)

inst_1035:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2abc06 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eaabc06; op2val:0xff7fffff; valaddr_reg:x16; val_offset:152; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 152, x17, x15, 152, x18)

inst_1036:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x17aa7b and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e97aa7b; op2val:0xff7fffff; valaddr_reg:x16; val_offset:160; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 160, x17, x15, 160, x18)

inst_1037:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x17aa7b and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e97aa7b; op2val:0xff7fffff; valaddr_reg:x16; val_offset:168; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 168, x17, x15, 168, x18)

inst_1038:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x17aa7b and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e97aa7b; op2val:0xff7fffff; valaddr_reg:x16; val_offset:176; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 176, x17, x15, 176, x18)

inst_1039:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x17aa7b and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e97aa7b; op2val:0xff7fffff; valaddr_reg:x16; val_offset:184; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 184, x17, x15, 184, x18)

inst_1040:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x17aa7b and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e97aa7b; op2val:0xff7fffff; valaddr_reg:x16; val_offset:192; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 192, x17, x15, 192, x18)

inst_1041:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x091ce4 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f091ce4; op2val:0xff7fffff; valaddr_reg:x16; val_offset:200; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 200, x17, x15, 200, x18)

inst_1042:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x091ce4 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f091ce4; op2val:0xff7fffff; valaddr_reg:x16; val_offset:208; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 208, x17, x15, 208, x18)

inst_1043:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x091ce4 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f091ce4; op2val:0xff7fffff; valaddr_reg:x16; val_offset:216; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 216, x17, x15, 216, x18)

inst_1044:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x091ce4 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f091ce4; op2val:0xff7fffff; valaddr_reg:x16; val_offset:224; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 224, x17, x15, 224, x18)

inst_1045:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x091ce4 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f091ce4; op2val:0xff7fffff; valaddr_reg:x16; val_offset:232; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 232, x17, x15, 232, x18)

inst_1046:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a03a1 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f0a03a1; op2val:0xff7fffff; valaddr_reg:x16; val_offset:240; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 240, x17, x15, 240, x18)

inst_1047:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a03a1 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f0a03a1; op2val:0xff7fffff; valaddr_reg:x16; val_offset:248; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 248, x17, x15, 248, x18)

inst_1048:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a03a1 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f0a03a1; op2val:0xff7fffff; valaddr_reg:x16; val_offset:256; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 256, x17, x15, 256, x18)

inst_1049:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a03a1 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f0a03a1; op2val:0xff7fffff; valaddr_reg:x16; val_offset:264; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 264, x17, x15, 264, x18)

inst_1050:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a03a1 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f0a03a1; op2val:0xff7fffff; valaddr_reg:x16; val_offset:272; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 272, x17, x15, 272, x18)

inst_1051:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x262e64 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f262e64; op2val:0xff7fffff; valaddr_reg:x16; val_offset:280; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 280, x17, x15, 280, x18)

inst_1052:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x262e64 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f262e64; op2val:0xff7fffff; valaddr_reg:x16; val_offset:288; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 288, x17, x15, 288, x18)

inst_1053:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x262e64 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f262e64; op2val:0xff7fffff; valaddr_reg:x16; val_offset:296; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 296, x17, x15, 296, x18)

inst_1054:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x262e64 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f262e64; op2val:0xff7fffff; valaddr_reg:x16; val_offset:304; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 304, x17, x15, 304, x18)

inst_1055:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x262e64 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f262e64; op2val:0xff7fffff; valaddr_reg:x16; val_offset:312; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 312, x17, x15, 312, x18)

inst_1056:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x675fa1 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e675fa1; op2val:0xff7fffff; valaddr_reg:x16; val_offset:320; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 320, x17, x15, 320, x18)

inst_1057:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x675fa1 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e675fa1; op2val:0xff7fffff; valaddr_reg:x16; val_offset:328; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 328, x17, x15, 328, x18)

inst_1058:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x675fa1 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e675fa1; op2val:0xff7fffff; valaddr_reg:x16; val_offset:336; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 336, x17, x15, 336, x18)

inst_1059:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x675fa1 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e675fa1; op2val:0xff7fffff; valaddr_reg:x16; val_offset:344; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 344, x17, x15, 344, x18)

inst_1060:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x675fa1 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e675fa1; op2val:0xff7fffff; valaddr_reg:x16; val_offset:352; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 352, x17, x15, 352, x18)

inst_1061:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x119488 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f119488; op2val:0xff7fffff; valaddr_reg:x16; val_offset:360; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 360, x17, x15, 360, x18)

inst_1062:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x119488 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f119488; op2val:0xff7fffff; valaddr_reg:x16; val_offset:368; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 368, x17, x15, 368, x18)

inst_1063:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x119488 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f119488; op2val:0xff7fffff; valaddr_reg:x16; val_offset:376; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 376, x17, x15, 376, x18)

inst_1064:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x119488 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f119488; op2val:0xff7fffff; valaddr_reg:x16; val_offset:384; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 384, x17, x15, 384, x18)

inst_1065:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x119488 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f119488; op2val:0xff7fffff; valaddr_reg:x16; val_offset:392; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 392, x17, x15, 392, x18)

inst_1066:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x00e937 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f00e937; op2val:0xff7fffff; valaddr_reg:x16; val_offset:400; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 400, x17, x15, 400, x18)

inst_1067:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x00e937 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f00e937; op2val:0xff7fffff; valaddr_reg:x16; val_offset:408; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 408, x17, x15, 408, x18)

inst_1068:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x00e937 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f00e937; op2val:0xff7fffff; valaddr_reg:x16; val_offset:416; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 416, x17, x15, 416, x18)

inst_1069:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x00e937 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f00e937; op2val:0xff7fffff; valaddr_reg:x16; val_offset:424; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 424, x17, x15, 424, x18)

inst_1070:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x00e937 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f00e937; op2val:0xff7fffff; valaddr_reg:x16; val_offset:432; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 432, x17, x15, 432, x18)

inst_1071:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x48e6cd and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ec8e6cd; op2val:0xff7fffff; valaddr_reg:x16; val_offset:440; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 440, x17, x15, 440, x18)

inst_1072:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x48e6cd and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ec8e6cd; op2val:0xff7fffff; valaddr_reg:x16; val_offset:448; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 448, x17, x15, 448, x18)

inst_1073:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x48e6cd and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ec8e6cd; op2val:0xff7fffff; valaddr_reg:x16; val_offset:456; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 456, x17, x15, 456, x18)

inst_1074:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x48e6cd and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ec8e6cd; op2val:0xff7fffff; valaddr_reg:x16; val_offset:464; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 464, x17, x15, 464, x18)

inst_1075:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x48e6cd and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ec8e6cd; op2val:0xff7fffff; valaddr_reg:x16; val_offset:472; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 472, x17, x15, 472, x18)

inst_1076:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x73c956 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ef3c956; op2val:0xff7fffff; valaddr_reg:x16; val_offset:480; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 480, x17, x15, 480, x18)

inst_1077:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x73c956 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ef3c956; op2val:0xff7fffff; valaddr_reg:x16; val_offset:488; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 488, x17, x15, 488, x18)

inst_1078:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x73c956 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ef3c956; op2val:0xff7fffff; valaddr_reg:x16; val_offset:496; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 496, x17, x15, 496, x18)

inst_1079:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x73c956 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ef3c956; op2val:0xff7fffff; valaddr_reg:x16; val_offset:504; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 504, x17, x15, 504, x18)

inst_1080:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x73c956 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ef3c956; op2val:0xff7fffff; valaddr_reg:x16; val_offset:512; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 512, x17, x15, 512, x18)

inst_1081:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7566f3 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ef566f3; op2val:0xff7fffff; valaddr_reg:x16; val_offset:520; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 520, x17, x15, 520, x18)

inst_1082:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7566f3 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ef566f3; op2val:0xff7fffff; valaddr_reg:x16; val_offset:528; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 528, x17, x15, 528, x18)

inst_1083:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7566f3 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ef566f3; op2val:0xff7fffff; valaddr_reg:x16; val_offset:536; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 536, x17, x15, 536, x18)

inst_1084:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7566f3 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ef566f3; op2val:0xff7fffff; valaddr_reg:x16; val_offset:544; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 544, x17, x15, 544, x18)

inst_1085:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7566f3 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ef566f3; op2val:0xff7fffff; valaddr_reg:x16; val_offset:552; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 552, x17, x15, 552, x18)

inst_1086:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2099c0 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f2099c0; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:560; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 560, x17, x15, 560, x18)

inst_1087:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2099c0 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f2099c0; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:568; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 568, x17, x15, 568, x18)

inst_1088:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2099c0 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f2099c0; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:576; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 576, x17, x15, 576, x18)

inst_1089:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2099c0 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f2099c0; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:584; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 584, x17, x15, 584, x18)

inst_1090:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2099c0 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f2099c0; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:592; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 592, x17, x15, 592, x18)

inst_1091:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3f29ee and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f3f29ee; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:600; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 600, x17, x15, 600, x18)

inst_1092:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3f29ee and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f3f29ee; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:608; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 608, x17, x15, 608, x18)

inst_1093:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3f29ee and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f3f29ee; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:616; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 616, x17, x15, 616, x18)

inst_1094:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3f29ee and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f3f29ee; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:624; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 624, x17, x15, 624, x18)

inst_1095:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3f29ee and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f3f29ee; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:632; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 632, x17, x15, 632, x18)

inst_1096:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x472f12 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e472f12; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:640; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 640, x17, x15, 640, x18)

inst_1097:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x472f12 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e472f12; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:648; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 648, x17, x15, 648, x18)

inst_1098:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x472f12 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e472f12; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:656; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 656, x17, x15, 656, x18)

inst_1099:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x472f12 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e472f12; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:664; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 664, x17, x15, 664, x18)

inst_1100:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x472f12 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e472f12; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:672; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 672, x17, x15, 672, x18)

inst_1101:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x21ceeb and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7c21ceeb; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:680; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 680, x17, x15, 680, x18)

inst_1102:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x21ceeb and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7c21ceeb; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:688; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 688, x17, x15, 688, x18)

inst_1103:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x21ceeb and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7c21ceeb; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:696; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 696, x17, x15, 696, x18)

inst_1104:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x21ceeb and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7c21ceeb; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:704; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 704, x17, x15, 704, x18)

inst_1105:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x21ceeb and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7c21ceeb; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:712; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 712, x17, x15, 712, x18)

inst_1106:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7046ce and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ef046ce; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:720; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 720, x17, x15, 720, x18)

inst_1107:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7046ce and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ef046ce; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:728; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 728, x17, x15, 728, x18)

inst_1108:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7046ce and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ef046ce; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:736; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 736, x17, x15, 736, x18)

inst_1109:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7046ce and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ef046ce; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:744; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 744, x17, x15, 744, x18)

inst_1110:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7046ce and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ef046ce; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:752; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 752, x17, x15, 752, x18)

inst_1111:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0e1012 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e8e1012; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:760; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 760, x17, x15, 760, x18)

inst_1112:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0e1012 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e8e1012; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:768; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 768, x17, x15, 768, x18)

inst_1113:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0e1012 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e8e1012; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:776; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 776, x17, x15, 776, x18)

inst_1114:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0e1012 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e8e1012; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:784; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 784, x17, x15, 784, x18)

inst_1115:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0e1012 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e8e1012; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:792; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 792, x17, x15, 792, x18)

inst_1116:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x36c1bf and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e36c1bf; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:800; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 800, x17, x15, 800, x18)

inst_1117:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x36c1bf and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e36c1bf; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:808; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 808, x17, x15, 808, x18)

inst_1118:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x36c1bf and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e36c1bf; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:816; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 816, x17, x15, 816, x18)

inst_1119:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x36c1bf and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e36c1bf; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:824; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 824, x17, x15, 824, x18)

inst_1120:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4bf975 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e4bf975; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:832; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 832, x17, x15, 832, x18)

inst_1121:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4bf975 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e4bf975; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:840; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 840, x17, x15, 840, x18)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
test_fp:
.word 0x7e36c1bf
.word 0x7f7fffff
.word 0x7e4bf975
.word 0x7f7fffff
.word 0x7e4bf975
.word 0x7e4bf975
.word 0x7e4bf975
.word 0x7e4bf975
.word 0x7e4bf975
.word 0x7f7fffff
.word 0x7e4bf975
.word 0x7f7fffff
.word 0x7efb2a84
.word 0x7f7fffff
.word 0x7efb2a84
.word 0x7f7fffff
.word 0x7efb2a84
.word 0x7f7fffff
.word 0x7efb2a84
.word 0x7f7fffff
.word 0x7efb2a84
.word 0x7f7fffff
.word 0x7e62f85a
.word 0x7f7fffff
.word 0x7e62f85a
.word 0x7f7fffff
.word 0x7e62f85a
.word 0x7f7fffff
.word 0x7e62f85a
.word 0x7f7fffff
.word 0x7e62f85a
.word 0x7f7fffff
.word 0x7f144df3
.word 0x7f7fffff
.word 0x7f144df3
.word 0x7f7fffff
.word 0x7f144df3
.word 0x7f7fffff
.word 0x7f144df3
.word 0x7f7fffff
.word 0x7f144df3
.word 0x7f7fffff
.word 0x7f34ba29
.word 0x7f7fffff
.word 0x7f34ba29
.word 0x7f7fffff
.word 0x7f34ba29
.word 0x7f7fffff
.word 0x7f34ba29
.word 0x7f7fffff
.word 0x7f34ba29
.word 0x7f7fffff
.word 0x7f2e7b77
.word 0x7f7fffff
.word 0x7f2e7b77
.word 0x7f7fffff
.word 0x7f2e7b77
.word 0x7f7fffff
.word 0x7f2e7b77
.word 0x7f7fffff
.word 0x7f2e7b77
.word 0x7f7fffff
.word 0x7dacd834
.word 0x7f7fffff
.word 0x7dacd834
.word 0x7f7fffff
.word 0x7dacd834
.word 0x7f7fffff
.word 0x7dacd834
.word 0x7f7fffff
.word 0x7dacd834
.word 0x7f7fffff
.word 0x7e530441
.word 0xff7fffff
.word 0x7e530441
.word 0xff7fffff
.word 0x7e530441
.word 0xff7fffff
.word 0x7e530441
.word 0xff7fffff
.word 0x7e530441
.word 0xff7fffff
.word 0x7ed1086c
.word 0xff7fffff
.word 0x7ed1086c
.word 0xff7fffff
.word 0x7ed1086c
.word 0xff7fffff
.word 0x7ed1086c
.word 0xff7fffff
.word 0x7ed1086c
.word 0xff7fffff
.word 0x7f376cbc
.word 0xff7fffff
.word 0x7f376cbc
.word 0xff7fffff
.word 0x7f376cbc
.word 0xff7fffff
.word 0x7f376cbc
.word 0xff7fffff
.word 0x7f376cbc
.word 0xff7fffff
.word 0x7e215a9a
.word 0xff7fffff
.word 0x7e215a9a
.word 0xff7fffff
.word 0x7e215a9a
.word 0xff7fffff
.word 0x7e215a9a
.word 0xff7fffff
.word 0x7e215a9a
.word 0xff7fffff
.word 0x7ea7824d
.word 0xff7fffff
.word 0x7ea7824d
.word 0xff7fffff
.word 0x7ea7824d
.word 0xff7fffff
.word 0x7ea7824d
.word 0xff7fffff
.word 0x7ea7824d
.word 0xff7fffff
.word 0x7ba92c77
.word 0xff7fffff
.word 0x7ba92c77
.word 0xff7fffff
.word 0x7ba92c77
.word 0xff7fffff
.word 0x7ba92c77
.word 0xff7fffff
.word 0x7ba92c77
.word 0xff7fffff
.word 0x7eded5d0
.word 0xff7fffff
.word 0x7eded5d0
.word 0xff7fffff
.word 0x7eded5d0
.word 0xff7fffff
.word 0x7eded5d0
.word 0xff7fffff
.word 0x7eded5d0
.word 0xff7fffff
.word 0x7e601303
.word 0xff7fffff
.word 0x7e601303
.word 0xff7fffff
.word 0x7e601303
.word 0xff7fffff
.word 0x7e601303
.word 0xff7fffff
.word 0x7e601303
.word 0xff7fffff
.word 0x7d8e4c72
.word 0xff7fffff
.word 0x7d8e4c72
.word 0xff7fffff
.word 0x7d8e4c72
.word 0xff7fffff
.word 0x7d8e4c72
.word 0xff7fffff
.word 0x7d8e4c72
.word 0xff7fffff
.word 0x7f0bf641
.word 0xff7fffff
.word 0x7f0bf641
.word 0xff7fffff
.word 0x7f0bf641
.word 0xff7fffff
.word 0x7f0bf641
.word 0xff7fffff
.word 0x7f0bf641
.word 0xff7fffff
.word 0x7e70b43d
.word 0xff7fffff
.word 0x7e70b43d
.word 0xff7fffff
.word 0x7e70b43d
.word 0xff7fffff
.word 0x7e70b43d
.word 0xff7fffff
.word 0x7e70b43d
.word 0xff7fffff
.word 0x7e43d898
.word 0xff7fffff
.word 0x7e43d898
.word 0xff7fffff
.word 0x7e43d898
.word 0xff7fffff
.word 0x7e43d898
.word 0xff7fffff
.word 0x7e43d898
.word 0xff7fffff
.word 0x7f24d9b0
.word 0xff7fffff
.word 0x7f24d9b0
.word 0xff7fffff
.word 0x7f24d9b0
.word 0xff7fffff
.word 0x7f24d9b0
.word 0xff7fffff
.word 0x7f24d9b0
.word 0xff7fffff
.word 0x7e0fc236
.word 0xff7fffff
.word 0x7e0fc236
.word 0xff7fffff
.word 0x7e0fc236
.word 0xff7fffff
.word 0x7e0fc236
.word 0xff7fffff
.word 0x7e0fc236
.word 0xff7fffff
.word 0x7e11a16e
.word 0x7f7fffff
.word 0x7e11a16e
.word 0x7f7fffff
.word 0x7e11a16e
.word 0x7f7fffff
.word 0x7e11a16e
.word 0x7f7fffff
.word 0x7e11a16e
.word 0x7f7fffff
.word 0x7f23f1fb
.word 0x7f7fffff
.word 0x7f23f1fb
.word 0x7f7fffff
.word 0x7f23f1fb
.word 0x7f7fffff
.word 0x7f23f1fb
.word 0x7f7fffff
.word 0x7f23f1fb
.word 0x7f7fffff
.word 0x7f01aad7
.word 0x7f7fffff
.word 0x7f01aad7
.word 0x7f7fffff
.word 0x7f01aad7
.word 0x7f7fffff
.word 0x7f01aad7
.word 0x7f7fffff
.word 0x7f01aad7
.word 0x7f7fffff
.word 0x7e344f5f
.word 0x7f7fffff
.word 0x7e344f5f
.word 0x7f7fffff
.word 0x7e344f5f
.word 0x7f7fffff
.word 0x7e344f5f
.word 0x7f7fffff
.word 0x7e344f5f
.word 0x7f7fffff
.word 0x7eb37ad1
.word 0x7f7fffff
.word 0x7eb37ad1
.word 0x7f7fffff
.word 0x7eb37ad1
.word 0x7f7fffff
.word 0x7eb37ad1
.word 0x7f7fffff
.word 0x7eb37ad1
.word 0x7f7fffff
.word 0x7f0cd956
.word 0x7f7fffff
.word 0x7f0cd956
.word 0x7f7fffff
.word 0x7f0cd956
.word 0x7f7fffff
.word 0x7f0cd956
.word 0x7f7fffff
.word 0x7f0cd956
.word 0x7f7fffff
.word 0x7f247a01
.word 0x7f7fffff
.word 0x7f247a01
.word 0x7f7fffff
.word 0x7f247a01
.word 0x7f7fffff
.word 0x7f247a01
.word 0x7f7fffff
.word 0x7f247a01
.word 0x7f7fffff
.word 0x7eb8d1a5
.word 0x6938d1a5
.word 0x7eb8d1a5
.word 0x6938d1a5
.word 0x7eb8d1a5
.word 0x6938d1a5
.word 0x7eb8d1a5
.word 0x6938d1a5
.word 0x7eb8d1a5
.word 0x6938d1a5
.word 0x7f1dc006
.word 0x699dc006
.word 0x7f1dc006
.word 0x699dc006
.word 0x7f1dc006
.word 0x699dc006
.word 0x7f1dc006
.word 0x699dc006
.word 0x7f1dc006
.word 0x699dc006
.word 0x7eb3bb79
.word 0x6933bb79
.word 0x7eb3bb79
.word 0x6933bb79
.word 0x7eb3bb79
.word 0x6933bb79
.word 0x7eb3bb79
.word 0x6933bb79
.word 0x7eb3bb79
.word 0x6933bb79
.word 0x7eb82999
.word 0x69382999
.word 0x7eb82999
.word 0x69382999
.word 0x7eb82999
.word 0x69382999
.word 0x7eb82999
.word 0x69382999
.word 0x7eb82999
.word 0x69382999
.word 0x7ddc95cc
.word 0x685c95cc
.word 0x7ddc95cc
.word 0x685c95cc
.word 0x7ddc95cc
.word 0x685c95cc
.word 0x7ddc95cc
.word 0x685c95cc
.word 0x7ddc95cc
.word 0x685c95cc
.word 0x7e77540f
.word 0x68f7540f
.word 0x7e77540f
.word 0x68f7540f
.word 0x7e77540f
.word 0x68f7540f
.word 0x7e77540f
.word 0x68f7540f
.word 0x7e77540f
.word 0x68f7540f
.word 0x7e044948
.word 0x68844948
.word 0x7e044948
.word 0x68844948
.word 0x7e044948
.word 0x68844948
.word 0x7e044948
.word 0x68844948
.word 0x7e044948
.word 0x68844948
.word 0x7eb81fbe
.word 0xe9381fbe
.word 0x7eb81fbe
.word 0xe9381fbe
.word 0x7eb81fbe
.word 0xe9381fbe
.word 0x7eb81fbe
.word 0xe9381fbe
.word 0x7eb81fbe
.word 0xe9381fbe
.word 0x7e271edb
.word 0xe8a71edb
.word 0x7e271edb
.word 0xe8a71edb
.word 0x7e271edb
.word 0xe8a71edb
.word 0x7e271edb
.word 0xe8a71edb
.word 0x7e271edb
.word 0xe8a71edb
.word 0x7ee08143
.word 0xe9608143
.word 0x7ee08143
.word 0xe9608143
.word 0x7ee08143
.word 0xe9608143
.word 0x7ee08143
.word 0xe9608143
.word 0x7ee08143
.word 0xe9608143
.word 0x7e9eab47
.word 0xe91eab46
.word 0x7e9eab47
.word 0xe91eab46
.word 0x7e9eab47
.word 0xe91eab46
.word 0x7e9eab47
.word 0xe91eab46
.word 0x7e9eab47
.word 0xe91eab46
.word 0x7e633927
.word 0xe8e33927
.word 0x7e633927
.word 0xe8e33927
.word 0x7e633927
.word 0xe8e33927
.word 0x7e633927
.word 0xe8e33927
.word 0x7e633927
.word 0xe8e33927
.word 0x7f04b289
.word 0xe984b289
.word 0x7f04b289
.word 0xe984b289
.word 0x7f04b289
.word 0xe984b289
.word 0x7f04b289
.word 0xe984b289
.word 0x7f04b289
.word 0xe984b289
.word 0x7e71cd8a
.word 0xe8f1cd8a
.word 0x7e71cd8a
.word 0xe8f1cd8a
.word 0x7e71cd8a
.word 0xe8f1cd8a
.word 0x7e71cd8a
.word 0xe8f1cd8a
.word 0x7e71cd8a
.word 0xe8f1cd8a
.word 0x7e18f859
.word 0xe898f858
.word 0x7e18f859
.word 0xe898f858
.word 0x7e18f859
.word 0xe898f858
.word 0x7e18f859
.word 0xe898f858
.word 0x7e18f859
.word 0xe898f858
.word 0x7e0eeeea
.word 0xe88eeeea
.word 0x7e0eeeea
.word 0xe88eeeea
.word 0x7e0eeeea
.word 0xe88eeeea
.word 0x7e0eeeea
.word 0xe88eeeea
.word 0x7e0eeeea
.word 0xe88eeeea
.word 0x7eaa21ee
.word 0xe92a21ee
.word 0x7eaa21ee
.word 0xe92a21ee
.word 0x7eaa21ee
.word 0xe92a21ee
.word 0x7eaa21ee
.word 0xe92a21ee
.word 0x7eaa21ee
.word 0xe92a21ee
.word 0x7f2ffd6d
.word 0xe9affd6d
.word 0x7f2ffd6d
.word 0xe9affd6d
.word 0x7f2ffd6d
.word 0xe9affd6d
.word 0x7f2ffd6d
.word 0xe9affd6d
.word 0x7f2ffd6d
.word 0xe9affd6d
.word 0x7d933df8
.word 0xe8133df8
.word 0x7d933df8
.word 0xe8133df8
.word 0x7d933df8
.word 0xe8133df8
.word 0x7d933df8
.word 0xe8133df8
.word 0x7d933df8
.word 0xe8133df8
.word 0x7f2c4d11
.word 0xe9ac4d10
.word 0x7f2c4d11
.word 0xe9ac4d10
.word 0x7f2c4d11
.word 0xe9ac4d10
.word 0x7f2c4d11
.word 0xe9ac4d10
.word 0x7f2c4d11
.word 0xe9ac4d10
.word 0x7eb9bfb2
.word 0xe939bfb2
.word 0x7eb9bfb2
.word 0xe939bfb2
.word 0x7eb9bfb2
.word 0xe939bfb2
.word 0x7eb9bfb2
.word 0xe939bfb2
.word 0x7eb9bfb2
.word 0xe939bfb2
.word 0x7f01615c
.word 0x6981615b
.word 0x7f01615c
.word 0x6981615b
.word 0x7f01615c
.word 0x6981615b
.word 0x7f01615c
.word 0x6981615b
.word 0x7f01615c
.word 0x6981615b
.word 0x7f04a412
.word 0x6984a412
.word 0x7f04a412
.word 0x6984a412
.word 0x7f04a412
.word 0x6984a412
.word 0x7f04a412
.word 0x6984a412
.word 0x7f04a412
.word 0x6984a412
.word 0x7f0f80a5
.word 0x698f80a5
.word 0x7f0f80a5
.word 0x698f80a5
.word 0x7f0f80a5
.word 0x698f80a5
.word 0x7f0f80a5
.word 0x698f80a5
.word 0x7f0f80a5
.word 0x698f80a5
.word 0x7f3ad3ab
.word 0x69bad3aa
.word 0x7f3ad3ab
.word 0x69bad3aa
.word 0x7f3ad3ab
.word 0x69bad3aa
.word 0x7f3ad3ab
.word 0x69bad3aa
.word 0x7f3ad3ab
.word 0x69bad3aa
.word 0x7d7fc6b5
.word 0x67ffc6b5
.word 0x7d7fc6b5
.word 0x67ffc6b5
.word 0x7d7fc6b5
.word 0x67ffc6b5
.word 0x7d7fc6b5
.word 0x67ffc6b5
.word 0x7d7fc6b5
.word 0x67ffc6b5
.word 0x7e86825d
.word 0x6906825d
.word 0x7e86825d
.word 0x6906825d
.word 0x7e86825d
.word 0x6906825d
.word 0x7e86825d
.word 0x6906825d
.word 0x7e86825d
.word 0x6906825d
.word 0x7e8d1be6
.word 0x690d1be6
.word 0x7e8d1be6
.word 0x690d1be6
.word 0x7e8d1be6
.word 0x690d1be6
.word 0x7e8d1be6
.word 0x690d1be6
.word 0x7e8d1be6
.word 0x690d1be6
.word 0x7f10ae28
.word 0x7f7fffff
.word 0x7f10ae28
.word 0x7f7fffff
.word 0x7f10ae28
.word 0x7f7fffff
.word 0x7f10ae28
.word 0x7f7fffff
.word 0x7f10ae28
.word 0x7f7fffff
.word 0x7e3ff954
.word 0x7f7fffff
.word 0x7e3ff954
.word 0x7f7fffff
.word 0x7e3ff954
.word 0x7f7fffff
.word 0x7e3ff954
.word 0x7f7fffff
.word 0x7e3ff954
.word 0x7f7fffff
.word 0x7e39f3eb
.word 0x7f7fffff
.word 0x7e39f3eb
.word 0x7f7fffff
.word 0x7e39f3eb
.word 0x7f7fffff
.word 0x7e39f3eb
.word 0x7f7fffff
.word 0x7e39f3eb
.word 0x7f7fffff
.word 0x7ed8913a
.word 0x7f7fffff
.word 0x7ed8913a
.word 0x7f7fffff
.word 0x7ed8913a
.word 0x7f7fffff
.word 0x7ed8913a
.word 0x7f7fffff
.word 0x7ed8913a
.word 0x7f7fffff
.word 0x7d3bd20e
.word 0x7f7fffff
.word 0x7d3bd20e
.word 0x7f7fffff
.word 0x7d3bd20e
.word 0x7f7fffff
.word 0x7d3bd20e
.word 0x7f7fffff
.word 0x7d3bd20e
.word 0x7f7fffff
.word 0x7f0fcd1f
.word 0x7f7fffff
.word 0x7f0fcd1f
.word 0x7f7fffff
.word 0x7f0fcd1f
.word 0x7f7fffff
.word 0x7f0fcd1f
.word 0x7f7fffff
.word 0x7f0fcd1f
.word 0x7f7fffff
.word 0x7f094f70
.word 0x7f7fffff
.word 0x7f094f70
.word 0x7f7fffff
.word 0x7f094f70
.word 0x7f7fffff
.word 0x7f094f70
.word 0x7f7fffff
.word 0x7f094f70
.word 0x7f7fffff
.word 0x7f135827
.word 0xff7fffff
.word 0x7f135827
.word 0xff7fffff
.word 0x7f135827
.word 0xff7fffff
.word 0x7f135827
.word 0xff7fffff
.word 0x7f135827
.word 0xff7fffff
.word 0x7f195c05
.word 0xff7fffff
.word 0x7f195c05
.word 0xff7fffff
.word 0x7f195c05
.word 0xff7fffff
.word 0x7f195c05
.word 0xff7fffff
.word 0x7f195c05
.word 0xff7fffff
.word 0x7f36dceb
.word 0xff7fffff
.word 0x7f36dceb
.word 0xff7fffff
.word 0x7f36dceb
.word 0xff7fffff
.word 0x7f36dceb
.word 0xff7fffff
.word 0x7f36dceb
.word 0xff7fffff
.word 0x7f015194
.word 0xff7fffff
.word 0x7f015194
.word 0xff7fffff
.word 0x7f015194
.word 0xff7fffff
.word 0x7f015194
.word 0xff7fffff
.word 0x7f015194
.word 0xff7fffff
.word 0x7dba4a99
.word 0xff7fffff
.word 0x7dba4a99
.word 0xff7fffff
.word 0x7dba4a99
.word 0xff7fffff
.word 0x7dba4a99
.word 0xff7fffff
.word 0x7dba4a99
.word 0xff7fffff
.word 0x7c904e6f
.word 0xff7fffff
.word 0x7c904e6f
.word 0xff7fffff
.word 0x7c904e6f
.word 0xff7fffff
.word 0x7c904e6f
.word 0xff7fffff
.word 0x7c904e6f
.word 0xff7fffff
.word 0x7f290cc1
.word 0xff7fffff
.word 0x7f290cc1
.word 0xff7fffff
.word 0x7f290cc1
.word 0xff7fffff
.word 0x7f290cc1
.word 0xff7fffff
.word 0x7f290cc1
.word 0xff7fffff
.word 0x7d8d00c9
.word 0xff7fffff
.word 0x7d8d00c9
.word 0xff7fffff
.word 0x7d8d00c9
.word 0xff7fffff
.word 0x7d8d00c9
.word 0xff7fffff
.word 0x7d8d00c9
.word 0xff7fffff
.word 0x7f14aa96
.word 0xff7fffff
.word 0x7f14aa96
.word 0xff7fffff
.word 0x7f14aa96
.word 0xff7fffff
.word 0x7f14aa96
.word 0xff7fffff
.word 0x7f14aa96
.word 0xff7fffff
.word 0x7b70e85a
.word 0xff7fffff
.word 0x7b70e85a
.word 0xff7fffff
.word 0x7b70e85a
.word 0xff7fffff
.word 0x7b70e85a
.word 0xff7fffff
.word 0x7b70e85a
.word 0xff7fffff
.word 0x7d9e69a3
.word 0xff7fffff
.word 0x7d9e69a3
.word 0xff7fffff
.word 0x7d9e69a3
.word 0xff7fffff
.word 0x7d9e69a3
.word 0xff7fffff
.word 0x7d9e69a3
.word 0xff7fffff
.word 0x7f0ce08c
.word 0xff7fffff
.word 0x7f0ce08c
.word 0xff7fffff
.word 0x7f0ce08c
.word 0xff7fffff
.word 0x7f0ce08c
.word 0xff7fffff
.word 0x7f0ce08c
.word 0xff7fffff
.word 0x7f182774
.word 0xff7fffff
.word 0x7f182774
.word 0xff7fffff
.word 0x7f182774
.word 0xff7fffff
.word 0x7f182774
.word 0xff7fffff
.word 0x7f182774
.word 0xff7fffff
.word 0x7efe51b6
.word 0xff7fffff
.word 0x7efe51b6
.word 0xff7fffff
.word 0x7efe51b6
.word 0xff7fffff
.word 0x7efe51b6
.word 0xff7fffff
.word 0x7efe51b6
.word 0xff7fffff
.word 0x7dbd26fe
.word 0x7f7fffff
.word 0x7dbd26fe
.word 0x7f7fffff
.word 0x7dbd26fe
.word 0x7f7fffff
.word 0x7dbd26fe
.word 0x7f7fffff
.word 0x7dbd26fe
.word 0x7f7fffff
.word 0x7e495aa1
.word 0x7f7fffff
.word 0x7e495aa1
.word 0x7f7fffff
.word 0x7e495aa1
.word 0x7f7fffff
.word 0x7e495aa1
.word 0x7f7fffff
.word 0x7e495aa1
.word 0x7f7fffff
.word 0x7f2c6353
.word 0x7f7fffff
.word 0x7f2c6353
.word 0x7f7fffff
.word 0x7f2c6353
.word 0x7f7fffff
.word 0x7f2c6353
.word 0x7f7fffff
.word 0x7f2c6353
.word 0x7f7fffff
.word 0x7f33ce10
.word 0x7f7fffff
.word 0x7f33ce10
.word 0x7f7fffff
.word 0x7f33ce10
.word 0x7f7fffff
.word 0x7f33ce10
.word 0x7f7fffff
.word 0x7f33ce10
.word 0x7f7fffff
.word 0x7ea38740
.word 0x7f7fffff
.word 0x7ea38740
.word 0x7f7fffff
.word 0x7ea38740
.word 0x7f7fffff
.word 0x7ea38740
.word 0x7f7fffff
.word 0x7ea38740
.word 0x7f7fffff
.word 0x7d5be595
.word 0x7f7fffff
.word 0x7d5be595
.word 0x7f7fffff
.word 0x7d5be595
.word 0x7f7fffff
.word 0x7d5be595
.word 0x7f7fffff
.word 0x7d5be595
.word 0x7f7fffff
.word 0x7ecdc2f4
.word 0x7f7fffff
.word 0x7ecdc2f4
.word 0x7f7fffff
.word 0x7ecdc2f4
.word 0x7f7fffff
.word 0x7ecdc2f4
.word 0x7f7fffff
.word 0x7ecdc2f4
.word 0x7f7fffff
.word 0x7eb0f667
.word 0x7f7fffff
.word 0x7eb0f667
.word 0x7f7fffff
.word 0x7eb0f667
.word 0x7f7fffff
.word 0x7eb0f667
.word 0x7f7fffff
.word 0x7eb0f667
.word 0x7f7fffff
.word 0x7ea17a32
.word 0x7f7fffff
.word 0x7ea17a32
.word 0x7f7fffff
.word 0x7ea17a32
.word 0x7f7fffff
.word 0x7ea17a32
.word 0x7f7fffff
.word 0x7ea17a32
.word 0x7f7fffff
.word 0x7ebe85af
.word 0x7f7fffff
.word 0x7ebe85af
.word 0x7f7fffff
.word 0x7ebe85af
.word 0x7f7fffff
.word 0x7ebe85af
.word 0x7f7fffff
.word 0x7ebe85af
.word 0x7f7fffff
.word 0x7ea5bb60
.word 0x7f7fffff
.word 0x7ea5bb60
.word 0x7f7fffff
.word 0x7ea5bb60
.word 0x7f7fffff
.word 0x7ea5bb60
.word 0x7f7fffff
.word 0x7ea5bb60
.word 0x7f7fffff
.word 0x7f19d2a8
.word 0x7f7fffff
.word 0x7f19d2a8
.word 0x7f7fffff
.word 0x7f19d2a8
.word 0x7f7fffff
.word 0x7f19d2a8
.word 0x7f7fffff
.word 0x7f19d2a8
.word 0x7f7fffff
.word 0x7f16436d
.word 0x7f7fffff
.word 0x7f16436d
.word 0x7f7fffff
.word 0x7f16436d
.word 0x7f7fffff
.word 0x7f16436d
.word 0x7f7fffff
.word 0x7f16436d
.word 0x7f7fffff
.word 0x7e8f5661
.word 0x7f7fffff
.word 0x7e8f5661
.word 0x7f7fffff
.word 0x7e8f5661
.word 0x7f7fffff
.word 0x7e8f5661
.word 0x7f7fffff
.word 0x7e8f5661
.word 0x7f7fffff
.word 0x7d7574e1
.word 0xff7fffff
.word 0x7d7574e1
.word 0xff7fffff
.word 0x7d7574e1
.word 0xff7fffff
.word 0x7d7574e1
.word 0xff7fffff
.word 0x7d7574e1
.word 0xff7fffff
.word 0x7f097aef
.word 0xff7fffff
.word 0x7f097aef
.word 0xff7fffff
.word 0x7f097aef
.word 0xff7fffff
.word 0x7f097aef
.word 0xff7fffff
.word 0x7f097aef
.word 0xff7fffff
.word 0x7dbe1674
.word 0xff7fffff
.word 0x7dbe1674
.word 0xff7fffff
.word 0x7dbe1674
.word 0xff7fffff
.word 0x7dbe1674
.word 0xff7fffff
.word 0x7dbe1674
.word 0xff7fffff
.word 0x7e12c03f
.word 0xff7fffff
.word 0x7e12c03f
.word 0xff7fffff
.word 0x7e12c03f
.word 0xff7fffff
.word 0x7e12c03f
.word 0xff7fffff
.word 0x7e12c03f
.word 0xff7fffff
.word 0x7ee14269
.word 0xff7fffff
.word 0x7ee14269
.word 0xff7fffff
.word 0x7ee14269
.word 0xff7fffff
.word 0x7ee14269
.word 0xff7fffff
.word 0x7ee14269
.word 0xff7fffff
.word 0x7e86e52a
.word 0xff7fffff
.word 0x7e86e52a
.word 0xff7fffff
.word 0x7e86e52a
.word 0xff7fffff
.word 0x7e86e52a
.word 0xff7fffff
.word 0x7e86e52a
.word 0xff7fffff
.word 0x7e729bb9
.word 0xff7fffff
.word 0x7e729bb9
.word 0xff7fffff
.word 0x7e729bb9
.word 0xff7fffff
.word 0x7e729bb9
.word 0xff7fffff
.word 0x7e729bb9
.word 0xff7fffff
.word 0x7d844ae8
.word 0xff7fffff
.word 0x7d844ae8
.word 0xff7fffff
.word 0x7d844ae8
.word 0xff7fffff
.word 0x7d844ae8
.word 0xff7fffff
.word 0x7d844ae8
.word 0xff7fffff
.word 0x7f3b2415
.word 0xff7fffff
.word 0x7f3b2415
.word 0xff7fffff
.word 0x7f3b2415
.word 0xff7fffff
.word 0x7f3b2415
.word 0xff7fffff
.word 0x7f3b2415
.word 0xff7fffff
.word 0x7dbf6d07
.word 0xff7fffff
.word 0x7dbf6d07
.word 0xff7fffff
.word 0x7dbf6d07
.word 0xff7fffff
.word 0x7dbf6d07
.word 0xff7fffff
.word 0x7dbf6d07
.word 0xff7fffff
.word 0x7d2872e3
.word 0xff7fffff
.word 0x7d2872e3
.word 0xff7fffff
.word 0x7d2872e3
.word 0xff7fffff
.word 0x7d2872e3
.word 0xff7fffff
.word 0x7d2872e3
.word 0xff7fffff
.word 0x7f151669
.word 0xff7fffff
.word 0x7f151669
.word 0xff7fffff
.word 0x7f151669
.word 0xff7fffff
.word 0x7f151669
.word 0xff7fffff
.word 0x7f151669
.word 0xff7fffff
.word 0x7ea26d04
.word 0xff7fffff
.word 0x7ea26d04
.word 0xff7fffff
.word 0x7ea26d04
.word 0xff7fffff
.word 0x7ea26d04
.word 0xff7fffff
.word 0x7ea26d04
.word 0xff7fffff
.word 0x7e4e462d
.word 0xff7fffff
.word 0x7e4e462d
.word 0xff7fffff
.word 0x7e4e462d
.word 0xff7fffff
.word 0x7e4e462d
.word 0xff7fffff
.word 0x7e4e462d
.word 0xff7fffff
.word 0x7d196401
.word 0x7f7fffff
.word 0x7d196401
.word 0x7f7fffff
.word 0x7d196401
.word 0x7f7fffff
.word 0x7d196401
.word 0x7f7fffff
.word 0x7d196401
.word 0x7f7fffff
.word 0x7ef16299
.word 0x7f7fffff
.word 0x7ef16299
.word 0x7f7fffff
.word 0x7ef16299
.word 0x7f7fffff
.word 0x7ef16299
.word 0x7f7fffff
.word 0x7ef16299
.word 0x7f7fffff
.word 0x7f1e1c9c
.word 0x7f7fffff
.word 0x7f1e1c9c
.word 0x7f7fffff
.word 0x7f1e1c9c
.word 0x7f7fffff
.word 0x7f1e1c9c
.word 0x7f7fffff
.word 0x7f1e1c9c
.word 0x7f7fffff
.word 0x7f30faaa
.word 0x7f7fffff
.word 0x7f30faaa
.word 0x7f7fffff
.word 0x7f30faaa
.word 0x7f7fffff
.word 0x7f30faaa
.word 0x7f7fffff
.word 0x7f30faaa
.word 0x7f7fffff
.word 0x7e038f64
.word 0x7f7fffff
.word 0x7e038f64
.word 0x7f7fffff
.word 0x7e038f64
.word 0x7f7fffff
.word 0x7e038f64
.word 0x7f7fffff
.word 0x7e038f64
.word 0x7f7fffff
.word 0x7ecd4cf5
.word 0x7f7fffff
.word 0x7ecd4cf5
.word 0x7f7fffff
.word 0x7ecd4cf5
.word 0x7f7fffff
.word 0x7ecd4cf5
.word 0x7f7fffff
.word 0x7ecd4cf5
.word 0x7f7fffff
.word 0x7e871b70
.word 0x7f7fffff
.word 0x7e871b70
.word 0x7f7fffff
.word 0x7e871b70
.word 0x7f7fffff
.word 0x7e871b70
.word 0x7f7fffff
.word 0x7e871b70
.word 0x7f7fffff
.word 0x7eb73e6b
.word 0x7f7fffff
.word 0x7eb73e6b
.word 0x7f7fffff
.word 0x7eb73e6b
.word 0x7f7fffff
.word 0x7eb73e6b
.word 0x7f7fffff
.word 0x7eb73e6b
.word 0x7f7fffff
.word 0x7e41e692
.word 0x7f7fffff
.word 0x7e41e692
.word 0x7f7fffff
.word 0x7e41e692
.word 0x7f7fffff
.word 0x7e41e692
.word 0x7f7fffff
.word 0x7e41e692
.word 0x7f7fffff
.word 0x7eeb1228
.word 0x7f7fffff
.word 0x7eeb1228
.word 0x7f7fffff
.word 0x7eeb1228
.word 0x7f7fffff
.word 0x7eeb1228
.word 0x7f7fffff
.word 0x7eeb1228
.word 0x7f7fffff
.word 0x7e9ee152
.word 0x7f7fffff
.word 0x7e9ee152
.word 0x7f7fffff
.word 0x7e9ee152
.word 0x7f7fffff
.word 0x7e9ee152
.word 0x7f7fffff
.word 0x7e9ee152
.word 0x7f7fffff
.word 0x7efe8d56
.word 0x7f7fffff
.word 0x7efe8d56
.word 0x7f7fffff
.word 0x7efe8d56
.word 0x7f7fffff
.word 0x7efe8d56
.word 0x7f7fffff
.word 0x7efe8d56
.word 0x7f7fffff
.word 0x7e03f57f
.word 0x7f7fffff
.word 0x7e03f57f
.word 0x7f7fffff
.word 0x7e03f57f
.word 0x7f7fffff
.word 0x7e03f57f
.word 0x7f7fffff
.word 0x7e03f57f
.word 0x7f7fffff
.word 0x7c218502
.word 0x7f7fffff
.word 0x7c218502
.word 0x7f7fffff
.word 0x7c218502
.word 0x7f7fffff
.word 0x7c218502
.word 0x7f7fffff
.word 0x7c218502
.word 0x7f7fffff
.word 0x7f2cbcd0
.word 0xff7fffff
.word 0x7f2cbcd0
.word 0xff7fffff
.word 0x7f2cbcd0
.word 0xff7fffff
.word 0x7f2cbcd0
.word 0xff7fffff
.word 0x7f2cbcd0
.word 0xff7fffff
.word 0x7f31614f
.word 0xff7fffff
.word 0x7f31614f
.word 0xff7fffff
.word 0x7f31614f
.word 0xff7fffff
.word 0x7f31614f
.word 0xff7fffff
.word 0x7f31614f
.word 0xff7fffff
.word 0x7f2d7e33
.word 0xff7fffff
.word 0x7f2d7e33
.word 0xff7fffff
.word 0x7f2d7e33
.word 0xff7fffff
.word 0x7f2d7e33
.word 0xff7fffff
.word 0x7f2d7e33
.word 0xff7fffff
.word 0x7f1b8e8c
.word 0xff7fffff
.word 0x7f1b8e8c
.word 0xff7fffff
.word 0x7f1b8e8c
.word 0xff7fffff
.word 0x7f1b8e8c
.word 0xff7fffff
.word 0x7f1b8e8c
.word 0xff7fffff
.word 0x7ee20d5f
.word 0xff7fffff
.word 0x7ee20d5f
.word 0xff7fffff
.word 0x7ee20d5f
.word 0xff7fffff
.word 0x7ee20d5f
.word 0xff7fffff
.word 0x7ee20d5f
.word 0xff7fffff
.word 0x7e2eb1b3
.word 0xff7fffff
.word 0x7e2eb1b3
.word 0xff7fffff
.word 0x7e2eb1b3
.word 0xff7fffff
.word 0x7e2eb1b3
.word 0xff7fffff
.word 0x7e2eb1b3
.word 0xff7fffff
.word 0x7e5dfbef
.word 0xff7fffff
.word 0x7e5dfbef
.word 0xff7fffff
.word 0x7e5dfbef
.word 0xff7fffff
.word 0x7e5dfbef
.word 0xff7fffff
.word 0x7e5dfbef
.word 0xff7fffff
.word 0x7efe964a
.word 0xff7fffff
.word 0x7efe964a
.word 0xff7fffff
.word 0x7efe964a
.word 0xff7fffff
.word 0x7efe964a
.word 0xff7fffff
.word 0x7efe964a
.word 0xff7fffff
.word 0x7f0f23f2
.word 0xff7fffff
.word 0x7f0f23f2
.word 0xff7fffff
.word 0x7f0f23f2
.word 0xff7fffff
.word 0x7f0f23f2
.word 0xff7fffff
.word 0x7f0f23f2
.word 0xff7fffff
.word 0x7f320e71
.word 0xff7fffff
.word 0x7f320e71
.word 0xff7fffff
.word 0x7f320e71
.word 0xff7fffff
.word 0x7f320e71
.word 0xff7fffff
.word 0x7f320e71
.word 0xff7fffff
.word 0x7ea6ca91
.word 0xff7fffff
.word 0x7ea6ca91
.word 0xff7fffff
.word 0x7ea6ca91
.word 0xff7fffff
.word 0x7ea6ca91
.word 0xff7fffff
.word 0x7ea6ca91
.word 0xff7fffff
.word 0x7f28f4b0
.word 0xff7fffff
.word 0x7f28f4b0
.word 0xff7fffff
.word 0x7f28f4b0
.word 0xff7fffff
.word 0x7f28f4b0
.word 0xff7fffff
.word 0x7f28f4b0
.word 0xff7fffff
.word 0x7b6522f2
.word 0xff7fffff
.word 0x7b6522f2
.word 0xff7fffff
.word 0x7b6522f2
.word 0xff7fffff
.word 0x7b6522f2
.word 0xff7fffff
.word 0x7b6522f2
.word 0xff7fffff
.word 0x7f30c1f0
.word 0xff7fffff
.word 0x7f30c1f0
.word 0xff7fffff
.word 0x7f30c1f0
.word 0xff7fffff
.word 0x7f30c1f0
.word 0xff7fffff
.word 0x7f30c1f0
.word 0xff7fffff
.word 0x7ea1312f
.word 0x7f7fffff
.word 0x7ea1312f
.word 0x7f7fffff
.word 0x7ea1312f
.word 0x7f7fffff
.word 0x7ea1312f
.word 0x7f7fffff
.word 0x7ea1312f
.word 0x7f7fffff
.word 0x7e850002
.word 0x7f7fffff
.word 0x7e850002
.word 0x7f7fffff
.word 0x7e850002
.word 0x7f7fffff
.word 0x7e850002
.word 0x7f7fffff
.word 0x7e850002
.word 0x7f7fffff
.word 0x7f186be6
.word 0x7f7fffff
.word 0x7f186be6
.word 0x7f7fffff
.word 0x7f186be6
.word 0x7f7fffff
.word 0x7f186be6
.word 0x7f7fffff
.word 0x7f186be6
.word 0x7f7fffff
.word 0x7dc733d7
.word 0x7f7fffff
.word 0x7dc733d7
.word 0x7f7fffff
.word 0x7dc733d7
.word 0x7f7fffff
.word 0x7dc733d7
.word 0x7f7fffff
.word 0x7dc733d7
.word 0x7f7fffff
.word 0x7f1acd2f
.word 0x7f7fffff
.word 0x7f1acd2f
.word 0x7f7fffff
.word 0x7f1acd2f
.word 0x7f7fffff
.word 0x7f1acd2f
.word 0x7f7fffff
.word 0x7f1acd2f
.word 0x7f7fffff
.word 0x7f1afcca
.word 0x7f7fffff
.word 0x7f1afcca
.word 0x7f7fffff
.word 0x7f1afcca
.word 0x7f7fffff
.word 0x7f1afcca
.word 0x7f7fffff
.word 0x7f1afcca
.word 0x7f7fffff
.word 0x7e0cfe89
.word 0x7f7fffff
.word 0x7e0cfe89
.word 0x7f7fffff
.word 0x7e0cfe89
.word 0x7f7fffff
.word 0x7e0cfe89
.word 0x7f7fffff
.word 0x7e0cfe89
.word 0x7f7fffff
.word 0x7f1ae6b6
.word 0x7f7fffff
.word 0x7f1ae6b6
.word 0x7f7fffff
.word 0x7f1ae6b6
.word 0x7f7fffff
.word 0x7f1ae6b6
.word 0x7f7fffff
.word 0x7f1ae6b6
.word 0x7f7fffff
.word 0x7ecb6083
.word 0x7f7fffff
.word 0x7ecb6083
.word 0x7f7fffff
.word 0x7ecb6083
.word 0x7f7fffff
.word 0x7ecb6083
.word 0x7f7fffff
.word 0x7ecb6083
.word 0x7f7fffff
.word 0x7e2cd245
.word 0x7f7fffff
.word 0x7e2cd245
.word 0x7f7fffff
.word 0x7e2cd245
.word 0x7f7fffff
.word 0x7e2cd245
.word 0x7f7fffff
.word 0x7e2cd245
.word 0x7f7fffff
.word 0x7f29e684
.word 0x7f7fffff
.word 0x7f29e684
.word 0x7f7fffff
.word 0x7f29e684
.word 0x7f7fffff
.word 0x7f29e684
.word 0x7f7fffff
.word 0x7f29e684
.word 0x7f7fffff
.word 0x7e814bf6
.word 0x7f7fffff
.word 0x7e814bf6
.word 0x7f7fffff
.word 0x7e814bf6
.word 0x7f7fffff
.word 0x7e814bf6
.word 0x7f7fffff
.word 0x7e814bf6
.word 0x7f7fffff
.word 0x7f244343
.word 0x7f7fffff
.word 0x7f244343
.word 0x7f7fffff
.word 0x7f244343
.word 0x7f7fffff
.word 0x7f244343
.word 0x7f7fffff
.word 0x7f244343
.word 0x7f7fffff
.word 0x7f200a1a
.word 0x7f7fffff
.word 0x7f200a1a
.word 0x7f7fffff
.word 0x7f200a1a
.word 0x7f7fffff
.word 0x7f200a1a
.word 0x7f7fffff
.word 0x7f200a1a
.word 0x7f7fffff
.word 0x7e774515
.word 0xff7fffff
.word 0x7e774515
.word 0xff7fffff
.word 0x7e774515
.word 0xff7fffff
.word 0x7e774515
.word 0xff7fffff
.word 0x7e774515
.word 0xff7fffff
.word 0x7f06075b
.word 0xff7fffff
.word 0x7f06075b
.word 0xff7fffff
.word 0x7f06075b
.word 0xff7fffff
.word 0x7f06075b
.word 0xff7fffff
.word 0x7f06075b
.word 0xff7fffff
.word 0x7e0feb39
.word 0xff7fffff
.word 0x7e0feb39
.word 0xff7fffff
.word 0x7e0feb39
.word 0xff7fffff
.word 0x7e0feb39
.word 0xff7fffff
.word 0x7e0feb39
.word 0xff7fffff
.word 0x7f1a54c0
.word 0xff7fffff
.word 0x7f1a54c0
.word 0xff7fffff
.word 0x7f1a54c0
.word 0xff7fffff
.word 0x7f1a54c0
.word 0xff7fffff
.word 0x7f1a54c0
.word 0xff7fffff
.word 0x7e6e17c2
.word 0xff7fffff
.word 0x7e6e17c2
.word 0xff7fffff
.word 0x7e6e17c2
.word 0xff7fffff
.word 0x7e6e17c2
.word 0xff7fffff
.word 0x7e6e17c2
.word 0xff7fffff
.word 0x7eda9856
.word 0xff7fffff
.word 0x7eda9856
.word 0xff7fffff
.word 0x7eda9856
.word 0xff7fffff
.word 0x7eda9856
.word 0xff7fffff
.word 0x7eda9856
.word 0xff7fffff
.word 0x7f1446c8
.word 0xff7fffff
.word 0x7f1446c8
.word 0xff7fffff
.word 0x7f1446c8
.word 0xff7fffff
.word 0x7f1446c8
.word 0xff7fffff
.word 0x7f1446c8
.word 0xff7fffff
.word 0x7e66b5d2
.word 0xff7fffff
.word 0x7e66b5d2
.word 0xff7fffff
.word 0x7e66b5d2
.word 0xff7fffff
.word 0x7e66b5d2
.word 0xff7fffff
.word 0x7e66b5d2
.word 0xff7fffff
.word 0x7e8dc14f
.word 0xff7fffff
.word 0x7e8dc14f
.word 0xff7fffff
.word 0x7e8dc14f
.word 0xff7fffff
.word 0x7e8dc14f
.word 0xff7fffff
.word 0x7e8dc14f
.word 0xff7fffff
.word 0x7e8bc23d
.word 0xff7fffff
.word 0x7e8bc23d
.word 0xff7fffff
.word 0x7e8bc23d
.word 0xff7fffff
.word 0x7e8bc23d
.word 0xff7fffff
.word 0x7e8bc23d
.word 0xff7fffff
.word 0x7ee39603
.word 0xff7fffff
.word 0x7ee39603
.word 0xff7fffff
.word 0x7ee39603
.word 0xff7fffff
.word 0x7ee39603
.word 0xff7fffff
.word 0x7ee39603
.word 0xff7fffff
.word 0x7e40dca5
.word 0xff7fffff
.word 0x7e40dca5
.word 0xff7fffff
.word 0x7e40dca5
.word 0xff7fffff
.word 0x7e40dca5
.word 0xff7fffff
.word 0x7e40dca5
.word 0xff7fffff
.word 0x7f01cbbf
.word 0xff7fffff
.word 0x7f01cbbf
.word 0xff7fffff
.word 0x7f01cbbf
.word 0xff7fffff
.word 0x7f01cbbf
.word 0xff7fffff
.word 0x7f01cbbf
.word 0xff7fffff
.word 0x7c884a01
.word 0xff7fffff
.word 0x7c884a01
.word 0xff7fffff
.word 0x7c884a01
.word 0xff7fffff
.word 0x7c884a01
.word 0xff7fffff
.word 0x7c884a01
.word 0xff7fffff
.word 0x7f07bc04
.word 0x7f7fffff
.word 0x7f07bc04
.word 0x7f7fffff
.word 0x7f07bc04
.word 0x7f7fffff
.word 0x7f07bc04
.word 0x7f7fffff
.word 0x7f07bc04
.word 0x7f7fffff
.word 0x7f026c09
.word 0x7f7fffff
.word 0x7f026c09
.word 0x7f7fffff
.word 0x7f026c09
.word 0x7f7fffff
.word 0x7f026c09
.word 0x7f7fffff
.word 0x7f026c09
.word 0x7f7fffff
.word 0x7ef0e623
.word 0x7f7fffff
.word 0x7ef0e623
.word 0x7f7fffff
.word 0x7ef0e623
.word 0x7f7fffff
.word 0x7ef0e623
.word 0x7f7fffff
.word 0x7ef0e623
.word 0x7f7fffff
.word 0x7ef2c1df
.word 0x7f7fffff
.word 0x7ef2c1df
.word 0x7f7fffff
.word 0x7ef2c1df
.word 0x7f7fffff
.word 0x7ef2c1df
.word 0x7f7fffff
.word 0x7ef2c1df
.word 0x7f7fffff
.word 0x7c7668ef
.word 0x7f7fffff
.word 0x7c7668ef
.word 0x7f7fffff
.word 0x7c7668ef
.word 0x7f7fffff
.word 0x7c7668ef
.word 0x7f7fffff
.word 0x7c7668ef
.word 0x7f7fffff
.word 0x7e9f70d6
.word 0x7f7fffff
.word 0x7e9f70d6
.word 0x7f7fffff
.word 0x7e9f70d6
.word 0x7f7fffff
.word 0x7e9f70d6
.word 0x7f7fffff
.word 0x7e9f70d6
.word 0x7f7fffff
.word 0x7ed298e8
.word 0x7f7fffff
.word 0x7ed298e8
.word 0x7f7fffff
.word 0x7ed298e8
.word 0x7f7fffff
.word 0x7ed298e8
.word 0x7f7fffff
.word 0x7ed298e8
.word 0x7f7fffff
.word 0x7f3bbcb1
.word 0x7f7fffff
.word 0x7f3bbcb1
.word 0x7f7fffff
.word 0x7f3bbcb1
.word 0x7f7fffff
.word 0x7f3bbcb1
.word 0x7f7fffff
.word 0x7f3bbcb1
.word 0x7f7fffff
.word 0x7e36810f
.word 0x7f7fffff
.word 0x7e36810f
.word 0x7f7fffff
.word 0x7e36810f
.word 0x7f7fffff
.word 0x7e36810f
.word 0x7f7fffff
.word 0x7e36810f
.word 0x7f7fffff
.word 0x7ea593da
.word 0x7f7fffff
.word 0x7ea593da
.word 0x7f7fffff
.word 0x7ea593da
.word 0x7f7fffff
.word 0x7ea593da
.word 0x7f7fffff
.word 0x7ea593da
.word 0x7f7fffff
.word 0x7f34996a
.word 0x7f7fffff
.word 0x7f34996a
.word 0x7f7fffff
.word 0x7f34996a
.word 0x7f7fffff
.word 0x7f34996a
.word 0x7f7fffff
.word 0x7f34996a
.word 0x7f7fffff
.word 0x7ed6c198
.word 0x7f7fffff
.word 0x7ed6c198
.word 0x7f7fffff
.word 0x7ed6c198
.word 0x7f7fffff
.word 0x7ed6c198
.word 0x7f7fffff
.word 0x7ed6c198
.word 0x7f7fffff
.word 0x7ef740d5
.word 0x7f7fffff
.word 0x7ef740d5
.word 0x7f7fffff
.word 0x7ef740d5
.word 0x7f7fffff
.word 0x7ef740d5
.word 0x7f7fffff
.word 0x7ef740d5
.word 0x7f7fffff
.word 0x7eb0cc1b
.word 0x7f7fffff
.word 0x7eb0cc1b
.word 0x7f7fffff
.word 0x7eb0cc1b
.word 0x7f7fffff
.word 0x7eb0cc1b
.word 0x7f7fffff
.word 0x7eb0cc1b
.word 0x7f7fffff
.word 0x7f2c289c
.word 0xff7fffff
.word 0x7f2c289c
.word 0xff7fffff
.word 0x7f2c289c
.word 0xff7fffff
.word 0x7f2c289c
.word 0xff7fffff
.word 0x7f2c289c
.word 0xff7fffff
.word 0x7e710596
.word 0xff7fffff
.word 0x7e710596
.word 0xff7fffff
.word 0x7e710596
.word 0xff7fffff
.word 0x7e710596
.word 0xff7fffff
.word 0x7e710596
.word 0xff7fffff
.word 0x7d025ce3
.word 0xff7fffff
.word 0x7d025ce3
.word 0xff7fffff
.word 0x7d025ce3
.word 0xff7fffff
.word 0x7d025ce3
.word 0xff7fffff
.word 0x7d025ce3
.word 0xff7fffff
.word 0x7eea6b5b
.word 0xff7fffff
.word 0x7eea6b5b
.word 0xff7fffff
.word 0x7eea6b5b
.word 0xff7fffff
.word 0x7eea6b5b
.word 0xff7fffff
.word 0x7eea6b5b
.word 0xff7fffff
.word 0x7e179770
.word 0xff7fffff
.word 0x7e179770
.word 0xff7fffff
.word 0x7e179770
.word 0xff7fffff
.word 0x7e179770
.word 0xff7fffff
.word 0x7e179770
.word 0xff7fffff
.word 0x7ee64f14
.word 0xff7fffff
.word 0x7ee64f14
.word 0xff7fffff
.word 0x7ee64f14
.word 0xff7fffff
.word 0x7ee64f14
.word 0xff7fffff
.word 0x7ee64f14
.word 0xff7fffff
.word 0x7e6dd39b
.word 0xff7fffff
.word 0x7e6dd39b
.word 0xff7fffff
.word 0x7e6dd39b
.word 0xff7fffff
.word 0x7e6dd39b
.word 0xff7fffff
.word 0x7e6dd39b
.word 0xff7fffff
.word 0x7ec214d7
.word 0xff7fffff
.word 0x7ec214d7
.word 0xff7fffff
.word 0x7ec214d7
.word 0xff7fffff
.word 0x7ec214d7
.word 0xff7fffff
.word 0x7ec214d7
.word 0xff7fffff
.word 0x7f292241
.word 0xff7fffff
.word 0x7f292241
.word 0xff7fffff
.word 0x7f292241
.word 0xff7fffff
.word 0x7f292241
.word 0xff7fffff
.word 0x7f292241
.word 0xff7fffff
.word 0x7f09f0c8
.word 0xff7fffff
.word 0x7f09f0c8
.word 0xff7fffff
.word 0x7f09f0c8
.word 0xff7fffff
.word 0x7f09f0c8
.word 0xff7fffff
.word 0x7f09f0c8
.word 0xff7fffff
.word 0x7eebfb00
.word 0xff7fffff
.word 0x7eebfb00
.word 0xff7fffff
.word 0x7eebfb00
.word 0xff7fffff
.word 0x7eebfb00
.word 0xff7fffff
.word 0x7eebfb00
.word 0xff7fffff
.word 0x7f27923e
.word 0xff7fffff
.word 0x7f27923e
.word 0xff7fffff
.word 0x7f27923e
.word 0xff7fffff
.word 0x7f27923e
.word 0xff7fffff
.word 0x7f27923e
.word 0xff7fffff
.word 0x7e61b55e
.word 0xff7fffff
.word 0x7e61b55e
.word 0xff7fffff
.word 0x7e61b55e
.word 0xff7fffff
.word 0x7e61b55e
.word 0xff7fffff
.word 0x7e61b55e
.word 0xff7fffff
.word 0x7e9d9e09
.word 0xff7fffff
.word 0x7e9d9e09
.word 0xff7fffff
.word 0x7e9d9e09
.word 0xff7fffff
.word 0x7e9d9e09
.word 0xff7fffff
.word 0x7e9d9e09
.word 0xff7fffff
.word 0x7d87f6ba
.word 0x7f7fffff
.word 0x7d87f6ba
.word 0x7f7fffff
.word 0x7d87f6ba
.word 0x7f7fffff
.word 0x7d87f6ba
.word 0x7f7fffff
.word 0x7d87f6ba
.word 0x7f7fffff
.word 0x7f23f4fa
.word 0x7f7fffff
.word 0x7f23f4fa
.word 0x7f7fffff
.word 0x7f23f4fa
.word 0x7f7fffff
.word 0x7f23f4fa
.word 0x7f7fffff
.word 0x7f23f4fa
.word 0x7f7fffff
.word 0x7e5ad8ea
.word 0x7f7fffff
.word 0x7e5ad8ea
.word 0x7f7fffff
.word 0x7e5ad8ea
.word 0x7f7fffff
.word 0x7e5ad8ea
.word 0x7f7fffff
.word 0x7e5ad8ea
.word 0x7f7fffff
.word 0x7f1fab30
.word 0x7f7fffff
.word 0x7f1fab30
.word 0x7f7fffff
.word 0x7f1fab30
.word 0x7f7fffff
.word 0x7f1fab30
.word 0x7f7fffff
.word 0x7f1fab30
.word 0x7f7fffff
.word 0x7f090d88
.word 0x7f7fffff
.word 0x7f090d88
.word 0x7f7fffff
.word 0x7f090d88
.word 0x7f7fffff
.word 0x7f090d88
.word 0x7f7fffff
.word 0x7f090d88
.word 0x7f7fffff
.word 0x7f2db39d
.word 0x7f7fffff
.word 0x7f2db39d
.word 0x7f7fffff
.word 0x7f2db39d
.word 0x7f7fffff
.word 0x7f2db39d
.word 0x7f7fffff
.word 0x7f2db39d
.word 0x7f7fffff
.word 0x7f253e0d
.word 0x7f7fffff
.word 0x7f253e0d
.word 0x7f7fffff
.word 0x7f253e0d
.word 0x7f7fffff
.word 0x7f253e0d
.word 0x7f7fffff
.word 0x7f253e0d
.word 0x7f7fffff
.word 0x7f00e26f
.word 0x7f7fffff
.word 0x7f00e26f
.word 0x7f7fffff
.word 0x7f00e26f
.word 0x7f7fffff
.word 0x7f00e26f
.word 0x7f7fffff
.word 0x7f00e26f
.word 0x7f7fffff
.word 0x7f246dcc
.word 0x7f7fffff
.word 0x7f246dcc
.word 0x7f7fffff
.word 0x7f246dcc
.word 0x7f7fffff
.word 0x7f246dcc
.word 0x7f7fffff
.word 0x7f246dcc
.word 0x7f7fffff
.word 0x7f02f0c8
.word 0x7f7fffff
.word 0x7f02f0c8
.word 0x7f7fffff
.word 0x7f02f0c8
.word 0x7f7fffff
.word 0x7f02f0c8
.word 0x7f7fffff
.word 0x7f02f0c8
.word 0x7f7fffff
.word 0x7ee05a49
.word 0x7f7fffff
.word 0x7ee05a49
.word 0x7f7fffff
.word 0x7ee05a49
.word 0x7f7fffff
.word 0x7ee05a49
.word 0x7f7fffff
.word 0x7ee05a49
.word 0x7f7fffff
.word 0x7e86bfe7
.word 0x7f7fffff
.word 0x7e86bfe7
.word 0x7f7fffff
.word 0x7e86bfe7
.word 0x7f7fffff
.word 0x7e86bfe7
.word 0x7f7fffff
.word 0x7e86bfe7
.word 0x7f7fffff
.word 0x7ec2c803
.word 0x7f7fffff
.word 0x7ec2c803
.word 0x7f7fffff
.word 0x7ec2c803
.word 0x7f7fffff
.word 0x7ec2c803
.word 0x7f7fffff
.word 0x7ec2c803
.word 0x7f7fffff
.word 0x7ef0a207
.word 0x7f7fffff
.word 0x7ef0a207
.word 0x7f7fffff
.word 0x7ef0a207
.word 0x7f7fffff
.word 0x7ef0a207
.word 0x7f7fffff
.word 0x7ef0a207
.word 0x7f7fffff
.word 0x7f395f47
.word 0xff7fffff
.word 0x7f395f47
.word 0xff7fffff
.word 0x7f395f47
.word 0xff7fffff
.word 0x7f395f47
.word 0xff7fffff
.word 0x7f395f47
.word 0xff7fffff
.word 0x7dd0d921
.word 0xff7fffff
.word 0x7dd0d921
.word 0xff7fffff
.word 0x7dd0d921
.word 0xff7fffff
.word 0x7dd0d921
.word 0xff7fffff
.word 0x7dd0d921
.word 0xff7fffff
.word 0x7f28be0d
.word 0xff7fffff
.word 0x7f28be0d
.word 0xff7fffff
.word 0x7f28be0d
.word 0xff7fffff
.word 0x7f28be0d
.word 0xff7fffff
.word 0x7f28be0d
.word 0xff7fffff
.word 0x7eaabc06
.word 0xff7fffff
.word 0x7eaabc06
.word 0xff7fffff
.word 0x7eaabc06
.word 0xff7fffff
.word 0x7eaabc06
.word 0xff7fffff
.word 0x7eaabc06
.word 0xff7fffff
.word 0x7e97aa7b
.word 0xff7fffff
.word 0x7e97aa7b
.word 0xff7fffff
.word 0x7e97aa7b
.word 0xff7fffff
.word 0x7e97aa7b
.word 0xff7fffff
.word 0x7e97aa7b
.word 0xff7fffff
.word 0x7f091ce4
.word 0xff7fffff
.word 0x7f091ce4
.word 0xff7fffff
.word 0x7f091ce4
.word 0xff7fffff
.word 0x7f091ce4
.word 0xff7fffff
.word 0x7f091ce4
.word 0xff7fffff
.word 0x7f0a03a1
.word 0xff7fffff
.word 0x7f0a03a1
.word 0xff7fffff
.word 0x7f0a03a1
.word 0xff7fffff
.word 0x7f0a03a1
.word 0xff7fffff
.word 0x7f0a03a1
.word 0xff7fffff
.word 0x7f262e64
.word 0xff7fffff
.word 0x7f262e64
.word 0xff7fffff
.word 0x7f262e64
.word 0xff7fffff
.word 0x7f262e64
.word 0xff7fffff
.word 0x7f262e64
.word 0xff7fffff
.word 0x7e675fa1
.word 0xff7fffff
.word 0x7e675fa1
.word 0xff7fffff
.word 0x7e675fa1
.word 0xff7fffff
.word 0x7e675fa1
.word 0xff7fffff
.word 0x7e675fa1
.word 0xff7fffff
.word 0x7f119488
.word 0xff7fffff
.word 0x7f119488
.word 0xff7fffff
.word 0x7f119488
.word 0xff7fffff
.word 0x7f119488
.word 0xff7fffff
.word 0x7f119488
.word 0xff7fffff
.word 0x7f00e937
.word 0xff7fffff
.word 0x7f00e937
.word 0xff7fffff
.word 0x7f00e937
.word 0xff7fffff
.word 0x7f00e937
.word 0xff7fffff
.word 0x7f00e937
.word 0xff7fffff
.word 0x7ec8e6cd
.word 0xff7fffff
.word 0x7ec8e6cd
.word 0xff7fffff
.word 0x7ec8e6cd
.word 0xff7fffff
.word 0x7ec8e6cd
.word 0xff7fffff
.word 0x7ec8e6cd
.word 0xff7fffff
.word 0x7ef3c956
.word 0xff7fffff
.word 0x7ef3c956
.word 0xff7fffff
.word 0x7ef3c956
.word 0xff7fffff
.word 0x7ef3c956
.word 0xff7fffff
.word 0x7ef3c956
.word 0xff7fffff
.word 0x7ef566f3
.word 0xff7fffff
.word 0x7ef566f3
.word 0xff7fffff
.word 0x7ef566f3
.word 0xff7fffff
.word 0x7ef566f3
.word 0xff7fffff
.word 0x7ef566f3
.word 0xff7fffff
.word 0x7f2099c0
.word 0x7f7fffff
.word 0x7f2099c0
.word 0x7f7fffff
.word 0x7f2099c0
.word 0x7f7fffff
.word 0x7f2099c0
.word 0x7f7fffff
.word 0x7f2099c0
.word 0x7f7fffff
.word 0x7f3f29ee
.word 0x7f7fffff
.word 0x7f3f29ee
.word 0x7f7fffff
.word 0x7f3f29ee
.word 0x7f7fffff
.word 0x7f3f29ee
.word 0x7f7fffff
.word 0x7f3f29ee
.word 0x7f7fffff
.word 0x7e472f12
.word 0x7f7fffff
.word 0x7e472f12
.word 0x7f7fffff
.word 0x7e472f12
.word 0x7f7fffff
.word 0x7e472f12
.word 0x7f7fffff
.word 0x7e472f12
.word 0x7f7fffff
.word 0x7c21ceeb
.word 0x7f7fffff
.word 0x7c21ceeb
.word 0x7f7fffff
.word 0x7c21ceeb
.word 0x7f7fffff
.word 0x7c21ceeb
.word 0x7f7fffff
.word 0x7c21ceeb
.word 0x7f7fffff
.word 0x7ef046ce
.word 0x7f7fffff
.word 0x7ef046ce
.word 0x7f7fffff
.word 0x7ef046ce
.word 0x7f7fffff
.word 0x7ef046ce
.word 0x7f7fffff
.word 0x7ef046ce
.word 0x7f7fffff
.word 0x7e8e1012
.word 0x7f7fffff
.word 0x7e8e1012
.word 0x7f7fffff
.word 0x7e8e1012
.word 0x7f7fffff
.word 0x7e8e1012
.word 0x7f7fffff
.word 0x7e8e1012
.word 0x7f7fffff
.word 0x7e36c1bf
.word 0x7f7fffff
.word 0x7e36c1bf
.word 0x7f7fffff
.word 0x7e36c1bf
.word 0x7f7fffff
.word 0x7e36c1bf
.word 0x7f7fffff
.word 0x7e4bf975
.word 0x7f7fffff
.word 0x7e4bf975
.word 0x7f7fffff
RVTEST_DATA_END

RVMODEL_DATA_BEGIN


signature_x15_0:
    .fill 0*(XLEN/32),4,0xdeadbeef


signature_x15_1:
    .fill 508*(XLEN/32),4,0xdeadbeef


signature_x15_2:
    .fill 508*(XLEN/32),4,0xdeadbeef


signature_x15_3:
    .fill 508*(XLEN/32),4,0xdeadbeef


signature_x15_4:
    .fill 508*(XLEN/32),4,0xdeadbeef


signature_x15_5:
    .fill 212*(XLEN/32),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*(XLEN/32),4,0xdeadbeef

#endif

RVMODEL_DATA_END
