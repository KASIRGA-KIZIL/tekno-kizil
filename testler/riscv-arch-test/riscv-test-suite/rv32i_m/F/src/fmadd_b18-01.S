
// -----------
// This file was generated by riscv_ctg (https://gitlab.com/incoresemi/riscv-compliance/riscv_ctg)
// version   : 0.5.2
// timestamp : Tue Sep  7 16:07:58 2021 GMT
// usage     : riscv_ctg \
//                  -- cgf $cgf \
//                  -- xlen $xlen \
// -----------
//
// -----------
// Copyright (c) 2021. IIT Madras. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmadd.s instruction of the RISC-V F extension for the fmadd_b18 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fmadd_b18)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x16,test_fp)
RVTEST_SIGBASE(x15,signature_x15_1)

inst_0:
// rs1 == rs3 != rs2 and rs1 == rs3 != rd and rd != rs2, rs1==f1, rs2==f20, rs3==f1, rd==f22, fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f1; op2:f20; op3:f1; dest:f22; op1val:0x7f222105; op2val:0x0; op3val:0x7f222105; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f22, f1, f20, f1, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_1:
// rs2 == rd != rs1 and rs2 == rd != rs3 and rs3 != rs1, rs1==f11, rs2==f25, rs3==f14, rd==f25, fs1 == 0 and fe1 == 0xfe and fm1 == 0x179b8e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f11; op2:f25; op3:f14; dest:f25; op1val:0x7f179b8e; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:12; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f25, f11, f25, f14, 0x0, 0, x16, 12, x17, x15, 8, x18)

inst_2:
// rs3 == rd != rs1 and rs3 == rd != rs2 and rs2 != rs1, rs1==f17, rs2==f31, rs3==f29, rd==f29, fs1 == 0 and fe1 == 0xfd and fm1 == 0x000760 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f17; op2:f31; op3:f29; dest:f29; op1val:0x7e800760; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:24; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f29, f17, f31, f29, 0x0, 0, x16, 24, x17, x15, 16, x18)

inst_3:
// rs1 == rs2 != rs3 and rs1 == rs2 != rd and rd != rs3, rs1==f27, rs2==f27, rs3==f17, rd==f30, fs1 == 0 and fe1 == 0xfb and fm1 == 0x67f8b9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f27; op2:f27; op3:f17; dest:f30; op1val:0x7de7f8b9; op2val:0x7de7f8b9; op3val:0x71bffff8; valaddr_reg:x16; val_offset:36; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f30, f27, f27, f17, 0x0, 0, x16, 36, x17, x15, 24, x18)

inst_4:
// rs1 == rs2 == rd != rs3, rs1==f14, rs2==f14, rs3==f2, rd==f14, fs1 == 0 and fe1 == 0xf7 and fm1 == 0x5aa799 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f14; op2:f14; op3:f2; dest:f14; op1val:0x7bdaa799; op2val:0x7bdaa799; op3val:0x71bffff8; valaddr_reg:x16; val_offset:48; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f14, f14, f14, f2, 0x0, 0, x16, 48, x17, x15, 32, x18)

inst_5:
// rs1 == rs2 == rs3 != rd, rs1==f5, rs2==f5, rs3==f5, rd==f9, fs1 == 0 and fe1 == 0xfd and fm1 == 0x6174c8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f5; op2:f5; op3:f5; dest:f9; op1val:0x7ee174c8; op2val:0x7ee174c8; op3val:0x7ee174c8; valaddr_reg:x16; val_offset:60; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f9, f5, f5, f5, 0x0, 0, x16, 60, x17, x15, 40, x18)

inst_6:
// rs1 == rs2 == rs3 == rd, rs1==f13, rs2==f13, rs3==f13, rd==f13, fs1 == 0 and fe1 == 0xfc and fm1 == 0x1f9fcf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f13; op2:f13; op3:f13; dest:f13; op1val:0x7e1f9fcf; op2val:0x7e1f9fcf; op3val:0x7e1f9fcf; valaddr_reg:x16; val_offset:72; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f13, f13, f13, 0x0, 0, x16, 72, x17, x15, 48, x18)

inst_7:
// rs1 == rd != rs2 and rs1 == rd != rs3 and rs3 != rs2, rs1==f19, rs2==f1, rs3==f30, rd==f19, fs1 == 0 and fe1 == 0xfd and fm1 == 0x4e908c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f19; op2:f1; op3:f30; dest:f19; op1val:0x7ece908c; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:84; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f19, f19, f1, f30, 0x0, 0, x16, 84, x17, x15, 56, x18)

inst_8:
// rd == rs2 == rs3 != rs1, rs1==f0, rs2==f7, rs3==f7, rd==f7, fs1 == 0 and fe1 == 0xfd and fm1 == 0x0f0540 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f0; op2:f7; op3:f7; dest:f7; op1val:0x7e8f0540; op2val:0x80000000; op3val:0x80000000; valaddr_reg:x16; val_offset:96; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f7, f0, f7, f7, 0x0, 0, x16, 96, x17, x15, 64, x18)

inst_9:
// rs1 == rd == rs3 != rs2, rs1==f6, rs2==f10, rs3==f6, rd==f6, fs1 == 0 and fe1 == 0xfd and fm1 == 0x75d070 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f6; op2:f10; op3:f6; dest:f6; op1val:0x7ef5d070; op2val:0x80000000; op3val:0x7ef5d070; valaddr_reg:x16; val_offset:108; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f6, f6, f10, f6, 0x0, 0, x16, 108, x17, x15, 72, x18)

inst_10:
// rs1 != rs2 and rs1 != rd and rs1 != rs3 and rs2 != rs3 and rs2 != rd and rs3 != rd, rs1==f12, rs2==f3, rs3==f9, rd==f26, fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d5201 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f12; op2:f3; op3:f9; dest:f26; op1val:0x7f2d5201; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f26, f12, f3, f9, 0x0, 0, x16, 120, x17, x15, 80, x18)

inst_11:
// rs2 == rs3 != rs1 and rs2 == rs3 != rd and rd != rs1, rs1==f10, rs2==f0, rs3==f0, rd==f28, fs1 == 0 and fe1 == 0xfe and fm1 == 0x08c5cd and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f0; op3:f0; dest:f28; op1val:0x7f08c5cd; op2val:0x80000000; op3val:0x80000000; valaddr_reg:x16; val_offset:132; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f28, f10, f0, f0, 0x0, 0, x16, 132, x17, x15, 88, x18)

inst_12:
// rs1==f26, rs2==f6, rs3==f15, rd==f12, fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ba8b0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f26; op2:f6; op3:f15; dest:f12; op1val:0x7efba8b0; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:144; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f12, f26, f6, f15, 0x0, 0, x16, 144, x17, x15, 96, x18)

inst_13:
// rs1==f8, rs2==f16, rs3==f10, rd==f2, fs1 == 0 and fe1 == 0xfe and fm1 == 0x06a784 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f8; op2:f16; op3:f10; dest:f2; op1val:0x7f06a784; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:156; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f2, f8, f16, f10, 0x0, 0, x16, 156, x17, x15, 104, x18)

inst_14:
// rs1==f28, rs2==f19, rs3==f26, rd==f1, fs1 == 0 and fe1 == 0xfe and fm1 == 0x0fd579 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f28; op2:f19; op3:f26; dest:f1; op1val:0x7f0fd579; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:168; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f1, f28, f19, f26, 0x0, 0, x16, 168, x17, x15, 112, x18)

inst_15:
// rs1==f24, rs2==f28, rs3==f3, rd==f23, fs1 == 0 and fe1 == 0xfa and fm1 == 0x0109b4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f24; op2:f28; op3:f3; dest:f23; op1val:0x7d0109b4; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:180; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f23, f24, f28, f3, 0x0, 0, x16, 180, x17, x15, 120, x18)

inst_16:
// rs1==f31, rs2==f24, rs3==f11, rd==f16, fs1 == 0 and fe1 == 0xfe and fm1 == 0x2eb100 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f31; op2:f24; op3:f11; dest:f16; op1val:0x7f2eb100; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:192; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f16, f31, f24, f11, 0x0, 0, x16, 192, x17, x15, 128, x18)

inst_17:
// rs1==f29, rs2==f9, rs3==f19, rd==f24, fs1 == 0 and fe1 == 0xfe and fm1 == 0x342e24 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f29; op2:f9; op3:f19; dest:f24; op1val:0x7f342e24; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:204; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f24, f29, f9, f19, 0x0, 0, x16, 204, x17, x15, 136, x18)

inst_18:
// rs1==f30, rs2==f11, rs3==f4, rd==f0, fs1 == 0 and fe1 == 0xfe and fm1 == 0x35ba7d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f30; op2:f11; op3:f4; dest:f0; op1val:0x7f35ba7d; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:216; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f0, f30, f11, f4, 0x0, 0, x16, 216, x17, x15, 144, x18)

inst_19:
// rs1==f25, rs2==f2, rs3==f20, rd==f27, fs1 == 0 and fe1 == 0xfd and fm1 == 0x566899 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f25; op2:f2; op3:f20; dest:f27; op1val:0x7ed66899; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:228; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f27, f25, f2, f20, 0x0, 0, x16, 228, x17, x15, 152, x18)

inst_20:
// rs1==f22, rs2==f30, rs3==f28, rd==f31, fs1 == 0 and fe1 == 0xfe and fm1 == 0x02c05a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f22; op2:f30; op3:f28; dest:f31; op1val:0x7f02c05a; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f31, f22, f30, f28, 0x0, 0, x16, 240, x17, x15, 160, x18)

inst_21:
// rs1==f20, rs2==f17, rs3==f18, rd==f10, fs1 == 0 and fe1 == 0xf9 and fm1 == 0x79d5cb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f20; op2:f17; op3:f18; dest:f10; op1val:0x7cf9d5cb; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:252; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f10, f20, f17, f18, 0x0, 0, x16, 252, x17, x15, 168, x18)

inst_22:
// rs1==f15, rs2==f12, rs3==f8, rd==f5, fs1 == 0 and fe1 == 0xf8 and fm1 == 0x643dc7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f15; op2:f12; op3:f8; dest:f5; op1val:0x7c643dc7; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:264; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f5, f15, f12, f8, 0x0, 0, x16, 264, x17, x15, 176, x18)

inst_23:
// rs1==f21, rs2==f15, rs3==f22, rd==f11, fs1 == 0 and fe1 == 0xfc and fm1 == 0x55d198 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f21; op2:f15; op3:f22; dest:f11; op1val:0x7e55d198; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:276; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f11, f21, f15, f22, 0x0, 0, x16, 276, x17, x15, 184, x18)

inst_24:
// rs1==f4, rs2==f18, rs3==f24, rd==f21, fs1 == 0 and fe1 == 0xfe and fm1 == 0x2765d9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f4; op2:f18; op3:f24; dest:f21; op1val:0x7f2765d9; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:288; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f21, f4, f18, f24, 0x0, 0, x16, 288, x17, x15, 192, x18)

inst_25:
// rs1==f23, rs2==f4, rs3==f25, rd==f18, fs1 == 0 and fe1 == 0xfd and fm1 == 0x0544b2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f23; op2:f4; op3:f25; dest:f18; op1val:0x7e8544b2; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:300; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f18, f23, f4, f25, 0x0, 0, x16, 300, x17, x15, 200, x18)

inst_26:
// rs1==f2, rs2==f21, rs3==f23, rd==f8, fs1 == 0 and fe1 == 0xfd and fm1 == 0x79e697 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f2; op2:f21; op3:f23; dest:f8; op1val:0x7ef9e697; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:312; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f8, f2, f21, f23, 0x0, 0, x16, 312, x17, x15, 208, x18)

inst_27:
// rs1==f9, rs2==f23, rs3==f12, rd==f20, fs1 == 0 and fe1 == 0xfd and fm1 == 0x480329 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f9; op2:f23; op3:f12; dest:f20; op1val:0x7ec80329; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:324; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f20, f9, f23, f12, 0x0, 0, x16, 324, x17, x15, 216, x18)

inst_28:
// rs1==f18, rs2==f29, rs3==f31, rd==f3, fs1 == 0 and fe1 == 0xfb and fm1 == 0x4cef18 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f18; op2:f29; op3:f31; dest:f3; op1val:0x7dccef18; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:336; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f3, f18, f29, f31, 0x0, 0, x16, 336, x17, x15, 224, x18)

inst_29:
// rs1==f16, rs2==f8, rs3==f21, rd==f17, fs1 == 0 and fe1 == 0xfe and fm1 == 0x25618f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f16; op2:f8; op3:f21; dest:f17; op1val:0x7f25618f; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:348; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f17, f16, f8, f21, 0x0, 0, x16, 348, x17, x15, 232, x18)

inst_30:
// rs1==f3, rs2==f26, rs3==f27, rd==f4, fs1 == 0 and fe1 == 0xfe and fm1 == 0x18212b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f3; op2:f26; op3:f27; dest:f4; op1val:0x7f18212b; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f4, f3, f26, f27, 0x0, 0, x16, 360, x17, x15, 240, x18)

inst_31:
// rs1==f7, rs2==f22, rs3==f16, rd==f15, fs1 == 0 and fe1 == 0xfd and fm1 == 0x2df190 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f7; op2:f22; op3:f16; dest:f15; op1val:0x7eadf190; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:372; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f15, f7, f22, f16, 0x0, 0, x16, 372, x17, x15, 248, x18)

inst_32:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x52faef and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e52faef; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:384; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 384, x17, x15, 256, x18)

inst_33:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x79e4a2 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x44b12c and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3ffffe and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d79e4a2; op2val:0x4144b12c; op3val:0xff3ffffe; valaddr_reg:x16; val_offset:396; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 396, x17, x15, 264, x18)

inst_34:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1854d1 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x215521 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3fffff and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e9854d1; op2val:0x40215521; op3val:0xff3fffff; valaddr_reg:x16; val_offset:408; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 408, x17, x15, 272, x18)

inst_35:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23f4c3 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x15e4cd and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3ffffe and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f23f4c3; op2val:0x3f95e4cd; op3val:0xff3ffffe; valaddr_reg:x16; val_offset:420; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 420, x17, x15, 280, x18)

inst_36:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x19e0a5 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x1fb61f and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3fffff and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d99e0a5; op2val:0x411fb61f; op3val:0xff3fffff; valaddr_reg:x16; val_offset:432; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 432, x17, x15, 288, x18)

inst_37:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3bdff9 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x02cf78 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3ffffe and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3bdff9; op2val:0x3f82cf78; op3val:0xff3ffffe; valaddr_reg:x16; val_offset:444; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 444, x17, x15, 296, x18)

inst_38:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5706d8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x6495e4 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3fffff and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e5706d8; op2val:0x406495e4; op3val:0xff3fffff; valaddr_reg:x16; val_offset:456; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 456, x17, x15, 304, x18)

inst_39:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27bdd4 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1282d8 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3fffff and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f27bdd4; op2val:0x3f9282d8; op3val:0xff3fffff; valaddr_reg:x16; val_offset:468; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 468, x17, x15, 312, x18)

inst_40:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x795162 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x452558 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3fffff and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef95162; op2val:0x3fc52558; op3val:0xff3fffff; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 320, x18)

inst_41:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x36a2e9 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x068ffc and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3fffff and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7db6a2e9; op2val:0x41068ffc; op3val:0xff3fffff; valaddr_reg:x16; val_offset:492; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 492, x17, x15, 328, x18)

inst_42:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x16325d and fs2 == 0 and fe2 == 0x82 and fm2 == 0x23a019 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3fffff and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d96325d; op2val:0x4123a019; op3val:0xff3fffff; valaddr_reg:x16; val_offset:504; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 504, x17, x15, 336, x18)

inst_43:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4ae285 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x7243f7 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3fffff and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ecae285; op2val:0x3ff243f7; op3val:0xff3fffff; valaddr_reg:x16; val_offset:516; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 516, x17, x15, 344, x18)

inst_44:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1df6e4 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x1b944e and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3fffff and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1df6e4; op2val:0x3f9b944e; op3val:0xff3fffff; valaddr_reg:x16; val_offset:528; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 528, x17, x15, 352, x18)

inst_45:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x67c20e and fs2 == 0 and fe2 == 0x87 and fm2 == 0x54154f and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3ffffe and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ae7c20e; op2val:0x43d4154f; op3val:0xff3ffffe; valaddr_reg:x16; val_offset:540; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 540, x17, x15, 360, x18)

inst_46:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x09b9ea and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3270e2 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3fffff and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f09b9ea; op2val:0x3fb270e2; op3val:0xff3fffff; valaddr_reg:x16; val_offset:552; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 552, x17, x15, 368, x18)

inst_47:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x23fca7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e23fca7; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:564; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 564, x17, x15, 376, x18)

inst_48:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x72d2f3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e72d2f3; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:576; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 576, x17, x15, 384, x18)

inst_49:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02465e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f02465e; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:588; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 588, x17, x15, 392, x18)

inst_50:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a4c33 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e9a4c33; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 400, x18)

inst_51:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3d783f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3d783f; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:612; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 612, x17, x15, 408, x18)

inst_52:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b4e72 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0b4e72; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:624; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 624, x17, x15, 416, x18)

inst_53:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x003494 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d803494; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:636; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 636, x17, x15, 424, x18)

inst_54:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x731b27 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef31b27; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:648; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 648, x17, x15, 432, x18)

inst_55:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3fe381 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3fe381; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:660; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 660, x17, x15, 440, x18)

inst_56:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x10628e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e10628e; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:672; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 672, x17, x15, 448, x18)

inst_57:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1bfbd1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1bfbd1; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:684; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 684, x17, x15, 456, x18)

inst_58:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2800cd and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2800cd; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:696; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 696, x17, x15, 464, x18)

inst_59:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b5638 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1b5638; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:708; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 708, x17, x15, 472, x18)

inst_60:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x33495f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb3495f; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 480, x18)

inst_61:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6fa925 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e6fa925; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:732; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 732, x17, x15, 488, x18)

inst_62:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3deb73 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ebdeb73; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:744; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 744, x17, x15, 496, x18)

inst_63:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x29b43a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f29b43a; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:756; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 756, x17, x15, 504, x18)

inst_64:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x110d95 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f110d95; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:768; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 768, x17, x15, 512, x18)

inst_65:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x579458 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ed79458; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:780; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 780, x17, x15, 520, x18)

inst_66:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3b1c27 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ebb1c27; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:792; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 792, x17, x15, 528, x18)

inst_67:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a968c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eca968c; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:804; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 804, x17, x15, 536, x18)

inst_68:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7234e1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7df234e1; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:816; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 816, x17, x15, 544, x18)

inst_69:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x471615 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e471615; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:828; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 828, x17, x15, 552, x18)

inst_70:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b03e6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eab03e6; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 560, x18)

inst_71:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0fb50a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d0fb50a; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:852; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 852, x17, x15, 568, x18)

inst_72:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7e4880 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7efe4880; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:864; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 864, x17, x15, 576, x18)

inst_73:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x209957 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ea09957; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:876; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 876, x17, x15, 584, x18)

inst_74:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x06c054 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f06c054; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:888; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 888, x17, x15, 592, x18)

inst_75:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a7876 and fs2 == 0 and fe2 == 0x2b and fm2 == 0x54218c and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e9a7876; op2val:0x15d4218c; op3val:0x71bffff8; valaddr_reg:x16; val_offset:900; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 900, x17, x15, 600, x18)

inst_76:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f21ce and fs2 == 0 and fe2 == 0x2b and fm2 == 0x4deac2 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e9f21ce; op2val:0x15cdeac2; op3val:0x71bffff8; valaddr_reg:x16; val_offset:912; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 912, x17, x15, 608, x18)

inst_77:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5a2b8e and fs2 == 0 and fe2 == 0x2b and fm2 == 0x1631d8 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eda2b8e; op2val:0x159631d8; op3val:0x71bffff8; valaddr_reg:x16; val_offset:924; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 924, x17, x15, 616, x18)

inst_78:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2814cf and fs2 == 0 and fe2 == 0x2a and fm2 == 0x42f40b and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2814cf; op2val:0x1542f40b; op3val:0x71bffff8; valaddr_reg:x16; val_offset:936; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 936, x17, x15, 624, x18)

inst_79:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x11669e and fs2 == 0 and fe2 == 0x2b and fm2 == 0x615cfa and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e91669e; op2val:0x15e15cfa; op3val:0x71bffff8; valaddr_reg:x16; val_offset:948; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 948, x17, x15, 632, x18)

inst_80:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x74c2e8 and fs2 == 0 and fe2 == 0x2b and fm2 == 0x05e099 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef4c2e8; op2val:0x1585e099; op3val:0x71bffff8; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 640, x18)

inst_81:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x37df17 and fs2 == 0 and fe2 == 0x2c and fm2 == 0x323622 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e37df17; op2val:0x16323622; op3val:0x71bffff8; valaddr_reg:x16; val_offset:972; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 972, x17, x15, 648, x18)

inst_82:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x006905 and fs2 == 1 and fe2 == 0x2b and fm2 == 0x7f2ea0 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e806905; op2val:0x95ff2ea0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:984; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 984, x17, x15, 656, x18)

inst_83:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x13b197 and fs2 == 1 and fe2 == 0x2c and fm2 == 0x5ddd52 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e13b197; op2val:0x965ddd52; op3val:0x71bffff8; valaddr_reg:x16; val_offset:996; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 996, x17, x15, 664, x18)

inst_84:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x15d64c and fs2 == 1 and fe2 == 0x33 and fm2 == 0x5ab0da and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7a95d64c; op2val:0x99dab0da; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1008; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1008, x17, x15, 672, x18)

inst_85:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x79eb78 and fs2 == 1 and fe2 == 0x2b and fm2 == 0x031d33 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef9eb78; op2val:0x95831d33; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1020; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1020, x17, x15, 680, x18)

inst_86:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1f22f1 and fs2 == 1 and fe2 == 0x2b and fm2 == 0x4de949 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e9f22f1; op2val:0x95cde949; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1032; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1032, x17, x15, 688, x18)

inst_87:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x14ffa5 and fs2 == 1 and fe2 == 0x2b and fm2 == 0x5bebe8 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e94ffa5; op2val:0x95dbebe8; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1044; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1044, x17, x15, 696, x18)

inst_88:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x09661e and fs2 == 1 and fe2 == 0x2a and fm2 == 0x6e7cf1 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f09661e; op2val:0x956e7cf1; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1056; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1056, x17, x15, 704, x18)

inst_89:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6e7e55 and fs2 == 1 and fe2 == 0x2b and fm2 == 0x096551 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eee7e55; op2val:0x95896551; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1068; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1068, x17, x15, 712, x18)

inst_90:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x735bf2 and fs2 == 1 and fe2 == 0x2b and fm2 == 0x06a612 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef35bf2; op2val:0x9586a612; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 720, x18)

inst_91:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x35ce50 and fs2 == 1 and fe2 == 0x2a and fm2 == 0x343c75 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f35ce50; op2val:0x95343c75; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1092; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1092, x17, x15, 728, x18)

inst_92:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x09eee9 and fs2 == 1 and fe2 == 0x2b and fm2 == 0x6d906e and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e89eee9; op2val:0x95ed906e; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1104; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1104, x17, x15, 736, x18)

inst_93:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5d1719 and fs2 == 1 and fe2 == 0x2c and fm2 == 0x143603 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e5d1719; op2val:0x96143603; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1116; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1116, x17, x15, 744, x18)

inst_94:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x07412e and fs2 == 1 and fe2 == 0x2b and fm2 == 0x7244dd and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e87412e; op2val:0x95f244dd; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1128; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1128, x17, x15, 752, x18)

inst_95:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x370036 and fs2 == 1 and fe2 == 0x2a and fm2 == 0x330f2e and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f370036; op2val:0x95330f2e; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1140; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1140, x17, x15, 760, x18)

inst_96:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x386b8e and fs2 == 0 and fe2 == 0x2c and fm2 == 0x31ae65 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e386b8e; op2val:0x1631ae65; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1152; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1152, x17, x15, 768, x18)

inst_97:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x57b7df and fs2 == 0 and fe2 == 0x2c and fm2 == 0x17e6de and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e57b7df; op2val:0x1617e6de; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1164; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1164, x17, x15, 776, x18)

inst_98:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0c612e and fs2 == 0 and fe2 == 0x2e and fm2 == 0x696c97 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d0c612e; op2val:0x17696c97; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1176; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1176, x17, x15, 784, x18)

inst_99:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x00fdf0 and fs2 == 0 and fe2 == 0x2b and fm2 == 0x7e0807 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e80fdf0; op2val:0x15fe0807; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1188; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1188, x17, x15, 792, x18)

inst_100:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0e61dc and fs2 == 0 and fe2 == 0x2a and fm2 == 0x662419 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0e61dc; op2val:0x15662419; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 800, x18)

inst_101:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x18d146 and fs2 == 0 and fe2 == 0x30 and fm2 == 0x566cfd and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7c18d146; op2val:0x18566cfd; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1212; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1212, x17, x15, 808, x18)

inst_102:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x57453d and fs2 == 0 and fe2 == 0x2b and fm2 == 0x1837c2 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ed7453d; op2val:0x159837c2; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1224; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1224, x17, x15, 816, x18)

inst_103:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40b75e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e40b75e; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1236; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1236, x17, x15, 824, x18)

inst_104:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20d4b8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f20d4b8; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1248; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1248, x17, x15, 832, x18)

inst_105:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x092570 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e892570; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1260; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1260, x17, x15, 840, x18)

inst_106:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6f30c5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e6f30c5; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1272; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1272, x17, x15, 848, x18)

inst_107:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x434d6c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ec34d6c; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1284; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1284, x17, x15, 856, x18)

inst_108:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5a8a0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eda8a0e; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1296; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1296, x17, x15, 864, x18)

inst_109:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d6756 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e9d6756; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1308; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1308, x17, x15, 872, x18)

inst_110:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x351aa9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb51aa9; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 880, x18)

inst_111:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0642e8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e0642e8; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1332; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1332, x17, x15, 888, x18)

inst_112:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x29d93c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ea9d93c; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1344; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1344, x17, x15, 896, x18)

inst_113:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x652afa and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee52afa; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1356; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1356, x17, x15, 904, x18)

inst_114:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x408722 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e408722; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1368; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1368, x17, x15, 912, x18)

inst_115:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0372b0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8372b0; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1380; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1380, x17, x15, 920, x18)

inst_116:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x22524e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f22524e; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1392; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1392, x17, x15, 928, x18)

inst_117:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x01d4ab and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f01d4ab; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1404; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1404, x17, x15, 936, x18)

inst_118:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x32551e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d32551e; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1416; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1416, x17, x15, 944, x18)

inst_119:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3993cf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3993cf; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1428; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1428, x17, x15, 952, x18)

inst_120:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0125a0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0125a0; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 960, x18)

inst_121:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x021e3b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e021e3b; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1452; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1452, x17, x15, 968, x18)

inst_122:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x30593a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f30593a; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1464; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1464, x17, x15, 976, x18)

inst_123:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x20f56c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f20f56c; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1476; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1476, x17, x15, 984, x18)

inst_124:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c7784 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0c7784; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1488; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1488, x17, x15, 992, x18)

inst_125:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x09af6b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e89af6b; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1500; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1500, x17, x15, 1000, x18)

inst_126:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x191af1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e191af1; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1512; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1512, x17, x15, 1008, x18)

inst_127:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3dbdbb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3dbdbb; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1524; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1524, x17, x15, 1016, x18)

inst_128:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1b03d8 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d9b03d8; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1536; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1536, x17, x15, 1024, x18)

inst_129:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x71f159 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7cf1f159; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1548; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1548, x17, x15, 1032, x18)

inst_130:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41657b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ec1657b; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1040, x18)

inst_131:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0a7bf0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e0a7bf0; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1572; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1572, x17, x15, 1048, x18)

inst_132:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x06834b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e86834b; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1584; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1584, x17, x15, 1056, x18)

inst_133:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x786b62 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef86b62; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1596; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1596, x17, x15, 1064, x18)

inst_134:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2998cc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e2998cc; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1608; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1608, x17, x15, 1072, x18)

inst_135:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x479e53 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e479e53; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1620; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1620, x17, x15, 1080, x18)

inst_136:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1be782 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d9be782; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1632; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1632, x17, x15, 1088, x18)

inst_137:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x237008 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ea37008; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1644; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1644, x17, x15, 1096, x18)

inst_138:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x0bf9e4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7c8bf9e4; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1656; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1656, x17, x15, 1104, x18)

inst_139:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x33e5e8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f33e5e8; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1668; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1668, x17, x15, 1112, x18)

inst_140:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19be4b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f19be4b; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1120, x18)

inst_141:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x21b906 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e21b906; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1692; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1692, x17, x15, 1128, x18)

inst_142:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3e4d8f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7dbe4d8f; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1704; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1704, x17, x15, 1136, x18)

inst_143:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0e0ef6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e0e0ef6; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1716; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1716, x17, x15, 1144, x18)

inst_144:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x38849b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f38849b; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1728; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1728, x17, x15, 1152, x18)

inst_145:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x04ef49 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7c84ef49; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1740; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1740, x17, x15, 1160, x18)

inst_146:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5f97b9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7cdf97b9; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1752; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1752, x17, x15, 1168, x18)

inst_147:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3c425a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3c425a; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1764; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1764, x17, x15, 1176, x18)

inst_148:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0e223c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8e223c; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1776; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1776, x17, x15, 1184, x18)

inst_149:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x163972 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e963972; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1788; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1788, x17, x15, 1192, x18)

inst_150:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d2a79 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7edd2a79; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1200, x18)

inst_151:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68d57d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee8d57d; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1812; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1812, x17, x15, 1208, x18)

inst_152:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x73d707 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef3d707; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1824; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1824, x17, x15, 1216, x18)

inst_153:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x24066c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ca4066c; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1836; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1836, x17, x15, 1224, x18)

inst_154:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02ac50 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f02ac50; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1848; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1848, x17, x15, 1232, x18)

inst_155:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4d21cb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ecd21cb; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1860; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1860, x17, x15, 1240, x18)

inst_156:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2eb91a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2eb91a; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1872; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1872, x17, x15, 1248, x18)

inst_157:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5c5d53 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7edc5d53; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1884; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1884, x17, x15, 1256, x18)

inst_158:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x0af584 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d0af584; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1896; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1896, x17, x15, 1264, x18)

inst_159:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x05f3e7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f05f3e7; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1908; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1908, x17, x15, 1272, x18)

inst_160:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x60ce7f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7de0ce7f; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1280, x18)

inst_161:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1a887c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d9a887c; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1932; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1932, x17, x15, 1288, x18)

inst_162:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ca7c2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1ca7c2; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1944; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1944, x17, x15, 1296, x18)

inst_163:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7f6343 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e7f6343; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1956; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1956, x17, x15, 1304, x18)

inst_164:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x188f57 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f188f57; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1968; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1968, x17, x15, 1312, x18)

inst_165:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x29504d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e29504d; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1980; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1980, x17, x15, 1320, x18)

inst_166:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x33eb13 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7db3eb13; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1992; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1992, x17, x15, 1328, x18)

inst_167:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c7228 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0c7228; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:2004; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 2004, x17, x15, 1336, x18)

inst_168:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3aa6be and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e3aa6be; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:2016; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 2016, x17, x15, 1344, x18)

inst_169:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x224140 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f224140; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:2028; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 2028, x17, x15, 1352, x18)
addi x16,x16,2040

inst_170:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x71fa00 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef1fa00; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 1360, x18)

inst_171:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3acb68 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ebacb68; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:12; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 12, x17, x15, 1368, x18)

inst_172:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b4f07 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eeb4f07; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:24; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 24, x17, x15, 1376, x18)

inst_173:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x7d0cc0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d7d0cc0; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:36; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 36, x17, x15, 1384, x18)

inst_174:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x185183 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f185183; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:48; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 48, x17, x15, 1392, x18)

inst_175:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x300d7e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f300d7e; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:60; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 60, x17, x15, 1400, x18)

inst_176:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3f4810 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3f4810; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:72; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 72, x17, x15, 1408, x18)

inst_177:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7d88c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7efd88c2; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:84; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 84, x17, x15, 1416, x18)

inst_178:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2d0427 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ead0427; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:96; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 96, x17, x15, 1424, x18)

inst_179:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5e9a56 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ede9a56; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:108; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 108, x17, x15, 1432, x18)

inst_180:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x365ad7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f365ad7; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 1440, x18)

inst_181:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x627bd0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee27bd0; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:132; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 132, x17, x15, 1448, x18)

inst_182:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2bd8f4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2bd8f4; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:144; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 144, x17, x15, 1456, x18)

inst_183:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2319ee and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2319ee; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:156; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 156, x17, x15, 1464, x18)

inst_184:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1bd52c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1bd52c; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:168; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 168, x17, x15, 1472, x18)

inst_185:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x53afdf and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e53afdf; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:180; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 180, x17, x15, 1480, x18)

inst_186:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x076a16 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f076a16; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:192; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 192, x17, x15, 1488, x18)

inst_187:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1641f7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e9641f7; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:204; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 204, x17, x15, 1496, x18)

inst_188:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4f9722 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ecf9722; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:216; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 216, x17, x15, 1504, x18)

inst_189:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x313b58 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f313b58; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:228; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 228, x17, x15, 1512, x18)

inst_190:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c7300 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2c7300; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 1520, x18)

inst_191:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x21c09a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f21c09a; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:252; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 252, x17, x15, 1528, x18)

inst_192:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x314a05 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f314a05; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:264; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 264, x17, x15, 1536, x18)

inst_193:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x285703 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f285703; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:276; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 276, x17, x15, 1544, x18)

inst_194:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1175bf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1175bf; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:288; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 288, x17, x15, 1552, x18)

inst_195:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x09f85f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d89f85f; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:300; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 300, x17, x15, 1560, x18)

inst_196:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x36fce6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb6fce6; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:312; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 312, x17, x15, 1568, x18)

inst_197:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7c283d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7efc283d; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:324; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 324, x17, x15, 1576, x18)

inst_198:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6b4e0d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eeb4e0d; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:336; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 336, x17, x15, 1584, x18)

inst_199:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0f6884 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e0f6884; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:348; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 348, x17, x15, 1592, x18)

inst_200:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1173d9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e1173d9; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 1600, x18)

inst_201:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5ef919 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e5ef919; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:372; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 372, x17, x15, 1608, x18)

inst_202:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5d0ccb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7edd0ccb; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:384; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 384, x17, x15, 1616, x18)

inst_203:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x13cd52 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e93cd52; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:396; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 396, x17, x15, 1624, x18)

inst_204:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x64f961 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee4f961; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:408; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 408, x17, x15, 1632, x18)

inst_205:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ae033 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eaae033; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:420; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 420, x17, x15, 1640, x18)

inst_206:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x61a51b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee1a51b; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:432; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 432, x17, x15, 1648, x18)

inst_207:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x679f8e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee79f8e; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:444; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 444, x17, x15, 1656, x18)

inst_208:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x390e97 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f390e97; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:456; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 456, x17, x15, 1664, x18)

inst_209:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4f7809 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ecf7809; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:468; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 468, x17, x15, 1672, x18)

inst_210:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c60ac and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1c60ac; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1680, x18)

inst_211:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5237a1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ed237a1; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:492; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 492, x17, x15, 1688, x18)

inst_212:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x07a8e7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f07a8e7; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:504; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 504, x17, x15, 1696, x18)

inst_213:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x53afc5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ed3afc5; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:516; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 516, x17, x15, 1704, x18)

inst_214:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x278349 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7da78349; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:528; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 528, x17, x15, 1712, x18)

inst_215:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x331aa5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f331aa5; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:540; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 540, x17, x15, 1720, x18)

inst_216:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x430c98 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ec30c98; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:552; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 552, x17, x15, 1728, x18)

inst_217:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x75cd4b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e75cd4b; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:564; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 564, x17, x15, 1736, x18)

inst_218:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x772129 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d772129; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:576; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 576, x17, x15, 1744, x18)

inst_219:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c0532 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eac0532; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:588; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 588, x17, x15, 1752, x18)

inst_220:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a35e0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1a35e0; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1760, x18)

inst_221:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x39c489 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f39c489; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:612; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 612, x17, x15, 1768, x18)

inst_222:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3741cc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e3741cc; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:624; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 624, x17, x15, 1776, x18)

inst_223:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x59ec92 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ed9ec92; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:636; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 636, x17, x15, 1784, x18)

inst_224:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x12bd51 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e12bd51; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:648; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 648, x17, x15, 1792, x18)

inst_225:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x272166 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f272166; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:660; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 660, x17, x15, 1800, x18)

inst_226:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x79c1c6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e79c1c6; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:672; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 672, x17, x15, 1808, x18)

inst_227:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3b52d3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e3b52d3; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:684; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 684, x17, x15, 1816, x18)

inst_228:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x269468 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f269468; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:696; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 696, x17, x15, 1824, x18)

inst_229:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3d88ad and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ebd88ad; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:708; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 708, x17, x15, 1832, x18)

inst_230:
// fs1 == 0 and fe1 == 0xf4 and fm1 == 0x60affa and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7a60affa; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1840, x18)

inst_231:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x004910 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f004910; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:732; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 732, x17, x15, 1848, x18)

inst_232:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1e5ec7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1e5ec7; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:744; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 744, x17, x15, 1856, x18)

inst_233:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1925f2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e9925f2; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:756; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 756, x17, x15, 1864, x18)

inst_234:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a2eec and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0a2eec; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:768; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 768, x17, x15, 1872, x18)

inst_235:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x2c8b5e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7c2c8b5e; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:780; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 780, x17, x15, 1880, x18)

inst_236:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x52b355 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ed2b355; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:792; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 792, x17, x15, 1888, x18)

inst_237:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a90b9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1a90b9; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:804; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 804, x17, x15, 1896, x18)

inst_238:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x480ede and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e480ede; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:816; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 816, x17, x15, 1904, x18)

inst_239:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2623b6 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2623b6; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:828; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 828, x17, x15, 1912, x18)

inst_240:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x372bf7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb72bf7; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1920, x18)

inst_241:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3996a2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3996a2; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:852; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 852, x17, x15, 1928, x18)

inst_242:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2f4c51 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2f4c51; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:864; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 864, x17, x15, 1936, x18)

inst_243:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a94a1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eea94a1; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:876; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 876, x17, x15, 1944, x18)

inst_244:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x26b8d3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ea6b8d3; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:888; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 888, x17, x15, 1952, x18)

inst_245:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1aad53 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d9aad53; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:900; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 900, x17, x15, 1960, x18)

inst_246:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x354d84 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb54d84; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:912; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 912, x17, x15, 1968, x18)

inst_247:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03532d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f03532d; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:924; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 924, x17, x15, 1976, x18)

inst_248:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c93b2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2c93b2; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:936; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 936, x17, x15, 1984, x18)

inst_249:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c20b0 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0c20b0; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:948; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 948, x17, x15, 1992, x18)

inst_250:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6e317d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e6e317d; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 2000, x18)

inst_251:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d3742 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2d3742; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:972; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 972, x17, x15, 2008, x18)

inst_252:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b8fcb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1b8fcb; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:984; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 984, x17, x15, 2016, x18)

inst_253:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3cb1de and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3cb1de; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:996; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 996, x17, x15, 2024, x18)
RVTEST_SIGBASE(x15,signature_x15_2)

inst_254:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2eabd8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2eabd8; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1008; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1008, x17, x15, 0, x18)

inst_255:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x40638c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e40638c; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1020; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1020, x17, x15, 8, x18)

inst_256:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6d7424 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eed7424; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1032; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1032, x17, x15, 16, x18)

inst_257:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x111d49 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f111d49; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1044; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1044, x17, x15, 24, x18)

inst_258:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x587392 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e587392; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1056; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1056, x17, x15, 32, x18)

inst_259:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41ccbc and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ec1ccbc; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1068; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1068, x17, x15, 40, x18)

inst_260:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2e5b90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2e5b90; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 48, x18)

inst_261:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6004c9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee004c9; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1092; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1092, x17, x15, 56, x18)

inst_262:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x370362 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb70362; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1104; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1104, x17, x15, 64, x18)

inst_263:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x68f1b4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e68f1b4; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1116; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1116, x17, x15, 72, x18)

inst_264:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x167d44 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f167d44; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1128; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1128, x17, x15, 80, x18)

inst_265:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1b7ea4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e9b7ea4; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1140; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1140, x17, x15, 88, x18)

inst_266:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x445459 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ec45459; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1152; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1152, x17, x15, 96, x18)

inst_267:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x46d91a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e46d91a; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1164; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1164, x17, x15, 104, x18)

inst_268:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x217fdd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ea17fdd; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1176; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1176, x17, x15, 112, x18)

inst_269:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1186f9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1186f9; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1188; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1188, x17, x15, 120, x18)

inst_270:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x222105 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f222105; op2val:0x0; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 128, x18)

inst_271:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x67f8b9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7de7f8b9; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1212; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1212, x17, x15, 136, x18)

inst_272:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x5aa799 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7bdaa799; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1224; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1224, x17, x15, 144, x18)

inst_273:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6174c8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee174c8; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1236; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1236, x17, x15, 152, x18)

inst_274:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1f9fcf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e1f9fcf; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1248; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1248, x17, x15, 160, x18)

inst_275:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0f0540 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8f0540; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1260; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1260, x17, x15, 168, x18)

inst_276:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x75d070 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef5d070; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1272; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1272, x17, x15, 176, x18)

inst_277:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x08c5cd and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f08c5cd; op2val:0x80000000; op3val:0x71bffff8; valaddr_reg:x16; val_offset:1284; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1284, x17, x15, 184, x18)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
test_fp:
.word 0x7f222105
.word 0x0
.word 0x7f222105
.word 0x7f179b8e
.word 0x80000000
.word 0x71bffff8
.word 0x7e800760
.word 0x80000000
.word 0x71bffff8
.word 0x7de7f8b9
.word 0x7de7f8b9
.word 0x71bffff8
.word 0x7bdaa799
.word 0x7bdaa799
.word 0x71bffff8
.word 0x7ee174c8
.word 0x7ee174c8
.word 0x7ee174c8
.word 0x7e1f9fcf
.word 0x7e1f9fcf
.word 0x7e1f9fcf
.word 0x7ece908c
.word 0x80000000
.word 0x71bffff8
.word 0x7e8f0540
.word 0x80000000
.word 0x80000000
.word 0x7ef5d070
.word 0x80000000
.word 0x7ef5d070
.word 0x7f2d5201
.word 0x80000000
.word 0x71bffff8
.word 0x7f08c5cd
.word 0x80000000
.word 0x80000000
.word 0x7efba8b0
.word 0x80000000
.word 0x71bffff8
.word 0x7f06a784
.word 0x80000000
.word 0x71bffff8
.word 0x7f0fd579
.word 0x80000000
.word 0x71bffff8
.word 0x7d0109b4
.word 0x80000000
.word 0x71bffff8
.word 0x7f2eb100
.word 0x80000000
.word 0x71bffff8
.word 0x7f342e24
.word 0x0
.word 0x71bffff8
.word 0x7f35ba7d
.word 0x0
.word 0x71bffff8
.word 0x7ed66899
.word 0x0
.word 0x71bffff8
.word 0x7f02c05a
.word 0x0
.word 0x71bffff8
.word 0x7cf9d5cb
.word 0x0
.word 0x71bffff8
.word 0x7c643dc7
.word 0x0
.word 0x71bffff8
.word 0x7e55d198
.word 0x0
.word 0x71bffff8
.word 0x7f2765d9
.word 0x0
.word 0x71bffff8
.word 0x7e8544b2
.word 0x0
.word 0x71bffff8
.word 0x7ef9e697
.word 0x0
.word 0x71bffff8
.word 0x7ec80329
.word 0x0
.word 0x71bffff8
.word 0x7dccef18
.word 0x0
.word 0x71bffff8
.word 0x7f25618f
.word 0x0
.word 0x71bffff8
.word 0x7f18212b
.word 0x0
.word 0x71bffff8
.word 0x7eadf190
.word 0x0
.word 0x71bffff8
.word 0x7e52faef
.word 0x0
.word 0x71bffff8
.word 0x7d79e4a2
.word 0x4144b12c
.word 0xff3ffffe
.word 0x7e9854d1
.word 0x40215521
.word 0xff3fffff
.word 0x7f23f4c3
.word 0x3f95e4cd
.word 0xff3ffffe
.word 0x7d99e0a5
.word 0x411fb61f
.word 0xff3fffff
.word 0x7f3bdff9
.word 0x3f82cf78
.word 0xff3ffffe
.word 0x7e5706d8
.word 0x406495e4
.word 0xff3fffff
.word 0x7f27bdd4
.word 0x3f9282d8
.word 0xff3fffff
.word 0x7ef95162
.word 0x3fc52558
.word 0xff3fffff
.word 0x7db6a2e9
.word 0x41068ffc
.word 0xff3fffff
.word 0x7d96325d
.word 0x4123a019
.word 0xff3fffff
.word 0x7ecae285
.word 0x3ff243f7
.word 0xff3fffff
.word 0x7f1df6e4
.word 0x3f9b944e
.word 0xff3fffff
.word 0x7ae7c20e
.word 0x43d4154f
.word 0xff3ffffe
.word 0x7f09b9ea
.word 0x3fb270e2
.word 0xff3fffff
.word 0x7e23fca7
.word 0x0
.word 0x71bffff8
.word 0x7e72d2f3
.word 0x0
.word 0x71bffff8
.word 0x7f02465e
.word 0x0
.word 0x71bffff8
.word 0x7e9a4c33
.word 0x0
.word 0x71bffff8
.word 0x7f3d783f
.word 0x0
.word 0x71bffff8
.word 0x7f0b4e72
.word 0x0
.word 0x71bffff8
.word 0x7d803494
.word 0x0
.word 0x71bffff8
.word 0x7ef31b27
.word 0x80000000
.word 0x71bffff8
.word 0x7f3fe381
.word 0x80000000
.word 0x71bffff8
.word 0x7e10628e
.word 0x80000000
.word 0x71bffff8
.word 0x7f1bfbd1
.word 0x80000000
.word 0x71bffff8
.word 0x7f2800cd
.word 0x80000000
.word 0x71bffff8
.word 0x7f1b5638
.word 0x80000000
.word 0x71bffff8
.word 0x7eb3495f
.word 0x80000000
.word 0x71bffff8
.word 0x7e6fa925
.word 0x80000000
.word 0x71bffff8
.word 0x7ebdeb73
.word 0x80000000
.word 0x71bffff8
.word 0x7f29b43a
.word 0x80000000
.word 0x71bffff8
.word 0x7f110d95
.word 0x80000000
.word 0x71bffff8
.word 0x7ed79458
.word 0x80000000
.word 0x71bffff8
.word 0x7ebb1c27
.word 0x80000000
.word 0x71bffff8
.word 0x7eca968c
.word 0x80000000
.word 0x71bffff8
.word 0x7df234e1
.word 0x0
.word 0x71bffff8
.word 0x7e471615
.word 0x0
.word 0x71bffff8
.word 0x7eab03e6
.word 0x0
.word 0x71bffff8
.word 0x7d0fb50a
.word 0x0
.word 0x71bffff8
.word 0x7efe4880
.word 0x0
.word 0x71bffff8
.word 0x7ea09957
.word 0x0
.word 0x71bffff8
.word 0x7f06c054
.word 0x0
.word 0x71bffff8
.word 0x7e9a7876
.word 0x15d4218c
.word 0x71bffff8
.word 0x7e9f21ce
.word 0x15cdeac2
.word 0x71bffff8
.word 0x7eda2b8e
.word 0x159631d8
.word 0x71bffff8
.word 0x7f2814cf
.word 0x1542f40b
.word 0x71bffff8
.word 0x7e91669e
.word 0x15e15cfa
.word 0x71bffff8
.word 0x7ef4c2e8
.word 0x1585e099
.word 0x71bffff8
.word 0x7e37df17
.word 0x16323622
.word 0x71bffff8
.word 0x7e806905
.word 0x95ff2ea0
.word 0x71bffff8
.word 0x7e13b197
.word 0x965ddd52
.word 0x71bffff8
.word 0x7a95d64c
.word 0x99dab0da
.word 0x71bffff8
.word 0x7ef9eb78
.word 0x95831d33
.word 0x71bffff8
.word 0x7e9f22f1
.word 0x95cde949
.word 0x71bffff8
.word 0x7e94ffa5
.word 0x95dbebe8
.word 0x71bffff8
.word 0x7f09661e
.word 0x956e7cf1
.word 0x71bffff8
.word 0x7eee7e55
.word 0x95896551
.word 0x71bffff8
.word 0x7ef35bf2
.word 0x9586a612
.word 0x71bffff8
.word 0x7f35ce50
.word 0x95343c75
.word 0x71bffff8
.word 0x7e89eee9
.word 0x95ed906e
.word 0x71bffff8
.word 0x7e5d1719
.word 0x96143603
.word 0x71bffff8
.word 0x7e87412e
.word 0x95f244dd
.word 0x71bffff8
.word 0x7f370036
.word 0x95330f2e
.word 0x71bffff8
.word 0x7e386b8e
.word 0x1631ae65
.word 0x71bffff8
.word 0x7e57b7df
.word 0x1617e6de
.word 0x71bffff8
.word 0x7d0c612e
.word 0x17696c97
.word 0x71bffff8
.word 0x7e80fdf0
.word 0x15fe0807
.word 0x71bffff8
.word 0x7f0e61dc
.word 0x15662419
.word 0x71bffff8
.word 0x7c18d146
.word 0x18566cfd
.word 0x71bffff8
.word 0x7ed7453d
.word 0x159837c2
.word 0x71bffff8
.word 0x7e40b75e
.word 0x0
.word 0x71bffff8
.word 0x7f20d4b8
.word 0x0
.word 0x71bffff8
.word 0x7e892570
.word 0x0
.word 0x71bffff8
.word 0x7e6f30c5
.word 0x0
.word 0x71bffff8
.word 0x7ec34d6c
.word 0x0
.word 0x71bffff8
.word 0x7eda8a0e
.word 0x0
.word 0x71bffff8
.word 0x7e9d6756
.word 0x0
.word 0x71bffff8
.word 0x7eb51aa9
.word 0x80000000
.word 0x71bffff8
.word 0x7e0642e8
.word 0x80000000
.word 0x71bffff8
.word 0x7ea9d93c
.word 0x80000000
.word 0x71bffff8
.word 0x7ee52afa
.word 0x80000000
.word 0x71bffff8
.word 0x7e408722
.word 0x80000000
.word 0x71bffff8
.word 0x7e8372b0
.word 0x80000000
.word 0x71bffff8
.word 0x7f22524e
.word 0x80000000
.word 0x71bffff8
.word 0x7f01d4ab
.word 0x80000000
.word 0x71bffff8
.word 0x7d32551e
.word 0x80000000
.word 0x71bffff8
.word 0x7f3993cf
.word 0x80000000
.word 0x71bffff8
.word 0x7f0125a0
.word 0x80000000
.word 0x71bffff8
.word 0x7e021e3b
.word 0x80000000
.word 0x71bffff8
.word 0x7f30593a
.word 0x80000000
.word 0x71bffff8
.word 0x7f20f56c
.word 0x80000000
.word 0x71bffff8
.word 0x7f0c7784
.word 0x0
.word 0x71bffff8
.word 0x7e89af6b
.word 0x0
.word 0x71bffff8
.word 0x7e191af1
.word 0x0
.word 0x71bffff8
.word 0x7f3dbdbb
.word 0x0
.word 0x71bffff8
.word 0x7d9b03d8
.word 0x0
.word 0x71bffff8
.word 0x7cf1f159
.word 0x0
.word 0x71bffff8
.word 0x7ec1657b
.word 0x0
.word 0x71bffff8
.word 0x7e0a7bf0
.word 0x0
.word 0x71bffff8
.word 0x7e86834b
.word 0x0
.word 0x71bffff8
.word 0x7ef86b62
.word 0x0
.word 0x71bffff8
.word 0x7e2998cc
.word 0x0
.word 0x71bffff8
.word 0x7e479e53
.word 0x0
.word 0x71bffff8
.word 0x7d9be782
.word 0x0
.word 0x71bffff8
.word 0x7ea37008
.word 0x0
.word 0x71bffff8
.word 0x7c8bf9e4
.word 0x80000000
.word 0x71bffff8
.word 0x7f33e5e8
.word 0x80000000
.word 0x71bffff8
.word 0x7f19be4b
.word 0x80000000
.word 0x71bffff8
.word 0x7e21b906
.word 0x80000000
.word 0x71bffff8
.word 0x7dbe4d8f
.word 0x80000000
.word 0x71bffff8
.word 0x7e0e0ef6
.word 0x80000000
.word 0x71bffff8
.word 0x7f38849b
.word 0x80000000
.word 0x71bffff8
.word 0x7c84ef49
.word 0x80000000
.word 0x71bffff8
.word 0x7cdf97b9
.word 0x80000000
.word 0x71bffff8
.word 0x7f3c425a
.word 0x80000000
.word 0x71bffff8
.word 0x7e8e223c
.word 0x80000000
.word 0x71bffff8
.word 0x7e963972
.word 0x80000000
.word 0x71bffff8
.word 0x7edd2a79
.word 0x80000000
.word 0x71bffff8
.word 0x7ee8d57d
.word 0x80000000
.word 0x71bffff8
.word 0x7ef3d707
.word 0x0
.word 0x71bffff8
.word 0x7ca4066c
.word 0x0
.word 0x71bffff8
.word 0x7f02ac50
.word 0x0
.word 0x71bffff8
.word 0x7ecd21cb
.word 0x0
.word 0x71bffff8
.word 0x7f2eb91a
.word 0x0
.word 0x71bffff8
.word 0x7edc5d53
.word 0x0
.word 0x71bffff8
.word 0x7d0af584
.word 0x0
.word 0x71bffff8
.word 0x7f05f3e7
.word 0x0
.word 0x71bffff8
.word 0x7de0ce7f
.word 0x0
.word 0x71bffff8
.word 0x7d9a887c
.word 0x0
.word 0x71bffff8
.word 0x7f1ca7c2
.word 0x0
.word 0x71bffff8
.word 0x7e7f6343
.word 0x0
.word 0x71bffff8
.word 0x7f188f57
.word 0x0
.word 0x71bffff8
.word 0x7e29504d
.word 0x0
.word 0x71bffff8
.word 0x7db3eb13
.word 0x80000000
.word 0x71bffff8
.word 0x7f0c7228
.word 0x80000000
.word 0x71bffff8
.word 0x7e3aa6be
.word 0x80000000
.word 0x71bffff8
.word 0x7f224140
.word 0x80000000
.word 0x71bffff8
.word 0x7ef1fa00
.word 0x80000000
.word 0x71bffff8
.word 0x7ebacb68
.word 0x80000000
.word 0x71bffff8
.word 0x7eeb4f07
.word 0x80000000
.word 0x71bffff8
.word 0x7d7d0cc0
.word 0x80000000
.word 0x71bffff8
.word 0x7f185183
.word 0x80000000
.word 0x71bffff8
.word 0x7f300d7e
.word 0x80000000
.word 0x71bffff8
.word 0x7f3f4810
.word 0x80000000
.word 0x71bffff8
.word 0x7efd88c2
.word 0x80000000
.word 0x71bffff8
.word 0x7ead0427
.word 0x80000000
.word 0x71bffff8
.word 0x7ede9a56
.word 0x80000000
.word 0x71bffff8
.word 0x7f365ad7
.word 0x0
.word 0x71bffff8
.word 0x7ee27bd0
.word 0x0
.word 0x71bffff8
.word 0x7f2bd8f4
.word 0x0
.word 0x71bffff8
.word 0x7f2319ee
.word 0x0
.word 0x71bffff8
.word 0x7f1bd52c
.word 0x0
.word 0x71bffff8
.word 0x7e53afdf
.word 0x0
.word 0x71bffff8
.word 0x7f076a16
.word 0x0
.word 0x71bffff8
.word 0x7e9641f7
.word 0x0
.word 0x71bffff8
.word 0x7ecf9722
.word 0x0
.word 0x71bffff8
.word 0x7f313b58
.word 0x0
.word 0x71bffff8
.word 0x7f2c7300
.word 0x0
.word 0x71bffff8
.word 0x7f21c09a
.word 0x0
.word 0x71bffff8
.word 0x7f314a05
.word 0x0
.word 0x71bffff8
.word 0x7f285703
.word 0x0
.word 0x71bffff8
.word 0x7f1175bf
.word 0x80000000
.word 0x71bffff8
.word 0x7d89f85f
.word 0x80000000
.word 0x71bffff8
.word 0x7eb6fce6
.word 0x80000000
.word 0x71bffff8
.word 0x7efc283d
.word 0x80000000
.word 0x71bffff8
.word 0x7eeb4e0d
.word 0x80000000
.word 0x71bffff8
.word 0x7e0f6884
.word 0x80000000
.word 0x71bffff8
.word 0x7e1173d9
.word 0x80000000
.word 0x71bffff8
.word 0x7e5ef919
.word 0x80000000
.word 0x71bffff8
.word 0x7edd0ccb
.word 0x80000000
.word 0x71bffff8
.word 0x7e93cd52
.word 0x80000000
.word 0x71bffff8
.word 0x7ee4f961
.word 0x80000000
.word 0x71bffff8
.word 0x7eaae033
.word 0x80000000
.word 0x71bffff8
.word 0x7ee1a51b
.word 0x80000000
.word 0x71bffff8
.word 0x7ee79f8e
.word 0x80000000
.word 0x71bffff8
.word 0x7f390e97
.word 0x0
.word 0x71bffff8
.word 0x7ecf7809
.word 0x0
.word 0x71bffff8
.word 0x7f1c60ac
.word 0x0
.word 0x71bffff8
.word 0x7ed237a1
.word 0x0
.word 0x71bffff8
.word 0x7f07a8e7
.word 0x0
.word 0x71bffff8
.word 0x7ed3afc5
.word 0x0
.word 0x71bffff8
.word 0x7da78349
.word 0x0
.word 0x71bffff8
.word 0x7f331aa5
.word 0x0
.word 0x71bffff8
.word 0x7ec30c98
.word 0x0
.word 0x71bffff8
.word 0x7e75cd4b
.word 0x0
.word 0x71bffff8
.word 0x7d772129
.word 0x0
.word 0x71bffff8
.word 0x7eac0532
.word 0x0
.word 0x71bffff8
.word 0x7f1a35e0
.word 0x0
.word 0x71bffff8
.word 0x7f39c489
.word 0x0
.word 0x71bffff8
.word 0x7e3741cc
.word 0x80000000
.word 0x71bffff8
.word 0x7ed9ec92
.word 0x80000000
.word 0x71bffff8
.word 0x7e12bd51
.word 0x80000000
.word 0x71bffff8
.word 0x7f272166
.word 0x80000000
.word 0x71bffff8
.word 0x7e79c1c6
.word 0x80000000
.word 0x71bffff8
.word 0x7e3b52d3
.word 0x80000000
.word 0x71bffff8
.word 0x7f269468
.word 0x80000000
.word 0x71bffff8
.word 0x7ebd88ad
.word 0x80000000
.word 0x71bffff8
.word 0x7a60affa
.word 0x80000000
.word 0x71bffff8
.word 0x7f004910
.word 0x80000000
.word 0x71bffff8
.word 0x7f1e5ec7
.word 0x80000000
.word 0x71bffff8
.word 0x7e9925f2
.word 0x80000000
.word 0x71bffff8
.word 0x7f0a2eec
.word 0x80000000
.word 0x71bffff8
.word 0x7c2c8b5e
.word 0x80000000
.word 0x71bffff8
.word 0x7ed2b355
.word 0x0
.word 0x71bffff8
.word 0x7f1a90b9
.word 0x0
.word 0x71bffff8
.word 0x7e480ede
.word 0x0
.word 0x71bffff8
.word 0x7f2623b6
.word 0x0
.word 0x71bffff8
.word 0x7eb72bf7
.word 0x0
.word 0x71bffff8
.word 0x7f3996a2
.word 0x0
.word 0x71bffff8
.word 0x7f2f4c51
.word 0x0
.word 0x71bffff8
.word 0x7eea94a1
.word 0x0
.word 0x71bffff8
.word 0x7ea6b8d3
.word 0x0
.word 0x71bffff8
.word 0x7d9aad53
.word 0x0
.word 0x71bffff8
.word 0x7eb54d84
.word 0x0
.word 0x71bffff8
.word 0x7f03532d
.word 0x0
.word 0x71bffff8
.word 0x7f2c93b2
.word 0x0
.word 0x71bffff8
.word 0x7f0c20b0
.word 0x0
.word 0x71bffff8
.word 0x7e6e317d
.word 0x80000000
.word 0x71bffff8
.word 0x7f2d3742
.word 0x80000000
.word 0x71bffff8
.word 0x7f1b8fcb
.word 0x80000000
.word 0x71bffff8
.word 0x7f3cb1de
.word 0x80000000
.word 0x71bffff8
.word 0x7f2eabd8
.word 0x80000000
.word 0x71bffff8
.word 0x7e40638c
.word 0x80000000
.word 0x71bffff8
.word 0x7eed7424
.word 0x80000000
.word 0x71bffff8
.word 0x7f111d49
.word 0x80000000
.word 0x71bffff8
.word 0x7e587392
.word 0x80000000
.word 0x71bffff8
.word 0x7ec1ccbc
.word 0x80000000
.word 0x71bffff8
.word 0x7f2e5b90
.word 0x80000000
.word 0x71bffff8
.word 0x7ee004c9
.word 0x80000000
.word 0x71bffff8
.word 0x7eb70362
.word 0x80000000
.word 0x71bffff8
.word 0x7e68f1b4
.word 0x80000000
.word 0x71bffff8
.word 0x7f167d44
.word 0x0
.word 0x71bffff8
.word 0x7e9b7ea4
.word 0x0
.word 0x71bffff8
.word 0x7ec45459
.word 0x0
.word 0x71bffff8
.word 0x7e46d91a
.word 0x0
.word 0x71bffff8
.word 0x7ea17fdd
.word 0x0
.word 0x71bffff8
.word 0x7f1186f9
.word 0x0
.word 0x71bffff8
.word 0x7f222105
.word 0x0
.word 0x71bffff8
.word 0x7de7f8b9
.word 0x80000000
.word 0x71bffff8
.word 0x7bdaa799
.word 0x80000000
.word 0x71bffff8
.word 0x7ee174c8
.word 0x80000000
.word 0x71bffff8
.word 0x7e1f9fcf
.word 0x80000000
.word 0x71bffff8
.word 0x7e8f0540
.word 0x80000000
.word 0x71bffff8
.word 0x7ef5d070
.word 0x80000000
.word 0x71bffff8
.word 0x7f08c5cd
.word 0x80000000
.word 0x71bffff8
RVTEST_DATA_END

RVMODEL_DATA_BEGIN


signature_x15_0:
    .fill 0*(XLEN/32),4,0xdeadbeef


signature_x15_1:
    .fill 508*(XLEN/32),4,0xdeadbeef


signature_x15_2:
    .fill 48*(XLEN/32),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*(XLEN/32),4,0xdeadbeef

#endif

RVMODEL_DATA_END
