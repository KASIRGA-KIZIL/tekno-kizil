
// -----------
// This file was generated by riscv_ctg (https://gitlab.com/incoresemi/riscv-compliance/riscv_ctg)
// version   : 0.5.2
// timestamp : Tue Sep  7 16:44:09 2021 GMT
// usage     : riscv_ctg \
//                  -- cgf $cgf \
//                  -- xlen $xlen \
// -----------
//
// -----------
// Copyright (c) 2021. IIT Madras. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fdiv.s instruction of the RISC-V F extension for the fdiv_b8 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fdiv_b8)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x16,test_fp)
RVTEST_SIGBASE(x15,signature_x15_1)

inst_0:
// rs1 == rd != rs2, rs1==f18, rs2==f20, rd==f18, fs1 == 0 and fe1 == 0x7e and fm1 == 0x4314c0 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f18; op2:f20; dest:f18; op1val:0x3f4314c0; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:0; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f18, f18, f20, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_1:
// rs1 != rs2  and rs1 != rd and rs2 != rd, rs1==f31, rs2==f14, rd==f24, fs1 == 0 and fe1 == 0x7b and fm1 == 0x1caa68 and fs2 == 0 and fe2 == 0xa6 and fm2 == 0x1caa68 and rm_val == 4  
// opcode: fdiv.s ; op1:f31; op2:f14; dest:f24; op1val:0x3d9caa68; op2val:0x531caa68; valaddr_reg:x16; val_offset:8; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f24, f31, f14, 0x4, 0, x16, 8, x17, x15, 8, x18)

inst_2:
// rs1 == rs2 == rd, rs1==f4, rs2==f4, rd==f4, fs1 == 0 and fe1 == 0x7b and fm1 == 0x1caa68 and fs2 == 0 and fe2 == 0xa6 and fm2 == 0x1caa68 and rm_val == 3  
// opcode: fdiv.s ; op1:f4; op2:f4; dest:f4; op1val:0x3d9caa68; op2val:0x3d9caa68; valaddr_reg:x16; val_offset:16; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f4, f4, f4, 0x3, 0, x16, 16, x17, x15, 16, x18)

inst_3:
// rs1 == rs2 != rd, rs1==f15, rs2==f15, rd==f19, fs1 == 0 and fe1 == 0x7b and fm1 == 0x1caa68 and fs2 == 0 and fe2 == 0xa6 and fm2 == 0x1caa68 and rm_val == 2  
// opcode: fdiv.s ; op1:f15; op2:f15; dest:f19; op1val:0x3d9caa68; op2val:0x3d9caa68; valaddr_reg:x16; val_offset:24; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f19, f15, f15, 0x2, 0, x16, 24, x17, x15, 24, x18)

inst_4:
// rs2 == rd != rs1, rs1==f0, rs2==f11, rd==f11, fs1 == 0 and fe1 == 0x7b and fm1 == 0x1caa68 and fs2 == 0 and fe2 == 0xa6 and fm2 == 0x1caa68 and rm_val == 1  
// opcode: fdiv.s ; op1:f0; op2:f11; dest:f11; op1val:0x3d9caa68; op2val:0x531caa68; valaddr_reg:x16; val_offset:32; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f11, f0, f11, 0x1, 0, x16, 32, x17, x15, 32, x18)

inst_5:
// rs1==f28, rs2==f0, rd==f17, fs1 == 0 and fe1 == 0x7b and fm1 == 0x1caa68 and fs2 == 0 and fe2 == 0xa6 and fm2 == 0x1caa68 and rm_val == 0  
// opcode: fdiv.s ; op1:f28; op2:f0; dest:f17; op1val:0x3d9caa68; op2val:0x531caa68; valaddr_reg:x16; val_offset:40; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f17, f28, f0, 0x0, 0, x16, 40, x17, x15, 40, x18)

inst_6:
// rs1==f8, rs2==f27, rd==f10, fs1 == 0 and fe1 == 0x7c and fm1 == 0x284975 and fs2 == 0 and fe2 == 0xa7 and fm2 == 0x284974 and rm_val == 4  
// opcode: fdiv.s ; op1:f8; op2:f27; dest:f10; op1val:0x3e284975; op2val:0x53a84974; valaddr_reg:x16; val_offset:48; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f10, f8, f27, 0x4, 0, x16, 48, x17, x15, 48, x18)

inst_7:
// rs1==f16, rs2==f22, rd==f21, fs1 == 0 and fe1 == 0x7c and fm1 == 0x284975 and fs2 == 0 and fe2 == 0xa7 and fm2 == 0x284974 and rm_val == 3  
// opcode: fdiv.s ; op1:f16; op2:f22; dest:f21; op1val:0x3e284975; op2val:0x53a84974; valaddr_reg:x16; val_offset:56; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f21, f16, f22, 0x3, 0, x16, 56, x17, x15, 56, x18)

inst_8:
// rs1==f30, rs2==f28, rd==f31, fs1 == 0 and fe1 == 0x7c and fm1 == 0x284975 and fs2 == 0 and fe2 == 0xa7 and fm2 == 0x284974 and rm_val == 2  
// opcode: fdiv.s ; op1:f30; op2:f28; dest:f31; op1val:0x3e284975; op2val:0x53a84974; valaddr_reg:x16; val_offset:64; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f31, f30, f28, 0x2, 0, x16, 64, x17, x15, 64, x18)

inst_9:
// rs1==f22, rs2==f24, rd==f9, fs1 == 0 and fe1 == 0x7c and fm1 == 0x284975 and fs2 == 0 and fe2 == 0xa7 and fm2 == 0x284974 and rm_val == 1  
// opcode: fdiv.s ; op1:f22; op2:f24; dest:f9; op1val:0x3e284975; op2val:0x53a84974; valaddr_reg:x16; val_offset:72; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f9, f22, f24, 0x1, 0, x16, 72, x17, x15, 72, x18)

inst_10:
// rs1==f3, rs2==f18, rd==f25, fs1 == 0 and fe1 == 0x7c and fm1 == 0x284975 and fs2 == 0 and fe2 == 0xa7 and fm2 == 0x284974 and rm_val == 0  
// opcode: fdiv.s ; op1:f3; op2:f18; dest:f25; op1val:0x3e284975; op2val:0x53a84974; valaddr_reg:x16; val_offset:80; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f25, f3, f18, 0x0, 0, x16, 80, x17, x15, 80, x18)

inst_11:
// rs1==f2, rs2==f6, rd==f3, fs1 == 0 and fe1 == 0x7d and fm1 == 0x0539a9 and fs2 == 0 and fe2 == 0xa8 and fm2 == 0x0539a8 and rm_val == 4  
// opcode: fdiv.s ; op1:f2; op2:f6; dest:f3; op1val:0x3e8539a9; op2val:0x540539a8; valaddr_reg:x16; val_offset:88; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f3, f2, f6, 0x4, 0, x16, 88, x17, x15, 88, x18)

inst_12:
// rs1==f25, rs2==f7, rd==f15, fs1 == 0 and fe1 == 0x7d and fm1 == 0x0539a9 and fs2 == 0 and fe2 == 0xa8 and fm2 == 0x0539a8 and rm_val == 3  
// opcode: fdiv.s ; op1:f25; op2:f7; dest:f15; op1val:0x3e8539a9; op2val:0x540539a8; valaddr_reg:x16; val_offset:96; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f15, f25, f7, 0x3, 0, x16, 96, x17, x15, 96, x18)

inst_13:
// rs1==f12, rs2==f8, rd==f30, fs1 == 0 and fe1 == 0x7d and fm1 == 0x0539a9 and fs2 == 0 and fe2 == 0xa8 and fm2 == 0x0539a8 and rm_val == 2  
// opcode: fdiv.s ; op1:f12; op2:f8; dest:f30; op1val:0x3e8539a9; op2val:0x540539a8; valaddr_reg:x16; val_offset:104; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f30, f12, f8, 0x2, 0, x16, 104, x17, x15, 104, x18)

inst_14:
// rs1==f6, rs2==f21, rd==f23, fs1 == 0 and fe1 == 0x7d and fm1 == 0x0539a9 and fs2 == 0 and fe2 == 0xa8 and fm2 == 0x0539a8 and rm_val == 1  
// opcode: fdiv.s ; op1:f6; op2:f21; dest:f23; op1val:0x3e8539a9; op2val:0x540539a8; valaddr_reg:x16; val_offset:112; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f23, f6, f21, 0x1, 0, x16, 112, x17, x15, 112, x18)

inst_15:
// rs1==f10, rs2==f19, rd==f6, fs1 == 0 and fe1 == 0x7d and fm1 == 0x0539a9 and fs2 == 0 and fe2 == 0xa8 and fm2 == 0x0539a8 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f19; dest:f6; op1val:0x3e8539a9; op2val:0x540539a8; valaddr_reg:x16; val_offset:120; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f6, f10, f19, 0x0, 0, x16, 120, x17, x15, 120, x18)

inst_16:
// rs1==f11, rs2==f10, rd==f2, fs1 == 0 and fe1 == 0x7b and fm1 == 0x12646b and fs2 == 0 and fe2 == 0xa6 and fm2 == 0x12646b and rm_val == 4  
// opcode: fdiv.s ; op1:f11; op2:f10; dest:f2; op1val:0x3d92646b; op2val:0x5312646b; valaddr_reg:x16; val_offset:128; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f2, f11, f10, 0x4, 0, x16, 128, x17, x15, 128, x18)

inst_17:
// rs1==f21, rs2==f17, rd==f28, fs1 == 0 and fe1 == 0x7b and fm1 == 0x12646b and fs2 == 0 and fe2 == 0xa6 and fm2 == 0x12646b and rm_val == 3  
// opcode: fdiv.s ; op1:f21; op2:f17; dest:f28; op1val:0x3d92646b; op2val:0x5312646b; valaddr_reg:x16; val_offset:136; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f28, f21, f17, 0x3, 0, x16, 136, x17, x15, 136, x18)

inst_18:
// rs1==f24, rs2==f25, rd==f16, fs1 == 0 and fe1 == 0x7b and fm1 == 0x12646b and fs2 == 0 and fe2 == 0xa6 and fm2 == 0x12646b and rm_val == 2  
// opcode: fdiv.s ; op1:f24; op2:f25; dest:f16; op1val:0x3d92646b; op2val:0x5312646b; valaddr_reg:x16; val_offset:144; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f16, f24, f25, 0x2, 0, x16, 144, x17, x15, 144, x18)

inst_19:
// rs1==f13, rs2==f1, rd==f20, fs1 == 0 and fe1 == 0x7b and fm1 == 0x12646b and fs2 == 0 and fe2 == 0xa6 and fm2 == 0x12646b and rm_val == 1  
// opcode: fdiv.s ; op1:f13; op2:f1; dest:f20; op1val:0x3d92646b; op2val:0x5312646b; valaddr_reg:x16; val_offset:152; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f20, f13, f1, 0x1, 0, x16, 152, x17, x15, 152, x18)

inst_20:
// rs1==f19, rs2==f13, rd==f29, fs1 == 0 and fe1 == 0x7b and fm1 == 0x12646b and fs2 == 0 and fe2 == 0xa6 and fm2 == 0x12646b and rm_val == 0  
// opcode: fdiv.s ; op1:f19; op2:f13; dest:f29; op1val:0x3d92646b; op2val:0x5312646b; valaddr_reg:x16; val_offset:160; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f29, f19, f13, 0x0, 0, x16, 160, x17, x15, 160, x18)

inst_21:
// rs1==f14, rs2==f16, rd==f5, fs1 == 0 and fe1 == 0x7e and fm1 == 0x2a730b and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x2a730b and rm_val == 4  
// opcode: fdiv.s ; op1:f14; op2:f16; dest:f5; op1val:0x3f2a730b; op2val:0x54aa730b; valaddr_reg:x16; val_offset:168; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f5, f14, f16, 0x4, 0, x16, 168, x17, x15, 168, x18)

inst_22:
// rs1==f9, rs2==f12, rd==f27, fs1 == 0 and fe1 == 0x7e and fm1 == 0x2a730b and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x2a730b and rm_val == 3  
// opcode: fdiv.s ; op1:f9; op2:f12; dest:f27; op1val:0x3f2a730b; op2val:0x54aa730b; valaddr_reg:x16; val_offset:176; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f27, f9, f12, 0x3, 0, x16, 176, x17, x15, 176, x18)

inst_23:
// rs1==f23, rs2==f9, rd==f13, fs1 == 0 and fe1 == 0x7e and fm1 == 0x2a730b and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x2a730b and rm_val == 2  
// opcode: fdiv.s ; op1:f23; op2:f9; dest:f13; op1val:0x3f2a730b; op2val:0x54aa730b; valaddr_reg:x16; val_offset:184; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f13, f23, f9, 0x2, 0, x16, 184, x17, x15, 184, x18)

inst_24:
// rs1==f27, rs2==f2, rd==f0, fs1 == 0 and fe1 == 0x7e and fm1 == 0x2a730b and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x2a730b and rm_val == 1  
// opcode: fdiv.s ; op1:f27; op2:f2; dest:f0; op1val:0x3f2a730b; op2val:0x54aa730b; valaddr_reg:x16; val_offset:192; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f0, f27, f2, 0x1, 0, x16, 192, x17, x15, 192, x18)

inst_25:
// rs1==f20, rs2==f23, rd==f22, fs1 == 0 and fe1 == 0x7e and fm1 == 0x2a730b and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x2a730b and rm_val == 0  
// opcode: fdiv.s ; op1:f20; op2:f23; dest:f22; op1val:0x3f2a730b; op2val:0x54aa730b; valaddr_reg:x16; val_offset:200; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f22, f20, f23, 0x0, 0, x16, 200, x17, x15, 200, x18)

inst_26:
// rs1==f29, rs2==f26, rd==f1, fs1 == 0 and fe1 == 0x7e and fm1 == 0x62a4bf and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x62a4be and rm_val == 4  
// opcode: fdiv.s ; op1:f29; op2:f26; dest:f1; op1val:0x3f62a4bf; op2val:0x54e2a4be; valaddr_reg:x16; val_offset:208; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f1, f29, f26, 0x4, 0, x16, 208, x17, x15, 208, x18)

inst_27:
// rs1==f1, rs2==f5, rd==f7, fs1 == 0 and fe1 == 0x7e and fm1 == 0x62a4bf and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x62a4be and rm_val == 3  
// opcode: fdiv.s ; op1:f1; op2:f5; dest:f7; op1val:0x3f62a4bf; op2val:0x54e2a4be; valaddr_reg:x16; val_offset:216; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f7, f1, f5, 0x3, 0, x16, 216, x17, x15, 216, x18)

inst_28:
// rs1==f5, rs2==f31, rd==f14, fs1 == 0 and fe1 == 0x7e and fm1 == 0x62a4bf and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x62a4be and rm_val == 2  
// opcode: fdiv.s ; op1:f5; op2:f31; dest:f14; op1val:0x3f62a4bf; op2val:0x54e2a4be; valaddr_reg:x16; val_offset:224; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f14, f5, f31, 0x2, 0, x16, 224, x17, x15, 224, x18)

inst_29:
// rs1==f7, rs2==f3, rd==f12, fs1 == 0 and fe1 == 0x7e and fm1 == 0x62a4bf and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x62a4be and rm_val == 1  
// opcode: fdiv.s ; op1:f7; op2:f3; dest:f12; op1val:0x3f62a4bf; op2val:0x54e2a4be; valaddr_reg:x16; val_offset:232; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f7, f3, 0x1, 0, x16, 232, x17, x15, 232, x18)

inst_30:
// rs1==f17, rs2==f29, rd==f26, fs1 == 0 and fe1 == 0x7e and fm1 == 0x62a4bf and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x62a4be and rm_val == 0  
// opcode: fdiv.s ; op1:f17; op2:f29; dest:f26; op1val:0x3f62a4bf; op2val:0x54e2a4be; valaddr_reg:x16; val_offset:240; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f26, f17, f29, 0x0, 0, x16, 240, x17, x15, 240, x18)

inst_31:
// rs1==f26, rs2==f30, rd==f8, fs1 == 0 and fe1 == 0x7e and fm1 == 0x34e18a and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x34e189 and rm_val == 4  
// opcode: fdiv.s ; op1:f26; op2:f30; dest:f8; op1val:0x3f34e18a; op2val:0x54b4e189; valaddr_reg:x16; val_offset:248; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f8, f26, f30, 0x4, 0, x16, 248, x17, x15, 248, x18)

inst_32:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x34e18a and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x34e189 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f34e18a; op2val:0x54b4e189; valaddr_reg:x16; val_offset:256; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 256, x17, x15, 256, x18)

inst_33:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x34e18a and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x34e189 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f34e18a; op2val:0x54b4e189; valaddr_reg:x16; val_offset:264; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 264, x17, x15, 264, x18)

inst_34:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x34e18a and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x34e189 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f34e18a; op2val:0x54b4e189; valaddr_reg:x16; val_offset:272; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 272, x17, x15, 272, x18)

inst_35:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x34e18a and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x34e189 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f34e18a; op2val:0x54b4e189; valaddr_reg:x16; val_offset:280; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 280, x17, x15, 280, x18)

inst_36:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x5af971 and fs2 == 0 and fe2 == 0xa5 and fm2 == 0x5af970 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3d5af971; op2val:0x52daf970; valaddr_reg:x16; val_offset:288; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 288, x17, x15, 288, x18)

inst_37:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x5af971 and fs2 == 0 and fe2 == 0xa5 and fm2 == 0x5af970 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3d5af971; op2val:0x52daf970; valaddr_reg:x16; val_offset:296; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 296, x17, x15, 296, x18)

inst_38:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x5af971 and fs2 == 0 and fe2 == 0xa5 and fm2 == 0x5af970 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3d5af971; op2val:0x52daf970; valaddr_reg:x16; val_offset:304; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 304, x17, x15, 304, x18)

inst_39:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x5af971 and fs2 == 0 and fe2 == 0xa5 and fm2 == 0x5af970 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3d5af971; op2val:0x52daf970; valaddr_reg:x16; val_offset:312; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 312, x17, x15, 312, x18)

inst_40:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x5af971 and fs2 == 0 and fe2 == 0xa5 and fm2 == 0x5af970 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3d5af971; op2val:0x52daf970; valaddr_reg:x16; val_offset:320; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 320, x17, x15, 320, x18)

inst_41:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x31fdac and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x31fdab and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f31fdac; op2val:0x54b1fdab; valaddr_reg:x16; val_offset:328; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 328, x17, x15, 328, x18)

inst_42:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x31fdac and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x31fdab and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f31fdac; op2val:0x54b1fdab; valaddr_reg:x16; val_offset:336; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 336, x17, x15, 336, x18)

inst_43:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x31fdac and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x31fdab and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f31fdac; op2val:0x54b1fdab; valaddr_reg:x16; val_offset:344; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 344, x17, x15, 344, x18)

inst_44:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x31fdac and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x31fdab and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f31fdac; op2val:0x54b1fdab; valaddr_reg:x16; val_offset:352; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 352, x17, x15, 352, x18)

inst_45:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x31fdac and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x31fdab and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f31fdac; op2val:0x54b1fdab; valaddr_reg:x16; val_offset:360; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 360, x17, x15, 360, x18)

inst_46:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x75645a and fs2 == 0 and fe2 == 0xa5 and fm2 == 0x75645a and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3d75645a; op2val:0x52f5645a; valaddr_reg:x16; val_offset:368; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 368, x17, x15, 368, x18)

inst_47:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x75645a and fs2 == 0 and fe2 == 0xa5 and fm2 == 0x75645a and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3d75645a; op2val:0x52f5645a; valaddr_reg:x16; val_offset:376; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 376, x17, x15, 376, x18)

inst_48:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x75645a and fs2 == 0 and fe2 == 0xa5 and fm2 == 0x75645a and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3d75645a; op2val:0x52f5645a; valaddr_reg:x16; val_offset:384; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 384, x17, x15, 384, x18)

inst_49:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x75645a and fs2 == 0 and fe2 == 0xa5 and fm2 == 0x75645a and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3d75645a; op2val:0x52f5645a; valaddr_reg:x16; val_offset:392; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 392, x17, x15, 392, x18)

inst_50:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x75645a and fs2 == 0 and fe2 == 0xa5 and fm2 == 0x75645a and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3d75645a; op2val:0x52f5645a; valaddr_reg:x16; val_offset:400; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 400, x17, x15, 400, x18)

inst_51:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x49200b and fs2 == 0 and fe2 == 0xa7 and fm2 == 0x49200b and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e49200b; op2val:0x53c9200b; valaddr_reg:x16; val_offset:408; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 408, x17, x15, 408, x18)

inst_52:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x49200b and fs2 == 0 and fe2 == 0xa7 and fm2 == 0x49200b and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e49200b; op2val:0x53c9200b; valaddr_reg:x16; val_offset:416; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 416, x17, x15, 416, x18)

inst_53:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x49200b and fs2 == 0 and fe2 == 0xa7 and fm2 == 0x49200b and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e49200b; op2val:0x53c9200b; valaddr_reg:x16; val_offset:424; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 424, x17, x15, 424, x18)

inst_54:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x49200b and fs2 == 0 and fe2 == 0xa7 and fm2 == 0x49200b and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e49200b; op2val:0x53c9200b; valaddr_reg:x16; val_offset:432; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 432, x17, x15, 432, x18)

inst_55:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x49200b and fs2 == 0 and fe2 == 0xa7 and fm2 == 0x49200b and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e49200b; op2val:0x53c9200b; valaddr_reg:x16; val_offset:440; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 440, x17, x15, 440, x18)

inst_56:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x563e60 and fs2 == 0 and fe2 == 0xa4 and fm2 == 0x563e60 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3cd63e60; op2val:0x52563e60; valaddr_reg:x16; val_offset:448; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 448, x17, x15, 448, x18)

inst_57:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x563e60 and fs2 == 0 and fe2 == 0xa4 and fm2 == 0x563e60 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3cd63e60; op2val:0x52563e60; valaddr_reg:x16; val_offset:456; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 456, x17, x15, 456, x18)

inst_58:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x563e60 and fs2 == 0 and fe2 == 0xa4 and fm2 == 0x563e60 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3cd63e60; op2val:0x52563e60; valaddr_reg:x16; val_offset:464; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 464, x17, x15, 464, x18)

inst_59:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x563e60 and fs2 == 0 and fe2 == 0xa4 and fm2 == 0x563e60 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3cd63e60; op2val:0x52563e60; valaddr_reg:x16; val_offset:472; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 472, x17, x15, 472, x18)

inst_60:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x563e60 and fs2 == 0 and fe2 == 0xa4 and fm2 == 0x563e60 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3cd63e60; op2val:0x52563e60; valaddr_reg:x16; val_offset:480; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 480, x17, x15, 480, x18)

inst_61:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x4c2f11 and fs2 == 0 and fe2 == 0xa6 and fm2 == 0x4c2f11 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3dcc2f11; op2val:0x534c2f11; valaddr_reg:x16; val_offset:488; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 488, x17, x15, 488, x18)

inst_62:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x4c2f11 and fs2 == 0 and fe2 == 0xa6 and fm2 == 0x4c2f11 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3dcc2f11; op2val:0x534c2f11; valaddr_reg:x16; val_offset:496; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 496, x17, x15, 496, x18)

inst_63:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x4c2f11 and fs2 == 0 and fe2 == 0xa6 and fm2 == 0x4c2f11 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3dcc2f11; op2val:0x534c2f11; valaddr_reg:x16; val_offset:504; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 504, x17, x15, 504, x18)

inst_64:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x4c2f11 and fs2 == 0 and fe2 == 0xa6 and fm2 == 0x4c2f11 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3dcc2f11; op2val:0x534c2f11; valaddr_reg:x16; val_offset:512; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 512, x17, x15, 512, x18)

inst_65:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x4c2f11 and fs2 == 0 and fe2 == 0xa6 and fm2 == 0x4c2f11 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3dcc2f11; op2val:0x534c2f11; valaddr_reg:x16; val_offset:520; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 520, x17, x15, 520, x18)

inst_66:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7230bf and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x7230bf and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f7230bf; op2val:0x54f230bf; valaddr_reg:x16; val_offset:528; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 528, x17, x15, 528, x18)

inst_67:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7230bf and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x7230bf and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f7230bf; op2val:0x54f230bf; valaddr_reg:x16; val_offset:536; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 536, x17, x15, 536, x18)

inst_68:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7230bf and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x7230bf and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f7230bf; op2val:0x54f230bf; valaddr_reg:x16; val_offset:544; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 544, x17, x15, 544, x18)

inst_69:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7230bf and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x7230bf and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f7230bf; op2val:0x54f230bf; valaddr_reg:x16; val_offset:552; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 552, x17, x15, 552, x18)

inst_70:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7230bf and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x7230bf and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f7230bf; op2val:0x54f230bf; valaddr_reg:x16; val_offset:560; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 560, x17, x15, 560, x18)

inst_71:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5464fe and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x5464fd and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f5464fe; op2val:0x54d464fd; valaddr_reg:x16; val_offset:568; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 568, x17, x15, 568, x18)

inst_72:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5464fe and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x5464fd and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f5464fe; op2val:0x54d464fd; valaddr_reg:x16; val_offset:576; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 576, x17, x15, 576, x18)

inst_73:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5464fe and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x5464fd and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f5464fe; op2val:0x54d464fd; valaddr_reg:x16; val_offset:584; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 584, x17, x15, 584, x18)

inst_74:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5464fe and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x5464fd and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f5464fe; op2val:0x54d464fd; valaddr_reg:x16; val_offset:592; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 592, x17, x15, 592, x18)

inst_75:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5464fe and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x5464fd and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f5464fe; op2val:0x54d464fd; valaddr_reg:x16; val_offset:600; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 600, x17, x15, 600, x18)

inst_76:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x783e25 and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x783e24 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f783e25; op2val:0x54f83e24; valaddr_reg:x16; val_offset:608; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 608, x17, x15, 608, x18)

inst_77:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x783e25 and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x783e24 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f783e25; op2val:0x54f83e24; valaddr_reg:x16; val_offset:616; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 616, x17, x15, 616, x18)

inst_78:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x783e25 and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x783e24 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f783e25; op2val:0x54f83e24; valaddr_reg:x16; val_offset:624; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 624, x17, x15, 624, x18)

inst_79:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x783e25 and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x783e24 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f783e25; op2val:0x54f83e24; valaddr_reg:x16; val_offset:632; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 632, x17, x15, 632, x18)

inst_80:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x783e25 and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x783e24 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f783e25; op2val:0x54f83e24; valaddr_reg:x16; val_offset:640; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 640, x17, x15, 640, x18)

inst_81:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x50c398 and fs2 == 0 and fe2 == 0xa8 and fm2 == 0x50c397 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ed0c398; op2val:0x5450c397; valaddr_reg:x16; val_offset:648; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 648, x17, x15, 648, x18)

inst_82:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x50c398 and fs2 == 0 and fe2 == 0xa8 and fm2 == 0x50c397 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ed0c398; op2val:0x5450c397; valaddr_reg:x16; val_offset:656; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 656, x17, x15, 656, x18)

inst_83:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x50c398 and fs2 == 0 and fe2 == 0xa8 and fm2 == 0x50c397 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ed0c398; op2val:0x5450c397; valaddr_reg:x16; val_offset:664; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 664, x17, x15, 664, x18)

inst_84:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x50c398 and fs2 == 0 and fe2 == 0xa8 and fm2 == 0x50c397 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ed0c398; op2val:0x5450c397; valaddr_reg:x16; val_offset:672; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 672, x17, x15, 672, x18)

inst_85:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x50c398 and fs2 == 0 and fe2 == 0xa8 and fm2 == 0x50c397 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ed0c398; op2val:0x5450c397; valaddr_reg:x16; val_offset:680; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 680, x17, x15, 680, x18)

inst_86:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x229ca5 and fs2 == 0 and fe2 == 0xa8 and fm2 == 0x229ca4 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ea29ca5; op2val:0x54229ca4; valaddr_reg:x16; val_offset:688; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 688, x17, x15, 688, x18)

inst_87:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x229ca5 and fs2 == 0 and fe2 == 0xa8 and fm2 == 0x229ca4 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ea29ca5; op2val:0x54229ca4; valaddr_reg:x16; val_offset:696; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 696, x17, x15, 696, x18)

inst_88:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x229ca5 and fs2 == 0 and fe2 == 0xa8 and fm2 == 0x229ca4 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ea29ca5; op2val:0x54229ca4; valaddr_reg:x16; val_offset:704; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 704, x17, x15, 704, x18)

inst_89:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x229ca5 and fs2 == 0 and fe2 == 0xa8 and fm2 == 0x229ca4 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ea29ca5; op2val:0x54229ca4; valaddr_reg:x16; val_offset:712; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 712, x17, x15, 712, x18)

inst_90:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x229ca5 and fs2 == 0 and fe2 == 0xa8 and fm2 == 0x229ca4 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ea29ca5; op2val:0x54229ca4; valaddr_reg:x16; val_offset:720; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 720, x17, x15, 720, x18)

inst_91:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x27bf2c and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x27bf2c and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f27bf2c; op2val:0x54a7bf2c; valaddr_reg:x16; val_offset:728; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 728, x17, x15, 728, x18)

inst_92:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x27bf2c and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x27bf2c and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f27bf2c; op2val:0x54a7bf2c; valaddr_reg:x16; val_offset:736; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 736, x17, x15, 736, x18)

inst_93:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x27bf2c and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x27bf2c and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f27bf2c; op2val:0x54a7bf2c; valaddr_reg:x16; val_offset:744; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 744, x17, x15, 744, x18)

inst_94:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x27bf2c and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x27bf2c and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f27bf2c; op2val:0x54a7bf2c; valaddr_reg:x16; val_offset:752; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 752, x17, x15, 752, x18)

inst_95:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x27bf2c and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x27bf2c and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f27bf2c; op2val:0x54a7bf2c; valaddr_reg:x16; val_offset:760; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 760, x17, x15, 760, x18)

inst_96:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x3dc756 and fs2 == 0 and fe2 == 0xa7 and fm2 == 0x3dc755 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e3dc756; op2val:0x53bdc755; valaddr_reg:x16; val_offset:768; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 768, x17, x15, 768, x18)

inst_97:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x3dc756 and fs2 == 0 and fe2 == 0xa7 and fm2 == 0x3dc755 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e3dc756; op2val:0x53bdc755; valaddr_reg:x16; val_offset:776; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 776, x17, x15, 776, x18)

inst_98:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x3dc756 and fs2 == 0 and fe2 == 0xa7 and fm2 == 0x3dc755 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e3dc756; op2val:0x53bdc755; valaddr_reg:x16; val_offset:784; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 784, x17, x15, 784, x18)

inst_99:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x3dc756 and fs2 == 0 and fe2 == 0xa7 and fm2 == 0x3dc755 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e3dc756; op2val:0x53bdc755; valaddr_reg:x16; val_offset:792; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 792, x17, x15, 792, x18)

inst_100:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x3dc756 and fs2 == 0 and fe2 == 0xa7 and fm2 == 0x3dc755 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e3dc756; op2val:0x53bdc755; valaddr_reg:x16; val_offset:800; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 800, x17, x15, 800, x18)

inst_101:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4001c8 and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x4001c8 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f4001c8; op2val:0x54c001c8; valaddr_reg:x16; val_offset:808; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 808, x17, x15, 808, x18)

inst_102:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4001c8 and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x4001c8 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f4001c8; op2val:0x54c001c8; valaddr_reg:x16; val_offset:816; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 816, x17, x15, 816, x18)

inst_103:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4001c8 and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x4001c8 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f4001c8; op2val:0x54c001c8; valaddr_reg:x16; val_offset:824; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 824, x17, x15, 824, x18)

inst_104:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4001c8 and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x4001c8 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f4001c8; op2val:0x54c001c8; valaddr_reg:x16; val_offset:832; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 832, x17, x15, 832, x18)

inst_105:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4001c8 and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x4001c8 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f4001c8; op2val:0x54c001c8; valaddr_reg:x16; val_offset:840; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 840, x17, x15, 840, x18)

inst_106:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x0961d6 and fs2 == 0 and fe2 == 0xa6 and fm2 == 0x0961d5 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3d8961d6; op2val:0x530961d5; valaddr_reg:x16; val_offset:848; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 848, x17, x15, 848, x18)

inst_107:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x0961d6 and fs2 == 0 and fe2 == 0xa6 and fm2 == 0x0961d5 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3d8961d6; op2val:0x530961d5; valaddr_reg:x16; val_offset:856; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 856, x17, x15, 856, x18)

inst_108:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x0961d6 and fs2 == 0 and fe2 == 0xa6 and fm2 == 0x0961d5 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3d8961d6; op2val:0x530961d5; valaddr_reg:x16; val_offset:864; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 864, x17, x15, 864, x18)

inst_109:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x0961d6 and fs2 == 0 and fe2 == 0xa6 and fm2 == 0x0961d5 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3d8961d6; op2val:0x530961d5; valaddr_reg:x16; val_offset:872; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 872, x17, x15, 872, x18)

inst_110:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x0961d6 and fs2 == 0 and fe2 == 0xa6 and fm2 == 0x0961d5 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3d8961d6; op2val:0x530961d5; valaddr_reg:x16; val_offset:880; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 880, x17, x15, 880, x18)

inst_111:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5940a7 and fs2 == 0 and fe2 == 0xa7 and fm2 == 0x5940a7 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e5940a7; op2val:0x53d940a7; valaddr_reg:x16; val_offset:888; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 888, x17, x15, 888, x18)

inst_112:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5940a7 and fs2 == 0 and fe2 == 0xa7 and fm2 == 0x5940a7 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e5940a7; op2val:0x53d940a7; valaddr_reg:x16; val_offset:896; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 896, x17, x15, 896, x18)

inst_113:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5940a7 and fs2 == 0 and fe2 == 0xa7 and fm2 == 0x5940a7 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e5940a7; op2val:0x53d940a7; valaddr_reg:x16; val_offset:904; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 904, x17, x15, 904, x18)

inst_114:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5940a7 and fs2 == 0 and fe2 == 0xa7 and fm2 == 0x5940a7 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e5940a7; op2val:0x53d940a7; valaddr_reg:x16; val_offset:912; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 912, x17, x15, 912, x18)

inst_115:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5940a7 and fs2 == 0 and fe2 == 0xa7 and fm2 == 0x5940a7 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e5940a7; op2val:0x53d940a7; valaddr_reg:x16; val_offset:920; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 920, x17, x15, 920, x18)

inst_116:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0b6e04 and fs2 == 0 and fe2 == 0xa8 and fm2 == 0x0b6e04 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e8b6e04; op2val:0x540b6e04; valaddr_reg:x16; val_offset:928; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 928, x17, x15, 928, x18)

inst_117:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0b6e04 and fs2 == 0 and fe2 == 0xa8 and fm2 == 0x0b6e04 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e8b6e04; op2val:0x540b6e04; valaddr_reg:x16; val_offset:936; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 936, x17, x15, 936, x18)

inst_118:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0b6e04 and fs2 == 0 and fe2 == 0xa8 and fm2 == 0x0b6e04 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e8b6e04; op2val:0x540b6e04; valaddr_reg:x16; val_offset:944; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 944, x17, x15, 944, x18)

inst_119:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0b6e04 and fs2 == 0 and fe2 == 0xa8 and fm2 == 0x0b6e04 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e8b6e04; op2val:0x540b6e04; valaddr_reg:x16; val_offset:952; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 952, x17, x15, 952, x18)

inst_120:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0b6e04 and fs2 == 0 and fe2 == 0xa8 and fm2 == 0x0b6e04 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e8b6e04; op2val:0x540b6e04; valaddr_reg:x16; val_offset:960; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 960, x17, x15, 960, x18)

inst_121:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x60451a and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x604519 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f60451a; op2val:0x54e04519; valaddr_reg:x16; val_offset:968; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 968, x17, x15, 968, x18)

inst_122:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x60451a and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x604519 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f60451a; op2val:0x54e04519; valaddr_reg:x16; val_offset:976; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 976, x17, x15, 976, x18)

inst_123:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x60451a and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x604519 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f60451a; op2val:0x54e04519; valaddr_reg:x16; val_offset:984; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 984, x17, x15, 984, x18)

inst_124:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x60451a and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x604519 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f60451a; op2val:0x54e04519; valaddr_reg:x16; val_offset:992; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 992, x17, x15, 992, x18)

inst_125:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x60451a and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x604519 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f60451a; op2val:0x54e04519; valaddr_reg:x16; val_offset:1000; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1000, x17, x15, 1000, x18)

inst_126:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x414e05 and fs2 == 0 and fe2 == 0xa8 and fm2 == 0x414e05 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ec14e05; op2val:0x54414e05; valaddr_reg:x16; val_offset:1008; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1008, x17, x15, 1008, x18)

inst_127:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x414e05 and fs2 == 0 and fe2 == 0xa8 and fm2 == 0x414e05 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ec14e05; op2val:0x54414e05; valaddr_reg:x16; val_offset:1016; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1016, x17, x15, 1016, x18)

inst_128:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x414e05 and fs2 == 0 and fe2 == 0xa8 and fm2 == 0x414e05 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ec14e05; op2val:0x54414e05; valaddr_reg:x16; val_offset:1024; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1024, x17, x15, 1024, x18)

inst_129:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x414e05 and fs2 == 0 and fe2 == 0xa8 and fm2 == 0x414e05 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ec14e05; op2val:0x54414e05; valaddr_reg:x16; val_offset:1032; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1032, x17, x15, 1032, x18)

inst_130:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x414e05 and fs2 == 0 and fe2 == 0xa8 and fm2 == 0x414e05 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ec14e05; op2val:0x54414e05; valaddr_reg:x16; val_offset:1040; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1040, x17, x15, 1040, x18)

inst_131:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x068188 and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x068188 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f068188; op2val:0x54868188; valaddr_reg:x16; val_offset:1048; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1048, x17, x15, 1048, x18)

inst_132:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x068188 and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x068188 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f068188; op2val:0x54868188; valaddr_reg:x16; val_offset:1056; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1056, x17, x15, 1056, x18)

inst_133:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x068188 and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x068188 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f068188; op2val:0x54868188; valaddr_reg:x16; val_offset:1064; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1064, x17, x15, 1064, x18)

inst_134:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x068188 and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x068188 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f068188; op2val:0x54868188; valaddr_reg:x16; val_offset:1072; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1072, x17, x15, 1072, x18)

inst_135:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x068188 and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x068188 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f068188; op2val:0x54868188; valaddr_reg:x16; val_offset:1080; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1080, x17, x15, 1080, x18)

inst_136:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x47f57b and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x47f57b and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f47f57b; op2val:0x54c7f57b; valaddr_reg:x16; val_offset:1088; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1088, x17, x15, 1088, x18)

inst_137:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x47f57b and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x47f57b and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f47f57b; op2val:0x54c7f57b; valaddr_reg:x16; val_offset:1096; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1096, x17, x15, 1096, x18)

inst_138:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x47f57b and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x47f57b and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f47f57b; op2val:0x54c7f57b; valaddr_reg:x16; val_offset:1104; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1104, x17, x15, 1104, x18)

inst_139:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x47f57b and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x47f57b and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f47f57b; op2val:0x54c7f57b; valaddr_reg:x16; val_offset:1112; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1112, x17, x15, 1112, x18)

inst_140:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x47f57b and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x47f57b and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f47f57b; op2val:0x54c7f57b; valaddr_reg:x16; val_offset:1120; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1120, x17, x15, 1120, x18)

inst_141:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x792c9a and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x792c99 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f792c9a; op2val:0x54f92c99; valaddr_reg:x16; val_offset:1128; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1128, x17, x15, 1128, x18)

inst_142:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x792c9a and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x792c99 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f792c9a; op2val:0x54f92c99; valaddr_reg:x16; val_offset:1136; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1136, x17, x15, 1136, x18)

inst_143:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x792c9a and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x792c99 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f792c9a; op2val:0x54f92c99; valaddr_reg:x16; val_offset:1144; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1144, x17, x15, 1144, x18)

inst_144:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x792c9a and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x792c99 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f792c9a; op2val:0x54f92c99; valaddr_reg:x16; val_offset:1152; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1152, x17, x15, 1152, x18)

inst_145:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x792c9a and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x792c99 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f792c9a; op2val:0x54f92c99; valaddr_reg:x16; val_offset:1160; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1160, x17, x15, 1160, x18)

inst_146:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x18c11e and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x18c11e and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f18c11e; op2val:0x5498c11e; valaddr_reg:x16; val_offset:1168; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1168, x17, x15, 1168, x18)

inst_147:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x18c11e and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x18c11e and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f18c11e; op2val:0x5498c11e; valaddr_reg:x16; val_offset:1176; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1176, x17, x15, 1176, x18)

inst_148:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x18c11e and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x18c11e and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f18c11e; op2val:0x5498c11e; valaddr_reg:x16; val_offset:1184; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1184, x17, x15, 1184, x18)

inst_149:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x18c11e and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x18c11e and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f18c11e; op2val:0x5498c11e; valaddr_reg:x16; val_offset:1192; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1192, x17, x15, 1192, x18)

inst_150:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x18c11e and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x18c11e and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f18c11e; op2val:0x5498c11e; valaddr_reg:x16; val_offset:1200; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1200, x17, x15, 1200, x18)

inst_151:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x17d648 and fs2 == 0 and fe2 == 0xa8 and fm2 == 0x17d648 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e97d648; op2val:0x5417d648; valaddr_reg:x16; val_offset:1208; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1208, x17, x15, 1208, x18)

inst_152:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x17d648 and fs2 == 0 and fe2 == 0xa8 and fm2 == 0x17d648 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e97d648; op2val:0x5417d648; valaddr_reg:x16; val_offset:1216; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1216, x17, x15, 1216, x18)

inst_153:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x17d648 and fs2 == 0 and fe2 == 0xa8 and fm2 == 0x17d648 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e97d648; op2val:0x5417d648; valaddr_reg:x16; val_offset:1224; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1224, x17, x15, 1224, x18)

inst_154:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x17d648 and fs2 == 0 and fe2 == 0xa8 and fm2 == 0x17d648 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e97d648; op2val:0x5417d648; valaddr_reg:x16; val_offset:1232; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1232, x17, x15, 1232, x18)

inst_155:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x17d648 and fs2 == 0 and fe2 == 0xa8 and fm2 == 0x17d648 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e97d648; op2val:0x5417d648; valaddr_reg:x16; val_offset:1240; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1240, x17, x15, 1240, x18)

inst_156:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0d4e5d and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x0d4e5c and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f0d4e5d; op2val:0x548d4e5c; valaddr_reg:x16; val_offset:1248; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1248, x17, x15, 1248, x18)

inst_157:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0d4e5d and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x0d4e5c and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f0d4e5d; op2val:0x548d4e5c; valaddr_reg:x16; val_offset:1256; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1256, x17, x15, 1256, x18)

inst_158:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0d4e5d and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x0d4e5c and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f0d4e5d; op2val:0x548d4e5c; valaddr_reg:x16; val_offset:1264; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1264, x17, x15, 1264, x18)

inst_159:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0d4e5d and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x0d4e5c and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f0d4e5d; op2val:0x548d4e5c; valaddr_reg:x16; val_offset:1272; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1272, x17, x15, 1272, x18)

inst_160:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0d4e5d and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x0d4e5c and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f0d4e5d; op2val:0x548d4e5c; valaddr_reg:x16; val_offset:1280; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1280, x17, x15, 1280, x18)

inst_161:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x70b656 and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x70b655 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f70b656; op2val:0x54f0b655; valaddr_reg:x16; val_offset:1288; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1288, x17, x15, 1288, x18)

inst_162:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x70b656 and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x70b655 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f70b656; op2val:0x54f0b655; valaddr_reg:x16; val_offset:1296; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1296, x17, x15, 1296, x18)

inst_163:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x70b656 and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x70b655 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f70b656; op2val:0x54f0b655; valaddr_reg:x16; val_offset:1304; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1304, x17, x15, 1304, x18)

inst_164:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x70b656 and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x70b655 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f70b656; op2val:0x54f0b655; valaddr_reg:x16; val_offset:1312; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1312, x17, x15, 1312, x18)

inst_165:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x70b656 and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x70b655 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f70b656; op2val:0x54f0b655; valaddr_reg:x16; val_offset:1320; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1320, x17, x15, 1320, x18)

inst_166:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x54eeaf and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x54eeaf and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f54eeaf; op2val:0x54d4eeaf; valaddr_reg:x16; val_offset:1328; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1328, x17, x15, 1328, x18)

inst_167:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x54eeaf and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x54eeaf and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f54eeaf; op2val:0x54d4eeaf; valaddr_reg:x16; val_offset:1336; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1336, x17, x15, 1336, x18)

inst_168:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x54eeaf and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x54eeaf and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f54eeaf; op2val:0x54d4eeaf; valaddr_reg:x16; val_offset:1344; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1344, x17, x15, 1344, x18)

inst_169:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x54eeaf and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x54eeaf and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f54eeaf; op2val:0x54d4eeaf; valaddr_reg:x16; val_offset:1352; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1352, x17, x15, 1352, x18)

inst_170:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x54eeaf and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x54eeaf and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f54eeaf; op2val:0x54d4eeaf; valaddr_reg:x16; val_offset:1360; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1360, x17, x15, 1360, x18)

inst_171:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x78f6e5 and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x78f6e5 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f78f6e5; op2val:0x54f8f6e5; valaddr_reg:x16; val_offset:1368; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1368, x17, x15, 1368, x18)

inst_172:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x78f6e5 and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x78f6e5 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f78f6e5; op2val:0x54f8f6e5; valaddr_reg:x16; val_offset:1376; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1376, x17, x15, 1376, x18)

inst_173:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x78f6e5 and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x78f6e5 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f78f6e5; op2val:0x54f8f6e5; valaddr_reg:x16; val_offset:1384; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1384, x17, x15, 1384, x18)

inst_174:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x78f6e5 and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x78f6e5 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f78f6e5; op2val:0x54f8f6e5; valaddr_reg:x16; val_offset:1392; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1392, x17, x15, 1392, x18)

inst_175:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x78f6e5 and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x78f6e5 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f78f6e5; op2val:0x54f8f6e5; valaddr_reg:x16; val_offset:1400; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1400, x17, x15, 1400, x18)

inst_176:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x18a405 and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x18a404 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f18a405; op2val:0x5498a404; valaddr_reg:x16; val_offset:1408; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1408, x17, x15, 1408, x18)

inst_177:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x18a405 and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x18a404 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f18a405; op2val:0x5498a404; valaddr_reg:x16; val_offset:1416; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1416, x17, x15, 1416, x18)

inst_178:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x18a405 and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x18a404 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f18a405; op2val:0x5498a404; valaddr_reg:x16; val_offset:1424; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1424, x17, x15, 1424, x18)

inst_179:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x18a405 and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x18a404 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f18a405; op2val:0x5498a404; valaddr_reg:x16; val_offset:1432; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1432, x17, x15, 1432, x18)

inst_180:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x18a405 and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x18a404 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f18a405; op2val:0x5498a404; valaddr_reg:x16; val_offset:1440; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1440, x17, x15, 1440, x18)

inst_181:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4a6c23 and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x4a6c23 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f4a6c23; op2val:0x54ca6c23; valaddr_reg:x16; val_offset:1448; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1448, x17, x15, 1448, x18)

inst_182:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4a6c23 and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x4a6c23 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f4a6c23; op2val:0x54ca6c23; valaddr_reg:x16; val_offset:1456; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1456, x17, x15, 1456, x18)

inst_183:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4a6c23 and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x4a6c23 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f4a6c23; op2val:0x54ca6c23; valaddr_reg:x16; val_offset:1464; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1464, x17, x15, 1464, x18)

inst_184:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4a6c23 and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x4a6c23 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f4a6c23; op2val:0x54ca6c23; valaddr_reg:x16; val_offset:1472; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1472, x17, x15, 1472, x18)

inst_185:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4a6c23 and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x4a6c23 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f4a6c23; op2val:0x54ca6c23; valaddr_reg:x16; val_offset:1480; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1480, x17, x15, 1480, x18)

inst_186:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0a3e3e and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x0a3e3d and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f0a3e3e; op2val:0x548a3e3d; valaddr_reg:x16; val_offset:1488; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1488, x17, x15, 1488, x18)

inst_187:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0a3e3e and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x0a3e3d and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f0a3e3e; op2val:0x548a3e3d; valaddr_reg:x16; val_offset:1496; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1496, x17, x15, 1496, x18)

inst_188:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0a3e3e and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x0a3e3d and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f0a3e3e; op2val:0x548a3e3d; valaddr_reg:x16; val_offset:1504; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1504, x17, x15, 1504, x18)

inst_189:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0a3e3e and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x0a3e3d and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f0a3e3e; op2val:0x548a3e3d; valaddr_reg:x16; val_offset:1512; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1512, x17, x15, 1512, x18)

inst_190:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0a3e3e and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x0a3e3d and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f0a3e3e; op2val:0x548a3e3d; valaddr_reg:x16; val_offset:1520; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1520, x17, x15, 1520, x18)

inst_191:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5e05fe and fs2 == 0 and fe2 == 0xa7 and fm2 == 0x5e05fd and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e5e05fe; op2val:0x53de05fd; valaddr_reg:x16; val_offset:1528; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1528, x17, x15, 1528, x18)

inst_192:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5e05fe and fs2 == 0 and fe2 == 0xa7 and fm2 == 0x5e05fd and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e5e05fe; op2val:0x53de05fd; valaddr_reg:x16; val_offset:1536; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1536, x17, x15, 1536, x18)

inst_193:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5e05fe and fs2 == 0 and fe2 == 0xa7 and fm2 == 0x5e05fd and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e5e05fe; op2val:0x53de05fd; valaddr_reg:x16; val_offset:1544; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1544, x17, x15, 1544, x18)

inst_194:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5e05fe and fs2 == 0 and fe2 == 0xa7 and fm2 == 0x5e05fd and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e5e05fe; op2val:0x53de05fd; valaddr_reg:x16; val_offset:1552; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1552, x17, x15, 1552, x18)

inst_195:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5e05fe and fs2 == 0 and fe2 == 0xa7 and fm2 == 0x5e05fd and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e5e05fe; op2val:0x53de05fd; valaddr_reg:x16; val_offset:1560; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1560, x17, x15, 1560, x18)

inst_196:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7f4f04 and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x7f4f04 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f7f4f04; op2val:0x54ff4f04; valaddr_reg:x16; val_offset:1568; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1568, x17, x15, 1568, x18)

inst_197:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7f4f04 and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x7f4f04 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f7f4f04; op2val:0x54ff4f04; valaddr_reg:x16; val_offset:1576; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1576, x17, x15, 1576, x18)

inst_198:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7f4f04 and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x7f4f04 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f7f4f04; op2val:0x54ff4f04; valaddr_reg:x16; val_offset:1584; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1584, x17, x15, 1584, x18)

inst_199:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7f4f04 and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x7f4f04 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f7f4f04; op2val:0x54ff4f04; valaddr_reg:x16; val_offset:1592; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1592, x17, x15, 1592, x18)

inst_200:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7f4f04 and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x7f4f04 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f7f4f04; op2val:0x54ff4f04; valaddr_reg:x16; val_offset:1600; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1600, x17, x15, 1600, x18)

inst_201:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4e9aef and fs2 == 0 and fe2 == 0xa8 and fm2 == 0x4e9aef and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ece9aef; op2val:0x544e9aef; valaddr_reg:x16; val_offset:1608; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1608, x17, x15, 1608, x18)

inst_202:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4e9aef and fs2 == 0 and fe2 == 0xa8 and fm2 == 0x4e9aef and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ece9aef; op2val:0x544e9aef; valaddr_reg:x16; val_offset:1616; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1616, x17, x15, 1616, x18)

inst_203:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4e9aef and fs2 == 0 and fe2 == 0xa8 and fm2 == 0x4e9aef and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ece9aef; op2val:0x544e9aef; valaddr_reg:x16; val_offset:1624; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1624, x17, x15, 1624, x18)

inst_204:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4e9aef and fs2 == 0 and fe2 == 0xa8 and fm2 == 0x4e9aef and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ece9aef; op2val:0x544e9aef; valaddr_reg:x16; val_offset:1632; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1632, x17, x15, 1632, x18)

inst_205:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4e9aef and fs2 == 0 and fe2 == 0xa8 and fm2 == 0x4e9aef and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ece9aef; op2val:0x544e9aef; valaddr_reg:x16; val_offset:1640; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1640, x17, x15, 1640, x18)

inst_206:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2107e6 and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x2107e6 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f2107e6; op2val:0x54a107e6; valaddr_reg:x16; val_offset:1648; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1648, x17, x15, 1648, x18)

inst_207:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2107e6 and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x2107e6 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f2107e6; op2val:0x54a107e6; valaddr_reg:x16; val_offset:1656; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1656, x17, x15, 1656, x18)

inst_208:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2107e6 and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x2107e6 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f2107e6; op2val:0x54a107e6; valaddr_reg:x16; val_offset:1664; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1664, x17, x15, 1664, x18)

inst_209:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2107e6 and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x2107e6 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f2107e6; op2val:0x54a107e6; valaddr_reg:x16; val_offset:1672; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1672, x17, x15, 1672, x18)

inst_210:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2107e6 and fs2 == 0 and fe2 == 0xa9 and fm2 == 0x2107e6 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f2107e6; op2val:0x54a107e6; valaddr_reg:x16; val_offset:1680; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1680, x17, x15, 1680, x18)

inst_211:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x383dbd and fs2 == 0 and fe2 == 0x7e and fm2 == 0x383dbc and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54b83dbd; op2val:0x3f383dbc; valaddr_reg:x16; val_offset:1688; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1688, x17, x15, 1688, x18)

inst_212:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x383dbd and fs2 == 0 and fe2 == 0x7e and fm2 == 0x383dbc and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54b83dbd; op2val:0x3f383dbc; valaddr_reg:x16; val_offset:1696; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1696, x17, x15, 1696, x18)

inst_213:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x383dbd and fs2 == 0 and fe2 == 0x7e and fm2 == 0x383dbc and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54b83dbd; op2val:0x3f383dbc; valaddr_reg:x16; val_offset:1704; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1704, x17, x15, 1704, x18)

inst_214:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x383dbd and fs2 == 0 and fe2 == 0x7e and fm2 == 0x383dbc and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54b83dbd; op2val:0x3f383dbc; valaddr_reg:x16; val_offset:1712; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1712, x17, x15, 1712, x18)

inst_215:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x383dbd and fs2 == 0 and fe2 == 0x7e and fm2 == 0x383dbc and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54b83dbd; op2val:0x3f383dbc; valaddr_reg:x16; val_offset:1720; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1720, x17, x15, 1720, x18)

inst_216:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x38ec57 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x38ec56 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x53b8ec57; op2val:0x3e38ec56; valaddr_reg:x16; val_offset:1728; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1728, x17, x15, 1728, x18)

inst_217:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x38ec57 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x38ec56 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x53b8ec57; op2val:0x3e38ec56; valaddr_reg:x16; val_offset:1736; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1736, x17, x15, 1736, x18)

inst_218:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x38ec57 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x38ec56 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x53b8ec57; op2val:0x3e38ec56; valaddr_reg:x16; val_offset:1744; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1744, x17, x15, 1744, x18)

inst_219:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x38ec57 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x38ec56 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x53b8ec57; op2val:0x3e38ec56; valaddr_reg:x16; val_offset:1752; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1752, x17, x15, 1752, x18)

inst_220:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x38ec57 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x38ec56 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x53b8ec57; op2val:0x3e38ec56; valaddr_reg:x16; val_offset:1760; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1760, x17, x15, 1760, x18)

inst_221:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x41d139 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x41d139 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54c1d139; op2val:0x3f41d139; valaddr_reg:x16; val_offset:1768; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1768, x17, x15, 1768, x18)

inst_222:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x41d139 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x41d139 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54c1d139; op2val:0x3f41d139; valaddr_reg:x16; val_offset:1776; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1776, x17, x15, 1776, x18)

inst_223:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x41d139 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x41d139 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54c1d139; op2val:0x3f41d139; valaddr_reg:x16; val_offset:1784; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1784, x17, x15, 1784, x18)

inst_224:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x41d139 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x41d139 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54c1d139; op2val:0x3f41d139; valaddr_reg:x16; val_offset:1792; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1792, x17, x15, 1792, x18)

inst_225:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x41d139 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x41d139 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54c1d139; op2val:0x3f41d139; valaddr_reg:x16; val_offset:1800; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1800, x17, x15, 1800, x18)

inst_226:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x1bfb13 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x1bfb12 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x541bfb13; op2val:0x3e9bfb12; valaddr_reg:x16; val_offset:1808; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1808, x17, x15, 1808, x18)

inst_227:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x1bfb13 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x1bfb12 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x541bfb13; op2val:0x3e9bfb12; valaddr_reg:x16; val_offset:1816; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1816, x17, x15, 1816, x18)

inst_228:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x1bfb13 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x1bfb12 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x541bfb13; op2val:0x3e9bfb12; valaddr_reg:x16; val_offset:1824; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1824, x17, x15, 1824, x18)

inst_229:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x1bfb13 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x1bfb12 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x541bfb13; op2val:0x3e9bfb12; valaddr_reg:x16; val_offset:1832; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1832, x17, x15, 1832, x18)

inst_230:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x1bfb13 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x1bfb12 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x541bfb13; op2val:0x3e9bfb12; valaddr_reg:x16; val_offset:1840; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1840, x17, x15, 1840, x18)

inst_231:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x581ef5 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x581ef4 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54581ef5; op2val:0x3ed81ef4; valaddr_reg:x16; val_offset:1848; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1848, x17, x15, 1848, x18)

inst_232:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x581ef5 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x581ef4 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54581ef5; op2val:0x3ed81ef4; valaddr_reg:x16; val_offset:1856; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1856, x17, x15, 1856, x18)

inst_233:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x581ef5 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x581ef4 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54581ef5; op2val:0x3ed81ef4; valaddr_reg:x16; val_offset:1864; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1864, x17, x15, 1864, x18)

inst_234:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x581ef5 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x581ef4 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54581ef5; op2val:0x3ed81ef4; valaddr_reg:x16; val_offset:1872; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1872, x17, x15, 1872, x18)

inst_235:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x581ef5 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x581ef4 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54581ef5; op2val:0x3ed81ef4; valaddr_reg:x16; val_offset:1880; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1880, x17, x15, 1880, x18)

inst_236:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x3303e2 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x3303e1 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54b303e2; op2val:0x3f3303e1; valaddr_reg:x16; val_offset:1888; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1888, x17, x15, 1888, x18)

inst_237:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x3303e2 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x3303e1 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54b303e2; op2val:0x3f3303e1; valaddr_reg:x16; val_offset:1896; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1896, x17, x15, 1896, x18)

inst_238:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x3303e2 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x3303e1 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54b303e2; op2val:0x3f3303e1; valaddr_reg:x16; val_offset:1904; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1904, x17, x15, 1904, x18)

inst_239:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x3303e2 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x3303e1 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54b303e2; op2val:0x3f3303e1; valaddr_reg:x16; val_offset:1912; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1912, x17, x15, 1912, x18)

inst_240:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x3303e2 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x3303e1 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54b303e2; op2val:0x3f3303e1; valaddr_reg:x16; val_offset:1920; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1920, x17, x15, 1920, x18)

inst_241:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x24ae97 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x24ae97 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x53a4ae97; op2val:0x3e24ae97; valaddr_reg:x16; val_offset:1928; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1928, x17, x15, 1928, x18)

inst_242:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x24ae97 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x24ae97 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x53a4ae97; op2val:0x3e24ae97; valaddr_reg:x16; val_offset:1936; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1936, x17, x15, 1936, x18)

inst_243:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x24ae97 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x24ae97 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x53a4ae97; op2val:0x3e24ae97; valaddr_reg:x16; val_offset:1944; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1944, x17, x15, 1944, x18)

inst_244:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x24ae97 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x24ae97 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x53a4ae97; op2val:0x3e24ae97; valaddr_reg:x16; val_offset:1952; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1952, x17, x15, 1952, x18)

inst_245:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x24ae97 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x24ae97 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x53a4ae97; op2val:0x3e24ae97; valaddr_reg:x16; val_offset:1960; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1960, x17, x15, 1960, x18)

inst_246:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x1fa038 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x1fa037 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x531fa038; op2val:0x3d9fa037; valaddr_reg:x16; val_offset:1968; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1968, x17, x15, 1968, x18)

inst_247:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x1fa038 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x1fa037 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x531fa038; op2val:0x3d9fa037; valaddr_reg:x16; val_offset:1976; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1976, x17, x15, 1976, x18)

inst_248:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x1fa038 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x1fa037 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x531fa038; op2val:0x3d9fa037; valaddr_reg:x16; val_offset:1984; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1984, x17, x15, 1984, x18)

inst_249:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x1fa038 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x1fa037 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x531fa038; op2val:0x3d9fa037; valaddr_reg:x16; val_offset:1992; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1992, x17, x15, 1992, x18)

inst_250:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x1fa038 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x1fa037 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x531fa038; op2val:0x3d9fa037; valaddr_reg:x16; val_offset:2000; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 2000, x17, x15, 2000, x18)

inst_251:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x5f7b6e and fs2 == 0 and fe2 == 0x7b and fm2 == 0x5f7b6d and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x535f7b6e; op2val:0x3ddf7b6d; valaddr_reg:x16; val_offset:2008; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 2008, x17, x15, 2008, x18)

inst_252:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x5f7b6e and fs2 == 0 and fe2 == 0x7b and fm2 == 0x5f7b6d and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x535f7b6e; op2val:0x3ddf7b6d; valaddr_reg:x16; val_offset:2016; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 2016, x17, x15, 2016, x18)

inst_253:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x5f7b6e and fs2 == 0 and fe2 == 0x7b and fm2 == 0x5f7b6d and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x535f7b6e; op2val:0x3ddf7b6d; valaddr_reg:x16; val_offset:2024; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 2024, x17, x15, 2024, x18)
addi x16,x16,2032
RVTEST_SIGBASE(x15,signature_x15_2)

inst_254:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x5f7b6e and fs2 == 0 and fe2 == 0x7b and fm2 == 0x5f7b6d and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x535f7b6e; op2val:0x3ddf7b6d; valaddr_reg:x16; val_offset:0; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 0, x17, x15, 0, x18)

inst_255:
// fs1 == 0 and fe1 == 0xa6 and fm1 == 0x5f7b6e and fs2 == 0 and fe2 == 0x7b and fm2 == 0x5f7b6d and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x535f7b6e; op2val:0x3ddf7b6d; valaddr_reg:x16; val_offset:8; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 8, x17, x15, 8, x18)

inst_256:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x41c0e2 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x41c0e2 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54c1c0e2; op2val:0x3f41c0e2; valaddr_reg:x16; val_offset:16; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 16, x17, x15, 16, x18)

inst_257:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x41c0e2 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x41c0e2 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54c1c0e2; op2val:0x3f41c0e2; valaddr_reg:x16; val_offset:24; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 24, x17, x15, 24, x18)

inst_258:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x41c0e2 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x41c0e2 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54c1c0e2; op2val:0x3f41c0e2; valaddr_reg:x16; val_offset:32; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 32, x17, x15, 32, x18)

inst_259:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x41c0e2 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x41c0e2 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54c1c0e2; op2val:0x3f41c0e2; valaddr_reg:x16; val_offset:40; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 40, x17, x15, 40, x18)

inst_260:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x41c0e2 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x41c0e2 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54c1c0e2; op2val:0x3f41c0e2; valaddr_reg:x16; val_offset:48; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 48, x17, x15, 48, x18)

inst_261:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x5c88a4 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5c88a4 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54dc88a4; op2val:0x3f5c88a4; valaddr_reg:x16; val_offset:56; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 56, x17, x15, 56, x18)

inst_262:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x5c88a4 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5c88a4 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54dc88a4; op2val:0x3f5c88a4; valaddr_reg:x16; val_offset:64; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 64, x17, x15, 64, x18)

inst_263:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x5c88a4 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5c88a4 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54dc88a4; op2val:0x3f5c88a4; valaddr_reg:x16; val_offset:72; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 72, x17, x15, 72, x18)

inst_264:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x5c88a4 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5c88a4 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54dc88a4; op2val:0x3f5c88a4; valaddr_reg:x16; val_offset:80; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 80, x17, x15, 80, x18)

inst_265:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x5c88a4 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5c88a4 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54dc88a4; op2val:0x3f5c88a4; valaddr_reg:x16; val_offset:88; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 88, x17, x15, 88, x18)

inst_266:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x4e8299 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x4e8299 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54ce8299; op2val:0x3f4e8299; valaddr_reg:x16; val_offset:96; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 96, x17, x15, 96, x18)

inst_267:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x4e8299 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x4e8299 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54ce8299; op2val:0x3f4e8299; valaddr_reg:x16; val_offset:104; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 104, x17, x15, 104, x18)

inst_268:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x4e8299 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x4e8299 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54ce8299; op2val:0x3f4e8299; valaddr_reg:x16; val_offset:112; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 112, x17, x15, 112, x18)

inst_269:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x4e8299 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x4e8299 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54ce8299; op2val:0x3f4e8299; valaddr_reg:x16; val_offset:120; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 120, x17, x15, 120, x18)

inst_270:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x4e8299 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x4e8299 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54ce8299; op2val:0x3f4e8299; valaddr_reg:x16; val_offset:128; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 128, x17, x15, 128, x18)

inst_271:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x3d5e44 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x3d5e44 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54bd5e44; op2val:0x3f3d5e44; valaddr_reg:x16; val_offset:136; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 136, x17, x15, 136, x18)

inst_272:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x3d5e44 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x3d5e44 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54bd5e44; op2val:0x3f3d5e44; valaddr_reg:x16; val_offset:144; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 144, x17, x15, 144, x18)

inst_273:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x3d5e44 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x3d5e44 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54bd5e44; op2val:0x3f3d5e44; valaddr_reg:x16; val_offset:152; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 152, x17, x15, 152, x18)

inst_274:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x3d5e44 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x3d5e44 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54bd5e44; op2val:0x3f3d5e44; valaddr_reg:x16; val_offset:160; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 160, x17, x15, 160, x18)

inst_275:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x3d5e44 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x3d5e44 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54bd5e44; op2val:0x3f3d5e44; valaddr_reg:x16; val_offset:168; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 168, x17, x15, 168, x18)

inst_276:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x6d4e48 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x6d4e48 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54ed4e48; op2val:0x3f6d4e48; valaddr_reg:x16; val_offset:176; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 176, x17, x15, 176, x18)

inst_277:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x6d4e48 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x6d4e48 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54ed4e48; op2val:0x3f6d4e48; valaddr_reg:x16; val_offset:184; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 184, x17, x15, 184, x18)

inst_278:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x6d4e48 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x6d4e48 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54ed4e48; op2val:0x3f6d4e48; valaddr_reg:x16; val_offset:192; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 192, x17, x15, 192, x18)

inst_279:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x6d4e48 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x6d4e48 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54ed4e48; op2val:0x3f6d4e48; valaddr_reg:x16; val_offset:200; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 200, x17, x15, 200, x18)

inst_280:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x6d4e48 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x6d4e48 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54ed4e48; op2val:0x3f6d4e48; valaddr_reg:x16; val_offset:208; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 208, x17, x15, 208, x18)

inst_281:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x5bb8f9 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5bb8f9 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54dbb8f9; op2val:0x3f5bb8f9; valaddr_reg:x16; val_offset:216; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 216, x17, x15, 216, x18)

inst_282:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x5bb8f9 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5bb8f9 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54dbb8f9; op2val:0x3f5bb8f9; valaddr_reg:x16; val_offset:224; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 224, x17, x15, 224, x18)

inst_283:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x5bb8f9 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5bb8f9 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54dbb8f9; op2val:0x3f5bb8f9; valaddr_reg:x16; val_offset:232; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 232, x17, x15, 232, x18)

inst_284:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x5bb8f9 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5bb8f9 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54dbb8f9; op2val:0x3f5bb8f9; valaddr_reg:x16; val_offset:240; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 240, x17, x15, 240, x18)

inst_285:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x5bb8f9 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5bb8f9 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54dbb8f9; op2val:0x3f5bb8f9; valaddr_reg:x16; val_offset:248; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 248, x17, x15, 248, x18)

inst_286:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x31d538 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x31d538 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54b1d538; op2val:0x3f31d538; valaddr_reg:x16; val_offset:256; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 256, x17, x15, 256, x18)

inst_287:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x31d538 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x31d538 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54b1d538; op2val:0x3f31d538; valaddr_reg:x16; val_offset:264; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 264, x17, x15, 264, x18)

inst_288:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x31d538 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x31d538 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54b1d538; op2val:0x3f31d538; valaddr_reg:x16; val_offset:272; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 272, x17, x15, 272, x18)

inst_289:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x31d538 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x31d538 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54b1d538; op2val:0x3f31d538; valaddr_reg:x16; val_offset:280; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 280, x17, x15, 280, x18)

inst_290:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x31d538 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x31d538 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54b1d538; op2val:0x3f31d538; valaddr_reg:x16; val_offset:288; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 288, x17, x15, 288, x18)

inst_291:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x256fa9 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x256fa8 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54256fa9; op2val:0x3ea56fa8; valaddr_reg:x16; val_offset:296; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 296, x17, x15, 296, x18)

inst_292:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x256fa9 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x256fa8 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54256fa9; op2val:0x3ea56fa8; valaddr_reg:x16; val_offset:304; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 304, x17, x15, 304, x18)

inst_293:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x256fa9 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x256fa8 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54256fa9; op2val:0x3ea56fa8; valaddr_reg:x16; val_offset:312; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 312, x17, x15, 312, x18)

inst_294:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x256fa9 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x256fa8 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54256fa9; op2val:0x3ea56fa8; valaddr_reg:x16; val_offset:320; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 320, x17, x15, 320, x18)

inst_295:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x256fa9 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x256fa8 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54256fa9; op2val:0x3ea56fa8; valaddr_reg:x16; val_offset:328; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 328, x17, x15, 328, x18)

inst_296:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x09f40b and fs2 == 0 and fe2 == 0x7e and fm2 == 0x09f40a and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x5489f40b; op2val:0x3f09f40a; valaddr_reg:x16; val_offset:336; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 336, x17, x15, 336, x18)

inst_297:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x09f40b and fs2 == 0 and fe2 == 0x7e and fm2 == 0x09f40a and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x5489f40b; op2val:0x3f09f40a; valaddr_reg:x16; val_offset:344; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 344, x17, x15, 344, x18)

inst_298:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x09f40b and fs2 == 0 and fe2 == 0x7e and fm2 == 0x09f40a and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x5489f40b; op2val:0x3f09f40a; valaddr_reg:x16; val_offset:352; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 352, x17, x15, 352, x18)

inst_299:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x09f40b and fs2 == 0 and fe2 == 0x7e and fm2 == 0x09f40a and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x5489f40b; op2val:0x3f09f40a; valaddr_reg:x16; val_offset:360; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 360, x17, x15, 360, x18)

inst_300:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x09f40b and fs2 == 0 and fe2 == 0x7e and fm2 == 0x09f40a and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x5489f40b; op2val:0x3f09f40a; valaddr_reg:x16; val_offset:368; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 368, x17, x15, 368, x18)

inst_301:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x6f0406 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x6f0406 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x53ef0406; op2val:0x3e6f0406; valaddr_reg:x16; val_offset:376; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 376, x17, x15, 376, x18)

inst_302:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x6f0406 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x6f0406 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x53ef0406; op2val:0x3e6f0406; valaddr_reg:x16; val_offset:384; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 384, x17, x15, 384, x18)

inst_303:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x6f0406 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x6f0406 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x53ef0406; op2val:0x3e6f0406; valaddr_reg:x16; val_offset:392; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 392, x17, x15, 392, x18)

inst_304:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x6f0406 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x6f0406 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x53ef0406; op2val:0x3e6f0406; valaddr_reg:x16; val_offset:400; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 400, x17, x15, 400, x18)

inst_305:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x6f0406 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x6f0406 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x53ef0406; op2val:0x3e6f0406; valaddr_reg:x16; val_offset:408; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 408, x17, x15, 408, x18)

inst_306:
// fs1 == 0 and fe1 == 0xa5 and fm1 == 0x4f4946 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x4f4946 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x52cf4946; op2val:0x3d4f4946; valaddr_reg:x16; val_offset:416; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 416, x17, x15, 416, x18)

inst_307:
// fs1 == 0 and fe1 == 0xa5 and fm1 == 0x4f4946 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x4f4946 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x52cf4946; op2val:0x3d4f4946; valaddr_reg:x16; val_offset:424; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 424, x17, x15, 424, x18)

inst_308:
// fs1 == 0 and fe1 == 0xa5 and fm1 == 0x4f4946 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x4f4946 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x52cf4946; op2val:0x3d4f4946; valaddr_reg:x16; val_offset:432; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 432, x17, x15, 432, x18)

inst_309:
// fs1 == 0 and fe1 == 0xa5 and fm1 == 0x4f4946 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x4f4946 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x52cf4946; op2val:0x3d4f4946; valaddr_reg:x16; val_offset:440; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 440, x17, x15, 440, x18)

inst_310:
// fs1 == 0 and fe1 == 0xa5 and fm1 == 0x4f4946 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x4f4946 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x52cf4946; op2val:0x3d4f4946; valaddr_reg:x16; val_offset:448; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 448, x17, x15, 448, x18)

inst_311:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x4ad922 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x4ad921 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54cad922; op2val:0x3f4ad921; valaddr_reg:x16; val_offset:456; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 456, x17, x15, 456, x18)

inst_312:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x4ad922 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x4ad921 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54cad922; op2val:0x3f4ad921; valaddr_reg:x16; val_offset:464; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 464, x17, x15, 464, x18)

inst_313:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x4ad922 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x4ad921 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54cad922; op2val:0x3f4ad921; valaddr_reg:x16; val_offset:472; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 472, x17, x15, 472, x18)

inst_314:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x4ad922 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x4ad921 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54cad922; op2val:0x3f4ad921; valaddr_reg:x16; val_offset:480; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 480, x17, x15, 480, x18)

inst_315:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x4ad922 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x4ad921 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54cad922; op2val:0x3f4ad921; valaddr_reg:x16; val_offset:488; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 488, x17, x15, 488, x18)

inst_316:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x645d6a and fs2 == 0 and fe2 == 0x7e and fm2 == 0x645d69 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54e45d6a; op2val:0x3f645d69; valaddr_reg:x16; val_offset:496; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 496, x17, x15, 496, x18)

inst_317:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x645d6a and fs2 == 0 and fe2 == 0x7e and fm2 == 0x645d69 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54e45d6a; op2val:0x3f645d69; valaddr_reg:x16; val_offset:504; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 504, x17, x15, 504, x18)

inst_318:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x645d6a and fs2 == 0 and fe2 == 0x7e and fm2 == 0x645d69 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54e45d6a; op2val:0x3f645d69; valaddr_reg:x16; val_offset:512; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 512, x17, x15, 512, x18)

inst_319:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x645d6a and fs2 == 0 and fe2 == 0x7e and fm2 == 0x645d69 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54e45d6a; op2val:0x3f645d69; valaddr_reg:x16; val_offset:520; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 520, x17, x15, 520, x18)

inst_320:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x645d6a and fs2 == 0 and fe2 == 0x7e and fm2 == 0x645d69 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54e45d6a; op2val:0x3f645d69; valaddr_reg:x16; val_offset:528; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 528, x17, x15, 528, x18)

inst_321:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x10e5ac and fs2 == 0 and fe2 == 0x7e and fm2 == 0x10e5ac and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x5490e5ac; op2val:0x3f10e5ac; valaddr_reg:x16; val_offset:536; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 536, x17, x15, 536, x18)

inst_322:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x10e5ac and fs2 == 0 and fe2 == 0x7e and fm2 == 0x10e5ac and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x5490e5ac; op2val:0x3f10e5ac; valaddr_reg:x16; val_offset:544; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 544, x17, x15, 544, x18)

inst_323:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x10e5ac and fs2 == 0 and fe2 == 0x7e and fm2 == 0x10e5ac and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x5490e5ac; op2val:0x3f10e5ac; valaddr_reg:x16; val_offset:552; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 552, x17, x15, 552, x18)

inst_324:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x10e5ac and fs2 == 0 and fe2 == 0x7e and fm2 == 0x10e5ac and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x5490e5ac; op2val:0x3f10e5ac; valaddr_reg:x16; val_offset:560; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 560, x17, x15, 560, x18)

inst_325:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x10e5ac and fs2 == 0 and fe2 == 0x7e and fm2 == 0x10e5ac and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x5490e5ac; op2val:0x3f10e5ac; valaddr_reg:x16; val_offset:568; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 568, x17, x15, 568, x18)

inst_326:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x255d86 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x255d86 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54a55d86; op2val:0x3f255d86; valaddr_reg:x16; val_offset:576; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 576, x17, x15, 576, x18)

inst_327:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x255d86 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x255d86 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54a55d86; op2val:0x3f255d86; valaddr_reg:x16; val_offset:584; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 584, x17, x15, 584, x18)

inst_328:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x255d86 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x255d86 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54a55d86; op2val:0x3f255d86; valaddr_reg:x16; val_offset:592; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 592, x17, x15, 592, x18)

inst_329:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x255d86 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x255d86 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54a55d86; op2val:0x3f255d86; valaddr_reg:x16; val_offset:600; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 600, x17, x15, 600, x18)

inst_330:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x255d86 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x255d86 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54a55d86; op2val:0x3f255d86; valaddr_reg:x16; val_offset:608; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 608, x17, x15, 608, x18)

inst_331:
// fs1 == 0 and fe1 == 0xa5 and fm1 == 0x17ce99 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x17ce99 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x5297ce99; op2val:0x3d17ce99; valaddr_reg:x16; val_offset:616; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 616, x17, x15, 616, x18)

inst_332:
// fs1 == 0 and fe1 == 0xa5 and fm1 == 0x17ce99 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x17ce99 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x5297ce99; op2val:0x3d17ce99; valaddr_reg:x16; val_offset:624; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 624, x17, x15, 624, x18)

inst_333:
// fs1 == 0 and fe1 == 0xa5 and fm1 == 0x17ce99 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x17ce99 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x5297ce99; op2val:0x3d17ce99; valaddr_reg:x16; val_offset:632; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 632, x17, x15, 632, x18)

inst_334:
// fs1 == 0 and fe1 == 0xa5 and fm1 == 0x17ce99 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x17ce99 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x5297ce99; op2val:0x3d17ce99; valaddr_reg:x16; val_offset:640; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 640, x17, x15, 640, x18)

inst_335:
// fs1 == 0 and fe1 == 0xa5 and fm1 == 0x17ce99 and fs2 == 0 and fe2 == 0x7a and fm2 == 0x17ce99 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x5297ce99; op2val:0x3d17ce99; valaddr_reg:x16; val_offset:648; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 648, x17, x15, 648, x18)

inst_336:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x461432 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x461432 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x53c61432; op2val:0x3e461432; valaddr_reg:x16; val_offset:656; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 656, x17, x15, 656, x18)

inst_337:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x461432 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x461432 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x53c61432; op2val:0x3e461432; valaddr_reg:x16; val_offset:664; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 664, x17, x15, 664, x18)

inst_338:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x461432 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x461432 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x53c61432; op2val:0x3e461432; valaddr_reg:x16; val_offset:672; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 672, x17, x15, 672, x18)

inst_339:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x461432 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x461432 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x53c61432; op2val:0x3e461432; valaddr_reg:x16; val_offset:680; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 680, x17, x15, 680, x18)

inst_340:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x461432 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x461432 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x53c61432; op2val:0x3e461432; valaddr_reg:x16; val_offset:688; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 688, x17, x15, 688, x18)

inst_341:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x060d40 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x060d40 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54860d40; op2val:0x3f060d40; valaddr_reg:x16; val_offset:696; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 696, x17, x15, 696, x18)

inst_342:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x060d40 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x060d40 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54860d40; op2val:0x3f060d40; valaddr_reg:x16; val_offset:704; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 704, x17, x15, 704, x18)

inst_343:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x060d40 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x060d40 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54860d40; op2val:0x3f060d40; valaddr_reg:x16; val_offset:712; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 712, x17, x15, 712, x18)

inst_344:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x060d40 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x060d40 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54860d40; op2val:0x3f060d40; valaddr_reg:x16; val_offset:720; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 720, x17, x15, 720, x18)

inst_345:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x060d40 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x060d40 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54860d40; op2val:0x3f060d40; valaddr_reg:x16; val_offset:728; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 728, x17, x15, 728, x18)

inst_346:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x2974bd and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2974bd and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54a974bd; op2val:0x3f2974bd; valaddr_reg:x16; val_offset:736; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 736, x17, x15, 736, x18)

inst_347:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x2974bd and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2974bd and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54a974bd; op2val:0x3f2974bd; valaddr_reg:x16; val_offset:744; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 744, x17, x15, 744, x18)

inst_348:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x2974bd and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2974bd and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54a974bd; op2val:0x3f2974bd; valaddr_reg:x16; val_offset:752; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 752, x17, x15, 752, x18)

inst_349:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x2974bd and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2974bd and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54a974bd; op2val:0x3f2974bd; valaddr_reg:x16; val_offset:760; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 760, x17, x15, 760, x18)

inst_350:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x2974bd and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2974bd and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54a974bd; op2val:0x3f2974bd; valaddr_reg:x16; val_offset:768; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 768, x17, x15, 768, x18)

inst_351:
// fs1 == 0 and fe1 == 0xa1 and fm1 == 0x1b8284 and fs2 == 0 and fe2 == 0x76 and fm2 == 0x1b8283 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x509b8284; op2val:0x3b1b8283; valaddr_reg:x16; val_offset:776; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 776, x17, x15, 776, x18)

inst_352:
// fs1 == 0 and fe1 == 0xa1 and fm1 == 0x1b8284 and fs2 == 0 and fe2 == 0x76 and fm2 == 0x1b8283 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x509b8284; op2val:0x3b1b8283; valaddr_reg:x16; val_offset:784; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 784, x17, x15, 784, x18)

inst_353:
// fs1 == 0 and fe1 == 0xa1 and fm1 == 0x1b8284 and fs2 == 0 and fe2 == 0x76 and fm2 == 0x1b8283 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x509b8284; op2val:0x3b1b8283; valaddr_reg:x16; val_offset:792; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 792, x17, x15, 792, x18)

inst_354:
// fs1 == 0 and fe1 == 0xa1 and fm1 == 0x1b8284 and fs2 == 0 and fe2 == 0x76 and fm2 == 0x1b8283 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x509b8284; op2val:0x3b1b8283; valaddr_reg:x16; val_offset:800; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 800, x17, x15, 800, x18)

inst_355:
// fs1 == 0 and fe1 == 0xa1 and fm1 == 0x1b8284 and fs2 == 0 and fe2 == 0x76 and fm2 == 0x1b8283 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x509b8284; op2val:0x3b1b8283; valaddr_reg:x16; val_offset:808; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 808, x17, x15, 808, x18)

inst_356:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x19f2fd and fs2 == 0 and fe2 == 0x7e and fm2 == 0x19f2fd and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x5499f2fd; op2val:0x3f19f2fd; valaddr_reg:x16; val_offset:816; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 816, x17, x15, 816, x18)

inst_357:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x19f2fd and fs2 == 0 and fe2 == 0x7e and fm2 == 0x19f2fd and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x5499f2fd; op2val:0x3f19f2fd; valaddr_reg:x16; val_offset:824; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 824, x17, x15, 824, x18)

inst_358:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x19f2fd and fs2 == 0 and fe2 == 0x7e and fm2 == 0x19f2fd and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x5499f2fd; op2val:0x3f19f2fd; valaddr_reg:x16; val_offset:832; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 832, x17, x15, 832, x18)

inst_359:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x19f2fd and fs2 == 0 and fe2 == 0x7e and fm2 == 0x19f2fd and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x5499f2fd; op2val:0x3f19f2fd; valaddr_reg:x16; val_offset:840; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 840, x17, x15, 840, x18)

inst_360:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x19f2fd and fs2 == 0 and fe2 == 0x7e and fm2 == 0x19f2fd and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x5499f2fd; op2val:0x3f19f2fd; valaddr_reg:x16; val_offset:848; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 848, x17, x15, 848, x18)

inst_361:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x5c29ab and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5c29aa and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54dc29ab; op2val:0x3f5c29aa; valaddr_reg:x16; val_offset:856; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 856, x17, x15, 856, x18)

inst_362:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x5c29ab and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5c29aa and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54dc29ab; op2val:0x3f5c29aa; valaddr_reg:x16; val_offset:864; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 864, x17, x15, 864, x18)

inst_363:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x5c29ab and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5c29aa and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54dc29ab; op2val:0x3f5c29aa; valaddr_reg:x16; val_offset:872; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 872, x17, x15, 872, x18)

inst_364:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x5c29ab and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5c29aa and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54dc29ab; op2val:0x3f5c29aa; valaddr_reg:x16; val_offset:880; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 880, x17, x15, 880, x18)

inst_365:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x5c29ab and fs2 == 0 and fe2 == 0x7e and fm2 == 0x5c29aa and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54dc29ab; op2val:0x3f5c29aa; valaddr_reg:x16; val_offset:888; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 888, x17, x15, 888, x18)

inst_366:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x2fc6fe and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2fc6fe and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54afc6fe; op2val:0x3f2fc6fe; valaddr_reg:x16; val_offset:896; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 896, x17, x15, 896, x18)

inst_367:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x2fc6fe and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2fc6fe and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54afc6fe; op2val:0x3f2fc6fe; valaddr_reg:x16; val_offset:904; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 904, x17, x15, 904, x18)

inst_368:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x2fc6fe and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2fc6fe and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54afc6fe; op2val:0x3f2fc6fe; valaddr_reg:x16; val_offset:912; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 912, x17, x15, 912, x18)

inst_369:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x2fc6fe and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2fc6fe and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54afc6fe; op2val:0x3f2fc6fe; valaddr_reg:x16; val_offset:920; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 920, x17, x15, 920, x18)

inst_370:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x2fc6fe and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2fc6fe and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54afc6fe; op2val:0x3f2fc6fe; valaddr_reg:x16; val_offset:928; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 928, x17, x15, 928, x18)

inst_371:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x22365b and fs2 == 0 and fe2 == 0x7e and fm2 == 0x22365b and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54a2365b; op2val:0x3f22365b; valaddr_reg:x16; val_offset:936; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 936, x17, x15, 936, x18)

inst_372:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x22365b and fs2 == 0 and fe2 == 0x7e and fm2 == 0x22365b and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54a2365b; op2val:0x3f22365b; valaddr_reg:x16; val_offset:944; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 944, x17, x15, 944, x18)

inst_373:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x22365b and fs2 == 0 and fe2 == 0x7e and fm2 == 0x22365b and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54a2365b; op2val:0x3f22365b; valaddr_reg:x16; val_offset:952; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 952, x17, x15, 952, x18)

inst_374:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x22365b and fs2 == 0 and fe2 == 0x7e and fm2 == 0x22365b and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54a2365b; op2val:0x3f22365b; valaddr_reg:x16; val_offset:960; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 960, x17, x15, 960, x18)

inst_375:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x22365b and fs2 == 0 and fe2 == 0x7e and fm2 == 0x22365b and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54a2365b; op2val:0x3f22365b; valaddr_reg:x16; val_offset:968; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 968, x17, x15, 968, x18)

inst_376:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x0d779d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0d779c and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x548d779d; op2val:0x3f0d779c; valaddr_reg:x16; val_offset:976; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 976, x17, x15, 976, x18)

inst_377:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x0d779d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0d779c and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x548d779d; op2val:0x3f0d779c; valaddr_reg:x16; val_offset:984; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 984, x17, x15, 984, x18)

inst_378:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x0d779d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0d779c and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x548d779d; op2val:0x3f0d779c; valaddr_reg:x16; val_offset:992; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 992, x17, x15, 992, x18)

inst_379:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x0d779d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0d779c and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x548d779d; op2val:0x3f0d779c; valaddr_reg:x16; val_offset:1000; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1000, x17, x15, 1000, x18)

inst_380:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x0d779d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0d779c and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x548d779d; op2val:0x3f0d779c; valaddr_reg:x16; val_offset:1008; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1008, x17, x15, 1008, x18)

inst_381:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x7306d2 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7306d1 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54f306d2; op2val:0x3f7306d1; valaddr_reg:x16; val_offset:1016; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1016, x17, x15, 1016, x18)

inst_382:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x7306d2 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7306d1 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54f306d2; op2val:0x3f7306d1; valaddr_reg:x16; val_offset:1024; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1024, x17, x15, 1024, x18)

inst_383:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x7306d2 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7306d1 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54f306d2; op2val:0x3f7306d1; valaddr_reg:x16; val_offset:1032; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1032, x17, x15, 1032, x18)

inst_384:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x7306d2 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7306d1 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54f306d2; op2val:0x3f7306d1; valaddr_reg:x16; val_offset:1040; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1040, x17, x15, 1040, x18)

inst_385:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x7306d2 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7306d1 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54f306d2; op2val:0x3f7306d1; valaddr_reg:x16; val_offset:1048; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1048, x17, x15, 1048, x18)

inst_386:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x4d9ba9 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x4d9ba9 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54cd9ba9; op2val:0x3f4d9ba9; valaddr_reg:x16; val_offset:1056; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1056, x17, x15, 1056, x18)

inst_387:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x4d9ba9 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x4d9ba9 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54cd9ba9; op2val:0x3f4d9ba9; valaddr_reg:x16; val_offset:1064; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1064, x17, x15, 1064, x18)

inst_388:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x4d9ba9 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x4d9ba9 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54cd9ba9; op2val:0x3f4d9ba9; valaddr_reg:x16; val_offset:1072; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1072, x17, x15, 1072, x18)

inst_389:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x4d9ba9 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x4d9ba9 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54cd9ba9; op2val:0x3f4d9ba9; valaddr_reg:x16; val_offset:1080; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1080, x17, x15, 1080, x18)

inst_390:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x4d9ba9 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x4d9ba9 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54cd9ba9; op2val:0x3f4d9ba9; valaddr_reg:x16; val_offset:1088; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1088, x17, x15, 1088, x18)

inst_391:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x481b10 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x481b10 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54c81b10; op2val:0x3f481b10; valaddr_reg:x16; val_offset:1096; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1096, x17, x15, 1096, x18)

inst_392:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x481b10 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x481b10 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54c81b10; op2val:0x3f481b10; valaddr_reg:x16; val_offset:1104; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1104, x17, x15, 1104, x18)

inst_393:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x481b10 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x481b10 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54c81b10; op2val:0x3f481b10; valaddr_reg:x16; val_offset:1112; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1112, x17, x15, 1112, x18)

inst_394:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x481b10 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x481b10 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54c81b10; op2val:0x3f481b10; valaddr_reg:x16; val_offset:1120; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1120, x17, x15, 1120, x18)

inst_395:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x481b10 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x481b10 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54c81b10; op2val:0x3f481b10; valaddr_reg:x16; val_offset:1128; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1128, x17, x15, 1128, x18)

inst_396:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x4eed34 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x4eed33 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x53ceed34; op2val:0x3e4eed33; valaddr_reg:x16; val_offset:1136; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1136, x17, x15, 1136, x18)

inst_397:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x4eed34 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x4eed33 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x53ceed34; op2val:0x3e4eed33; valaddr_reg:x16; val_offset:1144; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1144, x17, x15, 1144, x18)

inst_398:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x4eed34 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x4eed33 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x53ceed34; op2val:0x3e4eed33; valaddr_reg:x16; val_offset:1152; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1152, x17, x15, 1152, x18)

inst_399:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x4eed34 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x4eed33 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x53ceed34; op2val:0x3e4eed33; valaddr_reg:x16; val_offset:1160; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1160, x17, x15, 1160, x18)

inst_400:
// fs1 == 0 and fe1 == 0xa7 and fm1 == 0x4eed34 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x4eed33 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x53ceed34; op2val:0x3e4eed33; valaddr_reg:x16; val_offset:1168; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1168, x17, x15, 1168, x18)

inst_401:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x0710df and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0710df and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x548710df; op2val:0x3f0710df; valaddr_reg:x16; val_offset:1176; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1176, x17, x15, 1176, x18)

inst_402:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x0710df and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0710df and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x548710df; op2val:0x3f0710df; valaddr_reg:x16; val_offset:1184; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1184, x17, x15, 1184, x18)

inst_403:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x0710df and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0710df and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x548710df; op2val:0x3f0710df; valaddr_reg:x16; val_offset:1192; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1192, x17, x15, 1192, x18)

inst_404:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x0710df and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0710df and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x548710df; op2val:0x3f0710df; valaddr_reg:x16; val_offset:1200; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1200, x17, x15, 1200, x18)

inst_405:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x0710df and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0710df and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x548710df; op2val:0x3f0710df; valaddr_reg:x16; val_offset:1208; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1208, x17, x15, 1208, x18)

inst_406:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x4bfda1 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x4bfda1 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x544bfda1; op2val:0x3ecbfda1; valaddr_reg:x16; val_offset:1216; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1216, x17, x15, 1216, x18)

inst_407:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x4bfda1 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x4bfda1 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x544bfda1; op2val:0x3ecbfda1; valaddr_reg:x16; val_offset:1224; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1224, x17, x15, 1224, x18)

inst_408:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x4bfda1 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x4bfda1 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x544bfda1; op2val:0x3ecbfda1; valaddr_reg:x16; val_offset:1232; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1232, x17, x15, 1232, x18)

inst_409:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x4bfda1 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x4bfda1 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x544bfda1; op2val:0x3ecbfda1; valaddr_reg:x16; val_offset:1240; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1240, x17, x15, 1240, x18)

inst_410:
// fs1 == 0 and fe1 == 0xa8 and fm1 == 0x4bfda1 and fs2 == 0 and fe2 == 0x7d and fm2 == 0x4bfda1 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x544bfda1; op2val:0x3ecbfda1; valaddr_reg:x16; val_offset:1248; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1248, x17, x15, 1248, x18)

inst_411:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x1787d3 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1787d3 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x549787d3; op2val:0x3f1787d3; valaddr_reg:x16; val_offset:1256; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1256, x17, x15, 1256, x18)

inst_412:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x1787d3 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1787d3 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x549787d3; op2val:0x3f1787d3; valaddr_reg:x16; val_offset:1264; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1264, x17, x15, 1264, x18)

inst_413:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x1787d3 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1787d3 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x549787d3; op2val:0x3f1787d3; valaddr_reg:x16; val_offset:1272; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1272, x17, x15, 1272, x18)

inst_414:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x1787d3 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1787d3 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x549787d3; op2val:0x3f1787d3; valaddr_reg:x16; val_offset:1280; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1280, x17, x15, 1280, x18)

inst_415:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x1787d3 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x1787d3 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x549787d3; op2val:0x3f1787d3; valaddr_reg:x16; val_offset:1288; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1288, x17, x15, 1288, x18)

inst_416:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x50d4df and fs2 == 0 and fe2 == 0x7e and fm2 == 0x50d4df and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54d0d4df; op2val:0x3f50d4df; valaddr_reg:x16; val_offset:1296; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1296, x17, x15, 1296, x18)

inst_417:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x50d4df and fs2 == 0 and fe2 == 0x7e and fm2 == 0x50d4df and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54d0d4df; op2val:0x3f50d4df; valaddr_reg:x16; val_offset:1304; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1304, x17, x15, 1304, x18)

inst_418:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x50d4df and fs2 == 0 and fe2 == 0x7e and fm2 == 0x50d4df and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54d0d4df; op2val:0x3f50d4df; valaddr_reg:x16; val_offset:1312; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1312, x17, x15, 1312, x18)

inst_419:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x50d4df and fs2 == 0 and fe2 == 0x7e and fm2 == 0x50d4df and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54d0d4df; op2val:0x3f50d4df; valaddr_reg:x16; val_offset:1320; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1320, x17, x15, 1320, x18)

inst_420:
// fs1 == 0 and fe1 == 0xa9 and fm1 == 0x50d4df and fs2 == 0 and fe2 == 0x7e and fm2 == 0x50d4df and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54d0d4df; op2val:0x3f50d4df; valaddr_reg:x16; val_offset:1328; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1328, x17, x15, 1328, x18)

inst_421:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x155613 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x09d94d and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f155613; op2val:0x7e09d94d; valaddr_reg:x16; val_offset:1336; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1336, x17, x15, 1336, x18)

inst_422:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x155613 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x09d94d and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f155613; op2val:0x7e09d94d; valaddr_reg:x16; val_offset:1344; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1344, x17, x15, 1344, x18)

inst_423:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x155613 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x09d94d and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f155613; op2val:0x7e09d94d; valaddr_reg:x16; val_offset:1352; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1352, x17, x15, 1352, x18)

inst_424:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x155613 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x09d94d and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f155613; op2val:0x7e09d94d; valaddr_reg:x16; val_offset:1360; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1360, x17, x15, 1360, x18)

inst_425:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x155613 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x09d94d and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f155613; op2val:0x7e09d94d; valaddr_reg:x16; val_offset:1368; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1368, x17, x15, 1368, x18)

inst_426:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x50adef and fs2 == 0 and fe2 == 0xfc and fm2 == 0x40a08f and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f50adef; op2val:0x7e40a08f; valaddr_reg:x16; val_offset:1376; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1376, x17, x15, 1376, x18)

inst_427:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x50adef and fs2 == 0 and fe2 == 0xfc and fm2 == 0x40a08f and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f50adef; op2val:0x7e40a08f; valaddr_reg:x16; val_offset:1384; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1384, x17, x15, 1384, x18)

inst_428:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x50adef and fs2 == 0 and fe2 == 0xfc and fm2 == 0x40a08f and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f50adef; op2val:0x7e40a08f; valaddr_reg:x16; val_offset:1392; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1392, x17, x15, 1392, x18)

inst_429:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x50adef and fs2 == 0 and fe2 == 0xfc and fm2 == 0x40a08f and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f50adef; op2val:0x7e40a08f; valaddr_reg:x16; val_offset:1400; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1400, x17, x15, 1400, x18)

inst_430:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x50adef and fs2 == 0 and fe2 == 0xfc and fm2 == 0x40a08f and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f50adef; op2val:0x7e40a08f; valaddr_reg:x16; val_offset:1408; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1408, x17, x15, 1408, x18)

inst_431:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x625243 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x50e979 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e625243; op2val:0x7d50e979; valaddr_reg:x16; val_offset:1416; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1416, x17, x15, 1416, x18)

inst_432:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x625243 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x50e979 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e625243; op2val:0x7d50e979; valaddr_reg:x16; val_offset:1424; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1424, x17, x15, 1424, x18)

inst_433:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x625243 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x50e979 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e625243; op2val:0x7d50e979; valaddr_reg:x16; val_offset:1432; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1432, x17, x15, 1432, x18)

inst_434:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x625243 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x50e979 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e625243; op2val:0x7d50e979; valaddr_reg:x16; val_offset:1440; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1440, x17, x15, 1440, x18)

inst_435:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x625243 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x50e979 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e625243; op2val:0x7d50e979; valaddr_reg:x16; val_offset:1448; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1448, x17, x15, 1448, x18)

inst_436:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x667d6c and fs2 == 0 and fe2 == 0xfc and fm2 == 0x54c28b and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f667d6c; op2val:0x7e54c28b; valaddr_reg:x16; val_offset:1456; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1456, x17, x15, 1456, x18)

inst_437:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x667d6c and fs2 == 0 and fe2 == 0xfc and fm2 == 0x54c28b and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f667d6c; op2val:0x7e54c28b; valaddr_reg:x16; val_offset:1464; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1464, x17, x15, 1464, x18)

inst_438:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x667d6c and fs2 == 0 and fe2 == 0xfc and fm2 == 0x54c28b and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f667d6c; op2val:0x7e54c28b; valaddr_reg:x16; val_offset:1472; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1472, x17, x15, 1472, x18)

inst_439:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x667d6c and fs2 == 0 and fe2 == 0xfc and fm2 == 0x54c28b and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f667d6c; op2val:0x7e54c28b; valaddr_reg:x16; val_offset:1480; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1480, x17, x15, 1480, x18)

inst_440:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x667d6c and fs2 == 0 and fe2 == 0xfc and fm2 == 0x54c28b and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f667d6c; op2val:0x7e54c28b; valaddr_reg:x16; val_offset:1488; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1488, x17, x15, 1488, x18)

inst_441:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x634b63 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x51cf70 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f634b63; op2val:0x7e51cf70; valaddr_reg:x16; val_offset:1496; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1496, x17, x15, 1496, x18)

inst_442:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x634b63 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x51cf70 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f634b63; op2val:0x7e51cf70; valaddr_reg:x16; val_offset:1504; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1504, x17, x15, 1504, x18)

inst_443:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x634b63 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x51cf70 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f634b63; op2val:0x7e51cf70; valaddr_reg:x16; val_offset:1512; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1512, x17, x15, 1512, x18)

inst_444:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x634b63 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x51cf70 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f634b63; op2val:0x7e51cf70; valaddr_reg:x16; val_offset:1520; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1520, x17, x15, 1520, x18)

inst_445:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x634b63 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x51cf70 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f634b63; op2val:0x7e51cf70; valaddr_reg:x16; val_offset:1528; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1528, x17, x15, 1528, x18)

inst_446:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x25a95b and fs2 == 0 and fe2 == 0xfc and fm2 == 0x18eb19 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f25a95b; op2val:0x7e18eb19; valaddr_reg:x16; val_offset:1536; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1536, x17, x15, 1536, x18)

inst_447:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x25a95b and fs2 == 0 and fe2 == 0xfc and fm2 == 0x18eb19 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f25a95b; op2val:0x7e18eb19; valaddr_reg:x16; val_offset:1544; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1544, x17, x15, 1544, x18)

inst_448:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x25a95b and fs2 == 0 and fe2 == 0xfc and fm2 == 0x18eb19 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f25a95b; op2val:0x7e18eb19; valaddr_reg:x16; val_offset:1552; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1552, x17, x15, 1552, x18)

inst_449:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x25a95b and fs2 == 0 and fe2 == 0xfc and fm2 == 0x18eb19 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f25a95b; op2val:0x7e18eb19; valaddr_reg:x16; val_offset:1560; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1560, x17, x15, 1560, x18)

inst_450:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x25a95b and fs2 == 0 and fe2 == 0xfc and fm2 == 0x18eb19 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f25a95b; op2val:0x7e18eb19; valaddr_reg:x16; val_offset:1568; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1568, x17, x15, 1568, x18)

inst_451:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6ac0c2 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x58b1ee and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3eeac0c2; op2val:0x7dd8b1ee; valaddr_reg:x16; val_offset:1576; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1576, x17, x15, 1576, x18)

inst_452:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6ac0c2 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x58b1ee and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3eeac0c2; op2val:0x7dd8b1ee; valaddr_reg:x16; val_offset:1584; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1584, x17, x15, 1584, x18)

inst_453:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6ac0c2 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x58b1ee and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3eeac0c2; op2val:0x7dd8b1ee; valaddr_reg:x16; val_offset:1592; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1592, x17, x15, 1592, x18)

inst_454:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6ac0c2 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x58b1ee and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3eeac0c2; op2val:0x7dd8b1ee; valaddr_reg:x16; val_offset:1600; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1600, x17, x15, 1600, x18)

inst_455:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6ac0c2 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x58b1ee and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3eeac0c2; op2val:0x7dd8b1ee; valaddr_reg:x16; val_offset:1608; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1608, x17, x15, 1608, x18)

inst_456:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2ac983 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x1da652 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f2ac983; op2val:0x7e1da652; valaddr_reg:x16; val_offset:1616; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1616, x17, x15, 1616, x18)

inst_457:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2ac983 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x1da652 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f2ac983; op2val:0x7e1da652; valaddr_reg:x16; val_offset:1624; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1624, x17, x15, 1624, x18)

inst_458:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2ac983 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x1da652 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f2ac983; op2val:0x7e1da652; valaddr_reg:x16; val_offset:1632; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1632, x17, x15, 1632, x18)

inst_459:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2ac983 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x1da652 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f2ac983; op2val:0x7e1da652; valaddr_reg:x16; val_offset:1640; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1640, x17, x15, 1640, x18)

inst_460:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2ac983 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x1da652 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f2ac983; op2val:0x7e1da652; valaddr_reg:x16; val_offset:1648; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1648, x17, x15, 1648, x18)

inst_461:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x6ca51d and fs2 == 0 and fe2 == 0xfa and fm2 == 0x5a7108 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e6ca51d; op2val:0x7d5a7108; valaddr_reg:x16; val_offset:1656; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1656, x17, x15, 1656, x18)

inst_462:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x6ca51d and fs2 == 0 and fe2 == 0xfa and fm2 == 0x5a7108 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e6ca51d; op2val:0x7d5a7108; valaddr_reg:x16; val_offset:1664; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1664, x17, x15, 1664, x18)

inst_463:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x6ca51d and fs2 == 0 and fe2 == 0xfa and fm2 == 0x5a7108 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e6ca51d; op2val:0x7d5a7108; valaddr_reg:x16; val_offset:1672; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1672, x17, x15, 1672, x18)

inst_464:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x6ca51d and fs2 == 0 and fe2 == 0xfa and fm2 == 0x5a7108 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e6ca51d; op2val:0x7d5a7108; valaddr_reg:x16; val_offset:1680; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1680, x17, x15, 1680, x18)

inst_465:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x6ca51d and fs2 == 0 and fe2 == 0xfa and fm2 == 0x5a7108 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e6ca51d; op2val:0x7d5a7108; valaddr_reg:x16; val_offset:1688; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1688, x17, x15, 1688, x18)

inst_466:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7d966a and fs2 == 0 and fe2 == 0xfb and fm2 == 0x6a14b1 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3efd966a; op2val:0x7dea14b1; valaddr_reg:x16; val_offset:1696; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1696, x17, x15, 1696, x18)

inst_467:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7d966a and fs2 == 0 and fe2 == 0xfb and fm2 == 0x6a14b1 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3efd966a; op2val:0x7dea14b1; valaddr_reg:x16; val_offset:1704; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1704, x17, x15, 1704, x18)

inst_468:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7d966a and fs2 == 0 and fe2 == 0xfb and fm2 == 0x6a14b1 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3efd966a; op2val:0x7dea14b1; valaddr_reg:x16; val_offset:1712; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1712, x17, x15, 1712, x18)

inst_469:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7d966a and fs2 == 0 and fe2 == 0xfb and fm2 == 0x6a14b1 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3efd966a; op2val:0x7dea14b1; valaddr_reg:x16; val_offset:1720; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1720, x17, x15, 1720, x18)

inst_470:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7d966a and fs2 == 0 and fe2 == 0xfb and fm2 == 0x6a14b1 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3efd966a; op2val:0x7dea14b1; valaddr_reg:x16; val_offset:1728; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1728, x17, x15, 1728, x18)

inst_471:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0284d3 and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x70f538 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e0284d3; op2val:0x7cf0f538; valaddr_reg:x16; val_offset:1736; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1736, x17, x15, 1736, x18)

inst_472:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0284d3 and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x70f538 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e0284d3; op2val:0x7cf0f538; valaddr_reg:x16; val_offset:1744; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1744, x17, x15, 1744, x18)

inst_473:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0284d3 and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x70f538 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e0284d3; op2val:0x7cf0f538; valaddr_reg:x16; val_offset:1752; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1752, x17, x15, 1752, x18)

inst_474:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0284d3 and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x70f538 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e0284d3; op2val:0x7cf0f538; valaddr_reg:x16; val_offset:1760; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1760, x17, x15, 1760, x18)

inst_475:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0284d3 and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x70f538 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e0284d3; op2val:0x7cf0f538; valaddr_reg:x16; val_offset:1768; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1768, x17, x15, 1768, x18)

inst_476:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3bf183 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x2d7c79 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f3bf183; op2val:0x7e2d7c79; valaddr_reg:x16; val_offset:1776; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1776, x17, x15, 1776, x18)

inst_477:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3bf183 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x2d7c79 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f3bf183; op2val:0x7e2d7c79; valaddr_reg:x16; val_offset:1784; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1784, x17, x15, 1784, x18)

inst_478:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3bf183 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x2d7c79 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f3bf183; op2val:0x7e2d7c79; valaddr_reg:x16; val_offset:1792; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1792, x17, x15, 1792, x18)

inst_479:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3bf183 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x2d7c79 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f3bf183; op2val:0x7e2d7c79; valaddr_reg:x16; val_offset:1800; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1800, x17, x15, 1800, x18)

inst_480:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3bf183 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x2d7c79 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f3bf183; op2val:0x7e2d7c79; valaddr_reg:x16; val_offset:1808; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1808, x17, x15, 1808, x18)

inst_481:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x054e13 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x7619fc and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e854e13; op2val:0x7d7619fc; valaddr_reg:x16; val_offset:1816; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1816, x17, x15, 1816, x18)

inst_482:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x054e13 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x7619fc and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e854e13; op2val:0x7d7619fc; valaddr_reg:x16; val_offset:1824; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1824, x17, x15, 1824, x18)

inst_483:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x054e13 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x7619fc and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e854e13; op2val:0x7d7619fc; valaddr_reg:x16; val_offset:1832; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1832, x17, x15, 1832, x18)

inst_484:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x054e13 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x7619fc and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e854e13; op2val:0x7d7619fc; valaddr_reg:x16; val_offset:1840; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1840, x17, x15, 1840, x18)

inst_485:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x054e13 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x7619fc and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e854e13; op2val:0x7d7619fc; valaddr_reg:x16; val_offset:1848; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1848, x17, x15, 1848, x18)

inst_486:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x7b697a and fs2 == 0 and fe2 == 0xfa and fm2 == 0x681299 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e7b697a; op2val:0x7d681299; valaddr_reg:x16; val_offset:1856; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1856, x17, x15, 1856, x18)

inst_487:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x7b697a and fs2 == 0 and fe2 == 0xfa and fm2 == 0x681299 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e7b697a; op2val:0x7d681299; valaddr_reg:x16; val_offset:1864; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1864, x17, x15, 1864, x18)

inst_488:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x7b697a and fs2 == 0 and fe2 == 0xfa and fm2 == 0x681299 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e7b697a; op2val:0x7d681299; valaddr_reg:x16; val_offset:1872; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1872, x17, x15, 1872, x18)

inst_489:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x7b697a and fs2 == 0 and fe2 == 0xfa and fm2 == 0x681299 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e7b697a; op2val:0x7d681299; valaddr_reg:x16; val_offset:1880; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1880, x17, x15, 1880, x18)

inst_490:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x7b697a and fs2 == 0 and fe2 == 0xfa and fm2 == 0x681299 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e7b697a; op2val:0x7d681299; valaddr_reg:x16; val_offset:1888; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1888, x17, x15, 1888, x18)

inst_491:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6e7079 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x5c190d and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f6e7079; op2val:0x7e5c190d; valaddr_reg:x16; val_offset:1896; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1896, x17, x15, 1896, x18)

inst_492:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6e7079 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x5c190d and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f6e7079; op2val:0x7e5c190d; valaddr_reg:x16; val_offset:1904; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1904, x17, x15, 1904, x18)

inst_493:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6e7079 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x5c190d and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f6e7079; op2val:0x7e5c190d; valaddr_reg:x16; val_offset:1912; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1912, x17, x15, 1912, x18)

inst_494:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6e7079 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x5c190d and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f6e7079; op2val:0x7e5c190d; valaddr_reg:x16; val_offset:1920; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1920, x17, x15, 1920, x18)

inst_495:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6e7079 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x5c190d and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f6e7079; op2val:0x7e5c190d; valaddr_reg:x16; val_offset:1928; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1928, x17, x15, 1928, x18)

inst_496:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3003c0 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x22799e and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f3003c0; op2val:0x7e22799e; valaddr_reg:x16; val_offset:1936; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1936, x17, x15, 1936, x18)

inst_497:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3003c0 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x22799e and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f3003c0; op2val:0x7e22799e; valaddr_reg:x16; val_offset:1944; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1944, x17, x15, 1944, x18)

inst_498:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3003c0 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x22799e and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f3003c0; op2val:0x7e22799e; valaddr_reg:x16; val_offset:1952; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1952, x17, x15, 1952, x18)

inst_499:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3003c0 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x22799e and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f3003c0; op2val:0x7e22799e; valaddr_reg:x16; val_offset:1960; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1960, x17, x15, 1960, x18)

inst_500:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3003c0 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x22799e and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f3003c0; op2val:0x7e22799e; valaddr_reg:x16; val_offset:1968; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1968, x17, x15, 1968, x18)

inst_501:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x347c9b and fs2 == 0 and fe2 == 0xfb and fm2 == 0x269a68 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3eb47c9b; op2val:0x7da69a68; valaddr_reg:x16; val_offset:1976; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1976, x17, x15, 1976, x18)

inst_502:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x347c9b and fs2 == 0 and fe2 == 0xfb and fm2 == 0x269a68 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3eb47c9b; op2val:0x7da69a68; valaddr_reg:x16; val_offset:1984; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1984, x17, x15, 1984, x18)

inst_503:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x347c9b and fs2 == 0 and fe2 == 0xfb and fm2 == 0x269a68 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3eb47c9b; op2val:0x7da69a68; valaddr_reg:x16; val_offset:1992; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1992, x17, x15, 1992, x18)

inst_504:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x347c9b and fs2 == 0 and fe2 == 0xfb and fm2 == 0x269a68 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3eb47c9b; op2val:0x7da69a68; valaddr_reg:x16; val_offset:2000; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 2000, x17, x15, 2000, x18)

inst_505:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x347c9b and fs2 == 0 and fe2 == 0xfb and fm2 == 0x269a68 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3eb47c9b; op2val:0x7da69a68; valaddr_reg:x16; val_offset:2008; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 2008, x17, x15, 2008, x18)

inst_506:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4e1d49 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x3e426b and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ece1d49; op2val:0x7dbe426b; valaddr_reg:x16; val_offset:2016; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 2016, x17, x15, 2016, x18)

inst_507:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4e1d49 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x3e426b and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ece1d49; op2val:0x7dbe426b; valaddr_reg:x16; val_offset:2024; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 2024, x17, x15, 2024, x18)
addi x16,x16,2032
RVTEST_SIGBASE(x15,signature_x15_3)

inst_508:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4e1d49 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x3e426b and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ece1d49; op2val:0x7dbe426b; valaddr_reg:x16; val_offset:0; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 0, x17, x15, 0, x18)

inst_509:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4e1d49 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x3e426b and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ece1d49; op2val:0x7dbe426b; valaddr_reg:x16; val_offset:8; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 8, x17, x15, 8, x18)

inst_510:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4e1d49 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x3e426b and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ece1d49; op2val:0x7dbe426b; valaddr_reg:x16; val_offset:16; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 16, x17, x15, 16, x18)

inst_511:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2b20db and fs2 == 0 and fe2 == 0xfc and fm2 == 0x1df6f1 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f2b20db; op2val:0x7e1df6f1; valaddr_reg:x16; val_offset:24; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 24, x17, x15, 24, x18)

inst_512:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2b20db and fs2 == 0 and fe2 == 0xfc and fm2 == 0x1df6f1 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f2b20db; op2val:0x7e1df6f1; valaddr_reg:x16; val_offset:32; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 32, x17, x15, 32, x18)

inst_513:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2b20db and fs2 == 0 and fe2 == 0xfc and fm2 == 0x1df6f1 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f2b20db; op2val:0x7e1df6f1; valaddr_reg:x16; val_offset:40; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 40, x17, x15, 40, x18)

inst_514:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2b20db and fs2 == 0 and fe2 == 0xfc and fm2 == 0x1df6f1 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f2b20db; op2val:0x7e1df6f1; valaddr_reg:x16; val_offset:48; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 48, x17, x15, 48, x18)

inst_515:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2b20db and fs2 == 0 and fe2 == 0xfc and fm2 == 0x1df6f1 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f2b20db; op2val:0x7e1df6f1; valaddr_reg:x16; val_offset:56; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 56, x17, x15, 56, x18)

inst_516:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x0b9554 and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x00d89d and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3d8b9554; op2val:0x7c80d89d; valaddr_reg:x16; val_offset:64; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 64, x17, x15, 64, x18)

inst_517:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x0b9554 and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x00d89d and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3d8b9554; op2val:0x7c80d89d; valaddr_reg:x16; val_offset:72; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 72, x17, x15, 72, x18)

inst_518:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x0b9554 and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x00d89d and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3d8b9554; op2val:0x7c80d89d; valaddr_reg:x16; val_offset:80; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 80, x17, x15, 80, x18)

inst_519:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x0b9554 and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x00d89d and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3d8b9554; op2val:0x7c80d89d; valaddr_reg:x16; val_offset:88; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 88, x17, x15, 88, x18)

inst_520:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x0b9554 and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x00d89d and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3d8b9554; op2val:0x7c80d89d; valaddr_reg:x16; val_offset:96; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 96, x17, x15, 96, x18)

inst_521:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x30732b and fs2 == 0 and fe2 == 0xfb and fm2 == 0x22e077 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3eb0732b; op2val:0x7da2e077; valaddr_reg:x16; val_offset:104; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 104, x17, x15, 104, x18)

inst_522:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x30732b and fs2 == 0 and fe2 == 0xfb and fm2 == 0x22e077 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3eb0732b; op2val:0x7da2e077; valaddr_reg:x16; val_offset:112; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 112, x17, x15, 112, x18)

inst_523:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x30732b and fs2 == 0 and fe2 == 0xfb and fm2 == 0x22e077 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3eb0732b; op2val:0x7da2e077; valaddr_reg:x16; val_offset:120; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 120, x17, x15, 120, x18)

inst_524:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x30732b and fs2 == 0 and fe2 == 0xfb and fm2 == 0x22e077 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3eb0732b; op2val:0x7da2e077; valaddr_reg:x16; val_offset:128; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 128, x17, x15, 128, x18)

inst_525:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x30732b and fs2 == 0 and fe2 == 0xfb and fm2 == 0x22e077 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3eb0732b; op2val:0x7da2e077; valaddr_reg:x16; val_offset:136; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 136, x17, x15, 136, x18)

inst_526:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x522636 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x41fbe4 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f522636; op2val:0x7e41fbe4; valaddr_reg:x16; val_offset:144; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 144, x17, x15, 144, x18)

inst_527:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x522636 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x41fbe4 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f522636; op2val:0x7e41fbe4; valaddr_reg:x16; val_offset:152; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 152, x17, x15, 152, x18)

inst_528:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x522636 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x41fbe4 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f522636; op2val:0x7e41fbe4; valaddr_reg:x16; val_offset:160; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 160, x17, x15, 160, x18)

inst_529:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x522636 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x41fbe4 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f522636; op2val:0x7e41fbe4; valaddr_reg:x16; val_offset:168; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 168, x17, x15, 168, x18)

inst_530:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x522636 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x41fbe4 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f522636; op2val:0x7e41fbe4; valaddr_reg:x16; val_offset:176; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 176, x17, x15, 176, x18)

inst_531:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x356b07 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x27767d and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3eb56b07; op2val:0x7da7767d; valaddr_reg:x16; val_offset:184; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 184, x17, x15, 184, x18)

inst_532:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x356b07 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x27767d and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3eb56b07; op2val:0x7da7767d; valaddr_reg:x16; val_offset:192; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 192, x17, x15, 192, x18)

inst_533:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x356b07 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x27767d and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3eb56b07; op2val:0x7da7767d; valaddr_reg:x16; val_offset:200; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 200, x17, x15, 200, x18)

inst_534:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x356b07 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x27767d and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3eb56b07; op2val:0x7da7767d; valaddr_reg:x16; val_offset:208; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 208, x17, x15, 208, x18)

inst_535:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x356b07 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x27767d and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3eb56b07; op2val:0x7da7767d; valaddr_reg:x16; val_offset:216; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 216, x17, x15, 216, x18)

inst_536:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5e01f1 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x4cee1a and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ede01f1; op2val:0x7dccee1a; valaddr_reg:x16; val_offset:224; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 224, x17, x15, 224, x18)

inst_537:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5e01f1 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x4cee1a and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ede01f1; op2val:0x7dccee1a; valaddr_reg:x16; val_offset:232; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 232, x17, x15, 232, x18)

inst_538:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5e01f1 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x4cee1a and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ede01f1; op2val:0x7dccee1a; valaddr_reg:x16; val_offset:240; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 240, x17, x15, 240, x18)

inst_539:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5e01f1 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x4cee1a and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ede01f1; op2val:0x7dccee1a; valaddr_reg:x16; val_offset:248; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 248, x17, x15, 248, x18)

inst_540:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5e01f1 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x4cee1a and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ede01f1; op2val:0x7dccee1a; valaddr_reg:x16; val_offset:256; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 256, x17, x15, 256, x18)

inst_541:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x105612 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x053bc3 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e905612; op2val:0x7d853bc3; valaddr_reg:x16; val_offset:264; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 264, x17, x15, 264, x18)

inst_542:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x105612 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x053bc3 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e905612; op2val:0x7d853bc3; valaddr_reg:x16; val_offset:272; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 272, x17, x15, 272, x18)

inst_543:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x105612 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x053bc3 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e905612; op2val:0x7d853bc3; valaddr_reg:x16; val_offset:280; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 280, x17, x15, 280, x18)

inst_544:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x105612 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x053bc3 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e905612; op2val:0x7d853bc3; valaddr_reg:x16; val_offset:288; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 288, x17, x15, 288, x18)

inst_545:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x105612 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x053bc3 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e905612; op2val:0x7d853bc3; valaddr_reg:x16; val_offset:296; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 296, x17, x15, 296, x18)

inst_546:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x019108 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x6f3324 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f019108; op2val:0x7def3324; valaddr_reg:x16; val_offset:304; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 304, x17, x15, 304, x18)

inst_547:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x019108 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x6f3324 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f019108; op2val:0x7def3324; valaddr_reg:x16; val_offset:312; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 312, x17, x15, 312, x18)

inst_548:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x019108 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x6f3324 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f019108; op2val:0x7def3324; valaddr_reg:x16; val_offset:320; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 320, x17, x15, 320, x18)

inst_549:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x019108 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x6f3324 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f019108; op2val:0x7def3324; valaddr_reg:x16; val_offset:328; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 328, x17, x15, 328, x18)

inst_550:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x019108 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x6f3324 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f019108; op2val:0x7def3324; valaddr_reg:x16; val_offset:336; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 336, x17, x15, 336, x18)

inst_551:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6d7b7a and fs2 == 0 and fe2 == 0xfb and fm2 == 0x5b36e8 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3eed7b7a; op2val:0x7ddb36e8; valaddr_reg:x16; val_offset:344; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 344, x17, x15, 344, x18)

inst_552:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6d7b7a and fs2 == 0 and fe2 == 0xfb and fm2 == 0x5b36e8 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3eed7b7a; op2val:0x7ddb36e8; valaddr_reg:x16; val_offset:352; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 352, x17, x15, 352, x18)

inst_553:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6d7b7a and fs2 == 0 and fe2 == 0xfb and fm2 == 0x5b36e8 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3eed7b7a; op2val:0x7ddb36e8; valaddr_reg:x16; val_offset:360; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 360, x17, x15, 360, x18)

inst_554:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6d7b7a and fs2 == 0 and fe2 == 0xfb and fm2 == 0x5b36e8 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3eed7b7a; op2val:0x7ddb36e8; valaddr_reg:x16; val_offset:368; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 368, x17, x15, 368, x18)

inst_555:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6d7b7a and fs2 == 0 and fe2 == 0xfb and fm2 == 0x5b36e8 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3eed7b7a; op2val:0x7ddb36e8; valaddr_reg:x16; val_offset:376; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 376, x17, x15, 376, x18)

inst_556:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x1e683f and fs2 == 0 and fe2 == 0xf8 and fm2 == 0x1238d8 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3d1e683f; op2val:0x7c1238d8; valaddr_reg:x16; val_offset:384; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 384, x17, x15, 384, x18)

inst_557:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x1e683f and fs2 == 0 and fe2 == 0xf8 and fm2 == 0x1238d8 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3d1e683f; op2val:0x7c1238d8; valaddr_reg:x16; val_offset:392; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 392, x17, x15, 392, x18)

inst_558:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x1e683f and fs2 == 0 and fe2 == 0xf8 and fm2 == 0x1238d8 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3d1e683f; op2val:0x7c1238d8; valaddr_reg:x16; val_offset:400; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 400, x17, x15, 400, x18)

inst_559:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x1e683f and fs2 == 0 and fe2 == 0xf8 and fm2 == 0x1238d8 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3d1e683f; op2val:0x7c1238d8; valaddr_reg:x16; val_offset:408; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 408, x17, x15, 408, x18)

inst_560:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x1e683f and fs2 == 0 and fe2 == 0xf8 and fm2 == 0x1238d8 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3d1e683f; op2val:0x7c1238d8; valaddr_reg:x16; val_offset:416; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 416, x17, x15, 416, x18)

inst_561:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3c022d and fs2 == 0 and fe2 == 0xfc and fm2 == 0x2d8bdb and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f3c022d; op2val:0x7e2d8bdb; valaddr_reg:x16; val_offset:424; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 424, x17, x15, 424, x18)

inst_562:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3c022d and fs2 == 0 and fe2 == 0xfc and fm2 == 0x2d8bdb and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f3c022d; op2val:0x7e2d8bdb; valaddr_reg:x16; val_offset:432; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 432, x17, x15, 432, x18)

inst_563:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3c022d and fs2 == 0 and fe2 == 0xfc and fm2 == 0x2d8bdb and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f3c022d; op2val:0x7e2d8bdb; valaddr_reg:x16; val_offset:440; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 440, x17, x15, 440, x18)

inst_564:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3c022d and fs2 == 0 and fe2 == 0xfc and fm2 == 0x2d8bdb and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f3c022d; op2val:0x7e2d8bdb; valaddr_reg:x16; val_offset:448; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 448, x17, x15, 448, x18)

inst_565:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3c022d and fs2 == 0 and fe2 == 0xfc and fm2 == 0x2d8bdb and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f3c022d; op2val:0x7e2d8bdb; valaddr_reg:x16; val_offset:456; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 456, x17, x15, 456, x18)

inst_566:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x311ca3 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x237ce6 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3eb11ca3; op2val:0x7da37ce6; valaddr_reg:x16; val_offset:464; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 464, x17, x15, 464, x18)

inst_567:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x311ca3 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x237ce6 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3eb11ca3; op2val:0x7da37ce6; valaddr_reg:x16; val_offset:472; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 472, x17, x15, 472, x18)

inst_568:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x311ca3 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x237ce6 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3eb11ca3; op2val:0x7da37ce6; valaddr_reg:x16; val_offset:480; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 480, x17, x15, 480, x18)

inst_569:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x311ca3 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x237ce6 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3eb11ca3; op2val:0x7da37ce6; valaddr_reg:x16; val_offset:488; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 488, x17, x15, 488, x18)

inst_570:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x311ca3 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x237ce6 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3eb11ca3; op2val:0x7da37ce6; valaddr_reg:x16; val_offset:496; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 496, x17, x15, 496, x18)

inst_571:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3457e1 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x267881 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f3457e1; op2val:0x7e267881; valaddr_reg:x16; val_offset:504; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 504, x17, x15, 504, x18)

inst_572:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3457e1 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x267881 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f3457e1; op2val:0x7e267881; valaddr_reg:x16; val_offset:512; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 512, x17, x15, 512, x18)

inst_573:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3457e1 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x267881 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f3457e1; op2val:0x7e267881; valaddr_reg:x16; val_offset:520; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 520, x17, x15, 520, x18)

inst_574:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3457e1 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x267881 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f3457e1; op2val:0x7e267881; valaddr_reg:x16; val_offset:528; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 528, x17, x15, 528, x18)

inst_575:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3457e1 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x267881 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f3457e1; op2val:0x7e267881; valaddr_reg:x16; val_offset:536; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 536, x17, x15, 536, x18)

inst_576:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x690aed and fs2 == 0 and fe2 == 0xfa and fm2 == 0x571dc8 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e690aed; op2val:0x7d571dc8; valaddr_reg:x16; val_offset:544; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 544, x17, x15, 544, x18)

inst_577:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x690aed and fs2 == 0 and fe2 == 0xfa and fm2 == 0x571dc8 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e690aed; op2val:0x7d571dc8; valaddr_reg:x16; val_offset:552; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 552, x17, x15, 552, x18)

inst_578:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x690aed and fs2 == 0 and fe2 == 0xfa and fm2 == 0x571dc8 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e690aed; op2val:0x7d571dc8; valaddr_reg:x16; val_offset:560; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 560, x17, x15, 560, x18)

inst_579:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x690aed and fs2 == 0 and fe2 == 0xfa and fm2 == 0x571dc8 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e690aed; op2val:0x7d571dc8; valaddr_reg:x16; val_offset:568; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 568, x17, x15, 568, x18)

inst_580:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x690aed and fs2 == 0 and fe2 == 0xfa and fm2 == 0x571dc8 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e690aed; op2val:0x7d571dc8; valaddr_reg:x16; val_offset:576; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 576, x17, x15, 576, x18)

inst_581:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x707c78 and fs2 == 0 and fe2 == 0xf8 and fm2 == 0x5dfcbe and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3d707c78; op2val:0x7c5dfcbe; valaddr_reg:x16; val_offset:584; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 584, x17, x15, 584, x18)

inst_582:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x707c78 and fs2 == 0 and fe2 == 0xf8 and fm2 == 0x5dfcbe and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3d707c78; op2val:0x7c5dfcbe; valaddr_reg:x16; val_offset:592; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 592, x17, x15, 592, x18)

inst_583:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x707c78 and fs2 == 0 and fe2 == 0xf8 and fm2 == 0x5dfcbe and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3d707c78; op2val:0x7c5dfcbe; valaddr_reg:x16; val_offset:600; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 600, x17, x15, 600, x18)

inst_584:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x707c78 and fs2 == 0 and fe2 == 0xf8 and fm2 == 0x5dfcbe and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3d707c78; op2val:0x7c5dfcbe; valaddr_reg:x16; val_offset:608; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 608, x17, x15, 608, x18)

inst_585:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x707c78 and fs2 == 0 and fe2 == 0xf8 and fm2 == 0x5dfcbe and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3d707c78; op2val:0x7c5dfcbe; valaddr_reg:x16; val_offset:616; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 616, x17, x15, 616, x18)

inst_586:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x3adafc and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x2c7b5f and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3dbadafc; op2val:0x7cac7b5f; valaddr_reg:x16; val_offset:624; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 624, x17, x15, 624, x18)

inst_587:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x3adafc and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x2c7b5f and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3dbadafc; op2val:0x7cac7b5f; valaddr_reg:x16; val_offset:632; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 632, x17, x15, 632, x18)

inst_588:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x3adafc and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x2c7b5f and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3dbadafc; op2val:0x7cac7b5f; valaddr_reg:x16; val_offset:640; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 640, x17, x15, 640, x18)

inst_589:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x3adafc and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x2c7b5f and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3dbadafc; op2val:0x7cac7b5f; valaddr_reg:x16; val_offset:648; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 648, x17, x15, 648, x18)

inst_590:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x3adafc and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x2c7b5f and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3dbadafc; op2val:0x7cac7b5f; valaddr_reg:x16; val_offset:656; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 656, x17, x15, 656, x18)

inst_591:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x63314c and fs2 == 0 and fe2 == 0xfc and fm2 == 0x51b75a and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f63314c; op2val:0x7e51b75a; valaddr_reg:x16; val_offset:664; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 664, x17, x15, 664, x18)

inst_592:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x63314c and fs2 == 0 and fe2 == 0xfc and fm2 == 0x51b75a and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f63314c; op2val:0x7e51b75a; valaddr_reg:x16; val_offset:672; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 672, x17, x15, 672, x18)

inst_593:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x63314c and fs2 == 0 and fe2 == 0xfc and fm2 == 0x51b75a and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f63314c; op2val:0x7e51b75a; valaddr_reg:x16; val_offset:680; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 680, x17, x15, 680, x18)

inst_594:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x63314c and fs2 == 0 and fe2 == 0xfc and fm2 == 0x51b75a and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f63314c; op2val:0x7e51b75a; valaddr_reg:x16; val_offset:688; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 688, x17, x15, 688, x18)

inst_595:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x63314c and fs2 == 0 and fe2 == 0xfc and fm2 == 0x51b75a and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f63314c; op2val:0x7e51b75a; valaddr_reg:x16; val_offset:696; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 696, x17, x15, 696, x18)

inst_596:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x39a93f and fs2 == 0 and fe2 == 0xfc and fm2 == 0x2b6127 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f39a93f; op2val:0x7e2b6127; valaddr_reg:x16; val_offset:704; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 704, x17, x15, 704, x18)

inst_597:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x39a93f and fs2 == 0 and fe2 == 0xfc and fm2 == 0x2b6127 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f39a93f; op2val:0x7e2b6127; valaddr_reg:x16; val_offset:712; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 712, x17, x15, 712, x18)

inst_598:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x39a93f and fs2 == 0 and fe2 == 0xfc and fm2 == 0x2b6127 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f39a93f; op2val:0x7e2b6127; valaddr_reg:x16; val_offset:720; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 720, x17, x15, 720, x18)

inst_599:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x39a93f and fs2 == 0 and fe2 == 0xfc and fm2 == 0x2b6127 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f39a93f; op2val:0x7e2b6127; valaddr_reg:x16; val_offset:728; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 728, x17, x15, 728, x18)

inst_600:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x39a93f and fs2 == 0 and fe2 == 0xfc and fm2 == 0x2b6127 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f39a93f; op2val:0x7e2b6127; valaddr_reg:x16; val_offset:736; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 736, x17, x15, 736, x18)

inst_601:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x694a19 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x575818 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ee94a19; op2val:0x7dd75818; valaddr_reg:x16; val_offset:744; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 744, x17, x15, 744, x18)

inst_602:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x694a19 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x575818 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ee94a19; op2val:0x7dd75818; valaddr_reg:x16; val_offset:752; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 752, x17, x15, 752, x18)

inst_603:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x694a19 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x575818 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ee94a19; op2val:0x7dd75818; valaddr_reg:x16; val_offset:760; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 760, x17, x15, 760, x18)

inst_604:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x694a19 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x575818 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ee94a19; op2val:0x7dd75818; valaddr_reg:x16; val_offset:768; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 768, x17, x15, 768, x18)

inst_605:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x694a19 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x575818 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ee94a19; op2val:0x7dd75818; valaddr_reg:x16; val_offset:776; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 776, x17, x15, 776, x18)

inst_606:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x36f03b and fs2 == 0 and fe2 == 0xf8 and fm2 == 0x28ddc0 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3d36f03b; op2val:0x7c28ddc0; valaddr_reg:x16; val_offset:784; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 784, x17, x15, 784, x18)

inst_607:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x36f03b and fs2 == 0 and fe2 == 0xf8 and fm2 == 0x28ddc0 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3d36f03b; op2val:0x7c28ddc0; valaddr_reg:x16; val_offset:792; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 792, x17, x15, 792, x18)

inst_608:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x36f03b and fs2 == 0 and fe2 == 0xf8 and fm2 == 0x28ddc0 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3d36f03b; op2val:0x7c28ddc0; valaddr_reg:x16; val_offset:800; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 800, x17, x15, 800, x18)

inst_609:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x36f03b and fs2 == 0 and fe2 == 0xf8 and fm2 == 0x28ddc0 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3d36f03b; op2val:0x7c28ddc0; valaddr_reg:x16; val_offset:808; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 808, x17, x15, 808, x18)

inst_610:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x36f03b and fs2 == 0 and fe2 == 0xf8 and fm2 == 0x28ddc0 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3d36f03b; op2val:0x7c28ddc0; valaddr_reg:x16; val_offset:816; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 816, x17, x15, 816, x18)

inst_611:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4a3721 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x3aa90b and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f4a3721; op2val:0x7e3aa90b; valaddr_reg:x16; val_offset:824; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 824, x17, x15, 824, x18)

inst_612:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4a3721 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x3aa90b and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f4a3721; op2val:0x7e3aa90b; valaddr_reg:x16; val_offset:832; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 832, x17, x15, 832, x18)

inst_613:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4a3721 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x3aa90b and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f4a3721; op2val:0x7e3aa90b; valaddr_reg:x16; val_offset:840; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 840, x17, x15, 840, x18)

inst_614:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4a3721 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x3aa90b and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f4a3721; op2val:0x7e3aa90b; valaddr_reg:x16; val_offset:848; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 848, x17, x15, 848, x18)

inst_615:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4a3721 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x3aa90b and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f4a3721; op2val:0x7e3aa90b; valaddr_reg:x16; val_offset:856; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 856, x17, x15, 856, x18)

inst_616:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1053cc and fs2 == 0 and fe2 == 0xfc and fm2 == 0x0539a9 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f1053cc; op2val:0x7e0539a9; valaddr_reg:x16; val_offset:864; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 864, x17, x15, 864, x18)

inst_617:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1053cc and fs2 == 0 and fe2 == 0xfc and fm2 == 0x0539a9 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f1053cc; op2val:0x7e0539a9; valaddr_reg:x16; val_offset:872; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 872, x17, x15, 872, x18)

inst_618:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1053cc and fs2 == 0 and fe2 == 0xfc and fm2 == 0x0539a9 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f1053cc; op2val:0x7e0539a9; valaddr_reg:x16; val_offset:880; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 880, x17, x15, 880, x18)

inst_619:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1053cc and fs2 == 0 and fe2 == 0xfc and fm2 == 0x0539a9 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f1053cc; op2val:0x7e0539a9; valaddr_reg:x16; val_offset:888; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 888, x17, x15, 888, x18)

inst_620:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1053cc and fs2 == 0 and fe2 == 0xfc and fm2 == 0x0539a9 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f1053cc; op2val:0x7e0539a9; valaddr_reg:x16; val_offset:896; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 896, x17, x15, 896, x18)

inst_621:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7e3cde and fs2 == 0 and fe2 == 0xfc and fm2 == 0x6aae58 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f7e3cde; op2val:0x7e6aae58; valaddr_reg:x16; val_offset:904; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 904, x17, x15, 904, x18)

inst_622:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7e3cde and fs2 == 0 and fe2 == 0xfc and fm2 == 0x6aae58 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f7e3cde; op2val:0x7e6aae58; valaddr_reg:x16; val_offset:912; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 912, x17, x15, 912, x18)

inst_623:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7e3cde and fs2 == 0 and fe2 == 0xfc and fm2 == 0x6aae58 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f7e3cde; op2val:0x7e6aae58; valaddr_reg:x16; val_offset:920; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 920, x17, x15, 920, x18)

inst_624:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7e3cde and fs2 == 0 and fe2 == 0xfc and fm2 == 0x6aae58 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f7e3cde; op2val:0x7e6aae58; valaddr_reg:x16; val_offset:928; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 928, x17, x15, 928, x18)

inst_625:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7e3cde and fs2 == 0 and fe2 == 0xfc and fm2 == 0x6aae58 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f7e3cde; op2val:0x7e6aae58; valaddr_reg:x16; val_offset:936; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 936, x17, x15, 936, x18)

inst_626:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x56e2e9 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x465b4e and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ed6e2e9; op2val:0x7dc65b4e; valaddr_reg:x16; val_offset:944; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 944, x17, x15, 944, x18)

inst_627:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x56e2e9 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x465b4e and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ed6e2e9; op2val:0x7dc65b4e; valaddr_reg:x16; val_offset:952; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 952, x17, x15, 952, x18)

inst_628:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x56e2e9 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x465b4e and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ed6e2e9; op2val:0x7dc65b4e; valaddr_reg:x16; val_offset:960; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 960, x17, x15, 960, x18)

inst_629:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x56e2e9 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x465b4e and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ed6e2e9; op2val:0x7dc65b4e; valaddr_reg:x16; val_offset:968; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 968, x17, x15, 968, x18)

inst_630:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x56e2e9 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x465b4e and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ed6e2e9; op2val:0x7dc65b4e; valaddr_reg:x16; val_offset:976; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 976, x17, x15, 976, x18)

inst_631:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x354efe and fs2 == 0 and fe2 == 0xfc and fm2 == 0x2e0e64 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f354efe; op2val:0x7e2e0e64; valaddr_reg:x16; val_offset:984; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 984, x17, x15, 984, x18)

inst_632:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x354efe and fs2 == 0 and fe2 == 0xfc and fm2 == 0x2e0e64 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f354efe; op2val:0x7e2e0e64; valaddr_reg:x16; val_offset:992; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 992, x17, x15, 992, x18)

inst_633:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x354efe and fs2 == 0 and fe2 == 0xfc and fm2 == 0x2e0e64 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f354efe; op2val:0x7e2e0e64; valaddr_reg:x16; val_offset:1000; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1000, x17, x15, 1000, x18)

inst_634:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x354efe and fs2 == 0 and fe2 == 0xfc and fm2 == 0x2e0e64 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f354efe; op2val:0x7e2e0e64; valaddr_reg:x16; val_offset:1008; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1008, x17, x15, 1008, x18)

inst_635:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x354efe and fs2 == 0 and fe2 == 0xfc and fm2 == 0x2e0e64 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f354efe; op2val:0x7e2e0e64; valaddr_reg:x16; val_offset:1016; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1016, x17, x15, 1016, x18)

inst_636:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x684897 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x5efe01 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f684897; op2val:0x7e5efe01; valaddr_reg:x16; val_offset:1024; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1024, x17, x15, 1024, x18)

inst_637:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x684897 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x5efe01 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f684897; op2val:0x7e5efe01; valaddr_reg:x16; val_offset:1032; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1032, x17, x15, 1032, x18)

inst_638:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x684897 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x5efe01 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f684897; op2val:0x7e5efe01; valaddr_reg:x16; val_offset:1040; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1040, x17, x15, 1040, x18)

inst_639:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x684897 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x5efe01 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f684897; op2val:0x7e5efe01; valaddr_reg:x16; val_offset:1048; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1048, x17, x15, 1048, x18)

inst_640:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x684897 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x5efe01 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f684897; op2val:0x7e5efe01; valaddr_reg:x16; val_offset:1056; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1056, x17, x15, 1056, x18)

inst_641:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0ac4a6 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x0537a9 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e8ac4a6; op2val:0x7d8537a9; valaddr_reg:x16; val_offset:1064; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1064, x17, x15, 1064, x18)

inst_642:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0ac4a6 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x0537a9 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e8ac4a6; op2val:0x7d8537a9; valaddr_reg:x16; val_offset:1072; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1072, x17, x15, 1072, x18)

inst_643:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0ac4a6 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x0537a9 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e8ac4a6; op2val:0x7d8537a9; valaddr_reg:x16; val_offset:1080; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1080, x17, x15, 1080, x18)

inst_644:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0ac4a6 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x0537a9 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e8ac4a6; op2val:0x7d8537a9; valaddr_reg:x16; val_offset:1088; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1088, x17, x15, 1088, x18)

inst_645:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0ac4a6 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x0537a9 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e8ac4a6; op2val:0x7d8537a9; valaddr_reg:x16; val_offset:1096; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1096, x17, x15, 1096, x18)

inst_646:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2fc3eb and fs2 == 0 and fe2 == 0xfc and fm2 == 0x28bc15 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f2fc3eb; op2val:0x7e28bc15; valaddr_reg:x16; val_offset:1104; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1104, x17, x15, 1104, x18)

inst_647:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2fc3eb and fs2 == 0 and fe2 == 0xfc and fm2 == 0x28bc15 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f2fc3eb; op2val:0x7e28bc15; valaddr_reg:x16; val_offset:1112; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1112, x17, x15, 1112, x18)

inst_648:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2fc3eb and fs2 == 0 and fe2 == 0xfc and fm2 == 0x28bc15 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f2fc3eb; op2val:0x7e28bc15; valaddr_reg:x16; val_offset:1120; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1120, x17, x15, 1120, x18)

inst_649:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2fc3eb and fs2 == 0 and fe2 == 0xfc and fm2 == 0x28bc15 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f2fc3eb; op2val:0x7e28bc15; valaddr_reg:x16; val_offset:1128; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1128, x17, x15, 1128, x18)

inst_650:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2fc3eb and fs2 == 0 and fe2 == 0xfc and fm2 == 0x28bc15 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f2fc3eb; op2val:0x7e28bc15; valaddr_reg:x16; val_offset:1136; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1136, x17, x15, 1136, x18)

inst_651:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3eb7cc and fs2 == 0 and fe2 == 0xfc and fm2 == 0x3716d9 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f3eb7cc; op2val:0x7e3716d9; valaddr_reg:x16; val_offset:1144; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1144, x17, x15, 1144, x18)

inst_652:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3eb7cc and fs2 == 0 and fe2 == 0xfc and fm2 == 0x3716d9 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f3eb7cc; op2val:0x7e3716d9; valaddr_reg:x16; val_offset:1152; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1152, x17, x15, 1152, x18)

inst_653:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3eb7cc and fs2 == 0 and fe2 == 0xfc and fm2 == 0x3716d9 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f3eb7cc; op2val:0x7e3716d9; valaddr_reg:x16; val_offset:1160; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1160, x17, x15, 1160, x18)

inst_654:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3eb7cc and fs2 == 0 and fe2 == 0xfc and fm2 == 0x3716d9 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f3eb7cc; op2val:0x7e3716d9; valaddr_reg:x16; val_offset:1168; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1168, x17, x15, 1168, x18)

inst_655:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3eb7cc and fs2 == 0 and fe2 == 0xfc and fm2 == 0x3716d9 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f3eb7cc; op2val:0x7e3716d9; valaddr_reg:x16; val_offset:1176; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1176, x17, x15, 1176, x18)

inst_656:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x10cc52 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x0b0197 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e10cc52; op2val:0x7d0b0197; valaddr_reg:x16; val_offset:1184; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1184, x17, x15, 1184, x18)

inst_657:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x10cc52 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x0b0197 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e10cc52; op2val:0x7d0b0197; valaddr_reg:x16; val_offset:1192; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1192, x17, x15, 1192, x18)

inst_658:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x10cc52 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x0b0197 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e10cc52; op2val:0x7d0b0197; valaddr_reg:x16; val_offset:1200; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1200, x17, x15, 1200, x18)

inst_659:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x10cc52 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x0b0197 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e10cc52; op2val:0x7d0b0197; valaddr_reg:x16; val_offset:1208; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1208, x17, x15, 1208, x18)

inst_660:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x10cc52 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x0b0197 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e10cc52; op2val:0x7d0b0197; valaddr_reg:x16; val_offset:1216; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1216, x17, x15, 1216, x18)

inst_661:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x501498 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x47c1d9 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f501498; op2val:0x7e47c1d9; valaddr_reg:x16; val_offset:1224; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1224, x17, x15, 1224, x18)

inst_662:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x501498 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x47c1d9 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f501498; op2val:0x7e47c1d9; valaddr_reg:x16; val_offset:1232; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1232, x17, x15, 1232, x18)

inst_663:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x501498 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x47c1d9 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f501498; op2val:0x7e47c1d9; valaddr_reg:x16; val_offset:1240; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1240, x17, x15, 1240, x18)

inst_664:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x501498 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x47c1d9 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f501498; op2val:0x7e47c1d9; valaddr_reg:x16; val_offset:1248; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1248, x17, x15, 1248, x18)

inst_665:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x501498 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x47c1d9 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f501498; op2val:0x7e47c1d9; valaddr_reg:x16; val_offset:1256; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1256, x17, x15, 1256, x18)

inst_666:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4f74db and fs2 == 0 and fe2 == 0xfc and fm2 == 0x472880 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f4f74db; op2val:0x7e472880; valaddr_reg:x16; val_offset:1264; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1264, x17, x15, 1264, x18)

inst_667:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4f74db and fs2 == 0 and fe2 == 0xfc and fm2 == 0x472880 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f4f74db; op2val:0x7e472880; valaddr_reg:x16; val_offset:1272; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1272, x17, x15, 1272, x18)

inst_668:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4f74db and fs2 == 0 and fe2 == 0xfc and fm2 == 0x472880 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f4f74db; op2val:0x7e472880; valaddr_reg:x16; val_offset:1280; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1280, x17, x15, 1280, x18)

inst_669:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4f74db and fs2 == 0 and fe2 == 0xfc and fm2 == 0x472880 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f4f74db; op2val:0x7e472880; valaddr_reg:x16; val_offset:1288; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1288, x17, x15, 1288, x18)

inst_670:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4f74db and fs2 == 0 and fe2 == 0xfc and fm2 == 0x472880 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f4f74db; op2val:0x7e472880; valaddr_reg:x16; val_offset:1296; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1296, x17, x15, 1296, x18)

inst_671:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x15a015 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x0fa3ec and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e15a015; op2val:0x7d0fa3ec; valaddr_reg:x16; val_offset:1304; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1304, x17, x15, 1304, x18)

inst_672:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x15a015 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x0fa3ec and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e15a015; op2val:0x7d0fa3ec; valaddr_reg:x16; val_offset:1312; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1312, x17, x15, 1312, x18)

inst_673:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x15a015 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x0fa3ec and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e15a015; op2val:0x7d0fa3ec; valaddr_reg:x16; val_offset:1320; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1320, x17, x15, 1320, x18)

inst_674:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x15a015 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x0fa3ec and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e15a015; op2val:0x7d0fa3ec; valaddr_reg:x16; val_offset:1328; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1328, x17, x15, 1328, x18)

inst_675:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x15a015 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x0fa3ec and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e15a015; op2val:0x7d0fa3ec; valaddr_reg:x16; val_offset:1336; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1336, x17, x15, 1336, x18)

inst_676:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x26386a and fs2 == 0 and fe2 == 0xfb and fm2 == 0x1f9252 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ea6386a; op2val:0x7d9f9252; valaddr_reg:x16; val_offset:1344; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1344, x17, x15, 1344, x18)

inst_677:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x26386a and fs2 == 0 and fe2 == 0xfb and fm2 == 0x1f9252 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ea6386a; op2val:0x7d9f9252; valaddr_reg:x16; val_offset:1352; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1352, x17, x15, 1352, x18)

inst_678:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x26386a and fs2 == 0 and fe2 == 0xfb and fm2 == 0x1f9252 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ea6386a; op2val:0x7d9f9252; valaddr_reg:x16; val_offset:1360; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1360, x17, x15, 1360, x18)

inst_679:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x26386a and fs2 == 0 and fe2 == 0xfb and fm2 == 0x1f9252 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ea6386a; op2val:0x7d9f9252; valaddr_reg:x16; val_offset:1368; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1368, x17, x15, 1368, x18)

inst_680:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x26386a and fs2 == 0 and fe2 == 0xfb and fm2 == 0x1f9252 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ea6386a; op2val:0x7d9f9252; valaddr_reg:x16; val_offset:1376; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1376, x17, x15, 1376, x18)

inst_681:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x43e58a and fs2 == 0 and fe2 == 0xfc and fm2 == 0x3c0f8f and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f43e58a; op2val:0x7e3c0f8f; valaddr_reg:x16; val_offset:1384; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1384, x17, x15, 1384, x18)

inst_682:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x43e58a and fs2 == 0 and fe2 == 0xfc and fm2 == 0x3c0f8f and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f43e58a; op2val:0x7e3c0f8f; valaddr_reg:x16; val_offset:1392; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1392, x17, x15, 1392, x18)

inst_683:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x43e58a and fs2 == 0 and fe2 == 0xfc and fm2 == 0x3c0f8f and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f43e58a; op2val:0x7e3c0f8f; valaddr_reg:x16; val_offset:1400; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1400, x17, x15, 1400, x18)

inst_684:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x43e58a and fs2 == 0 and fe2 == 0xfc and fm2 == 0x3c0f8f and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f43e58a; op2val:0x7e3c0f8f; valaddr_reg:x16; val_offset:1408; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1408, x17, x15, 1408, x18)

inst_685:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x43e58a and fs2 == 0 and fe2 == 0xfc and fm2 == 0x3c0f8f and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f43e58a; op2val:0x7e3c0f8f; valaddr_reg:x16; val_offset:1416; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1416, x17, x15, 1416, x18)

inst_686:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0858c9 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x02e498 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f0858c9; op2val:0x7e02e498; valaddr_reg:x16; val_offset:1424; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1424, x17, x15, 1424, x18)

inst_687:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0858c9 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x02e498 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f0858c9; op2val:0x7e02e498; valaddr_reg:x16; val_offset:1432; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1432, x17, x15, 1432, x18)

inst_688:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0858c9 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x02e498 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f0858c9; op2val:0x7e02e498; valaddr_reg:x16; val_offset:1440; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1440, x17, x15, 1440, x18)

inst_689:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0858c9 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x02e498 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f0858c9; op2val:0x7e02e498; valaddr_reg:x16; val_offset:1448; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1448, x17, x15, 1448, x18)

inst_690:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0858c9 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x02e498 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f0858c9; op2val:0x7e02e498; valaddr_reg:x16; val_offset:1456; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1456, x17, x15, 1456, x18)

inst_691:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x086718 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x02f255 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e886718; op2val:0x7d82f255; valaddr_reg:x16; val_offset:1464; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1464, x17, x15, 1464, x18)

inst_692:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x086718 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x02f255 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e886718; op2val:0x7d82f255; valaddr_reg:x16; val_offset:1472; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1472, x17, x15, 1472, x18)

inst_693:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x086718 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x02f255 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e886718; op2val:0x7d82f255; valaddr_reg:x16; val_offset:1480; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1480, x17, x15, 1480, x18)

inst_694:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x086718 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x02f255 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e886718; op2val:0x7d82f255; valaddr_reg:x16; val_offset:1488; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1488, x17, x15, 1488, x18)

inst_695:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x086718 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x02f255 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e886718; op2val:0x7d82f255; valaddr_reg:x16; val_offset:1496; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1496, x17, x15, 1496, x18)

inst_696:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x12ca9e and fs2 == 0 and fe2 == 0xfa and fm2 == 0x0ceb79 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e12ca9e; op2val:0x7d0ceb79; valaddr_reg:x16; val_offset:1504; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1504, x17, x15, 1504, x18)

inst_697:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x12ca9e and fs2 == 0 and fe2 == 0xfa and fm2 == 0x0ceb79 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e12ca9e; op2val:0x7d0ceb79; valaddr_reg:x16; val_offset:1512; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1512, x17, x15, 1512, x18)

inst_698:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x12ca9e and fs2 == 0 and fe2 == 0xfa and fm2 == 0x0ceb79 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e12ca9e; op2val:0x7d0ceb79; valaddr_reg:x16; val_offset:1520; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1520, x17, x15, 1520, x18)

inst_699:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x12ca9e and fs2 == 0 and fe2 == 0xfa and fm2 == 0x0ceb79 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e12ca9e; op2val:0x7d0ceb79; valaddr_reg:x16; val_offset:1528; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1528, x17, x15, 1528, x18)

inst_700:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x12ca9e and fs2 == 0 and fe2 == 0xfa and fm2 == 0x0ceb79 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e12ca9e; op2val:0x7d0ceb79; valaddr_reg:x16; val_offset:1536; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1536, x17, x15, 1536, x18)

inst_701:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x04c991 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x7ef3a6 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f04c991; op2val:0x7dfef3a6; valaddr_reg:x16; val_offset:1544; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1544, x17, x15, 1544, x18)

inst_702:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x04c991 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x7ef3a6 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f04c991; op2val:0x7dfef3a6; valaddr_reg:x16; val_offset:1552; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1552, x17, x15, 1552, x18)

inst_703:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x04c991 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x7ef3a6 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f04c991; op2val:0x7dfef3a6; valaddr_reg:x16; val_offset:1560; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1560, x17, x15, 1560, x18)

inst_704:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x04c991 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x7ef3a6 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f04c991; op2val:0x7dfef3a6; valaddr_reg:x16; val_offset:1568; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1568, x17, x15, 1568, x18)

inst_705:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x04c991 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x7ef3a6 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f04c991; op2val:0x7dfef3a6; valaddr_reg:x16; val_offset:1576; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1576, x17, x15, 1576, x18)

inst_706:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x36aa86 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x2f5c06 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e36aa86; op2val:0x7d2f5c06; valaddr_reg:x16; val_offset:1584; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1584, x17, x15, 1584, x18)

inst_707:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x36aa86 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x2f5c06 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e36aa86; op2val:0x7d2f5c06; valaddr_reg:x16; val_offset:1592; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1592, x17, x15, 1592, x18)

inst_708:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x36aa86 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x2f5c06 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e36aa86; op2val:0x7d2f5c06; valaddr_reg:x16; val_offset:1600; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1600, x17, x15, 1600, x18)

inst_709:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x36aa86 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x2f5c06 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e36aa86; op2val:0x7d2f5c06; valaddr_reg:x16; val_offset:1608; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1608, x17, x15, 1608, x18)

inst_710:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x36aa86 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x2f5c06 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e36aa86; op2val:0x7d2f5c06; valaddr_reg:x16; val_offset:1616; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1616, x17, x15, 1616, x18)

inst_711:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x082dae and fs2 == 0 and fe2 == 0xfc and fm2 == 0x02bb36 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f082dae; op2val:0x7e02bb36; valaddr_reg:x16; val_offset:1624; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1624, x17, x15, 1624, x18)

inst_712:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x082dae and fs2 == 0 and fe2 == 0xfc and fm2 == 0x02bb36 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f082dae; op2val:0x7e02bb36; valaddr_reg:x16; val_offset:1632; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1632, x17, x15, 1632, x18)

inst_713:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x082dae and fs2 == 0 and fe2 == 0xfc and fm2 == 0x02bb36 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f082dae; op2val:0x7e02bb36; valaddr_reg:x16; val_offset:1640; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1640, x17, x15, 1640, x18)

inst_714:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x082dae and fs2 == 0 and fe2 == 0xfc and fm2 == 0x02bb36 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f082dae; op2val:0x7e02bb36; valaddr_reg:x16; val_offset:1648; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1648, x17, x15, 1648, x18)

inst_715:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x082dae and fs2 == 0 and fe2 == 0xfc and fm2 == 0x02bb36 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f082dae; op2val:0x7e02bb36; valaddr_reg:x16; val_offset:1656; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1656, x17, x15, 1656, x18)

inst_716:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x053999 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x7fcabf and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f053999; op2val:0x7dffcabf; valaddr_reg:x16; val_offset:1664; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1664, x17, x15, 1664, x18)

inst_717:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x053999 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x7fcabf and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f053999; op2val:0x7dffcabf; valaddr_reg:x16; val_offset:1672; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1672, x17, x15, 1672, x18)

inst_718:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x053999 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x7fcabf and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f053999; op2val:0x7dffcabf; valaddr_reg:x16; val_offset:1680; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1680, x17, x15, 1680, x18)

inst_719:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x053999 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x7fcabf and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f053999; op2val:0x7dffcabf; valaddr_reg:x16; val_offset:1688; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1688, x17, x15, 1688, x18)

inst_720:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x053999 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x7fcabf and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f053999; op2val:0x7dffcabf; valaddr_reg:x16; val_offset:1696; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1696, x17, x15, 1696, x18)

inst_721:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5b3c5d and fs2 == 0 and fe2 == 0xfc and fm2 == 0x527764 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f5b3c5d; op2val:0x7e527764; valaddr_reg:x16; val_offset:1704; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1704, x17, x15, 1704, x18)

inst_722:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5b3c5d and fs2 == 0 and fe2 == 0xfc and fm2 == 0x527764 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f5b3c5d; op2val:0x7e527764; valaddr_reg:x16; val_offset:1712; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1712, x17, x15, 1712, x18)

inst_723:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5b3c5d and fs2 == 0 and fe2 == 0xfc and fm2 == 0x527764 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f5b3c5d; op2val:0x7e527764; valaddr_reg:x16; val_offset:1720; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1720, x17, x15, 1720, x18)

inst_724:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5b3c5d and fs2 == 0 and fe2 == 0xfc and fm2 == 0x527764 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f5b3c5d; op2val:0x7e527764; valaddr_reg:x16; val_offset:1728; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1728, x17, x15, 1728, x18)

inst_725:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5b3c5d and fs2 == 0 and fe2 == 0xfc and fm2 == 0x527764 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f5b3c5d; op2val:0x7e527764; valaddr_reg:x16; val_offset:1736; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1736, x17, x15, 1736, x18)

inst_726:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2d8ea5 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x269d6b and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f2d8ea5; op2val:0x7e269d6b; valaddr_reg:x16; val_offset:1744; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1744, x17, x15, 1744, x18)

inst_727:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2d8ea5 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x269d6b and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f2d8ea5; op2val:0x7e269d6b; valaddr_reg:x16; val_offset:1752; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1752, x17, x15, 1752, x18)

inst_728:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2d8ea5 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x269d6b and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f2d8ea5; op2val:0x7e269d6b; valaddr_reg:x16; val_offset:1760; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1760, x17, x15, 1760, x18)

inst_729:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2d8ea5 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x269d6b and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f2d8ea5; op2val:0x7e269d6b; valaddr_reg:x16; val_offset:1768; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1768, x17, x15, 1768, x18)

inst_730:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2d8ea5 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x269d6b and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f2d8ea5; op2val:0x7e269d6b; valaddr_reg:x16; val_offset:1776; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1776, x17, x15, 1776, x18)

inst_731:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x53e792 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x4b6dab and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f53e792; op2val:0x7e4b6dab; valaddr_reg:x16; val_offset:1784; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1784, x17, x15, 1784, x18)

inst_732:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x53e792 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x4b6dab and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f53e792; op2val:0x7e4b6dab; valaddr_reg:x16; val_offset:1792; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1792, x17, x15, 1792, x18)

inst_733:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x53e792 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x4b6dab and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f53e792; op2val:0x7e4b6dab; valaddr_reg:x16; val_offset:1800; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1800, x17, x15, 1800, x18)

inst_734:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x53e792 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x4b6dab and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f53e792; op2val:0x7e4b6dab; valaddr_reg:x16; val_offset:1808; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1808, x17, x15, 1808, x18)

inst_735:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x53e792 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x4b6dab and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f53e792; op2val:0x7e4b6dab; valaddr_reg:x16; val_offset:1816; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1816, x17, x15, 1816, x18)

inst_736:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x05402b and fs2 == 0 and fe2 == 0xfb and fm2 == 0x7fd75d and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f05402b; op2val:0x7dffd75d; valaddr_reg:x16; val_offset:1824; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1824, x17, x15, 1824, x18)

inst_737:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x05402b and fs2 == 0 and fe2 == 0xfb and fm2 == 0x7fd75d and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f05402b; op2val:0x7dffd75d; valaddr_reg:x16; val_offset:1832; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1832, x17, x15, 1832, x18)

inst_738:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x05402b and fs2 == 0 and fe2 == 0xfb and fm2 == 0x7fd75d and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f05402b; op2val:0x7dffd75d; valaddr_reg:x16; val_offset:1840; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1840, x17, x15, 1840, x18)

inst_739:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x05402b and fs2 == 0 and fe2 == 0xfb and fm2 == 0x7fd75d and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f05402b; op2val:0x7dffd75d; valaddr_reg:x16; val_offset:1848; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1848, x17, x15, 1848, x18)

inst_740:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x05402b and fs2 == 0 and fe2 == 0xfb and fm2 == 0x7fd75d and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f05402b; op2val:0x7dffd75d; valaddr_reg:x16; val_offset:1856; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1856, x17, x15, 1856, x18)

inst_741:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x484b0b and fs2 == 0 and fe2 == 0xfc and fm2 == 0x40480b and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f484b0b; op2val:0x7e40480b; valaddr_reg:x16; val_offset:1864; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1864, x17, x15, 1864, x18)

inst_742:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x484b0b and fs2 == 0 and fe2 == 0xfc and fm2 == 0x40480b and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f484b0b; op2val:0x7e40480b; valaddr_reg:x16; val_offset:1872; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1872, x17, x15, 1872, x18)

inst_743:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x484b0b and fs2 == 0 and fe2 == 0xfc and fm2 == 0x40480b and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f484b0b; op2val:0x7e40480b; valaddr_reg:x16; val_offset:1880; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1880, x17, x15, 1880, x18)

inst_744:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x484b0b and fs2 == 0 and fe2 == 0xfc and fm2 == 0x40480b and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f484b0b; op2val:0x7e40480b; valaddr_reg:x16; val_offset:1888; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1888, x17, x15, 1888, x18)

inst_745:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x484b0b and fs2 == 0 and fe2 == 0xfc and fm2 == 0x40480b and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f484b0b; op2val:0x7e40480b; valaddr_reg:x16; val_offset:1896; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1896, x17, x15, 1896, x18)

inst_746:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x54a8fa and fs2 == 0 and fe2 == 0xfb and fm2 == 0x4c2756 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ed4a8fa; op2val:0x7dcc2756; valaddr_reg:x16; val_offset:1904; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1904, x17, x15, 1904, x18)

inst_747:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x54a8fa and fs2 == 0 and fe2 == 0xfb and fm2 == 0x4c2756 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ed4a8fa; op2val:0x7dcc2756; valaddr_reg:x16; val_offset:1912; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1912, x17, x15, 1912, x18)

inst_748:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x54a8fa and fs2 == 0 and fe2 == 0xfb and fm2 == 0x4c2756 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ed4a8fa; op2val:0x7dcc2756; valaddr_reg:x16; val_offset:1920; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1920, x17, x15, 1920, x18)

inst_749:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x54a8fa and fs2 == 0 and fe2 == 0xfb and fm2 == 0x4c2756 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ed4a8fa; op2val:0x7dcc2756; valaddr_reg:x16; val_offset:1928; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1928, x17, x15, 1928, x18)

inst_750:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x54a8fa and fs2 == 0 and fe2 == 0xfb and fm2 == 0x4c2756 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ed4a8fa; op2val:0x7dcc2756; valaddr_reg:x16; val_offset:1936; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1936, x17, x15, 1936, x18)

inst_751:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x16387a and fs2 == 0 and fe2 == 0xfc and fm2 == 0x103638 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f16387a; op2val:0x7e103638; valaddr_reg:x16; val_offset:1944; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1944, x17, x15, 1944, x18)

inst_752:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x16387a and fs2 == 0 and fe2 == 0xfc and fm2 == 0x103638 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f16387a; op2val:0x7e103638; valaddr_reg:x16; val_offset:1952; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1952, x17, x15, 1952, x18)

inst_753:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x16387a and fs2 == 0 and fe2 == 0xfc and fm2 == 0x103638 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f16387a; op2val:0x7e103638; valaddr_reg:x16; val_offset:1960; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1960, x17, x15, 1960, x18)

inst_754:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x16387a and fs2 == 0 and fe2 == 0xfc and fm2 == 0x103638 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f16387a; op2val:0x7e103638; valaddr_reg:x16; val_offset:1968; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1968, x17, x15, 1968, x18)

inst_755:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x16387a and fs2 == 0 and fe2 == 0xfc and fm2 == 0x103638 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f16387a; op2val:0x7e103638; valaddr_reg:x16; val_offset:1976; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1976, x17, x15, 1976, x18)

inst_756:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x344247 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x2d0c6e and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f344247; op2val:0x7e2d0c6e; valaddr_reg:x16; val_offset:1984; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1984, x17, x15, 1984, x18)

inst_757:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x344247 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x2d0c6e and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f344247; op2val:0x7e2d0c6e; valaddr_reg:x16; val_offset:1992; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1992, x17, x15, 1992, x18)

inst_758:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x344247 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x2d0c6e and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f344247; op2val:0x7e2d0c6e; valaddr_reg:x16; val_offset:2000; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 2000, x17, x15, 2000, x18)

inst_759:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x344247 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x2d0c6e and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f344247; op2val:0x7e2d0c6e; valaddr_reg:x16; val_offset:2008; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 2008, x17, x15, 2008, x18)

inst_760:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x344247 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x2d0c6e and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f344247; op2val:0x7e2d0c6e; valaddr_reg:x16; val_offset:2016; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 2016, x17, x15, 2016, x18)

inst_761:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1e23e4 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x17d089 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e9e23e4; op2val:0x7d97d089; valaddr_reg:x16; val_offset:2024; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 2024, x17, x15, 2024, x18)
addi x16,x16,2032
RVTEST_SIGBASE(x15,signature_x15_4)

inst_762:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1e23e4 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x17d089 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e9e23e4; op2val:0x7d97d089; valaddr_reg:x16; val_offset:0; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 0, x17, x15, 0, x18)

inst_763:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1e23e4 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x17d089 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e9e23e4; op2val:0x7d97d089; valaddr_reg:x16; val_offset:8; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 8, x17, x15, 8, x18)

inst_764:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1e23e4 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x17d089 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e9e23e4; op2val:0x7d97d089; valaddr_reg:x16; val_offset:16; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 16, x17, x15, 16, x18)

inst_765:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1e23e4 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x17d089 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e9e23e4; op2val:0x7d97d089; valaddr_reg:x16; val_offset:24; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 24, x17, x15, 24, x18)

inst_766:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2f6627 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x286211 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f2f6627; op2val:0x7e286211; valaddr_reg:x16; val_offset:32; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 32, x17, x15, 32, x18)

inst_767:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2f6627 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x286211 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f2f6627; op2val:0x7e286211; valaddr_reg:x16; val_offset:40; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 40, x17, x15, 40, x18)

inst_768:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2f6627 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x286211 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f2f6627; op2val:0x7e286211; valaddr_reg:x16; val_offset:48; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 48, x17, x15, 48, x18)

inst_769:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2f6627 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x286211 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f2f6627; op2val:0x7e286211; valaddr_reg:x16; val_offset:56; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 56, x17, x15, 56, x18)

inst_770:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2f6627 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x286211 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f2f6627; op2val:0x7e286211; valaddr_reg:x16; val_offset:64; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 64, x17, x15, 64, x18)

inst_771:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4d028c and fs2 == 0 and fe2 == 0xfc and fm2 == 0x44cf3f and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f4d028c; op2val:0x7e44cf3f; valaddr_reg:x16; val_offset:72; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 72, x17, x15, 72, x18)

inst_772:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4d028c and fs2 == 0 and fe2 == 0xfc and fm2 == 0x44cf3f and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f4d028c; op2val:0x7e44cf3f; valaddr_reg:x16; val_offset:80; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 80, x17, x15, 80, x18)

inst_773:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4d028c and fs2 == 0 and fe2 == 0xfc and fm2 == 0x44cf3f and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f4d028c; op2val:0x7e44cf3f; valaddr_reg:x16; val_offset:88; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 88, x17, x15, 88, x18)

inst_774:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4d028c and fs2 == 0 and fe2 == 0xfc and fm2 == 0x44cf3f and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f4d028c; op2val:0x7e44cf3f; valaddr_reg:x16; val_offset:96; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 96, x17, x15, 96, x18)

inst_775:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4d028c and fs2 == 0 and fe2 == 0xfc and fm2 == 0x44cf3f and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f4d028c; op2val:0x7e44cf3f; valaddr_reg:x16; val_offset:104; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 104, x17, x15, 104, x18)

inst_776:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x505b06 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x480577 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f505b06; op2val:0x7e480577; valaddr_reg:x16; val_offset:112; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 112, x17, x15, 112, x18)

inst_777:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x505b06 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x480577 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f505b06; op2val:0x7e480577; valaddr_reg:x16; val_offset:120; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 120, x17, x15, 120, x18)

inst_778:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x505b06 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x480577 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f505b06; op2val:0x7e480577; valaddr_reg:x16; val_offset:128; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 128, x17, x15, 128, x18)

inst_779:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x505b06 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x480577 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f505b06; op2val:0x7e480577; valaddr_reg:x16; val_offset:136; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 136, x17, x15, 136, x18)

inst_780:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x505b06 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x480577 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f505b06; op2val:0x7e480577; valaddr_reg:x16; val_offset:144; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 144, x17, x15, 144, x18)

inst_781:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0e940b and fs2 == 0 and fe2 == 0xfc and fm2 == 0x08e00a and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f0e940b; op2val:0x7e08e00a; valaddr_reg:x16; val_offset:152; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 152, x17, x15, 152, x18)

inst_782:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0e940b and fs2 == 0 and fe2 == 0xfc and fm2 == 0x08e00a and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f0e940b; op2val:0x7e08e00a; valaddr_reg:x16; val_offset:160; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 160, x17, x15, 160, x18)

inst_783:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0e940b and fs2 == 0 and fe2 == 0xfc and fm2 == 0x08e00a and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f0e940b; op2val:0x7e08e00a; valaddr_reg:x16; val_offset:168; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 168, x17, x15, 168, x18)

inst_784:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0e940b and fs2 == 0 and fe2 == 0xfc and fm2 == 0x08e00a and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f0e940b; op2val:0x7e08e00a; valaddr_reg:x16; val_offset:176; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 176, x17, x15, 176, x18)

inst_785:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0e940b and fs2 == 0 and fe2 == 0xfc and fm2 == 0x08e00a and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f0e940b; op2val:0x7e08e00a; valaddr_reg:x16; val_offset:184; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 184, x17, x15, 184, x18)

inst_786:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x2ac614 and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x23f15b and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3daac614; op2val:0x7ca3f15b; valaddr_reg:x16; val_offset:192; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 192, x17, x15, 192, x18)

inst_787:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x2ac614 and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x23f15b and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3daac614; op2val:0x7ca3f15b; valaddr_reg:x16; val_offset:200; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 200, x17, x15, 200, x18)

inst_788:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x2ac614 and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x23f15b and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3daac614; op2val:0x7ca3f15b; valaddr_reg:x16; val_offset:208; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 208, x17, x15, 208, x18)

inst_789:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x2ac614 and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x23f15b and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3daac614; op2val:0x7ca3f15b; valaddr_reg:x16; val_offset:216; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 216, x17, x15, 216, x18)

inst_790:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x2ac614 and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x23f15b and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3daac614; op2val:0x7ca3f15b; valaddr_reg:x16; val_offset:224; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 224, x17, x15, 224, x18)

inst_791:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6775ab and fs2 == 0 and fe2 == 0xfc and fm2 == 0x5e3386 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f6775ab; op2val:0x7e5e3386; valaddr_reg:x16; val_offset:232; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 232, x17, x15, 232, x18)

inst_792:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6775ab and fs2 == 0 and fe2 == 0xfc and fm2 == 0x5e3386 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f6775ab; op2val:0x7e5e3386; valaddr_reg:x16; val_offset:240; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 240, x17, x15, 240, x18)

inst_793:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6775ab and fs2 == 0 and fe2 == 0xfc and fm2 == 0x5e3386 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f6775ab; op2val:0x7e5e3386; valaddr_reg:x16; val_offset:248; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 248, x17, x15, 248, x18)

inst_794:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6775ab and fs2 == 0 and fe2 == 0xfc and fm2 == 0x5e3386 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f6775ab; op2val:0x7e5e3386; valaddr_reg:x16; val_offset:256; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 256, x17, x15, 256, x18)

inst_795:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6775ab and fs2 == 0 and fe2 == 0xfc and fm2 == 0x5e3386 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f6775ab; op2val:0x7e5e3386; valaddr_reg:x16; val_offset:264; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 264, x17, x15, 264, x18)

inst_796:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x521f45 and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x49b79e and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3dd21f45; op2val:0x7cc9b79e; valaddr_reg:x16; val_offset:272; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 272, x17, x15, 272, x18)

inst_797:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x521f45 and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x49b79e and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3dd21f45; op2val:0x7cc9b79e; valaddr_reg:x16; val_offset:280; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 280, x17, x15, 280, x18)

inst_798:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x521f45 and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x49b79e and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3dd21f45; op2val:0x7cc9b79e; valaddr_reg:x16; val_offset:288; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 288, x17, x15, 288, x18)

inst_799:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x521f45 and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x49b79e and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3dd21f45; op2val:0x7cc9b79e; valaddr_reg:x16; val_offset:296; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 296, x17, x15, 296, x18)

inst_800:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x521f45 and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x49b79e and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3dd21f45; op2val:0x7cc9b79e; valaddr_reg:x16; val_offset:304; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 304, x17, x15, 304, x18)

inst_801:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x042ade and fs2 == 0 and fe2 == 0xfb and fm2 == 0x7dc2f2 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f042ade; op2val:0x7dfdc2f2; valaddr_reg:x16; val_offset:312; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 312, x17, x15, 312, x18)

inst_802:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x042ade and fs2 == 0 and fe2 == 0xfb and fm2 == 0x7dc2f2 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f042ade; op2val:0x7dfdc2f2; valaddr_reg:x16; val_offset:320; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 320, x17, x15, 320, x18)

inst_803:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x042ade and fs2 == 0 and fe2 == 0xfb and fm2 == 0x7dc2f2 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f042ade; op2val:0x7dfdc2f2; valaddr_reg:x16; val_offset:328; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 328, x17, x15, 328, x18)

inst_804:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x042ade and fs2 == 0 and fe2 == 0xfb and fm2 == 0x7dc2f2 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f042ade; op2val:0x7dfdc2f2; valaddr_reg:x16; val_offset:336; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 336, x17, x15, 336, x18)

inst_805:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x042ade and fs2 == 0 and fe2 == 0xfb and fm2 == 0x7dc2f2 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f042ade; op2val:0x7dfdc2f2; valaddr_reg:x16; val_offset:344; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 344, x17, x15, 344, x18)

inst_806:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x26fc5f and fs2 == 0 and fe2 == 0xfb and fm2 == 0x204e6f and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ea6fc5f; op2val:0x7da04e6f; valaddr_reg:x16; val_offset:352; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 352, x17, x15, 352, x18)

inst_807:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x26fc5f and fs2 == 0 and fe2 == 0xfb and fm2 == 0x204e6f and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ea6fc5f; op2val:0x7da04e6f; valaddr_reg:x16; val_offset:360; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 360, x17, x15, 360, x18)

inst_808:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x26fc5f and fs2 == 0 and fe2 == 0xfb and fm2 == 0x204e6f and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ea6fc5f; op2val:0x7da04e6f; valaddr_reg:x16; val_offset:368; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 368, x17, x15, 368, x18)

inst_809:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x26fc5f and fs2 == 0 and fe2 == 0xfb and fm2 == 0x204e6f and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ea6fc5f; op2val:0x7da04e6f; valaddr_reg:x16; val_offset:376; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 376, x17, x15, 376, x18)

inst_810:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x26fc5f and fs2 == 0 and fe2 == 0xfb and fm2 == 0x204e6f and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ea6fc5f; op2val:0x7da04e6f; valaddr_reg:x16; val_offset:384; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 384, x17, x15, 384, x18)

inst_811:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1e4a77 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x17f591 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e9e4a77; op2val:0x7d97f591; valaddr_reg:x16; val_offset:392; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 392, x17, x15, 392, x18)

inst_812:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1e4a77 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x17f591 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e9e4a77; op2val:0x7d97f591; valaddr_reg:x16; val_offset:400; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 400, x17, x15, 400, x18)

inst_813:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1e4a77 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x17f591 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e9e4a77; op2val:0x7d97f591; valaddr_reg:x16; val_offset:408; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 408, x17, x15, 408, x18)

inst_814:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1e4a77 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x17f591 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e9e4a77; op2val:0x7d97f591; valaddr_reg:x16; val_offset:416; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 416, x17, x15, 416, x18)

inst_815:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1e4a77 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x17f591 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e9e4a77; op2val:0x7d97f591; valaddr_reg:x16; val_offset:424; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 424, x17, x15, 424, x18)

inst_816:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x01539b and fs2 == 0 and fe2 == 0xfa and fm2 == 0x784e9b and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e81539b; op2val:0x7d784e9b; valaddr_reg:x16; val_offset:432; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 432, x17, x15, 432, x18)

inst_817:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x01539b and fs2 == 0 and fe2 == 0xfa and fm2 == 0x784e9b and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e81539b; op2val:0x7d784e9b; valaddr_reg:x16; val_offset:440; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 440, x17, x15, 440, x18)

inst_818:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x01539b and fs2 == 0 and fe2 == 0xfa and fm2 == 0x784e9b and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e81539b; op2val:0x7d784e9b; valaddr_reg:x16; val_offset:448; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 448, x17, x15, 448, x18)

inst_819:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x01539b and fs2 == 0 and fe2 == 0xfa and fm2 == 0x784e9b and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e81539b; op2val:0x7d784e9b; valaddr_reg:x16; val_offset:456; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 456, x17, x15, 456, x18)

inst_820:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x01539b and fs2 == 0 and fe2 == 0xfa and fm2 == 0x784e9b and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e81539b; op2val:0x7d784e9b; valaddr_reg:x16; val_offset:464; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 464, x17, x15, 464, x18)

inst_821:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x5cb8b4 and fs2 == 0 and fe2 == 0xf7 and fm2 == 0x53e484 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3cdcb8b4; op2val:0x7bd3e484; valaddr_reg:x16; val_offset:472; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 472, x17, x15, 472, x18)

inst_822:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x5cb8b4 and fs2 == 0 and fe2 == 0xf7 and fm2 == 0x53e484 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3cdcb8b4; op2val:0x7bd3e484; valaddr_reg:x16; val_offset:480; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 480, x17, x15, 480, x18)

inst_823:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x5cb8b4 and fs2 == 0 and fe2 == 0xf7 and fm2 == 0x53e484 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3cdcb8b4; op2val:0x7bd3e484; valaddr_reg:x16; val_offset:488; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 488, x17, x15, 488, x18)

inst_824:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x5cb8b4 and fs2 == 0 and fe2 == 0xf7 and fm2 == 0x53e484 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3cdcb8b4; op2val:0x7bd3e484; valaddr_reg:x16; val_offset:496; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 496, x17, x15, 496, x18)

inst_825:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x5cb8b4 and fs2 == 0 and fe2 == 0xf7 and fm2 == 0x53e484 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3cdcb8b4; op2val:0x7bd3e484; valaddr_reg:x16; val_offset:504; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 504, x17, x15, 504, x18)

inst_826:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6aaf70 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x614c43 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f6aaf70; op2val:0x7e614c43; valaddr_reg:x16; val_offset:512; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 512, x17, x15, 512, x18)

inst_827:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6aaf70 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x614c43 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f6aaf70; op2val:0x7e614c43; valaddr_reg:x16; val_offset:520; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 520, x17, x15, 520, x18)

inst_828:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6aaf70 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x614c43 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f6aaf70; op2val:0x7e614c43; valaddr_reg:x16; val_offset:528; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 528, x17, x15, 528, x18)

inst_829:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6aaf70 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x614c43 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f6aaf70; op2val:0x7e614c43; valaddr_reg:x16; val_offset:536; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 536, x17, x15, 536, x18)

inst_830:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6aaf70 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x614c43 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f6aaf70; op2val:0x7e614c43; valaddr_reg:x16; val_offset:544; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 544, x17, x15, 544, x18)

inst_831:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2653c1 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x1fac91 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f2653c1; op2val:0x7e1fac91; valaddr_reg:x16; val_offset:552; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 552, x17, x15, 552, x18)

inst_832:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2653c1 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x1fac91 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f2653c1; op2val:0x7e1fac91; valaddr_reg:x16; val_offset:560; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 560, x17, x15, 560, x18)

inst_833:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2653c1 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x1fac91 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f2653c1; op2val:0x7e1fac91; valaddr_reg:x16; val_offset:568; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 568, x17, x15, 568, x18)

inst_834:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2653c1 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x1fac91 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f2653c1; op2val:0x7e1fac91; valaddr_reg:x16; val_offset:576; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 576, x17, x15, 576, x18)

inst_835:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2653c1 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x1fac91 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f2653c1; op2val:0x7e1fac91; valaddr_reg:x16; val_offset:584; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 584, x17, x15, 584, x18)

inst_836:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x21ed65 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x1b7343 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f21ed65; op2val:0x7e1b7343; valaddr_reg:x16; val_offset:592; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 592, x17, x15, 592, x18)

inst_837:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x21ed65 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x1b7343 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f21ed65; op2val:0x7e1b7343; valaddr_reg:x16; val_offset:600; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 600, x17, x15, 600, x18)

inst_838:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x21ed65 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x1b7343 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f21ed65; op2val:0x7e1b7343; valaddr_reg:x16; val_offset:608; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 608, x17, x15, 608, x18)

inst_839:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x21ed65 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x1b7343 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f21ed65; op2val:0x7e1b7343; valaddr_reg:x16; val_offset:616; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 616, x17, x15, 616, x18)

inst_840:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x21ed65 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x1b7343 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f21ed65; op2val:0x7e1b7343; valaddr_reg:x16; val_offset:624; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 624, x17, x15, 624, x18)

inst_841:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x7c5f24 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x7c5f21 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e7c5f24; op2val:0x7d7c5f21; valaddr_reg:x16; val_offset:632; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 632, x17, x15, 632, x18)

inst_842:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x7c5f24 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x7c5f21 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e7c5f24; op2val:0x7d7c5f21; valaddr_reg:x16; val_offset:640; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 640, x17, x15, 640, x18)

inst_843:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x7c5f24 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x7c5f21 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e7c5f24; op2val:0x7d7c5f21; valaddr_reg:x16; val_offset:648; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 648, x17, x15, 648, x18)

inst_844:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x7c5f24 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x7c5f21 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e7c5f24; op2val:0x7d7c5f21; valaddr_reg:x16; val_offset:656; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 656, x17, x15, 656, x18)

inst_845:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x7c5f24 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x7c5f21 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e7c5f24; op2val:0x7d7c5f21; valaddr_reg:x16; val_offset:664; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 664, x17, x15, 664, x18)

inst_846:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x400239 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x400236 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f400239; op2val:0x7e400236; valaddr_reg:x16; val_offset:672; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 672, x17, x15, 672, x18)

inst_847:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x400239 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x400236 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f400239; op2val:0x7e400236; valaddr_reg:x16; val_offset:680; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 680, x17, x15, 680, x18)

inst_848:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x400239 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x400236 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f400239; op2val:0x7e400236; valaddr_reg:x16; val_offset:688; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 688, x17, x15, 688, x18)

inst_849:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x400239 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x400236 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f400239; op2val:0x7e400236; valaddr_reg:x16; val_offset:696; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 696, x17, x15, 696, x18)

inst_850:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x400239 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x400236 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f400239; op2val:0x7e400236; valaddr_reg:x16; val_offset:704; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 704, x17, x15, 704, x18)

inst_851:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x420406 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x420404 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f420406; op2val:0x7e420404; valaddr_reg:x16; val_offset:712; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 712, x17, x15, 712, x18)

inst_852:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x420406 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x420404 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f420406; op2val:0x7e420404; valaddr_reg:x16; val_offset:720; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 720, x17, x15, 720, x18)

inst_853:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x420406 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x420404 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f420406; op2val:0x7e420404; valaddr_reg:x16; val_offset:728; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 728, x17, x15, 728, x18)

inst_854:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x420406 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x420404 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f420406; op2val:0x7e420404; valaddr_reg:x16; val_offset:736; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 736, x17, x15, 736, x18)

inst_855:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x420406 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x420404 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f420406; op2val:0x7e420404; valaddr_reg:x16; val_offset:744; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 744, x17, x15, 744, x18)

inst_856:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5f3e5c and fs2 == 0 and fe2 == 0xfb and fm2 == 0x5f3e5a and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3edf3e5c; op2val:0x7ddf3e5a; valaddr_reg:x16; val_offset:752; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 752, x17, x15, 752, x18)

inst_857:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5f3e5c and fs2 == 0 and fe2 == 0xfb and fm2 == 0x5f3e5a and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3edf3e5c; op2val:0x7ddf3e5a; valaddr_reg:x16; val_offset:760; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 760, x17, x15, 760, x18)

inst_858:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5f3e5c and fs2 == 0 and fe2 == 0xfb and fm2 == 0x5f3e5a and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3edf3e5c; op2val:0x7ddf3e5a; valaddr_reg:x16; val_offset:768; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 768, x17, x15, 768, x18)

inst_859:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5f3e5c and fs2 == 0 and fe2 == 0xfb and fm2 == 0x5f3e5a and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3edf3e5c; op2val:0x7ddf3e5a; valaddr_reg:x16; val_offset:776; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 776, x17, x15, 776, x18)

inst_860:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5f3e5c and fs2 == 0 and fe2 == 0xfb and fm2 == 0x5f3e5a and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3edf3e5c; op2val:0x7ddf3e5a; valaddr_reg:x16; val_offset:784; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 784, x17, x15, 784, x18)

inst_861:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x705929 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x705926 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f705929; op2val:0x7e705926; valaddr_reg:x16; val_offset:792; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 792, x17, x15, 792, x18)

inst_862:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x705929 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x705926 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f705929; op2val:0x7e705926; valaddr_reg:x16; val_offset:800; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 800, x17, x15, 800, x18)

inst_863:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x705929 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x705926 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f705929; op2val:0x7e705926; valaddr_reg:x16; val_offset:808; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 808, x17, x15, 808, x18)

inst_864:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x705929 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x705926 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f705929; op2val:0x7e705926; valaddr_reg:x16; val_offset:816; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 816, x17, x15, 816, x18)

inst_865:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x705929 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x705926 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f705929; op2val:0x7e705926; valaddr_reg:x16; val_offset:824; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 824, x17, x15, 824, x18)

inst_866:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0087ab and fs2 == 0 and fe2 == 0xfb and fm2 == 0x0087aa and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e8087ab; op2val:0x7d8087aa; valaddr_reg:x16; val_offset:832; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 832, x17, x15, 832, x18)

inst_867:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0087ab and fs2 == 0 and fe2 == 0xfb and fm2 == 0x0087aa and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e8087ab; op2val:0x7d8087aa; valaddr_reg:x16; val_offset:840; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 840, x17, x15, 840, x18)

inst_868:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0087ab and fs2 == 0 and fe2 == 0xfb and fm2 == 0x0087aa and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e8087ab; op2val:0x7d8087aa; valaddr_reg:x16; val_offset:848; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 848, x17, x15, 848, x18)

inst_869:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0087ab and fs2 == 0 and fe2 == 0xfb and fm2 == 0x0087aa and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e8087ab; op2val:0x7d8087aa; valaddr_reg:x16; val_offset:856; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 856, x17, x15, 856, x18)

inst_870:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0087ab and fs2 == 0 and fe2 == 0xfb and fm2 == 0x0087aa and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e8087ab; op2val:0x7d8087aa; valaddr_reg:x16; val_offset:864; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 864, x17, x15, 864, x18)

inst_871:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x11d6d1 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x11d6d0 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e91d6d1; op2val:0x7d91d6d0; valaddr_reg:x16; val_offset:872; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 872, x17, x15, 872, x18)

inst_872:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x11d6d1 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x11d6d0 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e91d6d1; op2val:0x7d91d6d0; valaddr_reg:x16; val_offset:880; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 880, x17, x15, 880, x18)

inst_873:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x11d6d1 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x11d6d0 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e91d6d1; op2val:0x7d91d6d0; valaddr_reg:x16; val_offset:888; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 888, x17, x15, 888, x18)

inst_874:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x11d6d1 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x11d6d0 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e91d6d1; op2val:0x7d91d6d0; valaddr_reg:x16; val_offset:896; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 896, x17, x15, 896, x18)

inst_875:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x11d6d1 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x11d6d0 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e91d6d1; op2val:0x7d91d6d0; valaddr_reg:x16; val_offset:904; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 904, x17, x15, 904, x18)

inst_876:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x6e29d5 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x6e29d3 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e6e29d5; op2val:0x7d6e29d3; valaddr_reg:x16; val_offset:912; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 912, x17, x15, 912, x18)

inst_877:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x6e29d5 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x6e29d3 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e6e29d5; op2val:0x7d6e29d3; valaddr_reg:x16; val_offset:920; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 920, x17, x15, 920, x18)

inst_878:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x6e29d5 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x6e29d3 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e6e29d5; op2val:0x7d6e29d3; valaddr_reg:x16; val_offset:928; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 928, x17, x15, 928, x18)

inst_879:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x6e29d5 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x6e29d3 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e6e29d5; op2val:0x7d6e29d3; valaddr_reg:x16; val_offset:936; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 936, x17, x15, 936, x18)

inst_880:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x6e29d5 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x6e29d3 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e6e29d5; op2val:0x7d6e29d3; valaddr_reg:x16; val_offset:944; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 944, x17, x15, 944, x18)

inst_881:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x4e1533 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x4e1531 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e4e1533; op2val:0x7d4e1531; valaddr_reg:x16; val_offset:952; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 952, x17, x15, 952, x18)

inst_882:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x4e1533 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x4e1531 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e4e1533; op2val:0x7d4e1531; valaddr_reg:x16; val_offset:960; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 960, x17, x15, 960, x18)

inst_883:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x4e1533 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x4e1531 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e4e1533; op2val:0x7d4e1531; valaddr_reg:x16; val_offset:968; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 968, x17, x15, 968, x18)

inst_884:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x4e1533 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x4e1531 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e4e1533; op2val:0x7d4e1531; valaddr_reg:x16; val_offset:976; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 976, x17, x15, 976, x18)

inst_885:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x4e1533 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x4e1531 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e4e1533; op2val:0x7d4e1531; valaddr_reg:x16; val_offset:984; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 984, x17, x15, 984, x18)

inst_886:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x42ec59 and fs2 == 0 and fe2 == 0xf8 and fm2 == 0x42ec57 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3d42ec59; op2val:0x7c42ec57; valaddr_reg:x16; val_offset:992; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 992, x17, x15, 992, x18)

inst_887:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x42ec59 and fs2 == 0 and fe2 == 0xf8 and fm2 == 0x42ec57 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3d42ec59; op2val:0x7c42ec57; valaddr_reg:x16; val_offset:1000; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1000, x17, x15, 1000, x18)

inst_888:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x42ec59 and fs2 == 0 and fe2 == 0xf8 and fm2 == 0x42ec57 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3d42ec59; op2val:0x7c42ec57; valaddr_reg:x16; val_offset:1008; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1008, x17, x15, 1008, x18)

inst_889:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x42ec59 and fs2 == 0 and fe2 == 0xf8 and fm2 == 0x42ec57 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3d42ec59; op2val:0x7c42ec57; valaddr_reg:x16; val_offset:1016; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1016, x17, x15, 1016, x18)

inst_890:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x42ec59 and fs2 == 0 and fe2 == 0xf8 and fm2 == 0x42ec57 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3d42ec59; op2val:0x7c42ec57; valaddr_reg:x16; val_offset:1024; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1024, x17, x15, 1024, x18)

inst_891:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x272673 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x272671 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ea72673; op2val:0x7da72671; valaddr_reg:x16; val_offset:1032; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1032, x17, x15, 1032, x18)

inst_892:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x272673 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x272671 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ea72673; op2val:0x7da72671; valaddr_reg:x16; val_offset:1040; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1040, x17, x15, 1040, x18)

inst_893:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x272673 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x272671 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ea72673; op2val:0x7da72671; valaddr_reg:x16; val_offset:1048; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1048, x17, x15, 1048, x18)

inst_894:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x272673 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x272671 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ea72673; op2val:0x7da72671; valaddr_reg:x16; val_offset:1056; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1056, x17, x15, 1056, x18)

inst_895:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x272673 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x272671 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ea72673; op2val:0x7da72671; valaddr_reg:x16; val_offset:1064; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1064, x17, x15, 1064, x18)

inst_896:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x60f390 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x60f38f and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f60f390; op2val:0x7e60f38f; valaddr_reg:x16; val_offset:1072; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1072, x17, x15, 1072, x18)

inst_897:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x60f390 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x60f38f and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f60f390; op2val:0x7e60f38f; valaddr_reg:x16; val_offset:1080; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1080, x17, x15, 1080, x18)

inst_898:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x60f390 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x60f38f and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f60f390; op2val:0x7e60f38f; valaddr_reg:x16; val_offset:1088; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1088, x17, x15, 1088, x18)

inst_899:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x60f390 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x60f38f and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f60f390; op2val:0x7e60f38f; valaddr_reg:x16; val_offset:1096; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1096, x17, x15, 1096, x18)

inst_900:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x60f390 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x60f38f and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f60f390; op2val:0x7e60f38f; valaddr_reg:x16; val_offset:1104; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1104, x17, x15, 1104, x18)

inst_901:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x79fcbb and fs2 == 0 and fe2 == 0xfc and fm2 == 0x79fcb9 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f79fcbb; op2val:0x7e79fcb9; valaddr_reg:x16; val_offset:1112; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1112, x17, x15, 1112, x18)

inst_902:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x79fcbb and fs2 == 0 and fe2 == 0xfc and fm2 == 0x79fcb9 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f79fcbb; op2val:0x7e79fcb9; valaddr_reg:x16; val_offset:1120; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1120, x17, x15, 1120, x18)

inst_903:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x79fcbb and fs2 == 0 and fe2 == 0xfc and fm2 == 0x79fcb9 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f79fcbb; op2val:0x7e79fcb9; valaddr_reg:x16; val_offset:1128; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1128, x17, x15, 1128, x18)

inst_904:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x79fcbb and fs2 == 0 and fe2 == 0xfc and fm2 == 0x79fcb9 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f79fcbb; op2val:0x7e79fcb9; valaddr_reg:x16; val_offset:1136; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1136, x17, x15, 1136, x18)

inst_905:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x79fcbb and fs2 == 0 and fe2 == 0xfc and fm2 == 0x79fcb9 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f79fcbb; op2val:0x7e79fcb9; valaddr_reg:x16; val_offset:1144; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1144, x17, x15, 1144, x18)

inst_906:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x74cd3c and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x74cd3a and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3df4cd3c; op2val:0x7cf4cd3a; valaddr_reg:x16; val_offset:1152; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1152, x17, x15, 1152, x18)

inst_907:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x74cd3c and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x74cd3a and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3df4cd3c; op2val:0x7cf4cd3a; valaddr_reg:x16; val_offset:1160; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1160, x17, x15, 1160, x18)

inst_908:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x74cd3c and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x74cd3a and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3df4cd3c; op2val:0x7cf4cd3a; valaddr_reg:x16; val_offset:1168; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1168, x17, x15, 1168, x18)

inst_909:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x74cd3c and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x74cd3a and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3df4cd3c; op2val:0x7cf4cd3a; valaddr_reg:x16; val_offset:1176; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1176, x17, x15, 1176, x18)

inst_910:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x74cd3c and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x74cd3a and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3df4cd3c; op2val:0x7cf4cd3a; valaddr_reg:x16; val_offset:1184; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1184, x17, x15, 1184, x18)

inst_911:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x687fde and fs2 == 0 and fe2 == 0xfc and fm2 == 0x687fdb and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f687fde; op2val:0x7e687fdb; valaddr_reg:x16; val_offset:1192; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1192, x17, x15, 1192, x18)

inst_912:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x687fde and fs2 == 0 and fe2 == 0xfc and fm2 == 0x687fdb and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f687fde; op2val:0x7e687fdb; valaddr_reg:x16; val_offset:1200; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1200, x17, x15, 1200, x18)

inst_913:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x687fde and fs2 == 0 and fe2 == 0xfc and fm2 == 0x687fdb and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f687fde; op2val:0x7e687fdb; valaddr_reg:x16; val_offset:1208; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1208, x17, x15, 1208, x18)

inst_914:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x687fde and fs2 == 0 and fe2 == 0xfc and fm2 == 0x687fdb and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f687fde; op2val:0x7e687fdb; valaddr_reg:x16; val_offset:1216; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1216, x17, x15, 1216, x18)

inst_915:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x687fde and fs2 == 0 and fe2 == 0xfc and fm2 == 0x687fdb and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f687fde; op2val:0x7e687fdb; valaddr_reg:x16; val_offset:1224; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1224, x17, x15, 1224, x18)

inst_916:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x671cd8 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x671cd6 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e671cd8; op2val:0x7d671cd6; valaddr_reg:x16; val_offset:1232; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1232, x17, x15, 1232, x18)

inst_917:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x671cd8 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x671cd6 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e671cd8; op2val:0x7d671cd6; valaddr_reg:x16; val_offset:1240; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1240, x17, x15, 1240, x18)

inst_918:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x671cd8 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x671cd6 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e671cd8; op2val:0x7d671cd6; valaddr_reg:x16; val_offset:1248; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1248, x17, x15, 1248, x18)

inst_919:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x671cd8 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x671cd6 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e671cd8; op2val:0x7d671cd6; valaddr_reg:x16; val_offset:1256; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1256, x17, x15, 1256, x18)

inst_920:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x671cd8 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x671cd6 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e671cd8; op2val:0x7d671cd6; valaddr_reg:x16; val_offset:1264; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1264, x17, x15, 1264, x18)

inst_921:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7ebeca and fs2 == 0 and fe2 == 0xfc and fm2 == 0x7ebec7 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f7ebeca; op2val:0x7e7ebec7; valaddr_reg:x16; val_offset:1272; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1272, x17, x15, 1272, x18)

inst_922:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7ebeca and fs2 == 0 and fe2 == 0xfc and fm2 == 0x7ebec7 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f7ebeca; op2val:0x7e7ebec7; valaddr_reg:x16; val_offset:1280; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1280, x17, x15, 1280, x18)

inst_923:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7ebeca and fs2 == 0 and fe2 == 0xfc and fm2 == 0x7ebec7 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f7ebeca; op2val:0x7e7ebec7; valaddr_reg:x16; val_offset:1288; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1288, x17, x15, 1288, x18)

inst_924:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7ebeca and fs2 == 0 and fe2 == 0xfc and fm2 == 0x7ebec7 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f7ebeca; op2val:0x7e7ebec7; valaddr_reg:x16; val_offset:1296; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1296, x17, x15, 1296, x18)

inst_925:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7ebeca and fs2 == 0 and fe2 == 0xfc and fm2 == 0x7ebec7 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f7ebeca; op2val:0x7e7ebec7; valaddr_reg:x16; val_offset:1304; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1304, x17, x15, 1304, x18)

inst_926:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x65990f and fs2 == 0 and fe2 == 0xfc and fm2 == 0x65990c and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f65990f; op2val:0x7e65990c; valaddr_reg:x16; val_offset:1312; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1312, x17, x15, 1312, x18)

inst_927:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x65990f and fs2 == 0 and fe2 == 0xfc and fm2 == 0x65990c and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f65990f; op2val:0x7e65990c; valaddr_reg:x16; val_offset:1320; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1320, x17, x15, 1320, x18)

inst_928:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x65990f and fs2 == 0 and fe2 == 0xfc and fm2 == 0x65990c and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f65990f; op2val:0x7e65990c; valaddr_reg:x16; val_offset:1328; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1328, x17, x15, 1328, x18)

inst_929:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x65990f and fs2 == 0 and fe2 == 0xfc and fm2 == 0x65990c and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f65990f; op2val:0x7e65990c; valaddr_reg:x16; val_offset:1336; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1336, x17, x15, 1336, x18)

inst_930:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x65990f and fs2 == 0 and fe2 == 0xfc and fm2 == 0x65990c and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f65990f; op2val:0x7e65990c; valaddr_reg:x16; val_offset:1344; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1344, x17, x15, 1344, x18)

inst_931:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0853dc and fs2 == 0 and fe2 == 0xfb and fm2 == 0x0853db and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e8853dc; op2val:0x7d8853db; valaddr_reg:x16; val_offset:1352; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1352, x17, x15, 1352, x18)

inst_932:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0853dc and fs2 == 0 and fe2 == 0xfb and fm2 == 0x0853db and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e8853dc; op2val:0x7d8853db; valaddr_reg:x16; val_offset:1360; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1360, x17, x15, 1360, x18)

inst_933:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0853dc and fs2 == 0 and fe2 == 0xfb and fm2 == 0x0853db and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e8853dc; op2val:0x7d8853db; valaddr_reg:x16; val_offset:1368; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1368, x17, x15, 1368, x18)

inst_934:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0853dc and fs2 == 0 and fe2 == 0xfb and fm2 == 0x0853db and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e8853dc; op2val:0x7d8853db; valaddr_reg:x16; val_offset:1376; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1376, x17, x15, 1376, x18)

inst_935:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0853dc and fs2 == 0 and fe2 == 0xfb and fm2 == 0x0853db and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e8853dc; op2val:0x7d8853db; valaddr_reg:x16; val_offset:1384; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1384, x17, x15, 1384, x18)

inst_936:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5482e7 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x5482e5 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e5482e7; op2val:0x7d5482e5; valaddr_reg:x16; val_offset:1392; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1392, x17, x15, 1392, x18)

inst_937:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5482e7 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x5482e5 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e5482e7; op2val:0x7d5482e5; valaddr_reg:x16; val_offset:1400; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1400, x17, x15, 1400, x18)

inst_938:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5482e7 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x5482e5 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e5482e7; op2val:0x7d5482e5; valaddr_reg:x16; val_offset:1408; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1408, x17, x15, 1408, x18)

inst_939:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5482e7 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x5482e5 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e5482e7; op2val:0x7d5482e5; valaddr_reg:x16; val_offset:1416; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1416, x17, x15, 1416, x18)

inst_940:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5482e7 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x5482e5 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e5482e7; op2val:0x7d5482e5; valaddr_reg:x16; val_offset:1424; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1424, x17, x15, 1424, x18)

inst_941:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2ce860 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x2ce85e and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3eace860; op2val:0x7dace85e; valaddr_reg:x16; val_offset:1432; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1432, x17, x15, 1432, x18)

inst_942:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2ce860 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x2ce85e and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3eace860; op2val:0x7dace85e; valaddr_reg:x16; val_offset:1440; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1440, x17, x15, 1440, x18)

inst_943:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2ce860 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x2ce85e and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3eace860; op2val:0x7dace85e; valaddr_reg:x16; val_offset:1448; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1448, x17, x15, 1448, x18)

inst_944:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2ce860 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x2ce85e and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3eace860; op2val:0x7dace85e; valaddr_reg:x16; val_offset:1456; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1456, x17, x15, 1456, x18)

inst_945:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2ce860 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x2ce85e and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3eace860; op2val:0x7dace85e; valaddr_reg:x16; val_offset:1464; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1464, x17, x15, 1464, x18)

inst_946:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x607980 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x60797d and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f607980; op2val:0x7e60797d; valaddr_reg:x16; val_offset:1472; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1472, x17, x15, 1472, x18)

inst_947:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x607980 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x60797d and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f607980; op2val:0x7e60797d; valaddr_reg:x16; val_offset:1480; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1480, x17, x15, 1480, x18)

inst_948:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x607980 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x60797d and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f607980; op2val:0x7e60797d; valaddr_reg:x16; val_offset:1488; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1488, x17, x15, 1488, x18)

inst_949:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x607980 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x60797d and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f607980; op2val:0x7e60797d; valaddr_reg:x16; val_offset:1496; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1496, x17, x15, 1496, x18)

inst_950:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x607980 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x60797d and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f607980; op2val:0x7e60797d; valaddr_reg:x16; val_offset:1504; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1504, x17, x15, 1504, x18)

inst_951:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3ce1ca and fs2 == 0 and fe2 == 0xfc and fm2 == 0x3ce1c8 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f3ce1ca; op2val:0x7e3ce1c8; valaddr_reg:x16; val_offset:1512; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1512, x17, x15, 1512, x18)

inst_952:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3ce1ca and fs2 == 0 and fe2 == 0xfc and fm2 == 0x3ce1c8 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f3ce1ca; op2val:0x7e3ce1c8; valaddr_reg:x16; val_offset:1520; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1520, x17, x15, 1520, x18)

inst_953:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3ce1ca and fs2 == 0 and fe2 == 0xfc and fm2 == 0x3ce1c8 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f3ce1ca; op2val:0x7e3ce1c8; valaddr_reg:x16; val_offset:1528; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1528, x17, x15, 1528, x18)

inst_954:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3ce1ca and fs2 == 0 and fe2 == 0xfc and fm2 == 0x3ce1c8 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f3ce1ca; op2val:0x7e3ce1c8; valaddr_reg:x16; val_offset:1536; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1536, x17, x15, 1536, x18)

inst_955:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3ce1ca and fs2 == 0 and fe2 == 0xfc and fm2 == 0x3ce1c8 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f3ce1ca; op2val:0x7e3ce1c8; valaddr_reg:x16; val_offset:1544; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1544, x17, x15, 1544, x18)

inst_956:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x5131d1 and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x5131cf and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3dd131d1; op2val:0x7cd131cf; valaddr_reg:x16; val_offset:1552; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1552, x17, x15, 1552, x18)

inst_957:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x5131d1 and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x5131cf and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3dd131d1; op2val:0x7cd131cf; valaddr_reg:x16; val_offset:1560; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1560, x17, x15, 1560, x18)

inst_958:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x5131d1 and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x5131cf and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3dd131d1; op2val:0x7cd131cf; valaddr_reg:x16; val_offset:1568; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1568, x17, x15, 1568, x18)

inst_959:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x5131d1 and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x5131cf and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3dd131d1; op2val:0x7cd131cf; valaddr_reg:x16; val_offset:1576; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1576, x17, x15, 1576, x18)

inst_960:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x5131d1 and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x5131cf and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3dd131d1; op2val:0x7cd131cf; valaddr_reg:x16; val_offset:1584; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1584, x17, x15, 1584, x18)

inst_961:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x0214a3 and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x0214a2 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3d8214a3; op2val:0x7c8214a2; valaddr_reg:x16; val_offset:1592; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1592, x17, x15, 1592, x18)

inst_962:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x0214a3 and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x0214a2 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3d8214a3; op2val:0x7c8214a2; valaddr_reg:x16; val_offset:1600; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1600, x17, x15, 1600, x18)

inst_963:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x0214a3 and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x0214a2 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3d8214a3; op2val:0x7c8214a2; valaddr_reg:x16; val_offset:1608; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1608, x17, x15, 1608, x18)

inst_964:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x0214a3 and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x0214a2 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3d8214a3; op2val:0x7c8214a2; valaddr_reg:x16; val_offset:1616; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1616, x17, x15, 1616, x18)

inst_965:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x0214a3 and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x0214a2 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3d8214a3; op2val:0x7c8214a2; valaddr_reg:x16; val_offset:1624; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1624, x17, x15, 1624, x18)

inst_966:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x12fb29 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x12fb28 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f12fb29; op2val:0x7e12fb28; valaddr_reg:x16; val_offset:1632; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1632, x17, x15, 1632, x18)

inst_967:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x12fb29 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x12fb28 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f12fb29; op2val:0x7e12fb28; valaddr_reg:x16; val_offset:1640; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1640, x17, x15, 1640, x18)

inst_968:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x12fb29 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x12fb28 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f12fb29; op2val:0x7e12fb28; valaddr_reg:x16; val_offset:1648; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1648, x17, x15, 1648, x18)

inst_969:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x12fb29 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x12fb28 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f12fb29; op2val:0x7e12fb28; valaddr_reg:x16; val_offset:1656; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1656, x17, x15, 1656, x18)

inst_970:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x12fb29 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x12fb28 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f12fb29; op2val:0x7e12fb28; valaddr_reg:x16; val_offset:1664; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1664, x17, x15, 1664, x18)

inst_971:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6dacde and fs2 == 0 and fe2 == 0xfc and fm2 == 0x6dacdc and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f6dacde; op2val:0x7e6dacdc; valaddr_reg:x16; val_offset:1672; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1672, x17, x15, 1672, x18)

inst_972:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6dacde and fs2 == 0 and fe2 == 0xfc and fm2 == 0x6dacdc and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f6dacde; op2val:0x7e6dacdc; valaddr_reg:x16; val_offset:1680; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1680, x17, x15, 1680, x18)

inst_973:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6dacde and fs2 == 0 and fe2 == 0xfc and fm2 == 0x6dacdc and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f6dacde; op2val:0x7e6dacdc; valaddr_reg:x16; val_offset:1688; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1688, x17, x15, 1688, x18)

inst_974:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6dacde and fs2 == 0 and fe2 == 0xfc and fm2 == 0x6dacdc and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f6dacde; op2val:0x7e6dacdc; valaddr_reg:x16; val_offset:1696; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1696, x17, x15, 1696, x18)

inst_975:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6dacde and fs2 == 0 and fe2 == 0xfc and fm2 == 0x6dacdc and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f6dacde; op2val:0x7e6dacdc; valaddr_reg:x16; val_offset:1704; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1704, x17, x15, 1704, x18)

inst_976:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6da6b8 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x6da6b6 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3eeda6b8; op2val:0x7deda6b6; valaddr_reg:x16; val_offset:1712; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1712, x17, x15, 1712, x18)

inst_977:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6da6b8 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x6da6b6 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3eeda6b8; op2val:0x7deda6b6; valaddr_reg:x16; val_offset:1720; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1720, x17, x15, 1720, x18)

inst_978:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6da6b8 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x6da6b6 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3eeda6b8; op2val:0x7deda6b6; valaddr_reg:x16; val_offset:1728; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1728, x17, x15, 1728, x18)

inst_979:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6da6b8 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x6da6b6 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3eeda6b8; op2val:0x7deda6b6; valaddr_reg:x16; val_offset:1736; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1736, x17, x15, 1736, x18)

inst_980:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6da6b8 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x6da6b6 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3eeda6b8; op2val:0x7deda6b6; valaddr_reg:x16; val_offset:1744; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1744, x17, x15, 1744, x18)

inst_981:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0a0665 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x0a0663 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f0a0665; op2val:0x7e0a0663; valaddr_reg:x16; val_offset:1752; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1752, x17, x15, 1752, x18)

inst_982:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0a0665 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x0a0663 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f0a0665; op2val:0x7e0a0663; valaddr_reg:x16; val_offset:1760; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1760, x17, x15, 1760, x18)

inst_983:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0a0665 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x0a0663 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f0a0665; op2val:0x7e0a0663; valaddr_reg:x16; val_offset:1768; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1768, x17, x15, 1768, x18)

inst_984:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0a0665 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x0a0663 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f0a0665; op2val:0x7e0a0663; valaddr_reg:x16; val_offset:1776; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1776, x17, x15, 1776, x18)

inst_985:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0a0665 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x0a0663 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f0a0665; op2val:0x7e0a0663; valaddr_reg:x16; val_offset:1784; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1784, x17, x15, 1784, x18)

inst_986:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x145933 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x145931 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f145933; op2val:0x7e145931; valaddr_reg:x16; val_offset:1792; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1792, x17, x15, 1792, x18)

inst_987:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x145933 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x145931 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f145933; op2val:0x7e145931; valaddr_reg:x16; val_offset:1800; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1800, x17, x15, 1800, x18)

inst_988:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x145933 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x145931 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f145933; op2val:0x7e145931; valaddr_reg:x16; val_offset:1808; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1808, x17, x15, 1808, x18)

inst_989:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x145933 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x145931 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f145933; op2val:0x7e145931; valaddr_reg:x16; val_offset:1816; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1816, x17, x15, 1816, x18)

inst_990:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x145933 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x145931 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f145933; op2val:0x7e145931; valaddr_reg:x16; val_offset:1824; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1824, x17, x15, 1824, x18)

inst_991:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x00fc35 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x00fc33 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f00fc35; op2val:0x7e00fc33; valaddr_reg:x16; val_offset:1832; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1832, x17, x15, 1832, x18)

inst_992:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x00fc35 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x00fc33 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f00fc35; op2val:0x7e00fc33; valaddr_reg:x16; val_offset:1840; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1840, x17, x15, 1840, x18)

inst_993:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x00fc35 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x00fc33 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f00fc35; op2val:0x7e00fc33; valaddr_reg:x16; val_offset:1848; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1848, x17, x15, 1848, x18)

inst_994:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x00fc35 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x00fc33 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f00fc35; op2val:0x7e00fc33; valaddr_reg:x16; val_offset:1856; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1856, x17, x15, 1856, x18)

inst_995:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x00fc35 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x00fc33 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f00fc35; op2val:0x7e00fc33; valaddr_reg:x16; val_offset:1864; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1864, x17, x15, 1864, x18)

inst_996:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x118314 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x118313 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f118314; op2val:0x7e118313; valaddr_reg:x16; val_offset:1872; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1872, x17, x15, 1872, x18)

inst_997:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x118314 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x118313 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f118314; op2val:0x7e118313; valaddr_reg:x16; val_offset:1880; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1880, x17, x15, 1880, x18)

inst_998:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x118314 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x118313 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f118314; op2val:0x7e118313; valaddr_reg:x16; val_offset:1888; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1888, x17, x15, 1888, x18)

inst_999:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x118314 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x118313 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f118314; op2val:0x7e118313; valaddr_reg:x16; val_offset:1896; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1896, x17, x15, 1896, x18)

inst_1000:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x118314 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x118313 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f118314; op2val:0x7e118313; valaddr_reg:x16; val_offset:1904; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1904, x17, x15, 1904, x18)

inst_1001:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x4b9c79 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x4b9c77 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e4b9c79; op2val:0x7d4b9c77; valaddr_reg:x16; val_offset:1912; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1912, x17, x15, 1912, x18)

inst_1002:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x4b9c79 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x4b9c77 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e4b9c79; op2val:0x7d4b9c77; valaddr_reg:x16; val_offset:1920; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1920, x17, x15, 1920, x18)

inst_1003:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x4b9c79 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x4b9c77 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e4b9c79; op2val:0x7d4b9c77; valaddr_reg:x16; val_offset:1928; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1928, x17, x15, 1928, x18)

inst_1004:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x4b9c79 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x4b9c77 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e4b9c79; op2val:0x7d4b9c77; valaddr_reg:x16; val_offset:1936; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1936, x17, x15, 1936, x18)

inst_1005:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x4b9c79 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x4b9c77 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e4b9c79; op2val:0x7d4b9c77; valaddr_reg:x16; val_offset:1944; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1944, x17, x15, 1944, x18)

inst_1006:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5e9861 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x5e985f and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e5e9861; op2val:0x7d5e985f; valaddr_reg:x16; val_offset:1952; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1952, x17, x15, 1952, x18)

inst_1007:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5e9861 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x5e985f and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e5e9861; op2val:0x7d5e985f; valaddr_reg:x16; val_offset:1960; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1960, x17, x15, 1960, x18)

inst_1008:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5e9861 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x5e985f and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e5e9861; op2val:0x7d5e985f; valaddr_reg:x16; val_offset:1968; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1968, x17, x15, 1968, x18)

inst_1009:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5e9861 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x5e985f and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e5e9861; op2val:0x7d5e985f; valaddr_reg:x16; val_offset:1976; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1976, x17, x15, 1976, x18)

inst_1010:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5e9861 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x5e985f and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e5e9861; op2val:0x7d5e985f; valaddr_reg:x16; val_offset:1984; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1984, x17, x15, 1984, x18)

inst_1011:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x207113 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x207112 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f207113; op2val:0x7e207112; valaddr_reg:x16; val_offset:1992; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1992, x17, x15, 1992, x18)

inst_1012:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x207113 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x207112 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f207113; op2val:0x7e207112; valaddr_reg:x16; val_offset:2000; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 2000, x17, x15, 2000, x18)

inst_1013:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x207113 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x207112 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f207113; op2val:0x7e207112; valaddr_reg:x16; val_offset:2008; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 2008, x17, x15, 2008, x18)

inst_1014:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x207113 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x207112 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f207113; op2val:0x7e207112; valaddr_reg:x16; val_offset:2016; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 2016, x17, x15, 2016, x18)

inst_1015:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x207113 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x207112 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f207113; op2val:0x7e207112; valaddr_reg:x16; val_offset:2024; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 2024, x17, x15, 2024, x18)
addi x16,x16,2032
RVTEST_SIGBASE(x15,signature_x15_5)

inst_1016:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6b8b97 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x6b8b95 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f6b8b97; op2val:0x7e6b8b95; valaddr_reg:x16; val_offset:0; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 0, x17, x15, 0, x18)

inst_1017:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6b8b97 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x6b8b95 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f6b8b97; op2val:0x7e6b8b95; valaddr_reg:x16; val_offset:8; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 8, x17, x15, 8, x18)

inst_1018:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6b8b97 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x6b8b95 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f6b8b97; op2val:0x7e6b8b95; valaddr_reg:x16; val_offset:16; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 16, x17, x15, 16, x18)

inst_1019:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6b8b97 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x6b8b95 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f6b8b97; op2val:0x7e6b8b95; valaddr_reg:x16; val_offset:24; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 24, x17, x15, 24, x18)

inst_1020:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6b8b97 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x6b8b95 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f6b8b97; op2val:0x7e6b8b95; valaddr_reg:x16; val_offset:32; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 32, x17, x15, 32, x18)

inst_1021:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1162d5 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x1162d4 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e9162d5; op2val:0x7d9162d4; valaddr_reg:x16; val_offset:40; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 40, x17, x15, 40, x18)

inst_1022:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1162d5 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x1162d4 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e9162d5; op2val:0x7d9162d4; valaddr_reg:x16; val_offset:48; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 48, x17, x15, 48, x18)

inst_1023:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1162d5 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x1162d4 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e9162d5; op2val:0x7d9162d4; valaddr_reg:x16; val_offset:56; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 56, x17, x15, 56, x18)

inst_1024:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1162d5 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x1162d4 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e9162d5; op2val:0x7d9162d4; valaddr_reg:x16; val_offset:64; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 64, x17, x15, 64, x18)

inst_1025:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1162d5 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x1162d4 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e9162d5; op2val:0x7d9162d4; valaddr_reg:x16; val_offset:72; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 72, x17, x15, 72, x18)

inst_1026:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x605197 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x605195 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f605197; op2val:0x7e605195; valaddr_reg:x16; val_offset:80; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 80, x17, x15, 80, x18)

inst_1027:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x605197 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x605195 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f605197; op2val:0x7e605195; valaddr_reg:x16; val_offset:88; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 88, x17, x15, 88, x18)

inst_1028:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x605197 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x605195 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f605197; op2val:0x7e605195; valaddr_reg:x16; val_offset:96; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 96, x17, x15, 96, x18)

inst_1029:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x605197 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x605195 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f605197; op2val:0x7e605195; valaddr_reg:x16; val_offset:104; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 104, x17, x15, 104, x18)

inst_1030:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x605197 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x605195 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f605197; op2val:0x7e605195; valaddr_reg:x16; val_offset:112; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 112, x17, x15, 112, x18)

inst_1031:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4f1540 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x4f153e and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f4f1540; op2val:0x7e4f153e; valaddr_reg:x16; val_offset:120; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 120, x17, x15, 120, x18)

inst_1032:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4f1540 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x4f153e and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f4f1540; op2val:0x7e4f153e; valaddr_reg:x16; val_offset:128; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 128, x17, x15, 128, x18)

inst_1033:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4f1540 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x4f153e and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f4f1540; op2val:0x7e4f153e; valaddr_reg:x16; val_offset:136; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 136, x17, x15, 136, x18)

inst_1034:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4f1540 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x4f153e and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f4f1540; op2val:0x7e4f153e; valaddr_reg:x16; val_offset:144; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 144, x17, x15, 144, x18)

inst_1035:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4f1540 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x4f153e and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f4f1540; op2val:0x7e4f153e; valaddr_reg:x16; val_offset:152; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 152, x17, x15, 152, x18)

inst_1036:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x53a771 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x53a770 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ed3a771; op2val:0x7dd3a770; valaddr_reg:x16; val_offset:160; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 160, x17, x15, 160, x18)

inst_1037:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x53a771 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x53a770 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ed3a771; op2val:0x7dd3a770; valaddr_reg:x16; val_offset:168; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 168, x17, x15, 168, x18)

inst_1038:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x53a771 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x53a770 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ed3a771; op2val:0x7dd3a770; valaddr_reg:x16; val_offset:176; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 176, x17, x15, 176, x18)

inst_1039:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x53a771 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x53a770 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ed3a771; op2val:0x7dd3a770; valaddr_reg:x16; val_offset:184; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 184, x17, x15, 184, x18)

inst_1040:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x53a771 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x53a770 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ed3a771; op2val:0x7dd3a770; valaddr_reg:x16; val_offset:192; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 192, x17, x15, 192, x18)

inst_1041:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2611e3 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x2611e1 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f2611e3; op2val:0x7e2611e1; valaddr_reg:x16; val_offset:200; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 200, x17, x15, 200, x18)

inst_1042:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2611e3 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x2611e1 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f2611e3; op2val:0x7e2611e1; valaddr_reg:x16; val_offset:208; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 208, x17, x15, 208, x18)

inst_1043:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2611e3 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x2611e1 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f2611e3; op2val:0x7e2611e1; valaddr_reg:x16; val_offset:216; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 216, x17, x15, 216, x18)

inst_1044:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2611e3 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x2611e1 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f2611e3; op2val:0x7e2611e1; valaddr_reg:x16; val_offset:224; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 224, x17, x15, 224, x18)

inst_1045:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2611e3 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x2611e1 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f2611e3; op2val:0x7e2611e1; valaddr_reg:x16; val_offset:232; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 232, x17, x15, 232, x18)

inst_1046:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2f216c and fs2 == 0 and fe2 == 0xfc and fm2 == 0x2f216b and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f2f216c; op2val:0x7e2f216b; valaddr_reg:x16; val_offset:240; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 240, x17, x15, 240, x18)

inst_1047:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2f216c and fs2 == 0 and fe2 == 0xfc and fm2 == 0x2f216b and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f2f216c; op2val:0x7e2f216b; valaddr_reg:x16; val_offset:248; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 248, x17, x15, 248, x18)

inst_1048:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2f216c and fs2 == 0 and fe2 == 0xfc and fm2 == 0x2f216b and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f2f216c; op2val:0x7e2f216b; valaddr_reg:x16; val_offset:256; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 256, x17, x15, 256, x18)

inst_1049:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2f216c and fs2 == 0 and fe2 == 0xfc and fm2 == 0x2f216b and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f2f216c; op2val:0x7e2f216b; valaddr_reg:x16; val_offset:264; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 264, x17, x15, 264, x18)

inst_1050:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2f216c and fs2 == 0 and fe2 == 0xfc and fm2 == 0x2f216b and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f2f216c; op2val:0x7e2f216b; valaddr_reg:x16; val_offset:272; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 272, x17, x15, 272, x18)

inst_1051:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x69f383 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x2f76a3 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f69f383; op2val:0x7eaf76a3; valaddr_reg:x16; val_offset:280; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 280, x17, x15, 280, x18)

inst_1052:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x69f383 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x2f76a3 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f69f383; op2val:0x7eaf76a3; valaddr_reg:x16; val_offset:288; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 288, x17, x15, 288, x18)

inst_1053:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x69f383 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x2f76a3 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f69f383; op2val:0x7eaf76a3; valaddr_reg:x16; val_offset:296; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 296, x17, x15, 296, x18)

inst_1054:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x69f383 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x2f76a3 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f69f383; op2val:0x7eaf76a3; valaddr_reg:x16; val_offset:304; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 304, x17, x15, 304, x18)

inst_1055:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x69f383 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x2f76a3 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f69f383; op2val:0x7eaf76a3; valaddr_reg:x16; val_offset:312; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 312, x17, x15, 312, x18)

inst_1056:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x4f519b and fs2 == 0 and fe2 == 0xf8 and fm2 == 0x1b7d35 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ccf519b; op2val:0x7c1b7d35; valaddr_reg:x16; val_offset:320; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 320, x17, x15, 320, x18)

inst_1057:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x4f519b and fs2 == 0 and fe2 == 0xf8 and fm2 == 0x1b7d35 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ccf519b; op2val:0x7c1b7d35; valaddr_reg:x16; val_offset:328; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 328, x17, x15, 328, x18)

inst_1058:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x4f519b and fs2 == 0 and fe2 == 0xf8 and fm2 == 0x1b7d35 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ccf519b; op2val:0x7c1b7d35; valaddr_reg:x16; val_offset:336; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 336, x17, x15, 336, x18)

inst_1059:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x4f519b and fs2 == 0 and fe2 == 0xf8 and fm2 == 0x1b7d35 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ccf519b; op2val:0x7c1b7d35; valaddr_reg:x16; val_offset:344; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 344, x17, x15, 344, x18)

inst_1060:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x4f519b and fs2 == 0 and fe2 == 0xf8 and fm2 == 0x1b7d35 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ccf519b; op2val:0x7c1b7d35; valaddr_reg:x16; val_offset:352; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 352, x17, x15, 352, x18)

inst_1061:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x60187e and fs2 == 0 and fe2 == 0xfd and fm2 == 0x28125f and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f60187e; op2val:0x7ea8125f; valaddr_reg:x16; val_offset:360; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 360, x17, x15, 360, x18)

inst_1062:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x60187e and fs2 == 0 and fe2 == 0xfd and fm2 == 0x28125f and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f60187e; op2val:0x7ea8125f; valaddr_reg:x16; val_offset:368; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 368, x17, x15, 368, x18)

inst_1063:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x60187e and fs2 == 0 and fe2 == 0xfd and fm2 == 0x28125f and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f60187e; op2val:0x7ea8125f; valaddr_reg:x16; val_offset:376; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 376, x17, x15, 376, x18)

inst_1064:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x60187e and fs2 == 0 and fe2 == 0xfd and fm2 == 0x28125f and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f60187e; op2val:0x7ea8125f; valaddr_reg:x16; val_offset:384; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 384, x17, x15, 384, x18)

inst_1065:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x60187e and fs2 == 0 and fe2 == 0xfd and fm2 == 0x28125f and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f60187e; op2val:0x7ea8125f; valaddr_reg:x16; val_offset:392; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 392, x17, x15, 392, x18)

inst_1066:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x71f66d and fs2 == 0 and fe2 == 0xfd and fm2 == 0x3578d2 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f71f66d; op2val:0x7eb578d2; valaddr_reg:x16; val_offset:400; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 400, x17, x15, 400, x18)

inst_1067:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x71f66d and fs2 == 0 and fe2 == 0xfd and fm2 == 0x3578d2 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f71f66d; op2val:0x7eb578d2; valaddr_reg:x16; val_offset:408; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 408, x17, x15, 408, x18)

inst_1068:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x71f66d and fs2 == 0 and fe2 == 0xfd and fm2 == 0x3578d2 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f71f66d; op2val:0x7eb578d2; valaddr_reg:x16; val_offset:416; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 416, x17, x15, 416, x18)

inst_1069:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x71f66d and fs2 == 0 and fe2 == 0xfd and fm2 == 0x3578d2 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f71f66d; op2val:0x7eb578d2; valaddr_reg:x16; val_offset:424; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 424, x17, x15, 424, x18)

inst_1070:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x71f66d and fs2 == 0 and fe2 == 0xfd and fm2 == 0x3578d2 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f71f66d; op2val:0x7eb578d2; valaddr_reg:x16; val_offset:432; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 432, x17, x15, 432, x18)

inst_1071:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x64ddcc and fs2 == 0 and fe2 == 0xfb and fm2 == 0x2ba659 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e64ddcc; op2val:0x7daba659; valaddr_reg:x16; val_offset:440; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 440, x17, x15, 440, x18)

inst_1072:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x64ddcc and fs2 == 0 and fe2 == 0xfb and fm2 == 0x2ba659 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e64ddcc; op2val:0x7daba659; valaddr_reg:x16; val_offset:448; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 448, x17, x15, 448, x18)

inst_1073:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x64ddcc and fs2 == 0 and fe2 == 0xfb and fm2 == 0x2ba659 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e64ddcc; op2val:0x7daba659; valaddr_reg:x16; val_offset:456; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 456, x17, x15, 456, x18)

inst_1074:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x64ddcc and fs2 == 0 and fe2 == 0xfb and fm2 == 0x2ba659 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e64ddcc; op2val:0x7daba659; valaddr_reg:x16; val_offset:464; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 464, x17, x15, 464, x18)

inst_1075:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x64ddcc and fs2 == 0 and fe2 == 0xfb and fm2 == 0x2ba659 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e64ddcc; op2val:0x7daba659; valaddr_reg:x16; val_offset:472; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 472, x17, x15, 472, x18)

inst_1076:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x13b751 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x5d92fb and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f13b751; op2val:0x7e5d92fb; valaddr_reg:x16; val_offset:480; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 480, x17, x15, 480, x18)

inst_1077:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x13b751 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x5d92fb and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f13b751; op2val:0x7e5d92fb; valaddr_reg:x16; val_offset:488; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 488, x17, x15, 488, x18)

inst_1078:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x13b751 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x5d92fb and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f13b751; op2val:0x7e5d92fb; valaddr_reg:x16; val_offset:496; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 496, x17, x15, 496, x18)

inst_1079:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x13b751 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x5d92fb and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f13b751; op2val:0x7e5d92fb; valaddr_reg:x16; val_offset:504; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 504, x17, x15, 504, x18)

inst_1080:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x13b751 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x5d92fb and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f13b751; op2val:0x7e5d92fb; valaddr_reg:x16; val_offset:512; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 512, x17, x15, 512, x18)

inst_1081:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3b3df0 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x0c6e74 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f3b3df0; op2val:0x7e8c6e74; valaddr_reg:x16; val_offset:520; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 520, x17, x15, 520, x18)

inst_1082:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3b3df0 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x0c6e74 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f3b3df0; op2val:0x7e8c6e74; valaddr_reg:x16; val_offset:528; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 528, x17, x15, 528, x18)

inst_1083:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3b3df0 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x0c6e74 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f3b3df0; op2val:0x7e8c6e74; valaddr_reg:x16; val_offset:536; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 536, x17, x15, 536, x18)

inst_1084:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3b3df0 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x0c6e74 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f3b3df0; op2val:0x7e8c6e74; valaddr_reg:x16; val_offset:544; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 544, x17, x15, 544, x18)

inst_1085:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3b3df0 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x0c6e74 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f3b3df0; op2val:0x7e8c6e74; valaddr_reg:x16; val_offset:552; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 552, x17, x15, 552, x18)

inst_1086:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7337aa and fs2 == 0 and fe2 == 0xfd and fm2 == 0x3669c0 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f7337aa; op2val:0x7eb669c0; valaddr_reg:x16; val_offset:560; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 560, x17, x15, 560, x18)

inst_1087:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7337aa and fs2 == 0 and fe2 == 0xfd and fm2 == 0x3669c0 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f7337aa; op2val:0x7eb669c0; valaddr_reg:x16; val_offset:568; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 568, x17, x15, 568, x18)

inst_1088:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7337aa and fs2 == 0 and fe2 == 0xfd and fm2 == 0x3669c0 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f7337aa; op2val:0x7eb669c0; valaddr_reg:x16; val_offset:576; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 576, x17, x15, 576, x18)

inst_1089:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7337aa and fs2 == 0 and fe2 == 0xfd and fm2 == 0x3669c0 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f7337aa; op2val:0x7eb669c0; valaddr_reg:x16; val_offset:584; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 584, x17, x15, 584, x18)

inst_1090:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7337aa and fs2 == 0 and fe2 == 0xfd and fm2 == 0x3669c0 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f7337aa; op2val:0x7eb669c0; valaddr_reg:x16; val_offset:592; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 592, x17, x15, 592, x18)

inst_1091:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3e2732 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x0e9d65 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ebe2732; op2val:0x7e0e9d65; valaddr_reg:x16; val_offset:600; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 600, x17, x15, 600, x18)

inst_1092:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3e2732 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x0e9d65 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ebe2732; op2val:0x7e0e9d65; valaddr_reg:x16; val_offset:608; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 608, x17, x15, 608, x18)

inst_1093:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3e2732 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x0e9d65 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ebe2732; op2val:0x7e0e9d65; valaddr_reg:x16; val_offset:616; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 616, x17, x15, 616, x18)

inst_1094:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3e2732 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x0e9d65 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ebe2732; op2val:0x7e0e9d65; valaddr_reg:x16; val_offset:624; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 624, x17, x15, 624, x18)

inst_1095:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3e2732 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x0e9d65 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ebe2732; op2val:0x7e0e9d65; valaddr_reg:x16; val_offset:632; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 632, x17, x15, 632, x18)

inst_1096:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x34bcbd and fs2 == 0 and fe2 == 0xfb and fm2 == 0x078d8e and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e34bcbd; op2val:0x7d878d8e; valaddr_reg:x16; val_offset:640; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 640, x17, x15, 640, x18)

inst_1097:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x34bcbd and fs2 == 0 and fe2 == 0xfb and fm2 == 0x078d8e and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e34bcbd; op2val:0x7d878d8e; valaddr_reg:x16; val_offset:648; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 648, x17, x15, 648, x18)

inst_1098:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x34bcbd and fs2 == 0 and fe2 == 0xfb and fm2 == 0x078d8e and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e34bcbd; op2val:0x7d878d8e; valaddr_reg:x16; val_offset:656; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 656, x17, x15, 656, x18)

inst_1099:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x34bcbd and fs2 == 0 and fe2 == 0xfb and fm2 == 0x078d8e and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e34bcbd; op2val:0x7d878d8e; valaddr_reg:x16; val_offset:664; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 664, x17, x15, 664, x18)

inst_1100:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x34bcbd and fs2 == 0 and fe2 == 0xfb and fm2 == 0x078d8e and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e34bcbd; op2val:0x7d878d8e; valaddr_reg:x16; val_offset:672; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 672, x17, x15, 672, x18)

inst_1101:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x2038e1 and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x705552 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3da038e1; op2val:0x7cf05552; valaddr_reg:x16; val_offset:680; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 680, x17, x15, 680, x18)

inst_1102:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x2038e1 and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x705552 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3da038e1; op2val:0x7cf05552; valaddr_reg:x16; val_offset:688; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 688, x17, x15, 688, x18)

inst_1103:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x2038e1 and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x705552 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3da038e1; op2val:0x7cf05552; valaddr_reg:x16; val_offset:696; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 696, x17, x15, 696, x18)

inst_1104:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x2038e1 and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x705552 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3da038e1; op2val:0x7cf05552; valaddr_reg:x16; val_offset:704; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 704, x17, x15, 704, x18)

inst_1105:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x2038e1 and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x705552 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3da038e1; op2val:0x7cf05552; valaddr_reg:x16; val_offset:712; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 712, x17, x15, 712, x18)

inst_1106:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x542588 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x1f1c27 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f542588; op2val:0x7e9f1c27; valaddr_reg:x16; val_offset:720; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 720, x17, x15, 720, x18)

inst_1107:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x542588 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x1f1c27 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f542588; op2val:0x7e9f1c27; valaddr_reg:x16; val_offset:728; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 728, x17, x15, 728, x18)

inst_1108:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x542588 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x1f1c27 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f542588; op2val:0x7e9f1c27; valaddr_reg:x16; val_offset:736; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 736, x17, x15, 736, x18)

inst_1109:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x542588 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x1f1c27 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f542588; op2val:0x7e9f1c27; valaddr_reg:x16; val_offset:744; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 744, x17, x15, 744, x18)

inst_1110:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x542588 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x1f1c27 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f542588; op2val:0x7e9f1c27; valaddr_reg:x16; val_offset:752; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 752, x17, x15, 752, x18)

inst_1111:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6e440d and fs2 == 0 and fe2 == 0xfc and fm2 == 0x32b30a and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3eee440d; op2val:0x7e32b30a; valaddr_reg:x16; val_offset:760; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 760, x17, x15, 760, x18)

inst_1112:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6e440d and fs2 == 0 and fe2 == 0xfc and fm2 == 0x32b30a and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3eee440d; op2val:0x7e32b30a; valaddr_reg:x16; val_offset:768; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 768, x17, x15, 768, x18)

inst_1113:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6e440d and fs2 == 0 and fe2 == 0xfc and fm2 == 0x32b30a and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3eee440d; op2val:0x7e32b30a; valaddr_reg:x16; val_offset:776; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 776, x17, x15, 776, x18)

inst_1114:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6e440d and fs2 == 0 and fe2 == 0xfc and fm2 == 0x32b30a and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3eee440d; op2val:0x7e32b30a; valaddr_reg:x16; val_offset:784; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 784, x17, x15, 784, x18)

inst_1115:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x6e440d and fs2 == 0 and fe2 == 0xfc and fm2 == 0x32b30a and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3eee440d; op2val:0x7e32b30a; valaddr_reg:x16; val_offset:792; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 792, x17, x15, 792, x18)

inst_1116:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x25edb4 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x78e490 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f25edb4; op2val:0x7e78e490; valaddr_reg:x16; val_offset:800; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 800, x17, x15, 800, x18)

inst_1117:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x25edb4 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x78e490 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f25edb4; op2val:0x7e78e490; valaddr_reg:x16; val_offset:808; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 808, x17, x15, 808, x18)

inst_1118:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x25edb4 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x78e490 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f25edb4; op2val:0x7e78e490; valaddr_reg:x16; val_offset:816; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 816, x17, x15, 816, x18)

inst_1119:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x25edb4 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x78e490 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f25edb4; op2val:0x7e78e490; valaddr_reg:x16; val_offset:824; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 824, x17, x15, 824, x18)

inst_1120:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x25edb4 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x78e490 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f25edb4; op2val:0x7e78e490; valaddr_reg:x16; val_offset:832; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 832, x17, x15, 832, x18)

inst_1121:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x05d662 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x48c193 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f05d662; op2val:0x7e48c193; valaddr_reg:x16; val_offset:840; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 840, x17, x15, 840, x18)

inst_1122:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x05d662 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x48c193 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f05d662; op2val:0x7e48c193; valaddr_reg:x16; val_offset:848; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 848, x17, x15, 848, x18)

inst_1123:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x05d662 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x48c193 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f05d662; op2val:0x7e48c193; valaddr_reg:x16; val_offset:856; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 856, x17, x15, 856, x18)

inst_1124:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x05d662 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x48c193 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f05d662; op2val:0x7e48c193; valaddr_reg:x16; val_offset:864; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 864, x17, x15, 864, x18)

inst_1125:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x05d662 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x48c193 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f05d662; op2val:0x7e48c193; valaddr_reg:x16; val_offset:872; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 872, x17, x15, 872, x18)

inst_1126:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3f5dcf and fs2 == 0 and fe2 == 0xfd and fm2 == 0x0f865b and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f3f5dcf; op2val:0x7e8f865b; valaddr_reg:x16; val_offset:880; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 880, x17, x15, 880, x18)

inst_1127:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3f5dcf and fs2 == 0 and fe2 == 0xfd and fm2 == 0x0f865b and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f3f5dcf; op2val:0x7e8f865b; valaddr_reg:x16; val_offset:888; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 888, x17, x15, 888, x18)

inst_1128:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3f5dcf and fs2 == 0 and fe2 == 0xfd and fm2 == 0x0f865b and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f3f5dcf; op2val:0x7e8f865b; valaddr_reg:x16; val_offset:896; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 896, x17, x15, 896, x18)

inst_1129:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3f5dcf and fs2 == 0 and fe2 == 0xfd and fm2 == 0x0f865b and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f3f5dcf; op2val:0x7e8f865b; valaddr_reg:x16; val_offset:904; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 904, x17, x15, 904, x18)

inst_1130:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3f5dcf and fs2 == 0 and fe2 == 0xfd and fm2 == 0x0f865b and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f3f5dcf; op2val:0x7e8f865b; valaddr_reg:x16; val_offset:912; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 912, x17, x15, 912, x18)

inst_1131:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x469273 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x14edd6 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ec69273; op2val:0x7e14edd6; valaddr_reg:x16; val_offset:920; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 920, x17, x15, 920, x18)

inst_1132:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x469273 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x14edd6 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ec69273; op2val:0x7e14edd6; valaddr_reg:x16; val_offset:928; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 928, x17, x15, 928, x18)

inst_1133:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x469273 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x14edd6 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ec69273; op2val:0x7e14edd6; valaddr_reg:x16; val_offset:936; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 936, x17, x15, 936, x18)

inst_1134:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x469273 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x14edd6 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ec69273; op2val:0x7e14edd6; valaddr_reg:x16; val_offset:944; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 944, x17, x15, 944, x18)

inst_1135:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x469273 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x14edd6 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ec69273; op2val:0x7e14edd6; valaddr_reg:x16; val_offset:952; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 952, x17, x15, 952, x18)

inst_1136:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x161473 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x611ead and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f161473; op2val:0x7e611ead; valaddr_reg:x16; val_offset:960; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 960, x17, x15, 960, x18)

inst_1137:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x161473 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x611ead and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f161473; op2val:0x7e611ead; valaddr_reg:x16; val_offset:968; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 968, x17, x15, 968, x18)

inst_1138:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x161473 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x611ead and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f161473; op2val:0x7e611ead; valaddr_reg:x16; val_offset:976; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 976, x17, x15, 976, x18)

inst_1139:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x161473 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x611ead and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f161473; op2val:0x7e611ead; valaddr_reg:x16; val_offset:984; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 984, x17, x15, 984, x18)

inst_1140:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x161473 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x611ead and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f161473; op2val:0x7e611ead; valaddr_reg:x16; val_offset:992; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 992, x17, x15, 992, x18)

inst_1141:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2c98e1 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x0172a9 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3eac98e1; op2val:0x7e0172a9; valaddr_reg:x16; val_offset:1000; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1000, x17, x15, 1000, x18)

inst_1142:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2c98e1 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x0172a9 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3eac98e1; op2val:0x7e0172a9; valaddr_reg:x16; val_offset:1008; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1008, x17, x15, 1008, x18)

inst_1143:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2c98e1 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x0172a9 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3eac98e1; op2val:0x7e0172a9; valaddr_reg:x16; val_offset:1016; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1016, x17, x15, 1016, x18)

inst_1144:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2c98e1 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x0172a9 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3eac98e1; op2val:0x7e0172a9; valaddr_reg:x16; val_offset:1024; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1024, x17, x15, 1024, x18)

inst_1145:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2c98e1 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x0172a9 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3eac98e1; op2val:0x7e0172a9; valaddr_reg:x16; val_offset:1032; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1032, x17, x15, 1032, x18)

inst_1146:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x540380 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x1f02a0 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f540380; op2val:0x7e9f02a0; valaddr_reg:x16; val_offset:1040; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1040, x17, x15, 1040, x18)

inst_1147:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x540380 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x1f02a0 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f540380; op2val:0x7e9f02a0; valaddr_reg:x16; val_offset:1048; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1048, x17, x15, 1048, x18)

inst_1148:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x540380 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x1f02a0 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f540380; op2val:0x7e9f02a0; valaddr_reg:x16; val_offset:1056; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1056, x17, x15, 1056, x18)

inst_1149:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x540380 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x1f02a0 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f540380; op2val:0x7e9f02a0; valaddr_reg:x16; val_offset:1064; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1064, x17, x15, 1064, x18)

inst_1150:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x540380 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x1f02a0 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f540380; op2val:0x7e9f02a0; valaddr_reg:x16; val_offset:1072; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1072, x17, x15, 1072, x18)

inst_1151:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7ca28f and fs2 == 0 and fe2 == 0xfd and fm2 == 0x3d79ec and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f7ca28f; op2val:0x7ebd79ec; valaddr_reg:x16; val_offset:1080; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1080, x17, x15, 1080, x18)

inst_1152:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7ca28f and fs2 == 0 and fe2 == 0xfd and fm2 == 0x3d79ec and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f7ca28f; op2val:0x7ebd79ec; valaddr_reg:x16; val_offset:1088; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1088, x17, x15, 1088, x18)

inst_1153:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7ca28f and fs2 == 0 and fe2 == 0xfd and fm2 == 0x3d79ec and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f7ca28f; op2val:0x7ebd79ec; valaddr_reg:x16; val_offset:1096; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1096, x17, x15, 1096, x18)

inst_1154:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7ca28f and fs2 == 0 and fe2 == 0xfd and fm2 == 0x3d79ec and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f7ca28f; op2val:0x7ebd79ec; valaddr_reg:x16; val_offset:1104; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1104, x17, x15, 1104, x18)

inst_1155:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7ca28f and fs2 == 0 and fe2 == 0xfd and fm2 == 0x3d79ec and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f7ca28f; op2val:0x7ebd79ec; valaddr_reg:x16; val_offset:1112; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1112, x17, x15, 1112, x18)

inst_1156:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x4d7747 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x1a1976 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3dcd7747; op2val:0x7d1a1976; valaddr_reg:x16; val_offset:1120; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1120, x17, x15, 1120, x18)

inst_1157:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x4d7747 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x1a1976 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3dcd7747; op2val:0x7d1a1976; valaddr_reg:x16; val_offset:1128; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1128, x17, x15, 1128, x18)

inst_1158:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x4d7747 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x1a1976 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3dcd7747; op2val:0x7d1a1976; valaddr_reg:x16; val_offset:1136; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1136, x17, x15, 1136, x18)

inst_1159:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x4d7747 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x1a1976 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3dcd7747; op2val:0x7d1a1976; valaddr_reg:x16; val_offset:1144; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1144, x17, x15, 1144, x18)

inst_1160:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x4d7747 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x1a1976 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3dcd7747; op2val:0x7d1a1976; valaddr_reg:x16; val_offset:1152; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1152, x17, x15, 1152, x18)

inst_1161:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x1bf203 and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x69eb06 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3d9bf203; op2val:0x7ce9eb06; valaddr_reg:x16; val_offset:1160; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1160, x17, x15, 1160, x18)

inst_1162:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x1bf203 and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x69eb06 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3d9bf203; op2val:0x7ce9eb06; valaddr_reg:x16; val_offset:1168; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1168, x17, x15, 1168, x18)

inst_1163:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x1bf203 and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x69eb06 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3d9bf203; op2val:0x7ce9eb06; valaddr_reg:x16; val_offset:1176; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1176, x17, x15, 1176, x18)

inst_1164:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x1bf203 and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x69eb06 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3d9bf203; op2val:0x7ce9eb06; valaddr_reg:x16; val_offset:1184; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1184, x17, x15, 1184, x18)

inst_1165:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x1bf203 and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x69eb06 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3d9bf203; op2val:0x7ce9eb06; valaddr_reg:x16; val_offset:1192; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1192, x17, x15, 1192, x18)

inst_1166:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x45687f and fs2 == 0 and fe2 == 0xfa and fm2 == 0x140e5f and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3dc5687f; op2val:0x7d140e5f; valaddr_reg:x16; val_offset:1200; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1200, x17, x15, 1200, x18)

inst_1167:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x45687f and fs2 == 0 and fe2 == 0xfa and fm2 == 0x140e5f and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3dc5687f; op2val:0x7d140e5f; valaddr_reg:x16; val_offset:1208; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1208, x17, x15, 1208, x18)

inst_1168:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x45687f and fs2 == 0 and fe2 == 0xfa and fm2 == 0x140e5f and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3dc5687f; op2val:0x7d140e5f; valaddr_reg:x16; val_offset:1216; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1216, x17, x15, 1216, x18)

inst_1169:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x45687f and fs2 == 0 and fe2 == 0xfa and fm2 == 0x140e5f and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3dc5687f; op2val:0x7d140e5f; valaddr_reg:x16; val_offset:1224; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1224, x17, x15, 1224, x18)

inst_1170:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x45687f and fs2 == 0 and fe2 == 0xfa and fm2 == 0x140e5f and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3dc5687f; op2val:0x7d140e5f; valaddr_reg:x16; val_offset:1232; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1232, x17, x15, 1232, x18)

inst_1171:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x425d0f and fs2 == 0 and fe2 == 0xfb and fm2 == 0x11c5cb and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e425d0f; op2val:0x7d91c5cb; valaddr_reg:x16; val_offset:1240; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1240, x17, x15, 1240, x18)

inst_1172:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x425d0f and fs2 == 0 and fe2 == 0xfb and fm2 == 0x11c5cb and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e425d0f; op2val:0x7d91c5cb; valaddr_reg:x16; val_offset:1248; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1248, x17, x15, 1248, x18)

inst_1173:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x425d0f and fs2 == 0 and fe2 == 0xfb and fm2 == 0x11c5cb and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e425d0f; op2val:0x7d91c5cb; valaddr_reg:x16; val_offset:1256; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1256, x17, x15, 1256, x18)

inst_1174:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x425d0f and fs2 == 0 and fe2 == 0xfb and fm2 == 0x11c5cb and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e425d0f; op2val:0x7d91c5cb; valaddr_reg:x16; val_offset:1264; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1264, x17, x15, 1264, x18)

inst_1175:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x425d0f and fs2 == 0 and fe2 == 0xfb and fm2 == 0x11c5cb and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e425d0f; op2val:0x7d91c5cb; valaddr_reg:x16; val_offset:1272; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1272, x17, x15, 1272, x18)

inst_1176:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5298d5 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x1df2a0 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ed298d5; op2val:0x7e1df2a0; valaddr_reg:x16; val_offset:1280; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1280, x17, x15, 1280, x18)

inst_1177:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5298d5 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x1df2a0 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ed298d5; op2val:0x7e1df2a0; valaddr_reg:x16; val_offset:1288; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1288, x17, x15, 1288, x18)

inst_1178:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5298d5 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x1df2a0 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ed298d5; op2val:0x7e1df2a0; valaddr_reg:x16; val_offset:1296; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1296, x17, x15, 1296, x18)

inst_1179:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5298d5 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x1df2a0 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ed298d5; op2val:0x7e1df2a0; valaddr_reg:x16; val_offset:1304; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1304, x17, x15, 1304, x18)

inst_1180:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5298d5 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x1df2a0 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ed298d5; op2val:0x7e1df2a0; valaddr_reg:x16; val_offset:1312; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1312, x17, x15, 1312, x18)

inst_1181:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x45c4c4 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x145393 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f45c4c4; op2val:0x7e945393; valaddr_reg:x16; val_offset:1320; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1320, x17, x15, 1320, x18)

inst_1182:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x45c4c4 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x145393 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f45c4c4; op2val:0x7e945393; valaddr_reg:x16; val_offset:1328; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1328, x17, x15, 1328, x18)

inst_1183:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x45c4c4 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x145393 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f45c4c4; op2val:0x7e945393; valaddr_reg:x16; val_offset:1336; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1336, x17, x15, 1336, x18)

inst_1184:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x45c4c4 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x145393 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f45c4c4; op2val:0x7e945393; valaddr_reg:x16; val_offset:1344; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1344, x17, x15, 1344, x18)

inst_1185:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x45c4c4 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x145393 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f45c4c4; op2val:0x7e945393; valaddr_reg:x16; val_offset:1352; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1352, x17, x15, 1352, x18)

inst_1186:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x36015a and fs2 == 0 and fe2 == 0xfd and fm2 == 0x088104 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f36015a; op2val:0x7e888104; valaddr_reg:x16; val_offset:1360; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1360, x17, x15, 1360, x18)

inst_1187:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x36015a and fs2 == 0 and fe2 == 0xfd and fm2 == 0x088104 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f36015a; op2val:0x7e888104; valaddr_reg:x16; val_offset:1368; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1368, x17, x15, 1368, x18)

inst_1188:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x36015a and fs2 == 0 and fe2 == 0xfd and fm2 == 0x088104 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f36015a; op2val:0x7e888104; valaddr_reg:x16; val_offset:1376; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1376, x17, x15, 1376, x18)

inst_1189:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x36015a and fs2 == 0 and fe2 == 0xfd and fm2 == 0x088104 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f36015a; op2val:0x7e888104; valaddr_reg:x16; val_offset:1384; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1384, x17, x15, 1384, x18)

inst_1190:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x36015a and fs2 == 0 and fe2 == 0xfd and fm2 == 0x088104 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f36015a; op2val:0x7e888104; valaddr_reg:x16; val_offset:1392; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1392, x17, x15, 1392, x18)

inst_1191:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2c8cf1 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x0169b4 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3eac8cf1; op2val:0x7e0169b4; valaddr_reg:x16; val_offset:1400; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1400, x17, x15, 1400, x18)

inst_1192:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2c8cf1 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x0169b4 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3eac8cf1; op2val:0x7e0169b4; valaddr_reg:x16; val_offset:1408; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1408, x17, x15, 1408, x18)

inst_1193:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2c8cf1 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x0169b4 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3eac8cf1; op2val:0x7e0169b4; valaddr_reg:x16; val_offset:1416; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1416, x17, x15, 1416, x18)

inst_1194:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2c8cf1 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x0169b4 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3eac8cf1; op2val:0x7e0169b4; valaddr_reg:x16; val_offset:1424; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1424, x17, x15, 1424, x18)

inst_1195:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x2c8cf1 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x0169b4 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3eac8cf1; op2val:0x7e0169b4; valaddr_reg:x16; val_offset:1432; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1432, x17, x15, 1432, x18)

inst_1196:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x024ace and fs2 == 0 and fe2 == 0xfb and fm2 == 0x437036 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e824ace; op2val:0x7dc37036; valaddr_reg:x16; val_offset:1440; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1440, x17, x15, 1440, x18)

inst_1197:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x024ace and fs2 == 0 and fe2 == 0xfb and fm2 == 0x437036 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e824ace; op2val:0x7dc37036; valaddr_reg:x16; val_offset:1448; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1448, x17, x15, 1448, x18)

inst_1198:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x024ace and fs2 == 0 and fe2 == 0xfb and fm2 == 0x437036 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e824ace; op2val:0x7dc37036; valaddr_reg:x16; val_offset:1456; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1456, x17, x15, 1456, x18)

inst_1199:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x024ace and fs2 == 0 and fe2 == 0xfb and fm2 == 0x437036 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e824ace; op2val:0x7dc37036; valaddr_reg:x16; val_offset:1464; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1464, x17, x15, 1464, x18)

inst_1200:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x024ace and fs2 == 0 and fe2 == 0xfb and fm2 == 0x437036 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e824ace; op2val:0x7dc37036; valaddr_reg:x16; val_offset:1472; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1472, x17, x15, 1472, x18)

inst_1201:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x14bb41 and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x5f18e2 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3d94bb41; op2val:0x7cdf18e2; valaddr_reg:x16; val_offset:1480; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1480, x17, x15, 1480, x18)

inst_1202:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x14bb41 and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x5f18e2 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3d94bb41; op2val:0x7cdf18e2; valaddr_reg:x16; val_offset:1488; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1488, x17, x15, 1488, x18)

inst_1203:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x14bb41 and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x5f18e2 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3d94bb41; op2val:0x7cdf18e2; valaddr_reg:x16; val_offset:1496; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1496, x17, x15, 1496, x18)

inst_1204:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x14bb41 and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x5f18e2 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3d94bb41; op2val:0x7cdf18e2; valaddr_reg:x16; val_offset:1504; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1504, x17, x15, 1504, x18)

inst_1205:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x14bb41 and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x5f18e2 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3d94bb41; op2val:0x7cdf18e2; valaddr_reg:x16; val_offset:1512; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1512, x17, x15, 1512, x18)

inst_1206:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x10ce49 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x59356e and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f10ce49; op2val:0x7e59356e; valaddr_reg:x16; val_offset:1520; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1520, x17, x15, 1520, x18)

inst_1207:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x10ce49 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x59356e and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f10ce49; op2val:0x7e59356e; valaddr_reg:x16; val_offset:1528; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1528, x17, x15, 1528, x18)

inst_1208:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x10ce49 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x59356e and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f10ce49; op2val:0x7e59356e; valaddr_reg:x16; val_offset:1536; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1536, x17, x15, 1536, x18)

inst_1209:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x10ce49 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x59356e and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f10ce49; op2val:0x7e59356e; valaddr_reg:x16; val_offset:1544; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1544, x17, x15, 1544, x18)

inst_1210:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x10ce49 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x59356e and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f10ce49; op2val:0x7e59356e; valaddr_reg:x16; val_offset:1552; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1552, x17, x15, 1552, x18)

inst_1211:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x75cdf6 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x385a79 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3df5cdf6; op2val:0x7d385a79; valaddr_reg:x16; val_offset:1560; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1560, x17, x15, 1560, x18)

inst_1212:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x75cdf6 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x385a79 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3df5cdf6; op2val:0x7d385a79; valaddr_reg:x16; val_offset:1568; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1568, x17, x15, 1568, x18)

inst_1213:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x75cdf6 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x385a79 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3df5cdf6; op2val:0x7d385a79; valaddr_reg:x16; val_offset:1576; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1576, x17, x15, 1576, x18)

inst_1214:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x75cdf6 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x385a79 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3df5cdf6; op2val:0x7d385a79; valaddr_reg:x16; val_offset:1584; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1584, x17, x15, 1584, x18)

inst_1215:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x75cdf6 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x385a79 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3df5cdf6; op2val:0x7d385a79; valaddr_reg:x16; val_offset:1592; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1592, x17, x15, 1592, x18)

inst_1216:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7ece7c and fs2 == 0 and fe2 == 0xfd and fm2 == 0x3f1add and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f7ece7c; op2val:0x7ebf1add; valaddr_reg:x16; val_offset:1600; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1600, x17, x15, 1600, x18)

inst_1217:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7ece7c and fs2 == 0 and fe2 == 0xfd and fm2 == 0x3f1add and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f7ece7c; op2val:0x7ebf1add; valaddr_reg:x16; val_offset:1608; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1608, x17, x15, 1608, x18)

inst_1218:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7ece7c and fs2 == 0 and fe2 == 0xfd and fm2 == 0x3f1add and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f7ece7c; op2val:0x7ebf1add; valaddr_reg:x16; val_offset:1616; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1616, x17, x15, 1616, x18)

inst_1219:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7ece7c and fs2 == 0 and fe2 == 0xfd and fm2 == 0x3f1add and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f7ece7c; op2val:0x7ebf1add; valaddr_reg:x16; val_offset:1624; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1624, x17, x15, 1624, x18)

inst_1220:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7ece7c and fs2 == 0 and fe2 == 0xfd and fm2 == 0x3f1add and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f7ece7c; op2val:0x7ebf1add; valaddr_reg:x16; val_offset:1632; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1632, x17, x15, 1632, x18)

inst_1221:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x2295f9 and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x73e0f6 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3da295f9; op2val:0x7cf3e0f6; valaddr_reg:x16; val_offset:1640; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1640, x17, x15, 1640, x18)

inst_1222:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x2295f9 and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x73e0f6 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3da295f9; op2val:0x7cf3e0f6; valaddr_reg:x16; val_offset:1648; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1648, x17, x15, 1648, x18)

inst_1223:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x2295f9 and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x73e0f6 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3da295f9; op2val:0x7cf3e0f6; valaddr_reg:x16; val_offset:1656; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1656, x17, x15, 1656, x18)

inst_1224:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x2295f9 and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x73e0f6 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3da295f9; op2val:0x7cf3e0f6; valaddr_reg:x16; val_offset:1664; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1664, x17, x15, 1664, x18)

inst_1225:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x2295f9 and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x73e0f6 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3da295f9; op2val:0x7cf3e0f6; valaddr_reg:x16; val_offset:1672; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1672, x17, x15, 1672, x18)

inst_1226:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1489e0 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x5eced0 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f1489e0; op2val:0x7e5eced0; valaddr_reg:x16; val_offset:1680; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1680, x17, x15, 1680, x18)

inst_1227:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1489e0 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x5eced0 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f1489e0; op2val:0x7e5eced0; valaddr_reg:x16; val_offset:1688; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1688, x17, x15, 1688, x18)

inst_1228:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1489e0 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x5eced0 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f1489e0; op2val:0x7e5eced0; valaddr_reg:x16; val_offset:1696; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1696, x17, x15, 1696, x18)

inst_1229:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1489e0 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x5eced0 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f1489e0; op2val:0x7e5eced0; valaddr_reg:x16; val_offset:1704; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1704, x17, x15, 1704, x18)

inst_1230:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1489e0 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x5eced0 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f1489e0; op2val:0x7e5eced0; valaddr_reg:x16; val_offset:1712; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1712, x17, x15, 1712, x18)

inst_1231:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x275553 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x7afffd and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f275553; op2val:0x7e7afffd; valaddr_reg:x16; val_offset:1720; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1720, x17, x15, 1720, x18)

inst_1232:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x275553 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x7afffd and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f275553; op2val:0x7e7afffd; valaddr_reg:x16; val_offset:1728; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1728, x17, x15, 1728, x18)

inst_1233:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x275553 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x7afffd and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f275553; op2val:0x7e7afffd; valaddr_reg:x16; val_offset:1736; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1736, x17, x15, 1736, x18)

inst_1234:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x275553 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x7afffd and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f275553; op2val:0x7e7afffd; valaddr_reg:x16; val_offset:1744; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1744, x17, x15, 1744, x18)

inst_1235:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x275553 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x7afffd and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f275553; op2val:0x7e7afffd; valaddr_reg:x16; val_offset:1752; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1752, x17, x15, 1752, x18)

inst_1236:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5315dc and fs2 == 0 and fe2 == 0xfb and fm2 == 0x1e5065 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e5315dc; op2val:0x7d9e5065; valaddr_reg:x16; val_offset:1760; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1760, x17, x15, 1760, x18)

inst_1237:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5315dc and fs2 == 0 and fe2 == 0xfb and fm2 == 0x1e5065 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e5315dc; op2val:0x7d9e5065; valaddr_reg:x16; val_offset:1768; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1768, x17, x15, 1768, x18)

inst_1238:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5315dc and fs2 == 0 and fe2 == 0xfb and fm2 == 0x1e5065 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e5315dc; op2val:0x7d9e5065; valaddr_reg:x16; val_offset:1776; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1776, x17, x15, 1776, x18)

inst_1239:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5315dc and fs2 == 0 and fe2 == 0xfb and fm2 == 0x1e5065 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e5315dc; op2val:0x7d9e5065; valaddr_reg:x16; val_offset:1784; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1784, x17, x15, 1784, x18)

inst_1240:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x5315dc and fs2 == 0 and fe2 == 0xfb and fm2 == 0x1e5065 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e5315dc; op2val:0x7d9e5065; valaddr_reg:x16; val_offset:1792; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1792, x17, x15, 1792, x18)

inst_1241:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5eccb1 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x271985 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f5eccb1; op2val:0x7ea71985; valaddr_reg:x16; val_offset:1800; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1800, x17, x15, 1800, x18)

inst_1242:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5eccb1 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x271985 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f5eccb1; op2val:0x7ea71985; valaddr_reg:x16; val_offset:1808; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1808, x17, x15, 1808, x18)

inst_1243:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5eccb1 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x271985 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f5eccb1; op2val:0x7ea71985; valaddr_reg:x16; val_offset:1816; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1816, x17, x15, 1816, x18)

inst_1244:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5eccb1 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x271985 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f5eccb1; op2val:0x7ea71985; valaddr_reg:x16; val_offset:1824; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1824, x17, x15, 1824, x18)

inst_1245:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5eccb1 and fs2 == 0 and fe2 == 0xfd and fm2 == 0x271985 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f5eccb1; op2val:0x7ea71985; valaddr_reg:x16; val_offset:1832; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1832, x17, x15, 1832, x18)

inst_1246:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x466458 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x14cb42 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e466458; op2val:0x7d94cb42; valaddr_reg:x16; val_offset:1840; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1840, x17, x15, 1840, x18)

inst_1247:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x466458 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x14cb42 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e466458; op2val:0x7d94cb42; valaddr_reg:x16; val_offset:1848; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1848, x17, x15, 1848, x18)

inst_1248:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x466458 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x14cb42 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e466458; op2val:0x7d94cb42; valaddr_reg:x16; val_offset:1856; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1856, x17, x15, 1856, x18)

inst_1249:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x466458 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x14cb42 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e466458; op2val:0x7d94cb42; valaddr_reg:x16; val_offset:1864; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1864, x17, x15, 1864, x18)

inst_1250:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x466458 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x14cb42 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e466458; op2val:0x7d94cb42; valaddr_reg:x16; val_offset:1872; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1872, x17, x15, 1872, x18)

inst_1251:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x456670 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x140cd4 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e456670; op2val:0x7d940cd4; valaddr_reg:x16; val_offset:1880; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1880, x17, x15, 1880, x18)

inst_1252:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x456670 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x140cd4 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e456670; op2val:0x7d940cd4; valaddr_reg:x16; val_offset:1888; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1888, x17, x15, 1888, x18)

inst_1253:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x456670 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x140cd4 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e456670; op2val:0x7d940cd4; valaddr_reg:x16; val_offset:1896; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1896, x17, x15, 1896, x18)

inst_1254:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x456670 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x140cd4 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e456670; op2val:0x7d940cd4; valaddr_reg:x16; val_offset:1904; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1904, x17, x15, 1904, x18)

inst_1255:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x456670 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x140cd4 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e456670; op2val:0x7d940cd4; valaddr_reg:x16; val_offset:1912; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1912, x17, x15, 1912, x18)

inst_1256:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x51007c and fs2 == 0 and fe2 == 0xfd and fm2 == 0x1cc05e and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f51007c; op2val:0x7e9cc05e; valaddr_reg:x16; val_offset:1920; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1920, x17, x15, 1920, x18)

inst_1257:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x51007c and fs2 == 0 and fe2 == 0xfd and fm2 == 0x1cc05e and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f51007c; op2val:0x7e9cc05e; valaddr_reg:x16; val_offset:1928; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1928, x17, x15, 1928, x18)

inst_1258:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x51007c and fs2 == 0 and fe2 == 0xfd and fm2 == 0x1cc05e and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f51007c; op2val:0x7e9cc05e; valaddr_reg:x16; val_offset:1936; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1936, x17, x15, 1936, x18)

inst_1259:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x51007c and fs2 == 0 and fe2 == 0xfd and fm2 == 0x1cc05e and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f51007c; op2val:0x7e9cc05e; valaddr_reg:x16; val_offset:1944; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1944, x17, x15, 1944, x18)

inst_1260:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x51007c and fs2 == 0 and fe2 == 0xfd and fm2 == 0x1cc05e and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f51007c; op2val:0x7e9cc05e; valaddr_reg:x16; val_offset:1952; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1952, x17, x15, 1952, x18)

inst_1261:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x45dc30 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x45dc32 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e45dc30; op2val:0x7d45dc32; valaddr_reg:x16; val_offset:1960; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1960, x17, x15, 1960, x18)

inst_1262:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x45dc30 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x45dc32 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e45dc30; op2val:0x7d45dc32; valaddr_reg:x16; val_offset:1968; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1968, x17, x15, 1968, x18)

inst_1263:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x45dc30 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x45dc32 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e45dc30; op2val:0x7d45dc32; valaddr_reg:x16; val_offset:1976; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1976, x17, x15, 1976, x18)

inst_1264:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x45dc30 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x45dc32 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e45dc30; op2val:0x7d45dc32; valaddr_reg:x16; val_offset:1984; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1984, x17, x15, 1984, x18)

inst_1265:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x45dc30 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x45dc32 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e45dc30; op2val:0x7d45dc32; valaddr_reg:x16; val_offset:1992; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1992, x17, x15, 1992, x18)

inst_1266:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x70d4a5 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x70d4a9 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ef0d4a5; op2val:0x7df0d4a9; valaddr_reg:x16; val_offset:2000; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 2000, x17, x15, 2000, x18)

inst_1267:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x70d4a5 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x70d4a9 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ef0d4a5; op2val:0x7df0d4a9; valaddr_reg:x16; val_offset:2008; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 2008, x17, x15, 2008, x18)

inst_1268:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x70d4a5 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x70d4a9 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ef0d4a5; op2val:0x7df0d4a9; valaddr_reg:x16; val_offset:2016; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 2016, x17, x15, 2016, x18)

inst_1269:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x70d4a5 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x70d4a9 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ef0d4a5; op2val:0x7df0d4a9; valaddr_reg:x16; val_offset:2024; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 2024, x17, x15, 2024, x18)
addi x16,x16,2032
RVTEST_SIGBASE(x15,signature_x15_6)

inst_1270:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x70d4a5 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x70d4a9 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ef0d4a5; op2val:0x7df0d4a9; valaddr_reg:x16; val_offset:0; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_1271:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x466493 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x466496 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f466493; op2val:0x7e466496; valaddr_reg:x16; val_offset:8; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 8, x17, x15, 8, x18)

inst_1272:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x466493 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x466496 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f466493; op2val:0x7e466496; valaddr_reg:x16; val_offset:16; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 16, x17, x15, 16, x18)

inst_1273:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x466493 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x466496 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f466493; op2val:0x7e466496; valaddr_reg:x16; val_offset:24; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 24, x17, x15, 24, x18)

inst_1274:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x466493 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x466496 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f466493; op2val:0x7e466496; valaddr_reg:x16; val_offset:32; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 32, x17, x15, 32, x18)

inst_1275:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x466493 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x466496 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f466493; op2val:0x7e466496; valaddr_reg:x16; val_offset:40; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 40, x17, x15, 40, x18)

inst_1276:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x6bba74 and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x6bba77 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3debba74; op2val:0x7cebba77; valaddr_reg:x16; val_offset:48; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 48, x17, x15, 48, x18)

inst_1277:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x6bba74 and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x6bba77 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3debba74; op2val:0x7cebba77; valaddr_reg:x16; val_offset:56; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 56, x17, x15, 56, x18)

inst_1278:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x6bba74 and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x6bba77 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3debba74; op2val:0x7cebba77; valaddr_reg:x16; val_offset:64; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 64, x17, x15, 64, x18)

inst_1279:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x6bba74 and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x6bba77 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3debba74; op2val:0x7cebba77; valaddr_reg:x16; val_offset:72; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 72, x17, x15, 72, x18)

inst_1280:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x6bba74 and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x6bba77 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3debba74; op2val:0x7cebba77; valaddr_reg:x16; val_offset:80; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 80, x17, x15, 80, x18)

inst_1281:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x29cd5b and fs2 == 0 and fe2 == 0xfc and fm2 == 0x29cd5e and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f29cd5b; op2val:0x7e29cd5e; valaddr_reg:x16; val_offset:88; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 88, x17, x15, 88, x18)

inst_1282:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x29cd5b and fs2 == 0 and fe2 == 0xfc and fm2 == 0x29cd5e and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f29cd5b; op2val:0x7e29cd5e; valaddr_reg:x16; val_offset:96; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 96, x17, x15, 96, x18)

inst_1283:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x29cd5b and fs2 == 0 and fe2 == 0xfc and fm2 == 0x29cd5e and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f29cd5b; op2val:0x7e29cd5e; valaddr_reg:x16; val_offset:104; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 104, x17, x15, 104, x18)

inst_1284:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x29cd5b and fs2 == 0 and fe2 == 0xfc and fm2 == 0x29cd5e and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f29cd5b; op2val:0x7e29cd5e; valaddr_reg:x16; val_offset:112; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 112, x17, x15, 112, x18)

inst_1285:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x29cd5b and fs2 == 0 and fe2 == 0xfc and fm2 == 0x29cd5e and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f29cd5b; op2val:0x7e29cd5e; valaddr_reg:x16; val_offset:120; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 120, x17, x15, 120, x18)

inst_1286:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x13ee95 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x13ee97 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e13ee95; op2val:0x7d13ee97; valaddr_reg:x16; val_offset:128; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 128, x17, x15, 128, x18)

inst_1287:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x13ee95 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x13ee97 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e13ee95; op2val:0x7d13ee97; valaddr_reg:x16; val_offset:136; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 136, x17, x15, 136, x18)

inst_1288:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x13ee95 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x13ee97 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e13ee95; op2val:0x7d13ee97; valaddr_reg:x16; val_offset:144; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 144, x17, x15, 144, x18)

inst_1289:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x13ee95 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x13ee97 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e13ee95; op2val:0x7d13ee97; valaddr_reg:x16; val_offset:152; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 152, x17, x15, 152, x18)

inst_1290:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x13ee95 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x13ee97 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e13ee95; op2val:0x7d13ee97; valaddr_reg:x16; val_offset:160; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 160, x17, x15, 160, x18)

inst_1291:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2a74c7 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x2a74ca and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e2a74c7; op2val:0x7d2a74ca; valaddr_reg:x16; val_offset:168; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 168, x17, x15, 168, x18)

inst_1292:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2a74c7 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x2a74ca and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e2a74c7; op2val:0x7d2a74ca; valaddr_reg:x16; val_offset:176; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 176, x17, x15, 176, x18)

inst_1293:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2a74c7 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x2a74ca and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e2a74c7; op2val:0x7d2a74ca; valaddr_reg:x16; val_offset:184; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 184, x17, x15, 184, x18)

inst_1294:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2a74c7 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x2a74ca and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e2a74c7; op2val:0x7d2a74ca; valaddr_reg:x16; val_offset:192; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 192, x17, x15, 192, x18)

inst_1295:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2a74c7 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x2a74ca and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e2a74c7; op2val:0x7d2a74ca; valaddr_reg:x16; val_offset:200; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 200, x17, x15, 200, x18)

inst_1296:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2d93a3 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x2d93a5 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f2d93a3; op2val:0x7e2d93a5; valaddr_reg:x16; val_offset:208; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 208, x17, x15, 208, x18)

inst_1297:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2d93a3 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x2d93a5 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f2d93a3; op2val:0x7e2d93a5; valaddr_reg:x16; val_offset:216; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 216, x17, x15, 216, x18)

inst_1298:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2d93a3 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x2d93a5 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f2d93a3; op2val:0x7e2d93a5; valaddr_reg:x16; val_offset:224; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 224, x17, x15, 224, x18)

inst_1299:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2d93a3 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x2d93a5 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f2d93a3; op2val:0x7e2d93a5; valaddr_reg:x16; val_offset:232; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 232, x17, x15, 232, x18)

inst_1300:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2d93a3 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x2d93a5 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f2d93a3; op2val:0x7e2d93a5; valaddr_reg:x16; val_offset:240; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 240, x17, x15, 240, x18)

inst_1301:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1a970a and fs2 == 0 and fe2 == 0xfb and fm2 == 0x1a970c and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e9a970a; op2val:0x7d9a970c; valaddr_reg:x16; val_offset:248; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 248, x17, x15, 248, x18)

inst_1302:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1a970a and fs2 == 0 and fe2 == 0xfb and fm2 == 0x1a970c and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e9a970a; op2val:0x7d9a970c; valaddr_reg:x16; val_offset:256; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 256, x17, x15, 256, x18)

inst_1303:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1a970a and fs2 == 0 and fe2 == 0xfb and fm2 == 0x1a970c and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e9a970a; op2val:0x7d9a970c; valaddr_reg:x16; val_offset:264; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 264, x17, x15, 264, x18)

inst_1304:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1a970a and fs2 == 0 and fe2 == 0xfb and fm2 == 0x1a970c and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e9a970a; op2val:0x7d9a970c; valaddr_reg:x16; val_offset:272; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 272, x17, x15, 272, x18)

inst_1305:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x1a970a and fs2 == 0 and fe2 == 0xfb and fm2 == 0x1a970c and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e9a970a; op2val:0x7d9a970c; valaddr_reg:x16; val_offset:280; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 280, x17, x15, 280, x18)

inst_1306:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5006ec and fs2 == 0 and fe2 == 0xfc and fm2 == 0x5006ef and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f5006ec; op2val:0x7e5006ef; valaddr_reg:x16; val_offset:288; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 288, x17, x15, 288, x18)

inst_1307:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5006ec and fs2 == 0 and fe2 == 0xfc and fm2 == 0x5006ef and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f5006ec; op2val:0x7e5006ef; valaddr_reg:x16; val_offset:296; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 296, x17, x15, 296, x18)

inst_1308:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5006ec and fs2 == 0 and fe2 == 0xfc and fm2 == 0x5006ef and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f5006ec; op2val:0x7e5006ef; valaddr_reg:x16; val_offset:304; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 304, x17, x15, 304, x18)

inst_1309:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5006ec and fs2 == 0 and fe2 == 0xfc and fm2 == 0x5006ef and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f5006ec; op2val:0x7e5006ef; valaddr_reg:x16; val_offset:312; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 312, x17, x15, 312, x18)

inst_1310:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5006ec and fs2 == 0 and fe2 == 0xfc and fm2 == 0x5006ef and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f5006ec; op2val:0x7e5006ef; valaddr_reg:x16; val_offset:320; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 320, x17, x15, 320, x18)

inst_1311:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x48e6a4 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x48e6a7 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e48e6a4; op2val:0x7d48e6a7; valaddr_reg:x16; val_offset:328; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 328, x17, x15, 328, x18)

inst_1312:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x48e6a4 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x48e6a7 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e48e6a4; op2val:0x7d48e6a7; valaddr_reg:x16; val_offset:336; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 336, x17, x15, 336, x18)

inst_1313:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x48e6a4 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x48e6a7 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e48e6a4; op2val:0x7d48e6a7; valaddr_reg:x16; val_offset:344; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 344, x17, x15, 344, x18)

inst_1314:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x48e6a4 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x48e6a7 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e48e6a4; op2val:0x7d48e6a7; valaddr_reg:x16; val_offset:352; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 352, x17, x15, 352, x18)

inst_1315:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x48e6a4 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x48e6a7 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e48e6a4; op2val:0x7d48e6a7; valaddr_reg:x16; val_offset:360; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 360, x17, x15, 360, x18)

inst_1316:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x30a2be and fs2 == 0 and fe2 == 0xfc and fm2 == 0x30a2c1 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f30a2be; op2val:0x7e30a2c1; valaddr_reg:x16; val_offset:368; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 368, x17, x15, 368, x18)

inst_1317:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x30a2be and fs2 == 0 and fe2 == 0xfc and fm2 == 0x30a2c1 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f30a2be; op2val:0x7e30a2c1; valaddr_reg:x16; val_offset:376; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 376, x17, x15, 376, x18)

inst_1318:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x30a2be and fs2 == 0 and fe2 == 0xfc and fm2 == 0x30a2c1 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f30a2be; op2val:0x7e30a2c1; valaddr_reg:x16; val_offset:384; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 384, x17, x15, 384, x18)

inst_1319:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x30a2be and fs2 == 0 and fe2 == 0xfc and fm2 == 0x30a2c1 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f30a2be; op2val:0x7e30a2c1; valaddr_reg:x16; val_offset:392; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 392, x17, x15, 392, x18)

inst_1320:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x30a2be and fs2 == 0 and fe2 == 0xfc and fm2 == 0x30a2c1 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f30a2be; op2val:0x7e30a2c1; valaddr_reg:x16; val_offset:400; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 400, x17, x15, 400, x18)

inst_1321:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5c8a37 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x5c8a3a and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3edc8a37; op2val:0x7ddc8a3a; valaddr_reg:x16; val_offset:408; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 408, x17, x15, 408, x18)

inst_1322:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5c8a37 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x5c8a3a and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3edc8a37; op2val:0x7ddc8a3a; valaddr_reg:x16; val_offset:416; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 416, x17, x15, 416, x18)

inst_1323:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5c8a37 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x5c8a3a and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3edc8a37; op2val:0x7ddc8a3a; valaddr_reg:x16; val_offset:424; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 424, x17, x15, 424, x18)

inst_1324:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5c8a37 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x5c8a3a and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3edc8a37; op2val:0x7ddc8a3a; valaddr_reg:x16; val_offset:432; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 432, x17, x15, 432, x18)

inst_1325:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x5c8a37 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x5c8a3a and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3edc8a37; op2val:0x7ddc8a3a; valaddr_reg:x16; val_offset:440; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 440, x17, x15, 440, x18)

inst_1326:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x693128 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x69312c and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e693128; op2val:0x7d69312c; valaddr_reg:x16; val_offset:448; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 448, x17, x15, 448, x18)

inst_1327:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x693128 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x69312c and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e693128; op2val:0x7d69312c; valaddr_reg:x16; val_offset:456; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 456, x17, x15, 456, x18)

inst_1328:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x693128 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x69312c and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e693128; op2val:0x7d69312c; valaddr_reg:x16; val_offset:464; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 464, x17, x15, 464, x18)

inst_1329:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x693128 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x69312c and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e693128; op2val:0x7d69312c; valaddr_reg:x16; val_offset:472; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 472, x17, x15, 472, x18)

inst_1330:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x693128 and fs2 == 0 and fe2 == 0xfa and fm2 == 0x69312c and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e693128; op2val:0x7d69312c; valaddr_reg:x16; val_offset:480; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 480, x17, x15, 480, x18)

inst_1331:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3318b9 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x3318bc and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f3318b9; op2val:0x7e3318bc; valaddr_reg:x16; val_offset:488; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 488, x17, x15, 488, x18)

inst_1332:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3318b9 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x3318bc and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f3318b9; op2val:0x7e3318bc; valaddr_reg:x16; val_offset:496; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 496, x17, x15, 496, x18)

inst_1333:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3318b9 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x3318bc and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f3318b9; op2val:0x7e3318bc; valaddr_reg:x16; val_offset:504; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 504, x17, x15, 504, x18)

inst_1334:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3318b9 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x3318bc and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f3318b9; op2val:0x7e3318bc; valaddr_reg:x16; val_offset:512; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 512, x17, x15, 512, x18)

inst_1335:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3318b9 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x3318bc and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f3318b9; op2val:0x7e3318bc; valaddr_reg:x16; val_offset:520; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 520, x17, x15, 520, x18)

inst_1336:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x217f20 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x217f22 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f217f20; op2val:0x7e217f22; valaddr_reg:x16; val_offset:528; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 528, x17, x15, 528, x18)

inst_1337:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x217f20 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x217f22 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f217f20; op2val:0x7e217f22; valaddr_reg:x16; val_offset:536; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 536, x17, x15, 536, x18)

inst_1338:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x217f20 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x217f22 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f217f20; op2val:0x7e217f22; valaddr_reg:x16; val_offset:544; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 544, x17, x15, 544, x18)

inst_1339:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x217f20 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x217f22 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f217f20; op2val:0x7e217f22; valaddr_reg:x16; val_offset:552; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 552, x17, x15, 552, x18)

inst_1340:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x217f20 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x217f22 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f217f20; op2val:0x7e217f22; valaddr_reg:x16; val_offset:560; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 560, x17, x15, 560, x18)

inst_1341:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x22d3d6 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x22d3d9 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f22d3d6; op2val:0x7e22d3d9; valaddr_reg:x16; val_offset:568; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 568, x17, x15, 568, x18)

inst_1342:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x22d3d6 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x22d3d9 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f22d3d6; op2val:0x7e22d3d9; valaddr_reg:x16; val_offset:576; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 576, x17, x15, 576, x18)

inst_1343:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x22d3d6 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x22d3d9 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f22d3d6; op2val:0x7e22d3d9; valaddr_reg:x16; val_offset:584; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 584, x17, x15, 584, x18)

inst_1344:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x22d3d6 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x22d3d9 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f22d3d6; op2val:0x7e22d3d9; valaddr_reg:x16; val_offset:592; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 592, x17, x15, 592, x18)

inst_1345:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x22d3d6 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x22d3d9 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f22d3d6; op2val:0x7e22d3d9; valaddr_reg:x16; val_offset:600; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 600, x17, x15, 600, x18)

inst_1346:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x508d4f and fs2 == 0 and fe2 == 0xfb and fm2 == 0x508d52 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ed08d4f; op2val:0x7dd08d52; valaddr_reg:x16; val_offset:608; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 608, x17, x15, 608, x18)

inst_1347:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x508d4f and fs2 == 0 and fe2 == 0xfb and fm2 == 0x508d52 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ed08d4f; op2val:0x7dd08d52; valaddr_reg:x16; val_offset:616; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 616, x17, x15, 616, x18)

inst_1348:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x508d4f and fs2 == 0 and fe2 == 0xfb and fm2 == 0x508d52 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ed08d4f; op2val:0x7dd08d52; valaddr_reg:x16; val_offset:624; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 624, x17, x15, 624, x18)

inst_1349:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x508d4f and fs2 == 0 and fe2 == 0xfb and fm2 == 0x508d52 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ed08d4f; op2val:0x7dd08d52; valaddr_reg:x16; val_offset:632; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 632, x17, x15, 632, x18)

inst_1350:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x508d4f and fs2 == 0 and fe2 == 0xfb and fm2 == 0x508d52 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ed08d4f; op2val:0x7dd08d52; valaddr_reg:x16; val_offset:640; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 640, x17, x15, 640, x18)

inst_1351:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3fb673 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x3fb676 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f3fb673; op2val:0x7e3fb676; valaddr_reg:x16; val_offset:648; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 648, x17, x15, 648, x18)

inst_1352:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3fb673 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x3fb676 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f3fb673; op2val:0x7e3fb676; valaddr_reg:x16; val_offset:656; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 656, x17, x15, 656, x18)

inst_1353:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3fb673 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x3fb676 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f3fb673; op2val:0x7e3fb676; valaddr_reg:x16; val_offset:664; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 664, x17, x15, 664, x18)

inst_1354:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3fb673 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x3fb676 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f3fb673; op2val:0x7e3fb676; valaddr_reg:x16; val_offset:672; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 672, x17, x15, 672, x18)

inst_1355:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3fb673 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x3fb676 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f3fb673; op2val:0x7e3fb676; valaddr_reg:x16; val_offset:680; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 680, x17, x15, 680, x18)

inst_1356:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x25e0aa and fs2 == 0 and fe2 == 0xfb and fm2 == 0x25e0ac and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ea5e0aa; op2val:0x7da5e0ac; valaddr_reg:x16; val_offset:688; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 688, x17, x15, 688, x18)

inst_1357:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x25e0aa and fs2 == 0 and fe2 == 0xfb and fm2 == 0x25e0ac and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ea5e0aa; op2val:0x7da5e0ac; valaddr_reg:x16; val_offset:696; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 696, x17, x15, 696, x18)

inst_1358:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x25e0aa and fs2 == 0 and fe2 == 0xfb and fm2 == 0x25e0ac and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ea5e0aa; op2val:0x7da5e0ac; valaddr_reg:x16; val_offset:704; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 704, x17, x15, 704, x18)

inst_1359:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x25e0aa and fs2 == 0 and fe2 == 0xfb and fm2 == 0x25e0ac and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ea5e0aa; op2val:0x7da5e0ac; valaddr_reg:x16; val_offset:712; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 712, x17, x15, 712, x18)

inst_1360:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x25e0aa and fs2 == 0 and fe2 == 0xfb and fm2 == 0x25e0ac and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ea5e0aa; op2val:0x7da5e0ac; valaddr_reg:x16; val_offset:720; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 720, x17, x15, 720, x18)

inst_1361:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7a523f and fs2 == 0 and fe2 == 0xfc and fm2 == 0x7a5243 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f7a523f; op2val:0x7e7a5243; valaddr_reg:x16; val_offset:728; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 728, x17, x15, 728, x18)

inst_1362:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7a523f and fs2 == 0 and fe2 == 0xfc and fm2 == 0x7a5243 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f7a523f; op2val:0x7e7a5243; valaddr_reg:x16; val_offset:736; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 736, x17, x15, 736, x18)

inst_1363:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7a523f and fs2 == 0 and fe2 == 0xfc and fm2 == 0x7a5243 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f7a523f; op2val:0x7e7a5243; valaddr_reg:x16; val_offset:744; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 744, x17, x15, 744, x18)

inst_1364:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7a523f and fs2 == 0 and fe2 == 0xfc and fm2 == 0x7a5243 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f7a523f; op2val:0x7e7a5243; valaddr_reg:x16; val_offset:752; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 752, x17, x15, 752, x18)

inst_1365:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7a523f and fs2 == 0 and fe2 == 0xfc and fm2 == 0x7a5243 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f7a523f; op2val:0x7e7a5243; valaddr_reg:x16; val_offset:760; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 760, x17, x15, 760, x18)

inst_1366:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x160a9d and fs2 == 0 and fe2 == 0xfb and fm2 == 0x160aa0 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e960a9d; op2val:0x7d960aa0; valaddr_reg:x16; val_offset:768; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 768, x17, x15, 768, x18)

inst_1367:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x160a9d and fs2 == 0 and fe2 == 0xfb and fm2 == 0x160aa0 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e960a9d; op2val:0x7d960aa0; valaddr_reg:x16; val_offset:776; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 776, x17, x15, 776, x18)

inst_1368:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x160a9d and fs2 == 0 and fe2 == 0xfb and fm2 == 0x160aa0 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e960a9d; op2val:0x7d960aa0; valaddr_reg:x16; val_offset:784; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 784, x17, x15, 784, x18)

inst_1369:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x160a9d and fs2 == 0 and fe2 == 0xfb and fm2 == 0x160aa0 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e960a9d; op2val:0x7d960aa0; valaddr_reg:x16; val_offset:792; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 792, x17, x15, 792, x18)

inst_1370:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x160a9d and fs2 == 0 and fe2 == 0xfb and fm2 == 0x160aa0 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e960a9d; op2val:0x7d960aa0; valaddr_reg:x16; val_offset:800; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 800, x17, x15, 800, x18)

inst_1371:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x24353a and fs2 == 0 and fe2 == 0xfb and fm2 == 0x24353c and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ea4353a; op2val:0x7da4353c; valaddr_reg:x16; val_offset:808; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 808, x17, x15, 808, x18)

inst_1372:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x24353a and fs2 == 0 and fe2 == 0xfb and fm2 == 0x24353c and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ea4353a; op2val:0x7da4353c; valaddr_reg:x16; val_offset:816; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 816, x17, x15, 816, x18)

inst_1373:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x24353a and fs2 == 0 and fe2 == 0xfb and fm2 == 0x24353c and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ea4353a; op2val:0x7da4353c; valaddr_reg:x16; val_offset:824; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 824, x17, x15, 824, x18)

inst_1374:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x24353a and fs2 == 0 and fe2 == 0xfb and fm2 == 0x24353c and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ea4353a; op2val:0x7da4353c; valaddr_reg:x16; val_offset:832; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 832, x17, x15, 832, x18)

inst_1375:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x24353a and fs2 == 0 and fe2 == 0xfb and fm2 == 0x24353c and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ea4353a; op2val:0x7da4353c; valaddr_reg:x16; val_offset:840; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 840, x17, x15, 840, x18)

inst_1376:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3ecd25 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x3ecd28 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ebecd25; op2val:0x7dbecd28; valaddr_reg:x16; val_offset:848; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 848, x17, x15, 848, x18)

inst_1377:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3ecd25 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x3ecd28 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ebecd25; op2val:0x7dbecd28; valaddr_reg:x16; val_offset:856; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 856, x17, x15, 856, x18)

inst_1378:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3ecd25 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x3ecd28 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ebecd25; op2val:0x7dbecd28; valaddr_reg:x16; val_offset:864; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 864, x17, x15, 864, x18)

inst_1379:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3ecd25 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x3ecd28 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ebecd25; op2val:0x7dbecd28; valaddr_reg:x16; val_offset:872; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 872, x17, x15, 872, x18)

inst_1380:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3ecd25 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x3ecd28 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ebecd25; op2val:0x7dbecd28; valaddr_reg:x16; val_offset:880; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 880, x17, x15, 880, x18)

inst_1381:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3c52d5 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x3c52d8 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ebc52d5; op2val:0x7dbc52d8; valaddr_reg:x16; val_offset:888; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 888, x17, x15, 888, x18)

inst_1382:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3c52d5 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x3c52d8 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ebc52d5; op2val:0x7dbc52d8; valaddr_reg:x16; val_offset:896; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 896, x17, x15, 896, x18)

inst_1383:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3c52d5 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x3c52d8 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ebc52d5; op2val:0x7dbc52d8; valaddr_reg:x16; val_offset:904; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 904, x17, x15, 904, x18)

inst_1384:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3c52d5 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x3c52d8 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ebc52d5; op2val:0x7dbc52d8; valaddr_reg:x16; val_offset:912; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 912, x17, x15, 912, x18)

inst_1385:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3c52d5 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x3c52d8 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ebc52d5; op2val:0x7dbc52d8; valaddr_reg:x16; val_offset:920; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 920, x17, x15, 920, x18)

inst_1386:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7addd0 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x7addd4 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f7addd0; op2val:0x7e7addd4; valaddr_reg:x16; val_offset:928; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 928, x17, x15, 928, x18)

inst_1387:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7addd0 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x7addd4 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f7addd0; op2val:0x7e7addd4; valaddr_reg:x16; val_offset:936; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 936, x17, x15, 936, x18)

inst_1388:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7addd0 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x7addd4 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f7addd0; op2val:0x7e7addd4; valaddr_reg:x16; val_offset:944; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 944, x17, x15, 944, x18)

inst_1389:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7addd0 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x7addd4 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f7addd0; op2val:0x7e7addd4; valaddr_reg:x16; val_offset:952; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 952, x17, x15, 952, x18)

inst_1390:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7addd0 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x7addd4 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f7addd0; op2val:0x7e7addd4; valaddr_reg:x16; val_offset:960; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 960, x17, x15, 960, x18)

inst_1391:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x15b4c6 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x15b4c8 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f15b4c6; op2val:0x7e15b4c8; valaddr_reg:x16; val_offset:968; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 968, x17, x15, 968, x18)

inst_1392:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x15b4c6 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x15b4c8 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f15b4c6; op2val:0x7e15b4c8; valaddr_reg:x16; val_offset:976; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 976, x17, x15, 976, x18)

inst_1393:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x15b4c6 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x15b4c8 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f15b4c6; op2val:0x7e15b4c8; valaddr_reg:x16; val_offset:984; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 984, x17, x15, 984, x18)

inst_1394:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x15b4c6 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x15b4c8 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f15b4c6; op2val:0x7e15b4c8; valaddr_reg:x16; val_offset:992; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 992, x17, x15, 992, x18)

inst_1395:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x15b4c6 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x15b4c8 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f15b4c6; op2val:0x7e15b4c8; valaddr_reg:x16; val_offset:1000; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1000, x17, x15, 1000, x18)

inst_1396:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x67341f and fs2 == 0 and fe2 == 0xfb and fm2 == 0x673422 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ee7341f; op2val:0x7de73422; valaddr_reg:x16; val_offset:1008; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1008, x17, x15, 1008, x18)

inst_1397:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x67341f and fs2 == 0 and fe2 == 0xfb and fm2 == 0x673422 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ee7341f; op2val:0x7de73422; valaddr_reg:x16; val_offset:1016; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1016, x17, x15, 1016, x18)

inst_1398:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x67341f and fs2 == 0 and fe2 == 0xfb and fm2 == 0x673422 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ee7341f; op2val:0x7de73422; valaddr_reg:x16; val_offset:1024; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1024, x17, x15, 1024, x18)

inst_1399:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x67341f and fs2 == 0 and fe2 == 0xfb and fm2 == 0x673422 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ee7341f; op2val:0x7de73422; valaddr_reg:x16; val_offset:1032; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1032, x17, x15, 1032, x18)

inst_1400:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x67341f and fs2 == 0 and fe2 == 0xfb and fm2 == 0x673422 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ee7341f; op2val:0x7de73422; valaddr_reg:x16; val_offset:1040; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1040, x17, x15, 1040, x18)

inst_1401:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x35e266 and fs2 == 0 and fe2 == 0xf7 and fm2 == 0x35e269 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3cb5e266; op2val:0x7bb5e269; valaddr_reg:x16; val_offset:1048; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1048, x17, x15, 1048, x18)

inst_1402:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x35e266 and fs2 == 0 and fe2 == 0xf7 and fm2 == 0x35e269 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3cb5e266; op2val:0x7bb5e269; valaddr_reg:x16; val_offset:1056; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1056, x17, x15, 1056, x18)

inst_1403:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x35e266 and fs2 == 0 and fe2 == 0xf7 and fm2 == 0x35e269 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3cb5e266; op2val:0x7bb5e269; valaddr_reg:x16; val_offset:1064; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1064, x17, x15, 1064, x18)

inst_1404:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x35e266 and fs2 == 0 and fe2 == 0xf7 and fm2 == 0x35e269 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3cb5e266; op2val:0x7bb5e269; valaddr_reg:x16; val_offset:1072; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1072, x17, x15, 1072, x18)

inst_1405:
// fs1 == 0 and fe1 == 0x79 and fm1 == 0x35e266 and fs2 == 0 and fe2 == 0xf7 and fm2 == 0x35e269 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3cb5e266; op2val:0x7bb5e269; valaddr_reg:x16; val_offset:1080; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1080, x17, x15, 1080, x18)

inst_1406:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x432a4f and fs2 == 0 and fe2 == 0xfc and fm2 == 0x432a52 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f432a4f; op2val:0x7e432a52; valaddr_reg:x16; val_offset:1088; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1088, x17, x15, 1088, x18)

inst_1407:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x432a4f and fs2 == 0 and fe2 == 0xfc and fm2 == 0x432a52 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f432a4f; op2val:0x7e432a52; valaddr_reg:x16; val_offset:1096; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1096, x17, x15, 1096, x18)

inst_1408:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x432a4f and fs2 == 0 and fe2 == 0xfc and fm2 == 0x432a52 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f432a4f; op2val:0x7e432a52; valaddr_reg:x16; val_offset:1104; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1104, x17, x15, 1104, x18)

inst_1409:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x432a4f and fs2 == 0 and fe2 == 0xfc and fm2 == 0x432a52 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f432a4f; op2val:0x7e432a52; valaddr_reg:x16; val_offset:1112; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1112, x17, x15, 1112, x18)

inst_1410:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x432a4f and fs2 == 0 and fe2 == 0xfc and fm2 == 0x432a52 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f432a4f; op2val:0x7e432a52; valaddr_reg:x16; val_offset:1120; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1120, x17, x15, 1120, x18)

inst_1411:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x119d6e and fs2 == 0 and fe2 == 0xfc and fm2 == 0x119d70 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f119d6e; op2val:0x7e119d70; valaddr_reg:x16; val_offset:1128; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1128, x17, x15, 1128, x18)

inst_1412:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x119d6e and fs2 == 0 and fe2 == 0xfc and fm2 == 0x119d70 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f119d6e; op2val:0x7e119d70; valaddr_reg:x16; val_offset:1136; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1136, x17, x15, 1136, x18)

inst_1413:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x119d6e and fs2 == 0 and fe2 == 0xfc and fm2 == 0x119d70 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f119d6e; op2val:0x7e119d70; valaddr_reg:x16; val_offset:1144; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1144, x17, x15, 1144, x18)

inst_1414:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x119d6e and fs2 == 0 and fe2 == 0xfc and fm2 == 0x119d70 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f119d6e; op2val:0x7e119d70; valaddr_reg:x16; val_offset:1152; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1152, x17, x15, 1152, x18)

inst_1415:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x119d6e and fs2 == 0 and fe2 == 0xfc and fm2 == 0x119d70 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f119d6e; op2val:0x7e119d70; valaddr_reg:x16; val_offset:1160; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1160, x17, x15, 1160, x18)

inst_1416:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x733720 and fs2 == 0 and fe2 == 0xf8 and fm2 == 0x733723 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3d733720; op2val:0x7c733723; valaddr_reg:x16; val_offset:1168; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1168, x17, x15, 1168, x18)

inst_1417:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x733720 and fs2 == 0 and fe2 == 0xf8 and fm2 == 0x733723 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3d733720; op2val:0x7c733723; valaddr_reg:x16; val_offset:1176; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1176, x17, x15, 1176, x18)

inst_1418:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x733720 and fs2 == 0 and fe2 == 0xf8 and fm2 == 0x733723 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3d733720; op2val:0x7c733723; valaddr_reg:x16; val_offset:1184; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1184, x17, x15, 1184, x18)

inst_1419:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x733720 and fs2 == 0 and fe2 == 0xf8 and fm2 == 0x733723 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3d733720; op2val:0x7c733723; valaddr_reg:x16; val_offset:1192; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1192, x17, x15, 1192, x18)

inst_1420:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x733720 and fs2 == 0 and fe2 == 0xf8 and fm2 == 0x733723 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3d733720; op2val:0x7c733723; valaddr_reg:x16; val_offset:1200; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1200, x17, x15, 1200, x18)

inst_1421:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x61a888 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x61a88b and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ee1a888; op2val:0x7de1a88b; valaddr_reg:x16; val_offset:1208; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1208, x17, x15, 1208, x18)

inst_1422:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x61a888 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x61a88b and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ee1a888; op2val:0x7de1a88b; valaddr_reg:x16; val_offset:1216; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1216, x17, x15, 1216, x18)

inst_1423:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x61a888 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x61a88b and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ee1a888; op2val:0x7de1a88b; valaddr_reg:x16; val_offset:1224; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1224, x17, x15, 1224, x18)

inst_1424:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x61a888 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x61a88b and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ee1a888; op2val:0x7de1a88b; valaddr_reg:x16; val_offset:1232; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1232, x17, x15, 1232, x18)

inst_1425:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x61a888 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x61a88b and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ee1a888; op2val:0x7de1a88b; valaddr_reg:x16; val_offset:1240; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1240, x17, x15, 1240, x18)

inst_1426:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x365437 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x36543a and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3eb65437; op2val:0x7db6543a; valaddr_reg:x16; val_offset:1248; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1248, x17, x15, 1248, x18)

inst_1427:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x365437 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x36543a and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3eb65437; op2val:0x7db6543a; valaddr_reg:x16; val_offset:1256; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1256, x17, x15, 1256, x18)

inst_1428:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x365437 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x36543a and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3eb65437; op2val:0x7db6543a; valaddr_reg:x16; val_offset:1264; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1264, x17, x15, 1264, x18)

inst_1429:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x365437 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x36543a and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3eb65437; op2val:0x7db6543a; valaddr_reg:x16; val_offset:1272; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1272, x17, x15, 1272, x18)

inst_1430:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x365437 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x36543a and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3eb65437; op2val:0x7db6543a; valaddr_reg:x16; val_offset:1280; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1280, x17, x15, 1280, x18)

inst_1431:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0a2298 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x0a229a and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f0a2298; op2val:0x7e0a229a; valaddr_reg:x16; val_offset:1288; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1288, x17, x15, 1288, x18)

inst_1432:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0a2298 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x0a229a and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f0a2298; op2val:0x7e0a229a; valaddr_reg:x16; val_offset:1296; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1296, x17, x15, 1296, x18)

inst_1433:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0a2298 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x0a229a and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f0a2298; op2val:0x7e0a229a; valaddr_reg:x16; val_offset:1304; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1304, x17, x15, 1304, x18)

inst_1434:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0a2298 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x0a229a and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f0a2298; op2val:0x7e0a229a; valaddr_reg:x16; val_offset:1312; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1312, x17, x15, 1312, x18)

inst_1435:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0a2298 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x0a229a and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f0a2298; op2val:0x7e0a229a; valaddr_reg:x16; val_offset:1320; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1320, x17, x15, 1320, x18)

inst_1436:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x53a41c and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x53a41f and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3dd3a41c; op2val:0x7cd3a41f; valaddr_reg:x16; val_offset:1328; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1328, x17, x15, 1328, x18)

inst_1437:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x53a41c and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x53a41f and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3dd3a41c; op2val:0x7cd3a41f; valaddr_reg:x16; val_offset:1336; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1336, x17, x15, 1336, x18)

inst_1438:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x53a41c and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x53a41f and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3dd3a41c; op2val:0x7cd3a41f; valaddr_reg:x16; val_offset:1344; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1344, x17, x15, 1344, x18)

inst_1439:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x53a41c and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x53a41f and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3dd3a41c; op2val:0x7cd3a41f; valaddr_reg:x16; val_offset:1352; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1352, x17, x15, 1352, x18)

inst_1440:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x53a41c and fs2 == 0 and fe2 == 0xf9 and fm2 == 0x53a41f and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3dd3a41c; op2val:0x7cd3a41f; valaddr_reg:x16; val_offset:1360; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1360, x17, x15, 1360, x18)

inst_1441:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2fa8cd and fs2 == 0 and fe2 == 0xfc and fm2 == 0x2fa8d0 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f2fa8cd; op2val:0x7e2fa8d0; valaddr_reg:x16; val_offset:1368; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1368, x17, x15, 1368, x18)

inst_1442:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2fa8cd and fs2 == 0 and fe2 == 0xfc and fm2 == 0x2fa8d0 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f2fa8cd; op2val:0x7e2fa8d0; valaddr_reg:x16; val_offset:1376; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1376, x17, x15, 1376, x18)

inst_1443:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2fa8cd and fs2 == 0 and fe2 == 0xfc and fm2 == 0x2fa8d0 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f2fa8cd; op2val:0x7e2fa8d0; valaddr_reg:x16; val_offset:1384; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1384, x17, x15, 1384, x18)

inst_1444:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2fa8cd and fs2 == 0 and fe2 == 0xfc and fm2 == 0x2fa8d0 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f2fa8cd; op2val:0x7e2fa8d0; valaddr_reg:x16; val_offset:1392; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1392, x17, x15, 1392, x18)

inst_1445:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x2fa8cd and fs2 == 0 and fe2 == 0xfc and fm2 == 0x2fa8d0 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f2fa8cd; op2val:0x7e2fa8d0; valaddr_reg:x16; val_offset:1400; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1400, x17, x15, 1400, x18)

inst_1446:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7522ed and fs2 == 0 and fe2 == 0xfc and fm2 == 0x7522f0 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f7522ed; op2val:0x7e7522f0; valaddr_reg:x16; val_offset:1408; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1408, x17, x15, 1408, x18)

inst_1447:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7522ed and fs2 == 0 and fe2 == 0xfc and fm2 == 0x7522f0 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f7522ed; op2val:0x7e7522f0; valaddr_reg:x16; val_offset:1416; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1416, x17, x15, 1416, x18)

inst_1448:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7522ed and fs2 == 0 and fe2 == 0xfc and fm2 == 0x7522f0 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f7522ed; op2val:0x7e7522f0; valaddr_reg:x16; val_offset:1424; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1424, x17, x15, 1424, x18)

inst_1449:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7522ed and fs2 == 0 and fe2 == 0xfc and fm2 == 0x7522f0 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f7522ed; op2val:0x7e7522f0; valaddr_reg:x16; val_offset:1432; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1432, x17, x15, 1432, x18)

inst_1450:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7522ed and fs2 == 0 and fe2 == 0xfc and fm2 == 0x7522f0 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f7522ed; op2val:0x7e7522f0; valaddr_reg:x16; val_offset:1440; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1440, x17, x15, 1440, x18)

inst_1451:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4770da and fs2 == 0 and fe2 == 0xfb and fm2 == 0x4770dd and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ec770da; op2val:0x7dc770dd; valaddr_reg:x16; val_offset:1448; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1448, x17, x15, 1448, x18)

inst_1452:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4770da and fs2 == 0 and fe2 == 0xfb and fm2 == 0x4770dd and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ec770da; op2val:0x7dc770dd; valaddr_reg:x16; val_offset:1456; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1456, x17, x15, 1456, x18)

inst_1453:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4770da and fs2 == 0 and fe2 == 0xfb and fm2 == 0x4770dd and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ec770da; op2val:0x7dc770dd; valaddr_reg:x16; val_offset:1464; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1464, x17, x15, 1464, x18)

inst_1454:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4770da and fs2 == 0 and fe2 == 0xfb and fm2 == 0x4770dd and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ec770da; op2val:0x7dc770dd; valaddr_reg:x16; val_offset:1472; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1472, x17, x15, 1472, x18)

inst_1455:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4770da and fs2 == 0 and fe2 == 0xfb and fm2 == 0x4770dd and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ec770da; op2val:0x7dc770dd; valaddr_reg:x16; val_offset:1480; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1480, x17, x15, 1480, x18)

inst_1456:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4d782f and fs2 == 0 and fe2 == 0xfc and fm2 == 0x4d7832 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f4d782f; op2val:0x7e4d7832; valaddr_reg:x16; val_offset:1488; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1488, x17, x15, 1488, x18)

inst_1457:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4d782f and fs2 == 0 and fe2 == 0xfc and fm2 == 0x4d7832 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f4d782f; op2val:0x7e4d7832; valaddr_reg:x16; val_offset:1496; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1496, x17, x15, 1496, x18)

inst_1458:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4d782f and fs2 == 0 and fe2 == 0xfc and fm2 == 0x4d7832 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f4d782f; op2val:0x7e4d7832; valaddr_reg:x16; val_offset:1504; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1504, x17, x15, 1504, x18)

inst_1459:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4d782f and fs2 == 0 and fe2 == 0xfc and fm2 == 0x4d7832 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f4d782f; op2val:0x7e4d7832; valaddr_reg:x16; val_offset:1512; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1512, x17, x15, 1512, x18)

inst_1460:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4d782f and fs2 == 0 and fe2 == 0xfc and fm2 == 0x4d7832 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f4d782f; op2val:0x7e4d7832; valaddr_reg:x16; val_offset:1520; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1520, x17, x15, 1520, x18)

inst_1461:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4cebe3 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x4cebe6 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3eccebe3; op2val:0x7dccebe6; valaddr_reg:x16; val_offset:1528; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1528, x17, x15, 1528, x18)

inst_1462:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4cebe3 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x4cebe6 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3eccebe3; op2val:0x7dccebe6; valaddr_reg:x16; val_offset:1536; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1536, x17, x15, 1536, x18)

inst_1463:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4cebe3 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x4cebe6 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3eccebe3; op2val:0x7dccebe6; valaddr_reg:x16; val_offset:1544; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1544, x17, x15, 1544, x18)

inst_1464:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4cebe3 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x4cebe6 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3eccebe3; op2val:0x7dccebe6; valaddr_reg:x16; val_offset:1552; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1552, x17, x15, 1552, x18)

inst_1465:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x4cebe3 and fs2 == 0 and fe2 == 0xfb and fm2 == 0x4cebe6 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3eccebe3; op2val:0x7dccebe6; valaddr_reg:x16; val_offset:1560; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1560, x17, x15, 1560, x18)

inst_1466:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x30b976 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x30b979 and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f30b976; op2val:0x7e30b979; valaddr_reg:x16; val_offset:1568; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1568, x17, x15, 1568, x18)

inst_1467:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x30b976 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x30b979 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f30b976; op2val:0x7e30b979; valaddr_reg:x16; val_offset:1576; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1576, x17, x15, 1576, x18)

inst_1468:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x30b976 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x30b979 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f30b976; op2val:0x7e30b979; valaddr_reg:x16; val_offset:1584; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1584, x17, x15, 1584, x18)

inst_1469:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x30b976 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x30b979 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f30b976; op2val:0x7e30b979; valaddr_reg:x16; val_offset:1592; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1592, x17, x15, 1592, x18)

inst_1470:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x30b976 and fs2 == 0 and fe2 == 0xfc and fm2 == 0x30b979 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f30b976; op2val:0x7e30b979; valaddr_reg:x16; val_offset:1600; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1600, x17, x15, 1600, x18)

inst_1471:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7d398a and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3efd398a; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1608; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1608, x17, x15, 1608, x18)

inst_1472:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7d398a and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3efd398a; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1616; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1616, x17, x15, 1616, x18)

inst_1473:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7d398a and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3efd398a; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1624; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1624, x17, x15, 1624, x18)

inst_1474:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7d398a and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3efd398a; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1632; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1632, x17, x15, 1632, x18)

inst_1475:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7d398a and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3efd398a; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1640; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1640, x17, x15, 1640, x18)

inst_1476:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x73e7eb and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3df3e7eb; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1648; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1648, x17, x15, 1648, x18)

inst_1477:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x73e7eb and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3df3e7eb; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1656; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1656, x17, x15, 1656, x18)

inst_1478:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x73e7eb and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3df3e7eb; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1664; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1664, x17, x15, 1664, x18)

inst_1479:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x73e7eb and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3df3e7eb; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1672; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1672, x17, x15, 1672, x18)

inst_1480:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x73e7eb and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3df3e7eb; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1680; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1680, x17, x15, 1680, x18)

inst_1481:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x102891 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e902891; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1688; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1688, x17, x15, 1688, x18)

inst_1482:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x102891 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e902891; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1696; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1696, x17, x15, 1696, x18)

inst_1483:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x102891 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e902891; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1704; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1704, x17, x15, 1704, x18)

inst_1484:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x102891 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e902891; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1712; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1712, x17, x15, 1712, x18)

inst_1485:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x102891 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e902891; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1720; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1720, x17, x15, 1720, x18)

inst_1486:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x455bfe and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ec55bfe; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1728; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1728, x17, x15, 1728, x18)

inst_1487:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x455bfe and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ec55bfe; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1736; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1736, x17, x15, 1736, x18)

inst_1488:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x455bfe and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ec55bfe; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1744; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1744, x17, x15, 1744, x18)

inst_1489:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x455bfe and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ec55bfe; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1752; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1752, x17, x15, 1752, x18)

inst_1490:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x455bfe and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ec55bfe; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1760; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1760, x17, x15, 1760, x18)

inst_1491:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x02495c and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e02495c; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1768; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1768, x17, x15, 1768, x18)

inst_1492:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x02495c and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e02495c; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1776; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1776, x17, x15, 1776, x18)

inst_1493:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x02495c and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e02495c; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1784; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1784, x17, x15, 1784, x18)

inst_1494:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x02495c and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e02495c; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1792; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1792, x17, x15, 1792, x18)

inst_1495:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x02495c and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e02495c; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1800; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1800, x17, x15, 1800, x18)

inst_1496:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x34c38b and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f34c38b; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1808; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1808, x17, x15, 1808, x18)

inst_1497:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x34c38b and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f34c38b; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1816; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1816, x17, x15, 1816, x18)

inst_1498:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x34c38b and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f34c38b; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1824; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1824, x17, x15, 1824, x18)

inst_1499:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x34c38b and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f34c38b; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1832; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1832, x17, x15, 1832, x18)

inst_1500:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x34c38b and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f34c38b; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1840; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1840, x17, x15, 1840, x18)

inst_1501:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x16ebf9 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f16ebf9; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1848; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1848, x17, x15, 1848, x18)

inst_1502:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x16ebf9 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f16ebf9; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1856; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1856, x17, x15, 1856, x18)

inst_1503:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x16ebf9 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f16ebf9; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1864; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1864, x17, x15, 1864, x18)

inst_1504:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x16ebf9 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f16ebf9; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1872; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1872, x17, x15, 1872, x18)

inst_1505:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x16ebf9 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f16ebf9; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1880; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1880, x17, x15, 1880, x18)

inst_1506:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6956e0 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f6956e0; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1888; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1888, x17, x15, 1888, x18)

inst_1507:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6956e0 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f6956e0; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1896; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1896, x17, x15, 1896, x18)

inst_1508:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6956e0 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f6956e0; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1904; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1904, x17, x15, 1904, x18)

inst_1509:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6956e0 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f6956e0; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1912; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1912, x17, x15, 1912, x18)

inst_1510:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x6956e0 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f6956e0; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1920; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1920, x17, x15, 1920, x18)

inst_1511:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x159019 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e159019; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1928; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1928, x17, x15, 1928, x18)

inst_1512:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x159019 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e159019; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1936; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1936, x17, x15, 1936, x18)

inst_1513:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x159019 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e159019; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1944; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1944, x17, x15, 1944, x18)

inst_1514:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x159019 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e159019; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1952; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1952, x17, x15, 1952, x18)

inst_1515:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x159019 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e159019; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1960; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1960, x17, x15, 1960, x18)

inst_1516:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x370d07 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f370d07; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1968; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1968, x17, x15, 1968, x18)

inst_1517:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x370d07 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f370d07; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1976; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1976, x17, x15, 1976, x18)

inst_1518:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x370d07 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f370d07; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1984; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1984, x17, x15, 1984, x18)

inst_1519:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x370d07 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f370d07; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1992; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1992, x17, x15, 1992, x18)

inst_1520:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x370d07 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f370d07; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:2000; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 2000, x17, x15, 2000, x18)

inst_1521:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2c6ef8 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e2c6ef8; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:2008; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 2008, x17, x15, 2008, x18)

inst_1522:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2c6ef8 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e2c6ef8; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:2016; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 2016, x17, x15, 2016, x18)

inst_1523:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2c6ef8 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e2c6ef8; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:2024; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 2024, x17, x15, 2024, x18)
addi x16,x16,2032
RVTEST_SIGBASE(x15,signature_x15_7)

inst_1524:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2c6ef8 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e2c6ef8; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:0; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 0, x17, x15, 0, x18)

inst_1525:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2c6ef8 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e2c6ef8; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:8; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 8, x17, x15, 8, x18)

inst_1526:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x128693 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e928693; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:16; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 16, x17, x15, 16, x18)

inst_1527:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x128693 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e928693; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:24; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 24, x17, x15, 24, x18)

inst_1528:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x128693 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e928693; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:32; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 32, x17, x15, 32, x18)

inst_1529:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x128693 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e928693; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:40; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 40, x17, x15, 40, x18)

inst_1530:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x128693 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e928693; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:48; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 48, x17, x15, 48, x18)

inst_1531:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x432ec0 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3dc32ec0; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:56; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 56, x17, x15, 56, x18)

inst_1532:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x432ec0 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3dc32ec0; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:64; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 64, x17, x15, 64, x18)

inst_1533:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x432ec0 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3dc32ec0; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:72; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 72, x17, x15, 72, x18)

inst_1534:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x432ec0 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3dc32ec0; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:80; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 80, x17, x15, 80, x18)

inst_1535:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x432ec0 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3dc32ec0; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:88; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 88, x17, x15, 88, x18)

inst_1536:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0eb508 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e0eb508; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:96; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 96, x17, x15, 96, x18)

inst_1537:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0eb508 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e0eb508; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:104; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 104, x17, x15, 104, x18)

inst_1538:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0eb508 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e0eb508; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:112; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 112, x17, x15, 112, x18)

inst_1539:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0eb508 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e0eb508; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:120; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 120, x17, x15, 120, x18)

inst_1540:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x0eb508 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e0eb508; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:128; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 128, x17, x15, 128, x18)

inst_1541:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x284ed5 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ea84ed5; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:136; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 136, x17, x15, 136, x18)

inst_1542:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x284ed5 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ea84ed5; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:144; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 144, x17, x15, 144, x18)

inst_1543:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x284ed5 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ea84ed5; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:152; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 152, x17, x15, 152, x18)

inst_1544:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x284ed5 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ea84ed5; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:160; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 160, x17, x15, 160, x18)

inst_1545:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x284ed5 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ea84ed5; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:168; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 168, x17, x15, 168, x18)

inst_1546:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x130bba and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e130bba; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:176; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 176, x17, x15, 176, x18)

inst_1547:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x130bba and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e130bba; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:184; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 184, x17, x15, 184, x18)

inst_1548:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x130bba and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e130bba; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:192; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 192, x17, x15, 192, x18)

inst_1549:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x130bba and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e130bba; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:200; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 200, x17, x15, 200, x18)

inst_1550:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x130bba and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e130bba; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:208; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 208, x17, x15, 208, x18)

inst_1551:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x22d33c and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ea2d33c; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:216; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 216, x17, x15, 216, x18)

inst_1552:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x22d33c and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ea2d33c; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:224; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 224, x17, x15, 224, x18)

inst_1553:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x22d33c and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ea2d33c; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:232; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 232, x17, x15, 232, x18)

inst_1554:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x22d33c and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ea2d33c; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:240; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 240, x17, x15, 240, x18)

inst_1555:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x22d33c and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ea2d33c; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:248; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 248, x17, x15, 248, x18)

inst_1556:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x54dcf2 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ed4dcf2; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:256; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 256, x17, x15, 256, x18)

inst_1557:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x54dcf2 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ed4dcf2; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:264; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 264, x17, x15, 264, x18)

inst_1558:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x54dcf2 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ed4dcf2; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:272; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 272, x17, x15, 272, x18)

inst_1559:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x54dcf2 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ed4dcf2; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:280; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 280, x17, x15, 280, x18)

inst_1560:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x54dcf2 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ed4dcf2; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:288; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 288, x17, x15, 288, x18)

inst_1561:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x262aba and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f262aba; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:296; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 296, x17, x15, 296, x18)

inst_1562:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x262aba and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f262aba; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:304; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 304, x17, x15, 304, x18)

inst_1563:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x262aba and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f262aba; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:312; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 312, x17, x15, 312, x18)

inst_1564:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x262aba and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f262aba; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:320; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 320, x17, x15, 320, x18)

inst_1565:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x262aba and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f262aba; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:328; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 328, x17, x15, 328, x18)

inst_1566:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7c4aa5 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3efc4aa5; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:336; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 336, x17, x15, 336, x18)

inst_1567:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7c4aa5 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3efc4aa5; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:344; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 344, x17, x15, 344, x18)

inst_1568:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7c4aa5 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3efc4aa5; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:352; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 352, x17, x15, 352, x18)

inst_1569:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7c4aa5 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3efc4aa5; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:360; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 360, x17, x15, 360, x18)

inst_1570:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x7c4aa5 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3efc4aa5; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:368; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 368, x17, x15, 368, x18)

inst_1571:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3f27f4 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ebf27f4; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:376; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 376, x17, x15, 376, x18)

inst_1572:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3f27f4 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ebf27f4; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:384; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 384, x17, x15, 384, x18)

inst_1573:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3f27f4 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ebf27f4; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:392; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 392, x17, x15, 392, x18)

inst_1574:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3f27f4 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ebf27f4; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:400; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 400, x17, x15, 400, x18)

inst_1575:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3f27f4 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ebf27f4; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:408; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 408, x17, x15, 408, x18)

inst_1576:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x0d64b2 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3d0d64b2; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:416; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 416, x17, x15, 416, x18)

inst_1577:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x0d64b2 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3d0d64b2; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:424; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 424, x17, x15, 424, x18)

inst_1578:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x0d64b2 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3d0d64b2; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:432; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 432, x17, x15, 432, x18)

inst_1579:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x0d64b2 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3d0d64b2; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:440; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 440, x17, x15, 440, x18)

inst_1580:
// fs1 == 0 and fe1 == 0x7a and fm1 == 0x0d64b2 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3d0d64b2; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:448; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 448, x17, x15, 448, x18)

inst_1581:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5d3125 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f5d3125; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:456; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 456, x17, x15, 456, x18)

inst_1582:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5d3125 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f5d3125; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:464; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 464, x17, x15, 464, x18)

inst_1583:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5d3125 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f5d3125; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:472; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 472, x17, x15, 472, x18)

inst_1584:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5d3125 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f5d3125; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:480; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 480, x17, x15, 480, x18)

inst_1585:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x5d3125 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f5d3125; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:488; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 488, x17, x15, 488, x18)

inst_1586:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x7814c1 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3df814c1; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:496; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 496, x17, x15, 496, x18)

inst_1587:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x7814c1 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3df814c1; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:504; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 504, x17, x15, 504, x18)

inst_1588:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x7814c1 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3df814c1; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:512; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 512, x17, x15, 512, x18)

inst_1589:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x7814c1 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3df814c1; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:520; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 520, x17, x15, 520, x18)

inst_1590:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x7814c1 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3df814c1; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:528; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 528, x17, x15, 528, x18)

inst_1591:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0e2d50 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f0e2d50; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:536; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 536, x17, x15, 536, x18)

inst_1592:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0e2d50 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f0e2d50; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:544; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 544, x17, x15, 544, x18)

inst_1593:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0e2d50 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f0e2d50; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:552; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 552, x17, x15, 552, x18)

inst_1594:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0e2d50 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f0e2d50; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:560; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 560, x17, x15, 560, x18)

inst_1595:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x0e2d50 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f0e2d50; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:568; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 568, x17, x15, 568, x18)

inst_1596:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1ae3ad and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f1ae3ad; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:576; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 576, x17, x15, 576, x18)

inst_1597:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1ae3ad and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f1ae3ad; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:584; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 584, x17, x15, 584, x18)

inst_1598:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1ae3ad and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f1ae3ad; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:592; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 592, x17, x15, 592, x18)

inst_1599:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1ae3ad and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f1ae3ad; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:600; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 600, x17, x15, 600, x18)

inst_1600:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x1ae3ad and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f1ae3ad; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:608; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 608, x17, x15, 608, x18)

inst_1601:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x125d9e and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e925d9e; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:616; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 616, x17, x15, 616, x18)

inst_1602:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x125d9e and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e925d9e; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:624; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 624, x17, x15, 624, x18)

inst_1603:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x125d9e and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e925d9e; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:632; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 632, x17, x15, 632, x18)

inst_1604:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x125d9e and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e925d9e; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:640; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 640, x17, x15, 640, x18)

inst_1605:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x125d9e and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e925d9e; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:648; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 648, x17, x15, 648, x18)

inst_1606:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0ff64f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e8ff64f; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:656; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 656, x17, x15, 656, x18)

inst_1607:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0ff64f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e8ff64f; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:664; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 664, x17, x15, 664, x18)

inst_1608:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0ff64f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e8ff64f; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:672; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 672, x17, x15, 672, x18)

inst_1609:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0ff64f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e8ff64f; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:680; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 680, x17, x15, 680, x18)

inst_1610:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x0ff64f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e8ff64f; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:688; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 688, x17, x15, 688, x18)

inst_1611:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x09b33a and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e09b33a; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:696; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 696, x17, x15, 696, x18)

inst_1612:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x09b33a and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e09b33a; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:704; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 704, x17, x15, 704, x18)

inst_1613:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x09b33a and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e09b33a; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:712; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 712, x17, x15, 712, x18)

inst_1614:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x09b33a and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e09b33a; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:720; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 720, x17, x15, 720, x18)

inst_1615:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x09b33a and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e09b33a; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:728; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 728, x17, x15, 728, x18)

inst_1616:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x32e01f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f32e01f; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:736; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 736, x17, x15, 736, x18)

inst_1617:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x32e01f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f32e01f; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:744; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 744, x17, x15, 744, x18)

inst_1618:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x32e01f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f32e01f; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:752; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 752, x17, x15, 752, x18)

inst_1619:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x32e01f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f32e01f; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:760; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 760, x17, x15, 760, x18)

inst_1620:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x32e01f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f32e01f; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:768; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 768, x17, x15, 768, x18)

inst_1621:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x77927d and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e77927d; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:776; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 776, x17, x15, 776, x18)

inst_1622:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x77927d and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e77927d; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:784; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 784, x17, x15, 784, x18)

inst_1623:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x77927d and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e77927d; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:792; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 792, x17, x15, 792, x18)

inst_1624:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x77927d and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e77927d; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:800; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 800, x17, x15, 800, x18)

inst_1625:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x77927d and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e77927d; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:808; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 808, x17, x15, 808, x18)

inst_1626:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x283cc1 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ea83cc1; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:816; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 816, x17, x15, 816, x18)

inst_1627:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x283cc1 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ea83cc1; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:824; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 824, x17, x15, 824, x18)

inst_1628:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x283cc1 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ea83cc1; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:832; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 832, x17, x15, 832, x18)

inst_1629:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x283cc1 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ea83cc1; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:840; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 840, x17, x15, 840, x18)

inst_1630:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x283cc1 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ea83cc1; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:848; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 848, x17, x15, 848, x18)

inst_1631:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x742197 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ef42197; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:856; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 856, x17, x15, 856, x18)

inst_1632:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x742197 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ef42197; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:864; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 864, x17, x15, 864, x18)

inst_1633:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x742197 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ef42197; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:872; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 872, x17, x15, 872, x18)

inst_1634:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x742197 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ef42197; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:880; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 880, x17, x15, 880, x18)

inst_1635:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x742197 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ef42197; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:888; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 888, x17, x15, 888, x18)

inst_1636:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3af38b and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ebaf38b; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:896; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 896, x17, x15, 896, x18)

inst_1637:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3af38b and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ebaf38b; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:904; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 904, x17, x15, 904, x18)

inst_1638:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3af38b and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ebaf38b; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:912; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 912, x17, x15, 912, x18)

inst_1639:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3af38b and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ebaf38b; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:920; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 920, x17, x15, 920, x18)

inst_1640:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3af38b and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ebaf38b; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:928; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 928, x17, x15, 928, x18)

inst_1641:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x38cc0f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3eb8cc0f; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:936; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 936, x17, x15, 936, x18)

inst_1642:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x38cc0f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3eb8cc0f; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:944; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 944, x17, x15, 944, x18)

inst_1643:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x38cc0f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3eb8cc0f; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:952; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 952, x17, x15, 952, x18)

inst_1644:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x38cc0f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3eb8cc0f; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:960; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 960, x17, x15, 960, x18)

inst_1645:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x38cc0f and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3eb8cc0f; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:968; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 968, x17, x15, 968, x18)

inst_1646:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2776a6 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e2776a6; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:976; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 976, x17, x15, 976, x18)

inst_1647:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2776a6 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e2776a6; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:984; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 984, x17, x15, 984, x18)

inst_1648:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2776a6 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e2776a6; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:992; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 992, x17, x15, 992, x18)

inst_1649:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2776a6 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e2776a6; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1000; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1000, x17, x15, 1000, x18)

inst_1650:
// fs1 == 0 and fe1 == 0x7c and fm1 == 0x2776a6 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e2776a6; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1008; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1008, x17, x15, 1008, x18)

inst_1651:
// fs1 == 0 and fe1 == 0x77 and fm1 == 0x0eb5c4 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3b8eb5c4; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1016; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1016, x17, x15, 1016, x18)

inst_1652:
// fs1 == 0 and fe1 == 0x77 and fm1 == 0x0eb5c4 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3b8eb5c4; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1024; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1024, x17, x15, 1024, x18)

inst_1653:
// fs1 == 0 and fe1 == 0x77 and fm1 == 0x0eb5c4 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3b8eb5c4; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1032; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1032, x17, x15, 1032, x18)

inst_1654:
// fs1 == 0 and fe1 == 0x77 and fm1 == 0x0eb5c4 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3b8eb5c4; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1040; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1040, x17, x15, 1040, x18)

inst_1655:
// fs1 == 0 and fe1 == 0x77 and fm1 == 0x0eb5c4 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3b8eb5c4; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1048; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1048, x17, x15, 1048, x18)

inst_1656:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3d9af9 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f3d9af9; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1056; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1056, x17, x15, 1056, x18)

inst_1657:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3d9af9 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f3d9af9; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1064; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1064, x17, x15, 1064, x18)

inst_1658:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3d9af9 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f3d9af9; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1072; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1072, x17, x15, 1072, x18)

inst_1659:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3d9af9 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f3d9af9; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1080; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1080, x17, x15, 1080, x18)

inst_1660:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x3d9af9 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f3d9af9; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1088; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1088, x17, x15, 1088, x18)

inst_1661:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7ca105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f7ca105; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1096; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1096, x17, x15, 1096, x18)

inst_1662:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7ca105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f7ca105; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1104; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1104, x17, x15, 1104, x18)

inst_1663:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7ca105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f7ca105; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1112; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1112, x17, x15, 1112, x18)

inst_1664:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7ca105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f7ca105; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1120; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1120, x17, x15, 1120, x18)

inst_1665:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x7ca105 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f7ca105; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1128; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1128, x17, x15, 1128, x18)

inst_1666:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3fa196 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ebfa196; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1136; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1136, x17, x15, 1136, x18)

inst_1667:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3fa196 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ebfa196; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1144; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1144, x17, x15, 1144, x18)

inst_1668:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3fa196 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ebfa196; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1152; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1152, x17, x15, 1152, x18)

inst_1669:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3fa196 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ebfa196; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1160; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1160, x17, x15, 1160, x18)

inst_1670:
// fs1 == 0 and fe1 == 0x7d and fm1 == 0x3fa196 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3ebfa196; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1168; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1168, x17, x15, 1168, x18)

inst_1671:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x214a9e and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f214a9e; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1176; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1176, x17, x15, 1176, x18)

inst_1672:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x214a9e and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f214a9e; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1184; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1184, x17, x15, 1184, x18)

inst_1673:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x214a9e and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f214a9e; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1192; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1192, x17, x15, 1192, x18)

inst_1674:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x214a9e and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f214a9e; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1200; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1200, x17, x15, 1200, x18)

inst_1675:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x214a9e and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f214a9e; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1208; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1208, x17, x15, 1208, x18)

inst_1676:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4314c0 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f4314c0; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1216; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1216, x17, x15, 1216, x18)

inst_1677:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4314c0 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f4314c0; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1224; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1224, x17, x15, 1224, x18)

inst_1678:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4314c0 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f4314c0; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1232; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1232, x17, x15, 1232, x18)

inst_1679:
// fs1 == 0 and fe1 == 0x7e and fm1 == 0x4314c0 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f4314c0; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1240; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1240, x17, x15, 1240, x18)

inst_1680:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x1caa68 and fs2 == 0 and fe2 == 0xa6 and fm2 == 0x1caa68 and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3d9caa68; op2val:0x531caa68; valaddr_reg:x16; val_offset:1248; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1248, x17, x15, 1248, x18)

inst_1681:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x1caa68 and fs2 == 0 and fe2 == 0xa6 and fm2 == 0x1caa68 and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3d9caa68; op2val:0x531caa68; valaddr_reg:x16; val_offset:1256; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1256, x17, x15, 1256, x18)

inst_1682:
// fs1 == 0 and fe1 == 0x7b and fm1 == 0x1caa68 and fs2 == 0 and fe2 == 0xa6 and fm2 == 0x1caa68 and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3d9caa68; op2val:0x531caa68; valaddr_reg:x16; val_offset:1264; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1264, x17, x15, 1264, x18)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
test_fp:
.word 0x3f4314c0
.word 0x7f7fffff
.word 0x3d9caa68
.word 0x531caa68
.word 0x3d9caa68
.word 0x3d9caa68
.word 0x3d9caa68
.word 0x3d9caa68
.word 0x3d9caa68
.word 0x531caa68
.word 0x3d9caa68
.word 0x531caa68
.word 0x3e284975
.word 0x53a84974
.word 0x3e284975
.word 0x53a84974
.word 0x3e284975
.word 0x53a84974
.word 0x3e284975
.word 0x53a84974
.word 0x3e284975
.word 0x53a84974
.word 0x3e8539a9
.word 0x540539a8
.word 0x3e8539a9
.word 0x540539a8
.word 0x3e8539a9
.word 0x540539a8
.word 0x3e8539a9
.word 0x540539a8
.word 0x3e8539a9
.word 0x540539a8
.word 0x3d92646b
.word 0x5312646b
.word 0x3d92646b
.word 0x5312646b
.word 0x3d92646b
.word 0x5312646b
.word 0x3d92646b
.word 0x5312646b
.word 0x3d92646b
.word 0x5312646b
.word 0x3f2a730b
.word 0x54aa730b
.word 0x3f2a730b
.word 0x54aa730b
.word 0x3f2a730b
.word 0x54aa730b
.word 0x3f2a730b
.word 0x54aa730b
.word 0x3f2a730b
.word 0x54aa730b
.word 0x3f62a4bf
.word 0x54e2a4be
.word 0x3f62a4bf
.word 0x54e2a4be
.word 0x3f62a4bf
.word 0x54e2a4be
.word 0x3f62a4bf
.word 0x54e2a4be
.word 0x3f62a4bf
.word 0x54e2a4be
.word 0x3f34e18a
.word 0x54b4e189
.word 0x3f34e18a
.word 0x54b4e189
.word 0x3f34e18a
.word 0x54b4e189
.word 0x3f34e18a
.word 0x54b4e189
.word 0x3f34e18a
.word 0x54b4e189
.word 0x3d5af971
.word 0x52daf970
.word 0x3d5af971
.word 0x52daf970
.word 0x3d5af971
.word 0x52daf970
.word 0x3d5af971
.word 0x52daf970
.word 0x3d5af971
.word 0x52daf970
.word 0x3f31fdac
.word 0x54b1fdab
.word 0x3f31fdac
.word 0x54b1fdab
.word 0x3f31fdac
.word 0x54b1fdab
.word 0x3f31fdac
.word 0x54b1fdab
.word 0x3f31fdac
.word 0x54b1fdab
.word 0x3d75645a
.word 0x52f5645a
.word 0x3d75645a
.word 0x52f5645a
.word 0x3d75645a
.word 0x52f5645a
.word 0x3d75645a
.word 0x52f5645a
.word 0x3d75645a
.word 0x52f5645a
.word 0x3e49200b
.word 0x53c9200b
.word 0x3e49200b
.word 0x53c9200b
.word 0x3e49200b
.word 0x53c9200b
.word 0x3e49200b
.word 0x53c9200b
.word 0x3e49200b
.word 0x53c9200b
.word 0x3cd63e60
.word 0x52563e60
.word 0x3cd63e60
.word 0x52563e60
.word 0x3cd63e60
.word 0x52563e60
.word 0x3cd63e60
.word 0x52563e60
.word 0x3cd63e60
.word 0x52563e60
.word 0x3dcc2f11
.word 0x534c2f11
.word 0x3dcc2f11
.word 0x534c2f11
.word 0x3dcc2f11
.word 0x534c2f11
.word 0x3dcc2f11
.word 0x534c2f11
.word 0x3dcc2f11
.word 0x534c2f11
.word 0x3f7230bf
.word 0x54f230bf
.word 0x3f7230bf
.word 0x54f230bf
.word 0x3f7230bf
.word 0x54f230bf
.word 0x3f7230bf
.word 0x54f230bf
.word 0x3f7230bf
.word 0x54f230bf
.word 0x3f5464fe
.word 0x54d464fd
.word 0x3f5464fe
.word 0x54d464fd
.word 0x3f5464fe
.word 0x54d464fd
.word 0x3f5464fe
.word 0x54d464fd
.word 0x3f5464fe
.word 0x54d464fd
.word 0x3f783e25
.word 0x54f83e24
.word 0x3f783e25
.word 0x54f83e24
.word 0x3f783e25
.word 0x54f83e24
.word 0x3f783e25
.word 0x54f83e24
.word 0x3f783e25
.word 0x54f83e24
.word 0x3ed0c398
.word 0x5450c397
.word 0x3ed0c398
.word 0x5450c397
.word 0x3ed0c398
.word 0x5450c397
.word 0x3ed0c398
.word 0x5450c397
.word 0x3ed0c398
.word 0x5450c397
.word 0x3ea29ca5
.word 0x54229ca4
.word 0x3ea29ca5
.word 0x54229ca4
.word 0x3ea29ca5
.word 0x54229ca4
.word 0x3ea29ca5
.word 0x54229ca4
.word 0x3ea29ca5
.word 0x54229ca4
.word 0x3f27bf2c
.word 0x54a7bf2c
.word 0x3f27bf2c
.word 0x54a7bf2c
.word 0x3f27bf2c
.word 0x54a7bf2c
.word 0x3f27bf2c
.word 0x54a7bf2c
.word 0x3f27bf2c
.word 0x54a7bf2c
.word 0x3e3dc756
.word 0x53bdc755
.word 0x3e3dc756
.word 0x53bdc755
.word 0x3e3dc756
.word 0x53bdc755
.word 0x3e3dc756
.word 0x53bdc755
.word 0x3e3dc756
.word 0x53bdc755
.word 0x3f4001c8
.word 0x54c001c8
.word 0x3f4001c8
.word 0x54c001c8
.word 0x3f4001c8
.word 0x54c001c8
.word 0x3f4001c8
.word 0x54c001c8
.word 0x3f4001c8
.word 0x54c001c8
.word 0x3d8961d6
.word 0x530961d5
.word 0x3d8961d6
.word 0x530961d5
.word 0x3d8961d6
.word 0x530961d5
.word 0x3d8961d6
.word 0x530961d5
.word 0x3d8961d6
.word 0x530961d5
.word 0x3e5940a7
.word 0x53d940a7
.word 0x3e5940a7
.word 0x53d940a7
.word 0x3e5940a7
.word 0x53d940a7
.word 0x3e5940a7
.word 0x53d940a7
.word 0x3e5940a7
.word 0x53d940a7
.word 0x3e8b6e04
.word 0x540b6e04
.word 0x3e8b6e04
.word 0x540b6e04
.word 0x3e8b6e04
.word 0x540b6e04
.word 0x3e8b6e04
.word 0x540b6e04
.word 0x3e8b6e04
.word 0x540b6e04
.word 0x3f60451a
.word 0x54e04519
.word 0x3f60451a
.word 0x54e04519
.word 0x3f60451a
.word 0x54e04519
.word 0x3f60451a
.word 0x54e04519
.word 0x3f60451a
.word 0x54e04519
.word 0x3ec14e05
.word 0x54414e05
.word 0x3ec14e05
.word 0x54414e05
.word 0x3ec14e05
.word 0x54414e05
.word 0x3ec14e05
.word 0x54414e05
.word 0x3ec14e05
.word 0x54414e05
.word 0x3f068188
.word 0x54868188
.word 0x3f068188
.word 0x54868188
.word 0x3f068188
.word 0x54868188
.word 0x3f068188
.word 0x54868188
.word 0x3f068188
.word 0x54868188
.word 0x3f47f57b
.word 0x54c7f57b
.word 0x3f47f57b
.word 0x54c7f57b
.word 0x3f47f57b
.word 0x54c7f57b
.word 0x3f47f57b
.word 0x54c7f57b
.word 0x3f47f57b
.word 0x54c7f57b
.word 0x3f792c9a
.word 0x54f92c99
.word 0x3f792c9a
.word 0x54f92c99
.word 0x3f792c9a
.word 0x54f92c99
.word 0x3f792c9a
.word 0x54f92c99
.word 0x3f792c9a
.word 0x54f92c99
.word 0x3f18c11e
.word 0x5498c11e
.word 0x3f18c11e
.word 0x5498c11e
.word 0x3f18c11e
.word 0x5498c11e
.word 0x3f18c11e
.word 0x5498c11e
.word 0x3f18c11e
.word 0x5498c11e
.word 0x3e97d648
.word 0x5417d648
.word 0x3e97d648
.word 0x5417d648
.word 0x3e97d648
.word 0x5417d648
.word 0x3e97d648
.word 0x5417d648
.word 0x3e97d648
.word 0x5417d648
.word 0x3f0d4e5d
.word 0x548d4e5c
.word 0x3f0d4e5d
.word 0x548d4e5c
.word 0x3f0d4e5d
.word 0x548d4e5c
.word 0x3f0d4e5d
.word 0x548d4e5c
.word 0x3f0d4e5d
.word 0x548d4e5c
.word 0x3f70b656
.word 0x54f0b655
.word 0x3f70b656
.word 0x54f0b655
.word 0x3f70b656
.word 0x54f0b655
.word 0x3f70b656
.word 0x54f0b655
.word 0x3f70b656
.word 0x54f0b655
.word 0x3f54eeaf
.word 0x54d4eeaf
.word 0x3f54eeaf
.word 0x54d4eeaf
.word 0x3f54eeaf
.word 0x54d4eeaf
.word 0x3f54eeaf
.word 0x54d4eeaf
.word 0x3f54eeaf
.word 0x54d4eeaf
.word 0x3f78f6e5
.word 0x54f8f6e5
.word 0x3f78f6e5
.word 0x54f8f6e5
.word 0x3f78f6e5
.word 0x54f8f6e5
.word 0x3f78f6e5
.word 0x54f8f6e5
.word 0x3f78f6e5
.word 0x54f8f6e5
.word 0x3f18a405
.word 0x5498a404
.word 0x3f18a405
.word 0x5498a404
.word 0x3f18a405
.word 0x5498a404
.word 0x3f18a405
.word 0x5498a404
.word 0x3f18a405
.word 0x5498a404
.word 0x3f4a6c23
.word 0x54ca6c23
.word 0x3f4a6c23
.word 0x54ca6c23
.word 0x3f4a6c23
.word 0x54ca6c23
.word 0x3f4a6c23
.word 0x54ca6c23
.word 0x3f4a6c23
.word 0x54ca6c23
.word 0x3f0a3e3e
.word 0x548a3e3d
.word 0x3f0a3e3e
.word 0x548a3e3d
.word 0x3f0a3e3e
.word 0x548a3e3d
.word 0x3f0a3e3e
.word 0x548a3e3d
.word 0x3f0a3e3e
.word 0x548a3e3d
.word 0x3e5e05fe
.word 0x53de05fd
.word 0x3e5e05fe
.word 0x53de05fd
.word 0x3e5e05fe
.word 0x53de05fd
.word 0x3e5e05fe
.word 0x53de05fd
.word 0x3e5e05fe
.word 0x53de05fd
.word 0x3f7f4f04
.word 0x54ff4f04
.word 0x3f7f4f04
.word 0x54ff4f04
.word 0x3f7f4f04
.word 0x54ff4f04
.word 0x3f7f4f04
.word 0x54ff4f04
.word 0x3f7f4f04
.word 0x54ff4f04
.word 0x3ece9aef
.word 0x544e9aef
.word 0x3ece9aef
.word 0x544e9aef
.word 0x3ece9aef
.word 0x544e9aef
.word 0x3ece9aef
.word 0x544e9aef
.word 0x3ece9aef
.word 0x544e9aef
.word 0x3f2107e6
.word 0x54a107e6
.word 0x3f2107e6
.word 0x54a107e6
.word 0x3f2107e6
.word 0x54a107e6
.word 0x3f2107e6
.word 0x54a107e6
.word 0x3f2107e6
.word 0x54a107e6
.word 0x54b83dbd
.word 0x3f383dbc
.word 0x54b83dbd
.word 0x3f383dbc
.word 0x54b83dbd
.word 0x3f383dbc
.word 0x54b83dbd
.word 0x3f383dbc
.word 0x54b83dbd
.word 0x3f383dbc
.word 0x53b8ec57
.word 0x3e38ec56
.word 0x53b8ec57
.word 0x3e38ec56
.word 0x53b8ec57
.word 0x3e38ec56
.word 0x53b8ec57
.word 0x3e38ec56
.word 0x53b8ec57
.word 0x3e38ec56
.word 0x54c1d139
.word 0x3f41d139
.word 0x54c1d139
.word 0x3f41d139
.word 0x54c1d139
.word 0x3f41d139
.word 0x54c1d139
.word 0x3f41d139
.word 0x54c1d139
.word 0x3f41d139
.word 0x541bfb13
.word 0x3e9bfb12
.word 0x541bfb13
.word 0x3e9bfb12
.word 0x541bfb13
.word 0x3e9bfb12
.word 0x541bfb13
.word 0x3e9bfb12
.word 0x541bfb13
.word 0x3e9bfb12
.word 0x54581ef5
.word 0x3ed81ef4
.word 0x54581ef5
.word 0x3ed81ef4
.word 0x54581ef5
.word 0x3ed81ef4
.word 0x54581ef5
.word 0x3ed81ef4
.word 0x54581ef5
.word 0x3ed81ef4
.word 0x54b303e2
.word 0x3f3303e1
.word 0x54b303e2
.word 0x3f3303e1
.word 0x54b303e2
.word 0x3f3303e1
.word 0x54b303e2
.word 0x3f3303e1
.word 0x54b303e2
.word 0x3f3303e1
.word 0x53a4ae97
.word 0x3e24ae97
.word 0x53a4ae97
.word 0x3e24ae97
.word 0x53a4ae97
.word 0x3e24ae97
.word 0x53a4ae97
.word 0x3e24ae97
.word 0x53a4ae97
.word 0x3e24ae97
.word 0x531fa038
.word 0x3d9fa037
.word 0x531fa038
.word 0x3d9fa037
.word 0x531fa038
.word 0x3d9fa037
.word 0x531fa038
.word 0x3d9fa037
.word 0x531fa038
.word 0x3d9fa037
.word 0x535f7b6e
.word 0x3ddf7b6d
.word 0x535f7b6e
.word 0x3ddf7b6d
.word 0x535f7b6e
.word 0x3ddf7b6d
.word 0x535f7b6e
.word 0x3ddf7b6d
.word 0x535f7b6e
.word 0x3ddf7b6d
.word 0x54c1c0e2
.word 0x3f41c0e2
.word 0x54c1c0e2
.word 0x3f41c0e2
.word 0x54c1c0e2
.word 0x3f41c0e2
.word 0x54c1c0e2
.word 0x3f41c0e2
.word 0x54c1c0e2
.word 0x3f41c0e2
.word 0x54dc88a4
.word 0x3f5c88a4
.word 0x54dc88a4
.word 0x3f5c88a4
.word 0x54dc88a4
.word 0x3f5c88a4
.word 0x54dc88a4
.word 0x3f5c88a4
.word 0x54dc88a4
.word 0x3f5c88a4
.word 0x54ce8299
.word 0x3f4e8299
.word 0x54ce8299
.word 0x3f4e8299
.word 0x54ce8299
.word 0x3f4e8299
.word 0x54ce8299
.word 0x3f4e8299
.word 0x54ce8299
.word 0x3f4e8299
.word 0x54bd5e44
.word 0x3f3d5e44
.word 0x54bd5e44
.word 0x3f3d5e44
.word 0x54bd5e44
.word 0x3f3d5e44
.word 0x54bd5e44
.word 0x3f3d5e44
.word 0x54bd5e44
.word 0x3f3d5e44
.word 0x54ed4e48
.word 0x3f6d4e48
.word 0x54ed4e48
.word 0x3f6d4e48
.word 0x54ed4e48
.word 0x3f6d4e48
.word 0x54ed4e48
.word 0x3f6d4e48
.word 0x54ed4e48
.word 0x3f6d4e48
.word 0x54dbb8f9
.word 0x3f5bb8f9
.word 0x54dbb8f9
.word 0x3f5bb8f9
.word 0x54dbb8f9
.word 0x3f5bb8f9
.word 0x54dbb8f9
.word 0x3f5bb8f9
.word 0x54dbb8f9
.word 0x3f5bb8f9
.word 0x54b1d538
.word 0x3f31d538
.word 0x54b1d538
.word 0x3f31d538
.word 0x54b1d538
.word 0x3f31d538
.word 0x54b1d538
.word 0x3f31d538
.word 0x54b1d538
.word 0x3f31d538
.word 0x54256fa9
.word 0x3ea56fa8
.word 0x54256fa9
.word 0x3ea56fa8
.word 0x54256fa9
.word 0x3ea56fa8
.word 0x54256fa9
.word 0x3ea56fa8
.word 0x54256fa9
.word 0x3ea56fa8
.word 0x5489f40b
.word 0x3f09f40a
.word 0x5489f40b
.word 0x3f09f40a
.word 0x5489f40b
.word 0x3f09f40a
.word 0x5489f40b
.word 0x3f09f40a
.word 0x5489f40b
.word 0x3f09f40a
.word 0x53ef0406
.word 0x3e6f0406
.word 0x53ef0406
.word 0x3e6f0406
.word 0x53ef0406
.word 0x3e6f0406
.word 0x53ef0406
.word 0x3e6f0406
.word 0x53ef0406
.word 0x3e6f0406
.word 0x52cf4946
.word 0x3d4f4946
.word 0x52cf4946
.word 0x3d4f4946
.word 0x52cf4946
.word 0x3d4f4946
.word 0x52cf4946
.word 0x3d4f4946
.word 0x52cf4946
.word 0x3d4f4946
.word 0x54cad922
.word 0x3f4ad921
.word 0x54cad922
.word 0x3f4ad921
.word 0x54cad922
.word 0x3f4ad921
.word 0x54cad922
.word 0x3f4ad921
.word 0x54cad922
.word 0x3f4ad921
.word 0x54e45d6a
.word 0x3f645d69
.word 0x54e45d6a
.word 0x3f645d69
.word 0x54e45d6a
.word 0x3f645d69
.word 0x54e45d6a
.word 0x3f645d69
.word 0x54e45d6a
.word 0x3f645d69
.word 0x5490e5ac
.word 0x3f10e5ac
.word 0x5490e5ac
.word 0x3f10e5ac
.word 0x5490e5ac
.word 0x3f10e5ac
.word 0x5490e5ac
.word 0x3f10e5ac
.word 0x5490e5ac
.word 0x3f10e5ac
.word 0x54a55d86
.word 0x3f255d86
.word 0x54a55d86
.word 0x3f255d86
.word 0x54a55d86
.word 0x3f255d86
.word 0x54a55d86
.word 0x3f255d86
.word 0x54a55d86
.word 0x3f255d86
.word 0x5297ce99
.word 0x3d17ce99
.word 0x5297ce99
.word 0x3d17ce99
.word 0x5297ce99
.word 0x3d17ce99
.word 0x5297ce99
.word 0x3d17ce99
.word 0x5297ce99
.word 0x3d17ce99
.word 0x53c61432
.word 0x3e461432
.word 0x53c61432
.word 0x3e461432
.word 0x53c61432
.word 0x3e461432
.word 0x53c61432
.word 0x3e461432
.word 0x53c61432
.word 0x3e461432
.word 0x54860d40
.word 0x3f060d40
.word 0x54860d40
.word 0x3f060d40
.word 0x54860d40
.word 0x3f060d40
.word 0x54860d40
.word 0x3f060d40
.word 0x54860d40
.word 0x3f060d40
.word 0x54a974bd
.word 0x3f2974bd
.word 0x54a974bd
.word 0x3f2974bd
.word 0x54a974bd
.word 0x3f2974bd
.word 0x54a974bd
.word 0x3f2974bd
.word 0x54a974bd
.word 0x3f2974bd
.word 0x509b8284
.word 0x3b1b8283
.word 0x509b8284
.word 0x3b1b8283
.word 0x509b8284
.word 0x3b1b8283
.word 0x509b8284
.word 0x3b1b8283
.word 0x509b8284
.word 0x3b1b8283
.word 0x5499f2fd
.word 0x3f19f2fd
.word 0x5499f2fd
.word 0x3f19f2fd
.word 0x5499f2fd
.word 0x3f19f2fd
.word 0x5499f2fd
.word 0x3f19f2fd
.word 0x5499f2fd
.word 0x3f19f2fd
.word 0x54dc29ab
.word 0x3f5c29aa
.word 0x54dc29ab
.word 0x3f5c29aa
.word 0x54dc29ab
.word 0x3f5c29aa
.word 0x54dc29ab
.word 0x3f5c29aa
.word 0x54dc29ab
.word 0x3f5c29aa
.word 0x54afc6fe
.word 0x3f2fc6fe
.word 0x54afc6fe
.word 0x3f2fc6fe
.word 0x54afc6fe
.word 0x3f2fc6fe
.word 0x54afc6fe
.word 0x3f2fc6fe
.word 0x54afc6fe
.word 0x3f2fc6fe
.word 0x54a2365b
.word 0x3f22365b
.word 0x54a2365b
.word 0x3f22365b
.word 0x54a2365b
.word 0x3f22365b
.word 0x54a2365b
.word 0x3f22365b
.word 0x54a2365b
.word 0x3f22365b
.word 0x548d779d
.word 0x3f0d779c
.word 0x548d779d
.word 0x3f0d779c
.word 0x548d779d
.word 0x3f0d779c
.word 0x548d779d
.word 0x3f0d779c
.word 0x548d779d
.word 0x3f0d779c
.word 0x54f306d2
.word 0x3f7306d1
.word 0x54f306d2
.word 0x3f7306d1
.word 0x54f306d2
.word 0x3f7306d1
.word 0x54f306d2
.word 0x3f7306d1
.word 0x54f306d2
.word 0x3f7306d1
.word 0x54cd9ba9
.word 0x3f4d9ba9
.word 0x54cd9ba9
.word 0x3f4d9ba9
.word 0x54cd9ba9
.word 0x3f4d9ba9
.word 0x54cd9ba9
.word 0x3f4d9ba9
.word 0x54cd9ba9
.word 0x3f4d9ba9
.word 0x54c81b10
.word 0x3f481b10
.word 0x54c81b10
.word 0x3f481b10
.word 0x54c81b10
.word 0x3f481b10
.word 0x54c81b10
.word 0x3f481b10
.word 0x54c81b10
.word 0x3f481b10
.word 0x53ceed34
.word 0x3e4eed33
.word 0x53ceed34
.word 0x3e4eed33
.word 0x53ceed34
.word 0x3e4eed33
.word 0x53ceed34
.word 0x3e4eed33
.word 0x53ceed34
.word 0x3e4eed33
.word 0x548710df
.word 0x3f0710df
.word 0x548710df
.word 0x3f0710df
.word 0x548710df
.word 0x3f0710df
.word 0x548710df
.word 0x3f0710df
.word 0x548710df
.word 0x3f0710df
.word 0x544bfda1
.word 0x3ecbfda1
.word 0x544bfda1
.word 0x3ecbfda1
.word 0x544bfda1
.word 0x3ecbfda1
.word 0x544bfda1
.word 0x3ecbfda1
.word 0x544bfda1
.word 0x3ecbfda1
.word 0x549787d3
.word 0x3f1787d3
.word 0x549787d3
.word 0x3f1787d3
.word 0x549787d3
.word 0x3f1787d3
.word 0x549787d3
.word 0x3f1787d3
.word 0x549787d3
.word 0x3f1787d3
.word 0x54d0d4df
.word 0x3f50d4df
.word 0x54d0d4df
.word 0x3f50d4df
.word 0x54d0d4df
.word 0x3f50d4df
.word 0x54d0d4df
.word 0x3f50d4df
.word 0x54d0d4df
.word 0x3f50d4df
.word 0x3f155613
.word 0x7e09d94d
.word 0x3f155613
.word 0x7e09d94d
.word 0x3f155613
.word 0x7e09d94d
.word 0x3f155613
.word 0x7e09d94d
.word 0x3f155613
.word 0x7e09d94d
.word 0x3f50adef
.word 0x7e40a08f
.word 0x3f50adef
.word 0x7e40a08f
.word 0x3f50adef
.word 0x7e40a08f
.word 0x3f50adef
.word 0x7e40a08f
.word 0x3f50adef
.word 0x7e40a08f
.word 0x3e625243
.word 0x7d50e979
.word 0x3e625243
.word 0x7d50e979
.word 0x3e625243
.word 0x7d50e979
.word 0x3e625243
.word 0x7d50e979
.word 0x3e625243
.word 0x7d50e979
.word 0x3f667d6c
.word 0x7e54c28b
.word 0x3f667d6c
.word 0x7e54c28b
.word 0x3f667d6c
.word 0x7e54c28b
.word 0x3f667d6c
.word 0x7e54c28b
.word 0x3f667d6c
.word 0x7e54c28b
.word 0x3f634b63
.word 0x7e51cf70
.word 0x3f634b63
.word 0x7e51cf70
.word 0x3f634b63
.word 0x7e51cf70
.word 0x3f634b63
.word 0x7e51cf70
.word 0x3f634b63
.word 0x7e51cf70
.word 0x3f25a95b
.word 0x7e18eb19
.word 0x3f25a95b
.word 0x7e18eb19
.word 0x3f25a95b
.word 0x7e18eb19
.word 0x3f25a95b
.word 0x7e18eb19
.word 0x3f25a95b
.word 0x7e18eb19
.word 0x3eeac0c2
.word 0x7dd8b1ee
.word 0x3eeac0c2
.word 0x7dd8b1ee
.word 0x3eeac0c2
.word 0x7dd8b1ee
.word 0x3eeac0c2
.word 0x7dd8b1ee
.word 0x3eeac0c2
.word 0x7dd8b1ee
.word 0x3f2ac983
.word 0x7e1da652
.word 0x3f2ac983
.word 0x7e1da652
.word 0x3f2ac983
.word 0x7e1da652
.word 0x3f2ac983
.word 0x7e1da652
.word 0x3f2ac983
.word 0x7e1da652
.word 0x3e6ca51d
.word 0x7d5a7108
.word 0x3e6ca51d
.word 0x7d5a7108
.word 0x3e6ca51d
.word 0x7d5a7108
.word 0x3e6ca51d
.word 0x7d5a7108
.word 0x3e6ca51d
.word 0x7d5a7108
.word 0x3efd966a
.word 0x7dea14b1
.word 0x3efd966a
.word 0x7dea14b1
.word 0x3efd966a
.word 0x7dea14b1
.word 0x3efd966a
.word 0x7dea14b1
.word 0x3efd966a
.word 0x7dea14b1
.word 0x3e0284d3
.word 0x7cf0f538
.word 0x3e0284d3
.word 0x7cf0f538
.word 0x3e0284d3
.word 0x7cf0f538
.word 0x3e0284d3
.word 0x7cf0f538
.word 0x3e0284d3
.word 0x7cf0f538
.word 0x3f3bf183
.word 0x7e2d7c79
.word 0x3f3bf183
.word 0x7e2d7c79
.word 0x3f3bf183
.word 0x7e2d7c79
.word 0x3f3bf183
.word 0x7e2d7c79
.word 0x3f3bf183
.word 0x7e2d7c79
.word 0x3e854e13
.word 0x7d7619fc
.word 0x3e854e13
.word 0x7d7619fc
.word 0x3e854e13
.word 0x7d7619fc
.word 0x3e854e13
.word 0x7d7619fc
.word 0x3e854e13
.word 0x7d7619fc
.word 0x3e7b697a
.word 0x7d681299
.word 0x3e7b697a
.word 0x7d681299
.word 0x3e7b697a
.word 0x7d681299
.word 0x3e7b697a
.word 0x7d681299
.word 0x3e7b697a
.word 0x7d681299
.word 0x3f6e7079
.word 0x7e5c190d
.word 0x3f6e7079
.word 0x7e5c190d
.word 0x3f6e7079
.word 0x7e5c190d
.word 0x3f6e7079
.word 0x7e5c190d
.word 0x3f6e7079
.word 0x7e5c190d
.word 0x3f3003c0
.word 0x7e22799e
.word 0x3f3003c0
.word 0x7e22799e
.word 0x3f3003c0
.word 0x7e22799e
.word 0x3f3003c0
.word 0x7e22799e
.word 0x3f3003c0
.word 0x7e22799e
.word 0x3eb47c9b
.word 0x7da69a68
.word 0x3eb47c9b
.word 0x7da69a68
.word 0x3eb47c9b
.word 0x7da69a68
.word 0x3eb47c9b
.word 0x7da69a68
.word 0x3eb47c9b
.word 0x7da69a68
.word 0x3ece1d49
.word 0x7dbe426b
.word 0x3ece1d49
.word 0x7dbe426b
.word 0x3ece1d49
.word 0x7dbe426b
.word 0x3ece1d49
.word 0x7dbe426b
.word 0x3ece1d49
.word 0x7dbe426b
.word 0x3f2b20db
.word 0x7e1df6f1
.word 0x3f2b20db
.word 0x7e1df6f1
.word 0x3f2b20db
.word 0x7e1df6f1
.word 0x3f2b20db
.word 0x7e1df6f1
.word 0x3f2b20db
.word 0x7e1df6f1
.word 0x3d8b9554
.word 0x7c80d89d
.word 0x3d8b9554
.word 0x7c80d89d
.word 0x3d8b9554
.word 0x7c80d89d
.word 0x3d8b9554
.word 0x7c80d89d
.word 0x3d8b9554
.word 0x7c80d89d
.word 0x3eb0732b
.word 0x7da2e077
.word 0x3eb0732b
.word 0x7da2e077
.word 0x3eb0732b
.word 0x7da2e077
.word 0x3eb0732b
.word 0x7da2e077
.word 0x3eb0732b
.word 0x7da2e077
.word 0x3f522636
.word 0x7e41fbe4
.word 0x3f522636
.word 0x7e41fbe4
.word 0x3f522636
.word 0x7e41fbe4
.word 0x3f522636
.word 0x7e41fbe4
.word 0x3f522636
.word 0x7e41fbe4
.word 0x3eb56b07
.word 0x7da7767d
.word 0x3eb56b07
.word 0x7da7767d
.word 0x3eb56b07
.word 0x7da7767d
.word 0x3eb56b07
.word 0x7da7767d
.word 0x3eb56b07
.word 0x7da7767d
.word 0x3ede01f1
.word 0x7dccee1a
.word 0x3ede01f1
.word 0x7dccee1a
.word 0x3ede01f1
.word 0x7dccee1a
.word 0x3ede01f1
.word 0x7dccee1a
.word 0x3ede01f1
.word 0x7dccee1a
.word 0x3e905612
.word 0x7d853bc3
.word 0x3e905612
.word 0x7d853bc3
.word 0x3e905612
.word 0x7d853bc3
.word 0x3e905612
.word 0x7d853bc3
.word 0x3e905612
.word 0x7d853bc3
.word 0x3f019108
.word 0x7def3324
.word 0x3f019108
.word 0x7def3324
.word 0x3f019108
.word 0x7def3324
.word 0x3f019108
.word 0x7def3324
.word 0x3f019108
.word 0x7def3324
.word 0x3eed7b7a
.word 0x7ddb36e8
.word 0x3eed7b7a
.word 0x7ddb36e8
.word 0x3eed7b7a
.word 0x7ddb36e8
.word 0x3eed7b7a
.word 0x7ddb36e8
.word 0x3eed7b7a
.word 0x7ddb36e8
.word 0x3d1e683f
.word 0x7c1238d8
.word 0x3d1e683f
.word 0x7c1238d8
.word 0x3d1e683f
.word 0x7c1238d8
.word 0x3d1e683f
.word 0x7c1238d8
.word 0x3d1e683f
.word 0x7c1238d8
.word 0x3f3c022d
.word 0x7e2d8bdb
.word 0x3f3c022d
.word 0x7e2d8bdb
.word 0x3f3c022d
.word 0x7e2d8bdb
.word 0x3f3c022d
.word 0x7e2d8bdb
.word 0x3f3c022d
.word 0x7e2d8bdb
.word 0x3eb11ca3
.word 0x7da37ce6
.word 0x3eb11ca3
.word 0x7da37ce6
.word 0x3eb11ca3
.word 0x7da37ce6
.word 0x3eb11ca3
.word 0x7da37ce6
.word 0x3eb11ca3
.word 0x7da37ce6
.word 0x3f3457e1
.word 0x7e267881
.word 0x3f3457e1
.word 0x7e267881
.word 0x3f3457e1
.word 0x7e267881
.word 0x3f3457e1
.word 0x7e267881
.word 0x3f3457e1
.word 0x7e267881
.word 0x3e690aed
.word 0x7d571dc8
.word 0x3e690aed
.word 0x7d571dc8
.word 0x3e690aed
.word 0x7d571dc8
.word 0x3e690aed
.word 0x7d571dc8
.word 0x3e690aed
.word 0x7d571dc8
.word 0x3d707c78
.word 0x7c5dfcbe
.word 0x3d707c78
.word 0x7c5dfcbe
.word 0x3d707c78
.word 0x7c5dfcbe
.word 0x3d707c78
.word 0x7c5dfcbe
.word 0x3d707c78
.word 0x7c5dfcbe
.word 0x3dbadafc
.word 0x7cac7b5f
.word 0x3dbadafc
.word 0x7cac7b5f
.word 0x3dbadafc
.word 0x7cac7b5f
.word 0x3dbadafc
.word 0x7cac7b5f
.word 0x3dbadafc
.word 0x7cac7b5f
.word 0x3f63314c
.word 0x7e51b75a
.word 0x3f63314c
.word 0x7e51b75a
.word 0x3f63314c
.word 0x7e51b75a
.word 0x3f63314c
.word 0x7e51b75a
.word 0x3f63314c
.word 0x7e51b75a
.word 0x3f39a93f
.word 0x7e2b6127
.word 0x3f39a93f
.word 0x7e2b6127
.word 0x3f39a93f
.word 0x7e2b6127
.word 0x3f39a93f
.word 0x7e2b6127
.word 0x3f39a93f
.word 0x7e2b6127
.word 0x3ee94a19
.word 0x7dd75818
.word 0x3ee94a19
.word 0x7dd75818
.word 0x3ee94a19
.word 0x7dd75818
.word 0x3ee94a19
.word 0x7dd75818
.word 0x3ee94a19
.word 0x7dd75818
.word 0x3d36f03b
.word 0x7c28ddc0
.word 0x3d36f03b
.word 0x7c28ddc0
.word 0x3d36f03b
.word 0x7c28ddc0
.word 0x3d36f03b
.word 0x7c28ddc0
.word 0x3d36f03b
.word 0x7c28ddc0
.word 0x3f4a3721
.word 0x7e3aa90b
.word 0x3f4a3721
.word 0x7e3aa90b
.word 0x3f4a3721
.word 0x7e3aa90b
.word 0x3f4a3721
.word 0x7e3aa90b
.word 0x3f4a3721
.word 0x7e3aa90b
.word 0x3f1053cc
.word 0x7e0539a9
.word 0x3f1053cc
.word 0x7e0539a9
.word 0x3f1053cc
.word 0x7e0539a9
.word 0x3f1053cc
.word 0x7e0539a9
.word 0x3f1053cc
.word 0x7e0539a9
.word 0x3f7e3cde
.word 0x7e6aae58
.word 0x3f7e3cde
.word 0x7e6aae58
.word 0x3f7e3cde
.word 0x7e6aae58
.word 0x3f7e3cde
.word 0x7e6aae58
.word 0x3f7e3cde
.word 0x7e6aae58
.word 0x3ed6e2e9
.word 0x7dc65b4e
.word 0x3ed6e2e9
.word 0x7dc65b4e
.word 0x3ed6e2e9
.word 0x7dc65b4e
.word 0x3ed6e2e9
.word 0x7dc65b4e
.word 0x3ed6e2e9
.word 0x7dc65b4e
.word 0x3f354efe
.word 0x7e2e0e64
.word 0x3f354efe
.word 0x7e2e0e64
.word 0x3f354efe
.word 0x7e2e0e64
.word 0x3f354efe
.word 0x7e2e0e64
.word 0x3f354efe
.word 0x7e2e0e64
.word 0x3f684897
.word 0x7e5efe01
.word 0x3f684897
.word 0x7e5efe01
.word 0x3f684897
.word 0x7e5efe01
.word 0x3f684897
.word 0x7e5efe01
.word 0x3f684897
.word 0x7e5efe01
.word 0x3e8ac4a6
.word 0x7d8537a9
.word 0x3e8ac4a6
.word 0x7d8537a9
.word 0x3e8ac4a6
.word 0x7d8537a9
.word 0x3e8ac4a6
.word 0x7d8537a9
.word 0x3e8ac4a6
.word 0x7d8537a9
.word 0x3f2fc3eb
.word 0x7e28bc15
.word 0x3f2fc3eb
.word 0x7e28bc15
.word 0x3f2fc3eb
.word 0x7e28bc15
.word 0x3f2fc3eb
.word 0x7e28bc15
.word 0x3f2fc3eb
.word 0x7e28bc15
.word 0x3f3eb7cc
.word 0x7e3716d9
.word 0x3f3eb7cc
.word 0x7e3716d9
.word 0x3f3eb7cc
.word 0x7e3716d9
.word 0x3f3eb7cc
.word 0x7e3716d9
.word 0x3f3eb7cc
.word 0x7e3716d9
.word 0x3e10cc52
.word 0x7d0b0197
.word 0x3e10cc52
.word 0x7d0b0197
.word 0x3e10cc52
.word 0x7d0b0197
.word 0x3e10cc52
.word 0x7d0b0197
.word 0x3e10cc52
.word 0x7d0b0197
.word 0x3f501498
.word 0x7e47c1d9
.word 0x3f501498
.word 0x7e47c1d9
.word 0x3f501498
.word 0x7e47c1d9
.word 0x3f501498
.word 0x7e47c1d9
.word 0x3f501498
.word 0x7e47c1d9
.word 0x3f4f74db
.word 0x7e472880
.word 0x3f4f74db
.word 0x7e472880
.word 0x3f4f74db
.word 0x7e472880
.word 0x3f4f74db
.word 0x7e472880
.word 0x3f4f74db
.word 0x7e472880
.word 0x3e15a015
.word 0x7d0fa3ec
.word 0x3e15a015
.word 0x7d0fa3ec
.word 0x3e15a015
.word 0x7d0fa3ec
.word 0x3e15a015
.word 0x7d0fa3ec
.word 0x3e15a015
.word 0x7d0fa3ec
.word 0x3ea6386a
.word 0x7d9f9252
.word 0x3ea6386a
.word 0x7d9f9252
.word 0x3ea6386a
.word 0x7d9f9252
.word 0x3ea6386a
.word 0x7d9f9252
.word 0x3ea6386a
.word 0x7d9f9252
.word 0x3f43e58a
.word 0x7e3c0f8f
.word 0x3f43e58a
.word 0x7e3c0f8f
.word 0x3f43e58a
.word 0x7e3c0f8f
.word 0x3f43e58a
.word 0x7e3c0f8f
.word 0x3f43e58a
.word 0x7e3c0f8f
.word 0x3f0858c9
.word 0x7e02e498
.word 0x3f0858c9
.word 0x7e02e498
.word 0x3f0858c9
.word 0x7e02e498
.word 0x3f0858c9
.word 0x7e02e498
.word 0x3f0858c9
.word 0x7e02e498
.word 0x3e886718
.word 0x7d82f255
.word 0x3e886718
.word 0x7d82f255
.word 0x3e886718
.word 0x7d82f255
.word 0x3e886718
.word 0x7d82f255
.word 0x3e886718
.word 0x7d82f255
.word 0x3e12ca9e
.word 0x7d0ceb79
.word 0x3e12ca9e
.word 0x7d0ceb79
.word 0x3e12ca9e
.word 0x7d0ceb79
.word 0x3e12ca9e
.word 0x7d0ceb79
.word 0x3e12ca9e
.word 0x7d0ceb79
.word 0x3f04c991
.word 0x7dfef3a6
.word 0x3f04c991
.word 0x7dfef3a6
.word 0x3f04c991
.word 0x7dfef3a6
.word 0x3f04c991
.word 0x7dfef3a6
.word 0x3f04c991
.word 0x7dfef3a6
.word 0x3e36aa86
.word 0x7d2f5c06
.word 0x3e36aa86
.word 0x7d2f5c06
.word 0x3e36aa86
.word 0x7d2f5c06
.word 0x3e36aa86
.word 0x7d2f5c06
.word 0x3e36aa86
.word 0x7d2f5c06
.word 0x3f082dae
.word 0x7e02bb36
.word 0x3f082dae
.word 0x7e02bb36
.word 0x3f082dae
.word 0x7e02bb36
.word 0x3f082dae
.word 0x7e02bb36
.word 0x3f082dae
.word 0x7e02bb36
.word 0x3f053999
.word 0x7dffcabf
.word 0x3f053999
.word 0x7dffcabf
.word 0x3f053999
.word 0x7dffcabf
.word 0x3f053999
.word 0x7dffcabf
.word 0x3f053999
.word 0x7dffcabf
.word 0x3f5b3c5d
.word 0x7e527764
.word 0x3f5b3c5d
.word 0x7e527764
.word 0x3f5b3c5d
.word 0x7e527764
.word 0x3f5b3c5d
.word 0x7e527764
.word 0x3f5b3c5d
.word 0x7e527764
.word 0x3f2d8ea5
.word 0x7e269d6b
.word 0x3f2d8ea5
.word 0x7e269d6b
.word 0x3f2d8ea5
.word 0x7e269d6b
.word 0x3f2d8ea5
.word 0x7e269d6b
.word 0x3f2d8ea5
.word 0x7e269d6b
.word 0x3f53e792
.word 0x7e4b6dab
.word 0x3f53e792
.word 0x7e4b6dab
.word 0x3f53e792
.word 0x7e4b6dab
.word 0x3f53e792
.word 0x7e4b6dab
.word 0x3f53e792
.word 0x7e4b6dab
.word 0x3f05402b
.word 0x7dffd75d
.word 0x3f05402b
.word 0x7dffd75d
.word 0x3f05402b
.word 0x7dffd75d
.word 0x3f05402b
.word 0x7dffd75d
.word 0x3f05402b
.word 0x7dffd75d
.word 0x3f484b0b
.word 0x7e40480b
.word 0x3f484b0b
.word 0x7e40480b
.word 0x3f484b0b
.word 0x7e40480b
.word 0x3f484b0b
.word 0x7e40480b
.word 0x3f484b0b
.word 0x7e40480b
.word 0x3ed4a8fa
.word 0x7dcc2756
.word 0x3ed4a8fa
.word 0x7dcc2756
.word 0x3ed4a8fa
.word 0x7dcc2756
.word 0x3ed4a8fa
.word 0x7dcc2756
.word 0x3ed4a8fa
.word 0x7dcc2756
.word 0x3f16387a
.word 0x7e103638
.word 0x3f16387a
.word 0x7e103638
.word 0x3f16387a
.word 0x7e103638
.word 0x3f16387a
.word 0x7e103638
.word 0x3f16387a
.word 0x7e103638
.word 0x3f344247
.word 0x7e2d0c6e
.word 0x3f344247
.word 0x7e2d0c6e
.word 0x3f344247
.word 0x7e2d0c6e
.word 0x3f344247
.word 0x7e2d0c6e
.word 0x3f344247
.word 0x7e2d0c6e
.word 0x3e9e23e4
.word 0x7d97d089
.word 0x3e9e23e4
.word 0x7d97d089
.word 0x3e9e23e4
.word 0x7d97d089
.word 0x3e9e23e4
.word 0x7d97d089
.word 0x3e9e23e4
.word 0x7d97d089
.word 0x3f2f6627
.word 0x7e286211
.word 0x3f2f6627
.word 0x7e286211
.word 0x3f2f6627
.word 0x7e286211
.word 0x3f2f6627
.word 0x7e286211
.word 0x3f2f6627
.word 0x7e286211
.word 0x3f4d028c
.word 0x7e44cf3f
.word 0x3f4d028c
.word 0x7e44cf3f
.word 0x3f4d028c
.word 0x7e44cf3f
.word 0x3f4d028c
.word 0x7e44cf3f
.word 0x3f4d028c
.word 0x7e44cf3f
.word 0x3f505b06
.word 0x7e480577
.word 0x3f505b06
.word 0x7e480577
.word 0x3f505b06
.word 0x7e480577
.word 0x3f505b06
.word 0x7e480577
.word 0x3f505b06
.word 0x7e480577
.word 0x3f0e940b
.word 0x7e08e00a
.word 0x3f0e940b
.word 0x7e08e00a
.word 0x3f0e940b
.word 0x7e08e00a
.word 0x3f0e940b
.word 0x7e08e00a
.word 0x3f0e940b
.word 0x7e08e00a
.word 0x3daac614
.word 0x7ca3f15b
.word 0x3daac614
.word 0x7ca3f15b
.word 0x3daac614
.word 0x7ca3f15b
.word 0x3daac614
.word 0x7ca3f15b
.word 0x3daac614
.word 0x7ca3f15b
.word 0x3f6775ab
.word 0x7e5e3386
.word 0x3f6775ab
.word 0x7e5e3386
.word 0x3f6775ab
.word 0x7e5e3386
.word 0x3f6775ab
.word 0x7e5e3386
.word 0x3f6775ab
.word 0x7e5e3386
.word 0x3dd21f45
.word 0x7cc9b79e
.word 0x3dd21f45
.word 0x7cc9b79e
.word 0x3dd21f45
.word 0x7cc9b79e
.word 0x3dd21f45
.word 0x7cc9b79e
.word 0x3dd21f45
.word 0x7cc9b79e
.word 0x3f042ade
.word 0x7dfdc2f2
.word 0x3f042ade
.word 0x7dfdc2f2
.word 0x3f042ade
.word 0x7dfdc2f2
.word 0x3f042ade
.word 0x7dfdc2f2
.word 0x3f042ade
.word 0x7dfdc2f2
.word 0x3ea6fc5f
.word 0x7da04e6f
.word 0x3ea6fc5f
.word 0x7da04e6f
.word 0x3ea6fc5f
.word 0x7da04e6f
.word 0x3ea6fc5f
.word 0x7da04e6f
.word 0x3ea6fc5f
.word 0x7da04e6f
.word 0x3e9e4a77
.word 0x7d97f591
.word 0x3e9e4a77
.word 0x7d97f591
.word 0x3e9e4a77
.word 0x7d97f591
.word 0x3e9e4a77
.word 0x7d97f591
.word 0x3e9e4a77
.word 0x7d97f591
.word 0x3e81539b
.word 0x7d784e9b
.word 0x3e81539b
.word 0x7d784e9b
.word 0x3e81539b
.word 0x7d784e9b
.word 0x3e81539b
.word 0x7d784e9b
.word 0x3e81539b
.word 0x7d784e9b
.word 0x3cdcb8b4
.word 0x7bd3e484
.word 0x3cdcb8b4
.word 0x7bd3e484
.word 0x3cdcb8b4
.word 0x7bd3e484
.word 0x3cdcb8b4
.word 0x7bd3e484
.word 0x3cdcb8b4
.word 0x7bd3e484
.word 0x3f6aaf70
.word 0x7e614c43
.word 0x3f6aaf70
.word 0x7e614c43
.word 0x3f6aaf70
.word 0x7e614c43
.word 0x3f6aaf70
.word 0x7e614c43
.word 0x3f6aaf70
.word 0x7e614c43
.word 0x3f2653c1
.word 0x7e1fac91
.word 0x3f2653c1
.word 0x7e1fac91
.word 0x3f2653c1
.word 0x7e1fac91
.word 0x3f2653c1
.word 0x7e1fac91
.word 0x3f2653c1
.word 0x7e1fac91
.word 0x3f21ed65
.word 0x7e1b7343
.word 0x3f21ed65
.word 0x7e1b7343
.word 0x3f21ed65
.word 0x7e1b7343
.word 0x3f21ed65
.word 0x7e1b7343
.word 0x3f21ed65
.word 0x7e1b7343
.word 0x3e7c5f24
.word 0x7d7c5f21
.word 0x3e7c5f24
.word 0x7d7c5f21
.word 0x3e7c5f24
.word 0x7d7c5f21
.word 0x3e7c5f24
.word 0x7d7c5f21
.word 0x3e7c5f24
.word 0x7d7c5f21
.word 0x3f400239
.word 0x7e400236
.word 0x3f400239
.word 0x7e400236
.word 0x3f400239
.word 0x7e400236
.word 0x3f400239
.word 0x7e400236
.word 0x3f400239
.word 0x7e400236
.word 0x3f420406
.word 0x7e420404
.word 0x3f420406
.word 0x7e420404
.word 0x3f420406
.word 0x7e420404
.word 0x3f420406
.word 0x7e420404
.word 0x3f420406
.word 0x7e420404
.word 0x3edf3e5c
.word 0x7ddf3e5a
.word 0x3edf3e5c
.word 0x7ddf3e5a
.word 0x3edf3e5c
.word 0x7ddf3e5a
.word 0x3edf3e5c
.word 0x7ddf3e5a
.word 0x3edf3e5c
.word 0x7ddf3e5a
.word 0x3f705929
.word 0x7e705926
.word 0x3f705929
.word 0x7e705926
.word 0x3f705929
.word 0x7e705926
.word 0x3f705929
.word 0x7e705926
.word 0x3f705929
.word 0x7e705926
.word 0x3e8087ab
.word 0x7d8087aa
.word 0x3e8087ab
.word 0x7d8087aa
.word 0x3e8087ab
.word 0x7d8087aa
.word 0x3e8087ab
.word 0x7d8087aa
.word 0x3e8087ab
.word 0x7d8087aa
.word 0x3e91d6d1
.word 0x7d91d6d0
.word 0x3e91d6d1
.word 0x7d91d6d0
.word 0x3e91d6d1
.word 0x7d91d6d0
.word 0x3e91d6d1
.word 0x7d91d6d0
.word 0x3e91d6d1
.word 0x7d91d6d0
.word 0x3e6e29d5
.word 0x7d6e29d3
.word 0x3e6e29d5
.word 0x7d6e29d3
.word 0x3e6e29d5
.word 0x7d6e29d3
.word 0x3e6e29d5
.word 0x7d6e29d3
.word 0x3e6e29d5
.word 0x7d6e29d3
.word 0x3e4e1533
.word 0x7d4e1531
.word 0x3e4e1533
.word 0x7d4e1531
.word 0x3e4e1533
.word 0x7d4e1531
.word 0x3e4e1533
.word 0x7d4e1531
.word 0x3e4e1533
.word 0x7d4e1531
.word 0x3d42ec59
.word 0x7c42ec57
.word 0x3d42ec59
.word 0x7c42ec57
.word 0x3d42ec59
.word 0x7c42ec57
.word 0x3d42ec59
.word 0x7c42ec57
.word 0x3d42ec59
.word 0x7c42ec57
.word 0x3ea72673
.word 0x7da72671
.word 0x3ea72673
.word 0x7da72671
.word 0x3ea72673
.word 0x7da72671
.word 0x3ea72673
.word 0x7da72671
.word 0x3ea72673
.word 0x7da72671
.word 0x3f60f390
.word 0x7e60f38f
.word 0x3f60f390
.word 0x7e60f38f
.word 0x3f60f390
.word 0x7e60f38f
.word 0x3f60f390
.word 0x7e60f38f
.word 0x3f60f390
.word 0x7e60f38f
.word 0x3f79fcbb
.word 0x7e79fcb9
.word 0x3f79fcbb
.word 0x7e79fcb9
.word 0x3f79fcbb
.word 0x7e79fcb9
.word 0x3f79fcbb
.word 0x7e79fcb9
.word 0x3f79fcbb
.word 0x7e79fcb9
.word 0x3df4cd3c
.word 0x7cf4cd3a
.word 0x3df4cd3c
.word 0x7cf4cd3a
.word 0x3df4cd3c
.word 0x7cf4cd3a
.word 0x3df4cd3c
.word 0x7cf4cd3a
.word 0x3df4cd3c
.word 0x7cf4cd3a
.word 0x3f687fde
.word 0x7e687fdb
.word 0x3f687fde
.word 0x7e687fdb
.word 0x3f687fde
.word 0x7e687fdb
.word 0x3f687fde
.word 0x7e687fdb
.word 0x3f687fde
.word 0x7e687fdb
.word 0x3e671cd8
.word 0x7d671cd6
.word 0x3e671cd8
.word 0x7d671cd6
.word 0x3e671cd8
.word 0x7d671cd6
.word 0x3e671cd8
.word 0x7d671cd6
.word 0x3e671cd8
.word 0x7d671cd6
.word 0x3f7ebeca
.word 0x7e7ebec7
.word 0x3f7ebeca
.word 0x7e7ebec7
.word 0x3f7ebeca
.word 0x7e7ebec7
.word 0x3f7ebeca
.word 0x7e7ebec7
.word 0x3f7ebeca
.word 0x7e7ebec7
.word 0x3f65990f
.word 0x7e65990c
.word 0x3f65990f
.word 0x7e65990c
.word 0x3f65990f
.word 0x7e65990c
.word 0x3f65990f
.word 0x7e65990c
.word 0x3f65990f
.word 0x7e65990c
.word 0x3e8853dc
.word 0x7d8853db
.word 0x3e8853dc
.word 0x7d8853db
.word 0x3e8853dc
.word 0x7d8853db
.word 0x3e8853dc
.word 0x7d8853db
.word 0x3e8853dc
.word 0x7d8853db
.word 0x3e5482e7
.word 0x7d5482e5
.word 0x3e5482e7
.word 0x7d5482e5
.word 0x3e5482e7
.word 0x7d5482e5
.word 0x3e5482e7
.word 0x7d5482e5
.word 0x3e5482e7
.word 0x7d5482e5
.word 0x3eace860
.word 0x7dace85e
.word 0x3eace860
.word 0x7dace85e
.word 0x3eace860
.word 0x7dace85e
.word 0x3eace860
.word 0x7dace85e
.word 0x3eace860
.word 0x7dace85e
.word 0x3f607980
.word 0x7e60797d
.word 0x3f607980
.word 0x7e60797d
.word 0x3f607980
.word 0x7e60797d
.word 0x3f607980
.word 0x7e60797d
.word 0x3f607980
.word 0x7e60797d
.word 0x3f3ce1ca
.word 0x7e3ce1c8
.word 0x3f3ce1ca
.word 0x7e3ce1c8
.word 0x3f3ce1ca
.word 0x7e3ce1c8
.word 0x3f3ce1ca
.word 0x7e3ce1c8
.word 0x3f3ce1ca
.word 0x7e3ce1c8
.word 0x3dd131d1
.word 0x7cd131cf
.word 0x3dd131d1
.word 0x7cd131cf
.word 0x3dd131d1
.word 0x7cd131cf
.word 0x3dd131d1
.word 0x7cd131cf
.word 0x3dd131d1
.word 0x7cd131cf
.word 0x3d8214a3
.word 0x7c8214a2
.word 0x3d8214a3
.word 0x7c8214a2
.word 0x3d8214a3
.word 0x7c8214a2
.word 0x3d8214a3
.word 0x7c8214a2
.word 0x3d8214a3
.word 0x7c8214a2
.word 0x3f12fb29
.word 0x7e12fb28
.word 0x3f12fb29
.word 0x7e12fb28
.word 0x3f12fb29
.word 0x7e12fb28
.word 0x3f12fb29
.word 0x7e12fb28
.word 0x3f12fb29
.word 0x7e12fb28
.word 0x3f6dacde
.word 0x7e6dacdc
.word 0x3f6dacde
.word 0x7e6dacdc
.word 0x3f6dacde
.word 0x7e6dacdc
.word 0x3f6dacde
.word 0x7e6dacdc
.word 0x3f6dacde
.word 0x7e6dacdc
.word 0x3eeda6b8
.word 0x7deda6b6
.word 0x3eeda6b8
.word 0x7deda6b6
.word 0x3eeda6b8
.word 0x7deda6b6
.word 0x3eeda6b8
.word 0x7deda6b6
.word 0x3eeda6b8
.word 0x7deda6b6
.word 0x3f0a0665
.word 0x7e0a0663
.word 0x3f0a0665
.word 0x7e0a0663
.word 0x3f0a0665
.word 0x7e0a0663
.word 0x3f0a0665
.word 0x7e0a0663
.word 0x3f0a0665
.word 0x7e0a0663
.word 0x3f145933
.word 0x7e145931
.word 0x3f145933
.word 0x7e145931
.word 0x3f145933
.word 0x7e145931
.word 0x3f145933
.word 0x7e145931
.word 0x3f145933
.word 0x7e145931
.word 0x3f00fc35
.word 0x7e00fc33
.word 0x3f00fc35
.word 0x7e00fc33
.word 0x3f00fc35
.word 0x7e00fc33
.word 0x3f00fc35
.word 0x7e00fc33
.word 0x3f00fc35
.word 0x7e00fc33
.word 0x3f118314
.word 0x7e118313
.word 0x3f118314
.word 0x7e118313
.word 0x3f118314
.word 0x7e118313
.word 0x3f118314
.word 0x7e118313
.word 0x3f118314
.word 0x7e118313
.word 0x3e4b9c79
.word 0x7d4b9c77
.word 0x3e4b9c79
.word 0x7d4b9c77
.word 0x3e4b9c79
.word 0x7d4b9c77
.word 0x3e4b9c79
.word 0x7d4b9c77
.word 0x3e4b9c79
.word 0x7d4b9c77
.word 0x3e5e9861
.word 0x7d5e985f
.word 0x3e5e9861
.word 0x7d5e985f
.word 0x3e5e9861
.word 0x7d5e985f
.word 0x3e5e9861
.word 0x7d5e985f
.word 0x3e5e9861
.word 0x7d5e985f
.word 0x3f207113
.word 0x7e207112
.word 0x3f207113
.word 0x7e207112
.word 0x3f207113
.word 0x7e207112
.word 0x3f207113
.word 0x7e207112
.word 0x3f207113
.word 0x7e207112
.word 0x3f6b8b97
.word 0x7e6b8b95
.word 0x3f6b8b97
.word 0x7e6b8b95
.word 0x3f6b8b97
.word 0x7e6b8b95
.word 0x3f6b8b97
.word 0x7e6b8b95
.word 0x3f6b8b97
.word 0x7e6b8b95
.word 0x3e9162d5
.word 0x7d9162d4
.word 0x3e9162d5
.word 0x7d9162d4
.word 0x3e9162d5
.word 0x7d9162d4
.word 0x3e9162d5
.word 0x7d9162d4
.word 0x3e9162d5
.word 0x7d9162d4
.word 0x3f605197
.word 0x7e605195
.word 0x3f605197
.word 0x7e605195
.word 0x3f605197
.word 0x7e605195
.word 0x3f605197
.word 0x7e605195
.word 0x3f605197
.word 0x7e605195
.word 0x3f4f1540
.word 0x7e4f153e
.word 0x3f4f1540
.word 0x7e4f153e
.word 0x3f4f1540
.word 0x7e4f153e
.word 0x3f4f1540
.word 0x7e4f153e
.word 0x3f4f1540
.word 0x7e4f153e
.word 0x3ed3a771
.word 0x7dd3a770
.word 0x3ed3a771
.word 0x7dd3a770
.word 0x3ed3a771
.word 0x7dd3a770
.word 0x3ed3a771
.word 0x7dd3a770
.word 0x3ed3a771
.word 0x7dd3a770
.word 0x3f2611e3
.word 0x7e2611e1
.word 0x3f2611e3
.word 0x7e2611e1
.word 0x3f2611e3
.word 0x7e2611e1
.word 0x3f2611e3
.word 0x7e2611e1
.word 0x3f2611e3
.word 0x7e2611e1
.word 0x3f2f216c
.word 0x7e2f216b
.word 0x3f2f216c
.word 0x7e2f216b
.word 0x3f2f216c
.word 0x7e2f216b
.word 0x3f2f216c
.word 0x7e2f216b
.word 0x3f2f216c
.word 0x7e2f216b
.word 0x3f69f383
.word 0x7eaf76a3
.word 0x3f69f383
.word 0x7eaf76a3
.word 0x3f69f383
.word 0x7eaf76a3
.word 0x3f69f383
.word 0x7eaf76a3
.word 0x3f69f383
.word 0x7eaf76a3
.word 0x3ccf519b
.word 0x7c1b7d35
.word 0x3ccf519b
.word 0x7c1b7d35
.word 0x3ccf519b
.word 0x7c1b7d35
.word 0x3ccf519b
.word 0x7c1b7d35
.word 0x3ccf519b
.word 0x7c1b7d35
.word 0x3f60187e
.word 0x7ea8125f
.word 0x3f60187e
.word 0x7ea8125f
.word 0x3f60187e
.word 0x7ea8125f
.word 0x3f60187e
.word 0x7ea8125f
.word 0x3f60187e
.word 0x7ea8125f
.word 0x3f71f66d
.word 0x7eb578d2
.word 0x3f71f66d
.word 0x7eb578d2
.word 0x3f71f66d
.word 0x7eb578d2
.word 0x3f71f66d
.word 0x7eb578d2
.word 0x3f71f66d
.word 0x7eb578d2
.word 0x3e64ddcc
.word 0x7daba659
.word 0x3e64ddcc
.word 0x7daba659
.word 0x3e64ddcc
.word 0x7daba659
.word 0x3e64ddcc
.word 0x7daba659
.word 0x3e64ddcc
.word 0x7daba659
.word 0x3f13b751
.word 0x7e5d92fb
.word 0x3f13b751
.word 0x7e5d92fb
.word 0x3f13b751
.word 0x7e5d92fb
.word 0x3f13b751
.word 0x7e5d92fb
.word 0x3f13b751
.word 0x7e5d92fb
.word 0x3f3b3df0
.word 0x7e8c6e74
.word 0x3f3b3df0
.word 0x7e8c6e74
.word 0x3f3b3df0
.word 0x7e8c6e74
.word 0x3f3b3df0
.word 0x7e8c6e74
.word 0x3f3b3df0
.word 0x7e8c6e74
.word 0x3f7337aa
.word 0x7eb669c0
.word 0x3f7337aa
.word 0x7eb669c0
.word 0x3f7337aa
.word 0x7eb669c0
.word 0x3f7337aa
.word 0x7eb669c0
.word 0x3f7337aa
.word 0x7eb669c0
.word 0x3ebe2732
.word 0x7e0e9d65
.word 0x3ebe2732
.word 0x7e0e9d65
.word 0x3ebe2732
.word 0x7e0e9d65
.word 0x3ebe2732
.word 0x7e0e9d65
.word 0x3ebe2732
.word 0x7e0e9d65
.word 0x3e34bcbd
.word 0x7d878d8e
.word 0x3e34bcbd
.word 0x7d878d8e
.word 0x3e34bcbd
.word 0x7d878d8e
.word 0x3e34bcbd
.word 0x7d878d8e
.word 0x3e34bcbd
.word 0x7d878d8e
.word 0x3da038e1
.word 0x7cf05552
.word 0x3da038e1
.word 0x7cf05552
.word 0x3da038e1
.word 0x7cf05552
.word 0x3da038e1
.word 0x7cf05552
.word 0x3da038e1
.word 0x7cf05552
.word 0x3f542588
.word 0x7e9f1c27
.word 0x3f542588
.word 0x7e9f1c27
.word 0x3f542588
.word 0x7e9f1c27
.word 0x3f542588
.word 0x7e9f1c27
.word 0x3f542588
.word 0x7e9f1c27
.word 0x3eee440d
.word 0x7e32b30a
.word 0x3eee440d
.word 0x7e32b30a
.word 0x3eee440d
.word 0x7e32b30a
.word 0x3eee440d
.word 0x7e32b30a
.word 0x3eee440d
.word 0x7e32b30a
.word 0x3f25edb4
.word 0x7e78e490
.word 0x3f25edb4
.word 0x7e78e490
.word 0x3f25edb4
.word 0x7e78e490
.word 0x3f25edb4
.word 0x7e78e490
.word 0x3f25edb4
.word 0x7e78e490
.word 0x3f05d662
.word 0x7e48c193
.word 0x3f05d662
.word 0x7e48c193
.word 0x3f05d662
.word 0x7e48c193
.word 0x3f05d662
.word 0x7e48c193
.word 0x3f05d662
.word 0x7e48c193
.word 0x3f3f5dcf
.word 0x7e8f865b
.word 0x3f3f5dcf
.word 0x7e8f865b
.word 0x3f3f5dcf
.word 0x7e8f865b
.word 0x3f3f5dcf
.word 0x7e8f865b
.word 0x3f3f5dcf
.word 0x7e8f865b
.word 0x3ec69273
.word 0x7e14edd6
.word 0x3ec69273
.word 0x7e14edd6
.word 0x3ec69273
.word 0x7e14edd6
.word 0x3ec69273
.word 0x7e14edd6
.word 0x3ec69273
.word 0x7e14edd6
.word 0x3f161473
.word 0x7e611ead
.word 0x3f161473
.word 0x7e611ead
.word 0x3f161473
.word 0x7e611ead
.word 0x3f161473
.word 0x7e611ead
.word 0x3f161473
.word 0x7e611ead
.word 0x3eac98e1
.word 0x7e0172a9
.word 0x3eac98e1
.word 0x7e0172a9
.word 0x3eac98e1
.word 0x7e0172a9
.word 0x3eac98e1
.word 0x7e0172a9
.word 0x3eac98e1
.word 0x7e0172a9
.word 0x3f540380
.word 0x7e9f02a0
.word 0x3f540380
.word 0x7e9f02a0
.word 0x3f540380
.word 0x7e9f02a0
.word 0x3f540380
.word 0x7e9f02a0
.word 0x3f540380
.word 0x7e9f02a0
.word 0x3f7ca28f
.word 0x7ebd79ec
.word 0x3f7ca28f
.word 0x7ebd79ec
.word 0x3f7ca28f
.word 0x7ebd79ec
.word 0x3f7ca28f
.word 0x7ebd79ec
.word 0x3f7ca28f
.word 0x7ebd79ec
.word 0x3dcd7747
.word 0x7d1a1976
.word 0x3dcd7747
.word 0x7d1a1976
.word 0x3dcd7747
.word 0x7d1a1976
.word 0x3dcd7747
.word 0x7d1a1976
.word 0x3dcd7747
.word 0x7d1a1976
.word 0x3d9bf203
.word 0x7ce9eb06
.word 0x3d9bf203
.word 0x7ce9eb06
.word 0x3d9bf203
.word 0x7ce9eb06
.word 0x3d9bf203
.word 0x7ce9eb06
.word 0x3d9bf203
.word 0x7ce9eb06
.word 0x3dc5687f
.word 0x7d140e5f
.word 0x3dc5687f
.word 0x7d140e5f
.word 0x3dc5687f
.word 0x7d140e5f
.word 0x3dc5687f
.word 0x7d140e5f
.word 0x3dc5687f
.word 0x7d140e5f
.word 0x3e425d0f
.word 0x7d91c5cb
.word 0x3e425d0f
.word 0x7d91c5cb
.word 0x3e425d0f
.word 0x7d91c5cb
.word 0x3e425d0f
.word 0x7d91c5cb
.word 0x3e425d0f
.word 0x7d91c5cb
.word 0x3ed298d5
.word 0x7e1df2a0
.word 0x3ed298d5
.word 0x7e1df2a0
.word 0x3ed298d5
.word 0x7e1df2a0
.word 0x3ed298d5
.word 0x7e1df2a0
.word 0x3ed298d5
.word 0x7e1df2a0
.word 0x3f45c4c4
.word 0x7e945393
.word 0x3f45c4c4
.word 0x7e945393
.word 0x3f45c4c4
.word 0x7e945393
.word 0x3f45c4c4
.word 0x7e945393
.word 0x3f45c4c4
.word 0x7e945393
.word 0x3f36015a
.word 0x7e888104
.word 0x3f36015a
.word 0x7e888104
.word 0x3f36015a
.word 0x7e888104
.word 0x3f36015a
.word 0x7e888104
.word 0x3f36015a
.word 0x7e888104
.word 0x3eac8cf1
.word 0x7e0169b4
.word 0x3eac8cf1
.word 0x7e0169b4
.word 0x3eac8cf1
.word 0x7e0169b4
.word 0x3eac8cf1
.word 0x7e0169b4
.word 0x3eac8cf1
.word 0x7e0169b4
.word 0x3e824ace
.word 0x7dc37036
.word 0x3e824ace
.word 0x7dc37036
.word 0x3e824ace
.word 0x7dc37036
.word 0x3e824ace
.word 0x7dc37036
.word 0x3e824ace
.word 0x7dc37036
.word 0x3d94bb41
.word 0x7cdf18e2
.word 0x3d94bb41
.word 0x7cdf18e2
.word 0x3d94bb41
.word 0x7cdf18e2
.word 0x3d94bb41
.word 0x7cdf18e2
.word 0x3d94bb41
.word 0x7cdf18e2
.word 0x3f10ce49
.word 0x7e59356e
.word 0x3f10ce49
.word 0x7e59356e
.word 0x3f10ce49
.word 0x7e59356e
.word 0x3f10ce49
.word 0x7e59356e
.word 0x3f10ce49
.word 0x7e59356e
.word 0x3df5cdf6
.word 0x7d385a79
.word 0x3df5cdf6
.word 0x7d385a79
.word 0x3df5cdf6
.word 0x7d385a79
.word 0x3df5cdf6
.word 0x7d385a79
.word 0x3df5cdf6
.word 0x7d385a79
.word 0x3f7ece7c
.word 0x7ebf1add
.word 0x3f7ece7c
.word 0x7ebf1add
.word 0x3f7ece7c
.word 0x7ebf1add
.word 0x3f7ece7c
.word 0x7ebf1add
.word 0x3f7ece7c
.word 0x7ebf1add
.word 0x3da295f9
.word 0x7cf3e0f6
.word 0x3da295f9
.word 0x7cf3e0f6
.word 0x3da295f9
.word 0x7cf3e0f6
.word 0x3da295f9
.word 0x7cf3e0f6
.word 0x3da295f9
.word 0x7cf3e0f6
.word 0x3f1489e0
.word 0x7e5eced0
.word 0x3f1489e0
.word 0x7e5eced0
.word 0x3f1489e0
.word 0x7e5eced0
.word 0x3f1489e0
.word 0x7e5eced0
.word 0x3f1489e0
.word 0x7e5eced0
.word 0x3f275553
.word 0x7e7afffd
.word 0x3f275553
.word 0x7e7afffd
.word 0x3f275553
.word 0x7e7afffd
.word 0x3f275553
.word 0x7e7afffd
.word 0x3f275553
.word 0x7e7afffd
.word 0x3e5315dc
.word 0x7d9e5065
.word 0x3e5315dc
.word 0x7d9e5065
.word 0x3e5315dc
.word 0x7d9e5065
.word 0x3e5315dc
.word 0x7d9e5065
.word 0x3e5315dc
.word 0x7d9e5065
.word 0x3f5eccb1
.word 0x7ea71985
.word 0x3f5eccb1
.word 0x7ea71985
.word 0x3f5eccb1
.word 0x7ea71985
.word 0x3f5eccb1
.word 0x7ea71985
.word 0x3f5eccb1
.word 0x7ea71985
.word 0x3e466458
.word 0x7d94cb42
.word 0x3e466458
.word 0x7d94cb42
.word 0x3e466458
.word 0x7d94cb42
.word 0x3e466458
.word 0x7d94cb42
.word 0x3e466458
.word 0x7d94cb42
.word 0x3e456670
.word 0x7d940cd4
.word 0x3e456670
.word 0x7d940cd4
.word 0x3e456670
.word 0x7d940cd4
.word 0x3e456670
.word 0x7d940cd4
.word 0x3e456670
.word 0x7d940cd4
.word 0x3f51007c
.word 0x7e9cc05e
.word 0x3f51007c
.word 0x7e9cc05e
.word 0x3f51007c
.word 0x7e9cc05e
.word 0x3f51007c
.word 0x7e9cc05e
.word 0x3f51007c
.word 0x7e9cc05e
.word 0x3e45dc30
.word 0x7d45dc32
.word 0x3e45dc30
.word 0x7d45dc32
.word 0x3e45dc30
.word 0x7d45dc32
.word 0x3e45dc30
.word 0x7d45dc32
.word 0x3e45dc30
.word 0x7d45dc32
.word 0x3ef0d4a5
.word 0x7df0d4a9
.word 0x3ef0d4a5
.word 0x7df0d4a9
.word 0x3ef0d4a5
.word 0x7df0d4a9
.word 0x3ef0d4a5
.word 0x7df0d4a9
.word 0x3ef0d4a5
.word 0x7df0d4a9
.word 0x3f466493
.word 0x7e466496
.word 0x3f466493
.word 0x7e466496
.word 0x3f466493
.word 0x7e466496
.word 0x3f466493
.word 0x7e466496
.word 0x3f466493
.word 0x7e466496
.word 0x3debba74
.word 0x7cebba77
.word 0x3debba74
.word 0x7cebba77
.word 0x3debba74
.word 0x7cebba77
.word 0x3debba74
.word 0x7cebba77
.word 0x3debba74
.word 0x7cebba77
.word 0x3f29cd5b
.word 0x7e29cd5e
.word 0x3f29cd5b
.word 0x7e29cd5e
.word 0x3f29cd5b
.word 0x7e29cd5e
.word 0x3f29cd5b
.word 0x7e29cd5e
.word 0x3f29cd5b
.word 0x7e29cd5e
.word 0x3e13ee95
.word 0x7d13ee97
.word 0x3e13ee95
.word 0x7d13ee97
.word 0x3e13ee95
.word 0x7d13ee97
.word 0x3e13ee95
.word 0x7d13ee97
.word 0x3e13ee95
.word 0x7d13ee97
.word 0x3e2a74c7
.word 0x7d2a74ca
.word 0x3e2a74c7
.word 0x7d2a74ca
.word 0x3e2a74c7
.word 0x7d2a74ca
.word 0x3e2a74c7
.word 0x7d2a74ca
.word 0x3e2a74c7
.word 0x7d2a74ca
.word 0x3f2d93a3
.word 0x7e2d93a5
.word 0x3f2d93a3
.word 0x7e2d93a5
.word 0x3f2d93a3
.word 0x7e2d93a5
.word 0x3f2d93a3
.word 0x7e2d93a5
.word 0x3f2d93a3
.word 0x7e2d93a5
.word 0x3e9a970a
.word 0x7d9a970c
.word 0x3e9a970a
.word 0x7d9a970c
.word 0x3e9a970a
.word 0x7d9a970c
.word 0x3e9a970a
.word 0x7d9a970c
.word 0x3e9a970a
.word 0x7d9a970c
.word 0x3f5006ec
.word 0x7e5006ef
.word 0x3f5006ec
.word 0x7e5006ef
.word 0x3f5006ec
.word 0x7e5006ef
.word 0x3f5006ec
.word 0x7e5006ef
.word 0x3f5006ec
.word 0x7e5006ef
.word 0x3e48e6a4
.word 0x7d48e6a7
.word 0x3e48e6a4
.word 0x7d48e6a7
.word 0x3e48e6a4
.word 0x7d48e6a7
.word 0x3e48e6a4
.word 0x7d48e6a7
.word 0x3e48e6a4
.word 0x7d48e6a7
.word 0x3f30a2be
.word 0x7e30a2c1
.word 0x3f30a2be
.word 0x7e30a2c1
.word 0x3f30a2be
.word 0x7e30a2c1
.word 0x3f30a2be
.word 0x7e30a2c1
.word 0x3f30a2be
.word 0x7e30a2c1
.word 0x3edc8a37
.word 0x7ddc8a3a
.word 0x3edc8a37
.word 0x7ddc8a3a
.word 0x3edc8a37
.word 0x7ddc8a3a
.word 0x3edc8a37
.word 0x7ddc8a3a
.word 0x3edc8a37
.word 0x7ddc8a3a
.word 0x3e693128
.word 0x7d69312c
.word 0x3e693128
.word 0x7d69312c
.word 0x3e693128
.word 0x7d69312c
.word 0x3e693128
.word 0x7d69312c
.word 0x3e693128
.word 0x7d69312c
.word 0x3f3318b9
.word 0x7e3318bc
.word 0x3f3318b9
.word 0x7e3318bc
.word 0x3f3318b9
.word 0x7e3318bc
.word 0x3f3318b9
.word 0x7e3318bc
.word 0x3f3318b9
.word 0x7e3318bc
.word 0x3f217f20
.word 0x7e217f22
.word 0x3f217f20
.word 0x7e217f22
.word 0x3f217f20
.word 0x7e217f22
.word 0x3f217f20
.word 0x7e217f22
.word 0x3f217f20
.word 0x7e217f22
.word 0x3f22d3d6
.word 0x7e22d3d9
.word 0x3f22d3d6
.word 0x7e22d3d9
.word 0x3f22d3d6
.word 0x7e22d3d9
.word 0x3f22d3d6
.word 0x7e22d3d9
.word 0x3f22d3d6
.word 0x7e22d3d9
.word 0x3ed08d4f
.word 0x7dd08d52
.word 0x3ed08d4f
.word 0x7dd08d52
.word 0x3ed08d4f
.word 0x7dd08d52
.word 0x3ed08d4f
.word 0x7dd08d52
.word 0x3ed08d4f
.word 0x7dd08d52
.word 0x3f3fb673
.word 0x7e3fb676
.word 0x3f3fb673
.word 0x7e3fb676
.word 0x3f3fb673
.word 0x7e3fb676
.word 0x3f3fb673
.word 0x7e3fb676
.word 0x3f3fb673
.word 0x7e3fb676
.word 0x3ea5e0aa
.word 0x7da5e0ac
.word 0x3ea5e0aa
.word 0x7da5e0ac
.word 0x3ea5e0aa
.word 0x7da5e0ac
.word 0x3ea5e0aa
.word 0x7da5e0ac
.word 0x3ea5e0aa
.word 0x7da5e0ac
.word 0x3f7a523f
.word 0x7e7a5243
.word 0x3f7a523f
.word 0x7e7a5243
.word 0x3f7a523f
.word 0x7e7a5243
.word 0x3f7a523f
.word 0x7e7a5243
.word 0x3f7a523f
.word 0x7e7a5243
.word 0x3e960a9d
.word 0x7d960aa0
.word 0x3e960a9d
.word 0x7d960aa0
.word 0x3e960a9d
.word 0x7d960aa0
.word 0x3e960a9d
.word 0x7d960aa0
.word 0x3e960a9d
.word 0x7d960aa0
.word 0x3ea4353a
.word 0x7da4353c
.word 0x3ea4353a
.word 0x7da4353c
.word 0x3ea4353a
.word 0x7da4353c
.word 0x3ea4353a
.word 0x7da4353c
.word 0x3ea4353a
.word 0x7da4353c
.word 0x3ebecd25
.word 0x7dbecd28
.word 0x3ebecd25
.word 0x7dbecd28
.word 0x3ebecd25
.word 0x7dbecd28
.word 0x3ebecd25
.word 0x7dbecd28
.word 0x3ebecd25
.word 0x7dbecd28
.word 0x3ebc52d5
.word 0x7dbc52d8
.word 0x3ebc52d5
.word 0x7dbc52d8
.word 0x3ebc52d5
.word 0x7dbc52d8
.word 0x3ebc52d5
.word 0x7dbc52d8
.word 0x3ebc52d5
.word 0x7dbc52d8
.word 0x3f7addd0
.word 0x7e7addd4
.word 0x3f7addd0
.word 0x7e7addd4
.word 0x3f7addd0
.word 0x7e7addd4
.word 0x3f7addd0
.word 0x7e7addd4
.word 0x3f7addd0
.word 0x7e7addd4
.word 0x3f15b4c6
.word 0x7e15b4c8
.word 0x3f15b4c6
.word 0x7e15b4c8
.word 0x3f15b4c6
.word 0x7e15b4c8
.word 0x3f15b4c6
.word 0x7e15b4c8
.word 0x3f15b4c6
.word 0x7e15b4c8
.word 0x3ee7341f
.word 0x7de73422
.word 0x3ee7341f
.word 0x7de73422
.word 0x3ee7341f
.word 0x7de73422
.word 0x3ee7341f
.word 0x7de73422
.word 0x3ee7341f
.word 0x7de73422
.word 0x3cb5e266
.word 0x7bb5e269
.word 0x3cb5e266
.word 0x7bb5e269
.word 0x3cb5e266
.word 0x7bb5e269
.word 0x3cb5e266
.word 0x7bb5e269
.word 0x3cb5e266
.word 0x7bb5e269
.word 0x3f432a4f
.word 0x7e432a52
.word 0x3f432a4f
.word 0x7e432a52
.word 0x3f432a4f
.word 0x7e432a52
.word 0x3f432a4f
.word 0x7e432a52
.word 0x3f432a4f
.word 0x7e432a52
.word 0x3f119d6e
.word 0x7e119d70
.word 0x3f119d6e
.word 0x7e119d70
.word 0x3f119d6e
.word 0x7e119d70
.word 0x3f119d6e
.word 0x7e119d70
.word 0x3f119d6e
.word 0x7e119d70
.word 0x3d733720
.word 0x7c733723
.word 0x3d733720
.word 0x7c733723
.word 0x3d733720
.word 0x7c733723
.word 0x3d733720
.word 0x7c733723
.word 0x3d733720
.word 0x7c733723
.word 0x3ee1a888
.word 0x7de1a88b
.word 0x3ee1a888
.word 0x7de1a88b
.word 0x3ee1a888
.word 0x7de1a88b
.word 0x3ee1a888
.word 0x7de1a88b
.word 0x3ee1a888
.word 0x7de1a88b
.word 0x3eb65437
.word 0x7db6543a
.word 0x3eb65437
.word 0x7db6543a
.word 0x3eb65437
.word 0x7db6543a
.word 0x3eb65437
.word 0x7db6543a
.word 0x3eb65437
.word 0x7db6543a
.word 0x3f0a2298
.word 0x7e0a229a
.word 0x3f0a2298
.word 0x7e0a229a
.word 0x3f0a2298
.word 0x7e0a229a
.word 0x3f0a2298
.word 0x7e0a229a
.word 0x3f0a2298
.word 0x7e0a229a
.word 0x3dd3a41c
.word 0x7cd3a41f
.word 0x3dd3a41c
.word 0x7cd3a41f
.word 0x3dd3a41c
.word 0x7cd3a41f
.word 0x3dd3a41c
.word 0x7cd3a41f
.word 0x3dd3a41c
.word 0x7cd3a41f
.word 0x3f2fa8cd
.word 0x7e2fa8d0
.word 0x3f2fa8cd
.word 0x7e2fa8d0
.word 0x3f2fa8cd
.word 0x7e2fa8d0
.word 0x3f2fa8cd
.word 0x7e2fa8d0
.word 0x3f2fa8cd
.word 0x7e2fa8d0
.word 0x3f7522ed
.word 0x7e7522f0
.word 0x3f7522ed
.word 0x7e7522f0
.word 0x3f7522ed
.word 0x7e7522f0
.word 0x3f7522ed
.word 0x7e7522f0
.word 0x3f7522ed
.word 0x7e7522f0
.word 0x3ec770da
.word 0x7dc770dd
.word 0x3ec770da
.word 0x7dc770dd
.word 0x3ec770da
.word 0x7dc770dd
.word 0x3ec770da
.word 0x7dc770dd
.word 0x3ec770da
.word 0x7dc770dd
.word 0x3f4d782f
.word 0x7e4d7832
.word 0x3f4d782f
.word 0x7e4d7832
.word 0x3f4d782f
.word 0x7e4d7832
.word 0x3f4d782f
.word 0x7e4d7832
.word 0x3f4d782f
.word 0x7e4d7832
.word 0x3eccebe3
.word 0x7dccebe6
.word 0x3eccebe3
.word 0x7dccebe6
.word 0x3eccebe3
.word 0x7dccebe6
.word 0x3eccebe3
.word 0x7dccebe6
.word 0x3eccebe3
.word 0x7dccebe6
.word 0x3f30b976
.word 0x7e30b979
.word 0x3f30b976
.word 0x7e30b979
.word 0x3f30b976
.word 0x7e30b979
.word 0x3f30b976
.word 0x7e30b979
.word 0x3f30b976
.word 0x7e30b979
.word 0x3efd398a
.word 0x7f7fffff
.word 0x3efd398a
.word 0x7f7fffff
.word 0x3efd398a
.word 0x7f7fffff
.word 0x3efd398a
.word 0x7f7fffff
.word 0x3efd398a
.word 0x7f7fffff
.word 0x3df3e7eb
.word 0x7f7fffff
.word 0x3df3e7eb
.word 0x7f7fffff
.word 0x3df3e7eb
.word 0x7f7fffff
.word 0x3df3e7eb
.word 0x7f7fffff
.word 0x3df3e7eb
.word 0x7f7fffff
.word 0x3e902891
.word 0x7f7fffff
.word 0x3e902891
.word 0x7f7fffff
.word 0x3e902891
.word 0x7f7fffff
.word 0x3e902891
.word 0x7f7fffff
.word 0x3e902891
.word 0x7f7fffff
.word 0x3ec55bfe
.word 0x7f7fffff
.word 0x3ec55bfe
.word 0x7f7fffff
.word 0x3ec55bfe
.word 0x7f7fffff
.word 0x3ec55bfe
.word 0x7f7fffff
.word 0x3ec55bfe
.word 0x7f7fffff
.word 0x3e02495c
.word 0x7f7fffff
.word 0x3e02495c
.word 0x7f7fffff
.word 0x3e02495c
.word 0x7f7fffff
.word 0x3e02495c
.word 0x7f7fffff
.word 0x3e02495c
.word 0x7f7fffff
.word 0x3f34c38b
.word 0x7f7fffff
.word 0x3f34c38b
.word 0x7f7fffff
.word 0x3f34c38b
.word 0x7f7fffff
.word 0x3f34c38b
.word 0x7f7fffff
.word 0x3f34c38b
.word 0x7f7fffff
.word 0x3f16ebf9
.word 0x7f7fffff
.word 0x3f16ebf9
.word 0x7f7fffff
.word 0x3f16ebf9
.word 0x7f7fffff
.word 0x3f16ebf9
.word 0x7f7fffff
.word 0x3f16ebf9
.word 0x7f7fffff
.word 0x3f6956e0
.word 0x7f7fffff
.word 0x3f6956e0
.word 0x7f7fffff
.word 0x3f6956e0
.word 0x7f7fffff
.word 0x3f6956e0
.word 0x7f7fffff
.word 0x3f6956e0
.word 0x7f7fffff
.word 0x3e159019
.word 0x7f7fffff
.word 0x3e159019
.word 0x7f7fffff
.word 0x3e159019
.word 0x7f7fffff
.word 0x3e159019
.word 0x7f7fffff
.word 0x3e159019
.word 0x7f7fffff
.word 0x3f370d07
.word 0x7f7fffff
.word 0x3f370d07
.word 0x7f7fffff
.word 0x3f370d07
.word 0x7f7fffff
.word 0x3f370d07
.word 0x7f7fffff
.word 0x3f370d07
.word 0x7f7fffff
.word 0x3e2c6ef8
.word 0x7f7fffff
.word 0x3e2c6ef8
.word 0x7f7fffff
.word 0x3e2c6ef8
.word 0x7f7fffff
.word 0x3e2c6ef8
.word 0x7f7fffff
.word 0x3e2c6ef8
.word 0x7f7fffff
.word 0x3e928693
.word 0x7f7fffff
.word 0x3e928693
.word 0x7f7fffff
.word 0x3e928693
.word 0x7f7fffff
.word 0x3e928693
.word 0x7f7fffff
.word 0x3e928693
.word 0x7f7fffff
.word 0x3dc32ec0
.word 0x7f7fffff
.word 0x3dc32ec0
.word 0x7f7fffff
.word 0x3dc32ec0
.word 0x7f7fffff
.word 0x3dc32ec0
.word 0x7f7fffff
.word 0x3dc32ec0
.word 0x7f7fffff
.word 0x3e0eb508
.word 0x7f7fffff
.word 0x3e0eb508
.word 0x7f7fffff
.word 0x3e0eb508
.word 0x7f7fffff
.word 0x3e0eb508
.word 0x7f7fffff
.word 0x3e0eb508
.word 0x7f7fffff
.word 0x3ea84ed5
.word 0x7f7fffff
.word 0x3ea84ed5
.word 0x7f7fffff
.word 0x3ea84ed5
.word 0x7f7fffff
.word 0x3ea84ed5
.word 0x7f7fffff
.word 0x3ea84ed5
.word 0x7f7fffff
.word 0x3e130bba
.word 0x7f7fffff
.word 0x3e130bba
.word 0x7f7fffff
.word 0x3e130bba
.word 0x7f7fffff
.word 0x3e130bba
.word 0x7f7fffff
.word 0x3e130bba
.word 0x7f7fffff
.word 0x3ea2d33c
.word 0x7f7fffff
.word 0x3ea2d33c
.word 0x7f7fffff
.word 0x3ea2d33c
.word 0x7f7fffff
.word 0x3ea2d33c
.word 0x7f7fffff
.word 0x3ea2d33c
.word 0x7f7fffff
.word 0x3ed4dcf2
.word 0x7f7fffff
.word 0x3ed4dcf2
.word 0x7f7fffff
.word 0x3ed4dcf2
.word 0x7f7fffff
.word 0x3ed4dcf2
.word 0x7f7fffff
.word 0x3ed4dcf2
.word 0x7f7fffff
.word 0x3f262aba
.word 0x7f7fffff
.word 0x3f262aba
.word 0x7f7fffff
.word 0x3f262aba
.word 0x7f7fffff
.word 0x3f262aba
.word 0x7f7fffff
.word 0x3f262aba
.word 0x7f7fffff
.word 0x3efc4aa5
.word 0x7f7fffff
.word 0x3efc4aa5
.word 0x7f7fffff
.word 0x3efc4aa5
.word 0x7f7fffff
.word 0x3efc4aa5
.word 0x7f7fffff
.word 0x3efc4aa5
.word 0x7f7fffff
.word 0x3ebf27f4
.word 0x7f7fffff
.word 0x3ebf27f4
.word 0x7f7fffff
.word 0x3ebf27f4
.word 0x7f7fffff
.word 0x3ebf27f4
.word 0x7f7fffff
.word 0x3ebf27f4
.word 0x7f7fffff
.word 0x3d0d64b2
.word 0x7f7fffff
.word 0x3d0d64b2
.word 0x7f7fffff
.word 0x3d0d64b2
.word 0x7f7fffff
.word 0x3d0d64b2
.word 0x7f7fffff
.word 0x3d0d64b2
.word 0x7f7fffff
.word 0x3f5d3125
.word 0x7f7fffff
.word 0x3f5d3125
.word 0x7f7fffff
.word 0x3f5d3125
.word 0x7f7fffff
.word 0x3f5d3125
.word 0x7f7fffff
.word 0x3f5d3125
.word 0x7f7fffff
.word 0x3df814c1
.word 0x7f7fffff
.word 0x3df814c1
.word 0x7f7fffff
.word 0x3df814c1
.word 0x7f7fffff
.word 0x3df814c1
.word 0x7f7fffff
.word 0x3df814c1
.word 0x7f7fffff
.word 0x3f0e2d50
.word 0x7f7fffff
.word 0x3f0e2d50
.word 0x7f7fffff
.word 0x3f0e2d50
.word 0x7f7fffff
.word 0x3f0e2d50
.word 0x7f7fffff
.word 0x3f0e2d50
.word 0x7f7fffff
.word 0x3f1ae3ad
.word 0x7f7fffff
.word 0x3f1ae3ad
.word 0x7f7fffff
.word 0x3f1ae3ad
.word 0x7f7fffff
.word 0x3f1ae3ad
.word 0x7f7fffff
.word 0x3f1ae3ad
.word 0x7f7fffff
.word 0x3e925d9e
.word 0x7f7fffff
.word 0x3e925d9e
.word 0x7f7fffff
.word 0x3e925d9e
.word 0x7f7fffff
.word 0x3e925d9e
.word 0x7f7fffff
.word 0x3e925d9e
.word 0x7f7fffff
.word 0x3e8ff64f
.word 0x7f7fffff
.word 0x3e8ff64f
.word 0x7f7fffff
.word 0x3e8ff64f
.word 0x7f7fffff
.word 0x3e8ff64f
.word 0x7f7fffff
.word 0x3e8ff64f
.word 0x7f7fffff
.word 0x3e09b33a
.word 0x7f7fffff
.word 0x3e09b33a
.word 0x7f7fffff
.word 0x3e09b33a
.word 0x7f7fffff
.word 0x3e09b33a
.word 0x7f7fffff
.word 0x3e09b33a
.word 0x7f7fffff
.word 0x3f32e01f
.word 0x7f7fffff
.word 0x3f32e01f
.word 0x7f7fffff
.word 0x3f32e01f
.word 0x7f7fffff
.word 0x3f32e01f
.word 0x7f7fffff
.word 0x3f32e01f
.word 0x7f7fffff
.word 0x3e77927d
.word 0x7f7fffff
.word 0x3e77927d
.word 0x7f7fffff
.word 0x3e77927d
.word 0x7f7fffff
.word 0x3e77927d
.word 0x7f7fffff
.word 0x3e77927d
.word 0x7f7fffff
.word 0x3ea83cc1
.word 0x7f7fffff
.word 0x3ea83cc1
.word 0x7f7fffff
.word 0x3ea83cc1
.word 0x7f7fffff
.word 0x3ea83cc1
.word 0x7f7fffff
.word 0x3ea83cc1
.word 0x7f7fffff
.word 0x3ef42197
.word 0x7f7fffff
.word 0x3ef42197
.word 0x7f7fffff
.word 0x3ef42197
.word 0x7f7fffff
.word 0x3ef42197
.word 0x7f7fffff
.word 0x3ef42197
.word 0x7f7fffff
.word 0x3ebaf38b
.word 0x7f7fffff
.word 0x3ebaf38b
.word 0x7f7fffff
.word 0x3ebaf38b
.word 0x7f7fffff
.word 0x3ebaf38b
.word 0x7f7fffff
.word 0x3ebaf38b
.word 0x7f7fffff
.word 0x3eb8cc0f
.word 0x7f7fffff
.word 0x3eb8cc0f
.word 0x7f7fffff
.word 0x3eb8cc0f
.word 0x7f7fffff
.word 0x3eb8cc0f
.word 0x7f7fffff
.word 0x3eb8cc0f
.word 0x7f7fffff
.word 0x3e2776a6
.word 0x7f7fffff
.word 0x3e2776a6
.word 0x7f7fffff
.word 0x3e2776a6
.word 0x7f7fffff
.word 0x3e2776a6
.word 0x7f7fffff
.word 0x3e2776a6
.word 0x7f7fffff
.word 0x3b8eb5c4
.word 0x7f7fffff
.word 0x3b8eb5c4
.word 0x7f7fffff
.word 0x3b8eb5c4
.word 0x7f7fffff
.word 0x3b8eb5c4
.word 0x7f7fffff
.word 0x3b8eb5c4
.word 0x7f7fffff
.word 0x3f3d9af9
.word 0x7f7fffff
.word 0x3f3d9af9
.word 0x7f7fffff
.word 0x3f3d9af9
.word 0x7f7fffff
.word 0x3f3d9af9
.word 0x7f7fffff
.word 0x3f3d9af9
.word 0x7f7fffff
.word 0x3f7ca105
.word 0x7f7fffff
.word 0x3f7ca105
.word 0x7f7fffff
.word 0x3f7ca105
.word 0x7f7fffff
.word 0x3f7ca105
.word 0x7f7fffff
.word 0x3f7ca105
.word 0x7f7fffff
.word 0x3ebfa196
.word 0x7f7fffff
.word 0x3ebfa196
.word 0x7f7fffff
.word 0x3ebfa196
.word 0x7f7fffff
.word 0x3ebfa196
.word 0x7f7fffff
.word 0x3ebfa196
.word 0x7f7fffff
.word 0x3f214a9e
.word 0x7f7fffff
.word 0x3f214a9e
.word 0x7f7fffff
.word 0x3f214a9e
.word 0x7f7fffff
.word 0x3f214a9e
.word 0x7f7fffff
.word 0x3f214a9e
.word 0x7f7fffff
.word 0x3f4314c0
.word 0x7f7fffff
.word 0x3f4314c0
.word 0x7f7fffff
.word 0x3f4314c0
.word 0x7f7fffff
.word 0x3f4314c0
.word 0x7f7fffff
.word 0x3d9caa68
.word 0x531caa68
.word 0x3d9caa68
.word 0x531caa68
.word 0x3d9caa68
.word 0x531caa68
RVTEST_DATA_END

RVMODEL_DATA_BEGIN


signature_x15_0:
    .fill 0*(XLEN/32),4,0xdeadbeef


signature_x15_1:
    .fill 508*(XLEN/32),4,0xdeadbeef


signature_x15_2:
    .fill 508*(XLEN/32),4,0xdeadbeef


signature_x15_3:
    .fill 508*(XLEN/32),4,0xdeadbeef


signature_x15_4:
    .fill 508*(XLEN/32),4,0xdeadbeef


signature_x15_5:
    .fill 508*(XLEN/32),4,0xdeadbeef


signature_x15_6:
    .fill 508*(XLEN/32),4,0xdeadbeef


signature_x15_7:
    .fill 318*(XLEN/32),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*(XLEN/32),4,0xdeadbeef

#endif

RVMODEL_DATA_END
