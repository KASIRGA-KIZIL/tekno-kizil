
// -----------
// This file was generated by riscv_ctg (https://gitlab.com/incoresemi/riscv-compliance/riscv_ctg)
// version   : 0.5.2
// timestamp : Tue Sep  7 17:29:32 2021 GMT
// usage     : riscv_ctg \
//                  -- cgf $cgf \
//                  -- xlen $xlen \
// -----------
//
// -----------
// Copyright (c) 2021. IIT Madras. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fcvt.s.w instruction of the RISC-V F extension for the fcvt.s.w_b25 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fcvt.s.w_b25)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x16,test_fp)
RVTEST_SIGBASE(x15,signature_x15_1)

inst_0:// rs1==x14, rd==f21, rs1_val == 0 and rm_val == 0  
// opcode: fcvt.s.w ; op1:x14; dest:f21; op1val:0x0; valaddr_reg:x16; val_offset:0; rmval:0x0; correctval:0; testreg:x18
TEST_FPIO_OP(fcvt.s.w, f21, x14, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_1:// rs1==x11, rd==f25, rs1_val == -1227077728 and rm_val == 4  
// opcode: fcvt.s.w ; op1:x11; dest:f25; op1val:-0x4923b860; valaddr_reg:x16; val_offset:4; rmval:0x4; correctval:0; testreg:x18
TEST_FPIO_OP(fcvt.s.w, f25, x11, 0x4, 0, x16, 4, x17, x15, 8, x18)

inst_2:// rs1==x13, rd==f30, rs1_val == -1227077728 and rm_val == 3  
// opcode: fcvt.s.w ; op1:x13; dest:f30; op1val:-0x4923b860; valaddr_reg:x16; val_offset:8; rmval:0x3; correctval:0; testreg:x18
TEST_FPIO_OP(fcvt.s.w, f30, x13, 0x3, 0, x16, 8, x17, x15, 16, x18)

inst_3:// rs1==x19, rd==f0, rs1_val == -1227077728 and rm_val == 2  
// opcode: fcvt.s.w ; op1:x19; dest:f0; op1val:-0x4923b860; valaddr_reg:x16; val_offset:12; rmval:0x2; correctval:0; testreg:x18
TEST_FPIO_OP(fcvt.s.w, f0, x19, 0x2, 0, x16, 12, x17, x15, 24, x18)

inst_4:// rs1==x2, rd==f15, rs1_val == -1227077728 and rm_val == 1  
// opcode: fcvt.s.w ; op1:x2; dest:f15; op1val:-0x4923b860; valaddr_reg:x16; val_offset:16; rmval:0x1; correctval:0; testreg:x18
TEST_FPIO_OP(fcvt.s.w, f15, x2, 0x1, 0, x16, 16, x17, x15, 32, x18)

inst_5:// rs1==x20, rd==f6, rs1_val == -1227077728 and rm_val == 0  
// opcode: fcvt.s.w ; op1:x20; dest:f6; op1val:-0x4923b860; valaddr_reg:x16; val_offset:20; rmval:0x0; correctval:0; testreg:x18
TEST_FPIO_OP(fcvt.s.w, f6, x20, 0x0, 0, x16, 20, x17, x15, 40, x18)
RVTEST_VALBASEMOV(x20, x16)
RVTEST_SIGBASE(x19,signature_x19_0)

inst_6:// rs1==x17, rd==f8, rs1_val == 1227077728 and rm_val == 4  
// opcode: fcvt.s.w ; op1:x17; dest:f8; op1val:0x4923b860; valaddr_reg:x20; val_offset:24; rmval:0x4; correctval:0; testreg:x18
TEST_FPIO_OP(fcvt.s.w, f8, x17, 0x4, 0, x20, 24, x21, x19, 0, x18)
RVTEST_VALBASEMOV(x16, x20)
RVTEST_SIGBASE(x15,signature_x15_2)

inst_7:// rs1==x24, rd==f3, rs1_val == 1227077728 and rm_val == 3  
// opcode: fcvt.s.w ; op1:x24; dest:f3; op1val:0x4923b860; valaddr_reg:x16; val_offset:28; rmval:0x3; correctval:0; testreg:x18
TEST_FPIO_OP(fcvt.s.w, f3, x24, 0x3, 0, x16, 28, x17, x15, 0, x18)

inst_8:// rs1==x31, rd==f22, rs1_val == 1227077728 and rm_val == 2  
// opcode: fcvt.s.w ; op1:x31; dest:f22; op1val:0x4923b860; valaddr_reg:x16; val_offset:32; rmval:0x2; correctval:0; testreg:x18
TEST_FPIO_OP(fcvt.s.w, f22, x31, 0x2, 0, x16, 32, x17, x15, 8, x18)

inst_9:// rs1==x23, rd==f29, rs1_val == 1227077728 and rm_val == 1  
// opcode: fcvt.s.w ; op1:x23; dest:f29; op1val:0x4923b860; valaddr_reg:x16; val_offset:36; rmval:0x1; correctval:0; testreg:x18
TEST_FPIO_OP(fcvt.s.w, f29, x23, 0x1, 0, x16, 36, x17, x15, 16, x18)

inst_10:// rs1==x5, rd==f16, rs1_val == 1227077728 and rm_val == 0  
// opcode: fcvt.s.w ; op1:x5; dest:f16; op1val:0x4923b860; valaddr_reg:x16; val_offset:40; rmval:0x0; correctval:0; testreg:x18
TEST_FPIO_OP(fcvt.s.w, f16, x5, 0x0, 0, x16, 40, x17, x15, 24, x18)

inst_11:// rs1==x8, rd==f11, rs1_val == -2147483647 and rm_val == 4  
// opcode: fcvt.s.w ; op1:x8; dest:f11; op1val:-0x7fffffff; valaddr_reg:x16; val_offset:44; rmval:0x4; correctval:0; testreg:x18
TEST_FPIO_OP(fcvt.s.w, f11, x8, 0x4, 0, x16, 44, x17, x15, 32, x18)

inst_12:// rs1==x6, rd==f13, rs1_val == -2147483647 and rm_val == 3  
// opcode: fcvt.s.w ; op1:x6; dest:f13; op1val:-0x7fffffff; valaddr_reg:x16; val_offset:48; rmval:0x3; correctval:0; testreg:x18
TEST_FPIO_OP(fcvt.s.w, f13, x6, 0x3, 0, x16, 48, x17, x15, 40, x18)

inst_13:// rs1==x4, rd==f20, rs1_val == -2147483647 and rm_val == 2  
// opcode: fcvt.s.w ; op1:x4; dest:f20; op1val:-0x7fffffff; valaddr_reg:x16; val_offset:52; rmval:0x2; correctval:0; testreg:x18
TEST_FPIO_OP(fcvt.s.w, f20, x4, 0x2, 0, x16, 52, x17, x15, 48, x18)

inst_14:// rs1==x10, rd==f17, rs1_val == -2147483647 and rm_val == 1  
// opcode: fcvt.s.w ; op1:x10; dest:f17; op1val:-0x7fffffff; valaddr_reg:x16; val_offset:56; rmval:0x1; correctval:0; testreg:x18
TEST_FPIO_OP(fcvt.s.w, f17, x10, 0x1, 0, x16, 56, x17, x15, 56, x18)

inst_15:// rs1==x29, rd==f9, rs1_val == -2147483647 and rm_val == 0  
// opcode: fcvt.s.w ; op1:x29; dest:f9; op1val:-0x7fffffff; valaddr_reg:x16; val_offset:60; rmval:0x0; correctval:0; testreg:x18
TEST_FPIO_OP(fcvt.s.w, f9, x29, 0x0, 0, x16, 60, x17, x15, 64, x18)

inst_16:// rs1==x21, rd==f2, rs1_val == 2147483647 and rm_val == 4  
// opcode: fcvt.s.w ; op1:x21; dest:f2; op1val:0x7fffffff; valaddr_reg:x16; val_offset:64; rmval:0x4; correctval:0; testreg:x18
TEST_FPIO_OP(fcvt.s.w, f2, x21, 0x4, 0, x16, 64, x17, x15, 72, x18)

inst_17:// rs1==x26, rd==f12, rs1_val == 2147483647 and rm_val == 3  
// opcode: fcvt.s.w ; op1:x26; dest:f12; op1val:0x7fffffff; valaddr_reg:x16; val_offset:68; rmval:0x3; correctval:0; testreg:x18
TEST_FPIO_OP(fcvt.s.w, f12, x26, 0x3, 0, x16, 68, x17, x15, 80, x18)

inst_18:// rs1==x27, rd==f24, rs1_val == 2147483647 and rm_val == 2  
// opcode: fcvt.s.w ; op1:x27; dest:f24; op1val:0x7fffffff; valaddr_reg:x16; val_offset:72; rmval:0x2; correctval:0; testreg:x18
TEST_FPIO_OP(fcvt.s.w, f24, x27, 0x2, 0, x16, 72, x17, x15, 88, x18)

inst_19:// rs1==x30, rd==f28, rs1_val == 2147483647 and rm_val == 1  
// opcode: fcvt.s.w ; op1:x30; dest:f28; op1val:0x7fffffff; valaddr_reg:x16; val_offset:76; rmval:0x1; correctval:0; testreg:x18
TEST_FPIO_OP(fcvt.s.w, f28, x30, 0x1, 0, x16, 76, x17, x15, 96, x18)

inst_20:// rs1==x28, rd==f1, rs1_val == 2147483647 and rm_val == 0  
// opcode: fcvt.s.w ; op1:x28; dest:f1; op1val:0x7fffffff; valaddr_reg:x16; val_offset:80; rmval:0x0; correctval:0; testreg:x18
TEST_FPIO_OP(fcvt.s.w, f1, x28, 0x0, 0, x16, 80, x17, x15, 104, x18)

inst_21:// rs1==x7, rd==f26, rs1_val == -1 and rm_val == 4  
// opcode: fcvt.s.w ; op1:x7; dest:f26; op1val:-0x1; valaddr_reg:x16; val_offset:84; rmval:0x4; correctval:0; testreg:x18
TEST_FPIO_OP(fcvt.s.w, f26, x7, 0x4, 0, x16, 84, x17, x15, 112, x18)
RVTEST_VALBASEMOV(x20, x16)
RVTEST_SIGBASE(x19,signature_x19_1)

inst_22:// rs1==x15, rd==f7, rs1_val == -1 and rm_val == 3  
// opcode: fcvt.s.w ; op1:x15; dest:f7; op1val:-0x1; valaddr_reg:x20; val_offset:88; rmval:0x3; correctval:0; testreg:x18
TEST_FPIO_OP(fcvt.s.w, f7, x15, 0x3, 0, x20, 88, x21, x19, 0, x18)
RVTEST_VALBASEMOV(x16, x20)
RVTEST_SIGBASE(x15,signature_x15_3)

inst_23:// rs1==x18, rd==f23, rs1_val == -1 and rm_val == 2  
// opcode: fcvt.s.w ; op1:x18; dest:f23; op1val:-0x1; valaddr_reg:x16; val_offset:92; rmval:0x2; correctval:0; testreg:x22
TEST_FPIO_OP(fcvt.s.w, f23, x18, 0x2, 0, x16, 92, x17, x15, 0, x22)

inst_24:// rs1==x1, rd==f10, rs1_val == -1 and rm_val == 1  
// opcode: fcvt.s.w ; op1:x1; dest:f10; op1val:-0x1; valaddr_reg:x16; val_offset:96; rmval:0x1; correctval:0; testreg:x18
TEST_FPIO_OP(fcvt.s.w, f10, x1, 0x1, 0, x16, 96, x17, x15, 8, x18)

inst_25:// rs1==x25, rd==f27, rs1_val == -1 and rm_val == 0  
// opcode: fcvt.s.w ; op1:x25; dest:f27; op1val:-0x1; valaddr_reg:x16; val_offset:100; rmval:0x0; correctval:0; testreg:x18
TEST_FPIO_OP(fcvt.s.w, f27, x25, 0x0, 0, x16, 100, x17, x15, 16, x18)
RVTEST_VALBASEMOV(x20, x16)
RVTEST_SIGBASE(x19,signature_x19_2)

inst_26:// rs1==x16, rd==f19, rs1_val == 1 and rm_val == 4  
// opcode: fcvt.s.w ; op1:x16; dest:f19; op1val:0x1; valaddr_reg:x20; val_offset:104; rmval:0x4; correctval:0; testreg:x18
TEST_FPIO_OP(fcvt.s.w, f19, x16, 0x4, 0, x20, 104, x21, x19, 0, x18)
RVTEST_VALBASEMOV(x16, x20)
RVTEST_SIGBASE(x15,signature_x15_4)

inst_27:// rs1==x3, rd==f5, rs1_val == 1 and rm_val == 3  
// opcode: fcvt.s.w ; op1:x3; dest:f5; op1val:0x1; valaddr_reg:x16; val_offset:108; rmval:0x3; correctval:0; testreg:x18
TEST_FPIO_OP(fcvt.s.w, f5, x3, 0x3, 0, x16, 108, x17, x15, 0, x18)

inst_28:// rs1==x9, rd==f18, rs1_val == 1 and rm_val == 2  
// opcode: fcvt.s.w ; op1:x9; dest:f18; op1val:0x1; valaddr_reg:x16; val_offset:112; rmval:0x2; correctval:0; testreg:x18
TEST_FPIO_OP(fcvt.s.w, f18, x9, 0x2, 0, x16, 112, x17, x15, 8, x18)

inst_29:// rs1==x0, rd==f4, rs1_val == 1 and rm_val == 1  
// opcode: fcvt.s.w ; op1:x0; dest:f4; op1val:0x0; valaddr_reg:x16; val_offset:116; rmval:0x1; correctval:0; testreg:x18
TEST_FPIO_OP(fcvt.s.w, f4, x0, 0x1, 0, x16, 116, x17, x15, 16, x18)

inst_30:// rs1==x12, rd==f14, rs1_val == 1 and rm_val == 0  
// opcode: fcvt.s.w ; op1:x12; dest:f14; op1val:0x1; valaddr_reg:x16; val_offset:120; rmval:0x0; correctval:0; testreg:x18
TEST_FPIO_OP(fcvt.s.w, f14, x12, 0x0, 0, x16, 120, x17, x15, 24, x18)

inst_31:// rs1==x22, rd==f31, rs1_val == 0 and rm_val == 4  
// opcode: fcvt.s.w ; op1:x22; dest:f31; op1val:0x0; valaddr_reg:x16; val_offset:124; rmval:0x4; correctval:0; testreg:x18
TEST_FPIO_OP(fcvt.s.w, f31, x22, 0x4, 0, x16, 124, x17, x15, 32, x18)

inst_32:// rs1_val == 0 and rm_val == 3  
// opcode: fcvt.s.w ; op1:x10; dest:f11; op1val:0x0; valaddr_reg:x16; val_offset:128; rmval:0x3; correctval:0; testreg:x18
TEST_FPIO_OP(fcvt.s.w, f11, x10, 0x3, 0, x16, 128, x17, x15, 40, x18)

inst_33:// rs1_val == 0 and rm_val == 2  
// opcode: fcvt.s.w ; op1:x10; dest:f11; op1val:0x0; valaddr_reg:x16; val_offset:132; rmval:0x2; correctval:0; testreg:x18
TEST_FPIO_OP(fcvt.s.w, f11, x10, 0x2, 0, x16, 132, x17, x15, 48, x18)

inst_34:// rs1_val == 0 and rm_val == 1  
// opcode: fcvt.s.w ; op1:x10; dest:f11; op1val:0x0; valaddr_reg:x16; val_offset:136; rmval:0x1; correctval:0; testreg:x18
TEST_FPIO_OP(fcvt.s.w, f11, x10, 0x1, 0, x16, 136, x17, x15, 56, x18)

inst_35:// rs1_val == 1 and rm_val == 1  
// opcode: fcvt.s.w ; op1:x10; dest:f11; op1val:0x1; valaddr_reg:x16; val_offset:140; rmval:0x1; correctval:0; testreg:x18
TEST_FPIO_OP(fcvt.s.w, f11, x10, 0x1, 0, x16, 140, x17, x15, 64, x18)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
test_fp:
.word 0x0
.word -0x4923b860
.word -0x4923b860
.word -0x4923b860
.word -0x4923b860
.word -0x4923b860
.word 0x4923b860
.word 0x4923b860
.word 0x4923b860
.word 0x4923b860
.word 0x4923b860
.word -0x7fffffff
.word -0x7fffffff
.word -0x7fffffff
.word -0x7fffffff
.word -0x7fffffff
.word 0x7fffffff
.word 0x7fffffff
.word 0x7fffffff
.word 0x7fffffff
.word 0x7fffffff
.word -0x1
.word -0x1
.word -0x1
.word -0x1
.word -0x1
.word 0x1
.word 0x1
.word 0x1
.word 0x0
.word 0x1
.word 0x0
.word 0x0
.word 0x0
.word 0x0
.word 0x1
RVTEST_DATA_END

RVMODEL_DATA_BEGIN


signature_x15_0:
    .fill 0*(XLEN/32),4,0xdeadbeef


signature_x15_1:
    .fill 12*(XLEN/32),4,0xdeadbeef


signature_x19_0:
    .fill 2*(XLEN/32),4,0xdeadbeef


signature_x15_2:
    .fill 30*(XLEN/32),4,0xdeadbeef


signature_x19_1:
    .fill 2*(XLEN/32),4,0xdeadbeef


signature_x15_3:
    .fill 6*(XLEN/32),4,0xdeadbeef


signature_x19_2:
    .fill 2*(XLEN/32),4,0xdeadbeef


signature_x15_4:
    .fill 18*(XLEN/32),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*(XLEN/32),4,0xdeadbeef

#endif

RVMODEL_DATA_END
