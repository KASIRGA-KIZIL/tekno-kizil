
// -----------
// This file was generated by riscv_ctg (https://gitlab.com/incoresemi/riscv-compliance/riscv_ctg)
// version   : 0.5.2
// timestamp : Tue Sep  7 16:07:58 2021 GMT
// usage     : riscv_ctg \
//                  -- cgf $cgf \
//                  -- xlen $xlen \
// -----------
//
// -----------
// Copyright (c) 2021. IIT Madras. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmadd.s instruction of the RISC-V F extension for the fmadd_b6 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fmadd_b6)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x16,test_fp)
RVTEST_SIGBASE(x15,signature_x15_1)

inst_0:
// rs1 == rs3 != rs2 and rs1 == rs3 != rd and rd != rs2, rs1==f4, rs2==f9, rs3==f4, rd==f30, fs1 == 0 and fe1 == 0x1b and fm1 == 0x079143 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x618104 and fs3 == 0 and fe3 == 0x1a and fm3 == 0x6ed5fe and rm_val == 0  
// opcode: fmadd.s ; op1:f4; op2:f9; op3:f4; dest:f30; op1val:0xd879143; op2val:0xbf618104; op3val:0xd879143; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f30, f4, f9, f4, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_1:
// rs2 == rd != rs1 and rs2 == rd != rs3 and rs3 != rs1, rs1==f6, rs2==f8, rs3==f10, rd==f8, fs1 == 0 and fe1 == 0x1a and fm1 == 0x383b17 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4f8193 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x155507 and rm_val == 4  
// opcode: fmadd.s ; op1:f6; op2:f8; op3:f10; dest:f8; op1val:0xd383b17; op2val:0xbfcf8193; op3val:0xd955507; valaddr_reg:x16; val_offset:12; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f8, f6, f8, f10, 0x4, 0, x16, 12, x17, x15, 8, x18)

inst_2:
// rs3 == rd != rs1 and rs3 == rd != rs2 and rs2 != rs1, rs1==f24, rs2==f6, rs3==f11, rd==f11, fs1 == 0 and fe1 == 0x1a and fm1 == 0x383b17 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4f8193 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x155507 and rm_val == 3  
// opcode: fmadd.s ; op1:f24; op2:f6; op3:f11; dest:f11; op1val:0xd383b17; op2val:0xbfcf8193; op3val:0xd955507; valaddr_reg:x16; val_offset:24; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f11, f24, f6, f11, 0x3, 0, x16, 24, x17, x15, 16, x18)

inst_3:
// rs1 == rs2 != rs3 and rs1 == rs2 != rd and rd != rs3, rs1==f18, rs2==f18, rs3==f2, rd==f27, fs1 == 0 and fe1 == 0x1a and fm1 == 0x383b17 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4f8193 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x155507 and rm_val == 2  
// opcode: fmadd.s ; op1:f18; op2:f18; op3:f2; dest:f27; op1val:0xd383b17; op2val:0xd383b17; op3val:0xd955507; valaddr_reg:x16; val_offset:36; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f27, f18, f18, f2, 0x2, 0, x16, 36, x17, x15, 24, x18)

inst_4:
// rs1 == rs2 == rd != rs3, rs1==f26, rs2==f26, rs3==f31, rd==f26, fs1 == 0 and fe1 == 0x1a and fm1 == 0x383b17 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4f8193 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x155507 and rm_val == 1  
// opcode: fmadd.s ; op1:f26; op2:f26; op3:f31; dest:f26; op1val:0xd383b17; op2val:0xd383b17; op3val:0xd955507; valaddr_reg:x16; val_offset:48; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f26, f26, f26, f31, 0x1, 0, x16, 48, x17, x15, 32, x18)

inst_5:
// rs1 == rs2 == rs3 != rd, rs1==f12, rs2==f12, rs3==f12, rd==f1, fs1 == 0 and fe1 == 0x1a and fm1 == 0x383b17 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4f8193 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x155507 and rm_val == 0  
// opcode: fmadd.s ; op1:f12; op2:f12; op3:f12; dest:f1; op1val:0xd383b17; op2val:0xd383b17; op3val:0xd383b17; valaddr_reg:x16; val_offset:60; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f1, f12, f12, f12, 0x0, 0, x16, 60, x17, x15, 40, x18)

inst_6:
// rs1 == rs2 == rs3 == rd, rs1==f20, rs2==f20, rs3==f20, rd==f20, fs1 == 0 and fe1 == 0x1b and fm1 == 0x11fc19 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x032d0d and fs3 == 0 and fe3 == 0x1a and fm3 == 0x159b64 and rm_val == 4  
// opcode: fmadd.s ; op1:f20; op2:f20; op3:f20; dest:f20; op1val:0xd91fc19; op2val:0xd91fc19; op3val:0xd91fc19; valaddr_reg:x16; val_offset:72; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f20, f20, f20, f20, 0x4, 0, x16, 72, x17, x15, 48, x18)

inst_7:
// rs1 == rd != rs2 and rs1 == rd != rs3 and rs3 != rs2, rs1==f10, rs2==f5, rs3==f30, rd==f10, fs1 == 0 and fe1 == 0x1b and fm1 == 0x11fc19 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x032d0d and fs3 == 0 and fe3 == 0x1a and fm3 == 0x159b64 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f5; op3:f30; dest:f10; op1val:0xd91fc19; op2val:0xbf032d0d; op3val:0xd159b64; valaddr_reg:x16; val_offset:84; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f10, f10, f5, f30, 0x3, 0, x16, 84, x17, x15, 56, x18)

inst_8:
// rd == rs2 == rs3 != rs1, rs1==f7, rs2==f22, rs3==f22, rd==f22, fs1 == 0 and fe1 == 0x1b and fm1 == 0x11fc19 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x032d0d and fs3 == 0 and fe3 == 0x1a and fm3 == 0x159b64 and rm_val == 2  
// opcode: fmadd.s ; op1:f7; op2:f22; op3:f22; dest:f22; op1val:0xd91fc19; op2val:0xbf032d0d; op3val:0xbf032d0d; valaddr_reg:x16; val_offset:96; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f22, f7, f22, f22, 0x2, 0, x16, 96, x17, x15, 64, x18)

inst_9:
// rs1 == rd == rs3 != rs2, rs1==f13, rs2==f4, rs3==f13, rd==f13, fs1 == 0 and fe1 == 0x1b and fm1 == 0x11fc19 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x032d0d and fs3 == 0 and fe3 == 0x1a and fm3 == 0x159b64 and rm_val == 1  
// opcode: fmadd.s ; op1:f13; op2:f4; op3:f13; dest:f13; op1val:0xd91fc19; op2val:0xbf032d0d; op3val:0xd91fc19; valaddr_reg:x16; val_offset:108; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f13, f4, f13, 0x1, 0, x16, 108, x17, x15, 72, x18)

inst_10:
// rs1 != rs2 and rs1 != rd and rs1 != rs3 and rs2 != rs3 and rs2 != rd and rs3 != rd, rs1==f19, rs2==f21, rs3==f1, rd==f18, fs1 == 0 and fe1 == 0x1b and fm1 == 0x11fc19 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x032d0d and fs3 == 0 and fe3 == 0x1a and fm3 == 0x159b64 and rm_val == 0  
// opcode: fmadd.s ; op1:f19; op2:f21; op3:f1; dest:f18; op1val:0xd91fc19; op2val:0xbf032d0d; op3val:0xd159b64; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f18, f19, f21, f1, 0x0, 0, x16, 120, x17, x15, 80, x18)

inst_11:
// rs2 == rs3 != rs1 and rs2 == rs3 != rd and rd != rs1, rs1==f0, rs2==f7, rs3==f7, rd==f14, fs1 == 0 and fe1 == 0x19 and fm1 == 0x65b5be and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1fa549 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x0f4031 and rm_val == 4  
// opcode: fmadd.s ; op1:f0; op2:f7; op3:f7; dest:f14; op1val:0xce5b5be; op2val:0xc01fa549; op3val:0xc01fa549; valaddr_reg:x16; val_offset:132; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f14, f0, f7, f7, 0x4, 0, x16, 132, x17, x15, 88, x18)

inst_12:
// rs1==f17, rs2==f3, rs3==f21, rd==f31, fs1 == 0 and fe1 == 0x19 and fm1 == 0x65b5be and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1fa549 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x0f4031 and rm_val == 3  
// opcode: fmadd.s ; op1:f17; op2:f3; op3:f21; dest:f31; op1val:0xce5b5be; op2val:0xc01fa549; op3val:0xd8f4031; valaddr_reg:x16; val_offset:144; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f31, f17, f3, f21, 0x3, 0, x16, 144, x17, x15, 96, x18)

inst_13:
// rs1==f22, rs2==f17, rs3==f0, rd==f9, fs1 == 0 and fe1 == 0x19 and fm1 == 0x65b5be and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1fa549 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x0f4031 and rm_val == 2  
// opcode: fmadd.s ; op1:f22; op2:f17; op3:f0; dest:f9; op1val:0xce5b5be; op2val:0xc01fa549; op3val:0xd8f4031; valaddr_reg:x16; val_offset:156; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f9, f22, f17, f0, 0x2, 0, x16, 156, x17, x15, 104, x18)

inst_14:
// rs1==f25, rs2==f16, rs3==f24, rd==f21, fs1 == 0 and fe1 == 0x19 and fm1 == 0x65b5be and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1fa549 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x0f4031 and rm_val == 1  
// opcode: fmadd.s ; op1:f25; op2:f16; op3:f24; dest:f21; op1val:0xce5b5be; op2val:0xc01fa549; op3val:0xd8f4031; valaddr_reg:x16; val_offset:168; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f21, f25, f16, f24, 0x1, 0, x16, 168, x17, x15, 112, x18)

inst_15:
// rs1==f9, rs2==f15, rs3==f8, rd==f16, fs1 == 0 and fe1 == 0x19 and fm1 == 0x65b5be and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1fa549 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x0f4031 and rm_val == 0  
// opcode: fmadd.s ; op1:f9; op2:f15; op3:f8; dest:f16; op1val:0xce5b5be; op2val:0xc01fa549; op3val:0xd8f4031; valaddr_reg:x16; val_offset:180; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f16, f9, f15, f8, 0x0, 0, x16, 180, x17, x15, 120, x18)

inst_16:
// rs1==f28, rs2==f30, rs3==f9, rd==f29, fs1 == 0 and fe1 == 0x1a and fm1 == 0x22883f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x548346 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x06ec2d and rm_val == 4  
// opcode: fmadd.s ; op1:f28; op2:f30; op3:f9; dest:f29; op1val:0xd22883f; op2val:0xbfd48346; op3val:0xd86ec2d; valaddr_reg:x16; val_offset:192; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f29, f28, f30, f9, 0x4, 0, x16, 192, x17, x15, 128, x18)

inst_17:
// rs1==f5, rs2==f29, rs3==f18, rd==f24, fs1 == 0 and fe1 == 0x1a and fm1 == 0x22883f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x548346 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x06ec2d and rm_val == 3  
// opcode: fmadd.s ; op1:f5; op2:f29; op3:f18; dest:f24; op1val:0xd22883f; op2val:0xbfd48346; op3val:0xd86ec2d; valaddr_reg:x16; val_offset:204; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f24, f5, f29, f18, 0x3, 0, x16, 204, x17, x15, 136, x18)

inst_18:
// rs1==f23, rs2==f27, rs3==f28, rd==f25, fs1 == 0 and fe1 == 0x1a and fm1 == 0x22883f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x548346 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x06ec2d and rm_val == 2  
// opcode: fmadd.s ; op1:f23; op2:f27; op3:f28; dest:f25; op1val:0xd22883f; op2val:0xbfd48346; op3val:0xd86ec2d; valaddr_reg:x16; val_offset:216; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f25, f23, f27, f28, 0x2, 0, x16, 216, x17, x15, 144, x18)

inst_19:
// rs1==f16, rs2==f1, rs3==f25, rd==f0, fs1 == 0 and fe1 == 0x1a and fm1 == 0x22883f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x548346 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x06ec2d and rm_val == 1  
// opcode: fmadd.s ; op1:f16; op2:f1; op3:f25; dest:f0; op1val:0xd22883f; op2val:0xbfd48346; op3val:0xd86ec2d; valaddr_reg:x16; val_offset:228; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f0, f16, f1, f25, 0x1, 0, x16, 228, x17, x15, 152, x18)

inst_20:
// rs1==f15, rs2==f31, rs3==f26, rd==f12, fs1 == 0 and fe1 == 0x1a and fm1 == 0x22883f and fs2 == 1 and fe2 == 0x7f and fm2 == 0x548346 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x06ec2d and rm_val == 0  
// opcode: fmadd.s ; op1:f15; op2:f31; op3:f26; dest:f12; op1val:0xd22883f; op2val:0xbfd48346; op3val:0xd86ec2d; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f12, f15, f31, f26, 0x0, 0, x16, 240, x17, x15, 160, x18)

inst_21:
// rs1==f30, rs2==f11, rs3==f17, rd==f4, fs1 == 0 and fe1 == 0x1a and fm1 == 0x1f04c3 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7194f8 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x161005 and rm_val == 4  
// opcode: fmadd.s ; op1:f30; op2:f11; op3:f17; dest:f4; op1val:0xd1f04c3; op2val:0xbff194f8; op3val:0xd961005; valaddr_reg:x16; val_offset:252; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f4, f30, f11, f17, 0x4, 0, x16, 252, x17, x15, 168, x18)

inst_22:
// rs1==f8, rs2==f28, rs3==f23, rd==f3, fs1 == 0 and fe1 == 0x1a and fm1 == 0x1f04c3 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7194f8 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x161005 and rm_val == 3  
// opcode: fmadd.s ; op1:f8; op2:f28; op3:f23; dest:f3; op1val:0xd1f04c3; op2val:0xbff194f8; op3val:0xd961005; valaddr_reg:x16; val_offset:264; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f3, f8, f28, f23, 0x3, 0, x16, 264, x17, x15, 176, x18)

inst_23:
// rs1==f14, rs2==f2, rs3==f27, rd==f15, fs1 == 0 and fe1 == 0x1a and fm1 == 0x1f04c3 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7194f8 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x161005 and rm_val == 2  
// opcode: fmadd.s ; op1:f14; op2:f2; op3:f27; dest:f15; op1val:0xd1f04c3; op2val:0xbff194f8; op3val:0xd961005; valaddr_reg:x16; val_offset:276; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f15, f14, f2, f27, 0x2, 0, x16, 276, x17, x15, 184, x18)

inst_24:
// rs1==f2, rs2==f14, rs3==f6, rd==f28, fs1 == 0 and fe1 == 0x1a and fm1 == 0x1f04c3 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7194f8 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x161005 and rm_val == 1  
// opcode: fmadd.s ; op1:f2; op2:f14; op3:f6; dest:f28; op1val:0xd1f04c3; op2val:0xbff194f8; op3val:0xd961005; valaddr_reg:x16; val_offset:288; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f28, f2, f14, f6, 0x1, 0, x16, 288, x17, x15, 192, x18)

inst_25:
// rs1==f29, rs2==f24, rs3==f19, rd==f23, fs1 == 0 and fe1 == 0x1a and fm1 == 0x1f04c3 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7194f8 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x161005 and rm_val == 0  
// opcode: fmadd.s ; op1:f29; op2:f24; op3:f19; dest:f23; op1val:0xd1f04c3; op2val:0xbff194f8; op3val:0xd961005; valaddr_reg:x16; val_offset:300; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f23, f29, f24, f19, 0x0, 0, x16, 300, x17, x15, 200, x18)

inst_26:
// rs1==f27, rs2==f10, rs3==f5, rd==f7, fs1 == 0 and fe1 == 0x1a and fm1 == 0x15bc2b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x132098 and fs3 == 0 and fe3 == 0x1a and fm3 == 0x2c1c3a and rm_val == 4  
// opcode: fmadd.s ; op1:f27; op2:f10; op3:f5; dest:f7; op1val:0xd15bc2b; op2val:0xbf932098; op3val:0xd2c1c3a; valaddr_reg:x16; val_offset:312; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f7, f27, f10, f5, 0x4, 0, x16, 312, x17, x15, 208, x18)

inst_27:
// rs1==f31, rs2==f0, rs3==f16, rd==f5, fs1 == 0 and fe1 == 0x1a and fm1 == 0x15bc2b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x132098 and fs3 == 0 and fe3 == 0x1a and fm3 == 0x2c1c3a and rm_val == 3  
// opcode: fmadd.s ; op1:f31; op2:f0; op3:f16; dest:f5; op1val:0xd15bc2b; op2val:0xbf932098; op3val:0xd2c1c3a; valaddr_reg:x16; val_offset:324; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f5, f31, f0, f16, 0x3, 0, x16, 324, x17, x15, 216, x18)

inst_28:
// rs1==f1, rs2==f25, rs3==f15, rd==f2, fs1 == 0 and fe1 == 0x1a and fm1 == 0x15bc2b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x132098 and fs3 == 0 and fe3 == 0x1a and fm3 == 0x2c1c3a and rm_val == 2  
// opcode: fmadd.s ; op1:f1; op2:f25; op3:f15; dest:f2; op1val:0xd15bc2b; op2val:0xbf932098; op3val:0xd2c1c3a; valaddr_reg:x16; val_offset:336; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f2, f1, f25, f15, 0x2, 0, x16, 336, x17, x15, 224, x18)

inst_29:
// rs1==f21, rs2==f13, rs3==f14, rd==f19, fs1 == 0 and fe1 == 0x1a and fm1 == 0x15bc2b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x132098 and fs3 == 0 and fe3 == 0x1a and fm3 == 0x2c1c3a and rm_val == 1  
// opcode: fmadd.s ; op1:f21; op2:f13; op3:f14; dest:f19; op1val:0xd15bc2b; op2val:0xbf932098; op3val:0xd2c1c3a; valaddr_reg:x16; val_offset:348; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f19, f21, f13, f14, 0x1, 0, x16, 348, x17, x15, 232, x18)

inst_30:
// rs1==f11, rs2==f23, rs3==f3, rd==f17, fs1 == 0 and fe1 == 0x1a and fm1 == 0x15bc2b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x132098 and fs3 == 0 and fe3 == 0x1a and fm3 == 0x2c1c3a and rm_val == 0  
// opcode: fmadd.s ; op1:f11; op2:f23; op3:f3; dest:f17; op1val:0xd15bc2b; op2val:0xbf932098; op3val:0xd2c1c3a; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f17, f11, f23, f3, 0x0, 0, x16, 360, x17, x15, 240, x18)

inst_31:
// rs1==f3, rs2==f19, rs3==f29, rd==f6, fs1 == 0 and fe1 == 0x1a and fm1 == 0x74b035 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x72cefc and fs3 == 0 and fe3 == 0x1a and fm3 == 0x681469 and rm_val == 4  
// opcode: fmadd.s ; op1:f3; op2:f19; op3:f29; dest:f6; op1val:0xd74b035; op2val:0xbf72cefc; op3val:0xd681469; valaddr_reg:x16; val_offset:372; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f6, f3, f19, f29, 0x4, 0, x16, 372, x17, x15, 248, x18)

inst_32:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x74b035 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x72cefc and fs3 == 0 and fe3 == 0x1a and fm3 == 0x681469 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd74b035; op2val:0xbf72cefc; op3val:0xd681469; valaddr_reg:x16; val_offset:384; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 384, x17, x15, 256, x18)

inst_33:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x74b035 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x72cefc and fs3 == 0 and fe3 == 0x1a and fm3 == 0x681469 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd74b035; op2val:0xbf72cefc; op3val:0xd681469; valaddr_reg:x16; val_offset:396; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 396, x17, x15, 264, x18)

inst_34:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x74b035 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x72cefc and fs3 == 0 and fe3 == 0x1a and fm3 == 0x681469 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd74b035; op2val:0xbf72cefc; op3val:0xd681469; valaddr_reg:x16; val_offset:408; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 408, x17, x15, 272, x18)

inst_35:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x74b035 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x72cefc and fs3 == 0 and fe3 == 0x1a and fm3 == 0x681469 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd74b035; op2val:0xbf72cefc; op3val:0xd681469; valaddr_reg:x16; val_offset:420; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 420, x17, x15, 280, x18)

inst_36:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x1c13cd and fs2 == 1 and fe2 == 0x7c and fm2 == 0x2b972c and fs3 == 0 and fe3 == 0x18 and fm3 == 0x513ac9 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd9c13cd; op2val:0xbe2b972c; op3val:0xc513ac9; valaddr_reg:x16; val_offset:432; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 432, x17, x15, 288, x18)

inst_37:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x1c13cd and fs2 == 1 and fe2 == 0x7c and fm2 == 0x2b972c and fs3 == 0 and fe3 == 0x18 and fm3 == 0x513ac9 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd9c13cd; op2val:0xbe2b972c; op3val:0xc513ac9; valaddr_reg:x16; val_offset:444; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 444, x17, x15, 296, x18)

inst_38:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x1c13cd and fs2 == 1 and fe2 == 0x7c and fm2 == 0x2b972c and fs3 == 0 and fe3 == 0x18 and fm3 == 0x513ac9 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd9c13cd; op2val:0xbe2b972c; op3val:0xc513ac9; valaddr_reg:x16; val_offset:456; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 456, x17, x15, 304, x18)

inst_39:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x1c13cd and fs2 == 1 and fe2 == 0x7c and fm2 == 0x2b972c and fs3 == 0 and fe3 == 0x18 and fm3 == 0x513ac9 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd9c13cd; op2val:0xbe2b972c; op3val:0xc513ac9; valaddr_reg:x16; val_offset:468; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 468, x17, x15, 312, x18)

inst_40:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x1c13cd and fs2 == 1 and fe2 == 0x7c and fm2 == 0x2b972c and fs3 == 0 and fe3 == 0x18 and fm3 == 0x513ac9 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd9c13cd; op2val:0xbe2b972c; op3val:0xc513ac9; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 320, x18)

inst_41:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x659ef1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x31755f and fs3 == 0 and fe3 == 0x1b and fm3 == 0x1f2c2c and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xce59ef1; op2val:0xc031755f; op3val:0xd9f2c2c; valaddr_reg:x16; val_offset:492; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 492, x17, x15, 328, x18)

inst_42:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x659ef1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x31755f and fs3 == 0 and fe3 == 0x1b and fm3 == 0x1f2c2c and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xce59ef1; op2val:0xc031755f; op3val:0xd9f2c2c; valaddr_reg:x16; val_offset:504; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 504, x17, x15, 336, x18)

inst_43:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x659ef1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x31755f and fs3 == 0 and fe3 == 0x1b and fm3 == 0x1f2c2c and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xce59ef1; op2val:0xc031755f; op3val:0xd9f2c2c; valaddr_reg:x16; val_offset:516; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 516, x17, x15, 344, x18)

inst_44:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x659ef1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x31755f and fs3 == 0 and fe3 == 0x1b and fm3 == 0x1f2c2c and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xce59ef1; op2val:0xc031755f; op3val:0xd9f2c2c; valaddr_reg:x16; val_offset:528; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 528, x17, x15, 352, x18)

inst_45:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x659ef1 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x31755f and fs3 == 0 and fe3 == 0x1b and fm3 == 0x1f2c2c and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xce59ef1; op2val:0xc031755f; op3val:0xd9f2c2c; valaddr_reg:x16; val_offset:540; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 540, x17, x15, 360, x18)

inst_46:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x77920b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0481cd and fs3 == 0 and fe3 == 0x1b and fm3 == 0x0024d5 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd77920b; op2val:0xbf8481cd; op3val:0xd8024d5; valaddr_reg:x16; val_offset:552; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 552, x17, x15, 368, x18)

inst_47:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x77920b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0481cd and fs3 == 0 and fe3 == 0x1b and fm3 == 0x0024d5 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd77920b; op2val:0xbf8481cd; op3val:0xd8024d5; valaddr_reg:x16; val_offset:564; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 564, x17, x15, 376, x18)

inst_48:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x77920b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0481cd and fs3 == 0 and fe3 == 0x1b and fm3 == 0x0024d5 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd77920b; op2val:0xbf8481cd; op3val:0xd8024d5; valaddr_reg:x16; val_offset:576; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 576, x17, x15, 384, x18)

inst_49:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x77920b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0481cd and fs3 == 0 and fe3 == 0x1b and fm3 == 0x0024d5 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd77920b; op2val:0xbf8481cd; op3val:0xd8024d5; valaddr_reg:x16; val_offset:588; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 588, x17, x15, 392, x18)

inst_50:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x77920b and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0481cd and fs3 == 0 and fe3 == 0x1b and fm3 == 0x0024d5 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd77920b; op2val:0xbf8481cd; op3val:0xd8024d5; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 400, x18)

inst_51:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x6e53b4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1e02f8 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x131a6d and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd6e53b4; op2val:0xbf9e02f8; op3val:0xd931a6d; valaddr_reg:x16; val_offset:612; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 612, x17, x15, 408, x18)

inst_52:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x6e53b4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1e02f8 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x131a6d and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd6e53b4; op2val:0xbf9e02f8; op3val:0xd931a6d; valaddr_reg:x16; val_offset:624; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 624, x17, x15, 416, x18)

inst_53:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x6e53b4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1e02f8 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x131a6d and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd6e53b4; op2val:0xbf9e02f8; op3val:0xd931a6d; valaddr_reg:x16; val_offset:636; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 636, x17, x15, 424, x18)

inst_54:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x6e53b4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1e02f8 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x131a6d and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd6e53b4; op2val:0xbf9e02f8; op3val:0xd931a6d; valaddr_reg:x16; val_offset:648; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 648, x17, x15, 432, x18)

inst_55:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x6e53b4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x1e02f8 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x131a6d and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd6e53b4; op2val:0xbf9e02f8; op3val:0xd931a6d; valaddr_reg:x16; val_offset:660; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 660, x17, x15, 440, x18)

inst_56:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x10fd82 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6443ad and fs3 == 0 and fe3 == 0x1b and fm3 == 0x01481c and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd90fd82; op2val:0xbf6443ad; op3val:0xd81481c; valaddr_reg:x16; val_offset:672; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 672, x17, x15, 448, x18)

inst_57:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x10fd82 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6443ad and fs3 == 0 and fe3 == 0x1b and fm3 == 0x01481c and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd90fd82; op2val:0xbf6443ad; op3val:0xd81481c; valaddr_reg:x16; val_offset:684; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 684, x17, x15, 456, x18)

inst_58:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x10fd82 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6443ad and fs3 == 0 and fe3 == 0x1b and fm3 == 0x01481c and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd90fd82; op2val:0xbf6443ad; op3val:0xd81481c; valaddr_reg:x16; val_offset:696; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 696, x17, x15, 464, x18)

inst_59:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x10fd82 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6443ad and fs3 == 0 and fe3 == 0x1b and fm3 == 0x01481c and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd90fd82; op2val:0xbf6443ad; op3val:0xd81481c; valaddr_reg:x16; val_offset:708; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 708, x17, x15, 472, x18)

inst_60:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x10fd82 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6443ad and fs3 == 0 and fe3 == 0x1b and fm3 == 0x01481c and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd90fd82; op2val:0xbf6443ad; op3val:0xd81481c; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 480, x18)

inst_61:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x5ae194 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x0a09be and fs3 == 0 and fe3 == 0x18 and fm3 == 0x6c0bdd and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd5ae194; op2val:0xbe8a09be; op3val:0xc6c0bdd; valaddr_reg:x16; val_offset:732; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 732, x17, x15, 488, x18)

inst_62:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x5ae194 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x0a09be and fs3 == 0 and fe3 == 0x18 and fm3 == 0x6c0bdd and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd5ae194; op2val:0xbe8a09be; op3val:0xc6c0bdd; valaddr_reg:x16; val_offset:744; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 744, x17, x15, 496, x18)

inst_63:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x5ae194 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x0a09be and fs3 == 0 and fe3 == 0x18 and fm3 == 0x6c0bdd and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd5ae194; op2val:0xbe8a09be; op3val:0xc6c0bdd; valaddr_reg:x16; val_offset:756; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 756, x17, x15, 504, x18)

inst_64:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x5ae194 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x0a09be and fs3 == 0 and fe3 == 0x18 and fm3 == 0x6c0bdd and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd5ae194; op2val:0xbe8a09be; op3val:0xc6c0bdd; valaddr_reg:x16; val_offset:768; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 768, x17, x15, 512, x18)

inst_65:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x5ae194 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x0a09be and fs3 == 0 and fe3 == 0x18 and fm3 == 0x6c0bdd and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd5ae194; op2val:0xbe8a09be; op3val:0xc6c0bdd; valaddr_reg:x16; val_offset:780; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 780, x17, x15, 520, x18)

inst_66:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x2593bd and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7a8a3f and fs3 == 0 and fe3 == 0x1b and fm3 == 0x220bb1 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd2593bd; op2val:0xbffa8a3f; op3val:0xda20bb1; valaddr_reg:x16; val_offset:792; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 792, x17, x15, 528, x18)

inst_67:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x2593bd and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7a8a3f and fs3 == 0 and fe3 == 0x1b and fm3 == 0x220bb1 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd2593bd; op2val:0xbffa8a3f; op3val:0xda20bb1; valaddr_reg:x16; val_offset:804; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 804, x17, x15, 536, x18)

inst_68:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x2593bd and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7a8a3f and fs3 == 0 and fe3 == 0x1b and fm3 == 0x220bb1 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd2593bd; op2val:0xbffa8a3f; op3val:0xda20bb1; valaddr_reg:x16; val_offset:816; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 816, x17, x15, 544, x18)

inst_69:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x2593bd and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7a8a3f and fs3 == 0 and fe3 == 0x1b and fm3 == 0x220bb1 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd2593bd; op2val:0xbffa8a3f; op3val:0xda20bb1; valaddr_reg:x16; val_offset:828; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 828, x17, x15, 552, x18)

inst_70:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x2593bd and fs2 == 1 and fe2 == 0x7f and fm2 == 0x7a8a3f and fs3 == 0 and fe3 == 0x1b and fm3 == 0x220bb1 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd2593bd; op2val:0xbffa8a3f; op3val:0xda20bb1; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 560, x18)

inst_71:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x5307a2 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x57419d and fs3 == 0 and fe3 == 0x18 and fm3 == 0x317180 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xcd307a2; op2val:0xbed7419d; op3val:0xc317180; valaddr_reg:x16; val_offset:852; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 852, x17, x15, 568, x18)

inst_72:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x5307a2 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x57419d and fs3 == 0 and fe3 == 0x18 and fm3 == 0x317180 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xcd307a2; op2val:0xbed7419d; op3val:0xc317180; valaddr_reg:x16; val_offset:864; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 864, x17, x15, 576, x18)

inst_73:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x5307a2 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x57419d and fs3 == 0 and fe3 == 0x18 and fm3 == 0x317180 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xcd307a2; op2val:0xbed7419d; op3val:0xc317180; valaddr_reg:x16; val_offset:876; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 876, x17, x15, 584, x18)

inst_74:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x5307a2 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x57419d and fs3 == 0 and fe3 == 0x18 and fm3 == 0x317180 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xcd307a2; op2val:0xbed7419d; op3val:0xc317180; valaddr_reg:x16; val_offset:888; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 888, x17, x15, 592, x18)

inst_75:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x5307a2 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x57419d and fs3 == 0 and fe3 == 0x18 and fm3 == 0x317180 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xcd307a2; op2val:0xbed7419d; op3val:0xc317180; valaddr_reg:x16; val_offset:900; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 900, x17, x15, 600, x18)

inst_76:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x1940ba and fs2 == 1 and fe2 == 0x7b and fm2 == 0x4eee6f and fs3 == 0 and fe3 == 0x15 and fm3 == 0x77c1a7 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xc9940ba; op2val:0xbdceee6f; op3val:0xaf7c1a7; valaddr_reg:x16; val_offset:912; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 912, x17, x15, 608, x18)

inst_77:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x1940ba and fs2 == 1 and fe2 == 0x7b and fm2 == 0x4eee6f and fs3 == 0 and fe3 == 0x15 and fm3 == 0x77c1a7 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xc9940ba; op2val:0xbdceee6f; op3val:0xaf7c1a7; valaddr_reg:x16; val_offset:924; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 924, x17, x15, 616, x18)

inst_78:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x1940ba and fs2 == 1 and fe2 == 0x7b and fm2 == 0x4eee6f and fs3 == 0 and fe3 == 0x15 and fm3 == 0x77c1a7 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xc9940ba; op2val:0xbdceee6f; op3val:0xaf7c1a7; valaddr_reg:x16; val_offset:936; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 936, x17, x15, 624, x18)

inst_79:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x1940ba and fs2 == 1 and fe2 == 0x7b and fm2 == 0x4eee6f and fs3 == 0 and fe3 == 0x15 and fm3 == 0x77c1a7 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xc9940ba; op2val:0xbdceee6f; op3val:0xaf7c1a7; valaddr_reg:x16; val_offset:948; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 948, x17, x15, 632, x18)

inst_80:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x1940ba and fs2 == 1 and fe2 == 0x7b and fm2 == 0x4eee6f and fs3 == 0 and fe3 == 0x15 and fm3 == 0x77c1a7 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xc9940ba; op2val:0xbdceee6f; op3val:0xaf7c1a7; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 640, x18)

inst_81:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x2a9dd4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x08764c and fs3 == 0 and fe3 == 0x1a and fm3 == 0x35e561 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd2a9dd4; op2val:0xbf88764c; op3val:0xd35e561; valaddr_reg:x16; val_offset:972; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 972, x17, x15, 648, x18)

inst_82:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x2a9dd4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x08764c and fs3 == 0 and fe3 == 0x1a and fm3 == 0x35e561 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd2a9dd4; op2val:0xbf88764c; op3val:0xd35e561; valaddr_reg:x16; val_offset:984; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 984, x17, x15, 656, x18)

inst_83:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x2a9dd4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x08764c and fs3 == 0 and fe3 == 0x1a and fm3 == 0x35e561 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd2a9dd4; op2val:0xbf88764c; op3val:0xd35e561; valaddr_reg:x16; val_offset:996; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 996, x17, x15, 664, x18)

inst_84:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x2a9dd4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x08764c and fs3 == 0 and fe3 == 0x1a and fm3 == 0x35e561 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd2a9dd4; op2val:0xbf88764c; op3val:0xd35e561; valaddr_reg:x16; val_offset:1008; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1008, x17, x15, 672, x18)

inst_85:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x2a9dd4 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x08764c and fs3 == 0 and fe3 == 0x1a and fm3 == 0x35e561 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd2a9dd4; op2val:0xbf88764c; op3val:0xd35e561; valaddr_reg:x16; val_offset:1020; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1020, x17, x15, 680, x18)

inst_86:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x76a4cf and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1630b2 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x10b37c and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xcf6a4cf; op2val:0xc01630b2; op3val:0xd90b37c; valaddr_reg:x16; val_offset:1032; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1032, x17, x15, 688, x18)

inst_87:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x76a4cf and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1630b2 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x10b37c and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xcf6a4cf; op2val:0xc01630b2; op3val:0xd90b37c; valaddr_reg:x16; val_offset:1044; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1044, x17, x15, 696, x18)

inst_88:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x76a4cf and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1630b2 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x10b37c and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xcf6a4cf; op2val:0xc01630b2; op3val:0xd90b37c; valaddr_reg:x16; val_offset:1056; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1056, x17, x15, 704, x18)

inst_89:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x76a4cf and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1630b2 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x10b37c and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xcf6a4cf; op2val:0xc01630b2; op3val:0xd90b37c; valaddr_reg:x16; val_offset:1068; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1068, x17, x15, 712, x18)

inst_90:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x76a4cf and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1630b2 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x10b37c and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xcf6a4cf; op2val:0xc01630b2; op3val:0xd90b37c; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 720, x18)

inst_91:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x16ddde and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2f5df8 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x4eb218 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd16ddde; op2val:0xbf2f5df8; op3val:0xcceb218; valaddr_reg:x16; val_offset:1092; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1092, x17, x15, 728, x18)

inst_92:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x16ddde and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2f5df8 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x4eb218 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd16ddde; op2val:0xbf2f5df8; op3val:0xcceb218; valaddr_reg:x16; val_offset:1104; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1104, x17, x15, 736, x18)

inst_93:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x16ddde and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2f5df8 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x4eb218 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd16ddde; op2val:0xbf2f5df8; op3val:0xcceb218; valaddr_reg:x16; val_offset:1116; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1116, x17, x15, 744, x18)

inst_94:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x16ddde and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2f5df8 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x4eb218 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd16ddde; op2val:0xbf2f5df8; op3val:0xcceb218; valaddr_reg:x16; val_offset:1128; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1128, x17, x15, 752, x18)

inst_95:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x16ddde and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2f5df8 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x4eb218 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd16ddde; op2val:0xbf2f5df8; op3val:0xcceb218; valaddr_reg:x16; val_offset:1140; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1140, x17, x15, 760, x18)

inst_96:
// fs1 == 0 and fe1 == 0x16 and fm1 == 0x3a879f and fs2 == 1 and fe2 == 0x7e and fm2 == 0x439313 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x0e8078 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xb3a879f; op2val:0xbf439313; op3val:0xb0e8078; valaddr_reg:x16; val_offset:1152; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1152, x17, x15, 768, x18)

inst_97:
// fs1 == 0 and fe1 == 0x16 and fm1 == 0x3a879f and fs2 == 1 and fe2 == 0x7e and fm2 == 0x439313 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x0e8078 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xb3a879f; op2val:0xbf439313; op3val:0xb0e8078; valaddr_reg:x16; val_offset:1164; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1164, x17, x15, 776, x18)

inst_98:
// fs1 == 0 and fe1 == 0x16 and fm1 == 0x3a879f and fs2 == 1 and fe2 == 0x7e and fm2 == 0x439313 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x0e8078 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xb3a879f; op2val:0xbf439313; op3val:0xb0e8078; valaddr_reg:x16; val_offset:1176; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1176, x17, x15, 784, x18)

inst_99:
// fs1 == 0 and fe1 == 0x16 and fm1 == 0x3a879f and fs2 == 1 and fe2 == 0x7e and fm2 == 0x439313 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x0e8078 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xb3a879f; op2val:0xbf439313; op3val:0xb0e8078; valaddr_reg:x16; val_offset:1188; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1188, x17, x15, 792, x18)

inst_100:
// fs1 == 0 and fe1 == 0x16 and fm1 == 0x3a879f and fs2 == 1 and fe2 == 0x7e and fm2 == 0x439313 and fs3 == 0 and fe3 == 0x16 and fm3 == 0x0e8078 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xb3a879f; op2val:0xbf439313; op3val:0xb0e8078; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 800, x18)

inst_101:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x105d0a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1a5d46 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x2e1923 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd105d0a; op2val:0xbf1a5d46; op3val:0xcae1923; valaddr_reg:x16; val_offset:1212; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1212, x17, x15, 808, x18)

inst_102:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x105d0a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1a5d46 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x2e1923 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd105d0a; op2val:0xbf1a5d46; op3val:0xcae1923; valaddr_reg:x16; val_offset:1224; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1224, x17, x15, 816, x18)

inst_103:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x105d0a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1a5d46 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x2e1923 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd105d0a; op2val:0xbf1a5d46; op3val:0xcae1923; valaddr_reg:x16; val_offset:1236; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1236, x17, x15, 824, x18)

inst_104:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x105d0a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1a5d46 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x2e1923 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd105d0a; op2val:0xbf1a5d46; op3val:0xcae1923; valaddr_reg:x16; val_offset:1248; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1248, x17, x15, 832, x18)

inst_105:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x105d0a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x1a5d46 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x2e1923 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd105d0a; op2val:0xbf1a5d46; op3val:0xcae1923; valaddr_reg:x16; val_offset:1260; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1260, x17, x15, 840, x18)

inst_106:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x1a0c58 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x12bc19 and fs3 == 0 and fe3 == 0x1a and fm3 == 0x309875 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd9a0c58; op2val:0xbf12bc19; op3val:0xd309875; valaddr_reg:x16; val_offset:1272; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1272, x17, x15, 848, x18)

inst_107:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x1a0c58 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x12bc19 and fs3 == 0 and fe3 == 0x1a and fm3 == 0x309875 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd9a0c58; op2val:0xbf12bc19; op3val:0xd309875; valaddr_reg:x16; val_offset:1284; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1284, x17, x15, 856, x18)

inst_108:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x1a0c58 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x12bc19 and fs3 == 0 and fe3 == 0x1a and fm3 == 0x309875 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd9a0c58; op2val:0xbf12bc19; op3val:0xd309875; valaddr_reg:x16; val_offset:1296; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1296, x17, x15, 864, x18)

inst_109:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x1a0c58 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x12bc19 and fs3 == 0 and fe3 == 0x1a and fm3 == 0x309875 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd9a0c58; op2val:0xbf12bc19; op3val:0xd309875; valaddr_reg:x16; val_offset:1308; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1308, x17, x15, 872, x18)

inst_110:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x1a0c58 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x12bc19 and fs3 == 0 and fe3 == 0x1a and fm3 == 0x309875 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd9a0c58; op2val:0xbf12bc19; op3val:0xd309875; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 880, x18)

inst_111:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x6aa17e and fs2 == 1 and fe2 == 0x7f and fm2 == 0x301eb9 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x216b30 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd6aa17e; op2val:0xbfb01eb9; op3val:0xda16b30; valaddr_reg:x16; val_offset:1332; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1332, x17, x15, 888, x18)

inst_112:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x6aa17e and fs2 == 1 and fe2 == 0x7f and fm2 == 0x301eb9 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x216b30 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd6aa17e; op2val:0xbfb01eb9; op3val:0xda16b30; valaddr_reg:x16; val_offset:1344; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1344, x17, x15, 896, x18)

inst_113:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x6aa17e and fs2 == 1 and fe2 == 0x7f and fm2 == 0x301eb9 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x216b30 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd6aa17e; op2val:0xbfb01eb9; op3val:0xda16b30; valaddr_reg:x16; val_offset:1356; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1356, x17, x15, 904, x18)

inst_114:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x6aa17e and fs2 == 1 and fe2 == 0x7f and fm2 == 0x301eb9 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x216b30 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd6aa17e; op2val:0xbfb01eb9; op3val:0xda16b30; valaddr_reg:x16; val_offset:1368; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1368, x17, x15, 912, x18)

inst_115:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x6aa17e and fs2 == 1 and fe2 == 0x7f and fm2 == 0x301eb9 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x216b30 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd6aa17e; op2val:0xbfb01eb9; op3val:0xda16b30; valaddr_reg:x16; val_offset:1380; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1380, x17, x15, 920, x18)

inst_116:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x0bc2a2 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x69eca6 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x7f6ab0 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd0bc2a2; op2val:0xbf69eca6; op3val:0xcff6ab0; valaddr_reg:x16; val_offset:1392; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1392, x17, x15, 928, x18)

inst_117:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x0bc2a2 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x69eca6 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x7f6ab0 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd0bc2a2; op2val:0xbf69eca6; op3val:0xcff6ab0; valaddr_reg:x16; val_offset:1404; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1404, x17, x15, 936, x18)

inst_118:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x0bc2a2 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x69eca6 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x7f6ab0 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd0bc2a2; op2val:0xbf69eca6; op3val:0xcff6ab0; valaddr_reg:x16; val_offset:1416; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1416, x17, x15, 944, x18)

inst_119:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x0bc2a2 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x69eca6 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x7f6ab0 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd0bc2a2; op2val:0xbf69eca6; op3val:0xcff6ab0; valaddr_reg:x16; val_offset:1428; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1428, x17, x15, 952, x18)

inst_120:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x0bc2a2 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x69eca6 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x7f6ab0 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd0bc2a2; op2val:0xbf69eca6; op3val:0xcff6ab0; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 960, x18)

inst_121:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x3c9c8a and fs2 == 1 and fe2 == 0x7d and fm2 == 0x0b8632 and fs3 == 0 and fe3 == 0x18 and fm3 == 0x4d97bc and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd3c9c8a; op2val:0xbe8b8632; op3val:0xc4d97bc; valaddr_reg:x16; val_offset:1452; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1452, x17, x15, 968, x18)

inst_122:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x3c9c8a and fs2 == 1 and fe2 == 0x7d and fm2 == 0x0b8632 and fs3 == 0 and fe3 == 0x18 and fm3 == 0x4d97bc and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd3c9c8a; op2val:0xbe8b8632; op3val:0xc4d97bc; valaddr_reg:x16; val_offset:1464; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1464, x17, x15, 976, x18)

inst_123:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x3c9c8a and fs2 == 1 and fe2 == 0x7d and fm2 == 0x0b8632 and fs3 == 0 and fe3 == 0x18 and fm3 == 0x4d97bc and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd3c9c8a; op2val:0xbe8b8632; op3val:0xc4d97bc; valaddr_reg:x16; val_offset:1476; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1476, x17, x15, 984, x18)

inst_124:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x3c9c8a and fs2 == 1 and fe2 == 0x7d and fm2 == 0x0b8632 and fs3 == 0 and fe3 == 0x18 and fm3 == 0x4d97bc and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd3c9c8a; op2val:0xbe8b8632; op3val:0xc4d97bc; valaddr_reg:x16; val_offset:1488; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1488, x17, x15, 992, x18)

inst_125:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x3c9c8a and fs2 == 1 and fe2 == 0x7d and fm2 == 0x0b8632 and fs3 == 0 and fe3 == 0x18 and fm3 == 0x4d97bc and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd3c9c8a; op2val:0xbe8b8632; op3val:0xc4d97bc; valaddr_reg:x16; val_offset:1500; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1500, x17, x15, 1000, x18)

inst_126:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x44a3df and fs2 == 1 and fe2 == 0x7f and fm2 == 0x002e60 and fs3 == 0 and fe3 == 0x1a and fm3 == 0x44eb1d and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd44a3df; op2val:0xbf802e60; op3val:0xd44eb1d; valaddr_reg:x16; val_offset:1512; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1512, x17, x15, 1008, x18)

inst_127:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x44a3df and fs2 == 1 and fe2 == 0x7f and fm2 == 0x002e60 and fs3 == 0 and fe3 == 0x1a and fm3 == 0x44eb1d and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd44a3df; op2val:0xbf802e60; op3val:0xd44eb1d; valaddr_reg:x16; val_offset:1524; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1524, x17, x15, 1016, x18)

inst_128:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x44a3df and fs2 == 1 and fe2 == 0x7f and fm2 == 0x002e60 and fs3 == 0 and fe3 == 0x1a and fm3 == 0x44eb1d and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd44a3df; op2val:0xbf802e60; op3val:0xd44eb1d; valaddr_reg:x16; val_offset:1536; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1536, x17, x15, 1024, x18)

inst_129:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x44a3df and fs2 == 1 and fe2 == 0x7f and fm2 == 0x002e60 and fs3 == 0 and fe3 == 0x1a and fm3 == 0x44eb1d and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd44a3df; op2val:0xbf802e60; op3val:0xd44eb1d; valaddr_reg:x16; val_offset:1548; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1548, x17, x15, 1032, x18)

inst_130:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x44a3df and fs2 == 1 and fe2 == 0x7f and fm2 == 0x002e60 and fs3 == 0 and fe3 == 0x1a and fm3 == 0x44eb1d and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd44a3df; op2val:0xbf802e60; op3val:0xd44eb1d; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1040, x18)

inst_131:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x595706 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6b90f4 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x47fdf3 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd595706; op2val:0xbeeb90f4; op3val:0xcc7fdf3; valaddr_reg:x16; val_offset:1572; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1572, x17, x15, 1048, x18)

inst_132:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x595706 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6b90f4 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x47fdf3 and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd595706; op2val:0xbeeb90f4; op3val:0xcc7fdf3; valaddr_reg:x16; val_offset:1584; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1584, x17, x15, 1056, x18)

inst_133:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x595706 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6b90f4 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x47fdf3 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd595706; op2val:0xbeeb90f4; op3val:0xcc7fdf3; valaddr_reg:x16; val_offset:1596; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1596, x17, x15, 1064, x18)

inst_134:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x595706 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6b90f4 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x47fdf3 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd595706; op2val:0xbeeb90f4; op3val:0xcc7fdf3; valaddr_reg:x16; val_offset:1608; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1608, x17, x15, 1072, x18)

inst_135:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x595706 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x6b90f4 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x47fdf3 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd595706; op2val:0xbeeb90f4; op3val:0xcc7fdf3; valaddr_reg:x16; val_offset:1620; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1620, x17, x15, 1080, x18)

inst_136:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x079143 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x618104 and fs3 == 0 and fe3 == 0x1a and fm3 == 0x6ed5fe and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd879143; op2val:0xbf618104; op3val:0xd6ed5fe; valaddr_reg:x16; val_offset:1632; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1632, x17, x15, 1088, x18)

inst_137:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x079143 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x618104 and fs3 == 0 and fe3 == 0x1a and fm3 == 0x6ed5fe and rm_val == 3  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd879143; op2val:0xbf618104; op3val:0xd6ed5fe; valaddr_reg:x16; val_offset:1644; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x3, 0, x16, 1644, x17, x15, 1096, x18)

inst_138:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x079143 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x618104 and fs3 == 0 and fe3 == 0x1a and fm3 == 0x6ed5fe and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd879143; op2val:0xbf618104; op3val:0xd6ed5fe; valaddr_reg:x16; val_offset:1656; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1656, x17, x15, 1104, x18)

inst_139:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x079143 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x618104 and fs3 == 0 and fe3 == 0x1a and fm3 == 0x6ed5fe and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd879143; op2val:0xbf618104; op3val:0xd6ed5fe; valaddr_reg:x16; val_offset:1668; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1668, x17, x15, 1112, x18)

inst_140:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x079143 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x618104 and fs3 == 0 and fe3 == 0x1a and fm3 == 0x6ed5fe and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd879143; op2val:0xbf618104; op3val:0xd6ed5fe; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1120, x18)

inst_141:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x383b17 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4f8193 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x155507 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd383b17; op2val:0xbfcf8193; op3val:0xd955507; valaddr_reg:x16; val_offset:1692; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1692, x17, x15, 1128, x18)

inst_142:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x383b17 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4f8193 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x155507 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd383b17; op2val:0xbfcf8193; op3val:0xd955507; valaddr_reg:x16; val_offset:1704; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1704, x17, x15, 1136, x18)

inst_143:
// fs1 == 0 and fe1 == 0x1a and fm1 == 0x383b17 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4f8193 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x155507 and rm_val == 0  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd383b17; op2val:0xbfcf8193; op3val:0xd955507; valaddr_reg:x16; val_offset:1716; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x0, 0, x16, 1716, x17, x15, 1144, x18)

inst_144:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x11fc19 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x032d0d and fs3 == 0 and fe3 == 0x1a and fm3 == 0x159b64 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd91fc19; op2val:0xbf032d0d; op3val:0xd159b64; valaddr_reg:x16; val_offset:1728; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1728, x17, x15, 1152, x18)

inst_145:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x11fc19 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x032d0d and fs3 == 0 and fe3 == 0x1a and fm3 == 0x159b64 and rm_val == 2  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd91fc19; op2val:0xbf032d0d; op3val:0xd159b64; valaddr_reg:x16; val_offset:1740; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x2, 0, x16, 1740, x17, x15, 1160, x18)

inst_146:
// fs1 == 0 and fe1 == 0x1b and fm1 == 0x11fc19 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x032d0d and fs3 == 0 and fe3 == 0x1a and fm3 == 0x159b64 and rm_val == 1  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd91fc19; op2val:0xbf032d0d; op3val:0xd159b64; valaddr_reg:x16; val_offset:1752; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x1, 0, x16, 1752, x17, x15, 1168, x18)

inst_147:
// fs1 == 0 and fe1 == 0x19 and fm1 == 0x65b5be and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1fa549 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x0f4031 and rm_val == 4  
// opcode: fmadd.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xce5b5be; op2val:0xc01fa549; op3val:0xd8f4031; valaddr_reg:x16; val_offset:1764; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.s, f13, f10, f11, f12, 0x4, 0, x16, 1764, x17, x15, 1176, x18)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
test_fp:
.word 0xd879143
.word 0xbf618104
.word 0xd879143
.word 0xd383b17
.word 0xbfcf8193
.word 0xd955507
.word 0xd383b17
.word 0xbfcf8193
.word 0xd955507
.word 0xd383b17
.word 0xd383b17
.word 0xd955507
.word 0xd383b17
.word 0xd383b17
.word 0xd955507
.word 0xd383b17
.word 0xd383b17
.word 0xd383b17
.word 0xd91fc19
.word 0xd91fc19
.word 0xd91fc19
.word 0xd91fc19
.word 0xbf032d0d
.word 0xd159b64
.word 0xd91fc19
.word 0xbf032d0d
.word 0xbf032d0d
.word 0xd91fc19
.word 0xbf032d0d
.word 0xd91fc19
.word 0xd91fc19
.word 0xbf032d0d
.word 0xd159b64
.word 0xce5b5be
.word 0xc01fa549
.word 0xc01fa549
.word 0xce5b5be
.word 0xc01fa549
.word 0xd8f4031
.word 0xce5b5be
.word 0xc01fa549
.word 0xd8f4031
.word 0xce5b5be
.word 0xc01fa549
.word 0xd8f4031
.word 0xce5b5be
.word 0xc01fa549
.word 0xd8f4031
.word 0xd22883f
.word 0xbfd48346
.word 0xd86ec2d
.word 0xd22883f
.word 0xbfd48346
.word 0xd86ec2d
.word 0xd22883f
.word 0xbfd48346
.word 0xd86ec2d
.word 0xd22883f
.word 0xbfd48346
.word 0xd86ec2d
.word 0xd22883f
.word 0xbfd48346
.word 0xd86ec2d
.word 0xd1f04c3
.word 0xbff194f8
.word 0xd961005
.word 0xd1f04c3
.word 0xbff194f8
.word 0xd961005
.word 0xd1f04c3
.word 0xbff194f8
.word 0xd961005
.word 0xd1f04c3
.word 0xbff194f8
.word 0xd961005
.word 0xd1f04c3
.word 0xbff194f8
.word 0xd961005
.word 0xd15bc2b
.word 0xbf932098
.word 0xd2c1c3a
.word 0xd15bc2b
.word 0xbf932098
.word 0xd2c1c3a
.word 0xd15bc2b
.word 0xbf932098
.word 0xd2c1c3a
.word 0xd15bc2b
.word 0xbf932098
.word 0xd2c1c3a
.word 0xd15bc2b
.word 0xbf932098
.word 0xd2c1c3a
.word 0xd74b035
.word 0xbf72cefc
.word 0xd681469
.word 0xd74b035
.word 0xbf72cefc
.word 0xd681469
.word 0xd74b035
.word 0xbf72cefc
.word 0xd681469
.word 0xd74b035
.word 0xbf72cefc
.word 0xd681469
.word 0xd74b035
.word 0xbf72cefc
.word 0xd681469
.word 0xd9c13cd
.word 0xbe2b972c
.word 0xc513ac9
.word 0xd9c13cd
.word 0xbe2b972c
.word 0xc513ac9
.word 0xd9c13cd
.word 0xbe2b972c
.word 0xc513ac9
.word 0xd9c13cd
.word 0xbe2b972c
.word 0xc513ac9
.word 0xd9c13cd
.word 0xbe2b972c
.word 0xc513ac9
.word 0xce59ef1
.word 0xc031755f
.word 0xd9f2c2c
.word 0xce59ef1
.word 0xc031755f
.word 0xd9f2c2c
.word 0xce59ef1
.word 0xc031755f
.word 0xd9f2c2c
.word 0xce59ef1
.word 0xc031755f
.word 0xd9f2c2c
.word 0xce59ef1
.word 0xc031755f
.word 0xd9f2c2c
.word 0xd77920b
.word 0xbf8481cd
.word 0xd8024d5
.word 0xd77920b
.word 0xbf8481cd
.word 0xd8024d5
.word 0xd77920b
.word 0xbf8481cd
.word 0xd8024d5
.word 0xd77920b
.word 0xbf8481cd
.word 0xd8024d5
.word 0xd77920b
.word 0xbf8481cd
.word 0xd8024d5
.word 0xd6e53b4
.word 0xbf9e02f8
.word 0xd931a6d
.word 0xd6e53b4
.word 0xbf9e02f8
.word 0xd931a6d
.word 0xd6e53b4
.word 0xbf9e02f8
.word 0xd931a6d
.word 0xd6e53b4
.word 0xbf9e02f8
.word 0xd931a6d
.word 0xd6e53b4
.word 0xbf9e02f8
.word 0xd931a6d
.word 0xd90fd82
.word 0xbf6443ad
.word 0xd81481c
.word 0xd90fd82
.word 0xbf6443ad
.word 0xd81481c
.word 0xd90fd82
.word 0xbf6443ad
.word 0xd81481c
.word 0xd90fd82
.word 0xbf6443ad
.word 0xd81481c
.word 0xd90fd82
.word 0xbf6443ad
.word 0xd81481c
.word 0xd5ae194
.word 0xbe8a09be
.word 0xc6c0bdd
.word 0xd5ae194
.word 0xbe8a09be
.word 0xc6c0bdd
.word 0xd5ae194
.word 0xbe8a09be
.word 0xc6c0bdd
.word 0xd5ae194
.word 0xbe8a09be
.word 0xc6c0bdd
.word 0xd5ae194
.word 0xbe8a09be
.word 0xc6c0bdd
.word 0xd2593bd
.word 0xbffa8a3f
.word 0xda20bb1
.word 0xd2593bd
.word 0xbffa8a3f
.word 0xda20bb1
.word 0xd2593bd
.word 0xbffa8a3f
.word 0xda20bb1
.word 0xd2593bd
.word 0xbffa8a3f
.word 0xda20bb1
.word 0xd2593bd
.word 0xbffa8a3f
.word 0xda20bb1
.word 0xcd307a2
.word 0xbed7419d
.word 0xc317180
.word 0xcd307a2
.word 0xbed7419d
.word 0xc317180
.word 0xcd307a2
.word 0xbed7419d
.word 0xc317180
.word 0xcd307a2
.word 0xbed7419d
.word 0xc317180
.word 0xcd307a2
.word 0xbed7419d
.word 0xc317180
.word 0xc9940ba
.word 0xbdceee6f
.word 0xaf7c1a7
.word 0xc9940ba
.word 0xbdceee6f
.word 0xaf7c1a7
.word 0xc9940ba
.word 0xbdceee6f
.word 0xaf7c1a7
.word 0xc9940ba
.word 0xbdceee6f
.word 0xaf7c1a7
.word 0xc9940ba
.word 0xbdceee6f
.word 0xaf7c1a7
.word 0xd2a9dd4
.word 0xbf88764c
.word 0xd35e561
.word 0xd2a9dd4
.word 0xbf88764c
.word 0xd35e561
.word 0xd2a9dd4
.word 0xbf88764c
.word 0xd35e561
.word 0xd2a9dd4
.word 0xbf88764c
.word 0xd35e561
.word 0xd2a9dd4
.word 0xbf88764c
.word 0xd35e561
.word 0xcf6a4cf
.word 0xc01630b2
.word 0xd90b37c
.word 0xcf6a4cf
.word 0xc01630b2
.word 0xd90b37c
.word 0xcf6a4cf
.word 0xc01630b2
.word 0xd90b37c
.word 0xcf6a4cf
.word 0xc01630b2
.word 0xd90b37c
.word 0xcf6a4cf
.word 0xc01630b2
.word 0xd90b37c
.word 0xd16ddde
.word 0xbf2f5df8
.word 0xcceb218
.word 0xd16ddde
.word 0xbf2f5df8
.word 0xcceb218
.word 0xd16ddde
.word 0xbf2f5df8
.word 0xcceb218
.word 0xd16ddde
.word 0xbf2f5df8
.word 0xcceb218
.word 0xd16ddde
.word 0xbf2f5df8
.word 0xcceb218
.word 0xb3a879f
.word 0xbf439313
.word 0xb0e8078
.word 0xb3a879f
.word 0xbf439313
.word 0xb0e8078
.word 0xb3a879f
.word 0xbf439313
.word 0xb0e8078
.word 0xb3a879f
.word 0xbf439313
.word 0xb0e8078
.word 0xb3a879f
.word 0xbf439313
.word 0xb0e8078
.word 0xd105d0a
.word 0xbf1a5d46
.word 0xcae1923
.word 0xd105d0a
.word 0xbf1a5d46
.word 0xcae1923
.word 0xd105d0a
.word 0xbf1a5d46
.word 0xcae1923
.word 0xd105d0a
.word 0xbf1a5d46
.word 0xcae1923
.word 0xd105d0a
.word 0xbf1a5d46
.word 0xcae1923
.word 0xd9a0c58
.word 0xbf12bc19
.word 0xd309875
.word 0xd9a0c58
.word 0xbf12bc19
.word 0xd309875
.word 0xd9a0c58
.word 0xbf12bc19
.word 0xd309875
.word 0xd9a0c58
.word 0xbf12bc19
.word 0xd309875
.word 0xd9a0c58
.word 0xbf12bc19
.word 0xd309875
.word 0xd6aa17e
.word 0xbfb01eb9
.word 0xda16b30
.word 0xd6aa17e
.word 0xbfb01eb9
.word 0xda16b30
.word 0xd6aa17e
.word 0xbfb01eb9
.word 0xda16b30
.word 0xd6aa17e
.word 0xbfb01eb9
.word 0xda16b30
.word 0xd6aa17e
.word 0xbfb01eb9
.word 0xda16b30
.word 0xd0bc2a2
.word 0xbf69eca6
.word 0xcff6ab0
.word 0xd0bc2a2
.word 0xbf69eca6
.word 0xcff6ab0
.word 0xd0bc2a2
.word 0xbf69eca6
.word 0xcff6ab0
.word 0xd0bc2a2
.word 0xbf69eca6
.word 0xcff6ab0
.word 0xd0bc2a2
.word 0xbf69eca6
.word 0xcff6ab0
.word 0xd3c9c8a
.word 0xbe8b8632
.word 0xc4d97bc
.word 0xd3c9c8a
.word 0xbe8b8632
.word 0xc4d97bc
.word 0xd3c9c8a
.word 0xbe8b8632
.word 0xc4d97bc
.word 0xd3c9c8a
.word 0xbe8b8632
.word 0xc4d97bc
.word 0xd3c9c8a
.word 0xbe8b8632
.word 0xc4d97bc
.word 0xd44a3df
.word 0xbf802e60
.word 0xd44eb1d
.word 0xd44a3df
.word 0xbf802e60
.word 0xd44eb1d
.word 0xd44a3df
.word 0xbf802e60
.word 0xd44eb1d
.word 0xd44a3df
.word 0xbf802e60
.word 0xd44eb1d
.word 0xd44a3df
.word 0xbf802e60
.word 0xd44eb1d
.word 0xd595706
.word 0xbeeb90f4
.word 0xcc7fdf3
.word 0xd595706
.word 0xbeeb90f4
.word 0xcc7fdf3
.word 0xd595706
.word 0xbeeb90f4
.word 0xcc7fdf3
.word 0xd595706
.word 0xbeeb90f4
.word 0xcc7fdf3
.word 0xd595706
.word 0xbeeb90f4
.word 0xcc7fdf3
.word 0xd879143
.word 0xbf618104
.word 0xd6ed5fe
.word 0xd879143
.word 0xbf618104
.word 0xd6ed5fe
.word 0xd879143
.word 0xbf618104
.word 0xd6ed5fe
.word 0xd879143
.word 0xbf618104
.word 0xd6ed5fe
.word 0xd879143
.word 0xbf618104
.word 0xd6ed5fe
.word 0xd383b17
.word 0xbfcf8193
.word 0xd955507
.word 0xd383b17
.word 0xbfcf8193
.word 0xd955507
.word 0xd383b17
.word 0xbfcf8193
.word 0xd955507
.word 0xd91fc19
.word 0xbf032d0d
.word 0xd159b64
.word 0xd91fc19
.word 0xbf032d0d
.word 0xd159b64
.word 0xd91fc19
.word 0xbf032d0d
.word 0xd159b64
.word 0xce5b5be
.word 0xc01fa549
.word 0xd8f4031
RVTEST_DATA_END

RVMODEL_DATA_BEGIN


signature_x15_0:
    .fill 0*(XLEN/32),4,0xdeadbeef


signature_x15_1:
    .fill 296*(XLEN/32),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*(XLEN/32),4,0xdeadbeef

#endif

RVMODEL_DATA_END
