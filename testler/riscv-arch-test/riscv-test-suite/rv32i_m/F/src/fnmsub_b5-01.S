
// -----------
// This file was generated by riscv_ctg (https://gitlab.com/incoresemi/riscv-compliance/riscv_ctg)
// version   : 0.5.2
// timestamp : Tue Sep  7 16:08:13 2021 GMT
// usage     : riscv_ctg \
//                  -- cgf $cgf \
//                  -- xlen $xlen \
// -----------
//
// -----------
// Copyright (c) 2021. IIT Madras. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.s instruction of the RISC-V F extension for the fnmsub_b5 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fnmsub_b5)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x16,test_fp)
RVTEST_SIGBASE(x15,signature_x15_1)

inst_0:
// rs1 == rd != rs2 and rs1 == rd != rs3 and rs3 != rs2, rs1==f29, rs2==f3, rs3==f22, rd==f29, fs1 == 0 and fe1 == 0xfc and fm1 == 0x2e1c2f and fs2 == 1 and fe2 == 0x81 and fm2 == 0x07d476 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x38c2b9 and rm_val == 0  
// opcode: fnmsub.s ; op1:f29; op2:f3; op3:f22; dest:f29; op1val:0x7e2e1c2f; op2val:0xc087d476; op3val:0x7f38c2b9; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f29, f29, f3, f22, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_1:
// rs3 == rd != rs1 and rs3 == rd != rs2 and rs2 != rs1, rs1==f17, rs2==f24, rs3==f27, rd==f27, fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b48d4 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6fe0a2 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x207f4a and rm_val == 4  
// opcode: fnmsub.s ; op1:f17; op2:f24; op3:f27; dest:f27; op1val:0x7eab48d4; op2val:0xbf6fe0a2; op3val:0x7ea07f4a; valaddr_reg:x16; val_offset:12; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f27, f17, f24, f27, 0x4, 0, x16, 12, x17, x15, 8, x18)

inst_2:
// rs1 != rs2 and rs1 != rd and rs1 != rs3 and rs2 != rs3 and rs2 != rd and rs3 != rd, rs1==f11, rs2==f0, rs3==f31, rd==f4, fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b48d4 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6fe0a2 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x207f4a and rm_val == 3  
// opcode: fnmsub.s ; op1:f11; op2:f0; op3:f31; dest:f4; op1val:0x7eab48d4; op2val:0xbf6fe0a2; op3val:0x7ea07f4a; valaddr_reg:x16; val_offset:24; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f4, f11, f0, f31, 0x3, 0, x16, 24, x17, x15, 16, x18)

inst_3:
// rs1 == rs2 != rs3 and rs1 == rs2 != rd and rd != rs3, rs1==f21, rs2==f21, rs3==f19, rd==f14, fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b48d4 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6fe0a2 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x207f4a and rm_val == 2  
// opcode: fnmsub.s ; op1:f21; op2:f21; op3:f19; dest:f14; op1val:0x7eab48d4; op2val:0x7eab48d4; op3val:0x7ea07f4a; valaddr_reg:x16; val_offset:36; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f14, f21, f21, f19, 0x2, 0, x16, 36, x17, x15, 24, x18)

inst_4:
// rs1 == rs2 == rs3 == rd, rs1==f5, rs2==f5, rs3==f5, rd==f5, fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b48d4 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6fe0a2 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x207f4a and rm_val == 1  
// opcode: fnmsub.s ; op1:f5; op2:f5; op3:f5; dest:f5; op1val:0x7eab48d4; op2val:0x7eab48d4; op3val:0x7eab48d4; valaddr_reg:x16; val_offset:48; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f5, f5, f5, f5, 0x1, 0, x16, 48, x17, x15, 32, x18)

inst_5:
// rd == rs2 == rs3 != rs1, rs1==f13, rs2==f9, rs3==f9, rd==f9, fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b48d4 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6fe0a2 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x207f4a and rm_val == 0  
// opcode: fnmsub.s ; op1:f13; op2:f9; op3:f9; dest:f9; op1val:0x7eab48d4; op2val:0xbf6fe0a2; op3val:0xbf6fe0a2; valaddr_reg:x16; val_offset:60; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f9, f13, f9, f9, 0x0, 0, x16, 60, x17, x15, 40, x18)

inst_6:
// rs1 == rs2 == rd != rs3, rs1==f7, rs2==f7, rs3==f8, rd==f7, fs1 == 0 and fe1 == 0xfc and fm1 == 0x31f5db and fs2 == 1 and fe2 == 0x7f and fm2 == 0x628967 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x1d7a90 and rm_val == 4  
// opcode: fnmsub.s ; op1:f7; op2:f7; op3:f8; dest:f7; op1val:0x7e31f5db; op2val:0x7e31f5db; op3val:0x7e9d7a90; valaddr_reg:x16; val_offset:72; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f7, f7, f7, f8, 0x4, 0, x16, 72, x17, x15, 48, x18)

inst_7:
// rs1 == rs3 != rs2 and rs1 == rs3 != rd and rd != rs2, rs1==f0, rs2==f23, rs3==f0, rd==f10, fs1 == 0 and fe1 == 0xfc and fm1 == 0x31f5db and fs2 == 1 and fe2 == 0x7f and fm2 == 0x628967 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x1d7a90 and rm_val == 3  
// opcode: fnmsub.s ; op1:f0; op2:f23; op3:f0; dest:f10; op1val:0x7e31f5db; op2val:0xbfe28967; op3val:0x7e31f5db; valaddr_reg:x16; val_offset:84; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f10, f0, f23, f0, 0x3, 0, x16, 84, x17, x15, 56, x18)

inst_8:
// rs2 == rs3 != rs1 and rs2 == rs3 != rd and rd != rs1, rs1==f3, rs2==f4, rs3==f4, rd==f22, fs1 == 0 and fe1 == 0xfc and fm1 == 0x31f5db and fs2 == 1 and fe2 == 0x7f and fm2 == 0x628967 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x1d7a90 and rm_val == 2  
// opcode: fnmsub.s ; op1:f3; op2:f4; op3:f4; dest:f22; op1val:0x7e31f5db; op2val:0xbfe28967; op3val:0xbfe28967; valaddr_reg:x16; val_offset:96; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f22, f3, f4, f4, 0x2, 0, x16, 96, x17, x15, 64, x18)

inst_9:
// rs1 == rs2 == rs3 != rd, rs1==f15, rs2==f15, rs3==f15, rd==f11, fs1 == 0 and fe1 == 0xfc and fm1 == 0x31f5db and fs2 == 1 and fe2 == 0x7f and fm2 == 0x628967 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x1d7a90 and rm_val == 1  
// opcode: fnmsub.s ; op1:f15; op2:f15; op3:f15; dest:f11; op1val:0x7e31f5db; op2val:0x7e31f5db; op3val:0x7e31f5db; valaddr_reg:x16; val_offset:108; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f11, f15, f15, f15, 0x1, 0, x16, 108, x17, x15, 72, x18)

inst_10:
// rs1 == rd == rs3 != rs2, rs1==f24, rs2==f11, rs3==f24, rd==f24, fs1 == 0 and fe1 == 0xfc and fm1 == 0x31f5db and fs2 == 1 and fe2 == 0x7f and fm2 == 0x628967 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x1d7a90 and rm_val == 0  
// opcode: fnmsub.s ; op1:f24; op2:f11; op3:f24; dest:f24; op1val:0x7e31f5db; op2val:0xbfe28967; op3val:0x7e31f5db; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f24, f24, f11, f24, 0x0, 0, x16, 120, x17, x15, 80, x18)

inst_11:
// rs2 == rd != rs1 and rs2 == rd != rs3 and rs3 != rs1, rs1==f16, rs2==f18, rs3==f3, rd==f18, fs1 == 0 and fe1 == 0xfc and fm1 == 0x02ae3a and fs2 == 1 and fe2 == 0x80 and fm2 == 0x23d78d and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2745f0 and rm_val == 4  
// opcode: fnmsub.s ; op1:f16; op2:f18; op3:f3; dest:f18; op1val:0x7e02ae3a; op2val:0xc023d78d; op3val:0x7ea745f0; valaddr_reg:x16; val_offset:132; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f18, f16, f18, f3, 0x4, 0, x16, 132, x17, x15, 88, x18)

inst_12:
// rs1==f8, rs2==f6, rs3==f10, rd==f26, fs1 == 0 and fe1 == 0xfc and fm1 == 0x02ae3a and fs2 == 1 and fe2 == 0x80 and fm2 == 0x23d78d and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2745f0 and rm_val == 3  
// opcode: fnmsub.s ; op1:f8; op2:f6; op3:f10; dest:f26; op1val:0x7e02ae3a; op2val:0xc023d78d; op3val:0x7ea745f0; valaddr_reg:x16; val_offset:144; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f26, f8, f6, f10, 0x3, 0, x16, 144, x17, x15, 96, x18)

inst_13:
// rs1==f28, rs2==f25, rs3==f13, rd==f20, fs1 == 0 and fe1 == 0xfc and fm1 == 0x02ae3a and fs2 == 1 and fe2 == 0x80 and fm2 == 0x23d78d and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2745f0 and rm_val == 2  
// opcode: fnmsub.s ; op1:f28; op2:f25; op3:f13; dest:f20; op1val:0x7e02ae3a; op2val:0xc023d78d; op3val:0x7ea745f0; valaddr_reg:x16; val_offset:156; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f20, f28, f25, f13, 0x2, 0, x16, 156, x17, x15, 104, x18)

inst_14:
// rs1==f6, rs2==f22, rs3==f21, rd==f28, fs1 == 0 and fe1 == 0xfc and fm1 == 0x02ae3a and fs2 == 1 and fe2 == 0x80 and fm2 == 0x23d78d and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2745f0 and rm_val == 1  
// opcode: fnmsub.s ; op1:f6; op2:f22; op3:f21; dest:f28; op1val:0x7e02ae3a; op2val:0xc023d78d; op3val:0x7ea745f0; valaddr_reg:x16; val_offset:168; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f28, f6, f22, f21, 0x1, 0, x16, 168, x17, x15, 112, x18)

inst_15:
// rs1==f14, rs2==f1, rs3==f18, rd==f17, fs1 == 0 and fe1 == 0xfc and fm1 == 0x02ae3a and fs2 == 1 and fe2 == 0x80 and fm2 == 0x23d78d and fs3 == 0 and fe3 == 0xfd and fm3 == 0x2745f0 and rm_val == 0  
// opcode: fnmsub.s ; op1:f14; op2:f1; op3:f18; dest:f17; op1val:0x7e02ae3a; op2val:0xc023d78d; op3val:0x7ea745f0; valaddr_reg:x16; val_offset:180; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f17, f14, f1, f18, 0x0, 0, x16, 180, x17, x15, 120, x18)

inst_16:
// rs1==f18, rs2==f10, rs3==f17, rd==f31, fs1 == 0 and fe1 == 0xfe and fm1 == 0x12bec8 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x64fb22 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0341df and rm_val == 4  
// opcode: fnmsub.s ; op1:f18; op2:f10; op3:f17; dest:f31; op1val:0x7f12bec8; op2val:0xbee4fb22; op3val:0x7e8341df; valaddr_reg:x16; val_offset:192; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f31, f18, f10, f17, 0x4, 0, x16, 192, x17, x15, 128, x18)

inst_17:
// rs1==f23, rs2==f29, rs3==f14, rd==f25, fs1 == 0 and fe1 == 0xfe and fm1 == 0x12bec8 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x64fb22 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0341df and rm_val == 3  
// opcode: fnmsub.s ; op1:f23; op2:f29; op3:f14; dest:f25; op1val:0x7f12bec8; op2val:0xbee4fb22; op3val:0x7e8341df; valaddr_reg:x16; val_offset:204; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f25, f23, f29, f14, 0x3, 0, x16, 204, x17, x15, 136, x18)

inst_18:
// rs1==f12, rs2==f20, rs3==f11, rd==f19, fs1 == 0 and fe1 == 0xfe and fm1 == 0x12bec8 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x64fb22 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0341df and rm_val == 2  
// opcode: fnmsub.s ; op1:f12; op2:f20; op3:f11; dest:f19; op1val:0x7f12bec8; op2val:0xbee4fb22; op3val:0x7e8341df; valaddr_reg:x16; val_offset:216; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f19, f12, f20, f11, 0x2, 0, x16, 216, x17, x15, 144, x18)

inst_19:
// rs1==f30, rs2==f26, rs3==f7, rd==f2, fs1 == 0 and fe1 == 0xfe and fm1 == 0x12bec8 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x64fb22 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0341df and rm_val == 1  
// opcode: fnmsub.s ; op1:f30; op2:f26; op3:f7; dest:f2; op1val:0x7f12bec8; op2val:0xbee4fb22; op3val:0x7e8341df; valaddr_reg:x16; val_offset:228; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f2, f30, f26, f7, 0x1, 0, x16, 228, x17, x15, 152, x18)

inst_20:
// rs1==f27, rs2==f17, rs3==f6, rd==f1, fs1 == 0 and fe1 == 0xfe and fm1 == 0x12bec8 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x64fb22 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x0341df and rm_val == 0  
// opcode: fnmsub.s ; op1:f27; op2:f17; op3:f6; dest:f1; op1val:0x7f12bec8; op2val:0xbee4fb22; op3val:0x7e8341df; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f1, f27, f17, f6, 0x0, 0, x16, 240, x17, x15, 160, x18)

inst_21:
// rs1==f4, rs2==f14, rs3==f26, rd==f0, fs1 == 0 and fe1 == 0xfc and fm1 == 0x666f32 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x34700f and fs3 == 0 and fe3 == 0xf8 and fm3 == 0x226b0e and rm_val == 4  
// opcode: fnmsub.s ; op1:f4; op2:f14; op3:f26; dest:f0; op1val:0x7e666f32; op2val:0xbd34700f; op3val:0x7c226b0e; valaddr_reg:x16; val_offset:252; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f0, f4, f14, f26, 0x4, 0, x16, 252, x17, x15, 168, x18)

inst_22:
// rs1==f9, rs2==f12, rs3==f25, rd==f15, fs1 == 0 and fe1 == 0xfc and fm1 == 0x666f32 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x34700f and fs3 == 0 and fe3 == 0xf8 and fm3 == 0x226b0e and rm_val == 3  
// opcode: fnmsub.s ; op1:f9; op2:f12; op3:f25; dest:f15; op1val:0x7e666f32; op2val:0xbd34700f; op3val:0x7c226b0e; valaddr_reg:x16; val_offset:264; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f15, f9, f12, f25, 0x3, 0, x16, 264, x17, x15, 176, x18)

inst_23:
// rs1==f20, rs2==f28, rs3==f23, rd==f21, fs1 == 0 and fe1 == 0xfc and fm1 == 0x666f32 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x34700f and fs3 == 0 and fe3 == 0xf8 and fm3 == 0x226b0e and rm_val == 2  
// opcode: fnmsub.s ; op1:f20; op2:f28; op3:f23; dest:f21; op1val:0x7e666f32; op2val:0xbd34700f; op3val:0x7c226b0e; valaddr_reg:x16; val_offset:276; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f21, f20, f28, f23, 0x2, 0, x16, 276, x17, x15, 184, x18)

inst_24:
// rs1==f22, rs2==f13, rs3==f12, rd==f3, fs1 == 0 and fe1 == 0xfc and fm1 == 0x666f32 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x34700f and fs3 == 0 and fe3 == 0xf8 and fm3 == 0x226b0e and rm_val == 1  
// opcode: fnmsub.s ; op1:f22; op2:f13; op3:f12; dest:f3; op1val:0x7e666f32; op2val:0xbd34700f; op3val:0x7c226b0e; valaddr_reg:x16; val_offset:288; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f3, f22, f13, f12, 0x1, 0, x16, 288, x17, x15, 192, x18)

inst_25:
// rs1==f1, rs2==f8, rs3==f2, rd==f16, fs1 == 0 and fe1 == 0xfc and fm1 == 0x666f32 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x34700f and fs3 == 0 and fe3 == 0xf8 and fm3 == 0x226b0e and rm_val == 0  
// opcode: fnmsub.s ; op1:f1; op2:f8; op3:f2; dest:f16; op1val:0x7e666f32; op2val:0xbd34700f; op3val:0x7c226b0e; valaddr_reg:x16; val_offset:300; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f16, f1, f8, f2, 0x0, 0, x16, 300, x17, x15, 200, x18)

inst_26:
// rs1==f19, rs2==f31, rs3==f20, rd==f13, fs1 == 0 and fe1 == 0xfc and fm1 == 0x1afd1d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7312ff and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1329c3 and rm_val == 4  
// opcode: fnmsub.s ; op1:f19; op2:f31; op3:f20; dest:f13; op1val:0x7e1afd1d; op2val:0xc07312ff; op3val:0x7f1329c3; valaddr_reg:x16; val_offset:312; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f19, f31, f20, 0x4, 0, x16, 312, x17, x15, 208, x18)

inst_27:
// rs1==f25, rs2==f30, rs3==f1, rd==f23, fs1 == 0 and fe1 == 0xfc and fm1 == 0x1afd1d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7312ff and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1329c3 and rm_val == 3  
// opcode: fnmsub.s ; op1:f25; op2:f30; op3:f1; dest:f23; op1val:0x7e1afd1d; op2val:0xc07312ff; op3val:0x7f1329c3; valaddr_reg:x16; val_offset:324; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f23, f25, f30, f1, 0x3, 0, x16, 324, x17, x15, 216, x18)

inst_28:
// rs1==f2, rs2==f16, rs3==f28, rd==f6, fs1 == 0 and fe1 == 0xfc and fm1 == 0x1afd1d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7312ff and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1329c3 and rm_val == 2  
// opcode: fnmsub.s ; op1:f2; op2:f16; op3:f28; dest:f6; op1val:0x7e1afd1d; op2val:0xc07312ff; op3val:0x7f1329c3; valaddr_reg:x16; val_offset:336; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f6, f2, f16, f28, 0x2, 0, x16, 336, x17, x15, 224, x18)

inst_29:
// rs1==f10, rs2==f2, rs3==f30, rd==f8, fs1 == 0 and fe1 == 0xfc and fm1 == 0x1afd1d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7312ff and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1329c3 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f2; op3:f30; dest:f8; op1val:0x7e1afd1d; op2val:0xc07312ff; op3val:0x7f1329c3; valaddr_reg:x16; val_offset:348; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f8, f10, f2, f30, 0x1, 0, x16, 348, x17, x15, 232, x18)

inst_30:
// rs1==f26, rs2==f27, rs3==f16, rd==f30, fs1 == 0 and fe1 == 0xfc and fm1 == 0x1afd1d and fs2 == 1 and fe2 == 0x80 and fm2 == 0x7312ff and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1329c3 and rm_val == 0  
// opcode: fnmsub.s ; op1:f26; op2:f27; op3:f16; dest:f30; op1val:0x7e1afd1d; op2val:0xc07312ff; op3val:0x7f1329c3; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f30, f26, f27, f16, 0x0, 0, x16, 360, x17, x15, 240, x18)

inst_31:
// rs1==f31, rs2==f19, rs3==f29, rd==f12, fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ea866 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3c2825 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3b2b9b and rm_val == 4  
// opcode: fnmsub.s ; op1:f31; op2:f19; op3:f29; dest:f12; op1val:0x7efea866; op2val:0xbfbc2825; op3val:0x7f3b2b9b; valaddr_reg:x16; val_offset:372; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f12, f31, f19, f29, 0x4, 0, x16, 372, x17, x15, 248, x18)

inst_32:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ea866 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3c2825 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3b2b9b and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7efea866; op2val:0xbfbc2825; op3val:0x7f3b2b9b; valaddr_reg:x16; val_offset:384; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 384, x17, x15, 256, x18)

inst_33:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ea866 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3c2825 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3b2b9b and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7efea866; op2val:0xbfbc2825; op3val:0x7f3b2b9b; valaddr_reg:x16; val_offset:396; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 396, x17, x15, 264, x18)

inst_34:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ea866 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3c2825 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3b2b9b and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7efea866; op2val:0xbfbc2825; op3val:0x7f3b2b9b; valaddr_reg:x16; val_offset:408; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 408, x17, x15, 272, x18)

inst_35:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ea866 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3c2825 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3b2b9b and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7efea866; op2val:0xbfbc2825; op3val:0x7f3b2b9b; valaddr_reg:x16; val_offset:420; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 420, x17, x15, 280, x18)

inst_36:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x182a54 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x56b7cf and fs3 == 0 and fe3 == 0xfb and fm3 == 0x7f4148 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e982a54; op2val:0xbed6b7cf; op3val:0x7dff4148; valaddr_reg:x16; val_offset:432; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 432, x17, x15, 288, x18)

inst_37:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x182a54 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x56b7cf and fs3 == 0 and fe3 == 0xfb and fm3 == 0x7f4148 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e982a54; op2val:0xbed6b7cf; op3val:0x7dff4148; valaddr_reg:x16; val_offset:444; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 444, x17, x15, 296, x18)

inst_38:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x182a54 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x56b7cf and fs3 == 0 and fe3 == 0xfb and fm3 == 0x7f4148 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e982a54; op2val:0xbed6b7cf; op3val:0x7dff4148; valaddr_reg:x16; val_offset:456; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 456, x17, x15, 304, x18)

inst_39:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x182a54 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x56b7cf and fs3 == 0 and fe3 == 0xfb and fm3 == 0x7f4148 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e982a54; op2val:0xbed6b7cf; op3val:0x7dff4148; valaddr_reg:x16; val_offset:468; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 468, x17, x15, 312, x18)

inst_40:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x182a54 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x56b7cf and fs3 == 0 and fe3 == 0xfb and fm3 == 0x7f4148 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e982a54; op2val:0xbed6b7cf; op3val:0x7dff4148; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 320, x18)

inst_41:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2b296b and fs2 == 1 and fe2 == 0x7c and fm2 == 0x494e1c and fs3 == 0 and fe3 == 0xfc and fm3 == 0x0697be and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2b296b; op2val:0xbe494e1c; op3val:0x7e0697be; valaddr_reg:x16; val_offset:492; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 492, x17, x15, 328, x18)

inst_42:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2b296b and fs2 == 1 and fe2 == 0x7c and fm2 == 0x494e1c and fs3 == 0 and fe3 == 0xfc and fm3 == 0x0697be and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2b296b; op2val:0xbe494e1c; op3val:0x7e0697be; valaddr_reg:x16; val_offset:504; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 504, x17, x15, 336, x18)

inst_43:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2b296b and fs2 == 1 and fe2 == 0x7c and fm2 == 0x494e1c and fs3 == 0 and fe3 == 0xfc and fm3 == 0x0697be and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2b296b; op2val:0xbe494e1c; op3val:0x7e0697be; valaddr_reg:x16; val_offset:516; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 516, x17, x15, 344, x18)

inst_44:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2b296b and fs2 == 1 and fe2 == 0x7c and fm2 == 0x494e1c and fs3 == 0 and fe3 == 0xfc and fm3 == 0x0697be and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2b296b; op2val:0xbe494e1c; op3val:0x7e0697be; valaddr_reg:x16; val_offset:528; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 528, x17, x15, 352, x18)

inst_45:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2b296b and fs2 == 1 and fe2 == 0x7c and fm2 == 0x494e1c and fs3 == 0 and fe3 == 0xfc and fm3 == 0x0697be and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2b296b; op2val:0xbe494e1c; op3val:0x7e0697be; valaddr_reg:x16; val_offset:540; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 540, x17, x15, 360, x18)

inst_46:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10bd56 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0da990 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x20304e and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e90bd56; op2val:0xc00da990; op3val:0x7f20304e; valaddr_reg:x16; val_offset:552; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 552, x17, x15, 368, x18)

inst_47:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10bd56 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0da990 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x20304e and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e90bd56; op2val:0xc00da990; op3val:0x7f20304e; valaddr_reg:x16; val_offset:564; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 564, x17, x15, 376, x18)

inst_48:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10bd56 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0da990 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x20304e and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e90bd56; op2val:0xc00da990; op3val:0x7f20304e; valaddr_reg:x16; val_offset:576; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 576, x17, x15, 384, x18)

inst_49:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10bd56 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0da990 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x20304e and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e90bd56; op2val:0xc00da990; op3val:0x7f20304e; valaddr_reg:x16; val_offset:588; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 588, x17, x15, 392, x18)

inst_50:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10bd56 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0da990 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x20304e and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e90bd56; op2val:0xc00da990; op3val:0x7f20304e; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 400, x18)

inst_51:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4cef54 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4b1960 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x229618 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e4cef54; op2val:0xbfcb1960; op3val:0x7ea29618; valaddr_reg:x16; val_offset:612; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 612, x17, x15, 408, x18)

inst_52:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4cef54 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4b1960 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x229618 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e4cef54; op2val:0xbfcb1960; op3val:0x7ea29618; valaddr_reg:x16; val_offset:624; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 624, x17, x15, 416, x18)

inst_53:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4cef54 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4b1960 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x229618 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e4cef54; op2val:0xbfcb1960; op3val:0x7ea29618; valaddr_reg:x16; val_offset:636; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 636, x17, x15, 424, x18)

inst_54:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4cef54 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4b1960 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x229618 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e4cef54; op2val:0xbfcb1960; op3val:0x7ea29618; valaddr_reg:x16; val_offset:648; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 648, x17, x15, 432, x18)

inst_55:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4cef54 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4b1960 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x229618 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e4cef54; op2val:0xbfcb1960; op3val:0x7ea29618; valaddr_reg:x16; val_offset:660; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 660, x17, x15, 440, x18)

inst_56:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x126d0d and fs2 == 1 and fe2 == 0x83 and fm2 == 0x666e32 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x03cd01 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7c126d0d; op2val:0xc1e66e32; op3val:0x7e83cd01; valaddr_reg:x16; val_offset:672; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 672, x17, x15, 448, x18)

inst_57:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x126d0d and fs2 == 1 and fe2 == 0x83 and fm2 == 0x666e32 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x03cd01 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7c126d0d; op2val:0xc1e66e32; op3val:0x7e83cd01; valaddr_reg:x16; val_offset:684; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 684, x17, x15, 456, x18)

inst_58:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x126d0d and fs2 == 1 and fe2 == 0x83 and fm2 == 0x666e32 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x03cd01 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7c126d0d; op2val:0xc1e66e32; op3val:0x7e83cd01; valaddr_reg:x16; val_offset:696; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 696, x17, x15, 464, x18)

inst_59:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x126d0d and fs2 == 1 and fe2 == 0x83 and fm2 == 0x666e32 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x03cd01 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7c126d0d; op2val:0xc1e66e32; op3val:0x7e83cd01; valaddr_reg:x16; val_offset:708; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 708, x17, x15, 472, x18)

inst_60:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x126d0d and fs2 == 1 and fe2 == 0x83 and fm2 == 0x666e32 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x03cd01 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7c126d0d; op2val:0xc1e66e32; op3val:0x7e83cd01; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 480, x18)

inst_61:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x28ecea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0ded2e and fs3 == 0 and fe3 == 0xfc and fm3 == 0x3b4dfe and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e28ecea; op2val:0xbf8ded2e; op3val:0x7e3b4dfe; valaddr_reg:x16; val_offset:732; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 732, x17, x15, 488, x18)

inst_62:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x28ecea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0ded2e and fs3 == 0 and fe3 == 0xfc and fm3 == 0x3b4dfe and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e28ecea; op2val:0xbf8ded2e; op3val:0x7e3b4dfe; valaddr_reg:x16; val_offset:744; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 744, x17, x15, 496, x18)

inst_63:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x28ecea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0ded2e and fs3 == 0 and fe3 == 0xfc and fm3 == 0x3b4dfe and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e28ecea; op2val:0xbf8ded2e; op3val:0x7e3b4dfe; valaddr_reg:x16; val_offset:756; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 756, x17, x15, 504, x18)

inst_64:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x28ecea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0ded2e and fs3 == 0 and fe3 == 0xfc and fm3 == 0x3b4dfe and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e28ecea; op2val:0xbf8ded2e; op3val:0x7e3b4dfe; valaddr_reg:x16; val_offset:768; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 768, x17, x15, 512, x18)

inst_65:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x28ecea and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0ded2e and fs3 == 0 and fe3 == 0xfc and fm3 == 0x3b4dfe and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e28ecea; op2val:0xbf8ded2e; op3val:0x7e3b4dfe; valaddr_reg:x16; val_offset:780; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 780, x17, x15, 520, x18)

inst_66:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42d924 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x30e83a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x06a60a and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ec2d924; op2val:0xbfb0e83a; op3val:0x7f06a60a; valaddr_reg:x16; val_offset:792; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 792, x17, x15, 528, x18)

inst_67:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42d924 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x30e83a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x06a60a and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ec2d924; op2val:0xbfb0e83a; op3val:0x7f06a60a; valaddr_reg:x16; val_offset:804; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 804, x17, x15, 536, x18)

inst_68:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42d924 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x30e83a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x06a60a and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ec2d924; op2val:0xbfb0e83a; op3val:0x7f06a60a; valaddr_reg:x16; val_offset:816; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 816, x17, x15, 544, x18)

inst_69:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42d924 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x30e83a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x06a60a and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ec2d924; op2val:0xbfb0e83a; op3val:0x7f06a60a; valaddr_reg:x16; val_offset:828; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 828, x17, x15, 552, x18)

inst_70:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42d924 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x30e83a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x06a60a and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ec2d924; op2val:0xbfb0e83a; op3val:0x7f06a60a; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 560, x18)

inst_71:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x5b67a0 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x4a57e5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2d6b19 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d5b67a0; op2val:0xc14a57e5; op3val:0x7f2d6b19; valaddr_reg:x16; val_offset:852; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 852, x17, x15, 568, x18)

inst_72:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x5b67a0 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x4a57e5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2d6b19 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d5b67a0; op2val:0xc14a57e5; op3val:0x7f2d6b19; valaddr_reg:x16; val_offset:864; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 864, x17, x15, 576, x18)

inst_73:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x5b67a0 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x4a57e5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2d6b19 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d5b67a0; op2val:0xc14a57e5; op3val:0x7f2d6b19; valaddr_reg:x16; val_offset:876; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 876, x17, x15, 584, x18)

inst_74:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x5b67a0 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x4a57e5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2d6b19 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d5b67a0; op2val:0xc14a57e5; op3val:0x7f2d6b19; valaddr_reg:x16; val_offset:888; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 888, x17, x15, 592, x18)

inst_75:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x5b67a0 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x4a57e5 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2d6b19 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d5b67a0; op2val:0xc14a57e5; op3val:0x7f2d6b19; valaddr_reg:x16; val_offset:900; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 900, x17, x15, 600, x18)

inst_76:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4b074e and fs2 == 1 and fe2 == 0x7e and fm2 == 0x76d5a9 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x43c279 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ecb074e; op2val:0xbf76d5a9; op3val:0x7ec3c279; valaddr_reg:x16; val_offset:912; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 912, x17, x15, 608, x18)

inst_77:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4b074e and fs2 == 1 and fe2 == 0x7e and fm2 == 0x76d5a9 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x43c279 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ecb074e; op2val:0xbf76d5a9; op3val:0x7ec3c279; valaddr_reg:x16; val_offset:924; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 924, x17, x15, 616, x18)

inst_78:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4b074e and fs2 == 1 and fe2 == 0x7e and fm2 == 0x76d5a9 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x43c279 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ecb074e; op2val:0xbf76d5a9; op3val:0x7ec3c279; valaddr_reg:x16; val_offset:936; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 936, x17, x15, 624, x18)

inst_79:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4b074e and fs2 == 1 and fe2 == 0x7e and fm2 == 0x76d5a9 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x43c279 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ecb074e; op2val:0xbf76d5a9; op3val:0x7ec3c279; valaddr_reg:x16; val_offset:948; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 948, x17, x15, 632, x18)

inst_80:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4b074e and fs2 == 1 and fe2 == 0x7e and fm2 == 0x76d5a9 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x43c279 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ecb074e; op2val:0xbf76d5a9; op3val:0x7ec3c279; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 640, x18)

inst_81:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x17cb34 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x427de0 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x66a542 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e17cb34; op2val:0xbf427de0; op3val:0x7de6a542; valaddr_reg:x16; val_offset:972; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 972, x17, x15, 648, x18)

inst_82:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x17cb34 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x427de0 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x66a542 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e17cb34; op2val:0xbf427de0; op3val:0x7de6a542; valaddr_reg:x16; val_offset:984; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 984, x17, x15, 656, x18)

inst_83:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x17cb34 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x427de0 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x66a542 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e17cb34; op2val:0xbf427de0; op3val:0x7de6a542; valaddr_reg:x16; val_offset:996; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 996, x17, x15, 664, x18)

inst_84:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x17cb34 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x427de0 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x66a542 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e17cb34; op2val:0xbf427de0; op3val:0x7de6a542; valaddr_reg:x16; val_offset:1008; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1008, x17, x15, 672, x18)

inst_85:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x17cb34 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x427de0 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x66a542 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e17cb34; op2val:0xbf427de0; op3val:0x7de6a542; valaddr_reg:x16; val_offset:1020; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1020, x17, x15, 680, x18)

inst_86:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x21f35d and fs2 == 1 and fe2 == 0x7e and fm2 == 0x18d959 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4163ff and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f21f35d; op2val:0xbf18d959; op3val:0x7ec163ff; valaddr_reg:x16; val_offset:1032; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1032, x17, x15, 688, x18)

inst_87:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x21f35d and fs2 == 1 and fe2 == 0x7e and fm2 == 0x18d959 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4163ff and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f21f35d; op2val:0xbf18d959; op3val:0x7ec163ff; valaddr_reg:x16; val_offset:1044; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1044, x17, x15, 696, x18)

inst_88:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x21f35d and fs2 == 1 and fe2 == 0x7e and fm2 == 0x18d959 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4163ff and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f21f35d; op2val:0xbf18d959; op3val:0x7ec163ff; valaddr_reg:x16; val_offset:1056; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1056, x17, x15, 704, x18)

inst_89:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x21f35d and fs2 == 1 and fe2 == 0x7e and fm2 == 0x18d959 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4163ff and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f21f35d; op2val:0xbf18d959; op3val:0x7ec163ff; valaddr_reg:x16; val_offset:1068; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1068, x17, x15, 712, x18)

inst_90:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x21f35d and fs2 == 1 and fe2 == 0x7e and fm2 == 0x18d959 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x4163ff and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f21f35d; op2val:0xbf18d959; op3val:0x7ec163ff; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 720, x18)

inst_91:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x06cfd9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2d2ef6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x366662 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f06cfd9; op2val:0xbfad2ef6; op3val:0x7f366662; valaddr_reg:x16; val_offset:1092; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1092, x17, x15, 728, x18)

inst_92:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x06cfd9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2d2ef6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x366662 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f06cfd9; op2val:0xbfad2ef6; op3val:0x7f366662; valaddr_reg:x16; val_offset:1104; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1104, x17, x15, 736, x18)

inst_93:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x06cfd9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2d2ef6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x366662 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f06cfd9; op2val:0xbfad2ef6; op3val:0x7f366662; valaddr_reg:x16; val_offset:1116; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1116, x17, x15, 744, x18)

inst_94:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x06cfd9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2d2ef6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x366662 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f06cfd9; op2val:0xbfad2ef6; op3val:0x7f366662; valaddr_reg:x16; val_offset:1128; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1128, x17, x15, 752, x18)

inst_95:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x06cfd9 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x2d2ef6 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x366662 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f06cfd9; op2val:0xbfad2ef6; op3val:0x7f366662; valaddr_reg:x16; val_offset:1140; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1140, x17, x15, 760, x18)

inst_96:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x15f05d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x62402e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0483c9 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d95f05d; op2val:0xc0e2402e; op3val:0x7f0483c9; valaddr_reg:x16; val_offset:1152; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1152, x17, x15, 768, x18)

inst_97:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x15f05d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x62402e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0483c9 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d95f05d; op2val:0xc0e2402e; op3val:0x7f0483c9; valaddr_reg:x16; val_offset:1164; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1164, x17, x15, 776, x18)

inst_98:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x15f05d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x62402e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0483c9 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d95f05d; op2val:0xc0e2402e; op3val:0x7f0483c9; valaddr_reg:x16; val_offset:1176; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1176, x17, x15, 784, x18)

inst_99:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x15f05d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x62402e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0483c9 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d95f05d; op2val:0xc0e2402e; op3val:0x7f0483c9; valaddr_reg:x16; val_offset:1188; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1188, x17, x15, 792, x18)

inst_100:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x15f05d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x62402e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0483c9 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d95f05d; op2val:0xc0e2402e; op3val:0x7f0483c9; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 800, x18)

inst_101:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4f529d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3532e8 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x12bea4 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7dcf529d; op2val:0xc0b532e8; op3val:0x7f12bea4; valaddr_reg:x16; val_offset:1212; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1212, x17, x15, 808, x18)

inst_102:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4f529d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3532e8 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x12bea4 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7dcf529d; op2val:0xc0b532e8; op3val:0x7f12bea4; valaddr_reg:x16; val_offset:1224; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1224, x17, x15, 816, x18)

inst_103:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4f529d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3532e8 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x12bea4 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7dcf529d; op2val:0xc0b532e8; op3val:0x7f12bea4; valaddr_reg:x16; val_offset:1236; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1236, x17, x15, 824, x18)

inst_104:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4f529d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3532e8 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x12bea4 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7dcf529d; op2val:0xc0b532e8; op3val:0x7f12bea4; valaddr_reg:x16; val_offset:1248; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1248, x17, x15, 832, x18)

inst_105:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4f529d and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3532e8 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x12bea4 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7dcf529d; op2val:0xc0b532e8; op3val:0x7f12bea4; valaddr_reg:x16; val_offset:1260; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1260, x17, x15, 840, x18)

inst_106:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x08f8b6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1d8c50 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x289736 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e88f8b6; op2val:0xc01d8c50; op3val:0x7f289736; valaddr_reg:x16; val_offset:1272; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1272, x17, x15, 848, x18)

inst_107:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x08f8b6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1d8c50 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x289736 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e88f8b6; op2val:0xc01d8c50; op3val:0x7f289736; valaddr_reg:x16; val_offset:1284; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1284, x17, x15, 856, x18)

inst_108:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x08f8b6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1d8c50 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x289736 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e88f8b6; op2val:0xc01d8c50; op3val:0x7f289736; valaddr_reg:x16; val_offset:1296; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1296, x17, x15, 864, x18)

inst_109:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x08f8b6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1d8c50 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x289736 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e88f8b6; op2val:0xc01d8c50; op3val:0x7f289736; valaddr_reg:x16; val_offset:1308; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1308, x17, x15, 872, x18)

inst_110:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x08f8b6 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x1d8c50 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x289736 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e88f8b6; op2val:0xc01d8c50; op3val:0x7f289736; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 880, x18)

inst_111:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2924ed and fs2 == 1 and fe2 == 0x7d and fm2 == 0x260466 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5b61b5 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2924ed; op2val:0xbea60466; op3val:0x7e5b61b5; valaddr_reg:x16; val_offset:1332; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1332, x17, x15, 888, x18)

inst_112:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2924ed and fs2 == 1 and fe2 == 0x7d and fm2 == 0x260466 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5b61b5 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2924ed; op2val:0xbea60466; op3val:0x7e5b61b5; valaddr_reg:x16; val_offset:1344; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1344, x17, x15, 896, x18)

inst_113:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2924ed and fs2 == 1 and fe2 == 0x7d and fm2 == 0x260466 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5b61b5 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2924ed; op2val:0xbea60466; op3val:0x7e5b61b5; valaddr_reg:x16; val_offset:1356; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1356, x17, x15, 904, x18)

inst_114:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2924ed and fs2 == 1 and fe2 == 0x7d and fm2 == 0x260466 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5b61b5 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2924ed; op2val:0xbea60466; op3val:0x7e5b61b5; valaddr_reg:x16; val_offset:1368; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1368, x17, x15, 912, x18)

inst_115:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2924ed and fs2 == 1 and fe2 == 0x7d and fm2 == 0x260466 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x5b61b5 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2924ed; op2val:0xbea60466; op3val:0x7e5b61b5; valaddr_reg:x16; val_offset:1380; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1380, x17, x15, 920, x18)

inst_116:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5e5241 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x212887 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0bf4ed and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ede5241; op2val:0xbfa12887; op3val:0x7f0bf4ed; valaddr_reg:x16; val_offset:1392; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1392, x17, x15, 928, x18)

inst_117:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5e5241 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x212887 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0bf4ed and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ede5241; op2val:0xbfa12887; op3val:0x7f0bf4ed; valaddr_reg:x16; val_offset:1404; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1404, x17, x15, 936, x18)

inst_118:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5e5241 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x212887 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0bf4ed and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ede5241; op2val:0xbfa12887; op3val:0x7f0bf4ed; valaddr_reg:x16; val_offset:1416; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1416, x17, x15, 944, x18)

inst_119:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5e5241 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x212887 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0bf4ed and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ede5241; op2val:0xbfa12887; op3val:0x7f0bf4ed; valaddr_reg:x16; val_offset:1428; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1428, x17, x15, 952, x18)

inst_120:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5e5241 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x212887 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x0bf4ed and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ede5241; op2val:0xbfa12887; op3val:0x7f0bf4ed; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 960, x18)

inst_121:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x14e13e and fs2 == 1 and fe2 == 0x81 and fm2 == 0x1c2a84 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x35a3f8 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e14e13e; op2val:0xc09c2a84; op3val:0x7f35a3f8; valaddr_reg:x16; val_offset:1452; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1452, x17, x15, 968, x18)

inst_122:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x14e13e and fs2 == 1 and fe2 == 0x81 and fm2 == 0x1c2a84 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x35a3f8 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e14e13e; op2val:0xc09c2a84; op3val:0x7f35a3f8; valaddr_reg:x16; val_offset:1464; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1464, x17, x15, 976, x18)

inst_123:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x14e13e and fs2 == 1 and fe2 == 0x81 and fm2 == 0x1c2a84 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x35a3f8 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e14e13e; op2val:0xc09c2a84; op3val:0x7f35a3f8; valaddr_reg:x16; val_offset:1476; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1476, x17, x15, 984, x18)

inst_124:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x14e13e and fs2 == 1 and fe2 == 0x81 and fm2 == 0x1c2a84 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x35a3f8 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e14e13e; op2val:0xc09c2a84; op3val:0x7f35a3f8; valaddr_reg:x16; val_offset:1488; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1488, x17, x15, 992, x18)

inst_125:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x14e13e and fs2 == 1 and fe2 == 0x81 and fm2 == 0x1c2a84 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x35a3f8 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e14e13e; op2val:0xc09c2a84; op3val:0x7f35a3f8; valaddr_reg:x16; val_offset:1500; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1500, x17, x15, 1000, x18)

inst_126:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x35a451 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x043b82 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3ba5e6 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f35a451; op2val:0xbf043b82; op3val:0x7ebba5e6; valaddr_reg:x16; val_offset:1512; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1512, x17, x15, 1008, x18)

inst_127:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x35a451 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x043b82 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3ba5e6 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f35a451; op2val:0xbf043b82; op3val:0x7ebba5e6; valaddr_reg:x16; val_offset:1524; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1524, x17, x15, 1016, x18)

inst_128:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x35a451 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x043b82 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3ba5e6 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f35a451; op2val:0xbf043b82; op3val:0x7ebba5e6; valaddr_reg:x16; val_offset:1536; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1536, x17, x15, 1024, x18)

inst_129:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x35a451 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x043b82 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3ba5e6 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f35a451; op2val:0xbf043b82; op3val:0x7ebba5e6; valaddr_reg:x16; val_offset:1548; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1548, x17, x15, 1032, x18)

inst_130:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x35a451 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x043b82 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3ba5e6 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f35a451; op2val:0xbf043b82; op3val:0x7ebba5e6; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1040, x18)

inst_131:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5a52ec and fs2 == 1 and fe2 == 0x7d and fm2 == 0x67e1c6 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x45c160 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7dda52ec; op2val:0xbee7e1c6; op3val:0x7d45c160; valaddr_reg:x16; val_offset:1572; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1572, x17, x15, 1048, x18)

inst_132:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5a52ec and fs2 == 1 and fe2 == 0x7d and fm2 == 0x67e1c6 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x45c160 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7dda52ec; op2val:0xbee7e1c6; op3val:0x7d45c160; valaddr_reg:x16; val_offset:1584; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1584, x17, x15, 1056, x18)

inst_133:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5a52ec and fs2 == 1 and fe2 == 0x7d and fm2 == 0x67e1c6 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x45c160 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7dda52ec; op2val:0xbee7e1c6; op3val:0x7d45c160; valaddr_reg:x16; val_offset:1596; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1596, x17, x15, 1064, x18)

inst_134:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5a52ec and fs2 == 1 and fe2 == 0x7d and fm2 == 0x67e1c6 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x45c160 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7dda52ec; op2val:0xbee7e1c6; op3val:0x7d45c160; valaddr_reg:x16; val_offset:1608; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1608, x17, x15, 1072, x18)

inst_135:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5a52ec and fs2 == 1 and fe2 == 0x7d and fm2 == 0x67e1c6 and fs3 == 0 and fe3 == 0xfa and fm3 == 0x45c160 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7dda52ec; op2val:0xbee7e1c6; op3val:0x7d45c160; valaddr_reg:x16; val_offset:1620; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1620, x17, x15, 1080, x18)

inst_136:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d1061 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x25299a and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5f4f5d and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2d1061; op2val:0xbf25299a; op3val:0x7edf4f5d; valaddr_reg:x16; val_offset:1632; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1632, x17, x15, 1088, x18)

inst_137:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d1061 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x25299a and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5f4f5d and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2d1061; op2val:0xbf25299a; op3val:0x7edf4f5d; valaddr_reg:x16; val_offset:1644; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1644, x17, x15, 1096, x18)

inst_138:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d1061 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x25299a and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5f4f5d and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2d1061; op2val:0xbf25299a; op3val:0x7edf4f5d; valaddr_reg:x16; val_offset:1656; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1656, x17, x15, 1104, x18)

inst_139:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d1061 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x25299a and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5f4f5d and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2d1061; op2val:0xbf25299a; op3val:0x7edf4f5d; valaddr_reg:x16; val_offset:1668; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1668, x17, x15, 1112, x18)

inst_140:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d1061 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x25299a and fs3 == 0 and fe3 == 0xfd and fm3 == 0x5f4f5d and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2d1061; op2val:0xbf25299a; op3val:0x7edf4f5d; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1120, x18)

inst_141:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f1227 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x27232f and fs3 == 0 and fe3 == 0xfd and fm3 == 0x797e34 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ebf1227; op2val:0xbfa7232f; op3val:0x7ef97e34; valaddr_reg:x16; val_offset:1692; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1692, x17, x15, 1128, x18)

inst_142:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f1227 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x27232f and fs3 == 0 and fe3 == 0xfd and fm3 == 0x797e34 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ebf1227; op2val:0xbfa7232f; op3val:0x7ef97e34; valaddr_reg:x16; val_offset:1704; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1704, x17, x15, 1136, x18)

inst_143:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f1227 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x27232f and fs3 == 0 and fe3 == 0xfd and fm3 == 0x797e34 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ebf1227; op2val:0xbfa7232f; op3val:0x7ef97e34; valaddr_reg:x16; val_offset:1716; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1716, x17, x15, 1144, x18)

inst_144:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f1227 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x27232f and fs3 == 0 and fe3 == 0xfd and fm3 == 0x797e34 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ebf1227; op2val:0xbfa7232f; op3val:0x7ef97e34; valaddr_reg:x16; val_offset:1728; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1728, x17, x15, 1152, x18)

inst_145:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f1227 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x27232f and fs3 == 0 and fe3 == 0xfd and fm3 == 0x797e34 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ebf1227; op2val:0xbfa7232f; op3val:0x7ef97e34; valaddr_reg:x16; val_offset:1740; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1740, x17, x15, 1160, x18)

inst_146:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x01f5dd and fs2 == 1 and fe2 == 0x80 and fm2 == 0x02ba3e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x04bacd and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e81f5dd; op2val:0xc002ba3e; op3val:0x7f04bacd; valaddr_reg:x16; val_offset:1752; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1752, x17, x15, 1168, x18)

inst_147:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x01f5dd and fs2 == 1 and fe2 == 0x80 and fm2 == 0x02ba3e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x04bacd and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e81f5dd; op2val:0xc002ba3e; op3val:0x7f04bacd; valaddr_reg:x16; val_offset:1764; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1764, x17, x15, 1176, x18)

inst_148:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x01f5dd and fs2 == 1 and fe2 == 0x80 and fm2 == 0x02ba3e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x04bacd and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e81f5dd; op2val:0xc002ba3e; op3val:0x7f04bacd; valaddr_reg:x16; val_offset:1776; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1776, x17, x15, 1184, x18)

inst_149:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x01f5dd and fs2 == 1 and fe2 == 0x80 and fm2 == 0x02ba3e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x04bacd and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e81f5dd; op2val:0xc002ba3e; op3val:0x7f04bacd; valaddr_reg:x16; val_offset:1788; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1788, x17, x15, 1192, x18)

inst_150:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x01f5dd and fs2 == 1 and fe2 == 0x80 and fm2 == 0x02ba3e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x04bacd and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e81f5dd; op2val:0xc002ba3e; op3val:0x7f04bacd; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1200, x18)

inst_151:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10d8c5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x603fc7 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7dc386 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e90d8c5; op2val:0xbfe03fc7; op3val:0x7efdc386; valaddr_reg:x16; val_offset:1812; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1812, x17, x15, 1208, x18)

inst_152:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10d8c5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x603fc7 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7dc386 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e90d8c5; op2val:0xbfe03fc7; op3val:0x7efdc386; valaddr_reg:x16; val_offset:1824; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1824, x17, x15, 1216, x18)

inst_153:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10d8c5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x603fc7 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7dc386 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e90d8c5; op2val:0xbfe03fc7; op3val:0x7efdc386; valaddr_reg:x16; val_offset:1836; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1836, x17, x15, 1224, x18)

inst_154:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10d8c5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x603fc7 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7dc386 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e90d8c5; op2val:0xbfe03fc7; op3val:0x7efdc386; valaddr_reg:x16; val_offset:1848; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1848, x17, x15, 1232, x18)

inst_155:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10d8c5 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x603fc7 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x7dc386 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e90d8c5; op2val:0xbfe03fc7; op3val:0x7efdc386; valaddr_reg:x16; val_offset:1860; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1860, x17, x15, 1240, x18)

inst_156:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x41cef4 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x1d4815 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6e24fd and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d41cef4; op2val:0xc11d4815; op3val:0x7eee24fd; valaddr_reg:x16; val_offset:1872; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1872, x17, x15, 1248, x18)

inst_157:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x41cef4 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x1d4815 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6e24fd and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d41cef4; op2val:0xc11d4815; op3val:0x7eee24fd; valaddr_reg:x16; val_offset:1884; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1884, x17, x15, 1256, x18)

inst_158:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x41cef4 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x1d4815 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6e24fd and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d41cef4; op2val:0xc11d4815; op3val:0x7eee24fd; valaddr_reg:x16; val_offset:1896; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1896, x17, x15, 1264, x18)

inst_159:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x41cef4 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x1d4815 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6e24fd and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d41cef4; op2val:0xc11d4815; op3val:0x7eee24fd; valaddr_reg:x16; val_offset:1908; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1908, x17, x15, 1272, x18)

inst_160:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x41cef4 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x1d4815 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x6e24fd and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d41cef4; op2val:0xc11d4815; op3val:0x7eee24fd; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1280, x18)

inst_161:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x466afe and fs2 == 1 and fe2 == 0x80 and fm2 == 0x75a3a7 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3e633d and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e466afe; op2val:0xc075a3a7; op3val:0x7f3e633d; valaddr_reg:x16; val_offset:1932; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1932, x17, x15, 1288, x18)

inst_162:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x466afe and fs2 == 1 and fe2 == 0x80 and fm2 == 0x75a3a7 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3e633d and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e466afe; op2val:0xc075a3a7; op3val:0x7f3e633d; valaddr_reg:x16; val_offset:1944; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 1944, x17, x15, 1296, x18)

inst_163:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x466afe and fs2 == 1 and fe2 == 0x80 and fm2 == 0x75a3a7 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3e633d and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e466afe; op2val:0xc075a3a7; op3val:0x7f3e633d; valaddr_reg:x16; val_offset:1956; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 1956, x17, x15, 1304, x18)

inst_164:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x466afe and fs2 == 1 and fe2 == 0x80 and fm2 == 0x75a3a7 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3e633d and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e466afe; op2val:0xc075a3a7; op3val:0x7f3e633d; valaddr_reg:x16; val_offset:1968; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 1968, x17, x15, 1312, x18)

inst_165:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x466afe and fs2 == 1 and fe2 == 0x80 and fm2 == 0x75a3a7 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3e633d and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e466afe; op2val:0xc075a3a7; op3val:0x7f3e633d; valaddr_reg:x16; val_offset:1980; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1980, x17, x15, 1320, x18)

inst_166:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1190a0 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x199c78 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x2eb0d1 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e9190a0; op2val:0xbe999c78; op3val:0x7daeb0d1; valaddr_reg:x16; val_offset:1992; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 1992, x17, x15, 1328, x18)

inst_167:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1190a0 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x199c78 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x2eb0d1 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e9190a0; op2val:0xbe999c78; op3val:0x7daeb0d1; valaddr_reg:x16; val_offset:2004; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 2004, x17, x15, 1336, x18)

inst_168:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1190a0 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x199c78 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x2eb0d1 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e9190a0; op2val:0xbe999c78; op3val:0x7daeb0d1; valaddr_reg:x16; val_offset:2016; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 2016, x17, x15, 1344, x18)

inst_169:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1190a0 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x199c78 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x2eb0d1 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e9190a0; op2val:0xbe999c78; op3val:0x7daeb0d1; valaddr_reg:x16; val_offset:2028; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 2028, x17, x15, 1352, x18)
addi x16,x16,2040

inst_170:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1190a0 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x199c78 and fs3 == 0 and fe3 == 0xfb and fm3 == 0x2eb0d1 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e9190a0; op2val:0xbe999c78; op3val:0x7daeb0d1; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 1360, x18)

inst_171:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c8afc and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0d9df0 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2d3243 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e9c8afc; op2val:0xc00d9df0; op3val:0x7f2d3243; valaddr_reg:x16; val_offset:12; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 12, x17, x15, 1368, x18)

inst_172:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c8afc and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0d9df0 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2d3243 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e9c8afc; op2val:0xc00d9df0; op3val:0x7f2d3243; valaddr_reg:x16; val_offset:24; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 24, x17, x15, 1376, x18)

inst_173:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c8afc and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0d9df0 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2d3243 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e9c8afc; op2val:0xc00d9df0; op3val:0x7f2d3243; valaddr_reg:x16; val_offset:36; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 36, x17, x15, 1384, x18)

inst_174:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c8afc and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0d9df0 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2d3243 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e9c8afc; op2val:0xc00d9df0; op3val:0x7f2d3243; valaddr_reg:x16; val_offset:48; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 48, x17, x15, 1392, x18)

inst_175:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1c8afc and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0d9df0 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x2d3243 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e9c8afc; op2val:0xc00d9df0; op3val:0x7f2d3243; valaddr_reg:x16; val_offset:60; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 60, x17, x15, 1400, x18)

inst_176:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x75a735 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x5581bc and fs3 == 0 and fe3 == 0xfc and fm3 == 0x4ce09d and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7c75a735; op2val:0xc15581bc; op3val:0x7e4ce09d; valaddr_reg:x16; val_offset:72; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 72, x17, x15, 1408, x18)

inst_177:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x75a735 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x5581bc and fs3 == 0 and fe3 == 0xfc and fm3 == 0x4ce09d and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7c75a735; op2val:0xc15581bc; op3val:0x7e4ce09d; valaddr_reg:x16; val_offset:84; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 84, x17, x15, 1416, x18)

inst_178:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x75a735 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x5581bc and fs3 == 0 and fe3 == 0xfc and fm3 == 0x4ce09d and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7c75a735; op2val:0xc15581bc; op3val:0x7e4ce09d; valaddr_reg:x16; val_offset:96; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 96, x17, x15, 1424, x18)

inst_179:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x75a735 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x5581bc and fs3 == 0 and fe3 == 0xfc and fm3 == 0x4ce09d and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7c75a735; op2val:0xc15581bc; op3val:0x7e4ce09d; valaddr_reg:x16; val_offset:108; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 108, x17, x15, 1432, x18)

inst_180:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x75a735 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x5581bc and fs3 == 0 and fe3 == 0xfc and fm3 == 0x4ce09d and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7c75a735; op2val:0xc15581bc; op3val:0x7e4ce09d; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 1440, x18)

inst_181:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0992a2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x275676 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x33da3d and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d8992a2; op2val:0xc0275676; op3val:0x7e33da3d; valaddr_reg:x16; val_offset:132; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 132, x17, x15, 1448, x18)

inst_182:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0992a2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x275676 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x33da3d and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d8992a2; op2val:0xc0275676; op3val:0x7e33da3d; valaddr_reg:x16; val_offset:144; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 144, x17, x15, 1456, x18)

inst_183:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0992a2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x275676 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x33da3d and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d8992a2; op2val:0xc0275676; op3val:0x7e33da3d; valaddr_reg:x16; val_offset:156; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 156, x17, x15, 1464, x18)

inst_184:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0992a2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x275676 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x33da3d and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d8992a2; op2val:0xc0275676; op3val:0x7e33da3d; valaddr_reg:x16; val_offset:168; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 168, x17, x15, 1472, x18)

inst_185:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0992a2 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x275676 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x33da3d and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d8992a2; op2val:0xc0275676; op3val:0x7e33da3d; valaddr_reg:x16; val_offset:180; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 180, x17, x15, 1480, x18)

inst_186:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x13a21e and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0a4105 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1f75c7 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e13a21e; op2val:0xc08a4105; op3val:0x7f1f75c7; valaddr_reg:x16; val_offset:192; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 192, x17, x15, 1488, x18)

inst_187:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x13a21e and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0a4105 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1f75c7 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e13a21e; op2val:0xc08a4105; op3val:0x7f1f75c7; valaddr_reg:x16; val_offset:204; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 204, x17, x15, 1496, x18)

inst_188:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x13a21e and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0a4105 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1f75c7 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e13a21e; op2val:0xc08a4105; op3val:0x7f1f75c7; valaddr_reg:x16; val_offset:216; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 216, x17, x15, 1504, x18)

inst_189:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x13a21e and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0a4105 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1f75c7 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e13a21e; op2val:0xc08a4105; op3val:0x7f1f75c7; valaddr_reg:x16; val_offset:228; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 228, x17, x15, 1512, x18)

inst_190:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x13a21e and fs2 == 1 and fe2 == 0x81 and fm2 == 0x0a4105 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x1f75c7 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e13a21e; op2val:0xc08a4105; op3val:0x7f1f75c7; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 1520, x18)

inst_191:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e00ba and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0bd260 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3e12c6 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eae00ba; op2val:0xbf8bd260; op3val:0x7ebe12c6; valaddr_reg:x16; val_offset:252; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 252, x17, x15, 1528, x18)

inst_192:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e00ba and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0bd260 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3e12c6 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eae00ba; op2val:0xbf8bd260; op3val:0x7ebe12c6; valaddr_reg:x16; val_offset:264; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 264, x17, x15, 1536, x18)

inst_193:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e00ba and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0bd260 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3e12c6 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eae00ba; op2val:0xbf8bd260; op3val:0x7ebe12c6; valaddr_reg:x16; val_offset:276; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 276, x17, x15, 1544, x18)

inst_194:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e00ba and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0bd260 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3e12c6 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eae00ba; op2val:0xbf8bd260; op3val:0x7ebe12c6; valaddr_reg:x16; val_offset:288; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 288, x17, x15, 1552, x18)

inst_195:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2e00ba and fs2 == 1 and fe2 == 0x7f and fm2 == 0x0bd260 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x3e12c6 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eae00ba; op2val:0xbf8bd260; op3val:0x7ebe12c6; valaddr_reg:x16; val_offset:300; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 300, x17, x15, 1560, x18)

inst_196:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x767a3b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x371e70 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x304eaf and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef67a3b; op2val:0xbf371e70; op3val:0x7eb04eaf; valaddr_reg:x16; val_offset:312; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 312, x17, x15, 1568, x18)

inst_197:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x767a3b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x371e70 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x304eaf and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef67a3b; op2val:0xbf371e70; op3val:0x7eb04eaf; valaddr_reg:x16; val_offset:324; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 324, x17, x15, 1576, x18)

inst_198:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x767a3b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x371e70 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x304eaf and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef67a3b; op2val:0xbf371e70; op3val:0x7eb04eaf; valaddr_reg:x16; val_offset:336; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 336, x17, x15, 1584, x18)

inst_199:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x767a3b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x371e70 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x304eaf and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef67a3b; op2val:0xbf371e70; op3val:0x7eb04eaf; valaddr_reg:x16; val_offset:348; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 348, x17, x15, 1592, x18)

inst_200:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x767a3b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x371e70 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x304eaf and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef67a3b; op2val:0xbf371e70; op3val:0x7eb04eaf; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 1600, x18)

inst_201:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3fd529 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x569c36 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x20d13f and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3fd529; op2val:0xbe569c36; op3val:0x7e20d13f; valaddr_reg:x16; val_offset:372; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 372, x17, x15, 1608, x18)

inst_202:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3fd529 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x569c36 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x20d13f and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3fd529; op2val:0xbe569c36; op3val:0x7e20d13f; valaddr_reg:x16; val_offset:384; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 384, x17, x15, 1616, x18)

inst_203:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3fd529 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x569c36 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x20d13f and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3fd529; op2val:0xbe569c36; op3val:0x7e20d13f; valaddr_reg:x16; val_offset:396; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 396, x17, x15, 1624, x18)

inst_204:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3fd529 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x569c36 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x20d13f and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3fd529; op2val:0xbe569c36; op3val:0x7e20d13f; valaddr_reg:x16; val_offset:408; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 408, x17, x15, 1632, x18)

inst_205:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3fd529 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x569c36 and fs3 == 0 and fe3 == 0xfc and fm3 == 0x20d13f and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3fd529; op2val:0xbe569c36; op3val:0x7e20d13f; valaddr_reg:x16; val_offset:420; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 420, x17, x15, 1640, x18)

inst_206:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x02d835 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x39e73f and fs3 == 0 and fe3 == 0xfc and fm3 == 0x3e08e0 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d82d835; op2val:0xc039e73f; op3val:0x7e3e08e0; valaddr_reg:x16; val_offset:432; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 432, x17, x15, 1648, x18)

inst_207:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x02d835 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x39e73f and fs3 == 0 and fe3 == 0xfc and fm3 == 0x3e08e0 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d82d835; op2val:0xc039e73f; op3val:0x7e3e08e0; valaddr_reg:x16; val_offset:444; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 444, x17, x15, 1656, x18)

inst_208:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x02d835 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x39e73f and fs3 == 0 and fe3 == 0xfc and fm3 == 0x3e08e0 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d82d835; op2val:0xc039e73f; op3val:0x7e3e08e0; valaddr_reg:x16; val_offset:456; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 456, x17, x15, 1664, x18)

inst_209:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x02d835 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x39e73f and fs3 == 0 and fe3 == 0xfc and fm3 == 0x3e08e0 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d82d835; op2val:0xc039e73f; op3val:0x7e3e08e0; valaddr_reg:x16; val_offset:468; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 468, x17, x15, 1672, x18)

inst_210:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x02d835 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x39e73f and fs3 == 0 and fe3 == 0xfc and fm3 == 0x3e08e0 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d82d835; op2val:0xc039e73f; op3val:0x7e3e08e0; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1680, x18)

inst_211:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x420b54 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x328842 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x075328 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7dc20b54; op2val:0xc0b28842; op3val:0x7f075328; valaddr_reg:x16; val_offset:492; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 492, x17, x15, 1688, x18)

inst_212:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x420b54 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x328842 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x075328 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7dc20b54; op2val:0xc0b28842; op3val:0x7f075328; valaddr_reg:x16; val_offset:504; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 504, x17, x15, 1696, x18)

inst_213:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x420b54 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x328842 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x075328 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7dc20b54; op2val:0xc0b28842; op3val:0x7f075328; valaddr_reg:x16; val_offset:516; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 516, x17, x15, 1704, x18)

inst_214:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x420b54 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x328842 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x075328 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7dc20b54; op2val:0xc0b28842; op3val:0x7f075328; valaddr_reg:x16; val_offset:528; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 528, x17, x15, 1712, x18)

inst_215:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x420b54 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x328842 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x075328 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7dc20b54; op2val:0xc0b28842; op3val:0x7f075328; valaddr_reg:x16; val_offset:540; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 540, x17, x15, 1720, x18)

inst_216:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2e1c2f and fs2 == 1 and fe2 == 0x81 and fm2 == 0x07d476 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x38c2b9 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e2e1c2f; op2val:0xc087d476; op3val:0x7f38c2b9; valaddr_reg:x16; val_offset:552; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 552, x17, x15, 1728, x18)

inst_217:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2e1c2f and fs2 == 1 and fe2 == 0x81 and fm2 == 0x07d476 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x38c2b9 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e2e1c2f; op2val:0xc087d476; op3val:0x7f38c2b9; valaddr_reg:x16; val_offset:564; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 564, x17, x15, 1736, x18)

inst_218:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2e1c2f and fs2 == 1 and fe2 == 0x81 and fm2 == 0x07d476 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x38c2b9 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e2e1c2f; op2val:0xc087d476; op3val:0x7f38c2b9; valaddr_reg:x16; val_offset:576; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 576, x17, x15, 1744, x18)

inst_219:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2e1c2f and fs2 == 1 and fe2 == 0x81 and fm2 == 0x07d476 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x38c2b9 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e2e1c2f; op2val:0xc087d476; op3val:0x7f38c2b9; valaddr_reg:x16; val_offset:588; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 588, x17, x15, 1752, x18)

inst_220:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b48d4 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6fe0a2 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x207f4a and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eab48d4; op2val:0xbf6fe0a2; op3val:0x7ea07f4a; valaddr_reg:x16; val_offset:600; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 600, x17, x15, 1760, x18)

inst_221:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b48d4 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6fe0a2 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x207f4a and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eab48d4; op2val:0xbf6fe0a2; op3val:0x7ea07f4a; valaddr_reg:x16; val_offset:612; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 612, x17, x15, 1768, x18)

inst_222:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2b48d4 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x6fe0a2 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x207f4a and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eab48d4; op2val:0xbf6fe0a2; op3val:0x7ea07f4a; valaddr_reg:x16; val_offset:624; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 624, x17, x15, 1776, x18)

inst_223:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x31f5db and fs2 == 1 and fe2 == 0x7f and fm2 == 0x628967 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x1d7a90 and rm_val == 4  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e31f5db; op2val:0xbfe28967; op3val:0x7e9d7a90; valaddr_reg:x16; val_offset:636; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x4, 0, x16, 636, x17, x15, 1784, x18)

inst_224:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x31f5db and fs2 == 1 and fe2 == 0x7f and fm2 == 0x628967 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x1d7a90 and rm_val == 3  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e31f5db; op2val:0xbfe28967; op3val:0x7e9d7a90; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 1792, x18)

inst_225:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x31f5db and fs2 == 1 and fe2 == 0x7f and fm2 == 0x628967 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x1d7a90 and rm_val == 2  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e31f5db; op2val:0xbfe28967; op3val:0x7e9d7a90; valaddr_reg:x16; val_offset:660; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x2, 0, x16, 660, x17, x15, 1800, x18)

inst_226:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x31f5db and fs2 == 1 and fe2 == 0x7f and fm2 == 0x628967 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x1d7a90 and rm_val == 1  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e31f5db; op2val:0xbfe28967; op3val:0x7e9d7a90; valaddr_reg:x16; val_offset:672; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x1, 0, x16, 672, x17, x15, 1808, x18)

inst_227:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x31f5db and fs2 == 1 and fe2 == 0x7f and fm2 == 0x628967 and fs3 == 0 and fe3 == 0xfd and fm3 == 0x1d7a90 and rm_val == 0  
// opcode: fnmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e31f5db; op2val:0xbfe28967; op3val:0x7e9d7a90; valaddr_reg:x16; val_offset:684; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 684, x17, x15, 1816, x18)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
test_fp:
.word 0x7e2e1c2f
.word 0xc087d476
.word 0x7f38c2b9
.word 0x7eab48d4
.word 0xbf6fe0a2
.word 0x7ea07f4a
.word 0x7eab48d4
.word 0xbf6fe0a2
.word 0x7ea07f4a
.word 0x7eab48d4
.word 0x7eab48d4
.word 0x7ea07f4a
.word 0x7eab48d4
.word 0x7eab48d4
.word 0x7eab48d4
.word 0x7eab48d4
.word 0xbf6fe0a2
.word 0xbf6fe0a2
.word 0x7e31f5db
.word 0x7e31f5db
.word 0x7e9d7a90
.word 0x7e31f5db
.word 0xbfe28967
.word 0x7e31f5db
.word 0x7e31f5db
.word 0xbfe28967
.word 0xbfe28967
.word 0x7e31f5db
.word 0x7e31f5db
.word 0x7e31f5db
.word 0x7e31f5db
.word 0xbfe28967
.word 0x7e31f5db
.word 0x7e02ae3a
.word 0xc023d78d
.word 0x7ea745f0
.word 0x7e02ae3a
.word 0xc023d78d
.word 0x7ea745f0
.word 0x7e02ae3a
.word 0xc023d78d
.word 0x7ea745f0
.word 0x7e02ae3a
.word 0xc023d78d
.word 0x7ea745f0
.word 0x7e02ae3a
.word 0xc023d78d
.word 0x7ea745f0
.word 0x7f12bec8
.word 0xbee4fb22
.word 0x7e8341df
.word 0x7f12bec8
.word 0xbee4fb22
.word 0x7e8341df
.word 0x7f12bec8
.word 0xbee4fb22
.word 0x7e8341df
.word 0x7f12bec8
.word 0xbee4fb22
.word 0x7e8341df
.word 0x7f12bec8
.word 0xbee4fb22
.word 0x7e8341df
.word 0x7e666f32
.word 0xbd34700f
.word 0x7c226b0e
.word 0x7e666f32
.word 0xbd34700f
.word 0x7c226b0e
.word 0x7e666f32
.word 0xbd34700f
.word 0x7c226b0e
.word 0x7e666f32
.word 0xbd34700f
.word 0x7c226b0e
.word 0x7e666f32
.word 0xbd34700f
.word 0x7c226b0e
.word 0x7e1afd1d
.word 0xc07312ff
.word 0x7f1329c3
.word 0x7e1afd1d
.word 0xc07312ff
.word 0x7f1329c3
.word 0x7e1afd1d
.word 0xc07312ff
.word 0x7f1329c3
.word 0x7e1afd1d
.word 0xc07312ff
.word 0x7f1329c3
.word 0x7e1afd1d
.word 0xc07312ff
.word 0x7f1329c3
.word 0x7efea866
.word 0xbfbc2825
.word 0x7f3b2b9b
.word 0x7efea866
.word 0xbfbc2825
.word 0x7f3b2b9b
.word 0x7efea866
.word 0xbfbc2825
.word 0x7f3b2b9b
.word 0x7efea866
.word 0xbfbc2825
.word 0x7f3b2b9b
.word 0x7efea866
.word 0xbfbc2825
.word 0x7f3b2b9b
.word 0x7e982a54
.word 0xbed6b7cf
.word 0x7dff4148
.word 0x7e982a54
.word 0xbed6b7cf
.word 0x7dff4148
.word 0x7e982a54
.word 0xbed6b7cf
.word 0x7dff4148
.word 0x7e982a54
.word 0xbed6b7cf
.word 0x7dff4148
.word 0x7e982a54
.word 0xbed6b7cf
.word 0x7dff4148
.word 0x7f2b296b
.word 0xbe494e1c
.word 0x7e0697be
.word 0x7f2b296b
.word 0xbe494e1c
.word 0x7e0697be
.word 0x7f2b296b
.word 0xbe494e1c
.word 0x7e0697be
.word 0x7f2b296b
.word 0xbe494e1c
.word 0x7e0697be
.word 0x7f2b296b
.word 0xbe494e1c
.word 0x7e0697be
.word 0x7e90bd56
.word 0xc00da990
.word 0x7f20304e
.word 0x7e90bd56
.word 0xc00da990
.word 0x7f20304e
.word 0x7e90bd56
.word 0xc00da990
.word 0x7f20304e
.word 0x7e90bd56
.word 0xc00da990
.word 0x7f20304e
.word 0x7e90bd56
.word 0xc00da990
.word 0x7f20304e
.word 0x7e4cef54
.word 0xbfcb1960
.word 0x7ea29618
.word 0x7e4cef54
.word 0xbfcb1960
.word 0x7ea29618
.word 0x7e4cef54
.word 0xbfcb1960
.word 0x7ea29618
.word 0x7e4cef54
.word 0xbfcb1960
.word 0x7ea29618
.word 0x7e4cef54
.word 0xbfcb1960
.word 0x7ea29618
.word 0x7c126d0d
.word 0xc1e66e32
.word 0x7e83cd01
.word 0x7c126d0d
.word 0xc1e66e32
.word 0x7e83cd01
.word 0x7c126d0d
.word 0xc1e66e32
.word 0x7e83cd01
.word 0x7c126d0d
.word 0xc1e66e32
.word 0x7e83cd01
.word 0x7c126d0d
.word 0xc1e66e32
.word 0x7e83cd01
.word 0x7e28ecea
.word 0xbf8ded2e
.word 0x7e3b4dfe
.word 0x7e28ecea
.word 0xbf8ded2e
.word 0x7e3b4dfe
.word 0x7e28ecea
.word 0xbf8ded2e
.word 0x7e3b4dfe
.word 0x7e28ecea
.word 0xbf8ded2e
.word 0x7e3b4dfe
.word 0x7e28ecea
.word 0xbf8ded2e
.word 0x7e3b4dfe
.word 0x7ec2d924
.word 0xbfb0e83a
.word 0x7f06a60a
.word 0x7ec2d924
.word 0xbfb0e83a
.word 0x7f06a60a
.word 0x7ec2d924
.word 0xbfb0e83a
.word 0x7f06a60a
.word 0x7ec2d924
.word 0xbfb0e83a
.word 0x7f06a60a
.word 0x7ec2d924
.word 0xbfb0e83a
.word 0x7f06a60a
.word 0x7d5b67a0
.word 0xc14a57e5
.word 0x7f2d6b19
.word 0x7d5b67a0
.word 0xc14a57e5
.word 0x7f2d6b19
.word 0x7d5b67a0
.word 0xc14a57e5
.word 0x7f2d6b19
.word 0x7d5b67a0
.word 0xc14a57e5
.word 0x7f2d6b19
.word 0x7d5b67a0
.word 0xc14a57e5
.word 0x7f2d6b19
.word 0x7ecb074e
.word 0xbf76d5a9
.word 0x7ec3c279
.word 0x7ecb074e
.word 0xbf76d5a9
.word 0x7ec3c279
.word 0x7ecb074e
.word 0xbf76d5a9
.word 0x7ec3c279
.word 0x7ecb074e
.word 0xbf76d5a9
.word 0x7ec3c279
.word 0x7ecb074e
.word 0xbf76d5a9
.word 0x7ec3c279
.word 0x7e17cb34
.word 0xbf427de0
.word 0x7de6a542
.word 0x7e17cb34
.word 0xbf427de0
.word 0x7de6a542
.word 0x7e17cb34
.word 0xbf427de0
.word 0x7de6a542
.word 0x7e17cb34
.word 0xbf427de0
.word 0x7de6a542
.word 0x7e17cb34
.word 0xbf427de0
.word 0x7de6a542
.word 0x7f21f35d
.word 0xbf18d959
.word 0x7ec163ff
.word 0x7f21f35d
.word 0xbf18d959
.word 0x7ec163ff
.word 0x7f21f35d
.word 0xbf18d959
.word 0x7ec163ff
.word 0x7f21f35d
.word 0xbf18d959
.word 0x7ec163ff
.word 0x7f21f35d
.word 0xbf18d959
.word 0x7ec163ff
.word 0x7f06cfd9
.word 0xbfad2ef6
.word 0x7f366662
.word 0x7f06cfd9
.word 0xbfad2ef6
.word 0x7f366662
.word 0x7f06cfd9
.word 0xbfad2ef6
.word 0x7f366662
.word 0x7f06cfd9
.word 0xbfad2ef6
.word 0x7f366662
.word 0x7f06cfd9
.word 0xbfad2ef6
.word 0x7f366662
.word 0x7d95f05d
.word 0xc0e2402e
.word 0x7f0483c9
.word 0x7d95f05d
.word 0xc0e2402e
.word 0x7f0483c9
.word 0x7d95f05d
.word 0xc0e2402e
.word 0x7f0483c9
.word 0x7d95f05d
.word 0xc0e2402e
.word 0x7f0483c9
.word 0x7d95f05d
.word 0xc0e2402e
.word 0x7f0483c9
.word 0x7dcf529d
.word 0xc0b532e8
.word 0x7f12bea4
.word 0x7dcf529d
.word 0xc0b532e8
.word 0x7f12bea4
.word 0x7dcf529d
.word 0xc0b532e8
.word 0x7f12bea4
.word 0x7dcf529d
.word 0xc0b532e8
.word 0x7f12bea4
.word 0x7dcf529d
.word 0xc0b532e8
.word 0x7f12bea4
.word 0x7e88f8b6
.word 0xc01d8c50
.word 0x7f289736
.word 0x7e88f8b6
.word 0xc01d8c50
.word 0x7f289736
.word 0x7e88f8b6
.word 0xc01d8c50
.word 0x7f289736
.word 0x7e88f8b6
.word 0xc01d8c50
.word 0x7f289736
.word 0x7e88f8b6
.word 0xc01d8c50
.word 0x7f289736
.word 0x7f2924ed
.word 0xbea60466
.word 0x7e5b61b5
.word 0x7f2924ed
.word 0xbea60466
.word 0x7e5b61b5
.word 0x7f2924ed
.word 0xbea60466
.word 0x7e5b61b5
.word 0x7f2924ed
.word 0xbea60466
.word 0x7e5b61b5
.word 0x7f2924ed
.word 0xbea60466
.word 0x7e5b61b5
.word 0x7ede5241
.word 0xbfa12887
.word 0x7f0bf4ed
.word 0x7ede5241
.word 0xbfa12887
.word 0x7f0bf4ed
.word 0x7ede5241
.word 0xbfa12887
.word 0x7f0bf4ed
.word 0x7ede5241
.word 0xbfa12887
.word 0x7f0bf4ed
.word 0x7ede5241
.word 0xbfa12887
.word 0x7f0bf4ed
.word 0x7e14e13e
.word 0xc09c2a84
.word 0x7f35a3f8
.word 0x7e14e13e
.word 0xc09c2a84
.word 0x7f35a3f8
.word 0x7e14e13e
.word 0xc09c2a84
.word 0x7f35a3f8
.word 0x7e14e13e
.word 0xc09c2a84
.word 0x7f35a3f8
.word 0x7e14e13e
.word 0xc09c2a84
.word 0x7f35a3f8
.word 0x7f35a451
.word 0xbf043b82
.word 0x7ebba5e6
.word 0x7f35a451
.word 0xbf043b82
.word 0x7ebba5e6
.word 0x7f35a451
.word 0xbf043b82
.word 0x7ebba5e6
.word 0x7f35a451
.word 0xbf043b82
.word 0x7ebba5e6
.word 0x7f35a451
.word 0xbf043b82
.word 0x7ebba5e6
.word 0x7dda52ec
.word 0xbee7e1c6
.word 0x7d45c160
.word 0x7dda52ec
.word 0xbee7e1c6
.word 0x7d45c160
.word 0x7dda52ec
.word 0xbee7e1c6
.word 0x7d45c160
.word 0x7dda52ec
.word 0xbee7e1c6
.word 0x7d45c160
.word 0x7dda52ec
.word 0xbee7e1c6
.word 0x7d45c160
.word 0x7f2d1061
.word 0xbf25299a
.word 0x7edf4f5d
.word 0x7f2d1061
.word 0xbf25299a
.word 0x7edf4f5d
.word 0x7f2d1061
.word 0xbf25299a
.word 0x7edf4f5d
.word 0x7f2d1061
.word 0xbf25299a
.word 0x7edf4f5d
.word 0x7f2d1061
.word 0xbf25299a
.word 0x7edf4f5d
.word 0x7ebf1227
.word 0xbfa7232f
.word 0x7ef97e34
.word 0x7ebf1227
.word 0xbfa7232f
.word 0x7ef97e34
.word 0x7ebf1227
.word 0xbfa7232f
.word 0x7ef97e34
.word 0x7ebf1227
.word 0xbfa7232f
.word 0x7ef97e34
.word 0x7ebf1227
.word 0xbfa7232f
.word 0x7ef97e34
.word 0x7e81f5dd
.word 0xc002ba3e
.word 0x7f04bacd
.word 0x7e81f5dd
.word 0xc002ba3e
.word 0x7f04bacd
.word 0x7e81f5dd
.word 0xc002ba3e
.word 0x7f04bacd
.word 0x7e81f5dd
.word 0xc002ba3e
.word 0x7f04bacd
.word 0x7e81f5dd
.word 0xc002ba3e
.word 0x7f04bacd
.word 0x7e90d8c5
.word 0xbfe03fc7
.word 0x7efdc386
.word 0x7e90d8c5
.word 0xbfe03fc7
.word 0x7efdc386
.word 0x7e90d8c5
.word 0xbfe03fc7
.word 0x7efdc386
.word 0x7e90d8c5
.word 0xbfe03fc7
.word 0x7efdc386
.word 0x7e90d8c5
.word 0xbfe03fc7
.word 0x7efdc386
.word 0x7d41cef4
.word 0xc11d4815
.word 0x7eee24fd
.word 0x7d41cef4
.word 0xc11d4815
.word 0x7eee24fd
.word 0x7d41cef4
.word 0xc11d4815
.word 0x7eee24fd
.word 0x7d41cef4
.word 0xc11d4815
.word 0x7eee24fd
.word 0x7d41cef4
.word 0xc11d4815
.word 0x7eee24fd
.word 0x7e466afe
.word 0xc075a3a7
.word 0x7f3e633d
.word 0x7e466afe
.word 0xc075a3a7
.word 0x7f3e633d
.word 0x7e466afe
.word 0xc075a3a7
.word 0x7f3e633d
.word 0x7e466afe
.word 0xc075a3a7
.word 0x7f3e633d
.word 0x7e466afe
.word 0xc075a3a7
.word 0x7f3e633d
.word 0x7e9190a0
.word 0xbe999c78
.word 0x7daeb0d1
.word 0x7e9190a0
.word 0xbe999c78
.word 0x7daeb0d1
.word 0x7e9190a0
.word 0xbe999c78
.word 0x7daeb0d1
.word 0x7e9190a0
.word 0xbe999c78
.word 0x7daeb0d1
.word 0x7e9190a0
.word 0xbe999c78
.word 0x7daeb0d1
.word 0x7e9c8afc
.word 0xc00d9df0
.word 0x7f2d3243
.word 0x7e9c8afc
.word 0xc00d9df0
.word 0x7f2d3243
.word 0x7e9c8afc
.word 0xc00d9df0
.word 0x7f2d3243
.word 0x7e9c8afc
.word 0xc00d9df0
.word 0x7f2d3243
.word 0x7e9c8afc
.word 0xc00d9df0
.word 0x7f2d3243
.word 0x7c75a735
.word 0xc15581bc
.word 0x7e4ce09d
.word 0x7c75a735
.word 0xc15581bc
.word 0x7e4ce09d
.word 0x7c75a735
.word 0xc15581bc
.word 0x7e4ce09d
.word 0x7c75a735
.word 0xc15581bc
.word 0x7e4ce09d
.word 0x7c75a735
.word 0xc15581bc
.word 0x7e4ce09d
.word 0x7d8992a2
.word 0xc0275676
.word 0x7e33da3d
.word 0x7d8992a2
.word 0xc0275676
.word 0x7e33da3d
.word 0x7d8992a2
.word 0xc0275676
.word 0x7e33da3d
.word 0x7d8992a2
.word 0xc0275676
.word 0x7e33da3d
.word 0x7d8992a2
.word 0xc0275676
.word 0x7e33da3d
.word 0x7e13a21e
.word 0xc08a4105
.word 0x7f1f75c7
.word 0x7e13a21e
.word 0xc08a4105
.word 0x7f1f75c7
.word 0x7e13a21e
.word 0xc08a4105
.word 0x7f1f75c7
.word 0x7e13a21e
.word 0xc08a4105
.word 0x7f1f75c7
.word 0x7e13a21e
.word 0xc08a4105
.word 0x7f1f75c7
.word 0x7eae00ba
.word 0xbf8bd260
.word 0x7ebe12c6
.word 0x7eae00ba
.word 0xbf8bd260
.word 0x7ebe12c6
.word 0x7eae00ba
.word 0xbf8bd260
.word 0x7ebe12c6
.word 0x7eae00ba
.word 0xbf8bd260
.word 0x7ebe12c6
.word 0x7eae00ba
.word 0xbf8bd260
.word 0x7ebe12c6
.word 0x7ef67a3b
.word 0xbf371e70
.word 0x7eb04eaf
.word 0x7ef67a3b
.word 0xbf371e70
.word 0x7eb04eaf
.word 0x7ef67a3b
.word 0xbf371e70
.word 0x7eb04eaf
.word 0x7ef67a3b
.word 0xbf371e70
.word 0x7eb04eaf
.word 0x7ef67a3b
.word 0xbf371e70
.word 0x7eb04eaf
.word 0x7f3fd529
.word 0xbe569c36
.word 0x7e20d13f
.word 0x7f3fd529
.word 0xbe569c36
.word 0x7e20d13f
.word 0x7f3fd529
.word 0xbe569c36
.word 0x7e20d13f
.word 0x7f3fd529
.word 0xbe569c36
.word 0x7e20d13f
.word 0x7f3fd529
.word 0xbe569c36
.word 0x7e20d13f
.word 0x7d82d835
.word 0xc039e73f
.word 0x7e3e08e0
.word 0x7d82d835
.word 0xc039e73f
.word 0x7e3e08e0
.word 0x7d82d835
.word 0xc039e73f
.word 0x7e3e08e0
.word 0x7d82d835
.word 0xc039e73f
.word 0x7e3e08e0
.word 0x7d82d835
.word 0xc039e73f
.word 0x7e3e08e0
.word 0x7dc20b54
.word 0xc0b28842
.word 0x7f075328
.word 0x7dc20b54
.word 0xc0b28842
.word 0x7f075328
.word 0x7dc20b54
.word 0xc0b28842
.word 0x7f075328
.word 0x7dc20b54
.word 0xc0b28842
.word 0x7f075328
.word 0x7dc20b54
.word 0xc0b28842
.word 0x7f075328
.word 0x7e2e1c2f
.word 0xc087d476
.word 0x7f38c2b9
.word 0x7e2e1c2f
.word 0xc087d476
.word 0x7f38c2b9
.word 0x7e2e1c2f
.word 0xc087d476
.word 0x7f38c2b9
.word 0x7e2e1c2f
.word 0xc087d476
.word 0x7f38c2b9
.word 0x7eab48d4
.word 0xbf6fe0a2
.word 0x7ea07f4a
.word 0x7eab48d4
.word 0xbf6fe0a2
.word 0x7ea07f4a
.word 0x7eab48d4
.word 0xbf6fe0a2
.word 0x7ea07f4a
.word 0x7e31f5db
.word 0xbfe28967
.word 0x7e9d7a90
.word 0x7e31f5db
.word 0xbfe28967
.word 0x7e9d7a90
.word 0x7e31f5db
.word 0xbfe28967
.word 0x7e9d7a90
.word 0x7e31f5db
.word 0xbfe28967
.word 0x7e9d7a90
.word 0x7e31f5db
.word 0xbfe28967
.word 0x7e9d7a90
RVTEST_DATA_END

RVMODEL_DATA_BEGIN


signature_x15_0:
    .fill 0*(XLEN/32),4,0xdeadbeef


signature_x15_1:
    .fill 456*(XLEN/32),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*(XLEN/32),4,0xdeadbeef

#endif

RVMODEL_DATA_END
