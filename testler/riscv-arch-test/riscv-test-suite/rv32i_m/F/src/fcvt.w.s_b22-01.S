
// -----------
// This file was generated by riscv_ctg (https://gitlab.com/incoresemi/riscv-compliance/riscv_ctg)
// version   : 0.5.2
// timestamp : Tue Sep  7 17:29:32 2021 GMT
// usage     : riscv_ctg \
//                  -- cgf $cgf \
//                  -- xlen $xlen \
// -----------
//
// -----------
// Copyright (c) 2021. IIT Madras. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fcvt.w.s instruction of the RISC-V F extension for the fcvt.w.s_b22 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fcvt.w.s_b22)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x16,test_fp)
RVTEST_SIGBASE(x15,signature_x15_1)

inst_0:// rs1==f29, rd==x0, fs1 == 0 and fe1 == 0x7c and fm1 == 0x4923b8 and rm_val == 0  
// opcode: fcvt.w.s ; op1:f29; dest:x0; op1val:0x3e4923b8; valaddr_reg:x16; val_offset:0; rmval:0x0; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x0, f29, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_1:// rs1==f30, rd==x30, fs1 == 1 and fe1 == 0xb6 and fm1 == 0x403ed1 and rm_val == 0  
// opcode: fcvt.w.s ; op1:f30; dest:x30; op1val:0xdb403ed1; valaddr_reg:x16; val_offset:4; rmval:0x0; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x30, f30, 0x0, 0, x16, 4, x17, x15, 8, x18)

inst_2:// rs1==f13, rd==x10, fs1 == 1 and fe1 == 0x29 and fm1 == 0x4ad269 and rm_val == 0  
// opcode: fcvt.w.s ; op1:f13; dest:x10; op1val:0x94cad269; valaddr_reg:x16; val_offset:8; rmval:0x0; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x10, f13, 0x0, 0, x16, 8, x17, x15, 16, x18)

inst_3:// rs1==f15, rd==x25, fs1 == 1 and fe1 == 0xa1 and fm1 == 0x0851ba and rm_val == 0  
// opcode: fcvt.w.s ; op1:f15; dest:x25; op1val:0xd08851ba; valaddr_reg:x16; val_offset:12; rmval:0x0; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x25, f15, 0x0, 0, x16, 12, x17, x15, 24, x18)
RVTEST_VALBASEMOV(x20, x16)
RVTEST_SIGBASE(x19,signature_x19_0)

inst_4:// rs1==f11, rd==x15, fs1 == 0 and fe1 == 0xa0 and fm1 == 0x37cfdc and rm_val == 0  
// opcode: fcvt.w.s ; op1:f11; dest:x15; op1val:0x5037cfdc; valaddr_reg:x20; val_offset:16; rmval:0x0; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x15, f11, 0x0, 0, x20, 16, x21, x19, 0, x18)
RVTEST_VALBASEMOV(x16, x20)
RVTEST_SIGBASE(x15,signature_x15_2)

inst_5:// rs1==f8, rd==x2, fs1 == 0 and fe1 == 0x9f and fm1 == 0x46450c and rm_val == 0  
// opcode: fcvt.w.s ; op1:f8; dest:x2; op1val:0x4fc6450c; valaddr_reg:x16; val_offset:20; rmval:0x0; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x2, f8, 0x0, 0, x16, 20, x17, x15, 0, x18)
RVTEST_VALBASEMOV(x20, x16)
RVTEST_SIGBASE(x19,signature_x19_1)

inst_6:// rs1==f26, rd==x16, fs1 == 1 and fe1 == 0x9e and fm1 == 0x283d12 and rm_val == 0  
// opcode: fcvt.w.s ; op1:f26; dest:x16; op1val:0xcf283d12; valaddr_reg:x20; val_offset:24; rmval:0x0; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x16, f26, 0x0, 0, x20, 24, x21, x19, 0, x18)
RVTEST_VALBASEMOV(x16, x20)
RVTEST_SIGBASE(x15,signature_x15_3)

inst_7:// rs1==f12, rd==x24, fs1 == 0 and fe1 == 0x9d and fm1 == 0x72f818 and rm_val == 0  
// opcode: fcvt.w.s ; op1:f12; dest:x24; op1val:0x4ef2f818; valaddr_reg:x16; val_offset:28; rmval:0x0; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x24, f12, 0x0, 0, x16, 28, x17, x15, 0, x18)

inst_8:// rs1==f17, rd==x13, fs1 == 1 and fe1 == 0x9c and fm1 == 0x2edddb and rm_val == 0  
// opcode: fcvt.w.s ; op1:f17; dest:x13; op1val:0xce2edddb; valaddr_reg:x16; val_offset:32; rmval:0x0; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x13, f17, 0x0, 0, x16, 32, x17, x15, 8, x18)

inst_9:// rs1==f0, rd==x5, fs1 == 1 and fe1 == 0x9b and fm1 == 0x26c422 and rm_val == 0  
// opcode: fcvt.w.s ; op1:f0; dest:x5; op1val:0xcda6c422; valaddr_reg:x16; val_offset:36; rmval:0x0; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x5, f0, 0x0, 0, x16, 36, x17, x15, 16, x18)
RVTEST_VALBASEMOV(x20, x16)
RVTEST_SIGBASE(x19,signature_x19_2)

inst_10:// rs1==f24, rd==x17, fs1 == 1 and fe1 == 0x9a and fm1 == 0x7872c3 and rm_val == 0  
// opcode: fcvt.w.s ; op1:f24; dest:x17; op1val:0xcd7872c3; valaddr_reg:x20; val_offset:40; rmval:0x0; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x17, f24, 0x0, 0, x20, 40, x21, x19, 0, x18)
RVTEST_VALBASEMOV(x16, x20)
RVTEST_SIGBASE(x15,signature_x15_4)

inst_11:// rs1==f18, rd==x29, fs1 == 0 and fe1 == 0x99 and fm1 == 0x112603 and rm_val == 0  
// opcode: fcvt.w.s ; op1:f18; dest:x29; op1val:0x4c912603; valaddr_reg:x16; val_offset:44; rmval:0x0; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x29, f18, 0x0, 0, x16, 44, x17, x15, 0, x18)

inst_12:// rs1==f19, rd==x31, fs1 == 0 and fe1 == 0x98 and fm1 == 0x0084e1 and rm_val == 0  
// opcode: fcvt.w.s ; op1:f19; dest:x31; op1val:0x4c0084e1; valaddr_reg:x16; val_offset:48; rmval:0x0; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x31, f19, 0x0, 0, x16, 48, x17, x15, 8, x18)

inst_13:// rs1==f23, rd==x28, fs1 == 1 and fe1 == 0x97 and fm1 == 0x05aa55 and rm_val == 0  
// opcode: fcvt.w.s ; op1:f23; dest:x28; op1val:0xcb85aa55; valaddr_reg:x16; val_offset:52; rmval:0x0; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x28, f23, 0x0, 0, x16, 52, x17, x15, 16, x18)

inst_14:// rs1==f14, rd==x27, fs1 == 0 and fe1 == 0x96 and fm1 == 0x4e817e and rm_val == 0  
// opcode: fcvt.w.s ; op1:f14; dest:x27; op1val:0x4b4e817e; valaddr_reg:x16; val_offset:56; rmval:0x0; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x27, f14, 0x0, 0, x16, 56, x17, x15, 24, x18)

inst_15:// rs1==f4, rd==x9, fs1 == 0 and fe1 == 0x95 and fm1 == 0x7c14e9 and rm_val == 0  
// opcode: fcvt.w.s ; op1:f4; dest:x9; op1val:0x4afc14e9; valaddr_reg:x16; val_offset:60; rmval:0x0; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x9, f4, 0x0, 0, x16, 60, x17, x15, 32, x18)

inst_16:// rs1==f5, rd==x8, fs1 == 0 and fe1 == 0x94 and fm1 == 0x7dbfb7 and rm_val == 0  
// opcode: fcvt.w.s ; op1:f5; dest:x8; op1val:0x4a7dbfb7; valaddr_reg:x16; val_offset:64; rmval:0x0; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x8, f5, 0x0, 0, x16, 64, x17, x15, 40, x18)

inst_17:// rs1==f25, rd==x4, fs1 == 1 and fe1 == 0x93 and fm1 == 0x624882 and rm_val == 0  
// opcode: fcvt.w.s ; op1:f25; dest:x4; op1val:0xc9e24882; valaddr_reg:x16; val_offset:68; rmval:0x0; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x4, f25, 0x0, 0, x16, 68, x17, x15, 48, x18)

inst_18:// rs1==f31, rd==x22, fs1 == 0 and fe1 == 0x92 and fm1 == 0x11056d and rm_val == 0  
// opcode: fcvt.w.s ; op1:f31; dest:x22; op1val:0x4911056d; valaddr_reg:x16; val_offset:72; rmval:0x0; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x22, f31, 0x0, 0, x16, 72, x17, x15, 56, x18)

inst_19:// rs1==f16, rd==x3, fs1 == 0 and fe1 == 0x91 and fm1 == 0x54b761 and rm_val == 0  
// opcode: fcvt.w.s ; op1:f16; dest:x3; op1val:0x48d4b761; valaddr_reg:x16; val_offset:76; rmval:0x0; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x3, f16, 0x0, 0, x16, 76, x17, x15, 64, x18)

inst_20:// rs1==f9, rd==x6, fs1 == 0 and fe1 == 0x90 and fm1 == 0x57ca4f and rm_val == 0  
// opcode: fcvt.w.s ; op1:f9; dest:x6; op1val:0x4857ca4f; valaddr_reg:x16; val_offset:80; rmval:0x0; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x6, f9, 0x0, 0, x16, 80, x17, x15, 72, x18)

inst_21:// rs1==f10, rd==x11, fs1 == 0 and fe1 == 0x8f and fm1 == 0x3a7971 and rm_val == 0  
// opcode: fcvt.w.s ; op1:f10; dest:x11; op1val:0x47ba7971; valaddr_reg:x16; val_offset:84; rmval:0x0; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x11, f10, 0x0, 0, x16, 84, x17, x15, 80, x18)

inst_22:// rs1==f22, rd==x23, fs1 == 0 and fe1 == 0x8e and fm1 == 0x56653f and rm_val == 0  
// opcode: fcvt.w.s ; op1:f22; dest:x23; op1val:0x4756653f; valaddr_reg:x16; val_offset:88; rmval:0x0; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x23, f22, 0x0, 0, x16, 88, x17, x15, 88, x18)

inst_23:// rs1==f28, rd==x7, fs1 == 1 and fe1 == 0x8d and fm1 == 0x244d9a and rm_val == 0  
// opcode: fcvt.w.s ; op1:f28; dest:x7; op1val:0xc6a44d9a; valaddr_reg:x16; val_offset:92; rmval:0x0; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x7, f28, 0x0, 0, x16, 92, x17, x15, 96, x18)

inst_24:// rs1==f6, rd==x26, fs1 == 0 and fe1 == 0x8c and fm1 == 0x30d877 and rm_val == 0  
// opcode: fcvt.w.s ; op1:f6; dest:x26; op1val:0x4630d877; valaddr_reg:x16; val_offset:96; rmval:0x0; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x26, f6, 0x0, 0, x16, 96, x17, x15, 104, x18)

inst_25:// rs1==f7, rd==x19, fs1 == 0 and fe1 == 0x8b and fm1 == 0x4d3559 and rm_val == 0  
// opcode: fcvt.w.s ; op1:f7; dest:x19; op1val:0x45cd3559; valaddr_reg:x16; val_offset:100; rmval:0x0; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x19, f7, 0x0, 0, x16, 100, x17, x15, 112, x18)

inst_26:// rs1==f21, rd==x12, fs1 == 0 and fe1 == 0x8a and fm1 == 0x6e19c1 and rm_val == 0  
// opcode: fcvt.w.s ; op1:f21; dest:x12; op1val:0x456e19c1; valaddr_reg:x16; val_offset:104; rmval:0x0; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x12, f21, 0x0, 0, x16, 104, x17, x15, 120, x18)

inst_27:// rs1==f20, rd==x21, fs1 == 0 and fe1 == 0x89 and fm1 == 0x05b406 and rm_val == 0  
// opcode: fcvt.w.s ; op1:f20; dest:x21; op1val:0x4485b406; valaddr_reg:x16; val_offset:108; rmval:0x0; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x21, f20, 0x0, 0, x16, 108, x17, x15, 128, x18)

inst_28:// rs1==f3, rd==x18, fs1 == 0 and fe1 == 0x88 and fm1 == 0x7f8f2d and rm_val == 0  
// opcode: fcvt.w.s ; op1:f3; dest:x18; op1val:0x447f8f2d; valaddr_reg:x16; val_offset:112; rmval:0x0; correctval:0; testreg:x22
TEST_FPID_OP(fcvt.w.s, x18, f3, 0x0, 0, x16, 112, x17, x15, 136, x22)

inst_29:// rs1==f1, rd==x20, fs1 == 1 and fe1 == 0x87 and fm1 == 0x79f5e7 and rm_val == 0  
// opcode: fcvt.w.s ; op1:f1; dest:x20; op1val:0xc3f9f5e7; valaddr_reg:x16; val_offset:116; rmval:0x0; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x20, f1, 0x0, 0, x16, 116, x17, x15, 144, x18)

inst_30:// rs1==f2, rd==x1, fs1 == 1 and fe1 == 0x86 and fm1 == 0x1fffe4 and rm_val == 0  
// opcode: fcvt.w.s ; op1:f2; dest:x1; op1val:0xc31fffe4; valaddr_reg:x16; val_offset:120; rmval:0x0; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x1, f2, 0x0, 0, x16, 120, x17, x15, 152, x18)

inst_31:// rs1==f27, rd==x14, fs1 == 0 and fe1 == 0x85 and fm1 == 0x29f475 and rm_val == 0  
// opcode: fcvt.w.s ; op1:f27; dest:x14; op1val:0x42a9f475; valaddr_reg:x16; val_offset:124; rmval:0x0; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x14, f27, 0x0, 0, x16, 124, x17, x15, 160, x18)

inst_32:// fs1 == 0 and fe1 == 0x84 and fm1 == 0x42a54b and rm_val == 0  
// opcode: fcvt.w.s ; op1:f10; dest:x11; op1val:0x4242a54b; valaddr_reg:x16; val_offset:128; rmval:0x0; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x11, f10, 0x0, 0, x16, 128, x17, x15, 168, x18)

inst_33:// fs1 == 0 and fe1 == 0x83 and fm1 == 0x148266 and rm_val == 0  
// opcode: fcvt.w.s ; op1:f10; dest:x11; op1val:0x41948266; valaddr_reg:x16; val_offset:132; rmval:0x0; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x11, f10, 0x0, 0, x16, 132, x17, x15, 176, x18)

inst_34:// fs1 == 1 and fe1 == 0x82 and fm1 == 0x53a4fc and rm_val == 0  
// opcode: fcvt.w.s ; op1:f10; dest:x11; op1val:0xc153a4fc; valaddr_reg:x16; val_offset:136; rmval:0x0; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x11, f10, 0x0, 0, x16, 136, x17, x15, 184, x18)

inst_35:// fs1 == 0 and fe1 == 0x81 and fm1 == 0x696b5c and rm_val == 0  
// opcode: fcvt.w.s ; op1:f10; dest:x11; op1val:0x40e96b5c; valaddr_reg:x16; val_offset:140; rmval:0x0; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x11, f10, 0x0, 0, x16, 140, x17, x15, 192, x18)

inst_36:// fs1 == 0 and fe1 == 0x80 and fm1 == 0x681ae9 and rm_val == 0  
// opcode: fcvt.w.s ; op1:f10; dest:x11; op1val:0x40681ae9; valaddr_reg:x16; val_offset:144; rmval:0x0; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x11, f10, 0x0, 0, x16, 144, x17, x15, 200, x18)

inst_37:// fs1 == 0 and fe1 == 0x7f and fm1 == 0x1a616d and rm_val == 0  
// opcode: fcvt.w.s ; op1:f10; dest:x11; op1val:0x3f9a616d; valaddr_reg:x16; val_offset:148; rmval:0x0; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x11, f10, 0x0, 0, x16, 148, x17, x15, 208, x18)

inst_38:// fs1 == 0 and fe1 == 0x7e and fm1 == 0x49fee5 and rm_val == 0  
// opcode: fcvt.w.s ; op1:f10; dest:x11; op1val:0x3f49fee5; valaddr_reg:x16; val_offset:152; rmval:0x0; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x11, f10, 0x0, 0, x16, 152, x17, x15, 216, x18)

inst_39:// fs1 == 0 and fe1 == 0x7d and fm1 == 0x36e5d6 and rm_val == 0  
// opcode: fcvt.w.s ; op1:f10; dest:x11; op1val:0x3eb6e5d6; valaddr_reg:x16; val_offset:156; rmval:0x0; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x11, f10, 0x0, 0, x16, 156, x17, x15, 224, x18)

inst_40:// fs1 == 0 and fe1 == 0x7c and fm1 == 0x4923b8 and rm_val == 0  
// opcode: fcvt.w.s ; op1:f10; dest:x11; op1val:0x3e4923b8; valaddr_reg:x16; val_offset:160; rmval:0x0; correctval:0; testreg:x18
TEST_FPID_OP(fcvt.w.s, x11, f10, 0x0, 0, x16, 160, x17, x15, 232, x18)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
test_fp:
.word 0x3e4923b8
.word 0xdb403ed1
.word 0x94cad269
.word 0xd08851ba
.word 0x5037cfdc
.word 0x4fc6450c
.word 0xcf283d12
.word 0x4ef2f818
.word 0xce2edddb
.word 0xcda6c422
.word 0xcd7872c3
.word 0x4c912603
.word 0x4c0084e1
.word 0xcb85aa55
.word 0x4b4e817e
.word 0x4afc14e9
.word 0x4a7dbfb7
.word 0xc9e24882
.word 0x4911056d
.word 0x48d4b761
.word 0x4857ca4f
.word 0x47ba7971
.word 0x4756653f
.word 0xc6a44d9a
.word 0x4630d877
.word 0x45cd3559
.word 0x456e19c1
.word 0x4485b406
.word 0x447f8f2d
.word 0xc3f9f5e7
.word 0xc31fffe4
.word 0x42a9f475
.word 0x4242a54b
.word 0x41948266
.word 0xc153a4fc
.word 0x40e96b5c
.word 0x40681ae9
.word 0x3f9a616d
.word 0x3f49fee5
.word 0x3eb6e5d6
.word 0x3e4923b8
RVTEST_DATA_END

RVMODEL_DATA_BEGIN


signature_x15_0:
    .fill 0*(XLEN/32),4,0xdeadbeef


signature_x15_1:
    .fill 8*(XLEN/32),4,0xdeadbeef


signature_x19_0:
    .fill 2*(XLEN/32),4,0xdeadbeef


signature_x15_2:
    .fill 2*(XLEN/32),4,0xdeadbeef


signature_x19_1:
    .fill 2*(XLEN/32),4,0xdeadbeef


signature_x15_3:
    .fill 6*(XLEN/32),4,0xdeadbeef


signature_x19_2:
    .fill 2*(XLEN/32),4,0xdeadbeef


signature_x15_4:
    .fill 60*(XLEN/32),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*(XLEN/32),4,0xdeadbeef

#endif

RVMODEL_DATA_END
