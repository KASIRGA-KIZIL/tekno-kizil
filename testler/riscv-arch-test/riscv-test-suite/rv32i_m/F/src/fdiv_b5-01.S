
// -----------
// This file was generated by riscv_ctg (https://gitlab.com/incoresemi/riscv-compliance/riscv_ctg)
// version   : 0.5.2
// timestamp : Tue Sep  7 16:44:09 2021 GMT
// usage     : riscv_ctg \
//                  -- cgf $cgf \
//                  -- xlen $xlen \
// -----------
//
// -----------
// Copyright (c) 2021. IIT Madras. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fdiv.s instruction of the RISC-V F extension for the fdiv_b5 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fdiv_b5)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x16,test_fp)
RVTEST_SIGBASE(x15,signature_x15_1)

inst_0:
// rs1 == rd != rs2, rs1==f22, rs2==f29, rd==f22, fs1 == 0 and fe1 == 0xfc and fm1 == 0x36c1bf and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f22; op2:f29; dest:f22; op1val:0x7e36c1bf; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:0; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f22, f22, f29, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_1:
// rs1 != rs2  and rs1 != rd and rs2 != rd, rs1==f23, rs2==f27, rd==f24, fs1 == 0 and fe1 == 0xfd and fm1 == 0x664f14 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f23; op2:f27; dest:f24; op1val:0x7ee64f14; op2val:0xff7fffff; valaddr_reg:x16; val_offset:8; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f24, f23, f27, 0x4, 0, x16, 8, x17, x15, 8, x18)

inst_2:
// rs1 == rs2 == rd, rs1==f7, rs2==f7, rd==f7, fs1 == 0 and fe1 == 0xfd and fm1 == 0x664f14 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f7; op2:f7; dest:f7; op1val:0x7ee64f14; op2val:0x7ee64f14; valaddr_reg:x16; val_offset:16; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f7, f7, f7, 0x3, 0, x16, 16, x17, x15, 16, x18)

inst_3:
// rs1 == rs2 != rd, rs1==f24, rs2==f24, rd==f30, fs1 == 0 and fe1 == 0xfd and fm1 == 0x664f14 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f24; op2:f24; dest:f30; op1val:0x7ee64f14; op2val:0x7ee64f14; valaddr_reg:x16; val_offset:24; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f30, f24, f24, 0x2, 0, x16, 24, x17, x15, 24, x18)

inst_4:
// rs2 == rd != rs1, rs1==f8, rs2==f25, rd==f25, fs1 == 0 and fe1 == 0xfd and fm1 == 0x664f14 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f8; op2:f25; dest:f25; op1val:0x7ee64f14; op2val:0xff7fffff; valaddr_reg:x16; val_offset:32; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f25, f8, f25, 0x1, 0, x16, 32, x17, x15, 32, x18)

inst_5:
// rs1==f2, rs2==f18, rd==f6, fs1 == 0 and fe1 == 0xfd and fm1 == 0x664f14 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f2; op2:f18; dest:f6; op1val:0x7ee64f14; op2val:0xff7fffff; valaddr_reg:x16; val_offset:40; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f6, f2, f18, 0x0, 0, x16, 40, x17, x15, 40, x18)

inst_6:
// rs1==f3, rs2==f9, rd==f16, fs1 == 0 and fe1 == 0xfc and fm1 == 0x6dd39b and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f3; op2:f9; dest:f16; op1val:0x7e6dd39b; op2val:0xff7fffff; valaddr_reg:x16; val_offset:48; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f16, f3, f9, 0x4, 0, x16, 48, x17, x15, 48, x18)

inst_7:
// rs1==f13, rs2==f19, rd==f18, fs1 == 0 and fe1 == 0xfc and fm1 == 0x6dd39b and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f13; op2:f19; dest:f18; op1val:0x7e6dd39b; op2val:0xff7fffff; valaddr_reg:x16; val_offset:56; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f18, f13, f19, 0x3, 0, x16, 56, x17, x15, 56, x18)

inst_8:
// rs1==f9, rs2==f3, rd==f14, fs1 == 0 and fe1 == 0xfc and fm1 == 0x6dd39b and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f9; op2:f3; dest:f14; op1val:0x7e6dd39b; op2val:0xff7fffff; valaddr_reg:x16; val_offset:64; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f14, f9, f3, 0x2, 0, x16, 64, x17, x15, 64, x18)

inst_9:
// rs1==f15, rs2==f31, rd==f29, fs1 == 0 and fe1 == 0xfc and fm1 == 0x6dd39b and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f15; op2:f31; dest:f29; op1val:0x7e6dd39b; op2val:0xff7fffff; valaddr_reg:x16; val_offset:72; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f29, f15, f31, 0x1, 0, x16, 72, x17, x15, 72, x18)

inst_10:
// rs1==f21, rs2==f20, rd==f5, fs1 == 0 and fe1 == 0xfc and fm1 == 0x6dd39b and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f21; op2:f20; dest:f5; op1val:0x7e6dd39b; op2val:0xff7fffff; valaddr_reg:x16; val_offset:80; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f5, f21, f20, 0x0, 0, x16, 80, x17, x15, 80, x18)

inst_11:
// rs1==f31, rs2==f15, rd==f10, fs1 == 0 and fe1 == 0xfd and fm1 == 0x4214d7 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f31; op2:f15; dest:f10; op1val:0x7ec214d7; op2val:0xff7fffff; valaddr_reg:x16; val_offset:88; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f10, f31, f15, 0x4, 0, x16, 88, x17, x15, 88, x18)

inst_12:
// rs1==f16, rs2==f30, rd==f2, fs1 == 0 and fe1 == 0xfd and fm1 == 0x4214d7 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f16; op2:f30; dest:f2; op1val:0x7ec214d7; op2val:0xff7fffff; valaddr_reg:x16; val_offset:96; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f2, f16, f30, 0x3, 0, x16, 96, x17, x15, 96, x18)

inst_13:
// rs1==f5, rs2==f2, rd==f20, fs1 == 0 and fe1 == 0xfd and fm1 == 0x4214d7 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f5; op2:f2; dest:f20; op1val:0x7ec214d7; op2val:0xff7fffff; valaddr_reg:x16; val_offset:104; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f20, f5, f2, 0x2, 0, x16, 104, x17, x15, 104, x18)

inst_14:
// rs1==f0, rs2==f17, rd==f31, fs1 == 0 and fe1 == 0xfd and fm1 == 0x4214d7 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f0; op2:f17; dest:f31; op1val:0x7ec214d7; op2val:0xff7fffff; valaddr_reg:x16; val_offset:112; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f31, f0, f17, 0x1, 0, x16, 112, x17, x15, 112, x18)

inst_15:
// rs1==f28, rs2==f23, rd==f0, fs1 == 0 and fe1 == 0xfd and fm1 == 0x4214d7 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f28; op2:f23; dest:f0; op1val:0x7ec214d7; op2val:0xff7fffff; valaddr_reg:x16; val_offset:120; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f0, f28, f23, 0x0, 0, x16, 120, x17, x15, 120, x18)

inst_16:
// rs1==f11, rs2==f16, rd==f1, fs1 == 0 and fe1 == 0xfe and fm1 == 0x292241 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f11; op2:f16; dest:f1; op1val:0x7f292241; op2val:0xff7fffff; valaddr_reg:x16; val_offset:128; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f1, f11, f16, 0x4, 0, x16, 128, x17, x15, 128, x18)

inst_17:
// rs1==f20, rs2==f0, rd==f21, fs1 == 0 and fe1 == 0xfe and fm1 == 0x292241 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f20; op2:f0; dest:f21; op1val:0x7f292241; op2val:0xff7fffff; valaddr_reg:x16; val_offset:136; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f21, f20, f0, 0x3, 0, x16, 136, x17, x15, 136, x18)

inst_18:
// rs1==f6, rs2==f4, rd==f9, fs1 == 0 and fe1 == 0xfe and fm1 == 0x292241 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f6; op2:f4; dest:f9; op1val:0x7f292241; op2val:0xff7fffff; valaddr_reg:x16; val_offset:144; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f9, f6, f4, 0x2, 0, x16, 144, x17, x15, 144, x18)

inst_19:
// rs1==f1, rs2==f14, rd==f13, fs1 == 0 and fe1 == 0xfe and fm1 == 0x292241 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f1; op2:f14; dest:f13; op1val:0x7f292241; op2val:0xff7fffff; valaddr_reg:x16; val_offset:152; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f13, f1, f14, 0x1, 0, x16, 152, x17, x15, 152, x18)

inst_20:
// rs1==f4, rs2==f22, rd==f19, fs1 == 0 and fe1 == 0xfe and fm1 == 0x292241 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f4; op2:f22; dest:f19; op1val:0x7f292241; op2val:0xff7fffff; valaddr_reg:x16; val_offset:160; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f19, f4, f22, 0x0, 0, x16, 160, x17, x15, 160, x18)

inst_21:
// rs1==f25, rs2==f13, rd==f17, fs1 == 0 and fe1 == 0xfe and fm1 == 0x09f0c8 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f25; op2:f13; dest:f17; op1val:0x7f09f0c8; op2val:0xff7fffff; valaddr_reg:x16; val_offset:168; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f17, f25, f13, 0x4, 0, x16, 168, x17, x15, 168, x18)

inst_22:
// rs1==f14, rs2==f26, rd==f12, fs1 == 0 and fe1 == 0xfe and fm1 == 0x09f0c8 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f14; op2:f26; dest:f12; op1val:0x7f09f0c8; op2val:0xff7fffff; valaddr_reg:x16; val_offset:176; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f14, f26, 0x3, 0, x16, 176, x17, x15, 176, x18)

inst_23:
// rs1==f27, rs2==f28, rd==f3, fs1 == 0 and fe1 == 0xfe and fm1 == 0x09f0c8 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f27; op2:f28; dest:f3; op1val:0x7f09f0c8; op2val:0xff7fffff; valaddr_reg:x16; val_offset:184; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f3, f27, f28, 0x2, 0, x16, 184, x17, x15, 184, x18)

inst_24:
// rs1==f26, rs2==f12, rd==f23, fs1 == 0 and fe1 == 0xfe and fm1 == 0x09f0c8 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f26; op2:f12; dest:f23; op1val:0x7f09f0c8; op2val:0xff7fffff; valaddr_reg:x16; val_offset:192; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f23, f26, f12, 0x1, 0, x16, 192, x17, x15, 192, x18)

inst_25:
// rs1==f29, rs2==f1, rd==f11, fs1 == 0 and fe1 == 0xfe and fm1 == 0x09f0c8 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f29; op2:f1; dest:f11; op1val:0x7f09f0c8; op2val:0xff7fffff; valaddr_reg:x16; val_offset:200; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f11, f29, f1, 0x0, 0, x16, 200, x17, x15, 200, x18)

inst_26:
// rs1==f12, rs2==f5, rd==f8, fs1 == 0 and fe1 == 0xfd and fm1 == 0x6bfb00 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f12; op2:f5; dest:f8; op1val:0x7eebfb00; op2val:0xff7fffff; valaddr_reg:x16; val_offset:208; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f8, f12, f5, 0x4, 0, x16, 208, x17, x15, 208, x18)

inst_27:
// rs1==f18, rs2==f21, rd==f26, fs1 == 0 and fe1 == 0xfd and fm1 == 0x6bfb00 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f18; op2:f21; dest:f26; op1val:0x7eebfb00; op2val:0xff7fffff; valaddr_reg:x16; val_offset:216; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f26, f18, f21, 0x3, 0, x16, 216, x17, x15, 216, x18)

inst_28:
// rs1==f19, rs2==f8, rd==f4, fs1 == 0 and fe1 == 0xfd and fm1 == 0x6bfb00 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f19; op2:f8; dest:f4; op1val:0x7eebfb00; op2val:0xff7fffff; valaddr_reg:x16; val_offset:224; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f4, f19, f8, 0x2, 0, x16, 224, x17, x15, 224, x18)

inst_29:
// rs1==f10, rs2==f6, rd==f28, fs1 == 0 and fe1 == 0xfd and fm1 == 0x6bfb00 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f6; dest:f28; op1val:0x7eebfb00; op2val:0xff7fffff; valaddr_reg:x16; val_offset:232; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f28, f10, f6, 0x1, 0, x16, 232, x17, x15, 232, x18)

inst_30:
// rs1==f17, rs2==f10, rd==f27, fs1 == 0 and fe1 == 0xfd and fm1 == 0x6bfb00 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f17; op2:f10; dest:f27; op1val:0x7eebfb00; op2val:0xff7fffff; valaddr_reg:x16; val_offset:240; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f27, f17, f10, 0x0, 0, x16, 240, x17, x15, 240, x18)

inst_31:
// rs1==f30, rs2==f11, rd==f15, fs1 == 0 and fe1 == 0xfe and fm1 == 0x27923e and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f30; op2:f11; dest:f15; op1val:0x7f27923e; op2val:0xff7fffff; valaddr_reg:x16; val_offset:248; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f15, f30, f11, 0x4, 0, x16, 248, x17, x15, 248, x18)

inst_32:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27923e and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f27923e; op2val:0xff7fffff; valaddr_reg:x16; val_offset:256; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 256, x17, x15, 256, x18)

inst_33:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27923e and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f27923e; op2val:0xff7fffff; valaddr_reg:x16; val_offset:264; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 264, x17, x15, 264, x18)

inst_34:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27923e and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f27923e; op2val:0xff7fffff; valaddr_reg:x16; val_offset:272; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 272, x17, x15, 272, x18)

inst_35:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27923e and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f27923e; op2val:0xff7fffff; valaddr_reg:x16; val_offset:280; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 280, x17, x15, 280, x18)

inst_36:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x61b55e and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e61b55e; op2val:0xff7fffff; valaddr_reg:x16; val_offset:288; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 288, x17, x15, 288, x18)

inst_37:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x61b55e and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e61b55e; op2val:0xff7fffff; valaddr_reg:x16; val_offset:296; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 296, x17, x15, 296, x18)

inst_38:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x61b55e and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e61b55e; op2val:0xff7fffff; valaddr_reg:x16; val_offset:304; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 304, x17, x15, 304, x18)

inst_39:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x61b55e and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e61b55e; op2val:0xff7fffff; valaddr_reg:x16; val_offset:312; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 312, x17, x15, 312, x18)

inst_40:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x61b55e and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e61b55e; op2val:0xff7fffff; valaddr_reg:x16; val_offset:320; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 320, x17, x15, 320, x18)

inst_41:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d9e09 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e9d9e09; op2val:0xff7fffff; valaddr_reg:x16; val_offset:328; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 328, x17, x15, 328, x18)

inst_42:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d9e09 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e9d9e09; op2val:0xff7fffff; valaddr_reg:x16; val_offset:336; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 336, x17, x15, 336, x18)

inst_43:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d9e09 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e9d9e09; op2val:0xff7fffff; valaddr_reg:x16; val_offset:344; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 344, x17, x15, 344, x18)

inst_44:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d9e09 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e9d9e09; op2val:0xff7fffff; valaddr_reg:x16; val_offset:352; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 352, x17, x15, 352, x18)

inst_45:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1d9e09 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e9d9e09; op2val:0xff7fffff; valaddr_reg:x16; val_offset:360; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 360, x17, x15, 360, x18)

inst_46:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x07f6ba and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7d87f6ba; op2val:0xff7fffff; valaddr_reg:x16; val_offset:368; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 368, x17, x15, 368, x18)

inst_47:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x07f6ba and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7d87f6ba; op2val:0xff7fffff; valaddr_reg:x16; val_offset:376; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 376, x17, x15, 376, x18)

inst_48:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x07f6ba and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7d87f6ba; op2val:0xff7fffff; valaddr_reg:x16; val_offset:384; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 384, x17, x15, 384, x18)

inst_49:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x07f6ba and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7d87f6ba; op2val:0xff7fffff; valaddr_reg:x16; val_offset:392; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 392, x17, x15, 392, x18)

inst_50:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x07f6ba and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7d87f6ba; op2val:0xff7fffff; valaddr_reg:x16; val_offset:400; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 400, x17, x15, 400, x18)

inst_51:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23f4fa and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f23f4fa; op2val:0xff7fffff; valaddr_reg:x16; val_offset:408; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 408, x17, x15, 408, x18)

inst_52:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23f4fa and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f23f4fa; op2val:0xff7fffff; valaddr_reg:x16; val_offset:416; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 416, x17, x15, 416, x18)

inst_53:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23f4fa and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f23f4fa; op2val:0xff7fffff; valaddr_reg:x16; val_offset:424; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 424, x17, x15, 424, x18)

inst_54:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23f4fa and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f23f4fa; op2val:0xff7fffff; valaddr_reg:x16; val_offset:432; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 432, x17, x15, 432, x18)

inst_55:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23f4fa and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f23f4fa; op2val:0xff7fffff; valaddr_reg:x16; val_offset:440; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 440, x17, x15, 440, x18)

inst_56:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5ad8ea and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e5ad8ea; op2val:0xff7fffff; valaddr_reg:x16; val_offset:448; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 448, x17, x15, 448, x18)

inst_57:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5ad8ea and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e5ad8ea; op2val:0xff7fffff; valaddr_reg:x16; val_offset:456; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 456, x17, x15, 456, x18)

inst_58:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5ad8ea and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e5ad8ea; op2val:0xff7fffff; valaddr_reg:x16; val_offset:464; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 464, x17, x15, 464, x18)

inst_59:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5ad8ea and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e5ad8ea; op2val:0xff7fffff; valaddr_reg:x16; val_offset:472; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 472, x17, x15, 472, x18)

inst_60:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5ad8ea and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e5ad8ea; op2val:0xff7fffff; valaddr_reg:x16; val_offset:480; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 480, x17, x15, 480, x18)

inst_61:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fab30 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f1fab30; op2val:0xff7fffff; valaddr_reg:x16; val_offset:488; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 488, x17, x15, 488, x18)

inst_62:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fab30 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f1fab30; op2val:0xff7fffff; valaddr_reg:x16; val_offset:496; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 496, x17, x15, 496, x18)

inst_63:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fab30 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f1fab30; op2val:0xff7fffff; valaddr_reg:x16; val_offset:504; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 504, x17, x15, 504, x18)

inst_64:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fab30 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f1fab30; op2val:0xff7fffff; valaddr_reg:x16; val_offset:512; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 512, x17, x15, 512, x18)

inst_65:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fab30 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f1fab30; op2val:0xff7fffff; valaddr_reg:x16; val_offset:520; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 520, x17, x15, 520, x18)

inst_66:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x090d88 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f090d88; op2val:0xff7fffff; valaddr_reg:x16; val_offset:528; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 528, x17, x15, 528, x18)

inst_67:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x090d88 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f090d88; op2val:0xff7fffff; valaddr_reg:x16; val_offset:536; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 536, x17, x15, 536, x18)

inst_68:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x090d88 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f090d88; op2val:0xff7fffff; valaddr_reg:x16; val_offset:544; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 544, x17, x15, 544, x18)

inst_69:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x090d88 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f090d88; op2val:0xff7fffff; valaddr_reg:x16; val_offset:552; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 552, x17, x15, 552, x18)

inst_70:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x090d88 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f090d88; op2val:0xff7fffff; valaddr_reg:x16; val_offset:560; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 560, x17, x15, 560, x18)

inst_71:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2db39d and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f2db39d; op2val:0xff7fffff; valaddr_reg:x16; val_offset:568; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 568, x17, x15, 568, x18)

inst_72:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2db39d and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f2db39d; op2val:0xff7fffff; valaddr_reg:x16; val_offset:576; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 576, x17, x15, 576, x18)

inst_73:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2db39d and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f2db39d; op2val:0xff7fffff; valaddr_reg:x16; val_offset:584; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 584, x17, x15, 584, x18)

inst_74:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2db39d and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f2db39d; op2val:0xff7fffff; valaddr_reg:x16; val_offset:592; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 592, x17, x15, 592, x18)

inst_75:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2db39d and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f2db39d; op2val:0xff7fffff; valaddr_reg:x16; val_offset:600; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 600, x17, x15, 600, x18)

inst_76:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x253e0d and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f253e0d; op2val:0xff7fffff; valaddr_reg:x16; val_offset:608; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 608, x17, x15, 608, x18)

inst_77:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x253e0d and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f253e0d; op2val:0xff7fffff; valaddr_reg:x16; val_offset:616; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 616, x17, x15, 616, x18)

inst_78:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x253e0d and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f253e0d; op2val:0xff7fffff; valaddr_reg:x16; val_offset:624; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 624, x17, x15, 624, x18)

inst_79:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x253e0d and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f253e0d; op2val:0xff7fffff; valaddr_reg:x16; val_offset:632; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 632, x17, x15, 632, x18)

inst_80:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x253e0d and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f253e0d; op2val:0xff7fffff; valaddr_reg:x16; val_offset:640; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 640, x17, x15, 640, x18)

inst_81:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x00e26f and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f00e26f; op2val:0xff7fffff; valaddr_reg:x16; val_offset:648; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 648, x17, x15, 648, x18)

inst_82:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x00e26f and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f00e26f; op2val:0xff7fffff; valaddr_reg:x16; val_offset:656; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 656, x17, x15, 656, x18)

inst_83:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x00e26f and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f00e26f; op2val:0xff7fffff; valaddr_reg:x16; val_offset:664; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 664, x17, x15, 664, x18)

inst_84:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x00e26f and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f00e26f; op2val:0xff7fffff; valaddr_reg:x16; val_offset:672; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 672, x17, x15, 672, x18)

inst_85:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x00e26f and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f00e26f; op2val:0xff7fffff; valaddr_reg:x16; val_offset:680; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 680, x17, x15, 680, x18)

inst_86:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x246dcc and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f246dcc; op2val:0xff7fffff; valaddr_reg:x16; val_offset:688; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 688, x17, x15, 688, x18)

inst_87:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x246dcc and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f246dcc; op2val:0xff7fffff; valaddr_reg:x16; val_offset:696; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 696, x17, x15, 696, x18)

inst_88:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x246dcc and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f246dcc; op2val:0xff7fffff; valaddr_reg:x16; val_offset:704; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 704, x17, x15, 704, x18)

inst_89:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x246dcc and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f246dcc; op2val:0xff7fffff; valaddr_reg:x16; val_offset:712; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 712, x17, x15, 712, x18)

inst_90:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x246dcc and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f246dcc; op2val:0xff7fffff; valaddr_reg:x16; val_offset:720; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 720, x17, x15, 720, x18)

inst_91:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02f0c8 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f02f0c8; op2val:0xff7fffff; valaddr_reg:x16; val_offset:728; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 728, x17, x15, 728, x18)

inst_92:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02f0c8 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f02f0c8; op2val:0xff7fffff; valaddr_reg:x16; val_offset:736; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 736, x17, x15, 736, x18)

inst_93:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02f0c8 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f02f0c8; op2val:0xff7fffff; valaddr_reg:x16; val_offset:744; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 744, x17, x15, 744, x18)

inst_94:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02f0c8 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f02f0c8; op2val:0xff7fffff; valaddr_reg:x16; val_offset:752; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 752, x17, x15, 752, x18)

inst_95:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x02f0c8 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f02f0c8; op2val:0xff7fffff; valaddr_reg:x16; val_offset:760; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 760, x17, x15, 760, x18)

inst_96:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x605a49 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ee05a49; op2val:0xff7fffff; valaddr_reg:x16; val_offset:768; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 768, x17, x15, 768, x18)

inst_97:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x605a49 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ee05a49; op2val:0xff7fffff; valaddr_reg:x16; val_offset:776; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 776, x17, x15, 776, x18)

inst_98:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x605a49 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ee05a49; op2val:0xff7fffff; valaddr_reg:x16; val_offset:784; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 784, x17, x15, 784, x18)

inst_99:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x605a49 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ee05a49; op2val:0xff7fffff; valaddr_reg:x16; val_offset:792; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 792, x17, x15, 792, x18)

inst_100:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x605a49 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ee05a49; op2val:0xff7fffff; valaddr_reg:x16; val_offset:800; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 800, x17, x15, 800, x18)

inst_101:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x06bfe7 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e86bfe7; op2val:0xff7fffff; valaddr_reg:x16; val_offset:808; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 808, x17, x15, 808, x18)

inst_102:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x06bfe7 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e86bfe7; op2val:0xff7fffff; valaddr_reg:x16; val_offset:816; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 816, x17, x15, 816, x18)

inst_103:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x06bfe7 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e86bfe7; op2val:0xff7fffff; valaddr_reg:x16; val_offset:824; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 824, x17, x15, 824, x18)

inst_104:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x06bfe7 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e86bfe7; op2val:0xff7fffff; valaddr_reg:x16; val_offset:832; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 832, x17, x15, 832, x18)

inst_105:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x06bfe7 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e86bfe7; op2val:0xff7fffff; valaddr_reg:x16; val_offset:840; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 840, x17, x15, 840, x18)

inst_106:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42c803 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ec2c803; op2val:0xff7fffff; valaddr_reg:x16; val_offset:848; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 848, x17, x15, 848, x18)

inst_107:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42c803 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ec2c803; op2val:0xff7fffff; valaddr_reg:x16; val_offset:856; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 856, x17, x15, 856, x18)

inst_108:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42c803 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ec2c803; op2val:0xff7fffff; valaddr_reg:x16; val_offset:864; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 864, x17, x15, 864, x18)

inst_109:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42c803 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ec2c803; op2val:0xff7fffff; valaddr_reg:x16; val_offset:872; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 872, x17, x15, 872, x18)

inst_110:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x42c803 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ec2c803; op2val:0xff7fffff; valaddr_reg:x16; val_offset:880; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 880, x17, x15, 880, x18)

inst_111:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x70a207 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ef0a207; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:888; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 888, x17, x15, 888, x18)

inst_112:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x70a207 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ef0a207; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:896; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 896, x17, x15, 896, x18)

inst_113:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x70a207 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ef0a207; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:904; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 904, x17, x15, 904, x18)

inst_114:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x70a207 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ef0a207; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:912; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 912, x17, x15, 912, x18)

inst_115:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x70a207 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ef0a207; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:920; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 920, x17, x15, 920, x18)

inst_116:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x395f47 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f395f47; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:928; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 928, x17, x15, 928, x18)

inst_117:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x395f47 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f395f47; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:936; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 936, x17, x15, 936, x18)

inst_118:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x395f47 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f395f47; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:944; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 944, x17, x15, 944, x18)

inst_119:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x395f47 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f395f47; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:952; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 952, x17, x15, 952, x18)

inst_120:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x395f47 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f395f47; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:960; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 960, x17, x15, 960, x18)

inst_121:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x50d921 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7dd0d921; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:968; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 968, x17, x15, 968, x18)

inst_122:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x50d921 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7dd0d921; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:976; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 976, x17, x15, 976, x18)

inst_123:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x50d921 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7dd0d921; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:984; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 984, x17, x15, 984, x18)

inst_124:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x50d921 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7dd0d921; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:992; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 992, x17, x15, 992, x18)

inst_125:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x50d921 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7dd0d921; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1000; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1000, x17, x15, 1000, x18)

inst_126:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28be0d and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f28be0d; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1008; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1008, x17, x15, 1008, x18)

inst_127:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28be0d and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f28be0d; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1016; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1016, x17, x15, 1016, x18)

inst_128:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28be0d and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f28be0d; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1024; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1024, x17, x15, 1024, x18)

inst_129:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28be0d and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f28be0d; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1032; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1032, x17, x15, 1032, x18)

inst_130:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28be0d and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f28be0d; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1040; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1040, x17, x15, 1040, x18)

inst_131:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2abc06 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eaabc06; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1048; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1048, x17, x15, 1048, x18)

inst_132:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2abc06 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eaabc06; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1056; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1056, x17, x15, 1056, x18)

inst_133:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2abc06 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eaabc06; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1064; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1064, x17, x15, 1064, x18)

inst_134:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2abc06 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eaabc06; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1072; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1072, x17, x15, 1072, x18)

inst_135:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2abc06 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7eaabc06; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1080; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1080, x17, x15, 1080, x18)

inst_136:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x17aa7b and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e97aa7b; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1088; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1088, x17, x15, 1088, x18)

inst_137:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x17aa7b and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e97aa7b; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1096; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1096, x17, x15, 1096, x18)

inst_138:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x17aa7b and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e97aa7b; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1104; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1104, x17, x15, 1104, x18)

inst_139:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x17aa7b and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e97aa7b; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1112; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1112, x17, x15, 1112, x18)

inst_140:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x17aa7b and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e97aa7b; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1120; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1120, x17, x15, 1120, x18)

inst_141:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x091ce4 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f091ce4; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1128; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1128, x17, x15, 1128, x18)

inst_142:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x091ce4 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f091ce4; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1136; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1136, x17, x15, 1136, x18)

inst_143:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x091ce4 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f091ce4; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1144; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1144, x17, x15, 1144, x18)

inst_144:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x091ce4 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f091ce4; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1152; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1152, x17, x15, 1152, x18)

inst_145:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x091ce4 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f091ce4; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1160; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1160, x17, x15, 1160, x18)

inst_146:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a03a1 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f0a03a1; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1168; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1168, x17, x15, 1168, x18)

inst_147:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a03a1 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f0a03a1; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1176; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1176, x17, x15, 1176, x18)

inst_148:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a03a1 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f0a03a1; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1184; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1184, x17, x15, 1184, x18)

inst_149:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a03a1 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f0a03a1; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1192; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1192, x17, x15, 1192, x18)

inst_150:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0a03a1 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f0a03a1; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1200; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1200, x17, x15, 1200, x18)

inst_151:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x262e64 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f262e64; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1208; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1208, x17, x15, 1208, x18)

inst_152:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x262e64 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f262e64; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1216; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1216, x17, x15, 1216, x18)

inst_153:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x262e64 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f262e64; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1224; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1224, x17, x15, 1224, x18)

inst_154:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x262e64 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f262e64; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1232; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1232, x17, x15, 1232, x18)

inst_155:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x262e64 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f262e64; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1240; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1240, x17, x15, 1240, x18)

inst_156:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x675fa1 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e675fa1; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1248; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1248, x17, x15, 1248, x18)

inst_157:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x675fa1 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e675fa1; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1256; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1256, x17, x15, 1256, x18)

inst_158:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x675fa1 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e675fa1; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1264; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1264, x17, x15, 1264, x18)

inst_159:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x675fa1 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e675fa1; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1272; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1272, x17, x15, 1272, x18)

inst_160:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x675fa1 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e675fa1; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1280; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1280, x17, x15, 1280, x18)

inst_161:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x119488 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f119488; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1288; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1288, x17, x15, 1288, x18)

inst_162:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x119488 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f119488; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1296; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1296, x17, x15, 1296, x18)

inst_163:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x119488 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f119488; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1304; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1304, x17, x15, 1304, x18)

inst_164:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x119488 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f119488; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1312; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1312, x17, x15, 1312, x18)

inst_165:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x119488 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f119488; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1320; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1320, x17, x15, 1320, x18)

inst_166:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x00e937 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f00e937; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1328; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1328, x17, x15, 1328, x18)

inst_167:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x00e937 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f00e937; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1336; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1336, x17, x15, 1336, x18)

inst_168:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x00e937 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f00e937; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1344; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1344, x17, x15, 1344, x18)

inst_169:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x00e937 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f00e937; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1352; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1352, x17, x15, 1352, x18)

inst_170:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x00e937 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f00e937; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1360; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1360, x17, x15, 1360, x18)

inst_171:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x48e6cd and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ec8e6cd; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1368; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1368, x17, x15, 1368, x18)

inst_172:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x48e6cd and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ec8e6cd; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1376; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1376, x17, x15, 1376, x18)

inst_173:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x48e6cd and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ec8e6cd; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1384; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1384, x17, x15, 1384, x18)

inst_174:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x48e6cd and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ec8e6cd; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1392; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1392, x17, x15, 1392, x18)

inst_175:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x48e6cd and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ec8e6cd; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1400; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1400, x17, x15, 1400, x18)

inst_176:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x73c956 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ef3c956; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1408; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1408, x17, x15, 1408, x18)

inst_177:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x73c956 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ef3c956; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1416; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1416, x17, x15, 1416, x18)

inst_178:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x73c956 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ef3c956; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1424; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1424, x17, x15, 1424, x18)

inst_179:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x73c956 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ef3c956; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1432; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1432, x17, x15, 1432, x18)

inst_180:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x73c956 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ef3c956; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1440; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1440, x17, x15, 1440, x18)

inst_181:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7566f3 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ef566f3; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1448; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1448, x17, x15, 1448, x18)

inst_182:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7566f3 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ef566f3; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1456; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1456, x17, x15, 1456, x18)

inst_183:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7566f3 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ef566f3; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1464; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1464, x17, x15, 1464, x18)

inst_184:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7566f3 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ef566f3; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1472; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1472, x17, x15, 1472, x18)

inst_185:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7566f3 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ef566f3; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1480; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1480, x17, x15, 1480, x18)

inst_186:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2099c0 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f2099c0; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1488; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1488, x17, x15, 1488, x18)

inst_187:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2099c0 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f2099c0; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1496; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1496, x17, x15, 1496, x18)

inst_188:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2099c0 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f2099c0; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1504; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1504, x17, x15, 1504, x18)

inst_189:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2099c0 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f2099c0; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1512; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1512, x17, x15, 1512, x18)

inst_190:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2099c0 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f2099c0; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1520; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1520, x17, x15, 1520, x18)

inst_191:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3f29ee and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f3f29ee; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1528; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1528, x17, x15, 1528, x18)

inst_192:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3f29ee and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f3f29ee; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1536; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1536, x17, x15, 1536, x18)

inst_193:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3f29ee and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f3f29ee; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1544; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1544, x17, x15, 1544, x18)

inst_194:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3f29ee and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f3f29ee; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1552; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1552, x17, x15, 1552, x18)

inst_195:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3f29ee and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f3f29ee; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1560; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1560, x17, x15, 1560, x18)

inst_196:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x472f12 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e472f12; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1568; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1568, x17, x15, 1568, x18)

inst_197:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x472f12 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e472f12; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1576; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1576, x17, x15, 1576, x18)

inst_198:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x472f12 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e472f12; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1584; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1584, x17, x15, 1584, x18)

inst_199:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x472f12 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e472f12; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1592; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1592, x17, x15, 1592, x18)

inst_200:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x472f12 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e472f12; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1600; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1600, x17, x15, 1600, x18)

inst_201:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x21ceeb and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7c21ceeb; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1608; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1608, x17, x15, 1608, x18)

inst_202:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x21ceeb and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7c21ceeb; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1616; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1616, x17, x15, 1616, x18)

inst_203:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x21ceeb and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7c21ceeb; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1624; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1624, x17, x15, 1624, x18)

inst_204:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x21ceeb and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7c21ceeb; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1632; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1632, x17, x15, 1632, x18)

inst_205:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x21ceeb and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7c21ceeb; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1640; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1640, x17, x15, 1640, x18)

inst_206:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7046ce and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ef046ce; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1648; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1648, x17, x15, 1648, x18)

inst_207:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7046ce and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ef046ce; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1656; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1656, x17, x15, 1656, x18)

inst_208:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7046ce and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ef046ce; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1664; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1664, x17, x15, 1664, x18)

inst_209:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7046ce and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ef046ce; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1672; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1672, x17, x15, 1672, x18)

inst_210:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7046ce and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ef046ce; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1680; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1680, x17, x15, 1680, x18)

inst_211:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0e1012 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e8e1012; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1688; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1688, x17, x15, 1688, x18)

inst_212:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0e1012 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e8e1012; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1696; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1696, x17, x15, 1696, x18)

inst_213:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0e1012 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e8e1012; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1704; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1704, x17, x15, 1704, x18)

inst_214:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0e1012 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e8e1012; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1712; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1712, x17, x15, 1712, x18)

inst_215:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0e1012 and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e8e1012; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1720; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1720, x17, x15, 1720, x18)

inst_216:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x36c1bf and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 4  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e36c1bf; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1728; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x4, 0, x16, 1728, x17, x15, 1728, x18)

inst_217:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x36c1bf and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e36c1bf; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1736; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1736, x17, x15, 1736, x18)

inst_218:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x36c1bf and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e36c1bf; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1744; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1744, x17, x15, 1744, x18)

inst_219:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x36c1bf and fs2 == 0 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 1  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7e36c1bf; op2val:0x7f7fffff; valaddr_reg:x16; val_offset:1752; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x1, 0, x16, 1752, x17, x15, 1752, x18)

inst_220:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x664f14 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 3  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ee64f14; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1760; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x3, 0, x16, 1760, x17, x15, 1760, x18)

inst_221:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x664f14 and fs2 == 1 and fe2 == 0xfe and fm2 == 0x7fffff and rm_val == 2  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7ee64f14; op2val:0xff7fffff; valaddr_reg:x16; val_offset:1768; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x2, 0, x16, 1768, x17, x15, 1768, x18)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
test_fp:
.word 0x7e36c1bf
.word 0x7f7fffff
.word 0x7ee64f14
.word 0xff7fffff
.word 0x7ee64f14
.word 0x7ee64f14
.word 0x7ee64f14
.word 0x7ee64f14
.word 0x7ee64f14
.word 0xff7fffff
.word 0x7ee64f14
.word 0xff7fffff
.word 0x7e6dd39b
.word 0xff7fffff
.word 0x7e6dd39b
.word 0xff7fffff
.word 0x7e6dd39b
.word 0xff7fffff
.word 0x7e6dd39b
.word 0xff7fffff
.word 0x7e6dd39b
.word 0xff7fffff
.word 0x7ec214d7
.word 0xff7fffff
.word 0x7ec214d7
.word 0xff7fffff
.word 0x7ec214d7
.word 0xff7fffff
.word 0x7ec214d7
.word 0xff7fffff
.word 0x7ec214d7
.word 0xff7fffff
.word 0x7f292241
.word 0xff7fffff
.word 0x7f292241
.word 0xff7fffff
.word 0x7f292241
.word 0xff7fffff
.word 0x7f292241
.word 0xff7fffff
.word 0x7f292241
.word 0xff7fffff
.word 0x7f09f0c8
.word 0xff7fffff
.word 0x7f09f0c8
.word 0xff7fffff
.word 0x7f09f0c8
.word 0xff7fffff
.word 0x7f09f0c8
.word 0xff7fffff
.word 0x7f09f0c8
.word 0xff7fffff
.word 0x7eebfb00
.word 0xff7fffff
.word 0x7eebfb00
.word 0xff7fffff
.word 0x7eebfb00
.word 0xff7fffff
.word 0x7eebfb00
.word 0xff7fffff
.word 0x7eebfb00
.word 0xff7fffff
.word 0x7f27923e
.word 0xff7fffff
.word 0x7f27923e
.word 0xff7fffff
.word 0x7f27923e
.word 0xff7fffff
.word 0x7f27923e
.word 0xff7fffff
.word 0x7f27923e
.word 0xff7fffff
.word 0x7e61b55e
.word 0xff7fffff
.word 0x7e61b55e
.word 0xff7fffff
.word 0x7e61b55e
.word 0xff7fffff
.word 0x7e61b55e
.word 0xff7fffff
.word 0x7e61b55e
.word 0xff7fffff
.word 0x7e9d9e09
.word 0xff7fffff
.word 0x7e9d9e09
.word 0xff7fffff
.word 0x7e9d9e09
.word 0xff7fffff
.word 0x7e9d9e09
.word 0xff7fffff
.word 0x7e9d9e09
.word 0xff7fffff
.word 0x7d87f6ba
.word 0xff7fffff
.word 0x7d87f6ba
.word 0xff7fffff
.word 0x7d87f6ba
.word 0xff7fffff
.word 0x7d87f6ba
.word 0xff7fffff
.word 0x7d87f6ba
.word 0xff7fffff
.word 0x7f23f4fa
.word 0xff7fffff
.word 0x7f23f4fa
.word 0xff7fffff
.word 0x7f23f4fa
.word 0xff7fffff
.word 0x7f23f4fa
.word 0xff7fffff
.word 0x7f23f4fa
.word 0xff7fffff
.word 0x7e5ad8ea
.word 0xff7fffff
.word 0x7e5ad8ea
.word 0xff7fffff
.word 0x7e5ad8ea
.word 0xff7fffff
.word 0x7e5ad8ea
.word 0xff7fffff
.word 0x7e5ad8ea
.word 0xff7fffff
.word 0x7f1fab30
.word 0xff7fffff
.word 0x7f1fab30
.word 0xff7fffff
.word 0x7f1fab30
.word 0xff7fffff
.word 0x7f1fab30
.word 0xff7fffff
.word 0x7f1fab30
.word 0xff7fffff
.word 0x7f090d88
.word 0xff7fffff
.word 0x7f090d88
.word 0xff7fffff
.word 0x7f090d88
.word 0xff7fffff
.word 0x7f090d88
.word 0xff7fffff
.word 0x7f090d88
.word 0xff7fffff
.word 0x7f2db39d
.word 0xff7fffff
.word 0x7f2db39d
.word 0xff7fffff
.word 0x7f2db39d
.word 0xff7fffff
.word 0x7f2db39d
.word 0xff7fffff
.word 0x7f2db39d
.word 0xff7fffff
.word 0x7f253e0d
.word 0xff7fffff
.word 0x7f253e0d
.word 0xff7fffff
.word 0x7f253e0d
.word 0xff7fffff
.word 0x7f253e0d
.word 0xff7fffff
.word 0x7f253e0d
.word 0xff7fffff
.word 0x7f00e26f
.word 0xff7fffff
.word 0x7f00e26f
.word 0xff7fffff
.word 0x7f00e26f
.word 0xff7fffff
.word 0x7f00e26f
.word 0xff7fffff
.word 0x7f00e26f
.word 0xff7fffff
.word 0x7f246dcc
.word 0xff7fffff
.word 0x7f246dcc
.word 0xff7fffff
.word 0x7f246dcc
.word 0xff7fffff
.word 0x7f246dcc
.word 0xff7fffff
.word 0x7f246dcc
.word 0xff7fffff
.word 0x7f02f0c8
.word 0xff7fffff
.word 0x7f02f0c8
.word 0xff7fffff
.word 0x7f02f0c8
.word 0xff7fffff
.word 0x7f02f0c8
.word 0xff7fffff
.word 0x7f02f0c8
.word 0xff7fffff
.word 0x7ee05a49
.word 0xff7fffff
.word 0x7ee05a49
.word 0xff7fffff
.word 0x7ee05a49
.word 0xff7fffff
.word 0x7ee05a49
.word 0xff7fffff
.word 0x7ee05a49
.word 0xff7fffff
.word 0x7e86bfe7
.word 0xff7fffff
.word 0x7e86bfe7
.word 0xff7fffff
.word 0x7e86bfe7
.word 0xff7fffff
.word 0x7e86bfe7
.word 0xff7fffff
.word 0x7e86bfe7
.word 0xff7fffff
.word 0x7ec2c803
.word 0xff7fffff
.word 0x7ec2c803
.word 0xff7fffff
.word 0x7ec2c803
.word 0xff7fffff
.word 0x7ec2c803
.word 0xff7fffff
.word 0x7ec2c803
.word 0xff7fffff
.word 0x7ef0a207
.word 0x7f7fffff
.word 0x7ef0a207
.word 0x7f7fffff
.word 0x7ef0a207
.word 0x7f7fffff
.word 0x7ef0a207
.word 0x7f7fffff
.word 0x7ef0a207
.word 0x7f7fffff
.word 0x7f395f47
.word 0x7f7fffff
.word 0x7f395f47
.word 0x7f7fffff
.word 0x7f395f47
.word 0x7f7fffff
.word 0x7f395f47
.word 0x7f7fffff
.word 0x7f395f47
.word 0x7f7fffff
.word 0x7dd0d921
.word 0x7f7fffff
.word 0x7dd0d921
.word 0x7f7fffff
.word 0x7dd0d921
.word 0x7f7fffff
.word 0x7dd0d921
.word 0x7f7fffff
.word 0x7dd0d921
.word 0x7f7fffff
.word 0x7f28be0d
.word 0x7f7fffff
.word 0x7f28be0d
.word 0x7f7fffff
.word 0x7f28be0d
.word 0x7f7fffff
.word 0x7f28be0d
.word 0x7f7fffff
.word 0x7f28be0d
.word 0x7f7fffff
.word 0x7eaabc06
.word 0x7f7fffff
.word 0x7eaabc06
.word 0x7f7fffff
.word 0x7eaabc06
.word 0x7f7fffff
.word 0x7eaabc06
.word 0x7f7fffff
.word 0x7eaabc06
.word 0x7f7fffff
.word 0x7e97aa7b
.word 0x7f7fffff
.word 0x7e97aa7b
.word 0x7f7fffff
.word 0x7e97aa7b
.word 0x7f7fffff
.word 0x7e97aa7b
.word 0x7f7fffff
.word 0x7e97aa7b
.word 0x7f7fffff
.word 0x7f091ce4
.word 0x7f7fffff
.word 0x7f091ce4
.word 0x7f7fffff
.word 0x7f091ce4
.word 0x7f7fffff
.word 0x7f091ce4
.word 0x7f7fffff
.word 0x7f091ce4
.word 0x7f7fffff
.word 0x7f0a03a1
.word 0x7f7fffff
.word 0x7f0a03a1
.word 0x7f7fffff
.word 0x7f0a03a1
.word 0x7f7fffff
.word 0x7f0a03a1
.word 0x7f7fffff
.word 0x7f0a03a1
.word 0x7f7fffff
.word 0x7f262e64
.word 0x7f7fffff
.word 0x7f262e64
.word 0x7f7fffff
.word 0x7f262e64
.word 0x7f7fffff
.word 0x7f262e64
.word 0x7f7fffff
.word 0x7f262e64
.word 0x7f7fffff
.word 0x7e675fa1
.word 0x7f7fffff
.word 0x7e675fa1
.word 0x7f7fffff
.word 0x7e675fa1
.word 0x7f7fffff
.word 0x7e675fa1
.word 0x7f7fffff
.word 0x7e675fa1
.word 0x7f7fffff
.word 0x7f119488
.word 0x7f7fffff
.word 0x7f119488
.word 0x7f7fffff
.word 0x7f119488
.word 0x7f7fffff
.word 0x7f119488
.word 0x7f7fffff
.word 0x7f119488
.word 0x7f7fffff
.word 0x7f00e937
.word 0x7f7fffff
.word 0x7f00e937
.word 0x7f7fffff
.word 0x7f00e937
.word 0x7f7fffff
.word 0x7f00e937
.word 0x7f7fffff
.word 0x7f00e937
.word 0x7f7fffff
.word 0x7ec8e6cd
.word 0x7f7fffff
.word 0x7ec8e6cd
.word 0x7f7fffff
.word 0x7ec8e6cd
.word 0x7f7fffff
.word 0x7ec8e6cd
.word 0x7f7fffff
.word 0x7ec8e6cd
.word 0x7f7fffff
.word 0x7ef3c956
.word 0x7f7fffff
.word 0x7ef3c956
.word 0x7f7fffff
.word 0x7ef3c956
.word 0x7f7fffff
.word 0x7ef3c956
.word 0x7f7fffff
.word 0x7ef3c956
.word 0x7f7fffff
.word 0x7ef566f3
.word 0x7f7fffff
.word 0x7ef566f3
.word 0x7f7fffff
.word 0x7ef566f3
.word 0x7f7fffff
.word 0x7ef566f3
.word 0x7f7fffff
.word 0x7ef566f3
.word 0x7f7fffff
.word 0x7f2099c0
.word 0x7f7fffff
.word 0x7f2099c0
.word 0x7f7fffff
.word 0x7f2099c0
.word 0x7f7fffff
.word 0x7f2099c0
.word 0x7f7fffff
.word 0x7f2099c0
.word 0x7f7fffff
.word 0x7f3f29ee
.word 0x7f7fffff
.word 0x7f3f29ee
.word 0x7f7fffff
.word 0x7f3f29ee
.word 0x7f7fffff
.word 0x7f3f29ee
.word 0x7f7fffff
.word 0x7f3f29ee
.word 0x7f7fffff
.word 0x7e472f12
.word 0x7f7fffff
.word 0x7e472f12
.word 0x7f7fffff
.word 0x7e472f12
.word 0x7f7fffff
.word 0x7e472f12
.word 0x7f7fffff
.word 0x7e472f12
.word 0x7f7fffff
.word 0x7c21ceeb
.word 0x7f7fffff
.word 0x7c21ceeb
.word 0x7f7fffff
.word 0x7c21ceeb
.word 0x7f7fffff
.word 0x7c21ceeb
.word 0x7f7fffff
.word 0x7c21ceeb
.word 0x7f7fffff
.word 0x7ef046ce
.word 0x7f7fffff
.word 0x7ef046ce
.word 0x7f7fffff
.word 0x7ef046ce
.word 0x7f7fffff
.word 0x7ef046ce
.word 0x7f7fffff
.word 0x7ef046ce
.word 0x7f7fffff
.word 0x7e8e1012
.word 0x7f7fffff
.word 0x7e8e1012
.word 0x7f7fffff
.word 0x7e8e1012
.word 0x7f7fffff
.word 0x7e8e1012
.word 0x7f7fffff
.word 0x7e8e1012
.word 0x7f7fffff
.word 0x7e36c1bf
.word 0x7f7fffff
.word 0x7e36c1bf
.word 0x7f7fffff
.word 0x7e36c1bf
.word 0x7f7fffff
.word 0x7e36c1bf
.word 0x7f7fffff
.word 0x7ee64f14
.word 0xff7fffff
.word 0x7ee64f14
.word 0xff7fffff
RVTEST_DATA_END

RVMODEL_DATA_BEGIN


signature_x15_0:
    .fill 0*(XLEN/32),4,0xdeadbeef


signature_x15_1:
    .fill 444*(XLEN/32),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*(XLEN/32),4,0xdeadbeef

#endif

RVMODEL_DATA_END
