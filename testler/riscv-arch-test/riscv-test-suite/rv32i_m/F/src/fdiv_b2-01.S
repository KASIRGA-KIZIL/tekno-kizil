
// -----------
// This file was generated by riscv_ctg (https://gitlab.com/incoresemi/riscv-compliance/riscv_ctg)
// version   : 0.5.2
// timestamp : Tue Sep  7 16:44:09 2021 GMT
// usage     : riscv_ctg \
//                  -- cgf $cgf \
//                  -- xlen $xlen \
// -----------
//
// -----------
// Copyright (c) 2021. IIT Madras. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fdiv.s instruction of the RISC-V F extension for the fdiv_b2 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fdiv_b2)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x16,test_fp)
RVTEST_SIGBASE(x15,signature_x15_1)

inst_0:
// rs1 == rd != rs2, rs1==f7, rs2==f5, rd==f7, fs1 == 0 and fe1 == 0x00 and fm1 == 0x00001f and fs2 == 0 and fe2 == 0x83 and fm2 == 0x780000 and rm_val == 0  
// opcode: fdiv.s ; op1:f7; op2:f5; dest:f7; op1val:0x1f; op2val:0x41f80000; valaddr_reg:x16; val_offset:0; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f7, f7, f5, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_1:
// rs1 != rs2  and rs1 != rd and rs2 != rd, rs1==f29, rs2==f1, rd==f18, fs1 == 0 and fe1 == 0xfe and fm1 == 0x000061 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2aab2d and rm_val == 0  
// opcode: fdiv.s ; op1:f29; op2:f1; dest:f18; op1val:0x7f000061; op2val:0xbf2aab2d; valaddr_reg:x16; val_offset:8; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f18, f29, f1, 0x0, 0, x16, 8, x17, x15, 8, x18)

inst_2:
// rs1 == rs2 == rd, rs1==f11, rs2==f11, rd==f11, fs1 == 0 and fe1 == 0xfe and fm1 == 0x000012 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x12493a and rm_val == 0  
// opcode: fdiv.s ; op1:f11; op2:f11; dest:f11; op1val:0x7f000012; op2val:0x7f000012; valaddr_reg:x16; val_offset:16; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f11, f11, f11, 0x0, 0, x16, 16, x17, x15, 16, x18)

inst_3:
// rs1 == rs2 != rd, rs1==f6, rs2==f6, rd==f29, fs1 == 0 and fe1 == 0xfe and fm1 == 0x00005d and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0888ec and rm_val == 0  
// opcode: fdiv.s ; op1:f6; op2:f6; dest:f29; op1val:0x7f00005d; op2val:0x7f00005d; valaddr_reg:x16; val_offset:24; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f29, f6, f6, 0x0, 0, x16, 24, x17, x15, 24, x18)

inst_4:
// rs2 == rd != rs1, rs1==f30, rs2==f4, rd==f4, fs1 == 0 and fe1 == 0xfe and fm1 == 0x000039 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x042144 and rm_val == 0  
// opcode: fdiv.s ; op1:f30; op2:f4; dest:f4; op1val:0x7f000039; op2val:0xbf042144; valaddr_reg:x16; val_offset:32; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f4, f30, f4, 0x0, 0, x16, 32, x17, x15, 32, x18)

inst_5:
// rs1==f3, rs2==f23, rd==f14, fs1 == 0 and fe1 == 0xfe and fm1 == 0x00005a and fs2 == 1 and fe2 == 0x7e and fm2 == 0x02087c and rm_val == 0  
// opcode: fdiv.s ; op1:f3; op2:f23; dest:f14; op1val:0x7f00005a; op2val:0xbf02087c; valaddr_reg:x16; val_offset:40; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f14, f3, f23, 0x0, 0, x16, 40, x17, x15, 40, x18)

inst_6:
// rs1==f22, rs2==f9, rd==f19, fs1 == 0 and fe1 == 0xfe and fm1 == 0x000060 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x010265 and rm_val == 0  
// opcode: fdiv.s ; op1:f22; op2:f9; dest:f19; op1val:0x7f000060; op2val:0xbf010265; valaddr_reg:x16; val_offset:48; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f19, f22, f9, 0x0, 0, x16, 48, x17, x15, 48, x18)

inst_7:
// rs1==f2, rs2==f20, rd==f9, fs1 == 0 and fe1 == 0xfe and fm1 == 0x00000d and fs2 == 1 and fe2 == 0x7e and fm2 == 0x00808e and rm_val == 0  
// opcode: fdiv.s ; op1:f2; op2:f20; dest:f9; op1val:0x7f00000d; op2val:0xbf00808e; valaddr_reg:x16; val_offset:56; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f9, f2, f20, 0x0, 0, x16, 56, x17, x15, 56, x18)

inst_8:
// rs1==f28, rs2==f3, rd==f12, fs1 == 0 and fe1 == 0xfe and fm1 == 0x000014 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x004035 and rm_val == 0  
// opcode: fdiv.s ; op1:f28; op2:f3; dest:f12; op1val:0x7f000014; op2val:0xbf004035; valaddr_reg:x16; val_offset:64; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f28, f3, 0x0, 0, x16, 64, x17, x15, 64, x18)

inst_9:
// rs1==f4, rs2==f10, rd==f3, fs1 == 0 and fe1 == 0xfe and fm1 == 0x000053 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x00205c and rm_val == 0  
// opcode: fdiv.s ; op1:f4; op2:f10; dest:f3; op1val:0x7f000053; op2val:0xbf00205c; valaddr_reg:x16; val_offset:72; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f3, f4, f10, 0x0, 0, x16, 72, x17, x15, 72, x18)

inst_10:
// rs1==f25, rs2==f31, rd==f24, fs1 == 0 and fe1 == 0xfe and fm1 == 0x00003e and fs2 == 1 and fe2 == 0x7e and fm2 == 0x001041 and rm_val == 0  
// opcode: fdiv.s ; op1:f25; op2:f31; dest:f24; op1val:0x7f00003e; op2val:0xbf001041; valaddr_reg:x16; val_offset:80; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f24, f25, f31, 0x0, 0, x16, 80, x17, x15, 80, x18)

inst_11:
// rs1==f21, rs2==f26, rd==f5, fs1 == 0 and fe1 == 0xfe and fm1 == 0x000043 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x000844 and rm_val == 0  
// opcode: fdiv.s ; op1:f21; op2:f26; dest:f5; op1val:0x7f000043; op2val:0xbf000844; valaddr_reg:x16; val_offset:88; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f5, f21, f26, 0x0, 0, x16, 88, x17, x15, 88, x18)

inst_12:
// rs1==f19, rs2==f14, rd==f2, fs1 == 0 and fe1 == 0xfe and fm1 == 0x00004b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x00044c and rm_val == 0  
// opcode: fdiv.s ; op1:f19; op2:f14; dest:f2; op1val:0x7f00004b; op2val:0xbf00044c; valaddr_reg:x16; val_offset:96; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f2, f19, f14, 0x0, 0, x16, 96, x17, x15, 96, x18)

inst_13:
// rs1==f20, rs2==f21, rd==f28, fs1 == 0 and fe1 == 0xfe and fm1 == 0x000049 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x00024a and rm_val == 0  
// opcode: fdiv.s ; op1:f20; op2:f21; dest:f28; op1val:0x7f000049; op2val:0xbf00024a; valaddr_reg:x16; val_offset:104; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f28, f20, f21, 0x0, 0, x16, 104, x17, x15, 104, x18)

inst_14:
// rs1==f24, rs2==f7, rd==f22, fs1 == 0 and fe1 == 0xfe and fm1 == 0x000036 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x000137 and rm_val == 0  
// opcode: fdiv.s ; op1:f24; op2:f7; dest:f22; op1val:0x7f000036; op2val:0xbf000137; valaddr_reg:x16; val_offset:112; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f22, f24, f7, 0x0, 0, x16, 112, x17, x15, 112, x18)

inst_15:
// rs1==f15, rs2==f16, rd==f0, fs1 == 0 and fe1 == 0xfe and fm1 == 0x000060 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0000e1 and rm_val == 0  
// opcode: fdiv.s ; op1:f15; op2:f16; dest:f0; op1val:0x7f000060; op2val:0xbf0000e1; valaddr_reg:x16; val_offset:120; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f0, f15, f16, 0x0, 0, x16, 120, x17, x15, 120, x18)

inst_16:
// rs1==f23, rs2==f25, rd==f31, fs1 == 0 and fe1 == 0xfe and fm1 == 0x00001f and fs2 == 1 and fe2 == 0x7e and fm2 == 0x000060 and rm_val == 0  
// opcode: fdiv.s ; op1:f23; op2:f25; dest:f31; op1val:0x7f00001f; op2val:0xbf000060; valaddr_reg:x16; val_offset:128; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f31, f23, f25, 0x0, 0, x16, 128, x17, x15, 128, x18)

inst_17:
// rs1==f13, rs2==f28, rd==f16, fs1 == 0 and fe1 == 0xfe and fm1 == 0x000031 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x000052 and rm_val == 0  
// opcode: fdiv.s ; op1:f13; op2:f28; dest:f16; op1val:0x7f000031; op2val:0xbf000052; valaddr_reg:x16; val_offset:136; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f16, f13, f28, 0x0, 0, x16, 136, x17, x15, 136, x18)

inst_18:
// rs1==f1, rs2==f13, rd==f15, fs1 == 0 and fe1 == 0xfe and fm1 == 0x000036 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x000047 and rm_val == 0  
// opcode: fdiv.s ; op1:f1; op2:f13; dest:f15; op1val:0x7f000036; op2val:0xbf000047; valaddr_reg:x16; val_offset:144; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f15, f1, f13, 0x0, 0, x16, 144, x17, x15, 144, x18)

inst_19:
// rs1==f14, rs2==f0, rd==f27, fs1 == 0 and fe1 == 0xfe and fm1 == 0x00002d and fs2 == 1 and fe2 == 0x7e and fm2 == 0x000036 and rm_val == 0  
// opcode: fdiv.s ; op1:f14; op2:f0; dest:f27; op1val:0x7f00002d; op2val:0xbf000036; valaddr_reg:x16; val_offset:152; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f27, f14, f0, 0x0, 0, x16, 152, x17, x15, 152, x18)

inst_20:
// rs1==f5, rs2==f29, rd==f6, fs1 == 0 and fe1 == 0xfe and fm1 == 0x00004d and fs2 == 1 and fe2 == 0x7e and fm2 == 0x000052 and rm_val == 0  
// opcode: fdiv.s ; op1:f5; op2:f29; dest:f6; op1val:0x7f00004d; op2val:0xbf000052; valaddr_reg:x16; val_offset:160; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f6, f5, f29, 0x0, 0, x16, 160, x17, x15, 160, x18)

inst_21:
// rs1==f18, rs2==f8, rd==f17, fs1 == 0 and fe1 == 0xfe and fm1 == 0x000021 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x000024 and rm_val == 0  
// opcode: fdiv.s ; op1:f18; op2:f8; dest:f17; op1val:0x7f000021; op2val:0xbf000024; valaddr_reg:x16; val_offset:168; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f17, f18, f8, 0x0, 0, x16, 168, x17, x15, 168, x18)

inst_22:
// rs1==f17, rs2==f15, rd==f20, fs1 == 0 and fe1 == 0xfe and fm1 == 0x000061 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x000063 and rm_val == 0  
// opcode: fdiv.s ; op1:f17; op2:f15; dest:f20; op1val:0x7f000061; op2val:0xbf000063; valaddr_reg:x16; val_offset:176; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f20, f17, f15, 0x0, 0, x16, 176, x17, x15, 176, x18)

inst_23:
// rs1==f12, rs2==f2, rd==f30, fs1 == 0 and fe1 == 0xfe and fm1 == 0x00004f and fs2 == 1 and fe2 == 0x7e and fm2 == 0x000050 and rm_val == 0  
// opcode: fdiv.s ; op1:f12; op2:f2; dest:f30; op1val:0x7f00004f; op2val:0xbf000050; valaddr_reg:x16; val_offset:184; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f30, f12, f2, 0x0, 0, x16, 184, x17, x15, 184, x18)

inst_24:
// rs1==f26, rs2==f22, rd==f8, fs1 == 0 and fe1 == 0xfe and fm1 == 0x000020 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2aaad6 and rm_val == 0  
// opcode: fdiv.s ; op1:f26; op2:f22; dest:f8; op1val:0x7f000020; op2val:0x3f2aaad6; valaddr_reg:x16; val_offset:192; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f8, f26, f22, 0x0, 0, x16, 192, x17, x15, 192, x18)

inst_25:
// rs1==f31, rs2==f24, rd==f1, fs1 == 0 and fe1 == 0xfe and fm1 == 0x000018 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x124941 and rm_val == 0  
// opcode: fdiv.s ; op1:f31; op2:f24; dest:f1; op1val:0x7f000018; op2val:0x3f124941; valaddr_reg:x16; val_offset:200; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f1, f31, f24, 0x0, 0, x16, 200, x17, x15, 200, x18)

inst_26:
// rs1==f27, rs2==f18, rd==f13, fs1 == 0 and fe1 == 0xfe and fm1 == 0x00000a and fs2 == 0 and fe2 == 0x7e and fm2 == 0x088894 and rm_val == 0  
// opcode: fdiv.s ; op1:f27; op2:f18; dest:f13; op1val:0x7f00000a; op2val:0x3f088894; valaddr_reg:x16; val_offset:208; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f13, f27, f18, 0x0, 0, x16, 208, x17, x15, 208, x18)

inst_27:
// rs1==f8, rs2==f12, rd==f23, fs1 == 0 and fe1 == 0xfe and fm1 == 0x000049 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x042154 and rm_val == 0  
// opcode: fdiv.s ; op1:f8; op2:f12; dest:f23; op1val:0x7f000049; op2val:0x3f042154; valaddr_reg:x16; val_offset:216; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f23, f8, f12, 0x0, 0, x16, 216, x17, x15, 216, x18)

inst_28:
// rs1==f0, rs2==f19, rd==f10, fs1 == 0 and fe1 == 0xfe and fm1 == 0x000047 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x020869 and rm_val == 0  
// opcode: fdiv.s ; op1:f0; op2:f19; dest:f10; op1val:0x7f000047; op2val:0x3f020869; valaddr_reg:x16; val_offset:224; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f10, f0, f19, 0x0, 0, x16, 224, x17, x15, 224, x18)

inst_29:
// rs1==f10, rs2==f30, rd==f26, fs1 == 0 and fe1 == 0xfe and fm1 == 0x000047 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x01024c and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f30; dest:f26; op1val:0x7f000047; op2val:0x3f01024c; valaddr_reg:x16; val_offset:232; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f26, f10, f30, 0x0, 0, x16, 232, x17, x15, 232, x18)

inst_30:
// rs1==f16, rs2==f17, rd==f25, fs1 == 0 and fe1 == 0xfe and fm1 == 0x000060 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0080e1 and rm_val == 0  
// opcode: fdiv.s ; op1:f16; op2:f17; dest:f25; op1val:0x7f000060; op2val:0x3f0080e1; valaddr_reg:x16; val_offset:240; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f25, f16, f17, 0x0, 0, x16, 240, x17, x15, 240, x18)

inst_31:
// rs1==f9, rs2==f27, rd==f21, fs1 == 0 and fe1 == 0xfe and fm1 == 0x00000e and fs2 == 0 and fe2 == 0x7e and fm2 == 0x00402f and rm_val == 0  
// opcode: fdiv.s ; op1:f9; op2:f27; dest:f21; op1val:0x7f00000e; op2val:0x3f00402f; valaddr_reg:x16; val_offset:248; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f21, f9, f27, 0x0, 0, x16, 248, x17, x15, 248, x18)

inst_32:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x00005c and fs2 == 0 and fe2 == 0x7e and fm2 == 0x002065 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f00005c; op2val:0x3f002065; valaddr_reg:x16; val_offset:256; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 256, x17, x15, 256, x18)

inst_33:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000042 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x001045 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f000042; op2val:0x3f001045; valaddr_reg:x16; val_offset:264; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 264, x17, x15, 264, x18)

inst_34:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000063 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x000864 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f000063; op2val:0x3f000864; valaddr_reg:x16; val_offset:272; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 272, x17, x15, 272, x18)

inst_35:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x00000c and fs2 == 0 and fe2 == 0x7e and fm2 == 0x00040d and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f00000c; op2val:0x3f00040d; valaddr_reg:x16; val_offset:280; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 280, x17, x15, 280, x18)

inst_36:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x00004b and fs2 == 0 and fe2 == 0x7e and fm2 == 0x00024c and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f00004b; op2val:0x3f00024c; valaddr_reg:x16; val_offset:288; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 288, x17, x15, 288, x18)

inst_37:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x00005a and fs2 == 0 and fe2 == 0x7e and fm2 == 0x00015b and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f00005a; op2val:0x3f00015b; valaddr_reg:x16; val_offset:296; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 296, x17, x15, 296, x18)

inst_38:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000057 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0000d8 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f000057; op2val:0x3f0000d8; valaddr_reg:x16; val_offset:304; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 304, x17, x15, 304, x18)

inst_39:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000004 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x000045 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f000004; op2val:0x3f000045; valaddr_reg:x16; val_offset:312; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 312, x17, x15, 312, x18)

inst_40:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x00002c and fs2 == 0 and fe2 == 0x7e and fm2 == 0x00004d and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f00002c; op2val:0x3f00004d; valaddr_reg:x16; val_offset:320; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 320, x17, x15, 320, x18)

inst_41:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000017 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x000028 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f000017; op2val:0x3f000028; valaddr_reg:x16; val_offset:328; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 328, x17, x15, 328, x18)

inst_42:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000055 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x00005e and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f000055; op2val:0x3f00005e; valaddr_reg:x16; val_offset:336; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 336, x17, x15, 336, x18)

inst_43:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000049 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x00004e and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f000049; op2val:0x3f00004e; valaddr_reg:x16; val_offset:344; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 344, x17, x15, 344, x18)

inst_44:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000044 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x000047 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f000044; op2val:0x3f000047; valaddr_reg:x16; val_offset:352; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 352, x17, x15, 352, x18)

inst_45:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000032 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x000034 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f000032; op2val:0x3f000034; valaddr_reg:x16; val_offset:360; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 360, x17, x15, 360, x18)

inst_46:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000013 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x000014 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f000013; op2val:0x3f000014; valaddr_reg:x16; val_offset:368; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 368, x17, x15, 368, x18)

inst_47:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2aaaac and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x800001; op2val:0xbf2aaaac; valaddr_reg:x16; val_offset:376; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 376, x17, x15, 376, x18)

inst_48:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x00004c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4ccd46 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x80004c; op2val:0xbf4ccd46; valaddr_reg:x16; val_offset:384; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 384, x17, x15, 384, x18)

inst_49:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000045 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x638eb4 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x800045; op2val:0xbf638eb4; valaddr_reg:x16; val_offset:392; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 392, x17, x15, 392, x18)

inst_50:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000029 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x70f13e and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x800029; op2val:0xbf70f13e; valaddr_reg:x16; val_offset:400; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 400, x17, x15, 400, x18)

inst_51:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x00000e and fs2 == 1 and fe2 == 0x7e and fm2 == 0x783e2b and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x80000e; op2val:0xbf783e2b; valaddr_reg:x16; val_offset:408; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 408, x17, x15, 408, x18)

inst_52:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000031 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7c1021 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x800031; op2val:0xbf7c1021; valaddr_reg:x16; val_offset:416; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 416, x17, x15, 416, x18)

inst_53:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000055 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7e04a1 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x800055; op2val:0xbf7e04a1; valaddr_reg:x16; val_offset:424; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 424, x17, x15, 424, x18)

inst_54:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000010 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7f011f and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x800010; op2val:0xbf7f011f; valaddr_reg:x16; val_offset:432; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 432, x17, x15, 432, x18)

inst_55:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x00003c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7f80b8 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x80003c; op2val:0xbf7f80b8; valaddr_reg:x16; val_offset:440; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 440, x17, x15, 440, x18)

inst_56:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000022 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7fc054 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x800022; op2val:0xbf7fc054; valaddr_reg:x16; val_offset:448; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 448, x17, x15, 448, x18)

inst_57:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000030 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7fe064 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x800030; op2val:0xbf7fe064; valaddr_reg:x16; val_offset:456; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 456, x17, x15, 456, x18)

inst_58:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000004 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7ff009 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x800004; op2val:0xbf7ff009; valaddr_reg:x16; val_offset:464; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 464, x17, x15, 464, x18)

inst_59:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000037 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7ff86e and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x800037; op2val:0xbf7ff86e; valaddr_reg:x16; val_offset:472; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 472, x17, x15, 472, x18)

inst_60:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000037 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7ffc6e and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x800037; op2val:0xbf7ffc6e; valaddr_reg:x16; val_offset:480; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 480, x17, x15, 480, x18)

inst_61:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x00004c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7ffe98 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x80004c; op2val:0xbf7ffe98; valaddr_reg:x16; val_offset:488; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 488, x17, x15, 488, x18)

inst_62:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000023 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7fff46 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x800023; op2val:0xbf7fff46; valaddr_reg:x16; val_offset:496; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 496, x17, x15, 496, x18)

inst_63:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x00001c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7fffb8 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x80001c; op2val:0xbf7fffb8; valaddr_reg:x16; val_offset:504; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 504, x17, x15, 504, x18)

inst_64:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000003 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7fffc6 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x800003; op2val:0xbf7fffc6; valaddr_reg:x16; val_offset:512; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 512, x17, x15, 512, x18)

inst_65:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000036 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000026 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x800036; op2val:0xbf800026; valaddr_reg:x16; val_offset:520; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 520, x17, x15, 520, x18)

inst_66:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000036 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x00002e and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x800036; op2val:0xbf80002e; valaddr_reg:x16; val_offset:528; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 528, x17, x15, 528, x18)

inst_67:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x00005a and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000056 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x80005a; op2val:0xbf800056; valaddr_reg:x16; val_offset:536; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 536, x17, x15, 536, x18)

inst_68:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000040 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x00003e and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x800040; op2val:0xbf80003e; valaddr_reg:x16; val_offset:544; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 544, x17, x15, 544, x18)

inst_69:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000030 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x00002f and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x800030; op2val:0xbf80002f; valaddr_reg:x16; val_offset:552; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 552, x17, x15, 552, x18)

inst_70:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000038 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2aaaf5 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x800038; op2val:0x3f2aaaf5; valaddr_reg:x16; val_offset:560; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 560, x17, x15, 560, x18)

inst_71:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000006 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x4cccd6 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x800006; op2val:0x3f4cccd6; valaddr_reg:x16; val_offset:568; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 568, x17, x15, 568, x18)

inst_72:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000031 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x638e90 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x800031; op2val:0x3f638e90; valaddr_reg:x16; val_offset:576; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 576, x17, x15, 576, x18)

inst_73:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000054 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x70f18f and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x800054; op2val:0x3f70f18f; valaddr_reg:x16; val_offset:584; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 584, x17, x15, 584, x18)

inst_74:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x00003b and fs2 == 0 and fe2 == 0x7e and fm2 == 0x783e82 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x80003b; op2val:0x3f783e82; valaddr_reg:x16; val_offset:592; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 592, x17, x15, 592, x18)

inst_75:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000006 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7c0fcd and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x800006; op2val:0x3f7c0fcd; valaddr_reg:x16; val_offset:600; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 600, x17, x15, 600, x18)

inst_76:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000049 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7e0489 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x800049; op2val:0x3f7e0489; valaddr_reg:x16; val_offset:608; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 608, x17, x15, 608, x18)

inst_77:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000031 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7f0161 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x800031; op2val:0x3f7f0161; valaddr_reg:x16; val_offset:616; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 616, x17, x15, 616, x18)

inst_78:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x00005c and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7f80f8 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x80005c; op2val:0x3f7f80f8; valaddr_reg:x16; val_offset:624; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 624, x17, x15, 624, x18)

inst_79:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000048 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7fc0a0 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x800048; op2val:0x3f7fc0a0; valaddr_reg:x16; val_offset:632; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 632, x17, x15, 632, x18)

inst_80:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000010 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7fe024 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x800010; op2val:0x3f7fe024; valaddr_reg:x16; val_offset:640; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 640, x17, x15, 640, x18)

inst_81:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x00002b and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7ff057 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x80002b; op2val:0x3f7ff057; valaddr_reg:x16; val_offset:648; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 648, x17, x15, 648, x18)

inst_82:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000022 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7ff844 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x800022; op2val:0x3f7ff844; valaddr_reg:x16; val_offset:656; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 656, x17, x15, 656, x18)

inst_83:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000027 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7ffc4e and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x800027; op2val:0x3f7ffc4e; valaddr_reg:x16; val_offset:664; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 664, x17, x15, 664, x18)

inst_84:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000032 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7ffe64 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x800032; op2val:0x3f7ffe64; valaddr_reg:x16; val_offset:672; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 672, x17, x15, 672, x18)

inst_85:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000032 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7fff64 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x800032; op2val:0x3f7fff64; valaddr_reg:x16; val_offset:680; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 680, x17, x15, 680, x18)

inst_86:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x00000a and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7fff94 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x80000a; op2val:0x3f7fff94; valaddr_reg:x16; val_offset:688; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 688, x17, x15, 688, x18)

inst_87:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000015 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7fffea and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x800015; op2val:0x3f7fffea; valaddr_reg:x16; val_offset:696; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 696, x17, x15, 696, x18)

inst_88:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x00003f and fs2 == 0 and fe2 == 0x7f and fm2 == 0x00002f and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x80003f; op2val:0x3f80002f; valaddr_reg:x16; val_offset:704; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 704, x17, x15, 704, x18)

inst_89:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000042 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x00003a and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x800042; op2val:0x3f80003a; valaddr_reg:x16; val_offset:712; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 712, x17, x15, 712, x18)

inst_90:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x00005c and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000058 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x80005c; op2val:0x3f800058; valaddr_reg:x16; val_offset:720; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 720, x17, x15, 720, x18)

inst_91:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x00003e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x00003c and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x80003e; op2val:0x3f80003c; valaddr_reg:x16; val_offset:728; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 728, x17, x15, 728, x18)

inst_92:
// fs1 == 0 and fe1 == 0x01 and fm1 == 0x000007 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000006 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x800007; op2val:0x3f800006; valaddr_reg:x16; val_offset:736; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 736, x17, x15, 736, x18)

inst_93:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000006 and fs2 == 1 and fe2 == 0x6b and fm2 == 0x400003 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x6; op2val:0xb5c00003; valaddr_reg:x16; val_offset:744; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 744, x17, x15, 744, x18)

inst_94:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000008 and fs2 == 1 and fe2 == 0x6b and fm2 == 0x2aaaac and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x8; op2val:0xb5aaaaac; valaddr_reg:x16; val_offset:752; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 752, x17, x15, 752, x18)

inst_95:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00002a and fs2 == 1 and fe2 == 0x6d and fm2 == 0x400002 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x2a; op2val:0xb6c00002; valaddr_reg:x16; val_offset:760; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 760, x17, x15, 760, x18)

inst_96:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000007 and fs2 == 1 and fe2 == 0x6a and fm2 == 0x6eeef1 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7; op2val:0xb56eeef1; valaddr_reg:x16; val_offset:768; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 768, x17, x15, 768, x18)

inst_97:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000043 and fs2 == 1 and fe2 == 0x6e and fm2 == 0x0a5296 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x43; op2val:0xb70a5296; valaddr_reg:x16; val_offset:776; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 776, x17, x15, 776, x18)

inst_98:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000050 and fs2 == 1 and fe2 == 0x6e and fm2 == 0x228a2a and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x50; op2val:0xb7228a2a; valaddr_reg:x16; val_offset:784; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 784, x17, x15, 784, x18)

inst_99:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000020 and fs2 == 1 and fe2 == 0x6d and fm2 == 0x010205 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x20; op2val:0xb6810205; valaddr_reg:x16; val_offset:792; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 792, x17, x15, 792, x18)

inst_100:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000061 and fs2 == 1 and fe2 == 0x6e and fm2 == 0x42c2c4 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x61; op2val:0xb742c2c4; valaddr_reg:x16; val_offset:800; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 800, x17, x15, 800, x18)

inst_101:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000034 and fs2 == 1 and fe2 == 0x6d and fm2 == 0x506836 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x34; op2val:0xb6d06836; valaddr_reg:x16; val_offset:808; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 808, x17, x15, 808, x18)

inst_102:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000051 and fs2 == 1 and fe2 == 0x6e and fm2 == 0x22288b and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x51; op2val:0xb722288b; valaddr_reg:x16; val_offset:816; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 816, x17, x15, 816, x18)

inst_103:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 1 and fe2 == 0x68 and fm2 == 0x001003 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0xb4001003; valaddr_reg:x16; val_offset:824; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 824, x17, x15, 824, x18)

inst_104:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000024 and fs2 == 1 and fe2 == 0x6d and fm2 == 0x100902 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x24; op2val:0xb6900902; valaddr_reg:x16; val_offset:832; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 832, x17, x15, 832, x18)

inst_105:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000016 and fs2 == 1 and fe2 == 0x6c and fm2 == 0x300582 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x16; op2val:0xb6300582; valaddr_reg:x16; val_offset:840; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 840, x17, x15, 840, x18)

inst_106:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000045 and fs2 == 1 and fe2 == 0x6e and fm2 == 0x0a0229 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x45; op2val:0xb70a0229; valaddr_reg:x16; val_offset:848; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 848, x17, x15, 848, x18)

inst_107:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00001a and fs2 == 1 and fe2 == 0x6c and fm2 == 0x5001a2 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x1a; op2val:0xb65001a2; valaddr_reg:x16; val_offset:856; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 856, x17, x15, 856, x18)

inst_108:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00002e and fs2 == 1 and fe2 == 0x6d and fm2 == 0x3800b9 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x2e; op2val:0xb6b800b9; valaddr_reg:x16; val_offset:864; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 864, x17, x15, 864, x18)

inst_109:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00003e and fs2 == 1 and fe2 == 0x6d and fm2 == 0x78007e and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3e; op2val:0xb6f8007e; valaddr_reg:x16; val_offset:872; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 872, x17, x15, 872, x18)

inst_110:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000021 and fs2 == 1 and fe2 == 0x6d and fm2 == 0x040022 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x21; op2val:0xb6840022; valaddr_reg:x16; val_offset:880; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 880, x17, x15, 880, x18)

inst_111:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00002c and fs2 == 1 and fe2 == 0x6d and fm2 == 0x300017 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x2c; op2val:0xb6b00017; valaddr_reg:x16; val_offset:888; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 888, x17, x15, 888, x18)

inst_112:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00004f and fs2 == 1 and fe2 == 0x6e and fm2 == 0x1e000b and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x4f; op2val:0xb71e000b; valaddr_reg:x16; val_offset:896; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 896, x17, x15, 896, x18)

inst_113:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000035 and fs2 == 1 and fe2 == 0x6d and fm2 == 0x540008 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x35; op2val:0xb6d40008; valaddr_reg:x16; val_offset:904; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 904, x17, x15, 904, x18)

inst_114:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000044 and fs2 == 1 and fe2 == 0x6e and fm2 == 0x080003 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x44; op2val:0xb7080003; valaddr_reg:x16; val_offset:912; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 912, x17, x15, 912, x18)

inst_115:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000055 and fs2 == 1 and fe2 == 0x6e and fm2 == 0x2a0003 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x55; op2val:0xb72a0003; valaddr_reg:x16; val_offset:920; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 920, x17, x15, 920, x18)

inst_116:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000027 and fs2 == 0 and fe2 == 0x6e and fm2 == 0x1c0002 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x27; op2val:0x371c0002; valaddr_reg:x16; val_offset:928; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 928, x17, x15, 928, x18)

inst_117:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000016 and fs2 == 0 and fe2 == 0x6c and fm2 == 0x6aaaad and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x16; op2val:0x366aaaad; valaddr_reg:x16; val_offset:936; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 936, x17, x15, 936, x18)

inst_118:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000060 and fs2 == 0 and fe2 == 0x6e and fm2 == 0x5b6db9 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x60; op2val:0x375b6db9; valaddr_reg:x16; val_offset:944; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 944, x17, x15, 944, x18)

inst_119:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000002 and fs2 == 0 and fe2 == 0x69 and fm2 == 0x08888a and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x2; op2val:0x3488888a; valaddr_reg:x16; val_offset:952; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 952, x17, x15, 952, x18)

inst_120:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00004a and fs2 == 0 and fe2 == 0x6e and fm2 == 0x18c633 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x4a; op2val:0x3718c633; valaddr_reg:x16; val_offset:960; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 960, x17, x15, 960, x18)

inst_121:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00001a and fs2 == 0 and fe2 == 0x6c and fm2 == 0x534d37 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x1a; op2val:0x36534d37; valaddr_reg:x16; val_offset:968; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 968, x17, x15, 968, x18)

inst_122:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000059 and fs2 == 0 and fe2 == 0x6e and fm2 == 0x3366cf and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x59; op2val:0x373366cf; valaddr_reg:x16; val_offset:976; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 976, x17, x15, 976, x18)

inst_123:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000006 and fs2 == 0 and fe2 == 0x6a and fm2 == 0x40c0c2 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x6; op2val:0x3540c0c2; valaddr_reg:x16; val_offset:984; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 984, x17, x15, 984, x18)

inst_124:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000010 and fs2 == 0 and fe2 == 0x6c and fm2 == 0x004021 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x10; op2val:0x36004021; valaddr_reg:x16; val_offset:992; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 992, x17, x15, 992, x18)

inst_125:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00004c and fs2 == 0 and fe2 == 0x6e and fm2 == 0x18260b and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x4c; op2val:0x3718260b; valaddr_reg:x16; val_offset:1000; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1000, x17, x15, 1000, x18)

inst_126:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00001e and fs2 == 0 and fe2 == 0x6c and fm2 == 0x701e06 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x1e; op2val:0x36701e06; valaddr_reg:x16; val_offset:1008; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1008, x17, x15, 1008, x18)

inst_127:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000046 and fs2 == 0 and fe2 == 0x6e and fm2 == 0x0c08c2 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x46; op2val:0x370c08c2; valaddr_reg:x16; val_offset:1016; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1016, x17, x15, 1016, x18)

inst_128:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000043 and fs2 == 0 and fe2 == 0x6e and fm2 == 0x060431 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x43; op2val:0x37060431; valaddr_reg:x16; val_offset:1024; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1024, x17, x15, 1024, x18)

inst_129:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000055 and fs2 == 0 and fe2 == 0x6e and fm2 == 0x2a02a9 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x55; op2val:0x372a02a9; valaddr_reg:x16; val_offset:1032; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1032, x17, x15, 1032, x18)

inst_130:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00003b and fs2 == 0 and fe2 == 0x6d and fm2 == 0x6c01da and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3b; op2val:0x36ec01da; valaddr_reg:x16; val_offset:1040; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1040, x17, x15, 1040, x18)

inst_131:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000005 and fs2 == 0 and fe2 == 0x6a and fm2 == 0x2000a1 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x5; op2val:0x352000a1; valaddr_reg:x16; val_offset:1048; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1048, x17, x15, 1048, x18)

inst_132:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00005c and fs2 == 0 and fe2 == 0x6e and fm2 == 0x38005d and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x5c; op2val:0x3738005d; valaddr_reg:x16; val_offset:1056; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1056, x17, x15, 1056, x18)

inst_133:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000038 and fs2 == 0 and fe2 == 0x6d and fm2 == 0x60003a and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x38; op2val:0x36e0003a; valaddr_reg:x16; val_offset:1064; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1064, x17, x15, 1064, x18)

inst_134:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000050 and fs2 == 0 and fe2 == 0x6e and fm2 == 0x200015 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x50; op2val:0x37200015; valaddr_reg:x16; val_offset:1072; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1072, x17, x15, 1072, x18)

inst_135:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000001 and fs2 == 0 and fe2 == 0x68 and fm2 == 0x000009 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x34000009; valaddr_reg:x16; val_offset:1080; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1080, x17, x15, 1080, x18)

inst_136:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000014 and fs2 == 0 and fe2 == 0x6c and fm2 == 0x200006 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x14; op2val:0x36200006; valaddr_reg:x16; val_offset:1088; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1088, x17, x15, 1088, x18)

inst_137:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000005 and fs2 == 0 and fe2 == 0x6a and fm2 == 0x200004 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x5; op2val:0x35200004; valaddr_reg:x16; val_offset:1096; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1096, x17, x15, 1096, x18)

inst_138:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000049 and fs2 == 0 and fe2 == 0x6e and fm2 == 0x120002 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x49; op2val:0x37120002; valaddr_reg:x16; val_offset:1104; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1104, x17, x15, 1104, x18)

inst_139:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000026 and fs2 == 1 and fe2 == 0x6e and fm2 == 0x17fffe and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x26; op2val:0xb717fffe; valaddr_reg:x16; val_offset:1112; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1112, x17, x15, 1112, x18)

inst_140:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000052 and fs2 == 1 and fe2 == 0x70 and fm2 == 0x23fffb and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x52; op2val:0xb823fffb; valaddr_reg:x16; val_offset:1120; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1120, x17, x15, 1120, x18)

inst_141:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00003c and fs2 == 1 and fe2 == 0x70 and fm2 == 0x6ffff1 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3c; op2val:0xb86ffff1; valaddr_reg:x16; val_offset:1128; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1128, x17, x15, 1128, x18)

inst_142:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000043 and fs2 == 1 and fe2 == 0x72 and fm2 == 0x05ffef and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x43; op2val:0xb905ffef; valaddr_reg:x16; val_offset:1136; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1136, x17, x15, 1136, x18)

inst_143:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000036 and fs2 == 1 and fe2 == 0x72 and fm2 == 0x57ffca and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x36; op2val:0xb957ffca; valaddr_reg:x16; val_offset:1144; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1144, x17, x15, 1144, x18)

inst_144:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00004c and fs2 == 1 and fe2 == 0x74 and fm2 == 0x17ffb4 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x4c; op2val:0xba17ffb4; valaddr_reg:x16; val_offset:1152; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1152, x17, x15, 1152, x18)

inst_145:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000050 and fs2 == 1 and fe2 == 0x75 and fm2 == 0x1fff60 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x50; op2val:0xba9fff60; valaddr_reg:x16; val_offset:1160; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1160, x17, x15, 1160, x18)

inst_146:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000053 and fs2 == 1 and fe2 == 0x76 and fm2 == 0x25feb4 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x53; op2val:0xbb25feb4; valaddr_reg:x16; val_offset:1168; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1168, x17, x15, 1168, x18)

inst_147:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000024 and fs2 == 1 and fe2 == 0x76 and fm2 == 0x0ffdc0 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x24; op2val:0xbb0ffdc0; valaddr_reg:x16; val_offset:1176; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1176, x17, x15, 1176, x18)

inst_148:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00004a and fs2 == 1 and fe2 == 0x78 and fm2 == 0x13fb60 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x4a; op2val:0xbc13fb60; valaddr_reg:x16; val_offset:1184; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1184, x17, x15, 1184, x18)

inst_149:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000019 and fs2 == 1 and fe2 == 0x77 and fm2 == 0x47f381 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x19; op2val:0xbbc7f381; valaddr_reg:x16; val_offset:1192; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1192, x17, x15, 1192, x18)

inst_150:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000005 and fs2 == 1 and fe2 == 0x76 and fm2 == 0x1fec02 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x5; op2val:0xbb1fec02; valaddr_reg:x16; val_offset:1200; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1200, x17, x15, 1200, x18)

inst_151:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00001d and fs2 == 1 and fe2 == 0x79 and fm2 == 0x67c60e and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x1d; op2val:0xbce7c60e; valaddr_reg:x16; val_offset:1208; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1208, x17, x15, 1208, x18)

inst_152:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00003a and fs2 == 1 and fe2 == 0x7b and fm2 == 0x678c3a and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3a; op2val:0xbde78c3a; valaddr_reg:x16; val_offset:1216; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1216, x17, x15, 1216, x18)

inst_153:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00001c and fs2 == 1 and fe2 == 0x7b and fm2 == 0x5f20df and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x1c; op2val:0xbddf20df; valaddr_reg:x16; val_offset:1224; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1224, x17, x15, 1224, x18)

inst_154:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00005f and fs2 == 1 and fe2 == 0x7e and fm2 == 0x3c86f2 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x5f; op2val:0xbf3c86f2; valaddr_reg:x16; val_offset:1232; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1232, x17, x15, 1232, x18)

inst_155:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00000b and fs2 == 1 and fe2 == 0x7c and fm2 == 0x2d4ad5 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0xb; op2val:0xbe2d4ad5; valaddr_reg:x16; val_offset:1240; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1240, x17, x15, 1240, x18)

inst_156:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000039 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x5d1746 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x39; op2val:0xbfdd1746; valaddr_reg:x16; val_offset:1248; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1248, x17, x15, 1248, x18)

inst_157:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000057 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x23c3c4 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x57; op2val:0xc0a3c3c4; valaddr_reg:x16; val_offset:1256; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1256, x17, x15, 1256, x18)

inst_158:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00002a and fs2 == 1 and fe2 == 0x81 and fm2 == 0x155555 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x2a; op2val:0xc0955555; valaddr_reg:x16; val_offset:1264; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1264, x17, x15, 1264, x18)

inst_159:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00000e and fs2 == 1 and fe2 == 0x80 and fm2 == 0x333333 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0xe; op2val:0xc0333333; valaddr_reg:x16; val_offset:1272; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1272, x17, x15, 1272, x18)

inst_160:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00005a and fs2 == 1 and fe2 == 0x83 and fm2 == 0x700000 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x5a; op2val:0xc1f00000; valaddr_reg:x16; val_offset:1280; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1280, x17, x15, 1280, x18)

inst_161:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000038 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x1cf208 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x38; op2val:0xc29cf208; valaddr_reg:x16; val_offset:1288; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1288, x17, x15, 1288, x18)

inst_162:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000018 and fs2 == 0 and fe2 == 0x6d and fm2 == 0x3ffffd and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x18; op2val:0x36bffffd; valaddr_reg:x16; val_offset:1296; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1296, x17, x15, 1296, x18)

inst_163:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00001f and fs2 == 0 and fe2 == 0x6e and fm2 == 0x77fff8 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x1f; op2val:0x3777fff8; valaddr_reg:x16; val_offset:1304; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1304, x17, x15, 1304, x18)

inst_164:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000054 and fs2 == 0 and fe2 == 0x71 and fm2 == 0x27fff6 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54; op2val:0x38a7fff6; valaddr_reg:x16; val_offset:1312; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1312, x17, x15, 1312, x18)

inst_165:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000041 and fs2 == 0 and fe2 == 0x72 and fm2 == 0x01fff0 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x41; op2val:0x3901fff0; valaddr_reg:x16; val_offset:1320; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1320, x17, x15, 1320, x18)

inst_166:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000011 and fs2 == 0 and fe2 == 0x71 and fm2 == 0x07ffde and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x11; op2val:0x3887ffde; valaddr_reg:x16; val_offset:1328; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1328, x17, x15, 1328, x18)

inst_167:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000058 and fs2 == 0 and fe2 == 0x74 and fm2 == 0x2fffa8 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x58; op2val:0x3a2fffa8; valaddr_reg:x16; val_offset:1336; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1336, x17, x15, 1336, x18)

inst_168:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000004 and fs2 == 0 and fe2 == 0x70 and fm2 == 0x7fff00 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x4; op2val:0x387fff00; valaddr_reg:x16; val_offset:1344; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1344, x17, x15, 1344, x18)

inst_169:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00000e and fs2 == 0 and fe2 == 0x73 and fm2 == 0x5ffe40 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0xe; op2val:0x39dffe40; valaddr_reg:x16; val_offset:1352; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1352, x17, x15, 1352, x18)

inst_170:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000027 and fs2 == 0 and fe2 == 0x76 and fm2 == 0x1bfd90 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x27; op2val:0x3b1bfd90; valaddr_reg:x16; val_offset:1360; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1360, x17, x15, 1360, x18)

inst_171:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00004d and fs2 == 0 and fe2 == 0x78 and fm2 == 0x19fb30 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x4d; op2val:0x3c19fb30; valaddr_reg:x16; val_offset:1368; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1368, x17, x15, 1368, x18)

inst_172:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000062 and fs2 == 0 and fe2 == 0x79 and fm2 == 0x43f3c1 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x62; op2val:0x3cc3f3c1; valaddr_reg:x16; val_offset:1376; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1376, x17, x15, 1376, x18)

inst_173:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000018 and fs2 == 0 and fe2 == 0x78 and fm2 == 0x3fe803 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x18; op2val:0x3c3fe803; valaddr_reg:x16; val_offset:1384; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1384, x17, x15, 1384, x18)

inst_174:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000017 and fs2 == 0 and fe2 == 0x79 and fm2 == 0x37d20b and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x17; op2val:0x3cb7d20b; valaddr_reg:x16; val_offset:1392; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1392, x17, x15, 1392, x18)

inst_175:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00004d and fs2 == 0 and fe2 == 0x7c and fm2 == 0x19b326 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x4d; op2val:0x3e19b326; valaddr_reg:x16; val_offset:1400; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1400, x17, x15, 1400, x18)

inst_176:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000027 and fs2 == 0 and fe2 == 0x7c and fm2 == 0x1b649b and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x27; op2val:0x3e1b649b; valaddr_reg:x16; val_offset:1408; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1408, x17, x15, 1408, x18)

inst_177:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000051 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x20be83 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x51; op2val:0x3f20be83; valaddr_reg:x16; val_offset:1416; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1416, x17, x15, 1416, x18)

inst_178:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000030 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x3d0bd1 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x30; op2val:0x3f3d0bd1; valaddr_reg:x16; val_offset:1424; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1424, x17, x15, 1424, x18)

inst_179:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000057 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x28ba2f and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x57; op2val:0x4028ba2f; valaddr_reg:x16; val_offset:1432; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1432, x17, x15, 1432, x18)

inst_180:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00004c and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0f0f0f and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x4c; op2val:0x408f0f0f; valaddr_reg:x16; val_offset:1440; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1440, x17, x15, 1440, x18)

inst_181:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00003f and fs2 == 0 and fe2 == 0x81 and fm2 == 0x600000 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f; op2val:0x40e00000; valaddr_reg:x16; val_offset:1448; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1448, x17, x15, 1448, x18)

inst_182:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000024 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x666666 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x24; op2val:0x40e66666; valaddr_reg:x16; val_offset:1456; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1456, x17, x15, 1456, x18)

inst_183:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00004e and fs2 == 0 and fe2 == 0x83 and fm2 == 0x500000 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x4e; op2val:0x41d00000; valaddr_reg:x16; val_offset:1464; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1464, x17, x15, 1464, x18)

inst_184:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000057 and fs2 == 0 and fe2 == 0x85 and fm2 == 0x73d370 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x57; op2val:0x42f3d370; valaddr_reg:x16; val_offset:1472; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1472, x17, x15, 1472, x18)

inst_185:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x00003c and fs2 == 1 and fe2 == 0x7e and fm2 == 0x2aaafb and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f80003c; op2val:0xbf2aaafb; valaddr_reg:x16; val_offset:1480; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1480, x17, x15, 1480, x18)

inst_186:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000051 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x4ccd4e and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f800051; op2val:0xbf4ccd4e; valaddr_reg:x16; val_offset:1488; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1488, x17, x15, 1488, x18)

inst_187:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000008 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x638e47 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f800008; op2val:0xbf638e47; valaddr_reg:x16; val_offset:1496; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1496, x17, x15, 1496, x18)

inst_188:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000051 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x70f189 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f800051; op2val:0xbf70f189; valaddr_reg:x16; val_offset:1504; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1504, x17, x15, 1504, x18)

inst_189:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x00004f and fs2 == 1 and fe2 == 0x7e and fm2 == 0x783ea9 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f80004f; op2val:0xbf783ea9; valaddr_reg:x16; val_offset:1512; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1512, x17, x15, 1512, x18)

inst_190:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000003 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7c0fc7 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f800003; op2val:0xbf7c0fc7; valaddr_reg:x16; val_offset:1520; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1520, x17, x15, 1520, x18)

inst_191:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x00004b and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7e048d and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f80004b; op2val:0xbf7e048d; valaddr_reg:x16; val_offset:1528; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1528, x17, x15, 1528, x18)

inst_192:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000002 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7f0103 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f800002; op2val:0xbf7f0103; valaddr_reg:x16; val_offset:1536; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1536, x17, x15, 1536, x18)

inst_193:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000047 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7f80ce and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f800047; op2val:0xbf7f80ce; valaddr_reg:x16; val_offset:1544; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1544, x17, x15, 1544, x18)

inst_194:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000043 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7fc096 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f800043; op2val:0xbf7fc096; valaddr_reg:x16; val_offset:1552; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1552, x17, x15, 1552, x18)

inst_195:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000038 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7fe074 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f800038; op2val:0xbf7fe074; valaddr_reg:x16; val_offset:1560; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1560, x17, x15, 1560, x18)

inst_196:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x00001f and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7ff03f and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f80001f; op2val:0xbf7ff03f; valaddr_reg:x16; val_offset:1568; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1568, x17, x15, 1568, x18)

inst_197:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x00005d and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7ff8ba and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f80005d; op2val:0xbf7ff8ba; valaddr_reg:x16; val_offset:1576; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1576, x17, x15, 1576, x18)

inst_198:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000038 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7ffc70 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f800038; op2val:0xbf7ffc70; valaddr_reg:x16; val_offset:1584; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1584, x17, x15, 1584, x18)

inst_199:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000041 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7ffe82 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f800041; op2val:0xbf7ffe82; valaddr_reg:x16; val_offset:1592; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1592, x17, x15, 1592, x18)

inst_200:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x00000e and fs2 == 1 and fe2 == 0x7e and fm2 == 0x7fff1c and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f80000e; op2val:0xbf7fff1c; valaddr_reg:x16; val_offset:1600; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1600, x17, x15, 1600, x18)

inst_201:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000058 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000018 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f800058; op2val:0xbf800018; valaddr_reg:x16; val_offset:1608; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1608, x17, x15, 1608, x18)

inst_202:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000053 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000033 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f800053; op2val:0xbf800033; valaddr_reg:x16; val_offset:1616; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1616, x17, x15, 1616, x18)

inst_203:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000043 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000033 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f800043; op2val:0xbf800033; valaddr_reg:x16; val_offset:1624; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1624, x17, x15, 1624, x18)

inst_204:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000031 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000029 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f800031; op2val:0xbf800029; valaddr_reg:x16; val_offset:1632; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1632, x17, x15, 1632, x18)

inst_205:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000012 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x00000e and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f800012; op2val:0xbf80000e; valaddr_reg:x16; val_offset:1640; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1640, x17, x15, 1640, x18)

inst_206:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000029 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000027 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f800029; op2val:0xbf800027; valaddr_reg:x16; val_offset:1648; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1648, x17, x15, 1648, x18)

inst_207:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000006 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x000005 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f800006; op2val:0xbf800005; valaddr_reg:x16; val_offset:1656; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1656, x17, x15, 1656, x18)

inst_208:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000014 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x2aaac5 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f800014; op2val:0x3f2aaac5; valaddr_reg:x16; val_offset:1664; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1664, x17, x15, 1664, x18)

inst_209:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x00004f and fs2 == 0 and fe2 == 0x7e and fm2 == 0x4ccd4b and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f80004f; op2val:0x3f4ccd4b; valaddr_reg:x16; val_offset:1672; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1672, x17, x15, 1672, x18)

inst_210:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000035 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x638e97 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f800035; op2val:0x3f638e97; valaddr_reg:x16; val_offset:1680; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1680, x17, x15, 1680, x18)

inst_211:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000005 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x70f0fa and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f800005; op2val:0x3f70f0fa; valaddr_reg:x16; val_offset:1688; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1688, x17, x15, 1688, x18)

inst_212:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x00004d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x783ea5 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f80004d; op2val:0x3f783ea5; valaddr_reg:x16; val_offset:1696; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1696, x17, x15, 1696, x18)

inst_213:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x00000a and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7c0fd5 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f80000a; op2val:0x3f7c0fd5; valaddr_reg:x16; val_offset:1704; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1704, x17, x15, 1704, x18)

inst_214:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000028 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7e0447 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f800028; op2val:0x3f7e0447; valaddr_reg:x16; val_offset:1712; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1712, x17, x15, 1712, x18)

inst_215:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x00001f and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7f013d and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f80001f; op2val:0x3f7f013d; valaddr_reg:x16; val_offset:1720; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1720, x17, x15, 1720, x18)

inst_216:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000024 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7f8088 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f800024; op2val:0x3f7f8088; valaddr_reg:x16; val_offset:1728; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1728, x17, x15, 1728, x18)

inst_217:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x00002b and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7fc066 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f80002b; op2val:0x3f7fc066; valaddr_reg:x16; val_offset:1736; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1736, x17, x15, 1736, x18)

inst_218:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x00005c and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7fe0bc and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f80005c; op2val:0x3f7fe0bc; valaddr_reg:x16; val_offset:1744; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1744, x17, x15, 1744, x18)

inst_219:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000006 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7ff00d and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f800006; op2val:0x3f7ff00d; valaddr_reg:x16; val_offset:1752; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1752, x17, x15, 1752, x18)

inst_220:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x00004f and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7ff89e and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f80004f; op2val:0x3f7ff89e; valaddr_reg:x16; val_offset:1760; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1760, x17, x15, 1760, x18)

inst_221:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000006 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7ffc0c and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f800006; op2val:0x3f7ffc0c; valaddr_reg:x16; val_offset:1768; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1768, x17, x15, 1768, x18)

inst_222:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000036 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7ffe6c and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f800036; op2val:0x3f7ffe6c; valaddr_reg:x16; val_offset:1776; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1776, x17, x15, 1776, x18)

inst_223:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000037 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7fff6e and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f800037; op2val:0x3f7fff6e; valaddr_reg:x16; val_offset:1784; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1784, x17, x15, 1784, x18)

inst_224:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000003 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x7fff86 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f800003; op2val:0x3f7fff86; valaddr_reg:x16; val_offset:1792; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1792, x17, x15, 1792, x18)

inst_225:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000035 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000015 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f800035; op2val:0x3f800015; valaddr_reg:x16; val_offset:1800; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1800, x17, x15, 1800, x18)

inst_226:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x00002d and fs2 == 0 and fe2 == 0x7f and fm2 == 0x00001d and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f80002d; op2val:0x3f80001d; valaddr_reg:x16; val_offset:1808; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1808, x17, x15, 1808, x18)

inst_227:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x00003e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000036 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f80003e; op2val:0x3f800036; valaddr_reg:x16; val_offset:1816; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1816, x17, x15, 1816, x18)

inst_228:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x00003e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x00003a and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f80003e; op2val:0x3f80003a; valaddr_reg:x16; val_offset:1824; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1824, x17, x15, 1824, x18)

inst_229:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000010 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x00000e and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f800010; op2val:0x3f80000e; valaddr_reg:x16; val_offset:1832; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1832, x17, x15, 1832, x18)

inst_230:
// fs1 == 0 and fe1 == 0x7f and fm1 == 0x000023 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x000022 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3f800023; op2val:0x3f800022; valaddr_reg:x16; val_offset:1840; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1840, x17, x15, 1840, x18)

inst_231:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000052 and fs2 == 1 and fe2 == 0x6f and fm2 == 0x240000 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x52; op2val:0xb7a40000; valaddr_reg:x16; val_offset:1848; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1848, x17, x15, 1848, x18)

inst_232:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000054 and fs2 == 1 and fe2 == 0x70 and fm2 == 0x280000 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x54; op2val:0xb8280000; valaddr_reg:x16; val_offset:1856; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1856, x17, x15, 1856, x18)

inst_233:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00000e and fs2 == 1 and fe2 == 0x6e and fm2 == 0x600000 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0xe; op2val:0xb7600000; valaddr_reg:x16; val_offset:1864; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1864, x17, x15, 1864, x18)

inst_234:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00004a and fs2 == 1 and fe2 == 0x72 and fm2 == 0x140000 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x4a; op2val:0xb9140000; valaddr_reg:x16; val_offset:1872; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1872, x17, x15, 1872, x18)

inst_235:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00002a and fs2 == 1 and fe2 == 0x72 and fm2 == 0x280000 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x2a; op2val:0xb9280000; valaddr_reg:x16; val_offset:1880; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1880, x17, x15, 1880, x18)

inst_236:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000015 and fs2 == 1 and fe2 == 0x72 and fm2 == 0x280000 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x15; op2val:0xb9280000; valaddr_reg:x16; val_offset:1888; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1888, x17, x15, 1888, x18)

inst_237:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000056 and fs2 == 1 and fe2 == 0x75 and fm2 == 0x2c0000 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x56; op2val:0xbaac0000; valaddr_reg:x16; val_offset:1896; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1896, x17, x15, 1896, x18)

inst_238:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000024 and fs2 == 1 and fe2 == 0x75 and fm2 == 0x100000 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x24; op2val:0xba900000; valaddr_reg:x16; val_offset:1904; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1904, x17, x15, 1904, x18)

inst_239:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000058 and fs2 == 1 and fe2 == 0x77 and fm2 == 0x300000 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x58; op2val:0xbbb00000; valaddr_reg:x16; val_offset:1912; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1912, x17, x15, 1912, x18)

inst_240:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00001e and fs2 == 1 and fe2 == 0x76 and fm2 == 0x700000 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x1e; op2val:0xbb700000; valaddr_reg:x16; val_offset:1920; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1920, x17, x15, 1920, x18)

inst_241:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000035 and fs2 == 1 and fe2 == 0x78 and fm2 == 0x540000 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x35; op2val:0xbc540000; valaddr_reg:x16; val_offset:1928; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1928, x17, x15, 1928, x18)

inst_242:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000045 and fs2 == 1 and fe2 == 0x7a and fm2 == 0x0a0000 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x45; op2val:0xbd0a0000; valaddr_reg:x16; val_offset:1936; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1936, x17, x15, 1936, x18)

inst_243:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00004a and fs2 == 1 and fe2 == 0x7b and fm2 == 0x140000 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x4a; op2val:0xbd940000; valaddr_reg:x16; val_offset:1944; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1944, x17, x15, 1944, x18)

inst_244:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000041 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x020000 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x41; op2val:0xbe020000; valaddr_reg:x16; val_offset:1952; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1952, x17, x15, 1952, x18)

inst_245:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000027 and fs2 == 1 and fe2 == 0x7c and fm2 == 0x1c0000 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x27; op2val:0xbe1c0000; valaddr_reg:x16; val_offset:1960; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1960, x17, x15, 1960, x18)

inst_246:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000038 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x600000 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x38; op2val:0xbee00000; valaddr_reg:x16; val_offset:1968; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1968, x17, x15, 1968, x18)

inst_247:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000022 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x080000 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x22; op2val:0xbf080000; valaddr_reg:x16; val_offset:1976; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1976, x17, x15, 1976, x18)

inst_248:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000040 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x000000 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x40; op2val:0xc0000000; valaddr_reg:x16; val_offset:1984; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1984, x17, x15, 1984, x18)

inst_249:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000005 and fs2 == 1 and fe2 == 0x7d and fm2 == 0x200000 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x5; op2val:0xbea00000; valaddr_reg:x16; val_offset:1992; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 1992, x17, x15, 1992, x18)

inst_250:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00002f and fs2 == 1 and fe2 == 0x81 and fm2 == 0x3c0000 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x2f; op2val:0xc0bc0000; valaddr_reg:x16; val_offset:2000; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 2000, x17, x15, 2000, x18)

inst_251:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000039 and fs2 == 1 and fe2 == 0x82 and fm2 == 0x640000 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x39; op2val:0xc1640000; valaddr_reg:x16; val_offset:2008; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 2008, x17, x15, 2008, x18)

inst_252:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00005e and fs2 == 1 and fe2 == 0x84 and fm2 == 0x3c0000 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x5e; op2val:0xc23c0000; valaddr_reg:x16; val_offset:2016; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 2016, x17, x15, 2016, x18)

inst_253:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000037 and fs2 == 1 and fe2 == 0x84 and fm2 == 0x5c0000 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x37; op2val:0xc25c0000; valaddr_reg:x16; val_offset:2024; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 2024, x17, x15, 2024, x18)
addi x16,x16,2032
RVTEST_SIGBASE(x15,signature_x15_2)

inst_254:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000032 and fs2 == 0 and fe2 == 0x6e and fm2 == 0x480000 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x32; op2val:0x37480000; valaddr_reg:x16; val_offset:0; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_255:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00004d and fs2 == 0 and fe2 == 0x70 and fm2 == 0x1a0000 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x4d; op2val:0x381a0000; valaddr_reg:x16; val_offset:8; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 8, x17, x15, 8, x18)

inst_256:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000023 and fs2 == 0 and fe2 == 0x70 and fm2 == 0x0c0000 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x23; op2val:0x380c0000; valaddr_reg:x16; val_offset:16; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 16, x17, x15, 16, x18)

inst_257:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000027 and fs2 == 0 and fe2 == 0x71 and fm2 == 0x1c0000 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x27; op2val:0x389c0000; valaddr_reg:x16; val_offset:24; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 24, x17, x15, 24, x18)

inst_258:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00004c and fs2 == 0 and fe2 == 0x73 and fm2 == 0x180000 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x4c; op2val:0x39980000; valaddr_reg:x16; val_offset:32; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 32, x17, x15, 32, x18)

inst_259:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000015 and fs2 == 0 and fe2 == 0x72 and fm2 == 0x280000 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x15; op2val:0x39280000; valaddr_reg:x16; val_offset:40; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 40, x17, x15, 40, x18)

inst_260:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000056 and fs2 == 0 and fe2 == 0x75 and fm2 == 0x2c0000 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x56; op2val:0x3aac0000; valaddr_reg:x16; val_offset:48; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 48, x17, x15, 48, x18)

inst_261:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00005f and fs2 == 0 and fe2 == 0x76 and fm2 == 0x3e0000 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x5f; op2val:0x3b3e0000; valaddr_reg:x16; val_offset:56; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 56, x17, x15, 56, x18)

inst_262:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000043 and fs2 == 0 and fe2 == 0x77 and fm2 == 0x060000 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x43; op2val:0x3b860000; valaddr_reg:x16; val_offset:64; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 64, x17, x15, 64, x18)

inst_263:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000052 and fs2 == 0 and fe2 == 0x78 and fm2 == 0x240000 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x52; op2val:0x3c240000; valaddr_reg:x16; val_offset:72; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 72, x17, x15, 72, x18)

inst_264:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000014 and fs2 == 0 and fe2 == 0x77 and fm2 == 0x200000 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x14; op2val:0x3ba00000; valaddr_reg:x16; val_offset:80; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 80, x17, x15, 80, x18)

inst_265:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000033 and fs2 == 0 and fe2 == 0x79 and fm2 == 0x4c0000 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x33; op2val:0x3ccc0000; valaddr_reg:x16; val_offset:88; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 88, x17, x15, 88, x18)

inst_266:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000047 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x0e0000 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x47; op2val:0x3d8e0000; valaddr_reg:x16; val_offset:96; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 96, x17, x15, 96, x18)

inst_267:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00003d and fs2 == 0 and fe2 == 0x7b and fm2 == 0x740000 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3d; op2val:0x3df40000; valaddr_reg:x16; val_offset:104; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 104, x17, x15, 104, x18)

inst_268:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000019 and fs2 == 0 and fe2 == 0x7b and fm2 == 0x480000 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x19; op2val:0x3dc80000; valaddr_reg:x16; val_offset:112; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 112, x17, x15, 112, x18)

inst_269:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000047 and fs2 == 0 and fe2 == 0x7e and fm2 == 0x0e0000 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x47; op2val:0x3f0e0000; valaddr_reg:x16; val_offset:120; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 120, x17, x15, 120, x18)

inst_270:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00003d and fs2 == 0 and fe2 == 0x7e and fm2 == 0x740000 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3d; op2val:0x3f740000; valaddr_reg:x16; val_offset:128; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 128, x17, x15, 128, x18)

inst_271:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00004e and fs2 == 0 and fe2 == 0x80 and fm2 == 0x1c0000 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x4e; op2val:0x401c0000; valaddr_reg:x16; val_offset:136; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 136, x17, x15, 136, x18)

inst_272:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00004b and fs2 == 0 and fe2 == 0x81 and fm2 == 0x160000 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x4b; op2val:0x40960000; valaddr_reg:x16; val_offset:144; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 144, x17, x15, 144, x18)

inst_273:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x00003d and fs2 == 0 and fe2 == 0x81 and fm2 == 0x740000 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x3d; op2val:0x40f40000; valaddr_reg:x16; val_offset:152; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 152, x17, x15, 152, x18)

inst_274:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000030 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x400000 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x30; op2val:0x41400000; valaddr_reg:x16; val_offset:160; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 160, x17, x15, 160, x18)

inst_275:
// fs1 == 0 and fe1 == 0x00 and fm1 == 0x000046 and fs2 == 0 and fe2 == 0x84 and fm2 == 0x0c0000 and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x46; op2val:0x420c0000; valaddr_reg:x16; val_offset:168; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 168, x17, x15, 168, x18)

inst_276:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x000012 and fs2 == 1 and fe2 == 0x7e and fm2 == 0x12493a and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f000012; op2val:0xbf12493a; valaddr_reg:x16; val_offset:176; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 176, x17, x15, 176, x18)

inst_277:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x00005d and fs2 == 1 and fe2 == 0x7e and fm2 == 0x0888ec and rm_val == 0  
// opcode: fdiv.s ; op1:f10; op2:f11; dest:f12; op1val:0x7f00005d; op2val:0xbf0888ec; valaddr_reg:x16; val_offset:184; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.s, f12, f10, f11, 0x0, 0, x16, 184, x17, x15, 184, x18)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
test_fp:
.word 0x1f
.word 0x41f80000
.word 0x7f000061
.word 0xbf2aab2d
.word 0x7f000012
.word 0x7f000012
.word 0x7f00005d
.word 0x7f00005d
.word 0x7f000039
.word 0xbf042144
.word 0x7f00005a
.word 0xbf02087c
.word 0x7f000060
.word 0xbf010265
.word 0x7f00000d
.word 0xbf00808e
.word 0x7f000014
.word 0xbf004035
.word 0x7f000053
.word 0xbf00205c
.word 0x7f00003e
.word 0xbf001041
.word 0x7f000043
.word 0xbf000844
.word 0x7f00004b
.word 0xbf00044c
.word 0x7f000049
.word 0xbf00024a
.word 0x7f000036
.word 0xbf000137
.word 0x7f000060
.word 0xbf0000e1
.word 0x7f00001f
.word 0xbf000060
.word 0x7f000031
.word 0xbf000052
.word 0x7f000036
.word 0xbf000047
.word 0x7f00002d
.word 0xbf000036
.word 0x7f00004d
.word 0xbf000052
.word 0x7f000021
.word 0xbf000024
.word 0x7f000061
.word 0xbf000063
.word 0x7f00004f
.word 0xbf000050
.word 0x7f000020
.word 0x3f2aaad6
.word 0x7f000018
.word 0x3f124941
.word 0x7f00000a
.word 0x3f088894
.word 0x7f000049
.word 0x3f042154
.word 0x7f000047
.word 0x3f020869
.word 0x7f000047
.word 0x3f01024c
.word 0x7f000060
.word 0x3f0080e1
.word 0x7f00000e
.word 0x3f00402f
.word 0x7f00005c
.word 0x3f002065
.word 0x7f000042
.word 0x3f001045
.word 0x7f000063
.word 0x3f000864
.word 0x7f00000c
.word 0x3f00040d
.word 0x7f00004b
.word 0x3f00024c
.word 0x7f00005a
.word 0x3f00015b
.word 0x7f000057
.word 0x3f0000d8
.word 0x7f000004
.word 0x3f000045
.word 0x7f00002c
.word 0x3f00004d
.word 0x7f000017
.word 0x3f000028
.word 0x7f000055
.word 0x3f00005e
.word 0x7f000049
.word 0x3f00004e
.word 0x7f000044
.word 0x3f000047
.word 0x7f000032
.word 0x3f000034
.word 0x7f000013
.word 0x3f000014
.word 0x800001
.word 0xbf2aaaac
.word 0x80004c
.word 0xbf4ccd46
.word 0x800045
.word 0xbf638eb4
.word 0x800029
.word 0xbf70f13e
.word 0x80000e
.word 0xbf783e2b
.word 0x800031
.word 0xbf7c1021
.word 0x800055
.word 0xbf7e04a1
.word 0x800010
.word 0xbf7f011f
.word 0x80003c
.word 0xbf7f80b8
.word 0x800022
.word 0xbf7fc054
.word 0x800030
.word 0xbf7fe064
.word 0x800004
.word 0xbf7ff009
.word 0x800037
.word 0xbf7ff86e
.word 0x800037
.word 0xbf7ffc6e
.word 0x80004c
.word 0xbf7ffe98
.word 0x800023
.word 0xbf7fff46
.word 0x80001c
.word 0xbf7fffb8
.word 0x800003
.word 0xbf7fffc6
.word 0x800036
.word 0xbf800026
.word 0x800036
.word 0xbf80002e
.word 0x80005a
.word 0xbf800056
.word 0x800040
.word 0xbf80003e
.word 0x800030
.word 0xbf80002f
.word 0x800038
.word 0x3f2aaaf5
.word 0x800006
.word 0x3f4cccd6
.word 0x800031
.word 0x3f638e90
.word 0x800054
.word 0x3f70f18f
.word 0x80003b
.word 0x3f783e82
.word 0x800006
.word 0x3f7c0fcd
.word 0x800049
.word 0x3f7e0489
.word 0x800031
.word 0x3f7f0161
.word 0x80005c
.word 0x3f7f80f8
.word 0x800048
.word 0x3f7fc0a0
.word 0x800010
.word 0x3f7fe024
.word 0x80002b
.word 0x3f7ff057
.word 0x800022
.word 0x3f7ff844
.word 0x800027
.word 0x3f7ffc4e
.word 0x800032
.word 0x3f7ffe64
.word 0x800032
.word 0x3f7fff64
.word 0x80000a
.word 0x3f7fff94
.word 0x800015
.word 0x3f7fffea
.word 0x80003f
.word 0x3f80002f
.word 0x800042
.word 0x3f80003a
.word 0x80005c
.word 0x3f800058
.word 0x80003e
.word 0x3f80003c
.word 0x800007
.word 0x3f800006
.word 0x6
.word 0xb5c00003
.word 0x8
.word 0xb5aaaaac
.word 0x2a
.word 0xb6c00002
.word 0x7
.word 0xb56eeef1
.word 0x43
.word 0xb70a5296
.word 0x50
.word 0xb7228a2a
.word 0x20
.word 0xb6810205
.word 0x61
.word 0xb742c2c4
.word 0x34
.word 0xb6d06836
.word 0x51
.word 0xb722288b
.word 0x1
.word 0xb4001003
.word 0x24
.word 0xb6900902
.word 0x16
.word 0xb6300582
.word 0x45
.word 0xb70a0229
.word 0x1a
.word 0xb65001a2
.word 0x2e
.word 0xb6b800b9
.word 0x3e
.word 0xb6f8007e
.word 0x21
.word 0xb6840022
.word 0x2c
.word 0xb6b00017
.word 0x4f
.word 0xb71e000b
.word 0x35
.word 0xb6d40008
.word 0x44
.word 0xb7080003
.word 0x55
.word 0xb72a0003
.word 0x27
.word 0x371c0002
.word 0x16
.word 0x366aaaad
.word 0x60
.word 0x375b6db9
.word 0x2
.word 0x3488888a
.word 0x4a
.word 0x3718c633
.word 0x1a
.word 0x36534d37
.word 0x59
.word 0x373366cf
.word 0x6
.word 0x3540c0c2
.word 0x10
.word 0x36004021
.word 0x4c
.word 0x3718260b
.word 0x1e
.word 0x36701e06
.word 0x46
.word 0x370c08c2
.word 0x43
.word 0x37060431
.word 0x55
.word 0x372a02a9
.word 0x3b
.word 0x36ec01da
.word 0x5
.word 0x352000a1
.word 0x5c
.word 0x3738005d
.word 0x38
.word 0x36e0003a
.word 0x50
.word 0x37200015
.word 0x1
.word 0x34000009
.word 0x14
.word 0x36200006
.word 0x5
.word 0x35200004
.word 0x49
.word 0x37120002
.word 0x26
.word 0xb717fffe
.word 0x52
.word 0xb823fffb
.word 0x3c
.word 0xb86ffff1
.word 0x43
.word 0xb905ffef
.word 0x36
.word 0xb957ffca
.word 0x4c
.word 0xba17ffb4
.word 0x50
.word 0xba9fff60
.word 0x53
.word 0xbb25feb4
.word 0x24
.word 0xbb0ffdc0
.word 0x4a
.word 0xbc13fb60
.word 0x19
.word 0xbbc7f381
.word 0x5
.word 0xbb1fec02
.word 0x1d
.word 0xbce7c60e
.word 0x3a
.word 0xbde78c3a
.word 0x1c
.word 0xbddf20df
.word 0x5f
.word 0xbf3c86f2
.word 0xb
.word 0xbe2d4ad5
.word 0x39
.word 0xbfdd1746
.word 0x57
.word 0xc0a3c3c4
.word 0x2a
.word 0xc0955555
.word 0xe
.word 0xc0333333
.word 0x5a
.word 0xc1f00000
.word 0x38
.word 0xc29cf208
.word 0x18
.word 0x36bffffd
.word 0x1f
.word 0x3777fff8
.word 0x54
.word 0x38a7fff6
.word 0x41
.word 0x3901fff0
.word 0x11
.word 0x3887ffde
.word 0x58
.word 0x3a2fffa8
.word 0x4
.word 0x387fff00
.word 0xe
.word 0x39dffe40
.word 0x27
.word 0x3b1bfd90
.word 0x4d
.word 0x3c19fb30
.word 0x62
.word 0x3cc3f3c1
.word 0x18
.word 0x3c3fe803
.word 0x17
.word 0x3cb7d20b
.word 0x4d
.word 0x3e19b326
.word 0x27
.word 0x3e1b649b
.word 0x51
.word 0x3f20be83
.word 0x30
.word 0x3f3d0bd1
.word 0x57
.word 0x4028ba2f
.word 0x4c
.word 0x408f0f0f
.word 0x3f
.word 0x40e00000
.word 0x24
.word 0x40e66666
.word 0x4e
.word 0x41d00000
.word 0x57
.word 0x42f3d370
.word 0x3f80003c
.word 0xbf2aaafb
.word 0x3f800051
.word 0xbf4ccd4e
.word 0x3f800008
.word 0xbf638e47
.word 0x3f800051
.word 0xbf70f189
.word 0x3f80004f
.word 0xbf783ea9
.word 0x3f800003
.word 0xbf7c0fc7
.word 0x3f80004b
.word 0xbf7e048d
.word 0x3f800002
.word 0xbf7f0103
.word 0x3f800047
.word 0xbf7f80ce
.word 0x3f800043
.word 0xbf7fc096
.word 0x3f800038
.word 0xbf7fe074
.word 0x3f80001f
.word 0xbf7ff03f
.word 0x3f80005d
.word 0xbf7ff8ba
.word 0x3f800038
.word 0xbf7ffc70
.word 0x3f800041
.word 0xbf7ffe82
.word 0x3f80000e
.word 0xbf7fff1c
.word 0x3f800058
.word 0xbf800018
.word 0x3f800053
.word 0xbf800033
.word 0x3f800043
.word 0xbf800033
.word 0x3f800031
.word 0xbf800029
.word 0x3f800012
.word 0xbf80000e
.word 0x3f800029
.word 0xbf800027
.word 0x3f800006
.word 0xbf800005
.word 0x3f800014
.word 0x3f2aaac5
.word 0x3f80004f
.word 0x3f4ccd4b
.word 0x3f800035
.word 0x3f638e97
.word 0x3f800005
.word 0x3f70f0fa
.word 0x3f80004d
.word 0x3f783ea5
.word 0x3f80000a
.word 0x3f7c0fd5
.word 0x3f800028
.word 0x3f7e0447
.word 0x3f80001f
.word 0x3f7f013d
.word 0x3f800024
.word 0x3f7f8088
.word 0x3f80002b
.word 0x3f7fc066
.word 0x3f80005c
.word 0x3f7fe0bc
.word 0x3f800006
.word 0x3f7ff00d
.word 0x3f80004f
.word 0x3f7ff89e
.word 0x3f800006
.word 0x3f7ffc0c
.word 0x3f800036
.word 0x3f7ffe6c
.word 0x3f800037
.word 0x3f7fff6e
.word 0x3f800003
.word 0x3f7fff86
.word 0x3f800035
.word 0x3f800015
.word 0x3f80002d
.word 0x3f80001d
.word 0x3f80003e
.word 0x3f800036
.word 0x3f80003e
.word 0x3f80003a
.word 0x3f800010
.word 0x3f80000e
.word 0x3f800023
.word 0x3f800022
.word 0x52
.word 0xb7a40000
.word 0x54
.word 0xb8280000
.word 0xe
.word 0xb7600000
.word 0x4a
.word 0xb9140000
.word 0x2a
.word 0xb9280000
.word 0x15
.word 0xb9280000
.word 0x56
.word 0xbaac0000
.word 0x24
.word 0xba900000
.word 0x58
.word 0xbbb00000
.word 0x1e
.word 0xbb700000
.word 0x35
.word 0xbc540000
.word 0x45
.word 0xbd0a0000
.word 0x4a
.word 0xbd940000
.word 0x41
.word 0xbe020000
.word 0x27
.word 0xbe1c0000
.word 0x38
.word 0xbee00000
.word 0x22
.word 0xbf080000
.word 0x40
.word 0xc0000000
.word 0x5
.word 0xbea00000
.word 0x2f
.word 0xc0bc0000
.word 0x39
.word 0xc1640000
.word 0x5e
.word 0xc23c0000
.word 0x37
.word 0xc25c0000
.word 0x32
.word 0x37480000
.word 0x4d
.word 0x381a0000
.word 0x23
.word 0x380c0000
.word 0x27
.word 0x389c0000
.word 0x4c
.word 0x39980000
.word 0x15
.word 0x39280000
.word 0x56
.word 0x3aac0000
.word 0x5f
.word 0x3b3e0000
.word 0x43
.word 0x3b860000
.word 0x52
.word 0x3c240000
.word 0x14
.word 0x3ba00000
.word 0x33
.word 0x3ccc0000
.word 0x47
.word 0x3d8e0000
.word 0x3d
.word 0x3df40000
.word 0x19
.word 0x3dc80000
.word 0x47
.word 0x3f0e0000
.word 0x3d
.word 0x3f740000
.word 0x4e
.word 0x401c0000
.word 0x4b
.word 0x40960000
.word 0x3d
.word 0x40f40000
.word 0x30
.word 0x41400000
.word 0x46
.word 0x420c0000
.word 0x7f000012
.word 0xbf12493a
.word 0x7f00005d
.word 0xbf0888ec
RVTEST_DATA_END

RVMODEL_DATA_BEGIN


signature_x15_0:
    .fill 0*(XLEN/32),4,0xdeadbeef


signature_x15_1:
    .fill 508*(XLEN/32),4,0xdeadbeef


signature_x15_2:
    .fill 48*(XLEN/32),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*(XLEN/32),4,0xdeadbeef

#endif

RVMODEL_DATA_END
