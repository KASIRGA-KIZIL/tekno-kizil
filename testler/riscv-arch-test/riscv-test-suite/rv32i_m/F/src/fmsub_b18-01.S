
// -----------
// This file was generated by riscv_ctg (https://gitlab.com/incoresemi/riscv-compliance/riscv_ctg)
// version   : 0.5.2
// timestamp : Tue Sep  7 16:08:09 2021 GMT
// usage     : riscv_ctg \
//                  -- cgf $cgf \
//                  -- xlen $xlen \
// -----------
//
// -----------
// Copyright (c) 2021. IIT Madras. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.s instruction of the RISC-V F extension for the fmsub_b18 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fmsub_b18)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x16,test_fp)
RVTEST_SIGBASE(x15,signature_x15_1)

inst_0:
// rs1 == rs2 == rs3 != rd, rs1==f30, rs2==f30, rs3==f30, rd==f8, fs1 == 0 and fe1 == 0xfe and fm1 == 0x378efe and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f30; op2:f30; op3:f30; dest:f8; op1val:0x7f378efe; op2val:0x7f378efe; op3val:0x7f378efe; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f8, f30, f30, f30, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_1:
// rs1 == rd == rs3 != rs2, rs1==f16, rs2==f27, rs3==f16, rd==f16, fs1 == 0 and fe1 == 0xfb and fm1 == 0x456627 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f16; op2:f27; op3:f16; dest:f16; op1val:0x7dc56627; op2val:0x80000000; op3val:0x7dc56627; valaddr_reg:x16; val_offset:12; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f16, f16, f27, f16, 0x0, 0, x16, 12, x17, x15, 8, x18)

inst_2:
// rs1 == rs3 != rs2 and rs1 == rs3 != rd and rd != rs2, rs1==f22, rs2==f17, rs3==f22, rd==f26, fs1 == 0 and fe1 == 0xfd and fm1 == 0x78dd0e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f22; op2:f17; op3:f22; dest:f26; op1val:0x7ef8dd0e; op2val:0x80000000; op3val:0x7ef8dd0e; valaddr_reg:x16; val_offset:24; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f26, f22, f17, f22, 0x0, 0, x16, 24, x17, x15, 16, x18)

inst_3:
// rs2 == rd != rs1 and rs2 == rd != rs3 and rs3 != rs1, rs1==f9, rs2==f0, rs3==f11, rd==f0, fs1 == 0 and fe1 == 0xfe and fm1 == 0x3dd17c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f9; op2:f0; op3:f11; dest:f0; op1val:0x7f3dd17c; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:36; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f0, f9, f0, f11, 0x0, 0, x16, 36, x17, x15, 24, x18)

inst_4:
// rs2 == rs3 != rs1 and rs2 == rs3 != rd and rd != rs1, rs1==f11, rs2==f15, rs3==f15, rd==f12, fs1 == 0 and fe1 == 0xfe and fm1 == 0x2befa1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f11; op2:f15; op3:f15; dest:f12; op1val:0x7f2befa1; op2val:0x80000000; op3val:0x80000000; valaddr_reg:x16; val_offset:48; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f12, f11, f15, f15, 0x0, 0, x16, 48, x17, x15, 32, x18)

inst_5:
// rd == rs2 == rs3 != rs1, rs1==f27, rs2==f31, rs3==f31, rd==f31, fs1 == 0 and fe1 == 0xfb and fm1 == 0x04534d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f27; op2:f31; op3:f31; dest:f31; op1val:0x7d84534d; op2val:0x80000000; op3val:0x80000000; valaddr_reg:x16; val_offset:60; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f31, f27, f31, f31, 0x0, 0, x16, 60, x17, x15, 40, x18)

inst_6:
// rs1 == rs2 != rs3 and rs1 == rs2 != rd and rd != rs3, rs1==f10, rs2==f10, rs3==f25, rd==f23, fs1 == 0 and fe1 == 0xfa and fm1 == 0x4d54a3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f10; op3:f25; dest:f23; op1val:0x7d4d54a3; op2val:0x7d4d54a3; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:72; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f23, f10, f10, f25, 0x0, 0, x16, 72, x17, x15, 48, x18)

inst_7:
// rs1 == rs2 == rd != rs3, rs1==f25, rs2==f25, rs3==f27, rd==f25, fs1 == 0 and fe1 == 0xfd and fm1 == 0x2009f6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f25; op2:f25; op3:f27; dest:f25; op1val:0x7ea009f6; op2val:0x7ea009f6; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:84; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f25, f25, f25, f27, 0x0, 0, x16, 84, x17, x15, 56, x18)

inst_8:
// rs1 == rs2 == rs3 == rd, rs1==f21, rs2==f21, rs3==f21, rd==f21, fs1 == 0 and fe1 == 0xfb and fm1 == 0x61068d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f21; op2:f21; op3:f21; dest:f21; op1val:0x7de1068d; op2val:0x7de1068d; op3val:0x7de1068d; valaddr_reg:x16; val_offset:96; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f21, f21, f21, f21, 0x0, 0, x16, 96, x17, x15, 64, x18)

inst_9:
// rs3 == rd != rs1 and rs3 == rd != rs2 and rs2 != rs1, rs1==f29, rs2==f11, rs3==f20, rd==f20, fs1 == 0 and fe1 == 0xfe and fm1 == 0x3f914f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f29; op2:f11; op3:f20; dest:f20; op1val:0x7f3f914f; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:108; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f20, f29, f11, f20, 0x0, 0, x16, 108, x17, x15, 72, x18)

inst_10:
// rs1 != rs2 and rs1 != rd and rs1 != rs3 and rs2 != rs3 and rs2 != rd and rs3 != rd, rs1==f24, rs2==f7, rs3==f3, rd==f2, fs1 == 0 and fe1 == 0xfd and fm1 == 0x08b9d9 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f24; op2:f7; op3:f3; dest:f2; op1val:0x7e88b9d9; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f2, f24, f7, f3, 0x0, 0, x16, 120, x17, x15, 80, x18)

inst_11:
// rs1 == rd != rs2 and rs1 == rd != rs3 and rs3 != rs2, rs1==f19, rs2==f5, rs3==f12, rd==f19, fs1 == 0 and fe1 == 0xfb and fm1 == 0x136004 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f19; op2:f5; op3:f12; dest:f19; op1val:0x7d936004; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:132; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f19, f19, f5, f12, 0x0, 0, x16, 132, x17, x15, 88, x18)

inst_12:
// rs1==f15, rs2==f9, rs3==f29, rd==f22, fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d071f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f15; op2:f9; op3:f29; dest:f22; op1val:0x7f1d071f; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:144; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f22, f15, f9, f29, 0x0, 0, x16, 144, x17, x15, 96, x18)

inst_13:
// rs1==f23, rs2==f8, rs3==f0, rd==f17, fs1 == 0 and fe1 == 0xfd and fm1 == 0x60fc5e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f23; op2:f8; op3:f0; dest:f17; op1val:0x7ee0fc5e; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:156; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f17, f23, f8, f0, 0x0, 0, x16, 156, x17, x15, 104, x18)

inst_14:
// rs1==f0, rs2==f2, rs3==f9, rd==f28, fs1 == 0 and fe1 == 0xfe and fm1 == 0x305e0d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f0; op2:f2; op3:f9; dest:f28; op1val:0x7f305e0d; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:168; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f28, f0, f2, f9, 0x0, 0, x16, 168, x17, x15, 112, x18)

inst_15:
// rs1==f20, rs2==f23, rs3==f1, rd==f3, fs1 == 0 and fe1 == 0xfe and fm1 == 0x026519 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f20; op2:f23; op3:f1; dest:f3; op1val:0x7f026519; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:180; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f3, f20, f23, f1, 0x0, 0, x16, 180, x17, x15, 120, x18)

inst_16:
// rs1==f12, rs2==f26, rs3==f14, rd==f13, fs1 == 0 and fe1 == 0xfd and fm1 == 0x243814 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f12; op2:f26; op3:f14; dest:f13; op1val:0x7ea43814; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:192; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f12, f26, f14, 0x0, 0, x16, 192, x17, x15, 128, x18)

inst_17:
// rs1==f17, rs2==f20, rs3==f5, rd==f1, fs1 == 0 and fe1 == 0xfc and fm1 == 0x473929 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f17; op2:f20; op3:f5; dest:f1; op1val:0x7e473929; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:204; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f1, f17, f20, f5, 0x0, 0, x16, 204, x17, x15, 136, x18)

inst_18:
// rs1==f26, rs2==f3, rs3==f2, rd==f9, fs1 == 0 and fe1 == 0xfd and fm1 == 0x3bb1f5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f26; op2:f3; op3:f2; dest:f9; op1val:0x7ebbb1f5; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:216; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f9, f26, f3, f2, 0x0, 0, x16, 216, x17, x15, 144, x18)

inst_19:
// rs1==f7, rs2==f19, rs3==f13, rd==f14, fs1 == 0 and fe1 == 0xfc and fm1 == 0x31e3ca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f7; op2:f19; op3:f13; dest:f14; op1val:0x7e31e3ca; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:228; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f14, f7, f19, f13, 0x0, 0, x16, 228, x17, x15, 152, x18)

inst_20:
// rs1==f13, rs2==f18, rs3==f17, rd==f15, fs1 == 0 and fe1 == 0xfc and fm1 == 0x63ea1b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f13; op2:f18; op3:f17; dest:f15; op1val:0x7e63ea1b; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f15, f13, f18, f17, 0x0, 0, x16, 240, x17, x15, 160, x18)

inst_21:
// rs1==f6, rs2==f28, rs3==f10, rd==f4, fs1 == 0 and fe1 == 0xfe and fm1 == 0x208358 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f6; op2:f28; op3:f10; dest:f4; op1val:0x7f208358; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:252; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f4, f6, f28, f10, 0x0, 0, x16, 252, x17, x15, 168, x18)

inst_22:
// rs1==f28, rs2==f1, rs3==f26, rd==f27, fs1 == 0 and fe1 == 0xfe and fm1 == 0x32f44f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f28; op2:f1; op3:f26; dest:f27; op1val:0x7f32f44f; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:264; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f27, f28, f1, f26, 0x0, 0, x16, 264, x17, x15, 176, x18)

inst_23:
// rs1==f31, rs2==f16, rs3==f4, rd==f6, fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a6f68 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f31; op2:f16; op3:f4; dest:f6; op1val:0x7f1a6f68; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:276; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f6, f31, f16, f4, 0x0, 0, x16, 276, x17, x15, 184, x18)

inst_24:
// rs1==f18, rs2==f4, rs3==f23, rd==f10, fs1 == 0 and fe1 == 0xfe and fm1 == 0x374d41 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f18; op2:f4; op3:f23; dest:f10; op1val:0x7f374d41; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:288; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f10, f18, f4, f23, 0x0, 0, x16, 288, x17, x15, 192, x18)

inst_25:
// rs1==f5, rs2==f14, rs3==f18, rd==f30, fs1 == 0 and fe1 == 0xfd and fm1 == 0x376202 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f5; op2:f14; op3:f18; dest:f30; op1val:0x7eb76202; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:300; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f30, f5, f14, f18, 0x0, 0, x16, 300, x17, x15, 200, x18)

inst_26:
// rs1==f3, rs2==f29, rs3==f6, rd==f24, fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a19c2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f3; op2:f29; op3:f6; dest:f24; op1val:0x7eca19c2; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:312; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f24, f3, f29, f6, 0x0, 0, x16, 312, x17, x15, 208, x18)

inst_27:
// rs1==f14, rs2==f6, rs3==f19, rd==f29, fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e8c3e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f14; op2:f6; op3:f19; dest:f29; op1val:0x7e4e8c3e; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:324; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f29, f14, f6, f19, 0x0, 0, x16, 324, x17, x15, 216, x18)

inst_28:
// rs1==f8, rs2==f12, rs3==f24, rd==f7, fs1 == 0 and fe1 == 0xfe and fm1 == 0x195ac9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f8; op2:f12; op3:f24; dest:f7; op1val:0x7f195ac9; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:336; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f7, f8, f12, f24, 0x0, 0, x16, 336, x17, x15, 224, x18)

inst_29:
// rs1==f2, rs2==f24, rs3==f7, rd==f18, fs1 == 0 and fe1 == 0xfd and fm1 == 0x2f806f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f2; op2:f24; op3:f7; dest:f18; op1val:0x7eaf806f; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:348; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f18, f2, f24, f7, 0x0, 0, x16, 348, x17, x15, 232, x18)

inst_30:
// rs1==f4, rs2==f22, rs3==f28, rd==f11, fs1 == 0 and fe1 == 0xfd and fm1 == 0x094fff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f4; op2:f22; op3:f28; dest:f11; op1val:0x7e894fff; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f11, f4, f22, f28, 0x0, 0, x16, 360, x17, x15, 240, x18)

inst_31:
// rs1==f1, rs2==f13, rs3==f8, rd==f5, fs1 == 0 and fe1 == 0xfd and fm1 == 0x3f366d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f1; op2:f13; op3:f8; dest:f5; op1val:0x7ebf366d; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:372; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f5, f1, f13, f8, 0x0, 0, x16, 372, x17, x15, 248, x18)

inst_32:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0aea5e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0aea5e; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:384; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 384, x17, x15, 256, x18)

inst_33:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x153984 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x24b0f4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3ffffe and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f153984; op2val:0x3fa4b0f4; op3val:0x7f3ffffe; valaddr_reg:x16; val_offset:396; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 396, x17, x15, 264, x18)

inst_34:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7d1e07 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x422fc7 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3fffff and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7efd1e07; op2val:0x3fc22fc7; op3val:0x7f3fffff; valaddr_reg:x16; val_offset:408; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 408, x17, x15, 272, x18)

inst_35:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x17909f and fs2 == 0 and fe2 == 0x84 and fm2 == 0x2225f7 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3ffffe and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7c97909f; op2val:0x422225f7; op3val:0x7f3ffffe; valaddr_reg:x16; val_offset:420; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 420, x17, x15, 280, x18)

inst_36:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x04fd41 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x38cbfd and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3fffff and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f04fd41; op2val:0x3fb8cbfd; op3val:0x7f3fffff; valaddr_reg:x16; val_offset:432; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 432, x17, x15, 288, x18)

inst_37:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3841a0 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x05611e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3ffffe and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3841a0; op2val:0x3f85611e; op3val:0x7f3ffffe; valaddr_reg:x16; val_offset:444; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 444, x17, x15, 296, x18)

inst_38:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x762408 and fs2 == 0 and fe2 == 0x7f and fm2 == 0x47b0cb and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3fffff and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef62408; op2val:0x3fc7b0cb; op3val:0x7f3fffff; valaddr_reg:x16; val_offset:456; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 456, x17, x15, 304, x18)

inst_39:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2336ae and fs2 == 0 and fe2 == 0x7f and fm2 == 0x16935f and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3fffff and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2336ae; op2val:0x3f96935f; op3val:0x7f3fffff; valaddr_reg:x16; val_offset:468; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 468, x17, x15, 312, x18)

inst_40:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x775433 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x46bb37 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3fffff and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d775433; op2val:0x4146bb37; op3val:0x7f3fffff; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 320, x18)

inst_41:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3b09f3 and fs2 == 0 and fe2 == 0x82 and fm2 == 0x036528 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3fffff and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7dbb09f3; op2val:0x41036528; op3val:0x7f3fffff; valaddr_reg:x16; val_offset:492; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 492, x17, x15, 328, x18)

inst_42:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3af9fa and fs2 == 0 and fe2 == 0x82 and fm2 == 0x037061 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3fffff and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7dbaf9fa; op2val:0x41037061; op3val:0x7f3fffff; valaddr_reg:x16; val_offset:504; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 504, x17, x15, 336, x18)

inst_43:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x17b243 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x220202 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3fffff and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e97b243; op2val:0x40220202; op3val:0x7f3fffff; valaddr_reg:x16; val_offset:516; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 516, x17, x15, 344, x18)

inst_44:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x10affc and fs2 == 0 and fe2 == 0x7f and fm2 == 0x29db14 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3fffff and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f10affc; op2val:0x3fa9db14; op3val:0x7f3fffff; valaddr_reg:x16; val_offset:528; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 528, x17, x15, 352, x18)

inst_45:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x31e0ce and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0a2977 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3ffffe and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb1e0ce; op2val:0x400a2977; op3val:0x7f3ffffe; valaddr_reg:x16; val_offset:540; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 540, x17, x15, 360, x18)

inst_46:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1671a2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x235b48 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3fffff and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e9671a2; op2val:0x40235b48; op3val:0x7f3fffff; valaddr_reg:x16; val_offset:552; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 552, x17, x15, 368, x18)

inst_47:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5b79eb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7edb79eb; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:564; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 564, x17, x15, 376, x18)

inst_48:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x13bb57 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e13bb57; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:576; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 576, x17, x15, 384, x18)

inst_49:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x10f4fa and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f10f4fa; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:588; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 588, x17, x15, 392, x18)

inst_50:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x6b27f7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d6b27f7; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 400, x18)

inst_51:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x339269 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f339269; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:612; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 612, x17, x15, 408, x18)

inst_52:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0f31c4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8f31c4; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:624; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 624, x17, x15, 416, x18)

inst_53:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5a6352 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e5a6352; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:636; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 636, x17, x15, 424, x18)

inst_54:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x62ae46 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d62ae46; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:648; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 648, x17, x15, 432, x18)

inst_55:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6213fe and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee213fe; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:660; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 660, x17, x15, 440, x18)

inst_56:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1fef00 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e1fef00; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:672; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 672, x17, x15, 448, x18)

inst_57:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3a9244 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eba9244; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:684; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 684, x17, x15, 456, x18)

inst_58:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1db2ee and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e9db2ee; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:696; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 696, x17, x15, 464, x18)

inst_59:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2d58ba and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ead58ba; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:708; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 708, x17, x15, 472, x18)

inst_60:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x41315c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7c41315c; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 480, x18)

inst_61:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x01223e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f01223e; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:732; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 732, x17, x15, 488, x18)

inst_62:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2165be and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2165be; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:744; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 744, x17, x15, 496, x18)

inst_63:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6af2c7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e6af2c7; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:756; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 756, x17, x15, 504, x18)

inst_64:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1b6277 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d9b6277; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:768; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 768, x17, x15, 512, x18)

inst_65:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x039463 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f039463; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:780; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 780, x17, x15, 520, x18)

inst_66:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6a262c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7c6a262c; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:792; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 792, x17, x15, 528, x18)

inst_67:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0eef5f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8eef5f; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:804; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 804, x17, x15, 536, x18)

inst_68:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3cd606 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3cd606; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:816; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 816, x17, x15, 544, x18)

inst_69:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x5e65e4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e5e65e4; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:828; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 828, x17, x15, 552, x18)

inst_70:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a6f9b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eea6f9b; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 560, x18)

inst_71:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x30eb20 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f30eb20; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:852; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 852, x17, x15, 568, x18)

inst_72:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x476063 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ec76063; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:864; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 864, x17, x15, 576, x18)

inst_73:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0c9d58 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8c9d58; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:876; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 876, x17, x15, 584, x18)

inst_74:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1a1c1b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1a1c1b; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:888; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 888, x17, x15, 592, x18)

inst_75:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x100e76 and fs2 == 0 and fe2 == 0x2d and fm2 == 0x63775f and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d900e76; op2val:0x16e3775f; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:900; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 900, x17, x15, 600, x18)

inst_76:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0b2e4b and fs2 == 0 and fe2 == 0x2c and fm2 == 0x6b6f48 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e0b2e4b; op2val:0x166b6f48; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:912; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 912, x17, x15, 608, x18)

inst_77:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x499ff1 and fs2 == 0 and fe2 == 0x2b and fm2 == 0x22850b and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ec99ff1; op2val:0x15a2850b; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:924; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 924, x17, x15, 616, x18)

inst_78:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2084ae and fs2 == 0 and fe2 == 0x2b and fm2 == 0x4c2384 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ea084ae; op2val:0x15cc2384; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:936; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 936, x17, x15, 624, x18)

inst_79:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x1d64a3 and fs2 == 0 and fe2 == 0x2e and fm2 == 0x50312b and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d1d64a3; op2val:0x1750312b; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:948; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 948, x17, x15, 632, x18)

inst_80:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5f221f and fs2 == 0 and fe2 == 0x2b and fm2 == 0x12da9b and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7edf221f; op2val:0x1592da9b; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 640, x18)

inst_81:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x446aa0 and fs2 == 0 and fe2 == 0x2b and fm2 == 0x26d443 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ec46aa0; op2val:0x15a6d443; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:972; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 972, x17, x15, 648, x18)

inst_82:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x268dc5 and fs2 == 1 and fe2 == 0x2b and fm2 == 0x44bdc1 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ea68dc5; op2val:0x95c4bdc1; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:984; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 984, x17, x15, 656, x18)

inst_83:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0bf46a and fs2 == 1 and fe2 == 0x2a and fm2 == 0x6a21ff and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0bf46a; op2val:0x956a21ff; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:996; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 996, x17, x15, 664, x18)

inst_84:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x38eb1b and fs2 == 1 and fe2 == 0x2a and fm2 == 0x3133d6 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f38eb1b; op2val:0x953133d6; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1008; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1008, x17, x15, 672, x18)

inst_85:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2e0f5d and fs2 == 1 and fe2 == 0x2a and fm2 == 0x3c41c4 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2e0f5d; op2val:0x953c41c4; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1020; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1020, x17, x15, 680, x18)

inst_86:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x232951 and fs2 == 1 and fe2 == 0x2c and fm2 == 0x48d4f2 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e232951; op2val:0x9648d4f2; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1032; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1032, x17, x15, 688, x18)

inst_87:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x766f73 and fs2 == 1 and fe2 == 0x2b and fm2 == 0x04f7ca and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef66f73; op2val:0x9584f7ca; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1044; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1044, x17, x15, 696, x18)

inst_88:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6dde9e and fs2 == 1 and fe2 == 0x2c and fm2 == 0x09c192 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e6dde9e; op2val:0x9609c192; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1056; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1056, x17, x15, 704, x18)

inst_89:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3254ae and fs2 == 1 and fe2 == 0x2b and fm2 == 0x37bf98 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb254ae; op2val:0x95b7bf98; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1068; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1068, x17, x15, 712, x18)

inst_90:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x47f677 and fs2 == 1 and fe2 == 0x2b and fm2 == 0x23deda and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ec7f677; op2val:0x95a3deda; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 720, x18)

inst_91:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x26ed76 and fs2 == 1 and fe2 == 0x2c and fm2 == 0x444cfa and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e26ed76; op2val:0x96444cfa; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1092; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1092, x17, x15, 728, x18)

inst_92:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x31cfbf and fs2 == 1 and fe2 == 0x2c and fm2 == 0x3848f7 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e31cfbf; op2val:0x963848f7; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1104; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1104, x17, x15, 736, x18)

inst_93:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0b977b and fs2 == 1 and fe2 == 0x2c and fm2 == 0x6abddf and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e0b977b; op2val:0x966abddf; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1116; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1116, x17, x15, 744, x18)

inst_94:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x19405f and fs2 == 1 and fe2 == 0x2d and fm2 == 0x55d18b and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d99405f; op2val:0x96d5d18b; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1128; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1128, x17, x15, 752, x18)

inst_95:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x38fc15 and fs2 == 1 and fe2 == 0x2c and fm2 == 0x312393 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e38fc15; op2val:0x96312393; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1140; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1140, x17, x15, 760, x18)

inst_96:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0af6b9 and fs2 == 0 and fe2 == 0x2a and fm2 == 0x6bcd6e and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0af6b9; op2val:0x156bcd6e; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1152; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1152, x17, x15, 768, x18)

inst_97:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2ac3c6 and fs2 == 0 and fe2 == 0x2d and fm2 == 0x3fe3c5 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7daac3c6; op2val:0x16bfe3c5; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1164; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1164, x17, x15, 776, x18)

inst_98:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1cf370 and fs2 == 0 and fe2 == 0x2b and fm2 == 0x50c753 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e9cf370; op2val:0x15d0c753; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1176; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1176, x17, x15, 784, x18)

inst_99:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5a1bbe and fs2 == 0 and fe2 == 0x2f and fm2 == 0x163cbb and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7cda1bbe; op2val:0x17963cbb; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1188; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1188, x17, x15, 792, x18)

inst_100:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x6d25cb and fs2 == 0 and fe2 == 0x32 and fm2 == 0x0a2cef and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7b6d25cb; op2val:0x190a2cef; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 800, x18)

inst_101:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a0e92 and fs2 == 0 and fe2 == 0x2b and fm2 == 0x222c0f and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eca0e92; op2val:0x15a22c0f; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1212; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1212, x17, x15, 808, x18)

inst_102:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x227041 and fs2 == 0 and fe2 == 0x2b and fm2 == 0x49b9c0 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ea27041; op2val:0x15c9b9c0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1224; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1224, x17, x15, 816, x18)

inst_103:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x45136f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e45136f; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1236; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1236, x17, x15, 824, x18)

inst_104:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x083942 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f083942; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1248; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1248, x17, x15, 832, x18)

inst_105:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x19a3cb and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f19a3cb; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1260; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1260, x17, x15, 840, x18)

inst_106:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6fadd2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eefadd2; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1272; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1272, x17, x15, 848, x18)

inst_107:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6308fe and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee308fe; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1284; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1284, x17, x15, 856, x18)

inst_108:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x409980 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e409980; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1296; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1296, x17, x15, 864, x18)

inst_109:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ac389 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eaac389; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1308; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1308, x17, x15, 872, x18)

inst_110:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x328a37 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e328a37; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 880, x18)

inst_111:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3ef2e6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3ef2e6; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1332; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1332, x17, x15, 888, x18)

inst_112:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x335a5f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f335a5f; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1344; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1344, x17, x15, 896, x18)

inst_113:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3cd352 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3cd352; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1356; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1356, x17, x15, 904, x18)

inst_114:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x432be8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ec32be8; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1368; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1368, x17, x15, 912, x18)

inst_115:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x73de7a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef3de7a; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1380; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1380, x17, x15, 920, x18)

inst_116:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x134261 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d934261; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1392; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1392, x17, x15, 928, x18)

inst_117:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x778ca8 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7df78ca8; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1404; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1404, x17, x15, 936, x18)

inst_118:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x4e2b68 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7cce2b68; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1416; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1416, x17, x15, 944, x18)

inst_119:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2e6e63 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d2e6e63; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1428; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1428, x17, x15, 952, x18)

inst_120:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x57ea20 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7dd7ea20; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 960, x18)

inst_121:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5640ba and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ed640ba; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1452; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1452, x17, x15, 968, x18)

inst_122:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x5d9799 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7c5d9799; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1464; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1464, x17, x15, 976, x18)

inst_123:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x212fa5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ea12fa5; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1476; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1476, x17, x15, 984, x18)

inst_124:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68bbe2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee8bbe2; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1488; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1488, x17, x15, 992, x18)

inst_125:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x46fc6d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e46fc6d; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1500; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1500, x17, x15, 1000, x18)

inst_126:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3844b4 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3844b4; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1512; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1512, x17, x15, 1008, x18)

inst_127:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x5cec0b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ddcec0b; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1524; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1524, x17, x15, 1016, x18)

inst_128:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x45af29 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ec5af29; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1536; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1536, x17, x15, 1024, x18)

inst_129:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x16e4ce and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e96e4ce; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1548; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1548, x17, x15, 1032, x18)

inst_130:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x609f7b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee09f7b; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1040, x18)

inst_131:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x43e560 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7dc3e560; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1572; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1572, x17, x15, 1048, x18)

inst_132:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x27f459 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f27f459; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1584; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1584, x17, x15, 1056, x18)

inst_133:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2bf6ad and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eabf6ad; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1596; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1596, x17, x15, 1064, x18)

inst_134:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1cbf56 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d9cbf56; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1608; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1608, x17, x15, 1072, x18)

inst_135:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x72ec45 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e72ec45; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1620; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1620, x17, x15, 1080, x18)

inst_136:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7dc215 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7efdc215; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1632; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1632, x17, x15, 1088, x18)

inst_137:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2d3485 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e2d3485; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1644; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1644, x17, x15, 1096, x18)

inst_138:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x358c1d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb58c1d; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1656; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1656, x17, x15, 1104, x18)

inst_139:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x076d1f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f076d1f; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1668; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1668, x17, x15, 1112, x18)

inst_140:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2596ee and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2596ee; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1120, x18)

inst_141:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x11164e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f11164e; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1692; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1692, x17, x15, 1128, x18)

inst_142:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d3017 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2d3017; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1704; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1704, x17, x15, 1136, x18)

inst_143:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0e11db and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0e11db; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1716; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1716, x17, x15, 1144, x18)

inst_144:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1310f3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1310f3; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1728; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1728, x17, x15, 1152, x18)

inst_145:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2c4868 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eac4868; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1740; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1740, x17, x15, 1160, x18)

inst_146:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x3d4d49 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7cbd4d49; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1752; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1752, x17, x15, 1168, x18)

inst_147:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x017d76 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e817d76; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1764; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1764, x17, x15, 1176, x18)

inst_148:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x2dbe96 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7dadbe96; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1776; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1776, x17, x15, 1184, x18)

inst_149:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0e8d5f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0e8d5f; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1788; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1788, x17, x15, 1192, x18)

inst_150:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6c407f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eec407f; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1200, x18)

inst_151:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x042c55 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e842c55; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1812; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1812, x17, x15, 1208, x18)

inst_152:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5ed631 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7cded631; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1824; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1824, x17, x15, 1216, x18)

inst_153:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x6894ce and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7de894ce; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1836; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1836, x17, x15, 1224, x18)

inst_154:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3e148d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3e148d; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1848; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1848, x17, x15, 1232, x18)

inst_155:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x04972f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d04972f; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1860; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1860, x17, x15, 1240, x18)

inst_156:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x140eaa and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e940eaa; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1872; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1872, x17, x15, 1248, x18)

inst_157:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x04c461 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f04c461; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1884; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1884, x17, x15, 1256, x18)

inst_158:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0d1c84 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e0d1c84; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1896; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1896, x17, x15, 1264, x18)

inst_159:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x71556c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7df1556c; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1908; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1908, x17, x15, 1272, x18)

inst_160:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1c29fe and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1c29fe; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1280, x18)

inst_161:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x445eb5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e445eb5; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1932; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1932, x17, x15, 1288, x18)

inst_162:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x01ea00 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7c81ea00; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1944; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1944, x17, x15, 1296, x18)

inst_163:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c0c9f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0c0c9f; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1956; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1956, x17, x15, 1304, x18)

inst_164:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x1bb7c9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7c9bb7c9; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1968; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1968, x17, x15, 1312, x18)

inst_165:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3746a3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3746a3; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1980; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1980, x17, x15, 1320, x18)

inst_166:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x7eadb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d7eadb5; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1992; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1992, x17, x15, 1328, x18)

inst_167:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x012bc4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f012bc4; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:2004; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 2004, x17, x15, 1336, x18)

inst_168:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x04012d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e04012d; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:2016; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 2016, x17, x15, 1344, x18)

inst_169:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x0b2521 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e8b2521; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:2028; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 2028, x17, x15, 1352, x18)
addi x16,x16,2040

inst_170:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x43d400 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7cc3d400; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 1360, x18)

inst_171:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x09a812 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f09a812; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:12; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 12, x17, x15, 1368, x18)

inst_172:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x22667e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ea2667e; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:24; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 24, x17, x15, 1376, x18)

inst_173:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x29125a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f29125a; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:36; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 36, x17, x15, 1384, x18)

inst_174:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x21a5d7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e21a5d7; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:48; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 48, x17, x15, 1392, x18)

inst_175:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3c07ec and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e3c07ec; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:60; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 60, x17, x15, 1400, x18)

inst_176:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x23f501 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f23f501; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:72; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 72, x17, x15, 1408, x18)

inst_177:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x489656 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ec89656; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:84; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 84, x17, x15, 1416, x18)

inst_178:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x23397b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7da3397b; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:96; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 96, x17, x15, 1424, x18)

inst_179:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x281823 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f281823; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:108; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 108, x17, x15, 1432, x18)

inst_180:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2e0a9e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e2e0a9e; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 1440, x18)

inst_181:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x51bd97 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e51bd97; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:132; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 132, x17, x15, 1448, x18)

inst_182:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7ab7a7 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7efab7a7; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:144; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 144, x17, x15, 1456, x18)

inst_183:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x3481df and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d3481df; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:156; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 156, x17, x15, 1464, x18)

inst_184:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0eff8f and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0eff8f; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:168; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 168, x17, x15, 1472, x18)

inst_185:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x12ff4e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e12ff4e; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:180; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 180, x17, x15, 1480, x18)

inst_186:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2e44fd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2e44fd; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:192; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 192, x17, x15, 1488, x18)

inst_187:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0b61db and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0b61db; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:204; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 204, x17, x15, 1496, x18)

inst_188:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1d844c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1d844c; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:216; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 216, x17, x15, 1504, x18)

inst_189:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x678d99 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d678d99; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:228; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 228, x17, x15, 1512, x18)

inst_190:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f5572 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eef5572; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 1520, x18)

inst_191:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x335b8d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f335b8d; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:252; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 252, x17, x15, 1528, x18)

inst_192:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4490fe and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ec490fe; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:264; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 264, x17, x15, 1536, x18)

inst_193:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1f9ac5 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e1f9ac5; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:276; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 276, x17, x15, 1544, x18)

inst_194:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6f7f16 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e6f7f16; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:288; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 288, x17, x15, 1552, x18)

inst_195:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x61c550 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee1c550; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:300; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 300, x17, x15, 1560, x18)

inst_196:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7a24a3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7efa24a3; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:312; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 312, x17, x15, 1568, x18)

inst_197:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x46d0ac and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ec6d0ac; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:324; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 324, x17, x15, 1576, x18)

inst_198:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x41a1ac and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ec1a1ac; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:336; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 336, x17, x15, 1584, x18)

inst_199:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x07976d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f07976d; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:348; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 348, x17, x15, 1592, x18)

inst_200:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x37d03d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f37d03d; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 1600, x18)

inst_201:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6dbe95 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e6dbe95; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:372; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 372, x17, x15, 1608, x18)

inst_202:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2efc0a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2efc0a; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:384; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 384, x17, x15, 1616, x18)

inst_203:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4dedfa and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e4dedfa; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:396; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 396, x17, x15, 1624, x18)

inst_204:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2e5316 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2e5316; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:408; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 408, x17, x15, 1632, x18)

inst_205:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7f1541 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7dff1541; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:420; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 420, x17, x15, 1640, x18)

inst_206:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x065158 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f065158; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:432; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 432, x17, x15, 1648, x18)

inst_207:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x79582c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e79582c; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:444; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 444, x17, x15, 1656, x18)

inst_208:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x2a59d1 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e2a59d1; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:456; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 456, x17, x15, 1664, x18)

inst_209:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3adb90 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ebadb90; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:468; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 468, x17, x15, 1672, x18)

inst_210:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0af6e3 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0af6e3; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1680, x18)

inst_211:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x30b414 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f30b414; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:492; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 492, x17, x15, 1688, x18)

inst_212:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x59ffad and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ed9ffad; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:504; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 504, x17, x15, 1696, x18)

inst_213:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x310756 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb10756; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:516; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 516, x17, x15, 1704, x18)

inst_214:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cbe14 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2cbe14; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:528; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 528, x17, x15, 1712, x18)

inst_215:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2981e2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2981e2; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:540; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 540, x17, x15, 1720, x18)

inst_216:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x07e829 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e87e829; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:552; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 552, x17, x15, 1728, x18)

inst_217:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1fa717 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f1fa717; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:564; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 564, x17, x15, 1736, x18)

inst_218:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4052ad and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ec052ad; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:576; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 576, x17, x15, 1744, x18)

inst_219:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x319158 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f319158; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:588; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 588, x17, x15, 1752, x18)

inst_220:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3c2a53 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ebc2a53; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1760, x18)

inst_221:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4ba816 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ecba816; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:612; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 612, x17, x15, 1768, x18)

inst_222:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x312e1f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb12e1f; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:624; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 624, x17, x15, 1776, x18)

inst_223:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x094f18 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f094f18; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:636; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 636, x17, x15, 1784, x18)

inst_224:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x10c4ce and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f10c4ce; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:648; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 648, x17, x15, 1792, x18)

inst_225:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x779461 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7df79461; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:660; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 660, x17, x15, 1800, x18)

inst_226:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x38af5a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f38af5a; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:672; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 672, x17, x15, 1808, x18)

inst_227:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3c58f5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3c58f5; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:684; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 684, x17, x15, 1816, x18)

inst_228:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x07daac and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e87daac; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:696; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 696, x17, x15, 1824, x18)

inst_229:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x17a1ac and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f17a1ac; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:708; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 708, x17, x15, 1832, x18)

inst_230:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x127958 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f127958; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1840, x18)

inst_231:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2e10e3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2e10e3; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:732; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 732, x17, x15, 1848, x18)

inst_232:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d014f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0d014f; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:744; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 744, x17, x15, 1856, x18)

inst_233:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x18fa57 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f18fa57; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:756; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 756, x17, x15, 1864, x18)

inst_234:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2b90d3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2b90d3; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:768; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 768, x17, x15, 1872, x18)

inst_235:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x0ba7e2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e0ba7e2; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:780; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 780, x17, x15, 1880, x18)

inst_236:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x018006 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f018006; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:792; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 792, x17, x15, 1888, x18)

inst_237:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3fbf4a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3fbf4a; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:804; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 804, x17, x15, 1896, x18)

inst_238:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x43ed0a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ec3ed0a; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:816; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 816, x17, x15, 1904, x18)

inst_239:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x51f799 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7dd1f799; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:828; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 828, x17, x15, 1912, x18)

inst_240:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x79b5b2 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e79b5b2; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1920, x18)

inst_241:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x129583 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7c929583; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:852; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 852, x17, x15, 1928, x18)

inst_242:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3557bf and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e3557bf; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:864; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 864, x17, x15, 1936, x18)

inst_243:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x573c68 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ed73c68; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:876; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 876, x17, x15, 1944, x18)

inst_244:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x49e399 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ec9e399; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:888; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 888, x17, x15, 1952, x18)

inst_245:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2b393b and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2b393b; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:900; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 900, x17, x15, 1960, x18)

inst_246:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x11ecfc and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e91ecfc; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:912; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 912, x17, x15, 1968, x18)

inst_247:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x7494ca and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e7494ca; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:924; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 924, x17, x15, 1976, x18)

inst_248:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3284ec and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eb284ec; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:936; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 936, x17, x15, 1984, x18)

inst_249:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x289f06 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ca89f06; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:948; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 948, x17, x15, 1992, x18)

inst_250:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x5cb815 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7cdcb815; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 2000, x18)

inst_251:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e0246 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e4e0246; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:972; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 972, x17, x15, 2008, x18)

inst_252:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ad2f1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7eaad2f1; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:984; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 984, x17, x15, 2016, x18)

inst_253:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x50f6c7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ed0f6c7; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:996; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 996, x17, x15, 2024, x18)
RVTEST_SIGBASE(x15,signature_x15_2)

inst_254:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3648af and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3648af; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1008; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1008, x17, x15, 0, x18)

inst_255:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3f015e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3f015e; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1020; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1020, x17, x15, 8, x18)

inst_256:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0ad17d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0ad17d; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1032; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1032, x17, x15, 16, x18)

inst_257:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x171dc0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e971dc0; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1044; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1044, x17, x15, 24, x18)

inst_258:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x25608b and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ea5608b; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1056; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1056, x17, x15, 32, x18)

inst_259:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7346ad and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7df346ad; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1068; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1068, x17, x15, 40, x18)

inst_260:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5f2ead and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7edf2ead; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 48, x18)

inst_261:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x690309 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee90309; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1092; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1092, x17, x15, 56, x18)

inst_262:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x68aebb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ee8aebb; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1104; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1104, x17, x15, 64, x18)

inst_263:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6ca617 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7e6ca617; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1116; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1116, x17, x15, 72, x18)

inst_264:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x009696 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f009696; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1128; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1128, x17, x15, 80, x18)

inst_265:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0d4e65 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f0d4e65; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1140; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1140, x17, x15, 88, x18)

inst_266:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x206a70 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f206a70; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1152; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1152, x17, x15, 96, x18)

inst_267:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x025d06 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d825d06; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1164; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1164, x17, x15, 104, x18)

inst_268:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2db9cd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d2db9cd; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1176; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1176, x17, x15, 112, x18)

inst_269:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x35fb9d and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f35fb9d; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1188; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1188, x17, x15, 120, x18)

inst_270:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x378efe and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f378efe; op2val:0x0; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 128, x18)

inst_271:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x456627 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7dc56627; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1212; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1212, x17, x15, 136, x18)

inst_272:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78dd0e and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ef8dd0e; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1224; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1224, x17, x15, 144, x18)

inst_273:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3dd17c and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f3dd17c; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1236; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1236, x17, x15, 152, x18)

inst_274:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2befa1 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2befa1; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1248; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1248, x17, x15, 160, x18)

inst_275:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x04534d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d84534d; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1260; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1260, x17, x15, 168, x18)

inst_276:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x4d54a3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7d4d54a3; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1272; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1272, x17, x15, 176, x18)

inst_277:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2009f6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7ea009f6; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1284; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1284, x17, x15, 184, x18)

inst_278:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x61068d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3ffff8 and rm_val == 0  
// opcode: fmsub.s ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7de1068d; op2val:0x80000000; op3val:0xf1bffff8; valaddr_reg:x16; val_offset:1296; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.s, f13, f10, f11, f12, 0x0, 0, x16, 1296, x17, x15, 192, x18)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
test_fp:
.word 0x7f378efe
.word 0x7f378efe
.word 0x7f378efe
.word 0x7dc56627
.word 0x80000000
.word 0x7dc56627
.word 0x7ef8dd0e
.word 0x80000000
.word 0x7ef8dd0e
.word 0x7f3dd17c
.word 0x80000000
.word 0xf1bffff8
.word 0x7f2befa1
.word 0x80000000
.word 0x80000000
.word 0x7d84534d
.word 0x80000000
.word 0x80000000
.word 0x7d4d54a3
.word 0x7d4d54a3
.word 0xf1bffff8
.word 0x7ea009f6
.word 0x7ea009f6
.word 0xf1bffff8
.word 0x7de1068d
.word 0x7de1068d
.word 0x7de1068d
.word 0x7f3f914f
.word 0x80000000
.word 0xf1bffff8
.word 0x7e88b9d9
.word 0x80000000
.word 0xf1bffff8
.word 0x7d936004
.word 0x80000000
.word 0xf1bffff8
.word 0x7f1d071f
.word 0x80000000
.word 0xf1bffff8
.word 0x7ee0fc5e
.word 0x80000000
.word 0xf1bffff8
.word 0x7f305e0d
.word 0x80000000
.word 0xf1bffff8
.word 0x7f026519
.word 0x80000000
.word 0xf1bffff8
.word 0x7ea43814
.word 0x80000000
.word 0xf1bffff8
.word 0x7e473929
.word 0x0
.word 0xf1bffff8
.word 0x7ebbb1f5
.word 0x0
.word 0xf1bffff8
.word 0x7e31e3ca
.word 0x0
.word 0xf1bffff8
.word 0x7e63ea1b
.word 0x0
.word 0xf1bffff8
.word 0x7f208358
.word 0x0
.word 0xf1bffff8
.word 0x7f32f44f
.word 0x0
.word 0xf1bffff8
.word 0x7f1a6f68
.word 0x0
.word 0xf1bffff8
.word 0x7f374d41
.word 0x0
.word 0xf1bffff8
.word 0x7eb76202
.word 0x0
.word 0xf1bffff8
.word 0x7eca19c2
.word 0x0
.word 0xf1bffff8
.word 0x7e4e8c3e
.word 0x0
.word 0xf1bffff8
.word 0x7f195ac9
.word 0x0
.word 0xf1bffff8
.word 0x7eaf806f
.word 0x0
.word 0xf1bffff8
.word 0x7e894fff
.word 0x0
.word 0xf1bffff8
.word 0x7ebf366d
.word 0x0
.word 0xf1bffff8
.word 0x7f0aea5e
.word 0x0
.word 0xf1bffff8
.word 0x7f153984
.word 0x3fa4b0f4
.word 0x7f3ffffe
.word 0x7efd1e07
.word 0x3fc22fc7
.word 0x7f3fffff
.word 0x7c97909f
.word 0x422225f7
.word 0x7f3ffffe
.word 0x7f04fd41
.word 0x3fb8cbfd
.word 0x7f3fffff
.word 0x7f3841a0
.word 0x3f85611e
.word 0x7f3ffffe
.word 0x7ef62408
.word 0x3fc7b0cb
.word 0x7f3fffff
.word 0x7f2336ae
.word 0x3f96935f
.word 0x7f3fffff
.word 0x7d775433
.word 0x4146bb37
.word 0x7f3fffff
.word 0x7dbb09f3
.word 0x41036528
.word 0x7f3fffff
.word 0x7dbaf9fa
.word 0x41037061
.word 0x7f3fffff
.word 0x7e97b243
.word 0x40220202
.word 0x7f3fffff
.word 0x7f10affc
.word 0x3fa9db14
.word 0x7f3fffff
.word 0x7eb1e0ce
.word 0x400a2977
.word 0x7f3ffffe
.word 0x7e9671a2
.word 0x40235b48
.word 0x7f3fffff
.word 0x7edb79eb
.word 0x0
.word 0xf1bffff8
.word 0x7e13bb57
.word 0x0
.word 0xf1bffff8
.word 0x7f10f4fa
.word 0x0
.word 0xf1bffff8
.word 0x7d6b27f7
.word 0x0
.word 0xf1bffff8
.word 0x7f339269
.word 0x0
.word 0xf1bffff8
.word 0x7e8f31c4
.word 0x0
.word 0xf1bffff8
.word 0x7e5a6352
.word 0x0
.word 0xf1bffff8
.word 0x7d62ae46
.word 0x80000000
.word 0xf1bffff8
.word 0x7ee213fe
.word 0x80000000
.word 0xf1bffff8
.word 0x7e1fef00
.word 0x80000000
.word 0xf1bffff8
.word 0x7eba9244
.word 0x80000000
.word 0xf1bffff8
.word 0x7e9db2ee
.word 0x80000000
.word 0xf1bffff8
.word 0x7ead58ba
.word 0x80000000
.word 0xf1bffff8
.word 0x7c41315c
.word 0x80000000
.word 0xf1bffff8
.word 0x7f01223e
.word 0x80000000
.word 0xf1bffff8
.word 0x7f2165be
.word 0x80000000
.word 0xf1bffff8
.word 0x7e6af2c7
.word 0x80000000
.word 0xf1bffff8
.word 0x7d9b6277
.word 0x80000000
.word 0xf1bffff8
.word 0x7f039463
.word 0x80000000
.word 0xf1bffff8
.word 0x7c6a262c
.word 0x80000000
.word 0xf1bffff8
.word 0x7e8eef5f
.word 0x80000000
.word 0xf1bffff8
.word 0x7f3cd606
.word 0x0
.word 0xf1bffff8
.word 0x7e5e65e4
.word 0x0
.word 0xf1bffff8
.word 0x7eea6f9b
.word 0x0
.word 0xf1bffff8
.word 0x7f30eb20
.word 0x0
.word 0xf1bffff8
.word 0x7ec76063
.word 0x0
.word 0xf1bffff8
.word 0x7e8c9d58
.word 0x0
.word 0xf1bffff8
.word 0x7f1a1c1b
.word 0x0
.word 0xf1bffff8
.word 0x7d900e76
.word 0x16e3775f
.word 0xf1bffff8
.word 0x7e0b2e4b
.word 0x166b6f48
.word 0xf1bffff8
.word 0x7ec99ff1
.word 0x15a2850b
.word 0xf1bffff8
.word 0x7ea084ae
.word 0x15cc2384
.word 0xf1bffff8
.word 0x7d1d64a3
.word 0x1750312b
.word 0xf1bffff8
.word 0x7edf221f
.word 0x1592da9b
.word 0xf1bffff8
.word 0x7ec46aa0
.word 0x15a6d443
.word 0xf1bffff8
.word 0x7ea68dc5
.word 0x95c4bdc1
.word 0xf1bffff8
.word 0x7f0bf46a
.word 0x956a21ff
.word 0xf1bffff8
.word 0x7f38eb1b
.word 0x953133d6
.word 0xf1bffff8
.word 0x7f2e0f5d
.word 0x953c41c4
.word 0xf1bffff8
.word 0x7e232951
.word 0x9648d4f2
.word 0xf1bffff8
.word 0x7ef66f73
.word 0x9584f7ca
.word 0xf1bffff8
.word 0x7e6dde9e
.word 0x9609c192
.word 0xf1bffff8
.word 0x7eb254ae
.word 0x95b7bf98
.word 0xf1bffff8
.word 0x7ec7f677
.word 0x95a3deda
.word 0xf1bffff8
.word 0x7e26ed76
.word 0x96444cfa
.word 0xf1bffff8
.word 0x7e31cfbf
.word 0x963848f7
.word 0xf1bffff8
.word 0x7e0b977b
.word 0x966abddf
.word 0xf1bffff8
.word 0x7d99405f
.word 0x96d5d18b
.word 0xf1bffff8
.word 0x7e38fc15
.word 0x96312393
.word 0xf1bffff8
.word 0x7f0af6b9
.word 0x156bcd6e
.word 0xf1bffff8
.word 0x7daac3c6
.word 0x16bfe3c5
.word 0xf1bffff8
.word 0x7e9cf370
.word 0x15d0c753
.word 0xf1bffff8
.word 0x7cda1bbe
.word 0x17963cbb
.word 0xf1bffff8
.word 0x7b6d25cb
.word 0x190a2cef
.word 0xf1bffff8
.word 0x7eca0e92
.word 0x15a22c0f
.word 0xf1bffff8
.word 0x7ea27041
.word 0x15c9b9c0
.word 0xf1bffff8
.word 0x7e45136f
.word 0x0
.word 0xf1bffff8
.word 0x7f083942
.word 0x0
.word 0xf1bffff8
.word 0x7f19a3cb
.word 0x0
.word 0xf1bffff8
.word 0x7eefadd2
.word 0x0
.word 0xf1bffff8
.word 0x7ee308fe
.word 0x0
.word 0xf1bffff8
.word 0x7e409980
.word 0x0
.word 0xf1bffff8
.word 0x7eaac389
.word 0x0
.word 0xf1bffff8
.word 0x7e328a37
.word 0x80000000
.word 0xf1bffff8
.word 0x7f3ef2e6
.word 0x80000000
.word 0xf1bffff8
.word 0x7f335a5f
.word 0x80000000
.word 0xf1bffff8
.word 0x7f3cd352
.word 0x80000000
.word 0xf1bffff8
.word 0x7ec32be8
.word 0x80000000
.word 0xf1bffff8
.word 0x7ef3de7a
.word 0x80000000
.word 0xf1bffff8
.word 0x7d934261
.word 0x80000000
.word 0xf1bffff8
.word 0x7df78ca8
.word 0x80000000
.word 0xf1bffff8
.word 0x7cce2b68
.word 0x80000000
.word 0xf1bffff8
.word 0x7d2e6e63
.word 0x80000000
.word 0xf1bffff8
.word 0x7dd7ea20
.word 0x80000000
.word 0xf1bffff8
.word 0x7ed640ba
.word 0x80000000
.word 0xf1bffff8
.word 0x7c5d9799
.word 0x80000000
.word 0xf1bffff8
.word 0x7ea12fa5
.word 0x80000000
.word 0xf1bffff8
.word 0x7ee8bbe2
.word 0x0
.word 0xf1bffff8
.word 0x7e46fc6d
.word 0x0
.word 0xf1bffff8
.word 0x7f3844b4
.word 0x0
.word 0xf1bffff8
.word 0x7ddcec0b
.word 0x0
.word 0xf1bffff8
.word 0x7ec5af29
.word 0x0
.word 0xf1bffff8
.word 0x7e96e4ce
.word 0x0
.word 0xf1bffff8
.word 0x7ee09f7b
.word 0x0
.word 0xf1bffff8
.word 0x7dc3e560
.word 0x0
.word 0xf1bffff8
.word 0x7f27f459
.word 0x0
.word 0xf1bffff8
.word 0x7eabf6ad
.word 0x0
.word 0xf1bffff8
.word 0x7d9cbf56
.word 0x0
.word 0xf1bffff8
.word 0x7e72ec45
.word 0x0
.word 0xf1bffff8
.word 0x7efdc215
.word 0x0
.word 0xf1bffff8
.word 0x7e2d3485
.word 0x0
.word 0xf1bffff8
.word 0x7eb58c1d
.word 0x80000000
.word 0xf1bffff8
.word 0x7f076d1f
.word 0x80000000
.word 0xf1bffff8
.word 0x7f2596ee
.word 0x80000000
.word 0xf1bffff8
.word 0x7f11164e
.word 0x80000000
.word 0xf1bffff8
.word 0x7f2d3017
.word 0x80000000
.word 0xf1bffff8
.word 0x7f0e11db
.word 0x80000000
.word 0xf1bffff8
.word 0x7f1310f3
.word 0x80000000
.word 0xf1bffff8
.word 0x7eac4868
.word 0x80000000
.word 0xf1bffff8
.word 0x7cbd4d49
.word 0x80000000
.word 0xf1bffff8
.word 0x7e817d76
.word 0x80000000
.word 0xf1bffff8
.word 0x7dadbe96
.word 0x80000000
.word 0xf1bffff8
.word 0x7f0e8d5f
.word 0x80000000
.word 0xf1bffff8
.word 0x7eec407f
.word 0x80000000
.word 0xf1bffff8
.word 0x7e842c55
.word 0x80000000
.word 0xf1bffff8
.word 0x7cded631
.word 0x0
.word 0xf1bffff8
.word 0x7de894ce
.word 0x0
.word 0xf1bffff8
.word 0x7f3e148d
.word 0x0
.word 0xf1bffff8
.word 0x7d04972f
.word 0x0
.word 0xf1bffff8
.word 0x7e940eaa
.word 0x0
.word 0xf1bffff8
.word 0x7f04c461
.word 0x0
.word 0xf1bffff8
.word 0x7e0d1c84
.word 0x0
.word 0xf1bffff8
.word 0x7df1556c
.word 0x0
.word 0xf1bffff8
.word 0x7f1c29fe
.word 0x0
.word 0xf1bffff8
.word 0x7e445eb5
.word 0x0
.word 0xf1bffff8
.word 0x7c81ea00
.word 0x0
.word 0xf1bffff8
.word 0x7f0c0c9f
.word 0x0
.word 0xf1bffff8
.word 0x7c9bb7c9
.word 0x0
.word 0xf1bffff8
.word 0x7f3746a3
.word 0x0
.word 0xf1bffff8
.word 0x7d7eadb5
.word 0x80000000
.word 0xf1bffff8
.word 0x7f012bc4
.word 0x80000000
.word 0xf1bffff8
.word 0x7e04012d
.word 0x80000000
.word 0xf1bffff8
.word 0x7e8b2521
.word 0x80000000
.word 0xf1bffff8
.word 0x7cc3d400
.word 0x80000000
.word 0xf1bffff8
.word 0x7f09a812
.word 0x80000000
.word 0xf1bffff8
.word 0x7ea2667e
.word 0x80000000
.word 0xf1bffff8
.word 0x7f29125a
.word 0x80000000
.word 0xf1bffff8
.word 0x7e21a5d7
.word 0x80000000
.word 0xf1bffff8
.word 0x7e3c07ec
.word 0x80000000
.word 0xf1bffff8
.word 0x7f23f501
.word 0x80000000
.word 0xf1bffff8
.word 0x7ec89656
.word 0x80000000
.word 0xf1bffff8
.word 0x7da3397b
.word 0x80000000
.word 0xf1bffff8
.word 0x7f281823
.word 0x80000000
.word 0xf1bffff8
.word 0x7e2e0a9e
.word 0x0
.word 0xf1bffff8
.word 0x7e51bd97
.word 0x0
.word 0xf1bffff8
.word 0x7efab7a7
.word 0x0
.word 0xf1bffff8
.word 0x7d3481df
.word 0x0
.word 0xf1bffff8
.word 0x7f0eff8f
.word 0x0
.word 0xf1bffff8
.word 0x7e12ff4e
.word 0x0
.word 0xf1bffff8
.word 0x7f2e44fd
.word 0x0
.word 0xf1bffff8
.word 0x7f0b61db
.word 0x0
.word 0xf1bffff8
.word 0x7f1d844c
.word 0x0
.word 0xf1bffff8
.word 0x7d678d99
.word 0x0
.word 0xf1bffff8
.word 0x7eef5572
.word 0x0
.word 0xf1bffff8
.word 0x7f335b8d
.word 0x0
.word 0xf1bffff8
.word 0x7ec490fe
.word 0x0
.word 0xf1bffff8
.word 0x7e1f9ac5
.word 0x0
.word 0xf1bffff8
.word 0x7e6f7f16
.word 0x80000000
.word 0xf1bffff8
.word 0x7ee1c550
.word 0x80000000
.word 0xf1bffff8
.word 0x7efa24a3
.word 0x80000000
.word 0xf1bffff8
.word 0x7ec6d0ac
.word 0x80000000
.word 0xf1bffff8
.word 0x7ec1a1ac
.word 0x80000000
.word 0xf1bffff8
.word 0x7f07976d
.word 0x80000000
.word 0xf1bffff8
.word 0x7f37d03d
.word 0x80000000
.word 0xf1bffff8
.word 0x7e6dbe95
.word 0x80000000
.word 0xf1bffff8
.word 0x7f2efc0a
.word 0x80000000
.word 0xf1bffff8
.word 0x7e4dedfa
.word 0x80000000
.word 0xf1bffff8
.word 0x7f2e5316
.word 0x80000000
.word 0xf1bffff8
.word 0x7dff1541
.word 0x80000000
.word 0xf1bffff8
.word 0x7f065158
.word 0x80000000
.word 0xf1bffff8
.word 0x7e79582c
.word 0x80000000
.word 0xf1bffff8
.word 0x7e2a59d1
.word 0x0
.word 0xf1bffff8
.word 0x7ebadb90
.word 0x0
.word 0xf1bffff8
.word 0x7f0af6e3
.word 0x0
.word 0xf1bffff8
.word 0x7f30b414
.word 0x0
.word 0xf1bffff8
.word 0x7ed9ffad
.word 0x0
.word 0xf1bffff8
.word 0x7eb10756
.word 0x0
.word 0xf1bffff8
.word 0x7f2cbe14
.word 0x0
.word 0xf1bffff8
.word 0x7f2981e2
.word 0x0
.word 0xf1bffff8
.word 0x7e87e829
.word 0x0
.word 0xf1bffff8
.word 0x7f1fa717
.word 0x0
.word 0xf1bffff8
.word 0x7ec052ad
.word 0x0
.word 0xf1bffff8
.word 0x7f319158
.word 0x0
.word 0xf1bffff8
.word 0x7ebc2a53
.word 0x0
.word 0xf1bffff8
.word 0x7ecba816
.word 0x0
.word 0xf1bffff8
.word 0x7eb12e1f
.word 0x80000000
.word 0xf1bffff8
.word 0x7f094f18
.word 0x80000000
.word 0xf1bffff8
.word 0x7f10c4ce
.word 0x80000000
.word 0xf1bffff8
.word 0x7df79461
.word 0x80000000
.word 0xf1bffff8
.word 0x7f38af5a
.word 0x80000000
.word 0xf1bffff8
.word 0x7f3c58f5
.word 0x80000000
.word 0xf1bffff8
.word 0x7e87daac
.word 0x80000000
.word 0xf1bffff8
.word 0x7f17a1ac
.word 0x80000000
.word 0xf1bffff8
.word 0x7f127958
.word 0x80000000
.word 0xf1bffff8
.word 0x7f2e10e3
.word 0x80000000
.word 0xf1bffff8
.word 0x7f0d014f
.word 0x80000000
.word 0xf1bffff8
.word 0x7f18fa57
.word 0x80000000
.word 0xf1bffff8
.word 0x7f2b90d3
.word 0x80000000
.word 0xf1bffff8
.word 0x7e0ba7e2
.word 0x80000000
.word 0xf1bffff8
.word 0x7f018006
.word 0x0
.word 0xf1bffff8
.word 0x7f3fbf4a
.word 0x0
.word 0xf1bffff8
.word 0x7ec3ed0a
.word 0x0
.word 0xf1bffff8
.word 0x7dd1f799
.word 0x0
.word 0xf1bffff8
.word 0x7e79b5b2
.word 0x0
.word 0xf1bffff8
.word 0x7c929583
.word 0x0
.word 0xf1bffff8
.word 0x7e3557bf
.word 0x0
.word 0xf1bffff8
.word 0x7ed73c68
.word 0x0
.word 0xf1bffff8
.word 0x7ec9e399
.word 0x0
.word 0xf1bffff8
.word 0x7f2b393b
.word 0x0
.word 0xf1bffff8
.word 0x7e91ecfc
.word 0x0
.word 0xf1bffff8
.word 0x7e7494ca
.word 0x0
.word 0xf1bffff8
.word 0x7eb284ec
.word 0x0
.word 0xf1bffff8
.word 0x7ca89f06
.word 0x0
.word 0xf1bffff8
.word 0x7cdcb815
.word 0x80000000
.word 0xf1bffff8
.word 0x7e4e0246
.word 0x80000000
.word 0xf1bffff8
.word 0x7eaad2f1
.word 0x80000000
.word 0xf1bffff8
.word 0x7ed0f6c7
.word 0x80000000
.word 0xf1bffff8
.word 0x7f3648af
.word 0x80000000
.word 0xf1bffff8
.word 0x7f3f015e
.word 0x80000000
.word 0xf1bffff8
.word 0x7f0ad17d
.word 0x80000000
.word 0xf1bffff8
.word 0x7e971dc0
.word 0x80000000
.word 0xf1bffff8
.word 0x7ea5608b
.word 0x80000000
.word 0xf1bffff8
.word 0x7df346ad
.word 0x80000000
.word 0xf1bffff8
.word 0x7edf2ead
.word 0x80000000
.word 0xf1bffff8
.word 0x7ee90309
.word 0x80000000
.word 0xf1bffff8
.word 0x7ee8aebb
.word 0x80000000
.word 0xf1bffff8
.word 0x7e6ca617
.word 0x80000000
.word 0xf1bffff8
.word 0x7f009696
.word 0x0
.word 0xf1bffff8
.word 0x7f0d4e65
.word 0x0
.word 0xf1bffff8
.word 0x7f206a70
.word 0x0
.word 0xf1bffff8
.word 0x7d825d06
.word 0x0
.word 0xf1bffff8
.word 0x7d2db9cd
.word 0x0
.word 0xf1bffff8
.word 0x7f35fb9d
.word 0x0
.word 0xf1bffff8
.word 0x7f378efe
.word 0x0
.word 0xf1bffff8
.word 0x7dc56627
.word 0x80000000
.word 0xf1bffff8
.word 0x7ef8dd0e
.word 0x80000000
.word 0xf1bffff8
.word 0x7f3dd17c
.word 0x80000000
.word 0xf1bffff8
.word 0x7f2befa1
.word 0x80000000
.word 0xf1bffff8
.word 0x7d84534d
.word 0x80000000
.word 0xf1bffff8
.word 0x7d4d54a3
.word 0x80000000
.word 0xf1bffff8
.word 0x7ea009f6
.word 0x80000000
.word 0xf1bffff8
.word 0x7de1068d
.word 0x80000000
.word 0xf1bffff8
RVTEST_DATA_END

RVMODEL_DATA_BEGIN


signature_x15_0:
    .fill 0*(XLEN/32),4,0xdeadbeef


signature_x15_1:
    .fill 508*(XLEN/32),4,0xdeadbeef


signature_x15_2:
    .fill 50*(XLEN/32),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*(XLEN/32),4,0xdeadbeef

#endif

RVMODEL_DATA_END
