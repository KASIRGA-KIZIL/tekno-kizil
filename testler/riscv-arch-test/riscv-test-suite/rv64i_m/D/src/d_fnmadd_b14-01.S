
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.5.6
// timestamp : Mon Sep 20 11:53:03 2021 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/compliance_fd/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /scratch/compliance_fd/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV64D/rv64d_fnmadd1.cgf \
 \
//                  -- xlen 64  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2021. IIT Madras. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmadd.d instruction of the RISC-V FD extension for the fnmadd_b14 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV64IFD")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*64.*);check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",d_fnmadd_b14)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x16,test_fp)
RVTEST_SIGBASE(x15,signature_x15_1)

inst_0:
// rs3 == rd != rs1 and rs3 == rd != rs2 and rs2 != rs1, rs1==f2, rs2==f15, rs3==f24, rd==f24, fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x059 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f2; op2:f15; op3:f24; dest:f24; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x592f4abd475417f; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f24, f2, f15, f24, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_1:
// rs1 == rs2 == rs3 != rd, rs1==f27, rs2==f27, rs3==f27, rd==f23, fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x602 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f27; op2:f27; op3:f27; dest:f23; op1val:0x5fae97d52f73d2ed; op2val:0x5fae97d52f73d2ed; op3val:0x5fae97d52f73d2ed; valaddr_reg:x16; val_offset:24; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f23, f27, f27, f27, 0x0, 0, x16, 24, x17, x15, 16, x18)

inst_2:
// rs1 == rs3 != rs2 and rs1 == rs3 != rd and rd != rs2, rs1==f18, rs2==f25, rs3==f18, rd==f0, fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x490 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f18; op2:f25; op3:f18; dest:f0; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x5fae97d52f73d2ed; valaddr_reg:x16; val_offset:48; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f0, f18, f25, f18, 0x0, 0, x16, 48, x17, x15, 32, x18)

inst_3:
// rs1 == rd == rs3 != rs2, rs1==f16, rs2==f31, rs3==f16, rd==f16, fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x48f and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f16; op2:f31; op3:f16; dest:f16; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x5fae97d52f73d2ed; valaddr_reg:x16; val_offset:72; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f16, f16, f31, f16, 0x0, 0, x16, 72, x17, x15, 48, x18)

inst_4:
// rs1 != rs2 and rs1 != rd and rs1 != rs3 and rs2 != rs3 and rs2 != rd and rs3 != rd, rs1==f24, rs2==f17, rs3==f0, rd==f7, fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x48e and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f24; op2:f17; op3:f0; dest:f7; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x48e2f4abd475417f; valaddr_reg:x16; val_offset:96; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f7, f24, f17, f0, 0x0, 0, x16, 96, x17, x15, 64, x18)

inst_5:
// rd == rs2 == rs3 != rs1, rs1==f7, rs2==f22, rs3==f22, rd==f22, fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x48d and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f7; op2:f22; op3:f22; dest:f22; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x5fae549a4f656ebe; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f22, f7, f22, f22, 0x0, 0, x16, 120, x17, x15, 80, x18)

inst_6:
// rs1 == rs2 == rd != rs3, rs1==f14, rs2==f14, rs3==f25, rd==f14, fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x48c and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f14; op2:f14; op3:f25; dest:f14; op1val:0x5fae97d52f73d2ed; op2val:0x5fae97d52f73d2ed; op3val:0x48c2f4abd475417f; valaddr_reg:x16; val_offset:144; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f14, f14, f14, f25, 0x0, 0, x16, 144, x17, x15, 96, x18)

inst_7:
// rs2 == rd != rs1 and rs2 == rd != rs3 and rs3 != rs1, rs1==f17, rs2==f12, rs3==f5, rd==f12, fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x48b and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f17; op2:f12; op3:f5; dest:f12; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x48b2f4abd475417f; valaddr_reg:x16; val_offset:168; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f12, f17, f12, f5, 0x0, 0, x16, 168, x17, x15, 112, x18)

inst_8:
// rs1 == rs2 != rs3 and rs1 == rs2 != rd and rd != rs3, rs1==f10, rs2==f10, rs3==f1, rd==f21, fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x48a and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f10; op3:f1; dest:f21; op1val:0x5fae97d52f73d2ed; op2val:0x5fae97d52f73d2ed; op3val:0x48a2f4abd475417f; valaddr_reg:x16; val_offset:192; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f21, f10, f10, f1, 0x0, 0, x16, 192, x17, x15, 128, x18)

inst_9:
// rs1 == rs2 == rs3 == rd, rs1==f19, rs2==f19, rs3==f19, rd==f19, fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x489 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f19; op2:f19; op3:f19; dest:f19; op1val:0x5fae97d52f73d2ed; op2val:0x5fae97d52f73d2ed; op3val:0x5fae97d52f73d2ed; valaddr_reg:x16; val_offset:216; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f19, f19, f19, f19, 0x0, 0, x16, 216, x17, x15, 144, x18)

inst_10:
// rs2 == rs3 != rs1 and rs2 == rs3 != rd and rd != rs1, rs1==f3, rs2==f11, rs3==f11, rd==f30, fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x488 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f3; op2:f11; op3:f11; dest:f30; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x5fae549a4f656ebe; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f30, f3, f11, f11, 0x0, 0, x16, 240, x17, x15, 160, x18)

inst_11:
// rs1 == rd != rs2 and rs1 == rd != rs3 and rs3 != rs2, rs1==f28, rs2==f8, rs3==f29, rd==f28, fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x487 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f28; op2:f8; op3:f29; dest:f28; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4872f4abd475417f; valaddr_reg:x16; val_offset:264; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f28, f28, f8, f29, 0x0, 0, x16, 264, x17, x15, 176, x18)

inst_12:
// rs1==f8, rs2==f23, rs3==f7, rd==f25, fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x486 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f8; op2:f23; op3:f7; dest:f25; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4862f4abd475417f; valaddr_reg:x16; val_offset:288; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f25, f8, f23, f7, 0x0, 0, x16, 288, x17, x15, 192, x18)

inst_13:
// rs1==f11, rs2==f18, rs3==f20, rd==f5, fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x485 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f11; op2:f18; op3:f20; dest:f5; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4852f4abd475417f; valaddr_reg:x16; val_offset:312; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f5, f11, f18, f20, 0x0, 0, x16, 312, x17, x15, 208, x18)

inst_14:
// rs1==f25, rs2==f0, rs3==f30, rd==f11, fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x484 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f25; op2:f0; op3:f30; dest:f11; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4842f4abd475417f; valaddr_reg:x16; val_offset:336; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f11, f25, f0, f30, 0x0, 0, x16, 336, x17, x15, 224, x18)

inst_15:
// rs1==f21, rs2==f7, rs3==f15, rd==f8, fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x483 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f21; op2:f7; op3:f15; dest:f8; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4832f4abd475417f; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f8, f21, f7, f15, 0x0, 0, x16, 360, x17, x15, 240, x18)

inst_16:
// rs1==f26, rs2==f6, rs3==f14, rd==f13, fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x482 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f26; op2:f6; op3:f14; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4822f4abd475417f; valaddr_reg:x16; val_offset:384; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f26, f6, f14, 0x0, 0, x16, 384, x17, x15, 256, x18)

inst_17:
// rs1==f15, rs2==f9, rs3==f28, rd==f2, fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x481 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f15; op2:f9; op3:f28; dest:f2; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4812f4abd475417f; valaddr_reg:x16; val_offset:408; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f2, f15, f9, f28, 0x0, 0, x16, 408, x17, x15, 272, x18)

inst_18:
// rs1==f30, rs2==f26, rs3==f21, rd==f15, fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x480 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f30; op2:f26; op3:f21; dest:f15; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4802f4abd475417f; valaddr_reg:x16; val_offset:432; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f15, f30, f26, f21, 0x0, 0, x16, 432, x17, x15, 288, x18)

inst_19:
// rs1==f22, rs2==f13, rs3==f6, rd==f26, fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x47f and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f22; op2:f13; op3:f6; dest:f26; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x47f2f4abd475417f; valaddr_reg:x16; val_offset:456; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f26, f22, f13, f6, 0x0, 0, x16, 456, x17, x15, 304, x18)

inst_20:
// rs1==f13, rs2==f2, rs3==f8, rd==f29, fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x47e and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f13; op2:f2; op3:f8; dest:f29; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x47e2f4abd475417f; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f29, f13, f2, f8, 0x0, 0, x16, 480, x17, x15, 320, x18)

inst_21:
// rs1==f12, rs2==f4, rs3==f10, rd==f31, fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x47d and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f12; op2:f4; op3:f10; dest:f31; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x47d2f4abd475417f; valaddr_reg:x16; val_offset:504; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f31, f12, f4, f10, 0x0, 0, x16, 504, x17, x15, 336, x18)

inst_22:
// rs1==f31, rs2==f5, rs3==f23, rd==f17, fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x47c and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f31; op2:f5; op3:f23; dest:f17; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x47c2f4abd475417f; valaddr_reg:x16; val_offset:528; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f17, f31, f5, f23, 0x0, 0, x16, 528, x17, x15, 352, x18)

inst_23:
// rs1==f0, rs2==f24, rs3==f17, rd==f10, fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x47b and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f0; op2:f24; op3:f17; dest:f10; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x47b2f4abd475417f; valaddr_reg:x16; val_offset:552; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f10, f0, f24, f17, 0x0, 0, x16, 552, x17, x15, 368, x18)

inst_24:
// rs1==f23, rs2==f3, rs3==f2, rd==f18, fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x47a and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f23; op2:f3; op3:f2; dest:f18; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x47a2f4abd475417f; valaddr_reg:x16; val_offset:576; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f18, f23, f3, f2, 0x0, 0, x16, 576, x17, x15, 384, x18)

inst_25:
// rs1==f20, rs2==f29, rs3==f9, rd==f4, fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x479 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f20; op2:f29; op3:f9; dest:f4; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4792f4abd475417f; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f4, f20, f29, f9, 0x0, 0, x16, 600, x17, x15, 400, x18)

inst_26:
// rs1==f6, rs2==f1, rs3==f26, rd==f3, fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x478 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f6; op2:f1; op3:f26; dest:f3; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4782f4abd475417f; valaddr_reg:x16; val_offset:624; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f3, f6, f1, f26, 0x0, 0, x16, 624, x17, x15, 416, x18)

inst_27:
// rs1==f29, rs2==f16, rs3==f4, rd==f20, fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x477 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f29; op2:f16; op3:f4; dest:f20; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4772f4abd475417f; valaddr_reg:x16; val_offset:648; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f20, f29, f16, f4, 0x0, 0, x16, 648, x17, x15, 432, x18)

inst_28:
// rs1==f1, rs2==f30, rs3==f3, rd==f6, fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x476 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f1; op2:f30; op3:f3; dest:f6; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4762f4abd475417f; valaddr_reg:x16; val_offset:672; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f6, f1, f30, f3, 0x0, 0, x16, 672, x17, x15, 448, x18)

inst_29:
// rs1==f4, rs2==f20, rs3==f13, rd==f9, fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x475 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f4; op2:f20; op3:f13; dest:f9; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4752f4abd475417f; valaddr_reg:x16; val_offset:696; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f9, f4, f20, f13, 0x0, 0, x16, 696, x17, x15, 464, x18)

inst_30:
// rs1==f9, rs2==f28, rs3==f31, rd==f1, fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x474 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f9; op2:f28; op3:f31; dest:f1; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4742f4abd475417f; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f1, f9, f28, f31, 0x0, 0, x16, 720, x17, x15, 480, x18)

inst_31:
// rs1==f5, rs2==f21, rs3==f12, rd==f27, fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x473 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f5; op2:f21; op3:f12; dest:f27; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4732f4abd475417f; valaddr_reg:x16; val_offset:744; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f27, f5, f21, f12, 0x0, 0, x16, 744, x17, x15, 496, x18)

inst_32:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x472 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4722f4abd475417f; valaddr_reg:x16; val_offset:768; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 768, x17, x15, 512, x18)

inst_33:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x471 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4712f4abd475417f; valaddr_reg:x16; val_offset:792; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 792, x17, x15, 528, x18)

inst_34:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x470 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4702f4abd475417f; valaddr_reg:x16; val_offset:816; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 816, x17, x15, 544, x18)

inst_35:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x46f and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x46f2f4abd475417f; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 560, x18)

inst_36:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x46e and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x46e2f4abd475417f; valaddr_reg:x16; val_offset:864; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 864, x17, x15, 576, x18)

inst_37:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x46d and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x46d2f4abd475417f; valaddr_reg:x16; val_offset:888; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 888, x17, x15, 592, x18)

inst_38:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x46c and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x46c2f4abd475417f; valaddr_reg:x16; val_offset:912; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 912, x17, x15, 608, x18)

inst_39:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x46b and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x46b2f4abd475417f; valaddr_reg:x16; val_offset:936; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 936, x17, x15, 624, x18)

inst_40:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x46a and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x46a2f4abd475417f; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 640, x18)

inst_41:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x469 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4692f4abd475417f; valaddr_reg:x16; val_offset:984; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 984, x17, x15, 656, x18)

inst_42:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x468 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4682f4abd475417f; valaddr_reg:x16; val_offset:1008; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1008, x17, x15, 672, x18)

inst_43:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x467 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4672f4abd475417f; valaddr_reg:x16; val_offset:1032; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1032, x17, x15, 688, x18)

inst_44:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x466 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4662f4abd475417f; valaddr_reg:x16; val_offset:1056; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1056, x17, x15, 704, x18)

inst_45:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x465 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4652f4abd475417f; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 720, x18)

inst_46:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x464 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4642f4abd475417f; valaddr_reg:x16; val_offset:1104; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1104, x17, x15, 736, x18)

inst_47:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x463 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4632f4abd475417f; valaddr_reg:x16; val_offset:1128; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1128, x17, x15, 752, x18)

inst_48:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x462 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4622f4abd475417f; valaddr_reg:x16; val_offset:1152; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1152, x17, x15, 768, x18)

inst_49:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x461 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4612f4abd475417f; valaddr_reg:x16; val_offset:1176; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1176, x17, x15, 784, x18)

inst_50:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x460 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4602f4abd475417f; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 800, x18)

inst_51:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x45f and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x45f2f4abd475417f; valaddr_reg:x16; val_offset:1224; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1224, x17, x15, 816, x18)

inst_52:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x45e and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x45e2f4abd475417f; valaddr_reg:x16; val_offset:1248; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1248, x17, x15, 832, x18)

inst_53:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x45d and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x45d2f4abd475417f; valaddr_reg:x16; val_offset:1272; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1272, x17, x15, 848, x18)

inst_54:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x45c and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x45c2f4abd475417f; valaddr_reg:x16; val_offset:1296; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1296, x17, x15, 864, x18)

inst_55:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x45b and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x45b2f4abd475417f; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 880, x18)

inst_56:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x45a and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x45a2f4abd475417f; valaddr_reg:x16; val_offset:1344; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1344, x17, x15, 896, x18)

inst_57:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x459 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4592f4abd475417f; valaddr_reg:x16; val_offset:1368; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1368, x17, x15, 912, x18)

inst_58:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x458 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4582f4abd475417f; valaddr_reg:x16; val_offset:1392; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1392, x17, x15, 928, x18)

inst_59:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x457 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4572f4abd475417f; valaddr_reg:x16; val_offset:1416; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1416, x17, x15, 944, x18)

inst_60:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x456 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4562f4abd475417f; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 960, x18)

inst_61:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x455 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4552f4abd475417f; valaddr_reg:x16; val_offset:1464; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1464, x17, x15, 976, x18)

inst_62:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x454 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4542f4abd475417f; valaddr_reg:x16; val_offset:1488; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1488, x17, x15, 992, x18)

inst_63:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x453 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4532f4abd475417f; valaddr_reg:x16; val_offset:1512; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1512, x17, x15, 1008, x18)

inst_64:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x452 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4522f4abd475417f; valaddr_reg:x16; val_offset:1536; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1536, x17, x15, 1024, x18)

inst_65:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x451 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4512f4abd475417f; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1040, x18)

inst_66:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x450 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4502f4abd475417f; valaddr_reg:x16; val_offset:1584; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1584, x17, x15, 1056, x18)

inst_67:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x44f and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x44f2f4abd475417f; valaddr_reg:x16; val_offset:1608; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1608, x17, x15, 1072, x18)

inst_68:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x44e and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x44e2f4abd475417f; valaddr_reg:x16; val_offset:1632; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1632, x17, x15, 1088, x18)

inst_69:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x44d and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x44d2f4abd475417f; valaddr_reg:x16; val_offset:1656; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1656, x17, x15, 1104, x18)

inst_70:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x44c and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x44c2f4abd475417f; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1120, x18)

inst_71:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x44b and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x44b2f4abd475417f; valaddr_reg:x16; val_offset:1704; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1704, x17, x15, 1136, x18)

inst_72:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x44a and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x44a2f4abd475417f; valaddr_reg:x16; val_offset:1728; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1728, x17, x15, 1152, x18)

inst_73:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x449 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4492f4abd475417f; valaddr_reg:x16; val_offset:1752; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1752, x17, x15, 1168, x18)

inst_74:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x448 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4482f4abd475417f; valaddr_reg:x16; val_offset:1776; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1776, x17, x15, 1184, x18)

inst_75:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x447 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4472f4abd475417f; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1200, x18)

inst_76:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x446 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4462f4abd475417f; valaddr_reg:x16; val_offset:1824; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1824, x17, x15, 1216, x18)

inst_77:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x445 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4452f4abd475417f; valaddr_reg:x16; val_offset:1848; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1848, x17, x15, 1232, x18)

inst_78:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x444 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4442f4abd475417f; valaddr_reg:x16; val_offset:1872; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1872, x17, x15, 1248, x18)

inst_79:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x443 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4432f4abd475417f; valaddr_reg:x16; val_offset:1896; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1896, x17, x15, 1264, x18)

inst_80:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x442 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4422f4abd475417f; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1280, x18)

inst_81:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x441 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4412f4abd475417f; valaddr_reg:x16; val_offset:1944; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1944, x17, x15, 1296, x18)

inst_82:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x440 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4402f4abd475417f; valaddr_reg:x16; val_offset:1968; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1968, x17, x15, 1312, x18)

inst_83:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x43f and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x43f2f4abd475417f; valaddr_reg:x16; val_offset:1992; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1992, x17, x15, 1328, x18)

inst_84:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x43e and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x43e2f4abd475417f; valaddr_reg:x16; val_offset:2016; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 2016, x17, x15, 1344, x18)
addi x16,x16,2040

inst_85:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x43d and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x43d2f4abd475417f; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 1360, x18)

inst_86:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x43c and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x43c2f4abd475417f; valaddr_reg:x16; val_offset:24; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 24, x17, x15, 1376, x18)

inst_87:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x43b and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x43b2f4abd475417f; valaddr_reg:x16; val_offset:48; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 48, x17, x15, 1392, x18)

inst_88:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x43a and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x43a2f4abd475417f; valaddr_reg:x16; val_offset:72; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 72, x17, x15, 1408, x18)

inst_89:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x439 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4392f4abd475417f; valaddr_reg:x16; val_offset:96; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 96, x17, x15, 1424, x18)

inst_90:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x438 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4382f4abd475417f; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 1440, x18)

inst_91:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x437 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4372f4abd475417f; valaddr_reg:x16; val_offset:144; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 144, x17, x15, 1456, x18)

inst_92:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x436 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4362f4abd475417f; valaddr_reg:x16; val_offset:168; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 168, x17, x15, 1472, x18)

inst_93:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x435 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4352f4abd475417f; valaddr_reg:x16; val_offset:192; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 192, x17, x15, 1488, x18)

inst_94:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x434 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4342f4abd475417f; valaddr_reg:x16; val_offset:216; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 216, x17, x15, 1504, x18)

inst_95:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x433 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4332f4abd475417f; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 1520, x18)

inst_96:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x432 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4322f4abd475417f; valaddr_reg:x16; val_offset:264; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 264, x17, x15, 1536, x18)

inst_97:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x431 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4312f4abd475417f; valaddr_reg:x16; val_offset:288; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 288, x17, x15, 1552, x18)

inst_98:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x430 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4302f4abd475417f; valaddr_reg:x16; val_offset:312; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 312, x17, x15, 1568, x18)

inst_99:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x42f and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x42f2f4abd475417f; valaddr_reg:x16; val_offset:336; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 336, x17, x15, 1584, x18)

inst_100:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x42e and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x42e2f4abd475417f; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 1600, x18)

inst_101:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x42d and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x42d2f4abd475417f; valaddr_reg:x16; val_offset:384; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 384, x17, x15, 1616, x18)

inst_102:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x42c and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x42c2f4abd475417f; valaddr_reg:x16; val_offset:408; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 408, x17, x15, 1632, x18)

inst_103:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x42b and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x42b2f4abd475417f; valaddr_reg:x16; val_offset:432; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 432, x17, x15, 1648, x18)

inst_104:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x42a and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x42a2f4abd475417f; valaddr_reg:x16; val_offset:456; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 456, x17, x15, 1664, x18)

inst_105:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x429 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4292f4abd475417f; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1680, x18)

inst_106:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x428 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4282f4abd475417f; valaddr_reg:x16; val_offset:504; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 504, x17, x15, 1696, x18)

inst_107:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x427 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4272f4abd475417f; valaddr_reg:x16; val_offset:528; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 528, x17, x15, 1712, x18)

inst_108:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x426 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4262f4abd475417f; valaddr_reg:x16; val_offset:552; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 552, x17, x15, 1728, x18)

inst_109:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x425 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4252f4abd475417f; valaddr_reg:x16; val_offset:576; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 576, x17, x15, 1744, x18)

inst_110:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x424 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4242f4abd475417f; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1760, x18)

inst_111:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x423 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4232f4abd475417f; valaddr_reg:x16; val_offset:624; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 624, x17, x15, 1776, x18)

inst_112:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x422 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4222f4abd475417f; valaddr_reg:x16; val_offset:648; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 648, x17, x15, 1792, x18)

inst_113:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x421 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4212f4abd475417f; valaddr_reg:x16; val_offset:672; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 672, x17, x15, 1808, x18)

inst_114:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x420 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4202f4abd475417f; valaddr_reg:x16; val_offset:696; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 696, x17, x15, 1824, x18)

inst_115:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x41f and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x41f2f4abd475417f; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1840, x18)

inst_116:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x41e and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x41e2f4abd475417f; valaddr_reg:x16; val_offset:744; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 744, x17, x15, 1856, x18)

inst_117:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x41d and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x41d2f4abd475417f; valaddr_reg:x16; val_offset:768; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 768, x17, x15, 1872, x18)

inst_118:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x41c and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x41c2f4abd475417f; valaddr_reg:x16; val_offset:792; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 792, x17, x15, 1888, x18)

inst_119:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x41b and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x41b2f4abd475417f; valaddr_reg:x16; val_offset:816; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 816, x17, x15, 1904, x18)

inst_120:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x41a and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x41a2f4abd475417f; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1920, x18)

inst_121:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x419 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4192f4abd475417f; valaddr_reg:x16; val_offset:864; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 864, x17, x15, 1936, x18)

inst_122:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x418 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4182f4abd475417f; valaddr_reg:x16; val_offset:888; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 888, x17, x15, 1952, x18)

inst_123:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x417 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4172f4abd475417f; valaddr_reg:x16; val_offset:912; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 912, x17, x15, 1968, x18)

inst_124:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x416 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4162f4abd475417f; valaddr_reg:x16; val_offset:936; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 936, x17, x15, 1984, x18)

inst_125:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x415 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4152f4abd475417f; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 2000, x18)

inst_126:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x414 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4142f4abd475417f; valaddr_reg:x16; val_offset:984; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 984, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_2)

inst_127:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x413 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4132f4abd475417f; valaddr_reg:x16; val_offset:1008; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1008, x17, x15, 0, x18)

inst_128:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x412 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4122f4abd475417f; valaddr_reg:x16; val_offset:1032; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1032, x17, x15, 16, x18)

inst_129:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x411 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4112f4abd475417f; valaddr_reg:x16; val_offset:1056; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1056, x17, x15, 32, x18)

inst_130:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x410 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4102f4abd475417f; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 48, x18)

inst_131:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x40f and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x40f2f4abd475417f; valaddr_reg:x16; val_offset:1104; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1104, x17, x15, 64, x18)

inst_132:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x40e and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x40e2f4abd475417f; valaddr_reg:x16; val_offset:1128; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1128, x17, x15, 80, x18)

inst_133:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x40d and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x40d2f4abd475417f; valaddr_reg:x16; val_offset:1152; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1152, x17, x15, 96, x18)

inst_134:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x40c and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x40c2f4abd475417f; valaddr_reg:x16; val_offset:1176; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1176, x17, x15, 112, x18)

inst_135:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x40b and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x40b2f4abd475417f; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 128, x18)

inst_136:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x40a and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x40a2f4abd475417f; valaddr_reg:x16; val_offset:1224; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1224, x17, x15, 144, x18)

inst_137:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x409 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4092f4abd475417f; valaddr_reg:x16; val_offset:1248; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1248, x17, x15, 160, x18)

inst_138:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x408 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4082f4abd475417f; valaddr_reg:x16; val_offset:1272; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1272, x17, x15, 176, x18)

inst_139:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x407 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4072f4abd475417f; valaddr_reg:x16; val_offset:1296; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1296, x17, x15, 192, x18)

inst_140:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x406 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4062f4abd475417f; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 208, x18)

inst_141:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x405 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4052f4abd475417f; valaddr_reg:x16; val_offset:1344; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1344, x17, x15, 224, x18)

inst_142:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x404 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4042f4abd475417f; valaddr_reg:x16; val_offset:1368; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1368, x17, x15, 240, x18)

inst_143:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x403 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4032f4abd475417f; valaddr_reg:x16; val_offset:1392; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1392, x17, x15, 256, x18)

inst_144:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x402 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4022f4abd475417f; valaddr_reg:x16; val_offset:1416; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1416, x17, x15, 272, x18)

inst_145:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x401 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4012f4abd475417f; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 288, x18)

inst_146:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x400 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4002f4abd475417f; valaddr_reg:x16; val_offset:1464; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1464, x17, x15, 304, x18)

inst_147:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x3ff2f4abd475417f; valaddr_reg:x16; val_offset:1488; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1488, x17, x15, 320, x18)

inst_148:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x3fe2f4abd475417f; valaddr_reg:x16; val_offset:1512; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1512, x17, x15, 336, x18)

inst_149:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x3fd2f4abd475417f; valaddr_reg:x16; val_offset:1536; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1536, x17, x15, 352, x18)

inst_150:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x3fc2f4abd475417f; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 368, x18)

inst_151:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x3fb2f4abd475417f; valaddr_reg:x16; val_offset:1584; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1584, x17, x15, 384, x18)

inst_152:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x3fa2f4abd475417f; valaddr_reg:x16; val_offset:1608; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1608, x17, x15, 400, x18)

inst_153:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x3f92f4abd475417f; valaddr_reg:x16; val_offset:1632; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1632, x17, x15, 416, x18)

inst_154:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x3f82f4abd475417f; valaddr_reg:x16; val_offset:1656; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1656, x17, x15, 432, x18)

inst_155:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x3f72f4abd475417f; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 448, x18)

inst_156:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x3f62f4abd475417f; valaddr_reg:x16; val_offset:1704; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1704, x17, x15, 464, x18)

inst_157:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x3f52f4abd475417f; valaddr_reg:x16; val_offset:1728; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1728, x17, x15, 480, x18)

inst_158:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x3f4 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x3f42f4abd475417f; valaddr_reg:x16; val_offset:1752; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1752, x17, x15, 496, x18)

inst_159:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x3f32f4abd475417f; valaddr_reg:x16; val_offset:1776; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1776, x17, x15, 512, x18)

inst_160:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x602 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x6022f4abd475417f; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 528, x18)

inst_161:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x490 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4902f4abd475417f; valaddr_reg:x16; val_offset:1824; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1824, x17, x15, 544, x18)

inst_162:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x48f and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x48f2f4abd475417f; valaddr_reg:x16; val_offset:1848; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1848, x17, x15, 560, x18)

inst_163:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x48d and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x48d2f4abd475417f; valaddr_reg:x16; val_offset:1872; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1872, x17, x15, 576, x18)

inst_164:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x48c and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x48c2f4abd475417f; valaddr_reg:x16; val_offset:1896; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1896, x17, x15, 592, x18)

inst_165:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x48a and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x48a2f4abd475417f; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 608, x18)

inst_166:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x489 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4892f4abd475417f; valaddr_reg:x16; val_offset:1944; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1944, x17, x15, 624, x18)

inst_167:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 0 and fe3 == 0x488 and fm3 == 0x2f4abd475417f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0x4882f4abd475417f; valaddr_reg:x16; val_offset:1968; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1968, x17, x15, 640, x18)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_fp:
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x592f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae97d52f73d2ed
.dword 0x5fae97d52f73d2ed
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x5fae97d52f73d2ed
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x5fae97d52f73d2ed
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x48e2f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x5fae549a4f656ebe
.dword 0x5fae97d52f73d2ed
.dword 0x5fae97d52f73d2ed
.dword 0x48c2f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x48b2f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae97d52f73d2ed
.dword 0x48a2f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae97d52f73d2ed
.dword 0x5fae97d52f73d2ed
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x5fae549a4f656ebe
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4872f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4862f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4852f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4842f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4832f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4822f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4812f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4802f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x47f2f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x47e2f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x47d2f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x47c2f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x47b2f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x47a2f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4792f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4782f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4772f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4762f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4752f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4742f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4732f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4722f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4712f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4702f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x46f2f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x46e2f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x46d2f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x46c2f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x46b2f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x46a2f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4692f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4682f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4672f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4662f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4652f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4642f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4632f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4622f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4612f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4602f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x45f2f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x45e2f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x45d2f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x45c2f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x45b2f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x45a2f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4592f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4582f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4572f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4562f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4552f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4542f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4532f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4522f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4512f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4502f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x44f2f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x44e2f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x44d2f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x44c2f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x44b2f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x44a2f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4492f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4482f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4472f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4462f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4452f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4442f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4432f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4422f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4412f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4402f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x43f2f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x43e2f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x43d2f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x43c2f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x43b2f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x43a2f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4392f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4382f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4372f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4362f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4352f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4342f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4332f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4322f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4312f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4302f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x42f2f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x42e2f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x42d2f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x42c2f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x42b2f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x42a2f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4292f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4282f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4272f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4262f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4252f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4242f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4232f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4222f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4212f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4202f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x41f2f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x41e2f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x41d2f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x41c2f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x41b2f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x41a2f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4192f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4182f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4172f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4162f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4152f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4142f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4132f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4122f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4112f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4102f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x40f2f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x40e2f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x40d2f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x40c2f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x40b2f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x40a2f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4092f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4082f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4072f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4062f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4052f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4042f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4032f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4022f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4012f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4002f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x3ff2f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x3fe2f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x3fd2f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x3fc2f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x3fb2f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x3fa2f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x3f92f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x3f82f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x3f72f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x3f62f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x3f52f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x3f42f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x3f32f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x6022f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4902f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x48f2f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x48d2f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x48c2f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x48a2f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4892f4abd475417f
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0x4882f4abd475417f
RVTEST_DATA_END

RVMODEL_DATA_BEGIN


signature_x15_0:
    .fill 0*(XLEN/32),4,0xdeadbeef


signature_x15_1:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_2:
    .fill 82*(XLEN/32),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*(XLEN/32),4,0xdeadbeef

#endif

RVMODEL_DATA_END
