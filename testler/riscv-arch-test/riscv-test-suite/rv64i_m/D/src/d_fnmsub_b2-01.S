
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.5.6
// timestamp : Mon Sep 20 11:14:16 2021 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/compliance_fd/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /scratch/compliance_fd/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV64D/rv64d_fnmsub1.cgf \
 \
//                  -- xlen 64  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2021. IIT Madras. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.d instruction of the RISC-V FD extension for the fnmsub_b2 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV64IFD")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*64.*);check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",d_fnmsub_b2)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x16,test_fp)
RVTEST_SIGBASE(x15,signature_x15_1)

inst_0:
// rs1 == rd == rs3 != rs2, rs1==f18, rs2==f29, rs3==f18, rd==f18, fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000001e and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xa222222222222 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000030 and rm_val == 0  
// opcode: fnmsub.d ; op1:f18; op2:f29; op3:f18; dest:f18; op1val:0x1e; op2val:0xbffa222222222222; op3val:0x1e; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f18, f18, f29, f18, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_1:
// rs1 != rs2 and rs1 != rd and rs1 != rs3 and rs2 != rs3 and rs2 != rd and rs3 != rd, rs1==f11, rs2==f31, rs3==f25, rd==f7, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000003 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xfffffff7fff86 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000039 and rm_val == 0  
// opcode: fnmsub.d ; op1:f11; op2:f31; op3:f25; dest:f7; op1val:0x7fe0000000000003; op2val:0x3fefffffff7fff86; op3val:0x7fe0000000000039; valaddr_reg:x16; val_offset:24; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f7, f11, f31, f25, 0x0, 0, x16, 24, x17, x15, 16, x18)

inst_2:
// rs1 == rd != rs2 and rs1 == rd != rs3 and rs3 != rs2, rs1==f20, rs2==f7, rs3==f5, rd==f20, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000053 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xfffffffbfff12 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000023 and rm_val == 0  
// opcode: fnmsub.d ; op1:f20; op2:f7; op3:f5; dest:f20; op1val:0x7fe0000000000053; op2val:0x3fefffffffbfff12; op3val:0x7fe0000000000023; valaddr_reg:x16; val_offset:48; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f20, f20, f7, f5, 0x0, 0, x16, 48, x17, x15, 32, x18)

inst_3:
// rd == rs2 == rs3 != rs1, rs1==f22, rs2==f19, rs3==f19, rd==f19, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000027 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xfffffffdfff8c and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000012 and rm_val == 0  
// opcode: fnmsub.d ; op1:f22; op2:f19; op3:f19; dest:f19; op1val:0x7fe0000000000027; op2val:0x3fefffffffdfff8c; op3val:0x3fefffffffdfff8c; valaddr_reg:x16; val_offset:72; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f19, f22, f19, f19, 0x0, 0, x16, 72, x17, x15, 48, x18)

inst_4:
// rs1 == rs3 != rs2 and rs1 == rs3 != rd and rd != rs2, rs1==f13, rs2==f14, rs3==f13, rd==f16, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000048 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xfffffffefff40 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000017 and rm_val == 0  
// opcode: fnmsub.d ; op1:f13; op2:f14; op3:f13; dest:f16; op1val:0x7fe0000000000048; op2val:0x3fefffffffefff40; op3val:0x7fe0000000000048; valaddr_reg:x16; val_offset:96; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f16, f13, f14, f13, 0x0, 0, x16, 96, x17, x15, 64, x18)

inst_5:
// rs3 == rd != rs1 and rs3 == rd != rs2 and rs2 != rs1, rs1==f24, rs2==f5, rs3==f14, rd==f14, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000002f and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xffffffff7ff26 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x000000000003d and rm_val == 0  
// opcode: fnmsub.d ; op1:f24; op2:f5; op3:f14; dest:f14; op1val:0x7fe000000000002f; op2val:0x3feffffffff7ff26; op3val:0x7fe000000000003d; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f14, f24, f5, f14, 0x0, 0, x16, 120, x17, x15, 80, x18)

inst_6:
// rs1 == rs2 == rs3 != rd, rs1==f12, rs2==f12, rs3==f12, rd==f8, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000002f and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xffffffffbff24 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x000000000003e and rm_val == 0  
// opcode: fnmsub.d ; op1:f12; op2:f12; op3:f12; dest:f8; op1val:0x7fe000000000002f; op2val:0x7fe000000000002f; op3val:0x7fe000000000002f; valaddr_reg:x16; val_offset:144; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f8, f12, f12, f12, 0x0, 0, x16, 144, x17, x15, 96, x18)

inst_7:
// rs1 == rs2 == rd != rs3, rs1==f3, rs2==f3, rs3==f23, rd==f3, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000001e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xffffffffdff3e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000042 and rm_val == 0  
// opcode: fnmsub.d ; op1:f3; op2:f3; op3:f23; dest:f3; op1val:0x7fe000000000001e; op2val:0x7fe000000000001e; op3val:0x7fe0000000000042; valaddr_reg:x16; val_offset:168; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f3, f3, f3, f23, 0x0, 0, x16, 168, x17, x15, 112, x18)

inst_8:
// rs1 == rs2 == rs3 == rd, rs1==f1, rs2==f1, rs3==f1, rd==f1, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000008 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xffffffffeffe4 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000005 and rm_val == 0  
// opcode: fnmsub.d ; op1:f1; op2:f1; op3:f1; dest:f1; op1val:0x7fe0000000000008; op2val:0x7fe0000000000008; op3val:0x7fe0000000000008; valaddr_reg:x16; val_offset:192; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f1, f1, f1, f1, 0x0, 0, x16, 192, x17, x15, 128, x18)

inst_9:
// rs2 == rs3 != rs1 and rs2 == rs3 != rd and rd != rs1, rs1==f29, rs2==f4, rs3==f4, rd==f10, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000054 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xfffffffff7f04 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000029 and rm_val == 0  
// opcode: fnmsub.d ; op1:f29; op2:f4; op3:f4; dest:f10; op1val:0x7fe0000000000054; op2val:0x3fefffffffff7f04; op3val:0x3fefffffffff7f04; valaddr_reg:x16; val_offset:216; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f10, f29, f4, f4, 0x0, 0, x16, 216, x17, x15, 144, x18)

inst_10:
// rs1 == rs2 != rs3 and rs1 == rs2 != rd and rd != rs3, rs1==f21, rs2==f21, rs3==f27, rd==f31, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000005b and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xfffffffffbe9e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000055 and rm_val == 0  
// opcode: fnmsub.d ; op1:f21; op2:f21; op3:f27; dest:f31; op1val:0x7fe000000000005b; op2val:0x7fe000000000005b; op3val:0x7fe0000000000055; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f31, f21, f21, f27, 0x0, 0, x16, 240, x17, x15, 160, x18)

inst_11:
// rs2 == rd != rs1 and rs2 == rd != rs3 and rs3 != rs1, rs1==f2, rs2==f25, rs3==f11, rd==f25, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000005f and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xfffffffffdf1a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000013 and rm_val == 0  
// opcode: fnmsub.d ; op1:f2; op2:f25; op3:f11; dest:f25; op1val:0x7fe000000000005f; op2val:0x3fefffffffffdf1a; op3val:0x7fe0000000000013; valaddr_reg:x16; val_offset:264; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f25, f2, f25, f11, 0x0, 0, x16, 264, x17, x15, 176, x18)

inst_12:
// rs1==f19, rs2==f22, rs3==f26, rd==f17, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000056 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xfffffffffef48 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000005 and rm_val == 0  
// opcode: fnmsub.d ; op1:f19; op2:f22; op3:f26; dest:f17; op1val:0x7fe0000000000056; op2val:0x3fefffffffffef48; op3val:0x7fe0000000000005; valaddr_reg:x16; val_offset:288; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f17, f19, f22, f26, 0x0, 0, x16, 288, x17, x15, 192, x18)

inst_13:
// rs1==f4, rs2==f15, rs3==f8, rd==f24, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000060 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xffffffffff69c and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000051 and rm_val == 0  
// opcode: fnmsub.d ; op1:f4; op2:f15; op3:f8; dest:f24; op1val:0x7fe0000000000060; op2val:0x3feffffffffff69c; op3val:0x7fe0000000000051; valaddr_reg:x16; val_offset:312; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f24, f4, f15, f8, 0x0, 0, x16, 312, x17, x15, 208, x18)

inst_14:
// rs1==f17, rs2==f26, rs3==f22, rd==f28, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000037 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xffffffffffb30 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000030 and rm_val == 0  
// opcode: fnmsub.d ; op1:f17; op2:f26; op3:f22; dest:f28; op1val:0x7fe0000000000037; op2val:0x3feffffffffffb30; op3val:0x7fe0000000000030; valaddr_reg:x16; val_offset:336; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f28, f17, f26, f22, 0x0, 0, x16, 336, x17, x15, 224, x18)

inst_15:
// rs1==f28, rs2==f20, rs3==f30, rd==f9, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000030 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xffffffffffcdc and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000061 and rm_val == 0  
// opcode: fnmsub.d ; op1:f28; op2:f20; op3:f30; dest:f9; op1val:0x7fe0000000000030; op2val:0x3feffffffffffcdc; op3val:0x7fe0000000000061; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f9, f28, f20, f30, 0x0, 0, x16, 360, x17, x15, 240, x18)

inst_16:
// rs1==f30, rs2==f8, rs3==f15, rd==f21, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000004a and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xffffffffffe10 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x000000000002d and rm_val == 0  
// opcode: fnmsub.d ; op1:f30; op2:f8; op3:f15; dest:f21; op1val:0x7fe000000000004a; op2val:0x3feffffffffffe10; op3val:0x7fe000000000002d; valaddr_reg:x16; val_offset:384; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f21, f30, f8, f15, 0x0, 0, x16, 384, x17, x15, 256, x18)

inst_17:
// rs1==f31, rs2==f6, rs3==f10, rd==f29, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000003e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xffffffffffea4 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x000000000002f and rm_val == 0  
// opcode: fnmsub.d ; op1:f31; op2:f6; op3:f10; dest:f29; op1val:0x7fe000000000003e; op2val:0x3feffffffffffea4; op3val:0x7fe000000000002f; valaddr_reg:x16; val_offset:408; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f29, f31, f6, f10, 0x0, 0, x16, 408, x17, x15, 272, x18)

inst_18:
// rs1==f14, rs2==f9, rs3==f17, rd==f5, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000053 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xffffffffffeda and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x000000000001f and rm_val == 0  
// opcode: fnmsub.d ; op1:f14; op2:f9; op3:f17; dest:f5; op1val:0x7fe0000000000053; op2val:0x3feffffffffffeda; op3val:0x7fe000000000001f; valaddr_reg:x16; val_offset:432; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f5, f14, f9, f17, 0x0, 0, x16, 432, x17, x15, 288, x18)

inst_19:
// rs1==f6, rs2==f27, rs3==f0, rd==f26, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000003e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xfffffffffff36 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000016 and rm_val == 0  
// opcode: fnmsub.d ; op1:f6; op2:f27; op3:f0; dest:f26; op1val:0x7fe000000000003e; op2val:0x3fefffffffffff36; op3val:0x7fe0000000000016; valaddr_reg:x16; val_offset:456; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f26, f6, f27, f0, 0x0, 0, x16, 456, x17, x15, 304, x18)

inst_20:
// rs1==f10, rs2==f24, rs3==f28, rd==f22, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000054 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xfffffffffff2a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x000000000000e and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f24; op3:f28; dest:f22; op1val:0x7fe0000000000054; op2val:0x3fefffffffffff2a; op3val:0x7fe000000000000e; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f22, f10, f24, f28, 0x0, 0, x16, 480, x17, x15, 320, x18)

inst_21:
// rs1==f27, rs2==f23, rs3==f9, rd==f13, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000000e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xfffffffffff88 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000029 and rm_val == 0  
// opcode: fnmsub.d ; op1:f27; op2:f23; op3:f9; dest:f13; op1val:0x7fe000000000000e; op2val:0x3fefffffffffff88; op3val:0x7fe0000000000029; valaddr_reg:x16; val_offset:504; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f27, f23, f9, 0x0, 0, x16, 504, x17, x15, 336, x18)

inst_22:
// rs1==f25, rs2==f2, rs3==f16, rd==f30, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000030 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xfffffffffff3e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x000000000002e and rm_val == 0  
// opcode: fnmsub.d ; op1:f25; op2:f2; op3:f16; dest:f30; op1val:0x7fe0000000000030; op2val:0x3fefffffffffff3e; op3val:0x7fe000000000002e; valaddr_reg:x16; val_offset:528; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f30, f25, f2, f16, 0x0, 0, x16, 528, x17, x15, 352, x18)

inst_23:
// rs1==f5, rs2==f10, rs3==f7, rd==f15, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000005c and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xffffffffffe9c and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000054 and rm_val == 0  
// opcode: fnmsub.d ; op1:f5; op2:f10; op3:f7; dest:f15; op1val:0x7fe000000000005c; op2val:0x3feffffffffffe9c; op3val:0x7fe0000000000054; valaddr_reg:x16; val_offset:552; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f15, f5, f10, f7, 0x0, 0, x16, 552, x17, x15, 368, x18)

inst_24:
// rs1==f16, rs2==f0, rs3==f24, rd==f6, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000006 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x000000000004d and rm_val == 0  
// opcode: fnmsub.d ; op1:f16; op2:f0; op3:f24; dest:f6; op1val:0x7fe0000000000006; op2val:0xfff0000000000000; op3val:0x7fe000000000004d; valaddr_reg:x16; val_offset:576; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f6, f16, f0, f24, 0x0, 0, x16, 576, x17, x15, 384, x18)

inst_25:
// rs1==f8, rs2==f11, rs3==f21, rd==f0, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000030 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000041 and rm_val == 0  
// opcode: fnmsub.d ; op1:f8; op2:f11; op3:f21; dest:f0; op1val:0x7fe0000000000030; op2val:0xfff0000000000000; op3val:0x7fe0000000000041; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f0, f8, f11, f21, 0x0, 0, x16, 600, x17, x15, 400, x18)

inst_26:
// rs1==f15, rs2==f13, rs3==f31, rd==f12, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000004b and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x000000000000e and rm_val == 0  
// opcode: fnmsub.d ; op1:f15; op2:f13; op3:f31; dest:f12; op1val:0x7fe000000000004b; op2val:0xfff0000000000000; op3val:0x7fe000000000000e; valaddr_reg:x16; val_offset:624; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f12, f15, f13, f31, 0x0, 0, x16, 624, x17, x15, 416, x18)

inst_27:
// rs1==f0, rs2==f28, rs3==f3, rd==f2, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000049 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000051 and rm_val == 0  
// opcode: fnmsub.d ; op1:f0; op2:f28; op3:f3; dest:f2; op1val:0x7fe0000000000049; op2val:0xfff0000000000000; op3val:0x7fe0000000000051; valaddr_reg:x16; val_offset:648; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f2, f0, f28, f3, 0x0, 0, x16, 648, x17, x15, 432, x18)

inst_28:
// rs1==f26, rs2==f16, rs3==f20, rd==f11, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000063 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000037 and rm_val == 0  
// opcode: fnmsub.d ; op1:f26; op2:f16; op3:f20; dest:f11; op1val:0x7fe0000000000063; op2val:0xfff0000000000000; op3val:0x7fe0000000000037; valaddr_reg:x16; val_offset:672; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f11, f26, f16, f20, 0x0, 0, x16, 672, x17, x15, 448, x18)

inst_29:
// rs1==f7, rs2==f30, rs3==f2, rd==f4, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000004b and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000011 and rm_val == 0  
// opcode: fnmsub.d ; op1:f7; op2:f30; op3:f2; dest:f4; op1val:0x7fe000000000004b; op2val:0xfff0000000000000; op3val:0x7fe0000000000011; valaddr_reg:x16; val_offset:696; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f4, f7, f30, f2, 0x0, 0, x16, 696, x17, x15, 464, x18)

inst_30:
// rs1==f23, rs2==f18, rs3==f29, rd==f27, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000018 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x000000000003a and rm_val == 0  
// opcode: fnmsub.d ; op1:f23; op2:f18; op3:f29; dest:f27; op1val:0x7fe0000000000018; op2val:0xfff0000000000000; op3val:0x7fe000000000003a; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f27, f23, f18, f29, 0x0, 0, x16, 720, x17, x15, 480, x18)

inst_31:
// rs1==f9, rs2==f17, rs3==f6, rd==f23, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000002 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x000000000000b and rm_val == 0  
// opcode: fnmsub.d ; op1:f9; op2:f17; op3:f6; dest:f23; op1val:0x7fe0000000000002; op2val:0xfff0000000000000; op3val:0x7fe000000000000b; valaddr_reg:x16; val_offset:744; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f23, f9, f17, f6, 0x0, 0, x16, 744, x17, x15, 496, x18)

inst_32:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000013 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000059 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0000000000013; op2val:0xfff0000000000000; op3val:0x7fe0000000000059; valaddr_reg:x16; val_offset:768; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 768, x17, x15, 512, x18)

inst_33:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000004 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000050 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0000000000004; op2val:0xfff0000000000000; op3val:0x7fe0000000000050; valaddr_reg:x16; val_offset:792; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 792, x17, x15, 528, x18)

inst_34:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000031 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x000000000005a and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0000000000031; op2val:0xfff0000000000000; op3val:0x7fe000000000005a; valaddr_reg:x16; val_offset:816; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 816, x17, x15, 544, x18)

inst_35:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000026 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x000000000002d and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0000000000026; op2val:0xfff0000000000000; op3val:0x7fe000000000002d; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 560, x18)

inst_36:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000005 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000005 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0000000000005; op2val:0xfff0000000000000; op3val:0x7fe0000000000005; valaddr_reg:x16; val_offset:864; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 864, x17, x15, 576, x18)

inst_37:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000026 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000033 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0000000000026; op2val:0xfff0000000000000; op3val:0x7fe0000000000033; valaddr_reg:x16; val_offset:888; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 888, x17, x15, 592, x18)

inst_38:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000003d and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000010 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe000000000003d; op2val:0xfff0000000000000; op3val:0x7fe0000000000010; valaddr_reg:x16; val_offset:912; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 912, x17, x15, 608, x18)

inst_39:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000003f and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000053 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe000000000003f; op2val:0xfff0000000000000; op3val:0x7fe0000000000053; valaddr_reg:x16; val_offset:936; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 936, x17, x15, 624, x18)

inst_40:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000063 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000012 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0000000000063; op2val:0xfff0000000000000; op3val:0x7fe0000000000012; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 640, x18)

inst_41:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000044 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000033 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0000000000044; op2val:0xfff0000000000000; op3val:0x7fe0000000000033; valaddr_reg:x16; val_offset:984; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 984, x17, x15, 656, x18)

inst_42:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000001c and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000049 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe000000000001c; op2val:0xfff0000000000000; op3val:0x7fe0000000000049; valaddr_reg:x16; val_offset:1008; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1008, x17, x15, 672, x18)

inst_43:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000042 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000026 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0000000000042; op2val:0xfff0000000000000; op3val:0x7fe0000000000026; valaddr_reg:x16; val_offset:1032; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1032, x17, x15, 688, x18)

inst_44:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000041 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000045 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0000000000041; op2val:0xfff0000000000000; op3val:0x7fe0000000000045; valaddr_reg:x16; val_offset:1056; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1056, x17, x15, 704, x18)

inst_45:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000040 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000052 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0000000000040; op2val:0xfff0000000000000; op3val:0x7fe0000000000052; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 720, x18)

inst_46:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000011 and fs2 == 0 and fe2 == 0x3e0 and fm2 == 0xfffedffffffde and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000024 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000011; op2val:0x3e0fffedffffffde; op3val:0x10000000000024; valaddr_reg:x16; val_offset:1104; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1104, x17, x15, 736, x18)

inst_47:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000058 and fs2 == 0 and fe2 == 0x3df and fm2 == 0xfffc2ffffff50 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003d and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000058; op2val:0x3dffffc2ffffff50; op3val:0x1000000000003d; valaddr_reg:x16; val_offset:1128; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1128, x17, x15, 752, x18)

inst_48:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000028 and fs2 == 0 and fe2 == 0x3de and fm2 == 0xfffb9ffffffb0 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000023 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000028; op2val:0x3defffb9ffffffb0; op3val:0x10000000000023; valaddr_reg:x16; val_offset:1152; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1152, x17, x15, 768, x18)

inst_49:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000044 and fs2 == 0 and fe2 == 0x3dd and fm2 == 0xfff9fffffff78 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000018 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000044; op2val:0x3ddfff9fffffff78; op3val:0x10000000000018; valaddr_reg:x16; val_offset:1176; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1176, x17, x15, 784, x18)

inst_50:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000002f and fs2 == 0 and fe2 == 0x3dc and fm2 == 0xffd07ffffffa2 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000005f and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1000000000002f; op2val:0x3dcffd07ffffffa2; op3val:0x1000000000005f; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 800, x18)

inst_51:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000005b and fs2 == 0 and fe2 == 0x3db and fm2 == 0xffc0fffffff4a and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1000000000005b; op2val:0x3dbffc0fffffff4a; op3val:0x1000000000003f; valaddr_reg:x16; val_offset:1224; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1224, x17, x15, 816, x18)

inst_52:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000059 and fs2 == 0 and fe2 == 0x3da and fm2 == 0xff6dfffffff4e and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000049 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000059; op2val:0x3daff6dfffffff4e; op3val:0x10000000000049; valaddr_reg:x16; val_offset:1248; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1248, x17, x15, 832, x18)

inst_53:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000005f and fs2 == 0 and fe2 == 0x3d9 and fm2 == 0xff3ffffffff42 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000030 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1000000000005f; op2val:0x3d9ff3ffffffff42; op3val:0x10000000000030; valaddr_reg:x16; val_offset:1272; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1272, x17, x15, 848, x18)

inst_54:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000004b and fs2 == 0 and fe2 == 0x3d8 and fm2 == 0xfd3ffffffff6b and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000058 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1000000000004b; op2val:0x3d8fd3ffffffff6b; op3val:0x10000000000058; valaddr_reg:x16; val_offset:1296; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1296, x17, x15, 864, x18)

inst_55:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000036 and fs2 == 0 and fe2 == 0x3d7 and fm2 == 0xfc7ffffffff95 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000038 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000036; op2val:0x3d7fc7ffffffff95; op3val:0x10000000000038; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 880, x18)

inst_56:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000004f and fs2 == 0 and fe2 == 0x3d6 and fm2 == 0xfb5ffffffff63 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000025 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1000000000004f; op2val:0x3d6fb5ffffffff63; op3val:0x10000000000025; valaddr_reg:x16; val_offset:1344; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1344, x17, x15, 896, x18)

inst_57:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000004b and fs2 == 0 and fe2 == 0x3d5 and fm2 == 0xea7ffffffff70 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000056 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1000000000004b; op2val:0x3d5ea7ffffffff70; op3val:0x10000000000056; valaddr_reg:x16; val_offset:1368; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1368, x17, x15, 912, x18)

inst_58:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000059 and fs2 == 0 and fe2 == 0x3d4 and fm2 == 0xe2fffffffff58 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003a and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000059; op2val:0x3d4e2fffffffff58; op3val:0x1000000000003a; valaddr_reg:x16; val_offset:1392; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1392, x17, x15, 928, x18)

inst_59:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000039 and fs2 == 0 and fe2 == 0x3d3 and fm2 == 0xf7fffffffff90 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000008 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000039; op2val:0x3d3f7fffffffff90; op3val:0x10000000000008; valaddr_reg:x16; val_offset:1416; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1416, x17, x15, 944, x18)

inst_60:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000012 and fs2 == 0 and fe2 == 0x3d2 and fm2 == 0x3bfffffffffea and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000062 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000012; op2val:0x3d23bfffffffffea; op3val:0x10000000000062; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 960, x18)

inst_61:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000017 and fs2 == 0 and fe2 == 0x3d1 and fm2 == 0xa7fffffffffda and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000016 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000017; op2val:0x3d1a7fffffffffda; op3val:0x10000000000016; valaddr_reg:x16; val_offset:1464; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1464, x17, x15, 976, x18)

inst_62:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000001c and fs2 == 0 and fe2 == 0x3ce and fm2 == 0x5ffffffffffda and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000035 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1000000000001c; op2val:0x3ce5ffffffffffda; op3val:0x10000000000035; valaddr_reg:x16; val_offset:1488; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1488, x17, x15, 992, x18)

inst_63:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000001d and fs2 == 1 and fe2 == 0x3ce and fm2 == 0x3ffffffffffdc and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000002a and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1000000000001d; op2val:0xbce3ffffffffffdc; op3val:0x1000000000002a; valaddr_reg:x16; val_offset:1512; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1512, x17, x15, 1008, x18)

inst_64:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000060 and fs2 == 1 and fe2 == 0x3ca and fm2 == 0xfffffffffff40 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000011 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000060; op2val:0xbcafffffffffff40; op3val:0x10000000000011; valaddr_reg:x16; val_offset:1536; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1536, x17, x15, 1024, x18)

inst_65:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000000b and fs2 == 1 and fe2 == 0x3ce and fm2 == 0x3fffffffffff2 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000012 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1000000000000b; op2val:0xbce3fffffffffff2; op3val:0x10000000000012; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1040, x18)

inst_66:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000049 and fs2 == 1 and fe2 == 0x3d1 and fm2 == 0x5ffffffffff9c and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000005c and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000049; op2val:0xbd15ffffffffff9c; op3val:0x1000000000005c; valaddr_reg:x16; val_offset:1584; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1584, x17, x15, 1056, x18)

inst_67:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000003e and fs2 == 1 and fe2 == 0x3ce and fm2 == 0x9ffffffffff9b and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1000000000003e; op2val:0xbce9ffffffffff9b; op3val:0x1000000000000f; valaddr_reg:x16; val_offset:1608; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1608, x17, x15, 1072, x18)

inst_68:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000005f and fs2 == 1 and fe2 == 0x3d0 and fm2 == 0xfffffffffff42 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000041 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1000000000005f; op2val:0xbd0fffffffffff42; op3val:0x10000000000041; valaddr_reg:x16; val_offset:1632; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1632, x17, x15, 1088, x18)

inst_69:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000026 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x00000001fffea and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000020 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000026; op2val:0xc0000000001fffea; op3val:0x10000000000020; valaddr_reg:x16; val_offset:1656; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1656, x17, x15, 1104, x18)

inst_70:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000052 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x00000000fffc3 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000002a and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000052; op2val:0xc0000000000fffc3; op3val:0x1000000000002a; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1120, x18)

inst_71:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000016 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x000000008000e and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000048 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000016; op2val:0xc00000000008000e; op3val:0x10000000000048; valaddr_reg:x16; val_offset:1704; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1704, x17, x15, 1136, x18)

inst_72:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000005f and fs2 == 1 and fe2 == 0x400 and fm2 == 0x000000003ffad and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000017 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1000000000005f; op2val:0xc00000000003ffad; op3val:0x10000000000017; valaddr_reg:x16; val_offset:1728; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1728, x17, x15, 1152, x18)

inst_73:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000008 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x000000002001c and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000048 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000008; op2val:0xc00000000002001c; op3val:0x10000000000048; valaddr_reg:x16; val_offset:1752; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1752, x17, x15, 1168, x18)

inst_74:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000000e and fs2 == 1 and fe2 == 0x400 and fm2 == 0x000000000fff6 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1000000000000e; op2val:0xc00000000000fff6; op3val:0x10000000000007; valaddr_reg:x16; val_offset:1776; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1776, x17, x15, 1184, x18)

inst_75:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000060 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x0000000007fad and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001a and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000060; op2val:0xc000000000007fad; op3val:0x1000000000001a; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1200, x18)

inst_76:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000017 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x0000000003fff and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000002c and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000017; op2val:0xc000000000003fff; op3val:0x1000000000002c; valaddr_reg:x16; val_offset:1824; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1824, x17, x15, 1216, x18)

inst_77:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000000b and fs2 == 1 and fe2 == 0x400 and fm2 == 0x0000000002008 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000026 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1000000000000b; op2val:0xc000000000002008; op3val:0x10000000000026; valaddr_reg:x16; val_offset:1848; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1848, x17, x15, 1232, x18)

inst_78:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000045 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x0000000000fc9 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001d and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000045; op2val:0xc000000000000fc9; op3val:0x1000000000001d; valaddr_reg:x16; val_offset:1872; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1872, x17, x15, 1248, x18)

inst_79:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000009 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x00000000007fd and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000d and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000009; op2val:0xc0000000000007fd; op3val:0x1000000000000d; valaddr_reg:x16; val_offset:1896; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1896, x17, x15, 1264, x18)

inst_80:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000038 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x00000000003f7 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000005e and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000038; op2val:0xc0000000000003f7; op3val:0x1000000000005e; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1280, x18)

inst_81:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000032 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x00000000001d8 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000014 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000032; op2val:0xc0000000000001d8; op3val:0x10000000000014; valaddr_reg:x16; val_offset:1944; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1944, x17, x15, 1296, x18)

inst_82:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000015 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x00000000000fb and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000021 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000015; op2val:0xc0000000000000fb; op3val:0x10000000000021; valaddr_reg:x16; val_offset:1968; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1968, x17, x15, 1312, x18)

inst_83:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000038 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x0000000000052 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000015 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000038; op2val:0xc000000000000052; op3val:0x10000000000015; valaddr_reg:x16; val_offset:1992; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1992, x17, x15, 1328, x18)

inst_84:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000004f and fs2 == 1 and fe2 == 0x400 and fm2 == 0x0000000000007 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000002d and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1000000000004f; op2val:0xc000000000000007; op3val:0x1000000000002d; valaddr_reg:x16; val_offset:2016; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 2016, x17, x15, 1344, x18)
addi x16,x16,2040

inst_85:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000000f and fs2 == 1 and fe2 == 0x400 and fm2 == 0x000000000003f and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000005d and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1000000000000f; op2val:0xc00000000000003f; op3val:0x1000000000005d; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 1360, x18)

inst_86:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000009 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x0000000000029 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000043 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000009; op2val:0xc000000000000029; op3val:0x10000000000043; valaddr_reg:x16; val_offset:24; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 24, x17, x15, 1376, x18)

inst_87:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000002e and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xfffffffffffde and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000002a and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1000000000002e; op2val:0xbfffffffffffffde; op3val:0x1000000000002a; valaddr_reg:x16; val_offset:48; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 48, x17, x15, 1392, x18)

inst_88:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000026 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x000000000000e and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000060 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000026; op2val:0xc00000000000000e; op3val:0x10000000000060; valaddr_reg:x16; val_offset:72; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 72, x17, x15, 1408, x18)

inst_89:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000029 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xfffffffffffce and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001d and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000029; op2val:0xbfffffffffffffce; op3val:0x1000000000001d; valaddr_reg:x16; val_offset:96; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 96, x17, x15, 1424, x18)

inst_90:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000005 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x0000000000023 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000004d and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10000000000005; op2val:0xc000000000000023; op3val:0x1000000000004d; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 1440, x18)

inst_91:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000001e and fs2 == 1 and fe2 == 0x400 and fm2 == 0x0000000000011 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000005d and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1000000000001e; op2val:0xc000000000000011; op3val:0x1000000000005d; valaddr_reg:x16; val_offset:144; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 144, x17, x15, 1456, x18)

inst_92:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000002f and fs2 == 0 and fe2 == 0x42d and fm2 == 0x5c9882b3bea27 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000a and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x2f; op2val:0x42d5c9882b3bea27; op3val:0xa; valaddr_reg:x16; val_offset:168; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 168, x17, x15, 1472, x18)

inst_93:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000012 and fs2 == 0 and fe2 == 0x42e and fm2 == 0xc71c71c38e2f7 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000054 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x12; op2val:0x42ec71c71c38e2f7; op3val:0x54; valaddr_reg:x16; val_offset:192; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 192, x17, x15, 1488, x18)

inst_94:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000005 and fs2 == 0 and fe2 == 0x430 and fm2 == 0x99999997fffed and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000b and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5; op2val:0x43099999997fffed; op3val:0xb; valaddr_reg:x16; val_offset:216; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 216, x17, x15, 1504, x18)

inst_95:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000009 and fs2 == 0 and fe2 == 0x42f and fm2 == 0xc71c71c638dee and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000029 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x9; op2val:0x42fc71c71c638dee; op3val:0x29; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 1520, x18)

inst_96:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000002e and fs2 == 0 and fe2 == 0x42d and fm2 == 0x642c85905903c and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000054 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x2e; op2val:0x42d642c85905903c; op3val:0x54; valaddr_reg:x16; val_offset:264; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 264, x17, x15, 1536, x18)

inst_97:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000011 and fs2 == 0 and fe2 == 0x42e and fm2 == 0xe1e1e1e1a59c6 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000004e and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x11; op2val:0x42ee1e1e1e1a59c6; op3val:0x4e; valaddr_reg:x16; val_offset:288; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 288, x17, x15, 1552, x18)

inst_98:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000049 and fs2 == 0 and fe2 == 0x42c and fm2 == 0xc0e07037fffe9 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000c and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x49; op2val:0x42cc0e07037fffe9; op3val:0xc; valaddr_reg:x16; val_offset:312; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 312, x17, x15, 1568, x18)

inst_99:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000056 and fs2 == 0 and fe2 == 0x42c and fm2 == 0x7d05f417c4739 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000025 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x56; op2val:0x42c7d05f417c4739; op3val:0x25; valaddr_reg:x16; val_offset:336; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 336, x17, x15, 1584, x18)

inst_100:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000003c and fs2 == 0 and fe2 == 0x42d and fm2 == 0x111111110cc8d and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003b and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3c; op2val:0x42d111111110cc8d; op3val:0x3b; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 1600, x18)

inst_101:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000000c and fs2 == 0 and fe2 == 0x42f and fm2 == 0x5555555552a98 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000d and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xc; op2val:0x42f5555555552a98; op3val:0xd; valaddr_reg:x16; val_offset:384; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 384, x17, x15, 1616, x18)

inst_102:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000058 and fs2 == 0 and fe2 == 0x42c and fm2 == 0x745d1745cffcd and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000022 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x58; op2val:0x42c745d1745cffcd; op3val:0x22; valaddr_reg:x16; val_offset:408; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 408, x17, x15, 1632, x18)

inst_103:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000004f and fs2 == 0 and fe2 == 0x42c and fm2 == 0x9ec8e951026b9 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000019 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x4f; op2val:0x42c9ec8e951026b9; op3val:0x19; valaddr_reg:x16; val_offset:432; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 432, x17, x15, 1648, x18)

inst_104:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000012 and fs2 == 0 and fe2 == 0x42e and fm2 == 0xc71c71c71bff9 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x12; op2val:0x42ec71c71c71bff9; op3val:0x3; valaddr_reg:x16; val_offset:456; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 456, x17, x15, 1664, x18)

inst_105:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000037 and fs2 == 0 and fe2 == 0x42d and fm2 == 0x29e4129e41042 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000006 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x37; op2val:0x42d29e4129e41042; op3val:0x6; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1680, x18)

inst_106:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000016 and fs2 == 0 and fe2 == 0x42e and fm2 == 0x745d1745d1566 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000049 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x16; op2val:0x42e745d1745d1566; op3val:0x49; valaddr_reg:x16; val_offset:504; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 504, x17, x15, 1696, x18)

inst_107:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000000b and fs2 == 0 and fe2 == 0x42f and fm2 == 0x745d1745d1610 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000054 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xb; op2val:0x42f745d1745d1610; op3val:0x54; valaddr_reg:x16; val_offset:528; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 528, x17, x15, 1712, x18)

inst_108:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000000f and fs2 == 0 and fe2 == 0x42f and fm2 == 0x1111111111096 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000032 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xf; op2val:0x42f1111111111096; op3val:0x32; valaddr_reg:x16; val_offset:552; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 552, x17, x15, 1728, x18)

inst_109:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000040 and fs2 == 0 and fe2 == 0x42c and fm2 == 0xfffffffffffa2 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000e and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x40; op2val:0x42cfffffffffffa2; op3val:0xe; valaddr_reg:x16; val_offset:576; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 576, x17, x15, 1744, x18)

inst_110:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000001a and fs2 == 0 and fe2 == 0x42e and fm2 == 0x3b13b13b13ac4 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000030 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1a; op2val:0x42e3b13b13b13ac4; op3val:0x30; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1760, x18)

inst_111:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000004d and fs2 == 0 and fe2 == 0x42c and fm2 == 0xa98ef606a633e and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000044 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x4d; op2val:0x42ca98ef606a633e; op3val:0x44; valaddr_reg:x16; val_offset:624; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 624, x17, x15, 1776, x18)

inst_112:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000020 and fs2 == 0 and fe2 == 0x42d and fm2 == 0xfffffffffffba and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001e and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x20; op2val:0x42dfffffffffffba; op3val:0x1e; valaddr_reg:x16; val_offset:648; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 648, x17, x15, 1792, x18)

inst_113:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000060 and fs2 == 0 and fe2 == 0x42c and fm2 == 0x5555555555503 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003b and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x60; op2val:0x42c5555555555503; op3val:0x3b; valaddr_reg:x16; val_offset:672; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 672, x17, x15, 1808, x18)

inst_114:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000020 and fs2 == 0 and fe2 == 0x42d and fm2 == 0xfffffffffff7a and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000041 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x20; op2val:0x42dfffffffffff7a; op3val:0x41; valaddr_reg:x16; val_offset:696; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 696, x17, x15, 1824, x18)

inst_115:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000002f and fs2 == 1 and fe2 == 0x42d and fm2 == 0x5c9882b3bea61 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000020 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x2f; op2val:0xc2d5c9882b3bea61; op3val:0x20; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1840, x18)

inst_116:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000035 and fs2 == 1 and fe2 == 0x42d and fm2 == 0x3521cfb04d4ad and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000020 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x35; op2val:0xc2d3521cfb04d4ad; op3val:0x20; valaddr_reg:x16; val_offset:744; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 744, x17, x15, 1856, x18)

inst_117:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000024 and fs2 == 1 and fe2 == 0x42d and fm2 == 0xc71c71c5555e4 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000051 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x24; op2val:0xc2dc71c71c5555e4; op3val:0x51; valaddr_reg:x16; val_offset:768; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 768, x17, x15, 1872, x18)

inst_118:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000041 and fs2 == 1 and fe2 == 0x42c and fm2 == 0xf81f81f723766 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000023 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x41; op2val:0xc2cf81f81f723766; op3val:0x23; valaddr_reg:x16; val_offset:792; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 792, x17, x15, 1888, x18)

inst_119:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000026 and fs2 == 1 and fe2 == 0x42d and fm2 == 0xaf286bc9af2c2 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000024 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x26; op2val:0xc2daf286bc9af2c2; op3val:0x24; valaddr_reg:x16; val_offset:816; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 816, x17, x15, 1904, x18)

inst_120:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000050 and fs2 == 1 and fe2 == 0x42c and fm2 == 0x999999996669e and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000024 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x50; op2val:0xc2c999999996669e; op3val:0x24; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1920, x18)

inst_121:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000036 and fs2 == 1 and fe2 == 0x42d and fm2 == 0x2f684bda00011 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x36; op2val:0xc2d2f684bda00011; op3val:0xf; valaddr_reg:x16; val_offset:864; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 864, x17, x15, 1936, x18)

inst_122:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000005e and fs2 == 1 and fe2 == 0x42c and fm2 == 0x5c9882b926239 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000023 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5e; op2val:0xc2c5c9882b926239; op3val:0x23; valaddr_reg:x16; val_offset:888; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 888, x17, x15, 1952, x18)

inst_123:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000009 and fs2 == 1 and fe2 == 0x42f and fm2 == 0xc71c71c7155c5 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000040 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x9; op2val:0xc2fc71c71c7155c5; op3val:0x40; valaddr_reg:x16; val_offset:912; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 912, x17, x15, 1968, x18)

inst_124:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000023 and fs2 == 1 and fe2 == 0x42d and fm2 == 0xd41d41d4199be and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000015 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x23; op2val:0xc2dd41d41d4199be; op3val:0x15; valaddr_reg:x16; val_offset:936; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 936, x17, x15, 1984, x18)

inst_125:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000041 and fs2 == 1 and fe2 == 0x42c and fm2 == 0xf81f81f81d8b1 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000b and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x41; op2val:0xc2cf81f81f81d8b1; op3val:0xb; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 2000, x18)

inst_126:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000003f and fs2 == 1 and fe2 == 0x42d and fm2 == 0x041041040fc34 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000044 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f; op2val:0xc2d041041040fc34; op3val:0x44; valaddr_reg:x16; val_offset:984; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 984, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_2)

inst_127:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000037 and fs2 == 1 and fe2 == 0x42d and fm2 == 0x29e4129e40e14 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001a and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x37; op2val:0xc2d29e4129e40e14; op3val:0x1a; valaddr_reg:x16; val_offset:1008; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1008, x17, x15, 0, x18)

inst_128:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000002f and fs2 == 1 and fe2 == 0x42d and fm2 == 0x5c9882b930e13 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000057 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x2f; op2val:0xc2d5c9882b930e13; op3val:0x57; valaddr_reg:x16; val_offset:1032; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1032, x17, x15, 16, x18)

inst_129:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000004e and fs2 == 1 and fe2 == 0x42c and fm2 == 0xa41a41a41a2f0 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000004b and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x4e; op2val:0xc2ca41a41a41a2f0; op3val:0x4b; valaddr_reg:x16; val_offset:1056; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1056, x17, x15, 32, x18)

inst_130:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000002e and fs2 == 1 and fe2 == 0x42d and fm2 == 0x642c8590b212a and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000057 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x2e; op2val:0xc2d642c8590b212a; op3val:0x57; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 48, x18)

inst_131:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000059 and fs2 == 1 and fe2 == 0x42c and fm2 == 0x702e05c0b819a and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000005e and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x59; op2val:0xc2c702e05c0b819a; op3val:0x5e; valaddr_reg:x16; val_offset:1104; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1104, x17, x15, 64, x18)

inst_132:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000058 and fs2 == 1 and fe2 == 0x42c and fm2 == 0x745d1745d1779 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000044 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x58; op2val:0xc2c745d1745d1779; op3val:0x44; valaddr_reg:x16; val_offset:1128; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1128, x17, x15, 80, x18)

inst_133:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000004f and fs2 == 1 and fe2 == 0x42c and fm2 == 0x9ec8e9510340f and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000032 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x4f; op2val:0xc2c9ec8e9510340f; op3val:0x32; valaddr_reg:x16; val_offset:1152; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1152, x17, x15, 96, x18)

inst_134:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000026 and fs2 == 1 and fe2 == 0x42d and fm2 == 0xaf286bca1af6f and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000033 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x26; op2val:0xc2daf286bca1af6f; op3val:0x33; valaddr_reg:x16; val_offset:1176; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1176, x17, x15, 112, x18)

inst_135:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000028 and fs2 == 1 and fe2 == 0x42d and fm2 == 0x99999999999bd and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001b and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x28; op2val:0xc2d99999999999bd; op3val:0x1b; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 128, x18)

inst_136:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000031 and fs2 == 1 and fe2 == 0x42d and fm2 == 0x4e5e0a72f0598 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000004b and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x31; op2val:0xc2d4e5e0a72f0598; op3val:0x4b; valaddr_reg:x16; val_offset:1224; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1224, x17, x15, 144, x18)

inst_137:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000003f and fs2 == 1 and fe2 == 0x42d and fm2 == 0x041041041043f and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000030 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f; op2val:0xc2d041041041043f; op3val:0x30; valaddr_reg:x16; val_offset:1248; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1248, x17, x15, 160, x18)

inst_138:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000000e and fs2 == 0 and fe2 == 0x411 and fm2 == 0x2491d6db6db6e and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001a and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xe; op2val:0x4112491d6db6db6e; op3val:0x1a; valaddr_reg:x16; val_offset:1272; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1272, x17, x15, 176, x18)

inst_139:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000026 and fs2 == 0 and fe2 == 0x40e and fm2 == 0xaf240d79435e5 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000054 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x26; op2val:0x40eaf240d79435e5; op3val:0x54; valaddr_reg:x16; val_offset:1296; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1296, x17, x15, 192, x18)

inst_140:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000051 and fs2 == 0 and fe2 == 0x40c and fm2 == 0x94869e06522c4 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000002e and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x51; op2val:0x40c94869e06522c4; op3val:0x2e; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 208, x18)

inst_141:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000043 and fs2 == 0 and fe2 == 0x40b and fm2 == 0xe90a07a44c6b0 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000027 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x43; op2val:0x40be90a07a44c6b0; op3val:0x27; valaddr_reg:x16; val_offset:1344; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1344, x17, x15, 224, x18)

inst_142:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000005f and fs2 == 0 and fe2 == 0x40a and fm2 == 0x58df53896e7bf and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000002a and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f; op2val:0x40a58df53896e7bf; op3val:0x2a; valaddr_reg:x16; val_offset:1368; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1368, x17, x15, 240, x18)

inst_143:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000060 and fs2 == 0 and fe2 == 0x409 and fm2 == 0x5536000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000030 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x60; op2val:0x4095536000000000; op3val:0x30; valaddr_reg:x16; val_offset:1392; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1392, x17, x15, 256, x18)

inst_144:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000047 and fs2 == 0 and fe2 == 0x408 and fm2 == 0xcd25dbf193d4c and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000036 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x47; op2val:0x408cd25dbf193d4c; op3val:0x36; valaddr_reg:x16; val_offset:1416; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1416, x17, x15, 272, x18)

inst_145:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000026 and fs2 == 0 and fe2 == 0x408 and fm2 == 0xaf06bca1af287 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000b and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x26; op2val:0x408af06bca1af287; op3val:0xb; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 288, x18)

inst_146:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000001d and fs2 == 0 and fe2 == 0x408 and fm2 == 0x191a7b9611a7c and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000051 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1d; op2val:0x408191a7b9611a7c; op3val:0x51; valaddr_reg:x16; val_offset:1464; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1464, x17, x15, 304, x18)

inst_147:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000002a and fs2 == 0 and fe2 == 0x406 and fm2 == 0x83aaaaaaaaaab and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000034 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x2a; op2val:0x40683aaaaaaaaaab; op3val:0x34; valaddr_reg:x16; val_offset:1488; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1488, x17, x15, 320, x18)

inst_148:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000000b and fs2 == 0 and fe2 == 0x407 and fm2 == 0x6bba2e8ba2e8c and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000060 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xb; op2val:0x4076bba2e8ba2e8c; op3val:0x60; valaddr_reg:x16; val_offset:1512; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1512, x17, x15, 336, x18)

inst_149:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000004f and fs2 == 0 and fe2 == 0x403 and fm2 == 0x974a8819ec8e9 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000026 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x4f; op2val:0x403974a8819ec8e9; op3val:0x26; valaddr_reg:x16; val_offset:1536; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1536, x17, x15, 352, x18)

inst_150:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x408 and fm2 == 0xed80000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000026 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1; op2val:0x408ed80000000000; op3val:0x26; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 368, x18)

inst_151:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000053 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x7784a062b2e44 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001a and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x53; op2val:0x4017784a062b2e44; op3val:0x1a; valaddr_reg:x16; val_offset:1584; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1584, x17, x15, 384, x18)

inst_152:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000060 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xfaaaaaaaaaaab and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000043 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x60; op2val:0x3fffaaaaaaaaaaab; op3val:0x43; valaddr_reg:x16; val_offset:1608; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1608, x17, x15, 400, x18)

inst_153:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000044 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x2969696969697 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000032 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x44; op2val:0x3ff2969696969697; op3val:0x32; valaddr_reg:x16; val_offset:1632; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1632, x17, x15, 416, x18)

inst_154:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000001e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x8888888888889 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000002a and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1e; op2val:0x3fe8888888888889; op3val:0x2a; valaddr_reg:x16; val_offset:1656; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1656, x17, x15, 432, x18)

inst_155:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000001a and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x3b13b13b13b14 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000041 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1a; op2val:0xbff3b13b13b13b14; op3val:0x41; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 448, x18)

inst_156:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000005b and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x3b13b13b13b14 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000049 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5b; op2val:0xbfe3b13b13b13b14; op3val:0x49; valaddr_reg:x16; val_offset:1704; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1704, x17, x15, 464, x18)

inst_157:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000004d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x745d1745d1746 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000041 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x4d; op2val:0xbfe745d1745d1746; op3val:0x41; valaddr_reg:x16; val_offset:1728; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1728, x17, x15, 480, x18)

inst_158:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000060 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xeaaaaaaaaaaab and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000061 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x60; op2val:0xbfeeaaaaaaaaaaab; op3val:0x61; valaddr_reg:x16; val_offset:1752; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1752, x17, x15, 496, x18)

inst_159:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000044 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x0f0f0f0f0f0f1 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000c and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x44; op2val:0xbfc0f0f0f0f0f0f1; op3val:0xc; valaddr_reg:x16; val_offset:1776; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1776, x17, x15, 512, x18)

inst_160:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000002f and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x310572620ae4c and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000038 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x2f; op2val:0xbff310572620ae4c; op3val:0x38; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 528, x18)

inst_161:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000003 and fs2 == 1 and fe2 == 0x413 and fm2 == 0x55571aaaaaaab and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000054 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3; op2val:0xc1355571aaaaaaab; op3val:0x54; valaddr_reg:x16; val_offset:1824; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1824, x17, x15, 544, x18)

inst_162:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000004d and fs2 == 1 and fe2 == 0x40d and fm2 == 0xa9931dec0d4c7 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000004f and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x4d; op2val:0xc0da9931dec0d4c7; op3val:0x4f; valaddr_reg:x16; val_offset:1848; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1848, x17, x15, 560, x18)

inst_163:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x413 and fm2 == 0x0005c00000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000005b and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1; op2val:0xc130005c00000000; op3val:0x5b; valaddr_reg:x16; val_offset:1872; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1872, x17, x15, 576, x18)

inst_164:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000001c and fs2 == 1 and fe2 == 0x40d and fm2 == 0x249fb6db6db6e and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000005d and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1c; op2val:0xc0d249fb6db6db6e; op3val:0x5d; valaddr_reg:x16; val_offset:1896; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1896, x17, x15, 592, x18)

inst_165:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000000f and fs2 == 1 and fe2 == 0x40d and fm2 == 0x1115111111111 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000e and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xf; op2val:0xc0d1115111111111; op3val:0xe; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 608, x18)

inst_166:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000007 and fs2 == 1 and fe2 == 0x40d and fm2 == 0x24b4000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003a and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7; op2val:0xc0d24b4000000000; op3val:0x3a; valaddr_reg:x16; val_offset:1944; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1944, x17, x15, 624, x18)

inst_167:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000007 and fs2 == 1 and fe2 == 0x40c and fm2 == 0x24b1249249249 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001a and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7; op2val:0xc0c24b1249249249; op3val:0x1a; valaddr_reg:x16; val_offset:1968; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1968, x17, x15, 640, x18)

inst_168:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000003b and fs2 == 1 and fe2 == 0x408 and fm2 == 0x15f2fba938682 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001d and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3b; op2val:0xc0815f2fba938682; op3val:0x1d; valaddr_reg:x16; val_offset:1992; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1992, x17, x15, 656, x18)

inst_169:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000033 and fs2 == 1 and fe2 == 0x407 and fm2 == 0x4232323232323 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000002f and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x33; op2val:0xc074232323232323; op3val:0x2f; valaddr_reg:x16; val_offset:2016; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 2016, x17, x15, 672, x18)
addi x16,x16,2040

inst_170:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000003d and fs2 == 1 and fe2 == 0x406 and fm2 == 0x0f04325c53ef3 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000049 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d; op2val:0xc060f04325c53ef3; op3val:0x49; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 688, x18)

inst_171:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000000c and fs2 == 1 and fe2 == 0x407 and fm2 == 0x5d15555555555 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000005c and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xc; op2val:0xc075d15555555555; op3val:0x5c; valaddr_reg:x16; val_offset:24; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 24, x17, x15, 704, x18)

inst_172:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000042 and fs2 == 1 and fe2 == 0x404 and fm2 == 0x03a2e8ba2e8ba and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000005d and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x42; op2val:0xc0403a2e8ba2e8ba; op3val:0x5d; valaddr_reg:x16; val_offset:48; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 48, x17, x15, 720, x18)

inst_173:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000005d and fs2 == 1 and fe2 == 0x402 and fm2 == 0x744d1344d1345 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000039 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5d; op2val:0xc02744d1344d1345; op3val:0x39; valaddr_reg:x16; val_offset:72; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 72, x17, x15, 736, x18)

inst_174:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000053 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x98acb90f6bf3b and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000011 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x53; op2val:0xc0198acb90f6bf3b; op3val:0x11; valaddr_reg:x16; val_offset:96; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 96, x17, x15, 752, x18)

inst_175:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000005d and fs2 == 1 and fe2 == 0x400 and fm2 == 0xb18c6318c6319 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003a and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5d; op2val:0xc00b18c6318c6319; op3val:0x3a; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 768, x18)

inst_176:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000000e and fs2 == 1 and fe2 == 0x402 and fm2 == 0xd249249249249 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000004b and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xe; op2val:0xc02d249249249249; op3val:0x4b; valaddr_reg:x16; val_offset:144; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 144, x17, x15, 784, x18)

inst_177:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000031 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xa72f05397829d and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000010 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x31; op2val:0xbffa72f05397829d; op3val:0x10; valaddr_reg:x16; val_offset:168; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 168, x17, x15, 800, x18)

inst_178:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000003d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xbcda3ac10c971 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000014 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d; op2val:0xbfebcda3ac10c971; op3val:0x14; valaddr_reg:x16; val_offset:192; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 192, x17, x15, 816, x18)

inst_179:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000001d and fs2 == 1 and fe2 == 0x400 and fm2 == 0x658469ee5846a and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000040 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1d; op2val:0xc00658469ee5846a; op3val:0x40; valaddr_reg:x16; val_offset:216; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 216, x17, x15, 832, x18)

inst_180:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000001a and fs2 == 1 and fe2 == 0x400 and fm2 == 0xac4ec4ec4ec4f and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000004e and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1a; op2val:0xc00ac4ec4ec4ec4f; op3val:0x4e; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 848, x18)

inst_181:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000010 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000b and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x10; op2val:0xbff0000000000000; op3val:0xb; valaddr_reg:x16; val_offset:264; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 264, x17, x15, 864, x18)

inst_182:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000038 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1249249249249 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000039 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x38; op2val:0xbff1249249249249; op3val:0x39; valaddr_reg:x16; val_offset:288; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 288, x17, x15, 880, x18)

inst_183:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000017 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xe9bd37a6f4dea and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000002c and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x17; op2val:0xbffe9bd37a6f4dea; op3val:0x2c; valaddr_reg:x16; val_offset:312; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 312, x17, x15, 896, x18)

inst_184:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x000000000004b and fs2 == 0 and fe2 == 0x3e0 and fm2 == 0xffff47fffff6a and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x0000000000017 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f8000000000004b; op2val:0x3e0ffff47fffff6a; op3val:0x3f80000000000017; valaddr_reg:x16; val_offset:336; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 336, x17, x15, 912, x18)

inst_185:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000005 and fs2 == 0 and fe2 == 0x3df and fm2 == 0xfff9dfffffff6 and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x0000000000062 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f80000000000005; op2val:0x3dffff9dfffffff6; op3val:0x3f80000000000062; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 928, x18)

inst_186:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000008 and fs2 == 0 and fe2 == 0x3de and fm2 == 0xfff5ffffffff0 and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x0000000000050 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f80000000000008; op2val:0x3defff5ffffffff0; op3val:0x3f80000000000050; valaddr_reg:x16; val_offset:384; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 384, x17, x15, 944, x18)

inst_187:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000040 and fs2 == 0 and fe2 == 0x3dd and fm2 == 0xfff93ffffff80 and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x000000000001b and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f80000000000040; op2val:0x3ddfff93ffffff80; op3val:0x3f8000000000001b; valaddr_reg:x16; val_offset:408; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 408, x17, x15, 960, x18)

inst_188:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x3dc and fm2 == 0xffd67fffffffe and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x0000000000053 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f80000000000001; op2val:0x3dcffd67fffffffe; op3val:0x3f80000000000053; valaddr_reg:x16; val_offset:432; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 432, x17, x15, 976, x18)

inst_189:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x000000000002a and fs2 == 0 and fe2 == 0x3db and fm2 == 0xffd0fffffffac and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x000000000002f and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f8000000000002a; op2val:0x3dbffd0fffffffac; op3val:0x3f8000000000002f; valaddr_reg:x16; val_offset:456; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 456, x17, x15, 992, x18)

inst_190:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000027 and fs2 == 0 and fe2 == 0x3da and fm2 == 0xffa5fffffffb2 and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x000000000002d and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f80000000000027; op2val:0x3daffa5fffffffb2; op3val:0x3f8000000000002d; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1008, x18)

inst_191:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000010 and fs2 == 0 and fe2 == 0x3d9 and fm2 == 0xfe7ffffffffe0 and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x0000000000060 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f80000000000010; op2val:0x3d9fe7ffffffffe0; op3val:0x3f80000000000060; valaddr_reg:x16; val_offset:504; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 504, x17, x15, 1024, x18)

inst_192:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000055 and fs2 == 0 and fe2 == 0x3d8 and fm2 == 0xfdaffffffff57 and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x000000000004a and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f80000000000055; op2val:0x3d8fdaffffffff57; op3val:0x3f8000000000004a; valaddr_reg:x16; val_offset:528; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 528, x17, x15, 1040, x18)

inst_193:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x000000000002c and fs2 == 0 and fe2 == 0x3d7 and fm2 == 0xfcdffffffffa9 and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x0000000000032 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f8000000000002c; op2val:0x3d7fcdffffffffa9; op3val:0x3f80000000000032; valaddr_reg:x16; val_offset:552; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 552, x17, x15, 1056, x18)

inst_194:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000003 and fs2 == 0 and fe2 == 0x3d6 and fm2 == 0xfdbfffffffffa and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x0000000000012 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f80000000000003; op2val:0x3d6fdbfffffffffa; op3val:0x3f80000000000012; valaddr_reg:x16; val_offset:576; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 576, x17, x15, 1072, x18)

inst_195:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000009 and fs2 == 0 and fe2 == 0x3d5 and fm2 == 0xf9bffffffffee and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x0000000000019 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f80000000000009; op2val:0x3d5f9bffffffffee; op3val:0x3f80000000000019; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1088, x18)

inst_196:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000014 and fs2 == 0 and fe2 == 0x3d4 and fm2 == 0xd8fffffffffdb and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x000000000004e and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f80000000000014; op2val:0x3d4d8fffffffffdb; op3val:0x3f8000000000004e; valaddr_reg:x16; val_offset:624; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 624, x17, x15, 1104, x18)

inst_197:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x000000000003f and fs2 == 0 and fe2 == 0x3d3 and fm2 == 0xa4fffffffff98 and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x000000000005b and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f8000000000003f; op2val:0x3d3a4fffffffff98; op3val:0x3f8000000000005b; valaddr_reg:x16; val_offset:648; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 648, x17, x15, 1120, x18)

inst_198:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000014 and fs2 == 0 and fe2 == 0x3d2 and fm2 == 0x7dfffffffffe2 and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x0000000000041 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f80000000000014; op2val:0x3d27dfffffffffe2; op3val:0x3f80000000000041; valaddr_reg:x16; val_offset:672; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 672, x17, x15, 1136, x18)

inst_199:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000044 and fs2 == 0 and fe2 == 0x3d1 and fm2 == 0x43fffffffffaa and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x000000000002f and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f80000000000044; op2val:0x3d143fffffffffaa; op3val:0x3f8000000000002f; valaddr_reg:x16; val_offset:696; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 696, x17, x15, 1152, x18)

inst_200:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000062 and fs2 == 1 and fe2 == 0x3cc and fm2 == 0x7ffffffffff6d and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x0000000000043 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f80000000000062; op2val:0xbcc7ffffffffff6d; op3val:0x3f80000000000043; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1168, x18)

inst_201:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000055 and fs2 == 0 and fe2 == 0x3cf and fm2 == 0x1ffffffffffa0 and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x000000000000e and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f80000000000055; op2val:0x3cf1ffffffffffa0; op3val:0x3f8000000000000e; valaddr_reg:x16; val_offset:744; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 744, x17, x15, 1184, x18)

inst_202:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000005 and fs2 == 0 and fe2 == 0x3cd and fm2 == 0x3fffffffffffa and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x000000000000b and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f80000000000005; op2val:0x3cd3fffffffffffa; op3val:0x3f8000000000000b; valaddr_reg:x16; val_offset:768; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 768, x17, x15, 1200, x18)

inst_203:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x000000000005c and fs2 == 1 and fe2 == 0x3cd and fm2 == 0x3ffffffffff8d and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x000000000000d and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f8000000000005c; op2val:0xbcd3ffffffffff8d; op3val:0x3f8000000000000d; valaddr_reg:x16; val_offset:792; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 792, x17, x15, 1216, x18)

inst_204:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000009 and fs2 == 1 and fe2 == 0x3d0 and fm2 == 0x07ffffffffff7 and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x0000000000025 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f80000000000009; op2val:0xbd007ffffffffff7; op3val:0x3f80000000000025; valaddr_reg:x16; val_offset:816; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 816, x17, x15, 1232, x18)

inst_205:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x000000000000b and fs2 == 1 and fe2 == 0x3d1 and fm2 == 0x27ffffffffff3 and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x000000000004c and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f8000000000000b; op2val:0xbd127ffffffffff3; op3val:0x3f8000000000004c; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1248, x18)

inst_206:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000035 and fs2 == 1 and fe2 == 0x3d0 and fm2 == 0xa7fffffffffa8 and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x0000000000036 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f80000000000035; op2val:0xbd0a7fffffffffa8; op3val:0x3f80000000000036; valaddr_reg:x16; val_offset:864; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 864, x17, x15, 1264, x18)

inst_207:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000049 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x00000001fffd4 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003a and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ff0000000000049; op2val:0xc0000000001fffd4; op3val:0x3ff000000000003a; valaddr_reg:x16; val_offset:888; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 888, x17, x15, 1280, x18)

inst_208:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000012 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x0000000100008 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000035 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ff0000000000012; op2val:0xc000000000100008; op3val:0x3ff0000000000035; valaddr_reg:x16; val_offset:912; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 912, x17, x15, 1296, x18)

inst_209:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000038 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x000000007ffd7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001e and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ff0000000000038; op2val:0xc00000000007ffd7; op3val:0x3ff000000000001e; valaddr_reg:x16; val_offset:936; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 936, x17, x15, 1312, x18)

inst_210:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000016 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x000000004000e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000049 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ff0000000000016; op2val:0xc00000000004000e; op3val:0x3ff0000000000049; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 1328, x18)

inst_211:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000031 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x000000001ffe5 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000002c and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ff0000000000031; op2val:0xc00000000001ffe5; op3val:0x3ff000000000002c; valaddr_reg:x16; val_offset:984; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 984, x17, x15, 1344, x18)

inst_212:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000002 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x000000001002f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000062 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ff0000000000002; op2val:0xc00000000001002f; op3val:0x3ff0000000000062; valaddr_reg:x16; val_offset:1008; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1008, x17, x15, 1360, x18)

inst_213:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000027 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x0000000007fe1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ff0000000000027; op2val:0xc000000000007fe1; op3val:0x3ff000000000000f; valaddr_reg:x16; val_offset:1032; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1032, x17, x15, 1376, x18)

inst_214:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000063 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x0000000003fa7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000015 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ff0000000000063; op2val:0xc000000000003fa7; op3val:0x3ff0000000000015; valaddr_reg:x16; val_offset:1056; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1056, x17, x15, 1392, x18)

inst_215:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000004 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x0000000002009 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001a and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ff0000000000004; op2val:0xc000000000002009; op3val:0x3ff000000000001a; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 1408, x18)

inst_216:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000016 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x0000000001014 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000055 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ff0000000000016; op2val:0xc000000000001014; op3val:0x3ff0000000000055; valaddr_reg:x16; val_offset:1104; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1104, x17, x15, 1424, x18)

inst_217:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000033 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x00000000007d5 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ff0000000000033; op2val:0xc0000000000007d5; op3val:0x3ff000000000000f; valaddr_reg:x16; val_offset:1128; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1128, x17, x15, 1440, x18)

inst_218:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000017 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x0000000000413 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000055 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ff0000000000017; op2val:0xc000000000000413; op3val:0x3ff0000000000055; valaddr_reg:x16; val_offset:1152; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1152, x17, x15, 1456, x18)

inst_219:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x000000000005b and fs2 == 1 and fe2 == 0x400 and fm2 == 0x00000000001c0 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000036 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ff000000000005b; op2val:0xc0000000000001c0; op3val:0x3ff0000000000036; valaddr_reg:x16; val_offset:1176; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1176, x17, x15, 1472, x18)

inst_220:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000031 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x00000000000e3 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000027 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ff0000000000031; op2val:0xc0000000000000e3; op3val:0x3ff0000000000027; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 1488, x18)

inst_221:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000037 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x0000000000059 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000021 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ff0000000000037; op2val:0xc000000000000059; op3val:0x3ff0000000000021; valaddr_reg:x16; val_offset:1224; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1224, x17, x15, 1504, x18)

inst_222:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000023 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x000000000001f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000005 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ff0000000000023; op2val:0xc00000000000001f; op3val:0x3ff0000000000005; valaddr_reg:x16; val_offset:1248; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1248, x17, x15, 1520, x18)

inst_223:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x000000000002c and fs2 == 1 and fe2 == 0x400 and fm2 == 0x0000000000002 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001d and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ff000000000002c; op2val:0xc000000000000002; op3val:0x3ff000000000001d; valaddr_reg:x16; val_offset:1272; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1272, x17, x15, 1536, x18)

inst_224:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000002 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x0000000000021 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000026 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ff0000000000002; op2val:0xc000000000000021; op3val:0x3ff0000000000026; valaddr_reg:x16; val_offset:1296; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1296, x17, x15, 1552, x18)

inst_225:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x000000000002d and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xfffffffffffd6 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000020 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ff000000000002d; op2val:0xbfffffffffffffd6; op3val:0x3ff0000000000020; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 1568, x18)

inst_226:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000046 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xfffffffffff98 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001d and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ff0000000000046; op2val:0xbfffffffffffff98; op3val:0x3ff000000000001d; valaddr_reg:x16; val_offset:1344; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1344, x17, x15, 1584, x18)

inst_227:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000041 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xfffffffffffdc and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000005a and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ff0000000000041; op2val:0xbfffffffffffffdc; op3val:0x3ff000000000005a; valaddr_reg:x16; val_offset:1368; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1368, x17, x15, 1600, x18)

inst_228:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000055 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xfffffffffff62 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000a and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ff0000000000055; op2val:0xbfffffffffffff62; op3val:0x3ff000000000000a; valaddr_reg:x16; val_offset:1392; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1392, x17, x15, 1616, x18)

inst_229:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000025 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xffffffffffffa and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000042 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3ff0000000000025; op2val:0xbffffffffffffffa; op3val:0x3ff0000000000042; valaddr_reg:x16; val_offset:1416; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1416, x17, x15, 1632, x18)

inst_230:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000002e and fs2 == 0 and fe2 == 0x40f and fm2 == 0x642b0b21642c8 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000044 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x2e; op2val:0x40f642b0b21642c8; op3val:0x44; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 1648, x18)

inst_231:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000028 and fs2 == 0 and fe2 == 0x40e and fm2 == 0x999899999999a and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000014 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x28; op2val:0x40e999899999999a; op3val:0x14; valaddr_reg:x16; val_offset:1464; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1464, x17, x15, 1664, x18)

inst_232:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000050 and fs2 == 0 and fe2 == 0x40c and fm2 == 0x9997000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001a and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x50; op2val:0x40c9997000000000; op3val:0x1a; valaddr_reg:x16; val_offset:1488; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1488, x17, x15, 1680, x18)

inst_233:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000040 and fs2 == 0 and fe2 == 0x40b and fm2 == 0xffefc00000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000041 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x40; op2val:0x40bffefc00000000; op3val:0x41; valaddr_reg:x16; val_offset:1512; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1512, x17, x15, 1696, x18)

inst_234:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000002e and fs2 == 0 and fe2 == 0x40b and fm2 == 0x640fa6f4de9bd and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000053 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x2e; op2val:0x40b640fa6f4de9bd; op3val:0x53; valaddr_reg:x16; val_offset:1536; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1536, x17, x15, 1712, x18)

inst_235:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000029 and fs2 == 0 and fe2 == 0x40a and fm2 == 0x8f55da895da89 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000005a and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x29; op2val:0x40a8f55da895da89; op3val:0x5a; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1728, x18)

inst_236:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000045 and fs2 == 0 and fe2 == 0x408 and fm2 == 0xda40ed7303b5d and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000059 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x45; op2val:0x408da40ed7303b5d; op3val:0x59; valaddr_reg:x16; val_offset:1584; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1584, x17, x15, 1744, x18)

inst_237:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000004d and fs2 == 0 and fe2 == 0x407 and fm2 == 0xa963bd81a98ef and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000d and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x4d; op2val:0x407a963bd81a98ef; op3val:0xd; valaddr_reg:x16; val_offset:1608; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1608, x17, x15, 1760, x18)

inst_238:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000015 and fs2 == 0 and fe2 == 0x408 and fm2 == 0x83c30c30c30c3 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000062 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x15; op2val:0x40883c30c30c30c3; op3val:0x62; valaddr_reg:x16; val_offset:1632; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1632, x17, x15, 1776, x18)

inst_239:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000037 and fs2 == 0 and fe2 == 0x406 and fm2 == 0x293c8253c8254 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000012 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x37; op2val:0x406293c8253c8254; op3val:0x12; valaddr_reg:x16; val_offset:1656; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1656, x17, x15, 1792, x18)

inst_240:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000048 and fs2 == 0 and fe2 == 0x404 and fm2 == 0xc200000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000002e and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x48; op2val:0x404c200000000000; op3val:0x2e; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1808, x18)

inst_241:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000039 and fs2 == 0 and fe2 == 0x404 and fm2 == 0x1a3ee08fb823f and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000025 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39; op2val:0x4041a3ee08fb823f; op3val:0x25; valaddr_reg:x16; val_offset:1704; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1704, x17, x15, 1824, x18)

inst_242:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000005e and fs2 == 0 and fe2 == 0x402 and fm2 == 0x4310572620ae5 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000004b and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5e; op2val:0x4024310572620ae5; op3val:0x4b; valaddr_reg:x16; val_offset:1728; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1728, x17, x15, 1840, x18)

inst_243:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000004b and fs2 == 0 and fe2 == 0x401 and fm2 == 0x828f5c28f5c29 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003b and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x4b; op2val:0x401828f5c28f5c29; op3val:0x3b; valaddr_reg:x16; val_offset:1752; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1752, x17, x15, 1856, x18)

inst_244:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000019 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x2f5c28f5c28f6 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000013 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x19; op2val:0x4022f5c28f5c28f6; op3val:0x13; valaddr_reg:x16; val_offset:1776; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1776, x17, x15, 1872, x18)

inst_245:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000003f and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x34d34d34d34d3 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000005a and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f; op2val:0x3fe34d34d34d34d3; op3val:0x5a; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1888, x18)

inst_246:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000046 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xaf8af8af8af8b and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000005 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x46; op2val:0x3feaf8af8af8af8b; op3val:0x5; valaddr_reg:x16; val_offset:1824; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1824, x17, x15, 1904, x18)

inst_247:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000004e and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x2df2df2df2df3 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000009 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x4e; op2val:0x3fd2df2df2df2df3; op3val:0x9; valaddr_reg:x16; val_offset:1848; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1848, x17, x15, 1920, x18)

inst_248:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000004b and fs2 == 1 and fe2 == 0x3fa and fm2 == 0x47ae147ae147b and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000013 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x4b; op2val:0xbfa47ae147ae147b; op3val:0x13; valaddr_reg:x16; val_offset:1872; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1872, x17, x15, 1936, x18)

inst_249:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000043 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x226357e16ece5 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001b and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x43; op2val:0xbfd226357e16ece5; op3val:0x1b; valaddr_reg:x16; val_offset:1896; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1896, x17, x15, 1952, x18)

inst_250:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000040 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x4000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000054 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x40; op2val:0xbff4000000000000; op3val:0x54; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1968, x18)

inst_251:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000059 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xcc398730e61cc and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000c and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x59; op2val:0xbfbcc398730e61cc; op3val:0xc; valaddr_reg:x16; val_offset:1944; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1944, x17, x15, 1984, x18)

inst_252:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000002c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x5d1745d1745d1 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x2c; op2val:0xbfe5d1745d1745d1; op3val:0x1f; valaddr_reg:x16; val_offset:1968; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1968, x17, x15, 2000, x18)

inst_253:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000055 and fs2 == 1 and fe2 == 0x40e and fm2 == 0x8181b1b1b1b1b and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000008 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x55; op2val:0xc0e8181b1b1b1b1b; op3val:0x8; valaddr_reg:x16; val_offset:1992; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1992, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_3)

inst_254:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000031 and fs2 == 1 and fe2 == 0x40e and fm2 == 0x4e5e9cbc14e5e and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000e and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x31; op2val:0xc0e4e5e9cbc14e5e; op3val:0xe; valaddr_reg:x16; val_offset:2016; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 2016, x17, x15, 0, x18)
addi x16,x16,2040

inst_255:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000032 and fs2 == 1 and fe2 == 0x40d and fm2 == 0x47b47ae147ae1 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000050 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x32; op2val:0xc0d47b47ae147ae1; op3val:0x50; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 16, x18)

inst_256:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000000d and fs2 == 1 and fe2 == 0x40e and fm2 == 0x3b1513b13b13b and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000009 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0xd; op2val:0xc0e3b1513b13b13b; op3val:0x9; valaddr_reg:x16; val_offset:24; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 24, x17, x15, 32, x18)

inst_257:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000055 and fs2 == 1 and fe2 == 0x40a and fm2 == 0x818e4e4e4e4e5 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000022 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x55; op2val:0xc0a818e4e4e4e4e5; op3val:0x22; valaddr_reg:x16; val_offset:48; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 48, x17, x15, 48, x18)

inst_258:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000005d and fs2 == 1 and fe2 == 0x409 and fm2 == 0x6062689a2689a and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5d; op2val:0xc096062689a2689a; op3val:0xf; valaddr_reg:x16; val_offset:72; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 72, x17, x15, 64, x18)

inst_259:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000003d and fs2 == 1 and fe2 == 0x409 and fm2 == 0x0cca7de6d1d61 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000031 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3d; op2val:0xc090cca7de6d1d61; op3val:0x31; valaddr_reg:x16; val_offset:96; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 96, x17, x15, 80, x18)

inst_260:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000043 and fs2 == 1 and fe2 == 0x407 and fm2 == 0xe9dd9ca81e913 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000035 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x43; op2val:0xc07e9dd9ca81e913; op3val:0x35; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 96, x18)

inst_261:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000005a and fs2 == 1 and fe2 == 0x406 and fm2 == 0x6cdddddddddde and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000023 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5a; op2val:0xc066cdddddddddde; op3val:0x23; valaddr_reg:x16; val_offset:144; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 144, x17, x15, 112, x18)

inst_262:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000062 and fs2 == 1 and fe2 == 0x405 and fm2 == 0x4e7d6343eb1a2 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x62; op2val:0xc054e7d6343eb1a2; op3val:0x3; valaddr_reg:x16; val_offset:168; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 168, x17, x15, 128, x18)

inst_263:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000003f and fs2 == 1 and fe2 == 0x405 and fm2 == 0x05f7df7df7df8 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001e and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f; op2val:0xc0505f7df7df7df8; op3val:0x1e; valaddr_reg:x16; val_offset:192; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 192, x17, x15, 144, x18)

inst_264:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000034 and fs2 == 1 and fe2 == 0x404 and fm2 == 0x3cec4ec4ec4ec and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000c and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x34; op2val:0xc043cec4ec4ec4ec; op3val:0xc; valaddr_reg:x16; val_offset:216; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 216, x17, x15, 160, x18)

inst_265:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000004a and fs2 == 1 and fe2 == 0x402 and fm2 == 0xc59f22983759f and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000019 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x4a; op2val:0xc02c59f22983759f; op3val:0x19; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 176, x18)

inst_266:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000032 and fs2 == 1 and fe2 == 0x402 and fm2 == 0x70a3d70a3d70a and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000040 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x32; op2val:0xc0270a3d70a3d70a; op3val:0x40; valaddr_reg:x16; val_offset:264; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 264, x17, x15, 192, x18)

inst_267:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000003f and fs2 == 1 and fe2 == 0x401 and fm2 == 0x4000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003b and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f; op2val:0xc014000000000000; op3val:0x3b; valaddr_reg:x16; val_offset:288; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 288, x17, x15, 208, x18)

inst_268:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000004 and fs2 == 1 and fe2 == 0x404 and fm2 == 0x7600000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003b and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x4; op2val:0xc047600000000000; op3val:0x3b; valaddr_reg:x16; val_offset:312; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 312, x17, x15, 224, x18)

inst_269:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000034 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x69d89d89d89d9 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000053 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x34; op2val:0xc0069d89d89d89d9; op3val:0x53; valaddr_reg:x16; val_offset:336; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 336, x17, x15, 240, x18)

inst_270:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000041 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd0bd0bd0bd0bd and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001b and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x41; op2val:0xbfed0bd0bd0bd0bd; op3val:0x1b; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 256, x18)

inst_271:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000012 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x5555555555555 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000020 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x12; op2val:0xc005555555555555; op3val:0x20; valaddr_reg:x16; val_offset:384; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 384, x17, x15, 272, x18)

inst_272:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000006 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x9555555555555 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000b and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x6; op2val:0xc009555555555555; op3val:0xb; valaddr_reg:x16; val_offset:408; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 408, x17, x15, 288, x18)

inst_273:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000019 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xe666666666666 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000005b and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x19; op2val:0xc00e666666666666; op3val:0x5b; valaddr_reg:x16; val_offset:432; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 432, x17, x15, 304, x18)

inst_274:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000031 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x8d0fac687d634 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000011 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x31; op2val:0xbfd8d0fac687d634; op3val:0x11; valaddr_reg:x16; val_offset:456; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 456, x17, x15, 320, x18)

inst_275:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000001e and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xa222222222222 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000030 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x1e; op2val:0xbffa222222222222; op3val:0x30; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 336, x18)

inst_276:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000027 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xfffffffdfff8c and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000012 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0000000000027; op2val:0x3fefffffffdfff8c; op3val:0x7fe0000000000012; valaddr_reg:x16; val_offset:504; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 504, x17, x15, 352, x18)

inst_277:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000048 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xfffffffefff40 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000017 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0000000000048; op2val:0x3fefffffffefff40; op3val:0x7fe0000000000017; valaddr_reg:x16; val_offset:528; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 528, x17, x15, 368, x18)

inst_278:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000002f and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xffffffffbff24 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x000000000003e and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe000000000002f; op2val:0x3feffffffffbff24; op3val:0x7fe000000000003e; valaddr_reg:x16; val_offset:552; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 552, x17, x15, 384, x18)

inst_279:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000001e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xffffffffdff3e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000042 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe000000000001e; op2val:0x3feffffffffdff3e; op3val:0x7fe0000000000042; valaddr_reg:x16; val_offset:576; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 576, x17, x15, 400, x18)

inst_280:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000008 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xffffffffeffe4 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000005 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0000000000008; op2val:0x3feffffffffeffe4; op3val:0x7fe0000000000005; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 416, x18)

inst_281:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000054 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xfffffffff7f04 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000029 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0000000000054; op2val:0x3fefffffffff7f04; op3val:0x7fe0000000000029; valaddr_reg:x16; val_offset:624; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 624, x17, x15, 432, x18)

inst_282:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000005b and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xfffffffffbe9e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000055 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe000000000005b; op2val:0x3fefffffffffbe9e; op3val:0x7fe0000000000055; valaddr_reg:x16; val_offset:648; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 648, x17, x15, 448, x18)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_fp:
.dword 0x1e
.dword 0xbffa222222222222
.dword 0x1e
.dword 0x7fe0000000000003
.dword 0x3fefffffff7fff86
.dword 0x7fe0000000000039
.dword 0x7fe0000000000053
.dword 0x3fefffffffbfff12
.dword 0x7fe0000000000023
.dword 0x7fe0000000000027
.dword 0x3fefffffffdfff8c
.dword 0x3fefffffffdfff8c
.dword 0x7fe0000000000048
.dword 0x3fefffffffefff40
.dword 0x7fe0000000000048
.dword 0x7fe000000000002f
.dword 0x3feffffffff7ff26
.dword 0x7fe000000000003d
.dword 0x7fe000000000002f
.dword 0x7fe000000000002f
.dword 0x7fe000000000002f
.dword 0x7fe000000000001e
.dword 0x7fe000000000001e
.dword 0x7fe0000000000042
.dword 0x7fe0000000000008
.dword 0x7fe0000000000008
.dword 0x7fe0000000000008
.dword 0x7fe0000000000054
.dword 0x3fefffffffff7f04
.dword 0x3fefffffffff7f04
.dword 0x7fe000000000005b
.dword 0x7fe000000000005b
.dword 0x7fe0000000000055
.dword 0x7fe000000000005f
.dword 0x3fefffffffffdf1a
.dword 0x7fe0000000000013
.dword 0x7fe0000000000056
.dword 0x3fefffffffffef48
.dword 0x7fe0000000000005
.dword 0x7fe0000000000060
.dword 0x3feffffffffff69c
.dword 0x7fe0000000000051
.dword 0x7fe0000000000037
.dword 0x3feffffffffffb30
.dword 0x7fe0000000000030
.dword 0x7fe0000000000030
.dword 0x3feffffffffffcdc
.dword 0x7fe0000000000061
.dword 0x7fe000000000004a
.dword 0x3feffffffffffe10
.dword 0x7fe000000000002d
.dword 0x7fe000000000003e
.dword 0x3feffffffffffea4
.dword 0x7fe000000000002f
.dword 0x7fe0000000000053
.dword 0x3feffffffffffeda
.dword 0x7fe000000000001f
.dword 0x7fe000000000003e
.dword 0x3fefffffffffff36
.dword 0x7fe0000000000016
.dword 0x7fe0000000000054
.dword 0x3fefffffffffff2a
.dword 0x7fe000000000000e
.dword 0x7fe000000000000e
.dword 0x3fefffffffffff88
.dword 0x7fe0000000000029
.dword 0x7fe0000000000030
.dword 0x3fefffffffffff3e
.dword 0x7fe000000000002e
.dword 0x7fe000000000005c
.dword 0x3feffffffffffe9c
.dword 0x7fe0000000000054
.dword 0x7fe0000000000006
.dword 0xfff0000000000000
.dword 0x7fe000000000004d
.dword 0x7fe0000000000030
.dword 0xfff0000000000000
.dword 0x7fe0000000000041
.dword 0x7fe000000000004b
.dword 0xfff0000000000000
.dword 0x7fe000000000000e
.dword 0x7fe0000000000049
.dword 0xfff0000000000000
.dword 0x7fe0000000000051
.dword 0x7fe0000000000063
.dword 0xfff0000000000000
.dword 0x7fe0000000000037
.dword 0x7fe000000000004b
.dword 0xfff0000000000000
.dword 0x7fe0000000000011
.dword 0x7fe0000000000018
.dword 0xfff0000000000000
.dword 0x7fe000000000003a
.dword 0x7fe0000000000002
.dword 0xfff0000000000000
.dword 0x7fe000000000000b
.dword 0x7fe0000000000013
.dword 0xfff0000000000000
.dword 0x7fe0000000000059
.dword 0x7fe0000000000004
.dword 0xfff0000000000000
.dword 0x7fe0000000000050
.dword 0x7fe0000000000031
.dword 0xfff0000000000000
.dword 0x7fe000000000005a
.dword 0x7fe0000000000026
.dword 0xfff0000000000000
.dword 0x7fe000000000002d
.dword 0x7fe0000000000005
.dword 0xfff0000000000000
.dword 0x7fe0000000000005
.dword 0x7fe0000000000026
.dword 0xfff0000000000000
.dword 0x7fe0000000000033
.dword 0x7fe000000000003d
.dword 0xfff0000000000000
.dword 0x7fe0000000000010
.dword 0x7fe000000000003f
.dword 0xfff0000000000000
.dword 0x7fe0000000000053
.dword 0x7fe0000000000063
.dword 0xfff0000000000000
.dword 0x7fe0000000000012
.dword 0x7fe0000000000044
.dword 0xfff0000000000000
.dword 0x7fe0000000000033
.dword 0x7fe000000000001c
.dword 0xfff0000000000000
.dword 0x7fe0000000000049
.dword 0x7fe0000000000042
.dword 0xfff0000000000000
.dword 0x7fe0000000000026
.dword 0x7fe0000000000041
.dword 0xfff0000000000000
.dword 0x7fe0000000000045
.dword 0x7fe0000000000040
.dword 0xfff0000000000000
.dword 0x7fe0000000000052
.dword 0x10000000000011
.dword 0x3e0fffedffffffde
.dword 0x10000000000024
.dword 0x10000000000058
.dword 0x3dffffc2ffffff50
.dword 0x1000000000003d
.dword 0x10000000000028
.dword 0x3defffb9ffffffb0
.dword 0x10000000000023
.dword 0x10000000000044
.dword 0x3ddfff9fffffff78
.dword 0x10000000000018
.dword 0x1000000000002f
.dword 0x3dcffd07ffffffa2
.dword 0x1000000000005f
.dword 0x1000000000005b
.dword 0x3dbffc0fffffff4a
.dword 0x1000000000003f
.dword 0x10000000000059
.dword 0x3daff6dfffffff4e
.dword 0x10000000000049
.dword 0x1000000000005f
.dword 0x3d9ff3ffffffff42
.dword 0x10000000000030
.dword 0x1000000000004b
.dword 0x3d8fd3ffffffff6b
.dword 0x10000000000058
.dword 0x10000000000036
.dword 0x3d7fc7ffffffff95
.dword 0x10000000000038
.dword 0x1000000000004f
.dword 0x3d6fb5ffffffff63
.dword 0x10000000000025
.dword 0x1000000000004b
.dword 0x3d5ea7ffffffff70
.dword 0x10000000000056
.dword 0x10000000000059
.dword 0x3d4e2fffffffff58
.dword 0x1000000000003a
.dword 0x10000000000039
.dword 0x3d3f7fffffffff90
.dword 0x10000000000008
.dword 0x10000000000012
.dword 0x3d23bfffffffffea
.dword 0x10000000000062
.dword 0x10000000000017
.dword 0x3d1a7fffffffffda
.dword 0x10000000000016
.dword 0x1000000000001c
.dword 0x3ce5ffffffffffda
.dword 0x10000000000035
.dword 0x1000000000001d
.dword 0xbce3ffffffffffdc
.dword 0x1000000000002a
.dword 0x10000000000060
.dword 0xbcafffffffffff40
.dword 0x10000000000011
.dword 0x1000000000000b
.dword 0xbce3fffffffffff2
.dword 0x10000000000012
.dword 0x10000000000049
.dword 0xbd15ffffffffff9c
.dword 0x1000000000005c
.dword 0x1000000000003e
.dword 0xbce9ffffffffff9b
.dword 0x1000000000000f
.dword 0x1000000000005f
.dword 0xbd0fffffffffff42
.dword 0x10000000000041
.dword 0x10000000000026
.dword 0xc0000000001fffea
.dword 0x10000000000020
.dword 0x10000000000052
.dword 0xc0000000000fffc3
.dword 0x1000000000002a
.dword 0x10000000000016
.dword 0xc00000000008000e
.dword 0x10000000000048
.dword 0x1000000000005f
.dword 0xc00000000003ffad
.dword 0x10000000000017
.dword 0x10000000000008
.dword 0xc00000000002001c
.dword 0x10000000000048
.dword 0x1000000000000e
.dword 0xc00000000000fff6
.dword 0x10000000000007
.dword 0x10000000000060
.dword 0xc000000000007fad
.dword 0x1000000000001a
.dword 0x10000000000017
.dword 0xc000000000003fff
.dword 0x1000000000002c
.dword 0x1000000000000b
.dword 0xc000000000002008
.dword 0x10000000000026
.dword 0x10000000000045
.dword 0xc000000000000fc9
.dword 0x1000000000001d
.dword 0x10000000000009
.dword 0xc0000000000007fd
.dword 0x1000000000000d
.dword 0x10000000000038
.dword 0xc0000000000003f7
.dword 0x1000000000005e
.dword 0x10000000000032
.dword 0xc0000000000001d8
.dword 0x10000000000014
.dword 0x10000000000015
.dword 0xc0000000000000fb
.dword 0x10000000000021
.dword 0x10000000000038
.dword 0xc000000000000052
.dword 0x10000000000015
.dword 0x1000000000004f
.dword 0xc000000000000007
.dword 0x1000000000002d
.dword 0x1000000000000f
.dword 0xc00000000000003f
.dword 0x1000000000005d
.dword 0x10000000000009
.dword 0xc000000000000029
.dword 0x10000000000043
.dword 0x1000000000002e
.dword 0xbfffffffffffffde
.dword 0x1000000000002a
.dword 0x10000000000026
.dword 0xc00000000000000e
.dword 0x10000000000060
.dword 0x10000000000029
.dword 0xbfffffffffffffce
.dword 0x1000000000001d
.dword 0x10000000000005
.dword 0xc000000000000023
.dword 0x1000000000004d
.dword 0x1000000000001e
.dword 0xc000000000000011
.dword 0x1000000000005d
.dword 0x2f
.dword 0x42d5c9882b3bea27
.dword 0xa
.dword 0x12
.dword 0x42ec71c71c38e2f7
.dword 0x54
.dword 0x5
.dword 0x43099999997fffed
.dword 0xb
.dword 0x9
.dword 0x42fc71c71c638dee
.dword 0x29
.dword 0x2e
.dword 0x42d642c85905903c
.dword 0x54
.dword 0x11
.dword 0x42ee1e1e1e1a59c6
.dword 0x4e
.dword 0x49
.dword 0x42cc0e07037fffe9
.dword 0xc
.dword 0x56
.dword 0x42c7d05f417c4739
.dword 0x25
.dword 0x3c
.dword 0x42d111111110cc8d
.dword 0x3b
.dword 0xc
.dword 0x42f5555555552a98
.dword 0xd
.dword 0x58
.dword 0x42c745d1745cffcd
.dword 0x22
.dword 0x4f
.dword 0x42c9ec8e951026b9
.dword 0x19
.dword 0x12
.dword 0x42ec71c71c71bff9
.dword 0x3
.dword 0x37
.dword 0x42d29e4129e41042
.dword 0x6
.dword 0x16
.dword 0x42e745d1745d1566
.dword 0x49
.dword 0xb
.dword 0x42f745d1745d1610
.dword 0x54
.dword 0xf
.dword 0x42f1111111111096
.dword 0x32
.dword 0x40
.dword 0x42cfffffffffffa2
.dword 0xe
.dword 0x1a
.dword 0x42e3b13b13b13ac4
.dword 0x30
.dword 0x4d
.dword 0x42ca98ef606a633e
.dword 0x44
.dword 0x20
.dword 0x42dfffffffffffba
.dword 0x1e
.dword 0x60
.dword 0x42c5555555555503
.dword 0x3b
.dword 0x20
.dword 0x42dfffffffffff7a
.dword 0x41
.dword 0x2f
.dword 0xc2d5c9882b3bea61
.dword 0x20
.dword 0x35
.dword 0xc2d3521cfb04d4ad
.dword 0x20
.dword 0x24
.dword 0xc2dc71c71c5555e4
.dword 0x51
.dword 0x41
.dword 0xc2cf81f81f723766
.dword 0x23
.dword 0x26
.dword 0xc2daf286bc9af2c2
.dword 0x24
.dword 0x50
.dword 0xc2c999999996669e
.dword 0x24
.dword 0x36
.dword 0xc2d2f684bda00011
.dword 0xf
.dword 0x5e
.dword 0xc2c5c9882b926239
.dword 0x23
.dword 0x9
.dword 0xc2fc71c71c7155c5
.dword 0x40
.dword 0x23
.dword 0xc2dd41d41d4199be
.dword 0x15
.dword 0x41
.dword 0xc2cf81f81f81d8b1
.dword 0xb
.dword 0x3f
.dword 0xc2d041041040fc34
.dword 0x44
.dword 0x37
.dword 0xc2d29e4129e40e14
.dword 0x1a
.dword 0x2f
.dword 0xc2d5c9882b930e13
.dword 0x57
.dword 0x4e
.dword 0xc2ca41a41a41a2f0
.dword 0x4b
.dword 0x2e
.dword 0xc2d642c8590b212a
.dword 0x57
.dword 0x59
.dword 0xc2c702e05c0b819a
.dword 0x5e
.dword 0x58
.dword 0xc2c745d1745d1779
.dword 0x44
.dword 0x4f
.dword 0xc2c9ec8e9510340f
.dword 0x32
.dword 0x26
.dword 0xc2daf286bca1af6f
.dword 0x33
.dword 0x28
.dword 0xc2d99999999999bd
.dword 0x1b
.dword 0x31
.dword 0xc2d4e5e0a72f0598
.dword 0x4b
.dword 0x3f
.dword 0xc2d041041041043f
.dword 0x30
.dword 0xe
.dword 0x4112491d6db6db6e
.dword 0x1a
.dword 0x26
.dword 0x40eaf240d79435e5
.dword 0x54
.dword 0x51
.dword 0x40c94869e06522c4
.dword 0x2e
.dword 0x43
.dword 0x40be90a07a44c6b0
.dword 0x27
.dword 0x5f
.dword 0x40a58df53896e7bf
.dword 0x2a
.dword 0x60
.dword 0x4095536000000000
.dword 0x30
.dword 0x47
.dword 0x408cd25dbf193d4c
.dword 0x36
.dword 0x26
.dword 0x408af06bca1af287
.dword 0xb
.dword 0x1d
.dword 0x408191a7b9611a7c
.dword 0x51
.dword 0x2a
.dword 0x40683aaaaaaaaaab
.dword 0x34
.dword 0xb
.dword 0x4076bba2e8ba2e8c
.dword 0x60
.dword 0x4f
.dword 0x403974a8819ec8e9
.dword 0x26
.dword 0x1
.dword 0x408ed80000000000
.dword 0x26
.dword 0x53
.dword 0x4017784a062b2e44
.dword 0x1a
.dword 0x60
.dword 0x3fffaaaaaaaaaaab
.dword 0x43
.dword 0x44
.dword 0x3ff2969696969697
.dword 0x32
.dword 0x1e
.dword 0x3fe8888888888889
.dword 0x2a
.dword 0x1a
.dword 0xbff3b13b13b13b14
.dword 0x41
.dword 0x5b
.dword 0xbfe3b13b13b13b14
.dword 0x49
.dword 0x4d
.dword 0xbfe745d1745d1746
.dword 0x41
.dword 0x60
.dword 0xbfeeaaaaaaaaaaab
.dword 0x61
.dword 0x44
.dword 0xbfc0f0f0f0f0f0f1
.dword 0xc
.dword 0x2f
.dword 0xbff310572620ae4c
.dword 0x38
.dword 0x3
.dword 0xc1355571aaaaaaab
.dword 0x54
.dword 0x4d
.dword 0xc0da9931dec0d4c7
.dword 0x4f
.dword 0x1
.dword 0xc130005c00000000
.dword 0x5b
.dword 0x1c
.dword 0xc0d249fb6db6db6e
.dword 0x5d
.dword 0xf
.dword 0xc0d1115111111111
.dword 0xe
.dword 0x7
.dword 0xc0d24b4000000000
.dword 0x3a
.dword 0x7
.dword 0xc0c24b1249249249
.dword 0x1a
.dword 0x3b
.dword 0xc0815f2fba938682
.dword 0x1d
.dword 0x33
.dword 0xc074232323232323
.dword 0x2f
.dword 0x3d
.dword 0xc060f04325c53ef3
.dword 0x49
.dword 0xc
.dword 0xc075d15555555555
.dword 0x5c
.dword 0x42
.dword 0xc0403a2e8ba2e8ba
.dword 0x5d
.dword 0x5d
.dword 0xc02744d1344d1345
.dword 0x39
.dword 0x53
.dword 0xc0198acb90f6bf3b
.dword 0x11
.dword 0x5d
.dword 0xc00b18c6318c6319
.dword 0x3a
.dword 0xe
.dword 0xc02d249249249249
.dword 0x4b
.dword 0x31
.dword 0xbffa72f05397829d
.dword 0x10
.dword 0x3d
.dword 0xbfebcda3ac10c971
.dword 0x14
.dword 0x1d
.dword 0xc00658469ee5846a
.dword 0x40
.dword 0x1a
.dword 0xc00ac4ec4ec4ec4f
.dword 0x4e
.dword 0x10
.dword 0xbff0000000000000
.dword 0xb
.dword 0x38
.dword 0xbff1249249249249
.dword 0x39
.dword 0x17
.dword 0xbffe9bd37a6f4dea
.dword 0x2c
.dword 0x3f8000000000004b
.dword 0x3e0ffff47fffff6a
.dword 0x3f80000000000017
.dword 0x3f80000000000005
.dword 0x3dffff9dfffffff6
.dword 0x3f80000000000062
.dword 0x3f80000000000008
.dword 0x3defff5ffffffff0
.dword 0x3f80000000000050
.dword 0x3f80000000000040
.dword 0x3ddfff93ffffff80
.dword 0x3f8000000000001b
.dword 0x3f80000000000001
.dword 0x3dcffd67fffffffe
.dword 0x3f80000000000053
.dword 0x3f8000000000002a
.dword 0x3dbffd0fffffffac
.dword 0x3f8000000000002f
.dword 0x3f80000000000027
.dword 0x3daffa5fffffffb2
.dword 0x3f8000000000002d
.dword 0x3f80000000000010
.dword 0x3d9fe7ffffffffe0
.dword 0x3f80000000000060
.dword 0x3f80000000000055
.dword 0x3d8fdaffffffff57
.dword 0x3f8000000000004a
.dword 0x3f8000000000002c
.dword 0x3d7fcdffffffffa9
.dword 0x3f80000000000032
.dword 0x3f80000000000003
.dword 0x3d6fdbfffffffffa
.dword 0x3f80000000000012
.dword 0x3f80000000000009
.dword 0x3d5f9bffffffffee
.dword 0x3f80000000000019
.dword 0x3f80000000000014
.dword 0x3d4d8fffffffffdb
.dword 0x3f8000000000004e
.dword 0x3f8000000000003f
.dword 0x3d3a4fffffffff98
.dword 0x3f8000000000005b
.dword 0x3f80000000000014
.dword 0x3d27dfffffffffe2
.dword 0x3f80000000000041
.dword 0x3f80000000000044
.dword 0x3d143fffffffffaa
.dword 0x3f8000000000002f
.dword 0x3f80000000000062
.dword 0xbcc7ffffffffff6d
.dword 0x3f80000000000043
.dword 0x3f80000000000055
.dword 0x3cf1ffffffffffa0
.dword 0x3f8000000000000e
.dword 0x3f80000000000005
.dword 0x3cd3fffffffffffa
.dword 0x3f8000000000000b
.dword 0x3f8000000000005c
.dword 0xbcd3ffffffffff8d
.dword 0x3f8000000000000d
.dword 0x3f80000000000009
.dword 0xbd007ffffffffff7
.dword 0x3f80000000000025
.dword 0x3f8000000000000b
.dword 0xbd127ffffffffff3
.dword 0x3f8000000000004c
.dword 0x3f80000000000035
.dword 0xbd0a7fffffffffa8
.dword 0x3f80000000000036
.dword 0x3ff0000000000049
.dword 0xc0000000001fffd4
.dword 0x3ff000000000003a
.dword 0x3ff0000000000012
.dword 0xc000000000100008
.dword 0x3ff0000000000035
.dword 0x3ff0000000000038
.dword 0xc00000000007ffd7
.dword 0x3ff000000000001e
.dword 0x3ff0000000000016
.dword 0xc00000000004000e
.dword 0x3ff0000000000049
.dword 0x3ff0000000000031
.dword 0xc00000000001ffe5
.dword 0x3ff000000000002c
.dword 0x3ff0000000000002
.dword 0xc00000000001002f
.dword 0x3ff0000000000062
.dword 0x3ff0000000000027
.dword 0xc000000000007fe1
.dword 0x3ff000000000000f
.dword 0x3ff0000000000063
.dword 0xc000000000003fa7
.dword 0x3ff0000000000015
.dword 0x3ff0000000000004
.dword 0xc000000000002009
.dword 0x3ff000000000001a
.dword 0x3ff0000000000016
.dword 0xc000000000001014
.dword 0x3ff0000000000055
.dword 0x3ff0000000000033
.dword 0xc0000000000007d5
.dword 0x3ff000000000000f
.dword 0x3ff0000000000017
.dword 0xc000000000000413
.dword 0x3ff0000000000055
.dword 0x3ff000000000005b
.dword 0xc0000000000001c0
.dword 0x3ff0000000000036
.dword 0x3ff0000000000031
.dword 0xc0000000000000e3
.dword 0x3ff0000000000027
.dword 0x3ff0000000000037
.dword 0xc000000000000059
.dword 0x3ff0000000000021
.dword 0x3ff0000000000023
.dword 0xc00000000000001f
.dword 0x3ff0000000000005
.dword 0x3ff000000000002c
.dword 0xc000000000000002
.dword 0x3ff000000000001d
.dword 0x3ff0000000000002
.dword 0xc000000000000021
.dword 0x3ff0000000000026
.dword 0x3ff000000000002d
.dword 0xbfffffffffffffd6
.dword 0x3ff0000000000020
.dword 0x3ff0000000000046
.dword 0xbfffffffffffff98
.dword 0x3ff000000000001d
.dword 0x3ff0000000000041
.dword 0xbfffffffffffffdc
.dword 0x3ff000000000005a
.dword 0x3ff0000000000055
.dword 0xbfffffffffffff62
.dword 0x3ff000000000000a
.dword 0x3ff0000000000025
.dword 0xbffffffffffffffa
.dword 0x3ff0000000000042
.dword 0x2e
.dword 0x40f642b0b21642c8
.dword 0x44
.dword 0x28
.dword 0x40e999899999999a
.dword 0x14
.dword 0x50
.dword 0x40c9997000000000
.dword 0x1a
.dword 0x40
.dword 0x40bffefc00000000
.dword 0x41
.dword 0x2e
.dword 0x40b640fa6f4de9bd
.dword 0x53
.dword 0x29
.dword 0x40a8f55da895da89
.dword 0x5a
.dword 0x45
.dword 0x408da40ed7303b5d
.dword 0x59
.dword 0x4d
.dword 0x407a963bd81a98ef
.dword 0xd
.dword 0x15
.dword 0x40883c30c30c30c3
.dword 0x62
.dword 0x37
.dword 0x406293c8253c8254
.dword 0x12
.dword 0x48
.dword 0x404c200000000000
.dword 0x2e
.dword 0x39
.dword 0x4041a3ee08fb823f
.dword 0x25
.dword 0x5e
.dword 0x4024310572620ae5
.dword 0x4b
.dword 0x4b
.dword 0x401828f5c28f5c29
.dword 0x3b
.dword 0x19
.dword 0x4022f5c28f5c28f6
.dword 0x13
.dword 0x3f
.dword 0x3fe34d34d34d34d3
.dword 0x5a
.dword 0x46
.dword 0x3feaf8af8af8af8b
.dword 0x5
.dword 0x4e
.dword 0x3fd2df2df2df2df3
.dword 0x9
.dword 0x4b
.dword 0xbfa47ae147ae147b
.dword 0x13
.dword 0x43
.dword 0xbfd226357e16ece5
.dword 0x1b
.dword 0x40
.dword 0xbff4000000000000
.dword 0x54
.dword 0x59
.dword 0xbfbcc398730e61cc
.dword 0xc
.dword 0x2c
.dword 0xbfe5d1745d1745d1
.dword 0x1f
.dword 0x55
.dword 0xc0e8181b1b1b1b1b
.dword 0x8
.dword 0x31
.dword 0xc0e4e5e9cbc14e5e
.dword 0xe
.dword 0x32
.dword 0xc0d47b47ae147ae1
.dword 0x50
.dword 0xd
.dword 0xc0e3b1513b13b13b
.dword 0x9
.dword 0x55
.dword 0xc0a818e4e4e4e4e5
.dword 0x22
.dword 0x5d
.dword 0xc096062689a2689a
.dword 0xf
.dword 0x3d
.dword 0xc090cca7de6d1d61
.dword 0x31
.dword 0x43
.dword 0xc07e9dd9ca81e913
.dword 0x35
.dword 0x5a
.dword 0xc066cdddddddddde
.dword 0x23
.dword 0x62
.dword 0xc054e7d6343eb1a2
.dword 0x3
.dword 0x3f
.dword 0xc0505f7df7df7df8
.dword 0x1e
.dword 0x34
.dword 0xc043cec4ec4ec4ec
.dword 0xc
.dword 0x4a
.dword 0xc02c59f22983759f
.dword 0x19
.dword 0x32
.dword 0xc0270a3d70a3d70a
.dword 0x40
.dword 0x3f
.dword 0xc014000000000000
.dword 0x3b
.dword 0x4
.dword 0xc047600000000000
.dword 0x3b
.dword 0x34
.dword 0xc0069d89d89d89d9
.dword 0x53
.dword 0x41
.dword 0xbfed0bd0bd0bd0bd
.dword 0x1b
.dword 0x12
.dword 0xc005555555555555
.dword 0x20
.dword 0x6
.dword 0xc009555555555555
.dword 0xb
.dword 0x19
.dword 0xc00e666666666666
.dword 0x5b
.dword 0x31
.dword 0xbfd8d0fac687d634
.dword 0x11
.dword 0x1e
.dword 0xbffa222222222222
.dword 0x30
.dword 0x7fe0000000000027
.dword 0x3fefffffffdfff8c
.dword 0x7fe0000000000012
.dword 0x7fe0000000000048
.dword 0x3fefffffffefff40
.dword 0x7fe0000000000017
.dword 0x7fe000000000002f
.dword 0x3feffffffffbff24
.dword 0x7fe000000000003e
.dword 0x7fe000000000001e
.dword 0x3feffffffffdff3e
.dword 0x7fe0000000000042
.dword 0x7fe0000000000008
.dword 0x3feffffffffeffe4
.dword 0x7fe0000000000005
.dword 0x7fe0000000000054
.dword 0x3fefffffffff7f04
.dword 0x7fe0000000000029
.dword 0x7fe000000000005b
.dword 0x3fefffffffffbe9e
.dword 0x7fe0000000000055
RVTEST_DATA_END

RVMODEL_DATA_BEGIN


signature_x15_0:
    .fill 0*(XLEN/32),4,0xdeadbeef


signature_x15_1:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_2:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_3:
    .fill 58*(XLEN/32),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*(XLEN/32),4,0xdeadbeef

#endif

RVMODEL_DATA_END
