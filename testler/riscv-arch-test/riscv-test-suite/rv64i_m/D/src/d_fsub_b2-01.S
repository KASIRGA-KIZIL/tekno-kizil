
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.5.6
// timestamp : Mon Sep 20 13:40:15 2021 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/compliance_fd/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /scratch/compliance_fd/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV64D/rv64d_fsub.cgf \
 \
//                  -- xlen 64  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2021. IIT Madras. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fsub.d instruction of the RISC-V FD extension for the fsub_b2 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV64IFD")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*64.*);check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",d_fsub_b2)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x16,test_fp)
RVTEST_SIGBASE(x15,signature_x15_1)

inst_0:
// rs2 == rd != rs1, rs1==f27, rs2==f5, rd==f5, fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000012 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000011 and rm_val == 0  
// opcode: fsub.d ; op1:f27; op2:f5; dest:f5; op1val:0x12; op2val:0x11; valaddr_reg:x16; val_offset:0; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f5, f27, f5, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_1:
// rs1 == rs2 == rd, rs1==f17, rs2==f17, rd==f17, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000033 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fsub.d ; op1:f17; op2:f17; dest:f17; op1val:0x7fe0000000000033; op2val:0x7fe0000000000033; valaddr_reg:x16; val_offset:16; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f17, f17, f17, 0x0, 0, x16, 16, x17, x15, 16, x18)

inst_2:
// rs1 != rs2  and rs1 != rd and rs2 != rd, rs1==f22, rs2==f12, rd==f13, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000003b and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fsub.d ; op1:f22; op2:f12; dest:f13; op1val:0x7fe000000000003b; op2val:0x7ff0000000000000; valaddr_reg:x16; val_offset:32; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f13, f22, f12, 0x0, 0, x16, 32, x17, x15, 32, x18)

inst_3:
// rs1 == rd != rs2, rs1==f26, rs2==f0, rd==f26, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000039 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fsub.d ; op1:f26; op2:f0; dest:f26; op1val:0x7fe0000000000039; op2val:0x7ff0000000000000; valaddr_reg:x16; val_offset:48; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f26, f26, f0, 0x0, 0, x16, 48, x17, x15, 48, x18)

inst_4:
// rs1 == rs2 != rd, rs1==f14, rs2==f14, rd==f20, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000021 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fsub.d ; op1:f14; op2:f14; dest:f20; op1val:0x7fe0000000000021; op2val:0x7fe0000000000021; valaddr_reg:x16; val_offset:64; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f20, f14, f14, 0x0, 0, x16, 64, x17, x15, 64, x18)

inst_5:
// rs1==f20, rs2==f30, rd==f12, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000038 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fsub.d ; op1:f20; op2:f30; dest:f12; op1val:0x7fe0000000000038; op2val:0x7ff0000000000000; valaddr_reg:x16; val_offset:80; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f20, f30, 0x0, 0, x16, 80, x17, x15, 80, x18)

inst_6:
// rs1==f25, rs2==f11, rd==f6, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000058 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fsub.d ; op1:f25; op2:f11; dest:f6; op1val:0x7fe0000000000058; op2val:0x7ff0000000000000; valaddr_reg:x16; val_offset:96; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f6, f25, f11, 0x0, 0, x16, 96, x17, x15, 96, x18)

inst_7:
// rs1==f30, rs2==f22, rd==f2, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000056 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fsub.d ; op1:f30; op2:f22; dest:f2; op1val:0x7fe0000000000056; op2val:0x7ff0000000000000; valaddr_reg:x16; val_offset:112; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f2, f30, f22, 0x0, 0, x16, 112, x17, x15, 112, x18)

inst_8:
// rs1==f0, rs2==f8, rd==f14, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000007 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fsub.d ; op1:f0; op2:f8; dest:f14; op1val:0x7fe0000000000007; op2val:0x7ff0000000000000; valaddr_reg:x16; val_offset:128; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f14, f0, f8, 0x0, 0, x16, 128, x17, x15, 128, x18)

inst_9:
// rs1==f12, rs2==f1, rd==f30, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000045 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fsub.d ; op1:f12; op2:f1; dest:f30; op1val:0x7fe0000000000045; op2val:0x7ff0000000000000; valaddr_reg:x16; val_offset:144; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f30, f12, f1, 0x0, 0, x16, 144, x17, x15, 144, x18)

inst_10:
// rs1==f18, rs2==f16, rd==f10, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000027 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fsub.d ; op1:f18; op2:f16; dest:f10; op1val:0x7fe0000000000027; op2val:0x7ff0000000000000; valaddr_reg:x16; val_offset:160; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f10, f18, f16, 0x0, 0, x16, 160, x17, x15, 160, x18)

inst_11:
// rs1==f1, rs2==f6, rd==f21, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000001b and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fsub.d ; op1:f1; op2:f6; dest:f21; op1val:0x7fe000000000001b; op2val:0x7ff0000000000000; valaddr_reg:x16; val_offset:176; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f21, f1, f6, 0x0, 0, x16, 176, x17, x15, 176, x18)

inst_12:
// rs1==f9, rs2==f15, rd==f0, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000060 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fsub.d ; op1:f9; op2:f15; dest:f0; op1val:0x7fe0000000000060; op2val:0x7ff0000000000000; valaddr_reg:x16; val_offset:192; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f0, f9, f15, 0x0, 0, x16, 192, x17, x15, 192, x18)

inst_13:
// rs1==f23, rs2==f26, rd==f1, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000057 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fsub.d ; op1:f23; op2:f26; dest:f1; op1val:0x7fe0000000000057; op2val:0x7ff0000000000000; valaddr_reg:x16; val_offset:208; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f1, f23, f26, 0x0, 0, x16, 208, x17, x15, 208, x18)

inst_14:
// rs1==f11, rs2==f2, rd==f28, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000029 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fsub.d ; op1:f11; op2:f2; dest:f28; op1val:0x7fe0000000000029; op2val:0x7ff0000000000000; valaddr_reg:x16; val_offset:224; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f28, f11, f2, 0x0, 0, x16, 224, x17, x15, 224, x18)

inst_15:
// rs1==f13, rs2==f10, rd==f22, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000005d and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fsub.d ; op1:f13; op2:f10; dest:f22; op1val:0x7fe000000000005d; op2val:0x7ff0000000000000; valaddr_reg:x16; val_offset:240; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f22, f13, f10, 0x0, 0, x16, 240, x17, x15, 240, x18)

inst_16:
// rs1==f6, rs2==f27, rd==f19, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000013 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fsub.d ; op1:f6; op2:f27; dest:f19; op1val:0x7fe0000000000013; op2val:0x7ff0000000000000; valaddr_reg:x16; val_offset:256; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f19, f6, f27, 0x0, 0, x16, 256, x17, x15, 256, x18)

inst_17:
// rs1==f2, rs2==f21, rd==f9, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000011 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fsub.d ; op1:f2; op2:f21; dest:f9; op1val:0x7fe0000000000011; op2val:0x7ff0000000000000; valaddr_reg:x16; val_offset:272; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f9, f2, f21, 0x0, 0, x16, 272, x17, x15, 272, x18)

inst_18:
// rs1==f4, rs2==f31, rd==f18, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000004e and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fsub.d ; op1:f4; op2:f31; dest:f18; op1val:0x7fe000000000004e; op2val:0x7ff0000000000000; valaddr_reg:x16; val_offset:288; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f18, f4, f31, 0x0, 0, x16, 288, x17, x15, 288, x18)

inst_19:
// rs1==f8, rs2==f23, rd==f7, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000005b and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fsub.d ; op1:f8; op2:f23; dest:f7; op1val:0x7fe000000000005b; op2val:0x7ff0000000000000; valaddr_reg:x16; val_offset:304; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f7, f8, f23, 0x0, 0, x16, 304, x17, x15, 304, x18)

inst_20:
// rs1==f21, rs2==f7, rd==f11, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000028 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fsub.d ; op1:f21; op2:f7; dest:f11; op1val:0x7fe0000000000028; op2val:0x7ff0000000000000; valaddr_reg:x16; val_offset:320; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f11, f21, f7, 0x0, 0, x16, 320, x17, x15, 320, x18)

inst_21:
// rs1==f19, rs2==f9, rd==f15, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000017 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fsub.d ; op1:f19; op2:f9; dest:f15; op1val:0x7fe0000000000017; op2val:0x7ff0000000000000; valaddr_reg:x16; val_offset:336; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f15, f19, f9, 0x0, 0, x16, 336, x17, x15, 336, x18)

inst_22:
// rs1==f10, rs2==f24, rd==f29, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000056 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xfffffff7fff52 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f24; dest:f29; op1val:0x7fe0000000000056; op2val:0xffdfffffff7fff52; valaddr_reg:x16; val_offset:352; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f29, f10, f24, 0x0, 0, x16, 352, x17, x15, 352, x18)

inst_23:
// rs1==f5, rs2==f25, rd==f23, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000000a and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xfffffffbfffea and rm_val == 0  
// opcode: fsub.d ; op1:f5; op2:f25; dest:f23; op1val:0x7fe000000000000a; op2val:0xffdfffffffbfffea; valaddr_reg:x16; val_offset:368; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f23, f5, f25, 0x0, 0, x16, 368, x17, x15, 368, x18)

inst_24:
// rs1==f7, rs2==f20, rd==f31, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000041 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xfffffffdfff7c and rm_val == 0  
// opcode: fsub.d ; op1:f7; op2:f20; dest:f31; op1val:0x7fe0000000000041; op2val:0xffdfffffffdfff7c; valaddr_reg:x16; val_offset:384; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f31, f7, f20, 0x0, 0, x16, 384, x17, x15, 384, x18)

inst_25:
// rs1==f16, rs2==f19, rd==f25, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000014 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xfffffffefffd6 and rm_val == 0  
// opcode: fsub.d ; op1:f16; op2:f19; dest:f25; op1val:0x7fe0000000000014; op2val:0xffdfffffffefffd6; valaddr_reg:x16; val_offset:400; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f25, f16, f19, 0x0, 0, x16, 400, x17, x15, 400, x18)

inst_26:
// rs1==f15, rs2==f28, rd==f27, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000040 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xffffffff7ff7e and rm_val == 0  
// opcode: fsub.d ; op1:f15; op2:f28; dest:f27; op1val:0x7fe0000000000040; op2val:0xffdffffffff7ff7e; valaddr_reg:x16; val_offset:416; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f27, f15, f28, 0x0, 0, x16, 416, x17, x15, 416, x18)

inst_27:
// rs1==f28, rs2==f13, rd==f24, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000061 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xffffffffbff3c and rm_val == 0  
// opcode: fsub.d ; op1:f28; op2:f13; dest:f24; op1val:0x7fe0000000000061; op2val:0xffdffffffffbff3c; valaddr_reg:x16; val_offset:432; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f24, f28, f13, 0x0, 0, x16, 432, x17, x15, 432, x18)

inst_28:
// rs1==f31, rs2==f18, rd==f16, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000002 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xffffffffdfffa and rm_val == 0  
// opcode: fsub.d ; op1:f31; op2:f18; dest:f16; op1val:0x7fe0000000000002; op2val:0xffdffffffffdfffa; valaddr_reg:x16; val_offset:448; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f16, f31, f18, 0x0, 0, x16, 448, x17, x15, 448, x18)

inst_29:
// rs1==f3, rs2==f29, rd==f4, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000003 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xffffffffefff8 and rm_val == 0  
// opcode: fsub.d ; op1:f3; op2:f29; dest:f4; op1val:0x7fe0000000000003; op2val:0xffdffffffffefff8; valaddr_reg:x16; val_offset:464; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f4, f3, f29, 0x0, 0, x16, 464, x17, x15, 464, x18)

inst_30:
// rs1==f29, rs2==f4, rd==f3, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000005e and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xfffffffff7f42 and rm_val == 0  
// opcode: fsub.d ; op1:f29; op2:f4; dest:f3; op1val:0x7fe000000000005e; op2val:0xffdfffffffff7f42; valaddr_reg:x16; val_offset:480; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f3, f29, f4, 0x0, 0, x16, 480, x17, x15, 480, x18)

inst_31:
// rs1==f24, rs2==f3, rd==f8, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000047 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xfffffffffbf70 and rm_val == 0  
// opcode: fsub.d ; op1:f24; op2:f3; dest:f8; op1val:0x7fe0000000000047; op2val:0xffdfffffffffbf70; valaddr_reg:x16; val_offset:496; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f8, f24, f3, 0x0, 0, x16, 496, x17, x15, 496, x18)

inst_32:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000000a and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xfffffffffdfea and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fe000000000000a; op2val:0xffdfffffffffdfea; valaddr_reg:x16; val_offset:512; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 512, x17, x15, 512, x18)

inst_33:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000020 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xfffffffffefbe and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fe0000000000020; op2val:0xffdfffffffffefbe; valaddr_reg:x16; val_offset:528; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 528, x17, x15, 528, x18)

inst_34:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000001d and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xffffffffff7c4 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fe000000000001d; op2val:0xffdffffffffff7c4; valaddr_reg:x16; val_offset:544; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 544, x17, x15, 544, x18)

inst_35:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000000c and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xffffffffffbe6 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fe000000000000c; op2val:0xffdffffffffffbe6; valaddr_reg:x16; val_offset:560; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 560, x17, x15, 560, x18)

inst_36:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000004b and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xffffffffffd68 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fe000000000004b; op2val:0xffdffffffffffd68; valaddr_reg:x16; val_offset:576; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 576, x17, x15, 576, x18)

inst_37:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000046 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xffffffffffe72 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fe0000000000046; op2val:0xffdffffffffffe72; valaddr_reg:x16; val_offset:592; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 592, x17, x15, 592, x18)

inst_38:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000002b and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xfffffffffff28 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fe000000000002b; op2val:0xffdfffffffffff28; valaddr_reg:x16; val_offset:608; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 608, x17, x15, 608, x18)

inst_39:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000027 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xfffffffffff70 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fe0000000000027; op2val:0xffdfffffffffff70; valaddr_reg:x16; val_offset:624; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 624, x17, x15, 624, x18)

inst_40:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000029 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xfffffffffff8c and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fe0000000000029; op2val:0xffdfffffffffff8c; valaddr_reg:x16; val_offset:640; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 640, x17, x15, 640, x18)

inst_41:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000002a and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xfffffffffff9a and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fe000000000002a; op2val:0xffdfffffffffff9a; valaddr_reg:x16; val_offset:656; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 656, x17, x15, 656, x18)

inst_42:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000028 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xfffffffffffa6 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fe0000000000028; op2val:0xffdfffffffffffa6; valaddr_reg:x16; val_offset:672; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 672, x17, x15, 672, x18)

inst_43:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000001e and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xfffffffffffbe and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fe000000000001e; op2val:0xffdfffffffffffbe; valaddr_reg:x16; val_offset:688; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 688, x17, x15, 688, x18)

inst_44:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000053 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xfffffffffff56 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fe0000000000053; op2val:0xffdfffffffffff56; valaddr_reg:x16; val_offset:704; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 704, x17, x15, 704, x18)

inst_45:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000054 and fs2 == 0 and fe2 == 0x002 and fm2 == 0x000000020002a and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000054; op2val:0x2000000020002a; valaddr_reg:x16; val_offset:720; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 720, x17, x15, 720, x18)

inst_46:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000003a and fs2 == 0 and fe2 == 0x002 and fm2 == 0x000000010001d and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x1000000000003a; op2val:0x2000000010001d; valaddr_reg:x16; val_offset:736; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 736, x17, x15, 736, x18)

inst_47:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000000c and fs2 == 0 and fe2 == 0x002 and fm2 == 0x0000000080006 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x1000000000000c; op2val:0x20000000080006; valaddr_reg:x16; val_offset:752; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 752, x17, x15, 752, x18)

inst_48:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000000b and fs2 == 0 and fe2 == 0x002 and fm2 == 0x0000000040006 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x1000000000000b; op2val:0x20000000040006; valaddr_reg:x16; val_offset:768; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 768, x17, x15, 768, x18)

inst_49:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000020 and fs2 == 0 and fe2 == 0x002 and fm2 == 0x0000000020010 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000020; op2val:0x20000000020010; valaddr_reg:x16; val_offset:784; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 784, x17, x15, 784, x18)

inst_50:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000028 and fs2 == 0 and fe2 == 0x002 and fm2 == 0x0000000010014 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000028; op2val:0x20000000010014; valaddr_reg:x16; val_offset:800; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 800, x17, x15, 800, x18)

inst_51:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000046 and fs2 == 0 and fe2 == 0x002 and fm2 == 0x0000000008023 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000046; op2val:0x20000000008023; valaddr_reg:x16; val_offset:816; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 816, x17, x15, 816, x18)

inst_52:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000022 and fs2 == 0 and fe2 == 0x002 and fm2 == 0x0000000004011 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000022; op2val:0x20000000004011; valaddr_reg:x16; val_offset:832; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 832, x17, x15, 832, x18)

inst_53:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000055 and fs2 == 0 and fe2 == 0x002 and fm2 == 0x000000000202a and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000055; op2val:0x2000000000202a; valaddr_reg:x16; val_offset:848; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 848, x17, x15, 848, x18)

inst_54:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000059 and fs2 == 0 and fe2 == 0x002 and fm2 == 0x000000000102c and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000059; op2val:0x2000000000102c; valaddr_reg:x16; val_offset:864; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 864, x17, x15, 864, x18)

inst_55:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000050 and fs2 == 0 and fe2 == 0x002 and fm2 == 0x0000000000828 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000050; op2val:0x20000000000828; valaddr_reg:x16; val_offset:880; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 880, x17, x15, 880, x18)

inst_56:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000021 and fs2 == 0 and fe2 == 0x002 and fm2 == 0x0000000000410 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000021; op2val:0x20000000000410; valaddr_reg:x16; val_offset:896; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 896, x17, x15, 896, x18)

inst_57:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000003b and fs2 == 0 and fe2 == 0x002 and fm2 == 0x000000000021e and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x1000000000003b; op2val:0x2000000000021e; valaddr_reg:x16; val_offset:912; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 912, x17, x15, 912, x18)

inst_58:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000029 and fs2 == 0 and fe2 == 0x002 and fm2 == 0x0000000000114 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000029; op2val:0x20000000000114; valaddr_reg:x16; val_offset:928; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 928, x17, x15, 928, x18)

inst_59:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000009 and fs2 == 0 and fe2 == 0x002 and fm2 == 0x0000000000084 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000009; op2val:0x20000000000084; valaddr_reg:x16; val_offset:944; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 944, x17, x15, 944, x18)

inst_60:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000029 and fs2 == 0 and fe2 == 0x002 and fm2 == 0x0000000000054 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000029; op2val:0x20000000000054; valaddr_reg:x16; val_offset:960; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 960, x17, x15, 960, x18)

inst_61:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000003a and fs2 == 0 and fe2 == 0x002 and fm2 == 0x000000000003d and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x1000000000003a; op2val:0x2000000000003d; valaddr_reg:x16; val_offset:976; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 976, x17, x15, 976, x18)

inst_62:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000004d and fs2 == 0 and fe2 == 0x002 and fm2 == 0x0000000000036 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x1000000000004d; op2val:0x20000000000036; valaddr_reg:x16; val_offset:992; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 992, x17, x15, 992, x18)

inst_63:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000026 and fs2 == 0 and fe2 == 0x002 and fm2 == 0x000000000001b and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000026; op2val:0x2000000000001b; valaddr_reg:x16; val_offset:1008; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1008, x17, x15, 1008, x18)

inst_64:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000004 and fs2 == 0 and fe2 == 0x002 and fm2 == 0x0000000000006 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000004; op2val:0x20000000000006; valaddr_reg:x16; val_offset:1024; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1024, x17, x15, 1024, x18)

inst_65:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000029 and fs2 == 0 and fe2 == 0x002 and fm2 == 0x0000000000016 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000029; op2val:0x20000000000016; valaddr_reg:x16; val_offset:1040; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1040, x17, x15, 1040, x18)

inst_66:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000001b and fs2 == 0 and fe2 == 0x002 and fm2 == 0x000000000000e and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x1000000000001b; op2val:0x2000000000000e; valaddr_reg:x16; val_offset:1056; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1056, x17, x15, 1056, x18)

inst_67:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000029 and fs2 == 0 and fe2 == 0x002 and fm2 == 0x0000000000015 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000029; op2val:0x20000000000015; valaddr_reg:x16; val_offset:1072; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1072, x17, x15, 1072, x18)

inst_68:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000005c and fs2 == 1 and fe2 == 0x000 and fm2 == 0x00000003fffa4 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x1000000000005c; op2val:0x80000000003fffa4; valaddr_reg:x16; val_offset:1088; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1088, x17, x15, 1088, x18)

inst_69:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000047 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x00000001fffb9 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000047; op2val:0x80000000001fffb9; valaddr_reg:x16; val_offset:1104; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1104, x17, x15, 1104, x18)

inst_70:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000046 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x00000000fffba and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000046; op2val:0x80000000000fffba; valaddr_reg:x16; val_offset:1120; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1120, x17, x15, 1120, x18)

inst_71:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000038 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x000000007ffc8 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000038; op2val:0x800000000007ffc8; valaddr_reg:x16; val_offset:1136; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1136, x17, x15, 1136, x18)

inst_72:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000060 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x000000003ffa0 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000060; op2val:0x800000000003ffa0; valaddr_reg:x16; val_offset:1152; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1152, x17, x15, 1152, x18)

inst_73:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000001f and fs2 == 1 and fe2 == 0x000 and fm2 == 0x000000001ffe1 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x1000000000001f; op2val:0x800000000001ffe1; valaddr_reg:x16; val_offset:1168; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1168, x17, x15, 1168, x18)

inst_74:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000016 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x000000000ffea and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000016; op2val:0x800000000000ffea; valaddr_reg:x16; val_offset:1184; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1184, x17, x15, 1184, x18)

inst_75:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000000f and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000007ff1 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x1000000000000f; op2val:0x8000000000007ff1; valaddr_reg:x16; val_offset:1200; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1200, x17, x15, 1200, x18)

inst_76:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000036 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000003fca and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000036; op2val:0x8000000000003fca; valaddr_reg:x16; val_offset:1216; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1216, x17, x15, 1216, x18)

inst_77:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000001f and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000001fe1 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x1000000000001f; op2val:0x8000000000001fe1; valaddr_reg:x16; val_offset:1232; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1232, x17, x15, 1232, x18)

inst_78:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000006 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000ffa and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000006; op2val:0x8000000000000ffa; valaddr_reg:x16; val_offset:1248; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1248, x17, x15, 1248, x18)

inst_79:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000035 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x00000000007cb and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000035; op2val:0x80000000000007cb; valaddr_reg:x16; val_offset:1264; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1264, x17, x15, 1264, x18)

inst_80:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000002 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x00000000003fe and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000002; op2val:0x80000000000003fe; valaddr_reg:x16; val_offset:1280; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1280, x17, x15, 1280, x18)

inst_81:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000004f and fs2 == 1 and fe2 == 0x000 and fm2 == 0x00000000001b1 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x1000000000004f; op2val:0x80000000000001b1; valaddr_reg:x16; val_offset:1296; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1296, x17, x15, 1296, x18)

inst_82:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000026 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x00000000000da and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000026; op2val:0x80000000000000da; valaddr_reg:x16; val_offset:1312; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1312, x17, x15, 1312, x18)

inst_83:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000000e and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000072 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x1000000000000e; op2val:0x8000000000000072; valaddr_reg:x16; val_offset:1328; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1328, x17, x15, 1328, x18)

inst_84:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000003b and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000005 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x1000000000003b; op2val:0x8000000000000005; valaddr_reg:x16; val_offset:1344; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1344, x17, x15, 1344, x18)

inst_85:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000045 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000025 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000045; op2val:0x25; valaddr_reg:x16; val_offset:1360; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1360, x17, x15, 1360, x18)

inst_86:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000026 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000016 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000026; op2val:0x16; valaddr_reg:x16; val_offset:1376; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1376, x17, x15, 1376, x18)

inst_87:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x000000000001b and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000023; op2val:0x1b; valaddr_reg:x16; val_offset:1392; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1392, x17, x15, 1392, x18)

inst_88:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000049 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000045 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000049; op2val:0x45; valaddr_reg:x16; val_offset:1408; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1408, x17, x15, 1408, x18)

inst_89:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000047 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000045 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000047; op2val:0x45; valaddr_reg:x16; val_offset:1424; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1424, x17, x15, 1424, x18)

inst_90:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000000a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000009 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x1000000000000a; op2val:0x9; valaddr_reg:x16; val_offset:1440; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1440, x17, x15, 1440, x18)

inst_91:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000004c and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffc0004b and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x4c; op2val:0xfffffffc0004b; valaddr_reg:x16; val_offset:1456; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1456, x17, x15, 1456, x18)

inst_92:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000000f and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffe0000e and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0xf; op2val:0xfffffffe0000e; valaddr_reg:x16; val_offset:1472; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1472, x17, x15, 1472, x18)

inst_93:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000011 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xffffffff00010 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x11; op2val:0xffffffff00010; valaddr_reg:x16; val_offset:1488; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1488, x17, x15, 1488, x18)

inst_94:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000031 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xffffffff80030 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x31; op2val:0xffffffff80030; valaddr_reg:x16; val_offset:1504; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1504, x17, x15, 1504, x18)

inst_95:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xffffffffc0034 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x35; op2val:0xffffffffc0034; valaddr_reg:x16; val_offset:1520; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1520, x17, x15, 1520, x18)

inst_96:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000002a and fs2 == 0 and fe2 == 0x000 and fm2 == 0xffffffffe0029 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x2a; op2val:0xffffffffe0029; valaddr_reg:x16; val_offset:1536; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1536, x17, x15, 1536, x18)

inst_97:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000063 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffff0062 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x63; op2val:0xfffffffff0062; valaddr_reg:x16; val_offset:1552; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1552, x17, x15, 1552, x18)

inst_98:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000004b and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffff804a and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x4b; op2val:0xfffffffff804a; valaddr_reg:x16; val_offset:1568; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1568, x17, x15, 1568, x18)

inst_99:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000003f and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffc03e and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x3f; op2val:0xfffffffffc03e; valaddr_reg:x16; val_offset:1584; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1584, x17, x15, 1584, x18)

inst_100:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000004e and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffe04d and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x4e; op2val:0xfffffffffe04d; valaddr_reg:x16; val_offset:1600; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1600, x17, x15, 1600, x18)

inst_101:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000026 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xffffffffff025 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x26; op2val:0xffffffffff025; valaddr_reg:x16; val_offset:1616; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1616, x17, x15, 1616, x18)

inst_102:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000002c and fs2 == 0 and fe2 == 0x000 and fm2 == 0xffffffffff82b and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x2c; op2val:0xffffffffff82b; valaddr_reg:x16; val_offset:1632; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1632, x17, x15, 1632, x18)

inst_103:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000030 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xffffffffffc2f and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x30; op2val:0xffffffffffc2f; valaddr_reg:x16; val_offset:1648; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1648, x17, x15, 1648, x18)

inst_104:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000041 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xffffffffffe40 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x41; op2val:0xffffffffffe40; valaddr_reg:x16; val_offset:1664; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1664, x17, x15, 1664, x18)

inst_105:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000002b and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffff2a and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x2b; op2val:0xfffffffffff2a; valaddr_reg:x16; val_offset:1680; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1680, x17, x15, 1680, x18)

inst_106:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffa2 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x23; op2val:0xfffffffffffa2; valaddr_reg:x16; val_offset:1696; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1696, x17, x15, 1696, x18)

inst_107:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000045 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000004 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x45; op2val:0x10000000000004; valaddr_reg:x16; val_offset:1712; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1712, x17, x15, 1712, x18)

inst_108:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000016 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xffffffffffff5 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x16; op2val:0xffffffffffff5; valaddr_reg:x16; val_offset:1728; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1728, x17, x15, 1728, x18)

inst_109:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000000b and fs2 == 0 and fe2 == 0x000 and fm2 == 0xffffffffffffa and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0xb; op2val:0xffffffffffffa; valaddr_reg:x16; val_offset:1744; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1744, x17, x15, 1744, x18)

inst_110:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000005d and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000054 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x5d; op2val:0x10000000000054; valaddr_reg:x16; val_offset:1760; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1760, x17, x15, 1760, x18)

inst_111:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000001f and fs2 == 0 and fe2 == 0x001 and fm2 == 0x000000000001a and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x1f; op2val:0x1000000000001a; valaddr_reg:x16; val_offset:1776; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1776, x17, x15, 1776, x18)

inst_112:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000063 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000060 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x63; op2val:0x10000000000060; valaddr_reg:x16; val_offset:1792; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1792, x17, x15, 1792, x18)

inst_113:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000045 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x0000000000043 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x45; op2val:0x10000000000043; valaddr_reg:x16; val_offset:1808; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1808, x17, x15, 1808, x18)

inst_114:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000002d and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffbfffd2 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x2d; op2val:0x800fffffffbfffd2; valaddr_reg:x16; val_offset:1824; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1824, x17, x15, 1824, x18)

inst_115:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000031 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffdfffce and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x31; op2val:0x800fffffffdfffce; valaddr_reg:x16; val_offset:1840; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1840, x17, x15, 1840, x18)

inst_116:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000057 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffefffa8 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x57; op2val:0x800fffffffefffa8; valaddr_reg:x16; val_offset:1856; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1856, x17, x15, 1856, x18)

inst_117:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000001c and fs2 == 1 and fe2 == 0x000 and fm2 == 0xffffffff7ffe3 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x1c; op2val:0x800ffffffff7ffe3; valaddr_reg:x16; val_offset:1872; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1872, x17, x15, 1872, x18)

inst_118:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000002c and fs2 == 1 and fe2 == 0x000 and fm2 == 0xffffffffbffd3 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x2c; op2val:0x800ffffffffbffd3; valaddr_reg:x16; val_offset:1888; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1888, x17, x15, 1888, x18)

inst_119:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000049 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xffffffffdffb6 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x49; op2val:0x800ffffffffdffb6; valaddr_reg:x16; val_offset:1904; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1904, x17, x15, 1904, x18)

inst_120:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000001a and fs2 == 1 and fe2 == 0x000 and fm2 == 0xffffffffeffe5 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x1a; op2val:0x800ffffffffeffe5; valaddr_reg:x16; val_offset:1920; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1920, x17, x15, 1920, x18)

inst_121:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000003 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffff7ffc and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x3; op2val:0x800fffffffff7ffc; valaddr_reg:x16; val_offset:1936; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1936, x17, x15, 1936, x18)

inst_122:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000034 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffbfcb and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x34; op2val:0x800fffffffffbfcb; valaddr_reg:x16; val_offset:1952; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1952, x17, x15, 1952, x18)

inst_123:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000002a and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffdfd5 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x2a; op2val:0x800fffffffffdfd5; valaddr_reg:x16; val_offset:1968; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1968, x17, x15, 1968, x18)

inst_124:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000040 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffefbf and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x40; op2val:0x800fffffffffefbf; valaddr_reg:x16; val_offset:1984; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1984, x17, x15, 1984, x18)

inst_125:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000026 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xffffffffff7d9 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x26; op2val:0x800ffffffffff7d9; valaddr_reg:x16; val_offset:2000; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 2000, x17, x15, 2000, x18)

inst_126:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000056 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xffffffffffba9 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x56; op2val:0x800ffffffffffba9; valaddr_reg:x16; val_offset:2016; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 2016, x17, x15, 2016, x18)
addi x16,x16,2032
RVTEST_SIGBASE(x15,signature_x15_2)

inst_127:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000040 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xffffffffffdbf and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x40; op2val:0x800ffffffffffdbf; valaddr_reg:x16; val_offset:0; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_128:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000004c and fs2 == 1 and fe2 == 0x000 and fm2 == 0xffffffffffeb3 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x4c; op2val:0x800ffffffffffeb3; valaddr_reg:x16; val_offset:16; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 16, x17, x15, 16, x18)

inst_129:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000057 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffff28 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x57; op2val:0x800fffffffffff28; valaddr_reg:x16; val_offset:32; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 32, x17, x15, 32, x18)

inst_130:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000001b and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffa4 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x1b; op2val:0x800fffffffffffa4; valaddr_reg:x16; val_offset:48; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 48, x17, x15, 48, x18)

inst_131:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000002d and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffb2 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x2d; op2val:0x800fffffffffffb2; valaddr_reg:x16; val_offset:64; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 64, x17, x15, 64, x18)

inst_132:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000031 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffbe and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x31; op2val:0x800fffffffffffbe; valaddr_reg:x16; val_offset:80; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 80, x17, x15, 80, x18)

inst_133:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000042 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffb5 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x42; op2val:0x800fffffffffffb5; valaddr_reg:x16; val_offset:96; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 96, x17, x15, 96, x18)

inst_134:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000005b and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffa0 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x5b; op2val:0x800fffffffffffa0; valaddr_reg:x16; val_offset:112; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 112, x17, x15, 112, x18)

inst_135:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000003b and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffc2 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x3b; op2val:0x800fffffffffffc2; valaddr_reg:x16; val_offset:128; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 128, x17, x15, 128, x18)

inst_136:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000001c and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffe2 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x1c; op2val:0x800fffffffffffe2; valaddr_reg:x16; val_offset:144; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 144, x17, x15, 144, x18)

inst_137:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000400006 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x5; op2val:0x400006; valaddr_reg:x16; val_offset:160; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 160, x17, x15, 160, x18)

inst_138:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000002 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000200003 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x2; op2val:0x200003; valaddr_reg:x16; val_offset:176; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 176, x17, x15, 176, x18)

inst_139:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000021 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000100022 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x21; op2val:0x100022; valaddr_reg:x16; val_offset:192; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 192, x17, x15, 192, x18)

inst_140:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000036 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000080037 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x36; op2val:0x80037; valaddr_reg:x16; val_offset:208; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 208, x17, x15, 208, x18)

inst_141:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000060 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000040061 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x60; op2val:0x40061; valaddr_reg:x16; val_offset:224; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 224, x17, x15, 224, x18)

inst_142:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000028 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000020029 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x28; op2val:0x20029; valaddr_reg:x16; val_offset:240; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 240, x17, x15, 240, x18)

inst_143:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000000a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x000000001000b and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0xa; op2val:0x1000b; valaddr_reg:x16; val_offset:256; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 256, x17, x15, 256, x18)

inst_144:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000007 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008008 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x7; op2val:0x8008; valaddr_reg:x16; val_offset:272; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 272, x17, x15, 272, x18)

inst_145:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000011 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000004012 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x11; op2val:0x4012; valaddr_reg:x16; val_offset:288; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 288, x17, x15, 288, x18)

inst_146:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000005f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000002060 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x5f; op2val:0x2060; valaddr_reg:x16; val_offset:304; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 304, x17, x15, 304, x18)

inst_147:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000037 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000001038 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x37; op2val:0x1038; valaddr_reg:x16; val_offset:320; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 320, x17, x15, 320, x18)

inst_148:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000055 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000856 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x55; op2val:0x856; valaddr_reg:x16; val_offset:336; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 336, x17, x15, 336, x18)

inst_149:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000004a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x000000000044b and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x4a; op2val:0x44b; valaddr_reg:x16; val_offset:352; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 352, x17, x15, 352, x18)

inst_150:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000234 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x33; op2val:0x234; valaddr_reg:x16; val_offset:368; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 368, x17, x15, 368, x18)

inst_151:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000054 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000155 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x54; op2val:0x155; valaddr_reg:x16; val_offset:384; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 384, x17, x15, 384, x18)

inst_152:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000001d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x000000000009e and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x1d; op2val:0x9e; valaddr_reg:x16; val_offset:400; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 400, x17, x15, 400, x18)

inst_153:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000043 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000084 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x43; op2val:0x84; valaddr_reg:x16; val_offset:416; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 416, x17, x15, 416, x18)

inst_154:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000051 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000072 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x51; op2val:0x72; valaddr_reg:x16; val_offset:432; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 432, x17, x15, 432, x18)

inst_155:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000046 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000057 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x46; op2val:0x57; valaddr_reg:x16; val_offset:448; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 448, x17, x15, 448, x18)

inst_156:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000060 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x57; op2val:0x60; valaddr_reg:x16; val_offset:464; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 464, x17, x15, 464, x18)

inst_157:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000005b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000060 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x5b; op2val:0x60; valaddr_reg:x16; val_offset:480; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 480, x17, x15, 480, x18)

inst_158:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000018 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x15; op2val:0x18; valaddr_reg:x16; val_offset:496; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 496, x17, x15, 496, x18)

inst_159:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000005 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x5; op2val:0x5; valaddr_reg:x16; val_offset:512; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 512, x17, x15, 512, x18)

inst_160:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000033 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x00000003fffce and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x33; op2val:0x80000000003fffce; valaddr_reg:x16; val_offset:528; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 528, x17, x15, 528, x18)

inst_161:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000001d and fs2 == 1 and fe2 == 0x000 and fm2 == 0x00000001fffe4 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x1d; op2val:0x80000000001fffe4; valaddr_reg:x16; val_offset:544; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 544, x17, x15, 544, x18)

inst_162:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000038 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x00000000fffc9 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x38; op2val:0x80000000000fffc9; valaddr_reg:x16; val_offset:560; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 560, x17, x15, 560, x18)

inst_163:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000001b and fs2 == 1 and fe2 == 0x000 and fm2 == 0x000000007ffe6 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x1b; op2val:0x800000000007ffe6; valaddr_reg:x16; val_offset:576; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 576, x17, x15, 576, x18)

inst_164:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000005e and fs2 == 1 and fe2 == 0x000 and fm2 == 0x000000003ffa3 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x5e; op2val:0x800000000003ffa3; valaddr_reg:x16; val_offset:592; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 592, x17, x15, 592, x18)

inst_165:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000000e and fs2 == 1 and fe2 == 0x000 and fm2 == 0x000000001fff3 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0xe; op2val:0x800000000001fff3; valaddr_reg:x16; val_offset:608; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 608, x17, x15, 608, x18)

inst_166:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000019 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x000000000ffe8 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x19; op2val:0x800000000000ffe8; valaddr_reg:x16; val_offset:624; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 624, x17, x15, 624, x18)

inst_167:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000002c and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000007fd5 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x2c; op2val:0x8000000000007fd5; valaddr_reg:x16; val_offset:640; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 640, x17, x15, 640, x18)

inst_168:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000028 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000003fd9 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x28; op2val:0x8000000000003fd9; valaddr_reg:x16; val_offset:656; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 656, x17, x15, 656, x18)

inst_169:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000000f and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000001ff2 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0xf; op2val:0x8000000000001ff2; valaddr_reg:x16; val_offset:672; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 672, x17, x15, 672, x18)

inst_170:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000040 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000fc1 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x40; op2val:0x8000000000000fc1; valaddr_reg:x16; val_offset:688; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 688, x17, x15, 688, x18)

inst_171:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000005a and fs2 == 1 and fe2 == 0x000 and fm2 == 0x00000000007a7 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x5a; op2val:0x80000000000007a7; valaddr_reg:x16; val_offset:704; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 704, x17, x15, 704, x18)

inst_172:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000026 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x00000000003db and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x26; op2val:0x80000000000003db; valaddr_reg:x16; val_offset:720; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 720, x17, x15, 720, x18)

inst_173:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000053 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x00000000001ae and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x53; op2val:0x80000000000001ae; valaddr_reg:x16; val_offset:736; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 736, x17, x15, 736, x18)

inst_174:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000055 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x00000000000ac and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x55; op2val:0x80000000000000ac; valaddr_reg:x16; val_offset:752; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 752, x17, x15, 752, x18)

inst_175:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000044 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x000000000003d and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x44; op2val:0x800000000000003d; valaddr_reg:x16; val_offset:768; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 768, x17, x15, 768, x18)

inst_176:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000015 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x000000000002c and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x15; op2val:0x800000000000002c; valaddr_reg:x16; val_offset:784; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 784, x17, x15, 784, x18)

inst_177:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000009 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000018 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x9; op2val:0x8000000000000018; valaddr_reg:x16; val_offset:800; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 800, x17, x15, 800, x18)

inst_178:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000002d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x000000000001c and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x2d; op2val:0x1c; valaddr_reg:x16; val_offset:816; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 816, x17, x15, 816, x18)

inst_179:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000050 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000047 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x50; op2val:0x47; valaddr_reg:x16; val_offset:832; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 832, x17, x15, 832, x18)

inst_180:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x000000000001e and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x23; op2val:0x1e; valaddr_reg:x16; val_offset:848; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 848, x17, x15, 848, x18)

inst_181:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000024 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000021 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x24; op2val:0x21; valaddr_reg:x16; val_offset:864; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 864, x17, x15, 864, x18)

inst_182:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000061 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000061 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x61; op2val:0x61; valaddr_reg:x16; val_offset:880; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 880, x17, x15, 880, x18)

inst_183:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x000000000003a and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x000000020001d and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x3f8000000000003a; op2val:0x3f9000000020001d; valaddr_reg:x16; val_offset:896; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 896, x17, x15, 896, x18)

inst_184:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x000000000000b and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x0000000100006 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x3f8000000000000b; op2val:0x3f90000000100006; valaddr_reg:x16; val_offset:912; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 912, x17, x15, 912, x18)

inst_185:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000057 and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x000000008002c and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x3f80000000000057; op2val:0x3f9000000008002c; valaddr_reg:x16; val_offset:928; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 928, x17, x15, 928, x18)

inst_186:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000021 and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x0000000040010 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x3f80000000000021; op2val:0x3f90000000040010; valaddr_reg:x16; val_offset:944; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 944, x17, x15, 944, x18)

inst_187:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x000000000000c and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x0000000020006 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x3f8000000000000c; op2val:0x3f90000000020006; valaddr_reg:x16; val_offset:960; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 960, x17, x15, 960, x18)

inst_188:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x000000000004b and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x0000000010026 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x3f8000000000004b; op2val:0x3f90000000010026; valaddr_reg:x16; val_offset:976; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 976, x17, x15, 976, x18)

inst_189:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000017 and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x000000000800c and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x3f80000000000017; op2val:0x3f9000000000800c; valaddr_reg:x16; val_offset:992; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 992, x17, x15, 992, x18)

inst_190:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x000000000001e and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x000000000400f and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x3f8000000000001e; op2val:0x3f9000000000400f; valaddr_reg:x16; val_offset:1008; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1008, x17, x15, 1008, x18)

inst_191:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x000000000004d and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x0000000002026 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x3f8000000000004d; op2val:0x3f90000000002026; valaddr_reg:x16; val_offset:1024; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1024, x17, x15, 1024, x18)

inst_192:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x000000000002b and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x0000000001016 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x3f8000000000002b; op2val:0x3f90000000001016; valaddr_reg:x16; val_offset:1040; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1040, x17, x15, 1040, x18)

inst_193:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000050 and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x0000000000828 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x3f80000000000050; op2val:0x3f90000000000828; valaddr_reg:x16; val_offset:1056; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1056, x17, x15, 1056, x18)

inst_194:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000045 and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x0000000000422 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x3f80000000000045; op2val:0x3f90000000000422; valaddr_reg:x16; val_offset:1072; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1072, x17, x15, 1072, x18)

inst_195:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x000000000002d and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x0000000000216 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x3f8000000000002d; op2val:0x3f90000000000216; valaddr_reg:x16; val_offset:1088; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1088, x17, x15, 1088, x18)

inst_196:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x000000000002e and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x0000000000117 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x3f8000000000002e; op2val:0x3f90000000000117; valaddr_reg:x16; val_offset:1104; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1104, x17, x15, 1104, x18)

inst_197:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000035 and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x000000000009a and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x3f80000000000035; op2val:0x3f9000000000009a; valaddr_reg:x16; val_offset:1120; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1120, x17, x15, 1120, x18)

inst_198:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x000000000001a and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x000000000004d and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x3f8000000000001a; op2val:0x3f9000000000004d; valaddr_reg:x16; val_offset:1136; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1136, x17, x15, 1136, x18)

inst_199:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000049 and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x0000000000044 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x3f80000000000049; op2val:0x3f90000000000044; valaddr_reg:x16; val_offset:1152; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1152, x17, x15, 1152, x18)

inst_200:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x000000000003e and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x000000000002f and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x3f8000000000003e; op2val:0x3f9000000000002f; valaddr_reg:x16; val_offset:1168; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1168, x17, x15, 1168, x18)

inst_201:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000037 and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x0000000000024 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x3f80000000000037; op2val:0x3f90000000000024; valaddr_reg:x16; val_offset:1184; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1184, x17, x15, 1184, x18)

inst_202:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000048 and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x0000000000028 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x3f80000000000048; op2val:0x3f90000000000028; valaddr_reg:x16; val_offset:1200; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1200, x17, x15, 1200, x18)

inst_203:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000011 and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x000000000000a and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x3f80000000000011; op2val:0x3f9000000000000a; valaddr_reg:x16; val_offset:1216; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1216, x17, x15, 1216, x18)

inst_204:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x000000000005f and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x0000000000030 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x3f8000000000005f; op2val:0x3f90000000000030; valaddr_reg:x16; val_offset:1232; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1232, x17, x15, 1232, x18)

inst_205:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x3f80000000000001; op2val:0x3f90000000000001; valaddr_reg:x16; val_offset:1248; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1248, x17, x15, 1248, x18)

inst_206:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x000000000004e and fs2 == 1 and fe2 == 0x3e0 and fm2 == 0xfffd900000000 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff000000000004e; op2val:0xbe0fffd900000000; valaddr_reg:x16; val_offset:1264; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1264, x17, x15, 1264, x18)

inst_207:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000055 and fs2 == 1 and fe2 == 0x3df and fm2 == 0xfffab00000000 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000055; op2val:0xbdffffab00000000; valaddr_reg:x16; val_offset:1280; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1280, x17, x15, 1280, x18)

inst_208:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x000000000003b and fs2 == 1 and fe2 == 0x3de and fm2 == 0xfff8a00000000 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff000000000003b; op2val:0xbdefff8a00000000; valaddr_reg:x16; val_offset:1296; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1296, x17, x15, 1296, x18)

inst_209:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x000000000004a and fs2 == 1 and fe2 == 0x3dd and fm2 == 0xffed800000000 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff000000000004a; op2val:0xbddffed800000000; valaddr_reg:x16; val_offset:1312; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1312, x17, x15, 1312, x18)

inst_210:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000042 and fs2 == 1 and fe2 == 0x3dc and fm2 == 0xffdf000000000 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000042; op2val:0xbdcffdf000000000; valaddr_reg:x16; val_offset:1328; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1328, x17, x15, 1328, x18)

inst_211:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x000000000001e and fs2 == 1 and fe2 == 0x3db and fm2 == 0xffe2000000000 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff000000000001e; op2val:0xbdbffe2000000000; valaddr_reg:x16; val_offset:1344; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1344, x17, x15, 1344, x18)

inst_212:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000046 and fs2 == 1 and fe2 == 0x3da and fm2 == 0xff74000000000 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000046; op2val:0xbdaff74000000000; valaddr_reg:x16; val_offset:1360; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1360, x17, x15, 1360, x18)

inst_213:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000063 and fs2 == 1 and fe2 == 0x3d9 and fm2 == 0xfe74000000000 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000063; op2val:0xbd9fe74000000000; valaddr_reg:x16; val_offset:1376; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1376, x17, x15, 1376, x18)

inst_214:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x000000000001e and fs2 == 1 and fe2 == 0x3d8 and fm2 == 0xff10000000000 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff000000000001e; op2val:0xbd8ff10000000000; valaddr_reg:x16; val_offset:1392; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1392, x17, x15, 1392, x18)

inst_215:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000016 and fs2 == 1 and fe2 == 0x3d7 and fm2 == 0xfea0000000000 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000016; op2val:0xbd7fea0000000000; valaddr_reg:x16; val_offset:1408; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1408, x17, x15, 1408, x18)

inst_216:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000053 and fs2 == 1 and fe2 == 0x3d6 and fm2 == 0xf5a0000000000 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000053; op2val:0xbd6f5a0000000000; valaddr_reg:x16; val_offset:1424; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1424, x17, x15, 1424, x18)

inst_217:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x000000000004b and fs2 == 1 and fe2 == 0x3d5 and fm2 == 0xed40000000000 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff000000000004b; op2val:0xbd5ed40000000000; valaddr_reg:x16; val_offset:1440; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1440, x17, x15, 1440, x18)

inst_218:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x000000000004f and fs2 == 1 and fe2 == 0x3d4 and fm2 == 0xd880000000000 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff000000000004f; op2val:0xbd4d880000000000; valaddr_reg:x16; val_offset:1456; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1456, x17, x15, 1456, x18)

inst_219:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000028 and fs2 == 1 and fe2 == 0x3d3 and fm2 == 0xd800000000000 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000028; op2val:0xbd3d800000000000; valaddr_reg:x16; val_offset:1472; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1472, x17, x15, 1472, x18)

inst_220:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x000000000003d and fs2 == 1 and fe2 == 0x3d2 and fm2 == 0x8600000000000 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff000000000003d; op2val:0xbd28600000000000; valaddr_reg:x16; val_offset:1488; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1488, x17, x15, 1488, x18)

inst_221:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x000000000005e and fs2 == 1 and fe2 == 0x3d0 and fm2 == 0x1000000000000 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff000000000005e; op2val:0xbd01000000000000; valaddr_reg:x16; val_offset:1504; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1504, x17, x15, 1504, x18)

inst_222:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000030 and fs2 == 1 and fe2 == 0x3cf and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000030; op2val:0xbcf0000000000000; valaddr_reg:x16; val_offset:1520; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1520, x17, x15, 1520, x18)

inst_223:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000043 and fs2 == 0 and fe2 == 0x3d0 and fm2 == 0x1800000000000 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000043; op2val:0x3d01800000000000; valaddr_reg:x16; val_offset:1536; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1536, x17, x15, 1536, x18)

inst_224:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x000000000000e and fs2 == 1 and fe2 == 0x3cc and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff000000000000e; op2val:0xbcc0000000000000; valaddr_reg:x16; val_offset:1552; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1552, x17, x15, 1552, x18)

inst_225:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000055 and fs2 == 0 and fe2 == 0x3d1 and fm2 == 0x3400000000000 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000055; op2val:0x3d13400000000000; valaddr_reg:x16; val_offset:1568; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1568, x17, x15, 1568, x18)

inst_226:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x000000000000c and fs2 == 0 and fe2 == 0x3ce and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff000000000000c; op2val:0x3ce0000000000000; valaddr_reg:x16; val_offset:1584; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1584, x17, x15, 1584, x18)

inst_227:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x000000000005f and fs2 == 0 and fe2 == 0x3d1 and fm2 == 0x7400000000000 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff000000000005f; op2val:0x3d17400000000000; valaddr_reg:x16; val_offset:1600; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1600, x17, x15, 1600, x18)

inst_228:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x000000000005a and fs2 == 0 and fe2 == 0x3d1 and fm2 == 0x6400000000000 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff000000000005a; op2val:0x3d16400000000000; valaddr_reg:x16; val_offset:1616; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1616, x17, x15, 1616, x18)

inst_229:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000002f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x000000040002f and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x2f; op2val:0x40002f; valaddr_reg:x16; val_offset:1632; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1632, x17, x15, 1632, x18)

inst_230:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000056 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000200056 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x56; op2val:0x200056; valaddr_reg:x16; val_offset:1648; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1648, x17, x15, 1648, x18)

inst_231:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000034 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000100034 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x34; op2val:0x100034; valaddr_reg:x16; val_offset:1664; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1664, x17, x15, 1664, x18)

inst_232:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000020 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000080020 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x20; op2val:0x80020; valaddr_reg:x16; val_offset:1680; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1680, x17, x15, 1680, x18)

inst_233:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000040005 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x5; op2val:0x40005; valaddr_reg:x16; val_offset:1696; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1696, x17, x15, 1696, x18)

inst_234:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000020033 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x33; op2val:0x20033; valaddr_reg:x16; val_offset:1712; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1712, x17, x15, 1712, x18)

inst_235:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000040 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000010040 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x40; op2val:0x10040; valaddr_reg:x16; val_offset:1728; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1728, x17, x15, 1728, x18)

inst_236:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000025 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008025 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x25; op2val:0x8025; valaddr_reg:x16; val_offset:1744; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1744, x17, x15, 1744, x18)

inst_237:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000004019 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x19; op2val:0x4019; valaddr_reg:x16; val_offset:1760; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1760, x17, x15, 1760, x18)

inst_238:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000041 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000002041 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x41; op2val:0x2041; valaddr_reg:x16; val_offset:1776; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1776, x17, x15, 1776, x18)

inst_239:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000041 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000001041 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x41; op2val:0x1041; valaddr_reg:x16; val_offset:1792; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1792, x17, x15, 1792, x18)

inst_240:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000005d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x000000000085d and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x5d; op2val:0x85d; valaddr_reg:x16; val_offset:1808; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1808, x17, x15, 1808, x18)

inst_241:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000060 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000460 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x60; op2val:0x460; valaddr_reg:x16; val_offset:1824; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1824, x17, x15, 1824, x18)

inst_242:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000026 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000226 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x26; op2val:0x226; valaddr_reg:x16; val_offset:1840; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1840, x17, x15, 1840, x18)

inst_243:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000051 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000151 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x51; op2val:0x151; valaddr_reg:x16; val_offset:1856; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1856, x17, x15, 1856, x18)

inst_244:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000000d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x000000000008d and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0xd; op2val:0x8d; valaddr_reg:x16; val_offset:1872; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1872, x17, x15, 1872, x18)

inst_245:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000048 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000088 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x48; op2val:0x88; valaddr_reg:x16; val_offset:1888; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1888, x17, x15, 1888, x18)

inst_246:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000003 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000023 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x3; op2val:0x23; valaddr_reg:x16; val_offset:1904; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1904, x17, x15, 1904, x18)

inst_247:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000003b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x000000000004b and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x3b; op2val:0x4b; valaddr_reg:x16; val_offset:1920; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1920, x17, x15, 1920, x18)

inst_248:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000001d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000025 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x1d; op2val:0x25; valaddr_reg:x16; val_offset:1936; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1936, x17, x15, 1936, x18)

inst_249:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000001e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000022 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x1e; op2val:0x22; valaddr_reg:x16; val_offset:1952; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1952, x17, x15, 1952, x18)

inst_250:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000001e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000020 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x1e; op2val:0x20; valaddr_reg:x16; val_offset:1968; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1968, x17, x15, 1968, x18)

inst_251:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000040 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000041 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x40; op2val:0x41; valaddr_reg:x16; val_offset:1984; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 1984, x17, x15, 1984, x18)

inst_252:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000062 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x00000003fff9e and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x62; op2val:0x80000000003fff9e; valaddr_reg:x16; val_offset:2000; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 2000, x17, x15, 2000, x18)

inst_253:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000044 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x00000001fffbc and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x44; op2val:0x80000000001fffbc; valaddr_reg:x16; val_offset:2016; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 2016, x17, x15, 2016, x18)
addi x16,x16,2032
RVTEST_SIGBASE(x15,signature_x15_3)

inst_254:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000005d and fs2 == 1 and fe2 == 0x000 and fm2 == 0x00000000fffa3 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x5d; op2val:0x80000000000fffa3; valaddr_reg:x16; val_offset:0; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_255:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000001c and fs2 == 1 and fe2 == 0x000 and fm2 == 0x000000007ffe4 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x1c; op2val:0x800000000007ffe4; valaddr_reg:x16; val_offset:16; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 16, x17, x15, 16, x18)

inst_256:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000031 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x000000003ffcf and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x31; op2val:0x800000000003ffcf; valaddr_reg:x16; val_offset:32; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 32, x17, x15, 32, x18)

inst_257:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000046 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x000000001ffba and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x46; op2val:0x800000000001ffba; valaddr_reg:x16; val_offset:48; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 48, x17, x15, 48, x18)

inst_258:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000004 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x000000000fffc and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x4; op2val:0x800000000000fffc; valaddr_reg:x16; val_offset:64; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 64, x17, x15, 64, x18)

inst_259:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000004 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000007ffc and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x4; op2val:0x8000000000007ffc; valaddr_reg:x16; val_offset:80; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 80, x17, x15, 80, x18)

inst_260:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000000e and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000003ff2 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0xe; op2val:0x8000000000003ff2; valaddr_reg:x16; val_offset:96; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 96, x17, x15, 96, x18)

inst_261:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000001e and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000001fe2 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x1e; op2val:0x8000000000001fe2; valaddr_reg:x16; val_offset:112; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 112, x17, x15, 112, x18)

inst_262:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000023 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000fdd and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x23; op2val:0x8000000000000fdd; valaddr_reg:x16; val_offset:128; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 128, x17, x15, 128, x18)

inst_263:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000005a and fs2 == 1 and fe2 == 0x000 and fm2 == 0x00000000007a6 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x5a; op2val:0x80000000000007a6; valaddr_reg:x16; val_offset:144; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 144, x17, x15, 144, x18)

inst_264:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000063 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x000000000039d and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x63; op2val:0x800000000000039d; valaddr_reg:x16; val_offset:160; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 160, x17, x15, 160, x18)

inst_265:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000004e and fs2 == 1 and fe2 == 0x000 and fm2 == 0x00000000001b2 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x4e; op2val:0x80000000000001b2; valaddr_reg:x16; val_offset:176; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 176, x17, x15, 176, x18)

inst_266:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000032 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x00000000000ce and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x32; op2val:0x80000000000000ce; valaddr_reg:x16; val_offset:192; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 192, x17, x15, 192, x18)

inst_267:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000003f and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000041 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x3f; op2val:0x8000000000000041; valaddr_reg:x16; val_offset:208; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 208, x17, x15, 208, x18)

inst_268:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000001b and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000025 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x1b; op2val:0x8000000000000025; valaddr_reg:x16; val_offset:224; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 224, x17, x15, 224, x18)

inst_269:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000054 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000034 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x54; op2val:0x34; valaddr_reg:x16; val_offset:240; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 240, x17, x15, 240, x18)

inst_270:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000003a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x000000000002a and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x3a; op2val:0x2a; valaddr_reg:x16; val_offset:256; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 256, x17, x15, 256, x18)

inst_271:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000040 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000038 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x40; op2val:0x38; valaddr_reg:x16; val_offset:272; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 272, x17, x15, 272, x18)

inst_272:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000021 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x000000000001d and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x21; op2val:0x1d; valaddr_reg:x16; val_offset:288; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 288, x17, x15, 288, x18)

inst_273:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000062 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000060 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x62; op2val:0x60; valaddr_reg:x16; val_offset:304; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 304, x17, x15, 304, x18)

inst_274:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000033 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fe0000000000033; op2val:0x7ff0000000000000; valaddr_reg:x16; val_offset:320; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 320, x17, x15, 320, x18)

inst_275:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000039 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fe0000000000039; op2val:0x7ff0000000000000; valaddr_reg:x16; val_offset:336; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 336, x17, x15, 336, x18)

inst_276:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000021 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fsub.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fe0000000000021; op2val:0x7ff0000000000000; valaddr_reg:x16; val_offset:352; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fsub.d, f12, f10, f11, 0x0, 0, x16, 352, x17, x15, 352, x18)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_fp:
.dword 0x12
.dword 0x11
.dword 0x7fe0000000000033
.dword 0x7fe0000000000033
.dword 0x7fe000000000003b
.dword 0x7ff0000000000000
.dword 0x7fe0000000000039
.dword 0x7ff0000000000000
.dword 0x7fe0000000000021
.dword 0x7fe0000000000021
.dword 0x7fe0000000000038
.dword 0x7ff0000000000000
.dword 0x7fe0000000000058
.dword 0x7ff0000000000000
.dword 0x7fe0000000000056
.dword 0x7ff0000000000000
.dword 0x7fe0000000000007
.dword 0x7ff0000000000000
.dword 0x7fe0000000000045
.dword 0x7ff0000000000000
.dword 0x7fe0000000000027
.dword 0x7ff0000000000000
.dword 0x7fe000000000001b
.dword 0x7ff0000000000000
.dword 0x7fe0000000000060
.dword 0x7ff0000000000000
.dword 0x7fe0000000000057
.dword 0x7ff0000000000000
.dword 0x7fe0000000000029
.dword 0x7ff0000000000000
.dword 0x7fe000000000005d
.dword 0x7ff0000000000000
.dword 0x7fe0000000000013
.dword 0x7ff0000000000000
.dword 0x7fe0000000000011
.dword 0x7ff0000000000000
.dword 0x7fe000000000004e
.dword 0x7ff0000000000000
.dword 0x7fe000000000005b
.dword 0x7ff0000000000000
.dword 0x7fe0000000000028
.dword 0x7ff0000000000000
.dword 0x7fe0000000000017
.dword 0x7ff0000000000000
.dword 0x7fe0000000000056
.dword 0xffdfffffff7fff52
.dword 0x7fe000000000000a
.dword 0xffdfffffffbfffea
.dword 0x7fe0000000000041
.dword 0xffdfffffffdfff7c
.dword 0x7fe0000000000014
.dword 0xffdfffffffefffd6
.dword 0x7fe0000000000040
.dword 0xffdffffffff7ff7e
.dword 0x7fe0000000000061
.dword 0xffdffffffffbff3c
.dword 0x7fe0000000000002
.dword 0xffdffffffffdfffa
.dword 0x7fe0000000000003
.dword 0xffdffffffffefff8
.dword 0x7fe000000000005e
.dword 0xffdfffffffff7f42
.dword 0x7fe0000000000047
.dword 0xffdfffffffffbf70
.dword 0x7fe000000000000a
.dword 0xffdfffffffffdfea
.dword 0x7fe0000000000020
.dword 0xffdfffffffffefbe
.dword 0x7fe000000000001d
.dword 0xffdffffffffff7c4
.dword 0x7fe000000000000c
.dword 0xffdffffffffffbe6
.dword 0x7fe000000000004b
.dword 0xffdffffffffffd68
.dword 0x7fe0000000000046
.dword 0xffdffffffffffe72
.dword 0x7fe000000000002b
.dword 0xffdfffffffffff28
.dword 0x7fe0000000000027
.dword 0xffdfffffffffff70
.dword 0x7fe0000000000029
.dword 0xffdfffffffffff8c
.dword 0x7fe000000000002a
.dword 0xffdfffffffffff9a
.dword 0x7fe0000000000028
.dword 0xffdfffffffffffa6
.dword 0x7fe000000000001e
.dword 0xffdfffffffffffbe
.dword 0x7fe0000000000053
.dword 0xffdfffffffffff56
.dword 0x10000000000054
.dword 0x2000000020002a
.dword 0x1000000000003a
.dword 0x2000000010001d
.dword 0x1000000000000c
.dword 0x20000000080006
.dword 0x1000000000000b
.dword 0x20000000040006
.dword 0x10000000000020
.dword 0x20000000020010
.dword 0x10000000000028
.dword 0x20000000010014
.dword 0x10000000000046
.dword 0x20000000008023
.dword 0x10000000000022
.dword 0x20000000004011
.dword 0x10000000000055
.dword 0x2000000000202a
.dword 0x10000000000059
.dword 0x2000000000102c
.dword 0x10000000000050
.dword 0x20000000000828
.dword 0x10000000000021
.dword 0x20000000000410
.dword 0x1000000000003b
.dword 0x2000000000021e
.dword 0x10000000000029
.dword 0x20000000000114
.dword 0x10000000000009
.dword 0x20000000000084
.dword 0x10000000000029
.dword 0x20000000000054
.dword 0x1000000000003a
.dword 0x2000000000003d
.dword 0x1000000000004d
.dword 0x20000000000036
.dword 0x10000000000026
.dword 0x2000000000001b
.dword 0x10000000000004
.dword 0x20000000000006
.dword 0x10000000000029
.dword 0x20000000000016
.dword 0x1000000000001b
.dword 0x2000000000000e
.dword 0x10000000000029
.dword 0x20000000000015
.dword 0x1000000000005c
.dword 0x80000000003fffa4
.dword 0x10000000000047
.dword 0x80000000001fffb9
.dword 0x10000000000046
.dword 0x80000000000fffba
.dword 0x10000000000038
.dword 0x800000000007ffc8
.dword 0x10000000000060
.dword 0x800000000003ffa0
.dword 0x1000000000001f
.dword 0x800000000001ffe1
.dword 0x10000000000016
.dword 0x800000000000ffea
.dword 0x1000000000000f
.dword 0x8000000000007ff1
.dword 0x10000000000036
.dword 0x8000000000003fca
.dword 0x1000000000001f
.dword 0x8000000000001fe1
.dword 0x10000000000006
.dword 0x8000000000000ffa
.dword 0x10000000000035
.dword 0x80000000000007cb
.dword 0x10000000000002
.dword 0x80000000000003fe
.dword 0x1000000000004f
.dword 0x80000000000001b1
.dword 0x10000000000026
.dword 0x80000000000000da
.dword 0x1000000000000e
.dword 0x8000000000000072
.dword 0x1000000000003b
.dword 0x8000000000000005
.dword 0x10000000000045
.dword 0x25
.dword 0x10000000000026
.dword 0x16
.dword 0x10000000000023
.dword 0x1b
.dword 0x10000000000049
.dword 0x45
.dword 0x10000000000047
.dword 0x45
.dword 0x1000000000000a
.dword 0x9
.dword 0x4c
.dword 0xfffffffc0004b
.dword 0xf
.dword 0xfffffffe0000e
.dword 0x11
.dword 0xffffffff00010
.dword 0x31
.dword 0xffffffff80030
.dword 0x35
.dword 0xffffffffc0034
.dword 0x2a
.dword 0xffffffffe0029
.dword 0x63
.dword 0xfffffffff0062
.dword 0x4b
.dword 0xfffffffff804a
.dword 0x3f
.dword 0xfffffffffc03e
.dword 0x4e
.dword 0xfffffffffe04d
.dword 0x26
.dword 0xffffffffff025
.dword 0x2c
.dword 0xffffffffff82b
.dword 0x30
.dword 0xffffffffffc2f
.dword 0x41
.dword 0xffffffffffe40
.dword 0x2b
.dword 0xfffffffffff2a
.dword 0x23
.dword 0xfffffffffffa2
.dword 0x45
.dword 0x10000000000004
.dword 0x16
.dword 0xffffffffffff5
.dword 0xb
.dword 0xffffffffffffa
.dword 0x5d
.dword 0x10000000000054
.dword 0x1f
.dword 0x1000000000001a
.dword 0x63
.dword 0x10000000000060
.dword 0x45
.dword 0x10000000000043
.dword 0x2d
.dword 0x800fffffffbfffd2
.dword 0x31
.dword 0x800fffffffdfffce
.dword 0x57
.dword 0x800fffffffefffa8
.dword 0x1c
.dword 0x800ffffffff7ffe3
.dword 0x2c
.dword 0x800ffffffffbffd3
.dword 0x49
.dword 0x800ffffffffdffb6
.dword 0x1a
.dword 0x800ffffffffeffe5
.dword 0x3
.dword 0x800fffffffff7ffc
.dword 0x34
.dword 0x800fffffffffbfcb
.dword 0x2a
.dword 0x800fffffffffdfd5
.dword 0x40
.dword 0x800fffffffffefbf
.dword 0x26
.dword 0x800ffffffffff7d9
.dword 0x56
.dword 0x800ffffffffffba9
.dword 0x40
.dword 0x800ffffffffffdbf
.dword 0x4c
.dword 0x800ffffffffffeb3
.dword 0x57
.dword 0x800fffffffffff28
.dword 0x1b
.dword 0x800fffffffffffa4
.dword 0x2d
.dword 0x800fffffffffffb2
.dword 0x31
.dword 0x800fffffffffffbe
.dword 0x42
.dword 0x800fffffffffffb5
.dword 0x5b
.dword 0x800fffffffffffa0
.dword 0x3b
.dword 0x800fffffffffffc2
.dword 0x1c
.dword 0x800fffffffffffe2
.dword 0x5
.dword 0x400006
.dword 0x2
.dword 0x200003
.dword 0x21
.dword 0x100022
.dword 0x36
.dword 0x80037
.dword 0x60
.dword 0x40061
.dword 0x28
.dword 0x20029
.dword 0xa
.dword 0x1000b
.dword 0x7
.dword 0x8008
.dword 0x11
.dword 0x4012
.dword 0x5f
.dword 0x2060
.dword 0x37
.dword 0x1038
.dword 0x55
.dword 0x856
.dword 0x4a
.dword 0x44b
.dword 0x33
.dword 0x234
.dword 0x54
.dword 0x155
.dword 0x1d
.dword 0x9e
.dword 0x43
.dword 0x84
.dword 0x51
.dword 0x72
.dword 0x46
.dword 0x57
.dword 0x57
.dword 0x60
.dword 0x5b
.dword 0x60
.dword 0x15
.dword 0x18
.dword 0x5
.dword 0x5
.dword 0x33
.dword 0x80000000003fffce
.dword 0x1d
.dword 0x80000000001fffe4
.dword 0x38
.dword 0x80000000000fffc9
.dword 0x1b
.dword 0x800000000007ffe6
.dword 0x5e
.dword 0x800000000003ffa3
.dword 0xe
.dword 0x800000000001fff3
.dword 0x19
.dword 0x800000000000ffe8
.dword 0x2c
.dword 0x8000000000007fd5
.dword 0x28
.dword 0x8000000000003fd9
.dword 0xf
.dword 0x8000000000001ff2
.dword 0x40
.dword 0x8000000000000fc1
.dword 0x5a
.dword 0x80000000000007a7
.dword 0x26
.dword 0x80000000000003db
.dword 0x53
.dword 0x80000000000001ae
.dword 0x55
.dword 0x80000000000000ac
.dword 0x44
.dword 0x800000000000003d
.dword 0x15
.dword 0x800000000000002c
.dword 0x9
.dword 0x8000000000000018
.dword 0x2d
.dword 0x1c
.dword 0x50
.dword 0x47
.dword 0x23
.dword 0x1e
.dword 0x24
.dword 0x21
.dword 0x61
.dword 0x61
.dword 0x3f8000000000003a
.dword 0x3f9000000020001d
.dword 0x3f8000000000000b
.dword 0x3f90000000100006
.dword 0x3f80000000000057
.dword 0x3f9000000008002c
.dword 0x3f80000000000021
.dword 0x3f90000000040010
.dword 0x3f8000000000000c
.dword 0x3f90000000020006
.dword 0x3f8000000000004b
.dword 0x3f90000000010026
.dword 0x3f80000000000017
.dword 0x3f9000000000800c
.dword 0x3f8000000000001e
.dword 0x3f9000000000400f
.dword 0x3f8000000000004d
.dword 0x3f90000000002026
.dword 0x3f8000000000002b
.dword 0x3f90000000001016
.dword 0x3f80000000000050
.dword 0x3f90000000000828
.dword 0x3f80000000000045
.dword 0x3f90000000000422
.dword 0x3f8000000000002d
.dword 0x3f90000000000216
.dword 0x3f8000000000002e
.dword 0x3f90000000000117
.dword 0x3f80000000000035
.dword 0x3f9000000000009a
.dword 0x3f8000000000001a
.dword 0x3f9000000000004d
.dword 0x3f80000000000049
.dword 0x3f90000000000044
.dword 0x3f8000000000003e
.dword 0x3f9000000000002f
.dword 0x3f80000000000037
.dword 0x3f90000000000024
.dword 0x3f80000000000048
.dword 0x3f90000000000028
.dword 0x3f80000000000011
.dword 0x3f9000000000000a
.dword 0x3f8000000000005f
.dword 0x3f90000000000030
.dword 0x3f80000000000001
.dword 0x3f90000000000001
.dword 0x3ff000000000004e
.dword 0xbe0fffd900000000
.dword 0x3ff0000000000055
.dword 0xbdffffab00000000
.dword 0x3ff000000000003b
.dword 0xbdefff8a00000000
.dword 0x3ff000000000004a
.dword 0xbddffed800000000
.dword 0x3ff0000000000042
.dword 0xbdcffdf000000000
.dword 0x3ff000000000001e
.dword 0xbdbffe2000000000
.dword 0x3ff0000000000046
.dword 0xbdaff74000000000
.dword 0x3ff0000000000063
.dword 0xbd9fe74000000000
.dword 0x3ff000000000001e
.dword 0xbd8ff10000000000
.dword 0x3ff0000000000016
.dword 0xbd7fea0000000000
.dword 0x3ff0000000000053
.dword 0xbd6f5a0000000000
.dword 0x3ff000000000004b
.dword 0xbd5ed40000000000
.dword 0x3ff000000000004f
.dword 0xbd4d880000000000
.dword 0x3ff0000000000028
.dword 0xbd3d800000000000
.dword 0x3ff000000000003d
.dword 0xbd28600000000000
.dword 0x3ff000000000005e
.dword 0xbd01000000000000
.dword 0x3ff0000000000030
.dword 0xbcf0000000000000
.dword 0x3ff0000000000043
.dword 0x3d01800000000000
.dword 0x3ff000000000000e
.dword 0xbcc0000000000000
.dword 0x3ff0000000000055
.dword 0x3d13400000000000
.dword 0x3ff000000000000c
.dword 0x3ce0000000000000
.dword 0x3ff000000000005f
.dword 0x3d17400000000000
.dword 0x3ff000000000005a
.dword 0x3d16400000000000
.dword 0x2f
.dword 0x40002f
.dword 0x56
.dword 0x200056
.dword 0x34
.dword 0x100034
.dword 0x20
.dword 0x80020
.dword 0x5
.dword 0x40005
.dword 0x33
.dword 0x20033
.dword 0x40
.dword 0x10040
.dword 0x25
.dword 0x8025
.dword 0x19
.dword 0x4019
.dword 0x41
.dword 0x2041
.dword 0x41
.dword 0x1041
.dword 0x5d
.dword 0x85d
.dword 0x60
.dword 0x460
.dword 0x26
.dword 0x226
.dword 0x51
.dword 0x151
.dword 0xd
.dword 0x8d
.dword 0x48
.dword 0x88
.dword 0x3
.dword 0x23
.dword 0x3b
.dword 0x4b
.dword 0x1d
.dword 0x25
.dword 0x1e
.dword 0x22
.dword 0x1e
.dword 0x20
.dword 0x40
.dword 0x41
.dword 0x62
.dword 0x80000000003fff9e
.dword 0x44
.dword 0x80000000001fffbc
.dword 0x5d
.dword 0x80000000000fffa3
.dword 0x1c
.dword 0x800000000007ffe4
.dword 0x31
.dword 0x800000000003ffcf
.dword 0x46
.dword 0x800000000001ffba
.dword 0x4
.dword 0x800000000000fffc
.dword 0x4
.dword 0x8000000000007ffc
.dword 0xe
.dword 0x8000000000003ff2
.dword 0x1e
.dword 0x8000000000001fe2
.dword 0x23
.dword 0x8000000000000fdd
.dword 0x5a
.dword 0x80000000000007a6
.dword 0x63
.dword 0x800000000000039d
.dword 0x4e
.dword 0x80000000000001b2
.dword 0x32
.dword 0x80000000000000ce
.dword 0x3f
.dword 0x8000000000000041
.dword 0x1b
.dword 0x8000000000000025
.dword 0x54
.dword 0x34
.dword 0x3a
.dword 0x2a
.dword 0x40
.dword 0x38
.dword 0x21
.dword 0x1d
.dword 0x62
.dword 0x60
.dword 0x7fe0000000000033
.dword 0x7ff0000000000000
.dword 0x7fe0000000000039
.dword 0x7ff0000000000000
.dword 0x7fe0000000000021
.dword 0x7ff0000000000000
RVTEST_DATA_END

RVMODEL_DATA_BEGIN


signature_x15_0:
    .fill 0*(XLEN/32),4,0xdeadbeef


signature_x15_1:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_2:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_3:
    .fill 46*(XLEN/32),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*(XLEN/32),4,0xdeadbeef

#endif

RVMODEL_DATA_END
