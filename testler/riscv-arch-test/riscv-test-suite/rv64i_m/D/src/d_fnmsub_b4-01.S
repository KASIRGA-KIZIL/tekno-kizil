
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.5.6
// timestamp : Mon Sep 20 11:14:16 2021 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/compliance_fd/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /scratch/compliance_fd/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV64D/rv64d_fnmsub1.cgf \
 \
//                  -- xlen 64  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2021. IIT Madras. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.d instruction of the RISC-V FD extension for the fnmsub_b4 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV64IFD")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*64.*);check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",d_fnmsub_b4)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x16,test_fp)
RVTEST_SIGBASE(x15,signature_x15_1)

inst_0:
// rs1 == rd == rs3 != rs2, rs1==f14, rs2==f1, rs3==f14, rd==f14, fs1 == 0 and fe1 == 0x7fb and fm1 == 0x6edc5cf85ef57 and fs2 == 1 and fe2 == 0x402 and fm2 == 0xb8f2e4f11fd26 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xdf9b50c24f6a7 and rm_val == 0  
// opcode: fnmsub.d ; op1:f14; op2:f1; op3:f14; dest:f14; op1val:0x7fb6edc5cf85ef57; op2val:0xc02b8f2e4f11fd26; op3val:0x7fb6edc5cf85ef57; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f14, f14, f1, f14, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_1:
// rs1 != rs2 and rs1 != rd and rs1 != rs3 and rs2 != rs3 and rs2 != rd and rs3 != rd, rs1==f4, rs2==f17, rs3==f13, rd==f10, fs1 == 0 and fe1 == 0x7fd and fm1 == 0x81f8e726306f5 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x49e96e9cad6d5 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xab2b7e6d25349 and rm_val == 4  
// opcode: fnmsub.d ; op1:f4; op2:f17; op3:f13; dest:f10; op1val:0x7fd81f8e726306f5; op2val:0xbf849e96e9cad6d5; op3val:0x7feab2b7e6d25349; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f10, f4, f17, f13, 0x4, 0, x16, 24, x17, x15, 16, x18)

inst_2:
// rs1 == rd != rs2 and rs1 == rd != rs3 and rs3 != rs2, rs1==f19, rs2==f0, rs3==f26, rd==f19, fs1 == 0 and fe1 == 0x7fd and fm1 == 0x81f8e726306f5 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x49e96e9cad6d5 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xab2b7e6d25349 and rm_val == 3  
// opcode: fnmsub.d ; op1:f19; op2:f0; op3:f26; dest:f19; op1val:0x7fd81f8e726306f5; op2val:0xbf849e96e9cad6d5; op3val:0x7feab2b7e6d25349; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f19, f19, f0, f26, 0x3, 0, x16, 48, x17, x15, 32, x18)

inst_3:
// rd == rs2 == rs3 != rs1, rs1==f30, rs2==f2, rs3==f2, rd==f2, fs1 == 0 and fe1 == 0x7fd and fm1 == 0x81f8e726306f5 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x49e96e9cad6d5 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xab2b7e6d25349 and rm_val == 2  
// opcode: fnmsub.d ; op1:f30; op2:f2; op3:f2; dest:f2; op1val:0x7fd81f8e726306f5; op2val:0xbf849e96e9cad6d5; op3val:0xbf849e96e9cad6d5; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f2, f30, f2, f2, 0x2, 0, x16, 72, x17, x15, 48, x18)

inst_4:
// rs1 == rs3 != rs2 and rs1 == rs3 != rd and rd != rs2, rs1==f24, rs2==f5, rs3==f24, rd==f18, fs1 == 0 and fe1 == 0x7fd and fm1 == 0x81f8e726306f5 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x49e96e9cad6d5 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xab2b7e6d25349 and rm_val == 1  
// opcode: fnmsub.d ; op1:f24; op2:f5; op3:f24; dest:f18; op1val:0x7fd81f8e726306f5; op2val:0xbf849e96e9cad6d5; op3val:0x7fd81f8e726306f5; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f18, f24, f5, f24, 0x1, 0, x16, 96, x17, x15, 64, x18)

inst_5:
// rs3 == rd != rs1 and rs3 == rd != rs2 and rs2 != rs1, rs1==f25, rs2==f3, rs3==f7, rd==f7, fs1 == 0 and fe1 == 0x7fd and fm1 == 0x81f8e726306f5 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x49e96e9cad6d5 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xab2b7e6d25349 and rm_val == 0  
// opcode: fnmsub.d ; op1:f25; op2:f3; op3:f7; dest:f7; op1val:0x7fd81f8e726306f5; op2val:0xbf849e96e9cad6d5; op3val:0x7feab2b7e6d25349; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f7, f25, f3, f7, 0x0, 0, x16, 120, x17, x15, 80, x18)

inst_6:
// rs1 == rs2 == rs3 != rd, rs1==f29, rs2==f29, rs3==f29, rd==f1, fs1 == 0 and fe1 == 0x7fd and fm1 == 0x113f1b844ec29 and fs2 == 1 and fe2 == 0x402 and fm2 == 0x194cca6feaee6 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xb19041a09c655 and rm_val == 4  
// opcode: fnmsub.d ; op1:f29; op2:f29; op3:f29; dest:f1; op1val:0x7fd113f1b844ec29; op2val:0x7fd113f1b844ec29; op3val:0x7fd113f1b844ec29; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f1, f29, f29, f29, 0x4, 0, x16, 144, x17, x15, 96, x18)

inst_7:
// rs1 == rs2 == rd != rs3, rs1==f21, rs2==f21, rs3==f10, rd==f21, fs1 == 0 and fe1 == 0x7fd and fm1 == 0x113f1b844ec29 and fs2 == 1 and fe2 == 0x402 and fm2 == 0x194cca6feaee6 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xb19041a09c655 and rm_val == 3  
// opcode: fnmsub.d ; op1:f21; op2:f21; op3:f10; dest:f21; op1val:0x7fd113f1b844ec29; op2val:0x7fd113f1b844ec29; op3val:0x7fdb19041a09c655; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f21, f21, f21, f10, 0x3, 0, x16, 168, x17, x15, 112, x18)

inst_8:
// rs1 == rs2 == rs3 == rd, rs1==f11, rs2==f11, rs3==f11, rd==f11, fs1 == 0 and fe1 == 0x7fd and fm1 == 0x113f1b844ec29 and fs2 == 1 and fe2 == 0x402 and fm2 == 0x194cca6feaee6 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xb19041a09c655 and rm_val == 2  
// opcode: fnmsub.d ; op1:f11; op2:f11; op3:f11; dest:f11; op1val:0x7fd113f1b844ec29; op2val:0x7fd113f1b844ec29; op3val:0x7fd113f1b844ec29; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f11, f11, f11, f11, 0x2, 0, x16, 192, x17, x15, 128, x18)

inst_9:
// rs2 == rs3 != rs1 and rs2 == rs3 != rd and rd != rs1, rs1==f5, rs2==f30, rs3==f30, rd==f17, fs1 == 0 and fe1 == 0x7fd and fm1 == 0x113f1b844ec29 and fs2 == 1 and fe2 == 0x402 and fm2 == 0x194cca6feaee6 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xb19041a09c655 and rm_val == 1  
// opcode: fnmsub.d ; op1:f5; op2:f30; op3:f30; dest:f17; op1val:0x7fd113f1b844ec29; op2val:0xc02194cca6feaee6; op3val:0xc02194cca6feaee6; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f17, f5, f30, f30, 0x1, 0, x16, 216, x17, x15, 144, x18)

inst_10:
// rs1 == rs2 != rs3 and rs1 == rs2 != rd and rd != rs3, rs1==f31, rs2==f31, rs3==f18, rd==f24, fs1 == 0 and fe1 == 0x7fd and fm1 == 0x113f1b844ec29 and fs2 == 1 and fe2 == 0x402 and fm2 == 0x194cca6feaee6 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xb19041a09c655 and rm_val == 0  
// opcode: fnmsub.d ; op1:f31; op2:f31; op3:f18; dest:f24; op1val:0x7fd113f1b844ec29; op2val:0x7fd113f1b844ec29; op3val:0x7fdb19041a09c655; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f24, f31, f31, f18, 0x0, 0, x16, 240, x17, x15, 160, x18)

inst_11:
// rs2 == rd != rs1 and rs2 == rd != rs3 and rs3 != rs1, rs1==f0, rs2==f26, rs3==f31, rd==f26, fs1 == 0 and fe1 == 0x7f8 and fm1 == 0x867824bb36ebf and fs2 == 0 and fe2 == 0x407 and fm2 == 0x8295552baee7e and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x5f78051c221f1 and rm_val == 4  
// opcode: fnmsub.d ; op1:f0; op2:f26; op3:f31; dest:f26; op1val:0x7f8867824bb36ebf; op2val:0x4078295552baee7e; op3val:0x7fd5f78051c221f1; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f26, f0, f26, f31, 0x4, 0, x16, 264, x17, x15, 176, x18)

inst_12:
// rs1==f22, rs2==f10, rs3==f21, rd==f28, fs1 == 0 and fe1 == 0x7f8 and fm1 == 0x867824bb36ebf and fs2 == 0 and fe2 == 0x407 and fm2 == 0x8295552baee7e and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x5f78051c221f1 and rm_val == 3  
// opcode: fnmsub.d ; op1:f22; op2:f10; op3:f21; dest:f28; op1val:0x7f8867824bb36ebf; op2val:0x4078295552baee7e; op3val:0x7fd5f78051c221f1; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f28, f22, f10, f21, 0x3, 0, x16, 288, x17, x15, 192, x18)

inst_13:
// rs1==f23, rs2==f13, rs3==f16, rd==f27, fs1 == 0 and fe1 == 0x7f8 and fm1 == 0x867824bb36ebf and fs2 == 0 and fe2 == 0x407 and fm2 == 0x8295552baee7e and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x5f78051c221f1 and rm_val == 2  
// opcode: fnmsub.d ; op1:f23; op2:f13; op3:f16; dest:f27; op1val:0x7f8867824bb36ebf; op2val:0x4078295552baee7e; op3val:0x7fd5f78051c221f1; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f27, f23, f13, f16, 0x2, 0, x16, 312, x17, x15, 208, x18)

inst_14:
// rs1==f8, rs2==f28, rs3==f25, rd==f6, fs1 == 0 and fe1 == 0x7f8 and fm1 == 0x867824bb36ebf and fs2 == 0 and fe2 == 0x407 and fm2 == 0x8295552baee7e and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x5f78051c221f1 and rm_val == 1  
// opcode: fnmsub.d ; op1:f8; op2:f28; op3:f25; dest:f6; op1val:0x7f8867824bb36ebf; op2val:0x4078295552baee7e; op3val:0x7fd5f78051c221f1; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f6, f8, f28, f25, 0x1, 0, x16, 336, x17, x15, 224, x18)

inst_15:
// rs1==f2, rs2==f25, rs3==f0, rd==f8, fs1 == 0 and fe1 == 0x7f8 and fm1 == 0x867824bb36ebf and fs2 == 0 and fe2 == 0x407 and fm2 == 0x8295552baee7e and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x5f78051c221f1 and rm_val == 0  
// opcode: fnmsub.d ; op1:f2; op2:f25; op3:f0; dest:f8; op1val:0x7f8867824bb36ebf; op2val:0x4078295552baee7e; op3val:0x7fd5f78051c221f1; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f8, f2, f25, f0, 0x0, 0, x16, 360, x17, x15, 240, x18)

inst_16:
// rs1==f9, rs2==f23, rs3==f5, rd==f25, fs1 == 0 and fe1 == 0x7fc and fm1 == 0xc277c8581da67 and fs2 == 1 and fe2 == 0x403 and fm2 == 0x5b5bea83c3f5c and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xf37aa6e86c68b and rm_val == 4  
// opcode: fnmsub.d ; op1:f9; op2:f23; op3:f5; dest:f25; op1val:0x7fcc277c8581da67; op2val:0xc035b5bea83c3f5c; op3val:0x7fcf37aa6e86c68b; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f25, f9, f23, f5, 0x4, 0, x16, 384, x17, x15, 256, x18)

inst_17:
// rs1==f16, rs2==f20, rs3==f9, rd==f12, fs1 == 0 and fe1 == 0x7fc and fm1 == 0xc277c8581da67 and fs2 == 1 and fe2 == 0x403 and fm2 == 0x5b5bea83c3f5c and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xf37aa6e86c68b and rm_val == 3  
// opcode: fnmsub.d ; op1:f16; op2:f20; op3:f9; dest:f12; op1val:0x7fcc277c8581da67; op2val:0xc035b5bea83c3f5c; op3val:0x7fcf37aa6e86c68b; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f12, f16, f20, f9, 0x3, 0, x16, 408, x17, x15, 272, x18)

inst_18:
// rs1==f18, rs2==f6, rs3==f20, rd==f23, fs1 == 0 and fe1 == 0x7fc and fm1 == 0xc277c8581da67 and fs2 == 1 and fe2 == 0x403 and fm2 == 0x5b5bea83c3f5c and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xf37aa6e86c68b and rm_val == 2  
// opcode: fnmsub.d ; op1:f18; op2:f6; op3:f20; dest:f23; op1val:0x7fcc277c8581da67; op2val:0xc035b5bea83c3f5c; op3val:0x7fcf37aa6e86c68b; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f23, f18, f6, f20, 0x2, 0, x16, 432, x17, x15, 288, x18)

inst_19:
// rs1==f20, rs2==f14, rs3==f22, rd==f9, fs1 == 0 and fe1 == 0x7fc and fm1 == 0xc277c8581da67 and fs2 == 1 and fe2 == 0x403 and fm2 == 0x5b5bea83c3f5c and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xf37aa6e86c68b and rm_val == 1  
// opcode: fnmsub.d ; op1:f20; op2:f14; op3:f22; dest:f9; op1val:0x7fcc277c8581da67; op2val:0xc035b5bea83c3f5c; op3val:0x7fcf37aa6e86c68b; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f9, f20, f14, f22, 0x1, 0, x16, 456, x17, x15, 304, x18)

inst_20:
// rs1==f3, rs2==f16, rs3==f15, rd==f4, fs1 == 0 and fe1 == 0x7fc and fm1 == 0xc277c8581da67 and fs2 == 1 and fe2 == 0x403 and fm2 == 0x5b5bea83c3f5c and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xf37aa6e86c68b and rm_val == 0  
// opcode: fnmsub.d ; op1:f3; op2:f16; op3:f15; dest:f4; op1val:0x7fcc277c8581da67; op2val:0xc035b5bea83c3f5c; op3val:0x7fcf37aa6e86c68b; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f4, f3, f16, f15, 0x0, 0, x16, 480, x17, x15, 320, x18)

inst_21:
// rs1==f1, rs2==f24, rs3==f12, rd==f0, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x03cc30fa6fa7d and fs2 == 0 and fe2 == 0x401 and fm2 == 0xeaa5a1d3c9b55 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x67101be2e03ab and rm_val == 4  
// opcode: fnmsub.d ; op1:f1; op2:f24; op3:f12; dest:f0; op1val:0x7fe03cc30fa6fa7d; op2val:0x401eaa5a1d3c9b55; op3val:0x7fe67101be2e03ab; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f0, f1, f24, f12, 0x4, 0, x16, 504, x17, x15, 336, x18)

inst_22:
// rs1==f12, rs2==f22, rs3==f27, rd==f5, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x03cc30fa6fa7d and fs2 == 0 and fe2 == 0x401 and fm2 == 0xeaa5a1d3c9b55 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x67101be2e03ab and rm_val == 3  
// opcode: fnmsub.d ; op1:f12; op2:f22; op3:f27; dest:f5; op1val:0x7fe03cc30fa6fa7d; op2val:0x401eaa5a1d3c9b55; op3val:0x7fe67101be2e03ab; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f5, f12, f22, f27, 0x3, 0, x16, 528, x17, x15, 352, x18)

inst_23:
// rs1==f27, rs2==f4, rs3==f23, rd==f20, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x03cc30fa6fa7d and fs2 == 0 and fe2 == 0x401 and fm2 == 0xeaa5a1d3c9b55 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x67101be2e03ab and rm_val == 2  
// opcode: fnmsub.d ; op1:f27; op2:f4; op3:f23; dest:f20; op1val:0x7fe03cc30fa6fa7d; op2val:0x401eaa5a1d3c9b55; op3val:0x7fe67101be2e03ab; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f20, f27, f4, f23, 0x2, 0, x16, 552, x17, x15, 368, x18)

inst_24:
// rs1==f6, rs2==f8, rs3==f28, rd==f31, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x03cc30fa6fa7d and fs2 == 0 and fe2 == 0x401 and fm2 == 0xeaa5a1d3c9b55 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x67101be2e03ab and rm_val == 1  
// opcode: fnmsub.d ; op1:f6; op2:f8; op3:f28; dest:f31; op1val:0x7fe03cc30fa6fa7d; op2val:0x401eaa5a1d3c9b55; op3val:0x7fe67101be2e03ab; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f31, f6, f8, f28, 0x1, 0, x16, 576, x17, x15, 384, x18)

inst_25:
// rs1==f10, rs2==f27, rs3==f19, rd==f30, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x03cc30fa6fa7d and fs2 == 0 and fe2 == 0x401 and fm2 == 0xeaa5a1d3c9b55 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x67101be2e03ab and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f27; op3:f19; dest:f30; op1val:0x7fe03cc30fa6fa7d; op2val:0x401eaa5a1d3c9b55; op3val:0x7fe67101be2e03ab; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f30, f10, f27, f19, 0x0, 0, x16, 600, x17, x15, 400, x18)

inst_26:
// rs1==f17, rs2==f19, rs3==f8, rd==f13, fs1 == 0 and fe1 == 0x7fb and fm1 == 0x248a2b9dc22bf and fs2 == 1 and fe2 == 0x403 and fm2 == 0x5a233041e3ac1 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xce72ef36d4887 and rm_val == 4  
// opcode: fnmsub.d ; op1:f17; op2:f19; op3:f8; dest:f13; op1val:0x7fb248a2b9dc22bf; op2val:0xc035a233041e3ac1; op3val:0x7fece72ef36d4887; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f17, f19, f8, 0x4, 0, x16, 624, x17, x15, 416, x18)

inst_27:
// rs1==f15, rs2==f12, rs3==f1, rd==f16, fs1 == 0 and fe1 == 0x7fb and fm1 == 0x248a2b9dc22bf and fs2 == 1 and fe2 == 0x403 and fm2 == 0x5a233041e3ac1 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xce72ef36d4887 and rm_val == 3  
// opcode: fnmsub.d ; op1:f15; op2:f12; op3:f1; dest:f16; op1val:0x7fb248a2b9dc22bf; op2val:0xc035a233041e3ac1; op3val:0x7fece72ef36d4887; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f16, f15, f12, f1, 0x3, 0, x16, 648, x17, x15, 432, x18)

inst_28:
// rs1==f28, rs2==f15, rs3==f17, rd==f3, fs1 == 0 and fe1 == 0x7fb and fm1 == 0x248a2b9dc22bf and fs2 == 1 and fe2 == 0x403 and fm2 == 0x5a233041e3ac1 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xce72ef36d4887 and rm_val == 2  
// opcode: fnmsub.d ; op1:f28; op2:f15; op3:f17; dest:f3; op1val:0x7fb248a2b9dc22bf; op2val:0xc035a233041e3ac1; op3val:0x7fece72ef36d4887; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f3, f28, f15, f17, 0x2, 0, x16, 672, x17, x15, 448, x18)

inst_29:
// rs1==f26, rs2==f18, rs3==f6, rd==f22, fs1 == 0 and fe1 == 0x7fb and fm1 == 0x248a2b9dc22bf and fs2 == 1 and fe2 == 0x403 and fm2 == 0x5a233041e3ac1 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xce72ef36d4887 and rm_val == 1  
// opcode: fnmsub.d ; op1:f26; op2:f18; op3:f6; dest:f22; op1val:0x7fb248a2b9dc22bf; op2val:0xc035a233041e3ac1; op3val:0x7fece72ef36d4887; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f22, f26, f18, f6, 0x1, 0, x16, 696, x17, x15, 464, x18)

inst_30:
// rs1==f13, rs2==f9, rs3==f4, rd==f15, fs1 == 0 and fe1 == 0x7fb and fm1 == 0x248a2b9dc22bf and fs2 == 1 and fe2 == 0x403 and fm2 == 0x5a233041e3ac1 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xce72ef36d4887 and rm_val == 0  
// opcode: fnmsub.d ; op1:f13; op2:f9; op3:f4; dest:f15; op1val:0x7fb248a2b9dc22bf; op2val:0xc035a233041e3ac1; op3val:0x7fece72ef36d4887; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f15, f13, f9, f4, 0x0, 0, x16, 720, x17, x15, 480, x18)

inst_31:
// rs1==f7, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0eb469d232dd1 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x22e4c1eeb8fbf and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x05034d6a0d355 and rm_val == 4  
// opcode: fnmsub.d ; op1:f7; op2:f22; op3:f3; dest:f15; op1val:0x7fe0eb469d232dd1; op2val:0xbfe22e4c1eeb8fbf; op3val:0x7fe05034d6a0d355; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f15, f7, f22, f3, 0x4, 0, x16, 744, x17, x15, 496, x18)

inst_32:
// rs2==f7, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0eb469d232dd1 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x22e4c1eeb8fbf and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x05034d6a0d355 and rm_val == 3  
// opcode: fnmsub.d ; op1:f14; op2:f7; op3:f24; dest:f21; op1val:0x7fe0eb469d232dd1; op2val:0xbfe22e4c1eeb8fbf; op3val:0x7fe05034d6a0d355; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f21, f14, f7, f24, 0x3, 0, x16, 768, x17, x15, 512, x18)

inst_33:
// rd==f29, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0eb469d232dd1 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x22e4c1eeb8fbf and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x05034d6a0d355 and rm_val == 2  
// opcode: fnmsub.d ; op1:f9; op2:f15; op3:f22; dest:f29; op1val:0x7fe0eb469d232dd1; op2val:0xbfe22e4c1eeb8fbf; op3val:0x7fe05034d6a0d355; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f29, f9, f15, f22, 0x2, 0, x16, 792, x17, x15, 528, x18)

inst_34:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0eb469d232dd1 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x22e4c1eeb8fbf and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x05034d6a0d355 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0eb469d232dd1; op2val:0xbfe22e4c1eeb8fbf; op3val:0x7fe05034d6a0d355; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 544, x18)

inst_35:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0eb469d232dd1 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x22e4c1eeb8fbf and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x05034d6a0d355 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0eb469d232dd1; op2val:0xbfe22e4c1eeb8fbf; op3val:0x7fe05034d6a0d355; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 560, x18)

inst_36:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x94c88e4f0cf23 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x43e6e4398ff87 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x3387045b11b73 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc94c88e4f0cf23; op2val:0xbff43e6e4398ff87; op3val:0x7fc3387045b11b73; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 576, x18)

inst_37:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x94c88e4f0cf23 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x43e6e4398ff87 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x3387045b11b73 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc94c88e4f0cf23; op2val:0xbff43e6e4398ff87; op3val:0x7fc3387045b11b73; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 592, x18)

inst_38:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x94c88e4f0cf23 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x43e6e4398ff87 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x3387045b11b73 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc94c88e4f0cf23; op2val:0xbff43e6e4398ff87; op3val:0x7fc3387045b11b73; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 608, x18)

inst_39:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x94c88e4f0cf23 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x43e6e4398ff87 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x3387045b11b73 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc94c88e4f0cf23; op2val:0xbff43e6e4398ff87; op3val:0x7fc3387045b11b73; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 624, x18)

inst_40:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x94c88e4f0cf23 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x43e6e4398ff87 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x3387045b11b73 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc94c88e4f0cf23; op2val:0xbff43e6e4398ff87; op3val:0x7fc3387045b11b73; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 640, x18)

inst_41:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xafde4f5fa80c8 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x3700bd52d2c4f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x01daaa27ef61b and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feafde4f5fa80c8; op2val:0xbfd3700bd52d2c4f; op3val:0x7fe01daaa27ef61b; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 656, x18)

inst_42:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xafde4f5fa80c8 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x3700bd52d2c4f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x01daaa27ef61b and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feafde4f5fa80c8; op2val:0xbfd3700bd52d2c4f; op3val:0x7fe01daaa27ef61b; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 672, x18)

inst_43:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xafde4f5fa80c8 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x3700bd52d2c4f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x01daaa27ef61b and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feafde4f5fa80c8; op2val:0xbfd3700bd52d2c4f; op3val:0x7fe01daaa27ef61b; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 688, x18)

inst_44:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xafde4f5fa80c8 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x3700bd52d2c4f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x01daaa27ef61b and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feafde4f5fa80c8; op2val:0xbfd3700bd52d2c4f; op3val:0x7fe01daaa27ef61b; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 704, x18)

inst_45:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xafde4f5fa80c8 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x3700bd52d2c4f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x01daaa27ef61b and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feafde4f5fa80c8; op2val:0xbfd3700bd52d2c4f; op3val:0x7fe01daaa27ef61b; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 720, x18)

inst_46:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x677f9a96d9966 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x796cd8a02d3f6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe6665d6935c36 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe677f9a96d9966; op2val:0xbff796cd8a02d3f6; op3val:0x7fee6665d6935c36; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 736, x18)

inst_47:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x677f9a96d9966 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x796cd8a02d3f6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe6665d6935c36 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe677f9a96d9966; op2val:0xbff796cd8a02d3f6; op3val:0x7fee6665d6935c36; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 752, x18)

inst_48:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x677f9a96d9966 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x796cd8a02d3f6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe6665d6935c36 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe677f9a96d9966; op2val:0xbff796cd8a02d3f6; op3val:0x7fee6665d6935c36; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 768, x18)

inst_49:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x677f9a96d9966 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x796cd8a02d3f6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe6665d6935c36 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe677f9a96d9966; op2val:0xbff796cd8a02d3f6; op3val:0x7fee6665d6935c36; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 784, x18)

inst_50:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x677f9a96d9966 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x796cd8a02d3f6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe6665d6935c36 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe677f9a96d9966; op2val:0xbff796cd8a02d3f6; op3val:0x7fee6665d6935c36; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 800, x18)

inst_51:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x8fd64f104922f and fs2 == 1 and fe2 == 0x401 and fm2 == 0x964aae7b394df and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x615f701415147 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb8fd64f104922f; op2val:0xc01964aae7b394df; op3val:0x7fe615f701415147; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 816, x18)

inst_52:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x8fd64f104922f and fs2 == 1 and fe2 == 0x401 and fm2 == 0x964aae7b394df and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x615f701415147 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb8fd64f104922f; op2val:0xc01964aae7b394df; op3val:0x7fe615f701415147; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 832, x18)

inst_53:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x8fd64f104922f and fs2 == 1 and fe2 == 0x401 and fm2 == 0x964aae7b394df and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x615f701415147 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb8fd64f104922f; op2val:0xc01964aae7b394df; op3val:0x7fe615f701415147; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 848, x18)

inst_54:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x8fd64f104922f and fs2 == 1 and fe2 == 0x401 and fm2 == 0x964aae7b394df and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x615f701415147 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb8fd64f104922f; op2val:0xc01964aae7b394df; op3val:0x7fe615f701415147; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 864, x18)

inst_55:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x8fd64f104922f and fs2 == 1 and fe2 == 0x401 and fm2 == 0x964aae7b394df and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x615f701415147 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb8fd64f104922f; op2val:0xc01964aae7b394df; op3val:0x7fe615f701415147; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 880, x18)

inst_56:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x146e28288654f and fs2 == 1 and fe2 == 0x401 and fm2 == 0xa64c77bdc4c08 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8751b6a67be4c and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc146e28288654f; op2val:0xc01a64c77bdc4c08; op3val:0x7fe8751b6a67be4c; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 896, x18)

inst_57:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x146e28288654f and fs2 == 1 and fe2 == 0x401 and fm2 == 0xa64c77bdc4c08 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8751b6a67be4c and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc146e28288654f; op2val:0xc01a64c77bdc4c08; op3val:0x7fe8751b6a67be4c; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 912, x18)

inst_58:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x146e28288654f and fs2 == 1 and fe2 == 0x401 and fm2 == 0xa64c77bdc4c08 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8751b6a67be4c and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc146e28288654f; op2val:0xc01a64c77bdc4c08; op3val:0x7fe8751b6a67be4c; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 928, x18)

inst_59:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x146e28288654f and fs2 == 1 and fe2 == 0x401 and fm2 == 0xa64c77bdc4c08 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8751b6a67be4c and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc146e28288654f; op2val:0xc01a64c77bdc4c08; op3val:0x7fe8751b6a67be4c; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 944, x18)

inst_60:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x146e28288654f and fs2 == 1 and fe2 == 0x401 and fm2 == 0xa64c77bdc4c08 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8751b6a67be4c and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc146e28288654f; op2val:0xc01a64c77bdc4c08; op3val:0x7fe8751b6a67be4c; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 960, x18)

inst_61:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x6d41e8ed71efb and fs2 == 1 and fe2 == 0x400 and fm2 == 0x18907e493e2f5 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc1933e5b458c9 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd6d41e8ed71efb; op2val:0xc0018907e493e2f5; op3val:0x7fec1933e5b458c9; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 976, x18)

inst_62:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x6d41e8ed71efb and fs2 == 1 and fe2 == 0x400 and fm2 == 0x18907e493e2f5 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc1933e5b458c9 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd6d41e8ed71efb; op2val:0xc0018907e493e2f5; op3val:0x7fec1933e5b458c9; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 992, x18)

inst_63:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x6d41e8ed71efb and fs2 == 1 and fe2 == 0x400 and fm2 == 0x18907e493e2f5 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc1933e5b458c9 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd6d41e8ed71efb; op2val:0xc0018907e493e2f5; op3val:0x7fec1933e5b458c9; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 1008, x18)

inst_64:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x6d41e8ed71efb and fs2 == 1 and fe2 == 0x400 and fm2 == 0x18907e493e2f5 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc1933e5b458c9 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd6d41e8ed71efb; op2val:0xc0018907e493e2f5; op3val:0x7fec1933e5b458c9; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 1024, x18)

inst_65:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x6d41e8ed71efb and fs2 == 1 and fe2 == 0x400 and fm2 == 0x18907e493e2f5 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc1933e5b458c9 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd6d41e8ed71efb; op2val:0xc0018907e493e2f5; op3val:0x7fec1933e5b458c9; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1040, x18)

inst_66:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc30d25dc7d1f8 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x29c66c9d482fb and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x248247c756437 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec30d25dc7d1f8; op2val:0xbfe29c66c9d482fb; op3val:0x7fd248247c756437; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 1056, x18)

inst_67:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc30d25dc7d1f8 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x29c66c9d482fb and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x248247c756437 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec30d25dc7d1f8; op2val:0xbfe29c66c9d482fb; op3val:0x7fd248247c756437; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 1072, x18)

inst_68:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc30d25dc7d1f8 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x29c66c9d482fb and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x248247c756437 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec30d25dc7d1f8; op2val:0xbfe29c66c9d482fb; op3val:0x7fd248247c756437; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 1088, x18)

inst_69:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc30d25dc7d1f8 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x29c66c9d482fb and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x248247c756437 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec30d25dc7d1f8; op2val:0xbfe29c66c9d482fb; op3val:0x7fd248247c756437; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 1104, x18)

inst_70:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc30d25dc7d1f8 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x29c66c9d482fb and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x248247c756437 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec30d25dc7d1f8; op2val:0xbfe29c66c9d482fb; op3val:0x7fd248247c756437; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1120, x18)

inst_71:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x286daddd336a6 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x7e3e64752bdd8 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x7537d0a566421 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe286daddd336a6; op2val:0xc007e3e64752bdd8; op3val:0x7fe7537d0a566421; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 1136, x18)

inst_72:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x286daddd336a6 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x7e3e64752bdd8 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x7537d0a566421 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe286daddd336a6; op2val:0xc007e3e64752bdd8; op3val:0x7fe7537d0a566421; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 1152, x18)

inst_73:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x286daddd336a6 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x7e3e64752bdd8 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x7537d0a566421 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe286daddd336a6; op2val:0xc007e3e64752bdd8; op3val:0x7fe7537d0a566421; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 1168, x18)

inst_74:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x286daddd336a6 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x7e3e64752bdd8 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x7537d0a566421 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe286daddd336a6; op2val:0xc007e3e64752bdd8; op3val:0x7fe7537d0a566421; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 1184, x18)

inst_75:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x286daddd336a6 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x7e3e64752bdd8 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x7537d0a566421 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe286daddd336a6; op2val:0xc007e3e64752bdd8; op3val:0x7fe7537d0a566421; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1200, x18)

inst_76:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x8d035325f0f1f and fs2 == 1 and fe2 == 0x402 and fm2 == 0x413d1f8d0c012 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe45febf70f5c4 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc8d035325f0f1f; op2val:0xc02413d1f8d0c012; op3val:0x7fee45febf70f5c4; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 1216, x18)

inst_77:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x8d035325f0f1f and fs2 == 1 and fe2 == 0x402 and fm2 == 0x413d1f8d0c012 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe45febf70f5c4 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc8d035325f0f1f; op2val:0xc02413d1f8d0c012; op3val:0x7fee45febf70f5c4; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 1232, x18)

inst_78:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x8d035325f0f1f and fs2 == 1 and fe2 == 0x402 and fm2 == 0x413d1f8d0c012 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe45febf70f5c4 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc8d035325f0f1f; op2val:0xc02413d1f8d0c012; op3val:0x7fee45febf70f5c4; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 1248, x18)

inst_79:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x8d035325f0f1f and fs2 == 1 and fe2 == 0x402 and fm2 == 0x413d1f8d0c012 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe45febf70f5c4 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc8d035325f0f1f; op2val:0xc02413d1f8d0c012; op3val:0x7fee45febf70f5c4; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 1264, x18)

inst_80:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x8d035325f0f1f and fs2 == 1 and fe2 == 0x402 and fm2 == 0x413d1f8d0c012 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe45febf70f5c4 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc8d035325f0f1f; op2val:0xc02413d1f8d0c012; op3val:0x7fee45febf70f5c4; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1280, x18)

inst_81:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe460da8265d2d and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x92d4b2f309f8a and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xf46513d9d53ab and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fee460da8265d2d; op2val:0xbff92d4b2f309f8a; op3val:0x7fdf46513d9d53ab; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 1296, x18)

inst_82:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe460da8265d2d and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x92d4b2f309f8a and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xf46513d9d53ab and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fee460da8265d2d; op2val:0xbff92d4b2f309f8a; op3val:0x7fdf46513d9d53ab; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 1312, x18)

inst_83:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe460da8265d2d and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x92d4b2f309f8a and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xf46513d9d53ab and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fee460da8265d2d; op2val:0xbff92d4b2f309f8a; op3val:0x7fdf46513d9d53ab; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 1328, x18)

inst_84:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe460da8265d2d and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x92d4b2f309f8a and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xf46513d9d53ab and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fee460da8265d2d; op2val:0xbff92d4b2f309f8a; op3val:0x7fdf46513d9d53ab; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 1344, x18)
addi x16,x16,2040

inst_85:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe460da8265d2d and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x92d4b2f309f8a and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xf46513d9d53ab and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fee460da8265d2d; op2val:0xbff92d4b2f309f8a; op3val:0x7fdf46513d9d53ab; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 1360, x18)

inst_86:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x23193c9b51c5f and fs2 == 1 and fe2 == 0x401 and fm2 == 0xdf407fe3fe871 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x07ac811455a27 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc23193c9b51c5f; op2val:0xc01df407fe3fe871; op3val:0x7fb07ac811455a27; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 1376, x18)

inst_87:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x23193c9b51c5f and fs2 == 1 and fe2 == 0x401 and fm2 == 0xdf407fe3fe871 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x07ac811455a27 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc23193c9b51c5f; op2val:0xc01df407fe3fe871; op3val:0x7fb07ac811455a27; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 1392, x18)

inst_88:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x23193c9b51c5f and fs2 == 1 and fe2 == 0x401 and fm2 == 0xdf407fe3fe871 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x07ac811455a27 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc23193c9b51c5f; op2val:0xc01df407fe3fe871; op3val:0x7fb07ac811455a27; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 1408, x18)

inst_89:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x23193c9b51c5f and fs2 == 1 and fe2 == 0x401 and fm2 == 0xdf407fe3fe871 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x07ac811455a27 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc23193c9b51c5f; op2val:0xc01df407fe3fe871; op3val:0x7fb07ac811455a27; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 1424, x18)

inst_90:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x23193c9b51c5f and fs2 == 1 and fe2 == 0x401 and fm2 == 0xdf407fe3fe871 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x07ac811455a27 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc23193c9b51c5f; op2val:0xc01df407fe3fe871; op3val:0x7fb07ac811455a27; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 1440, x18)

inst_91:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcd8104cd4e803 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xc12c4e221f23c and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x29bf2873bcb4b and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fecd8104cd4e803; op2val:0xbffc12c4e221f23c; op3val:0x7fe29bf2873bcb4b; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 1456, x18)

inst_92:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcd8104cd4e803 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xc12c4e221f23c and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x29bf2873bcb4b and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fecd8104cd4e803; op2val:0xbffc12c4e221f23c; op3val:0x7fe29bf2873bcb4b; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 1472, x18)

inst_93:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcd8104cd4e803 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xc12c4e221f23c and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x29bf2873bcb4b and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fecd8104cd4e803; op2val:0xbffc12c4e221f23c; op3val:0x7fe29bf2873bcb4b; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 1488, x18)

inst_94:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcd8104cd4e803 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xc12c4e221f23c and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x29bf2873bcb4b and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fecd8104cd4e803; op2val:0xbffc12c4e221f23c; op3val:0x7fe29bf2873bcb4b; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 1504, x18)

inst_95:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcd8104cd4e803 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xc12c4e221f23c and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x29bf2873bcb4b and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fecd8104cd4e803; op2val:0xbffc12c4e221f23c; op3val:0x7fe29bf2873bcb4b; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 1520, x18)

inst_96:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xfd85c073a2591 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xa861d98748e27 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x4ca84761136ef and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdfd85c073a2591; op2val:0xc00a861d98748e27; op3val:0x7fe4ca84761136ef; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 1536, x18)

inst_97:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xfd85c073a2591 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xa861d98748e27 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x4ca84761136ef and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdfd85c073a2591; op2val:0xc00a861d98748e27; op3val:0x7fe4ca84761136ef; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 1552, x18)

inst_98:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xfd85c073a2591 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xa861d98748e27 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x4ca84761136ef and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdfd85c073a2591; op2val:0xc00a861d98748e27; op3val:0x7fe4ca84761136ef; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 1568, x18)

inst_99:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xfd85c073a2591 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xa861d98748e27 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x4ca84761136ef and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdfd85c073a2591; op2val:0xc00a861d98748e27; op3val:0x7fe4ca84761136ef; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 1584, x18)

inst_100:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xfd85c073a2591 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xa861d98748e27 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x4ca84761136ef and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdfd85c073a2591; op2val:0xc00a861d98748e27; op3val:0x7fe4ca84761136ef; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 1600, x18)

inst_101:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x5a8fa51e01729 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x3fd4ccd713462 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x61f2260581ec6 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd5a8fa51e01729; op2val:0xc013fd4ccd713462; op3val:0x7fe61f2260581ec6; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 1616, x18)

inst_102:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x5a8fa51e01729 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x3fd4ccd713462 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x61f2260581ec6 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd5a8fa51e01729; op2val:0xc013fd4ccd713462; op3val:0x7fe61f2260581ec6; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 1632, x18)

inst_103:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x5a8fa51e01729 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x3fd4ccd713462 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x61f2260581ec6 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd5a8fa51e01729; op2val:0xc013fd4ccd713462; op3val:0x7fe61f2260581ec6; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 1648, x18)

inst_104:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x5a8fa51e01729 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x3fd4ccd713462 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x61f2260581ec6 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd5a8fa51e01729; op2val:0xc013fd4ccd713462; op3val:0x7fe61f2260581ec6; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 1664, x18)

inst_105:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x5a8fa51e01729 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x3fd4ccd713462 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x61f2260581ec6 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd5a8fa51e01729; op2val:0xc013fd4ccd713462; op3val:0x7fe61f2260581ec6; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1680, x18)

inst_106:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x8242100dca0f9 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x19cb243429355 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x525a0943b7292 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd8242100dca0f9; op2val:0xc0119cb243429355; op3val:0x7fe525a0943b7292; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 1696, x18)

inst_107:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x8242100dca0f9 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x19cb243429355 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x525a0943b7292 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd8242100dca0f9; op2val:0xc0119cb243429355; op3val:0x7fe525a0943b7292; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 1712, x18)

inst_108:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x8242100dca0f9 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x19cb243429355 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x525a0943b7292 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd8242100dca0f9; op2val:0xc0119cb243429355; op3val:0x7fe525a0943b7292; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 1728, x18)

inst_109:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x8242100dca0f9 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x19cb243429355 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x525a0943b7292 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd8242100dca0f9; op2val:0xc0119cb243429355; op3val:0x7fe525a0943b7292; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 1744, x18)

inst_110:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x8242100dca0f9 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x19cb243429355 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x525a0943b7292 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd8242100dca0f9; op2val:0xc0119cb243429355; op3val:0x7fe525a0943b7292; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1760, x18)

inst_111:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x026946c5d22f7 and fs2 == 1 and fe2 == 0x403 and fm2 == 0x9ae4916027c77 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x3d86a7b5170e5 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb026946c5d22f7; op2val:0xc039ae4916027c77; op3val:0x7fe3d86a7b5170e5; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 1776, x18)

inst_112:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x026946c5d22f7 and fs2 == 1 and fe2 == 0x403 and fm2 == 0x9ae4916027c77 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x3d86a7b5170e5 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb026946c5d22f7; op2val:0xc039ae4916027c77; op3val:0x7fe3d86a7b5170e5; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 1792, x18)

inst_113:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x026946c5d22f7 and fs2 == 1 and fe2 == 0x403 and fm2 == 0x9ae4916027c77 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x3d86a7b5170e5 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb026946c5d22f7; op2val:0xc039ae4916027c77; op3val:0x7fe3d86a7b5170e5; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 1808, x18)

inst_114:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x026946c5d22f7 and fs2 == 1 and fe2 == 0x403 and fm2 == 0x9ae4916027c77 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x3d86a7b5170e5 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb026946c5d22f7; op2val:0xc039ae4916027c77; op3val:0x7fe3d86a7b5170e5; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 1824, x18)

inst_115:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x026946c5d22f7 and fs2 == 1 and fe2 == 0x403 and fm2 == 0x9ae4916027c77 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x3d86a7b5170e5 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb026946c5d22f7; op2val:0xc039ae4916027c77; op3val:0x7fe3d86a7b5170e5; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1840, x18)

inst_116:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x088ea90c6ff9b and fs2 == 1 and fe2 == 0x401 and fm2 == 0xed5bda0d17287 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xfbb34f341c62f and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd088ea90c6ff9b; op2val:0xc01ed5bda0d17287; op3val:0x7fefbb34f341c62f; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 1856, x18)

inst_117:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x088ea90c6ff9b and fs2 == 1 and fe2 == 0x401 and fm2 == 0xed5bda0d17287 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xfbb34f341c62f and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd088ea90c6ff9b; op2val:0xc01ed5bda0d17287; op3val:0x7fefbb34f341c62f; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 1872, x18)

inst_118:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x088ea90c6ff9b and fs2 == 1 and fe2 == 0x401 and fm2 == 0xed5bda0d17287 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xfbb34f341c62f and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd088ea90c6ff9b; op2val:0xc01ed5bda0d17287; op3val:0x7fefbb34f341c62f; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 1888, x18)

inst_119:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x088ea90c6ff9b and fs2 == 1 and fe2 == 0x401 and fm2 == 0xed5bda0d17287 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xfbb34f341c62f and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd088ea90c6ff9b; op2val:0xc01ed5bda0d17287; op3val:0x7fefbb34f341c62f; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 1904, x18)

inst_120:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x088ea90c6ff9b and fs2 == 1 and fe2 == 0x401 and fm2 == 0xed5bda0d17287 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xfbb34f341c62f and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd088ea90c6ff9b; op2val:0xc01ed5bda0d17287; op3val:0x7fefbb34f341c62f; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1920, x18)

inst_121:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x842c58dceda19 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x781104c024b06 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xd1d785536fc77 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd842c58dceda19; op2val:0xc00781104c024b06; op3val:0x7fbd1d785536fc77; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 1936, x18)

inst_122:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x842c58dceda19 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x781104c024b06 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xd1d785536fc77 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd842c58dceda19; op2val:0xc00781104c024b06; op3val:0x7fbd1d785536fc77; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 1952, x18)

inst_123:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x842c58dceda19 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x781104c024b06 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xd1d785536fc77 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd842c58dceda19; op2val:0xc00781104c024b06; op3val:0x7fbd1d785536fc77; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 1968, x18)

inst_124:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x842c58dceda19 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x781104c024b06 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xd1d785536fc77 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd842c58dceda19; op2val:0xc00781104c024b06; op3val:0x7fbd1d785536fc77; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 1984, x18)

inst_125:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x842c58dceda19 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x781104c024b06 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xd1d785536fc77 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd842c58dceda19; op2val:0xc00781104c024b06; op3val:0x7fbd1d785536fc77; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 2000, x18)

inst_126:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xa172a2bcb69dd and fs2 == 1 and fe2 == 0x401 and fm2 == 0x2a9bea1ec3bd8 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xcddb5f3a506a8 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fda172a2bcb69dd; op2val:0xc012a9bea1ec3bd8; op3val:0x7fecddb5f3a506a8; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_2)

inst_127:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xa172a2bcb69dd and fs2 == 1 and fe2 == 0x401 and fm2 == 0x2a9bea1ec3bd8 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xcddb5f3a506a8 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fda172a2bcb69dd; op2val:0xc012a9bea1ec3bd8; op3val:0x7fecddb5f3a506a8; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 0, x18)

inst_128:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xa172a2bcb69dd and fs2 == 1 and fe2 == 0x401 and fm2 == 0x2a9bea1ec3bd8 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xcddb5f3a506a8 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fda172a2bcb69dd; op2val:0xc012a9bea1ec3bd8; op3val:0x7fecddb5f3a506a8; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 16, x18)

inst_129:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xa172a2bcb69dd and fs2 == 1 and fe2 == 0x401 and fm2 == 0x2a9bea1ec3bd8 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xcddb5f3a506a8 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fda172a2bcb69dd; op2val:0xc012a9bea1ec3bd8; op3val:0x7fecddb5f3a506a8; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 32, x18)

inst_130:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xa172a2bcb69dd and fs2 == 1 and fe2 == 0x401 and fm2 == 0x2a9bea1ec3bd8 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xcddb5f3a506a8 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fda172a2bcb69dd; op2val:0xc012a9bea1ec3bd8; op3val:0x7fecddb5f3a506a8; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 48, x18)

inst_131:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0x47899d9bfab7f and fs2 == 1 and fe2 == 0x404 and fm2 == 0xfaed66280d8b5 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x112b7d42952fb and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f947899d9bfab7f; op2val:0xc04faed66280d8b5; op3val:0x7fd112b7d42952fb; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 64, x18)

inst_132:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0x47899d9bfab7f and fs2 == 1 and fe2 == 0x404 and fm2 == 0xfaed66280d8b5 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x112b7d42952fb and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f947899d9bfab7f; op2val:0xc04faed66280d8b5; op3val:0x7fd112b7d42952fb; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 80, x18)

inst_133:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0x47899d9bfab7f and fs2 == 1 and fe2 == 0x404 and fm2 == 0xfaed66280d8b5 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x112b7d42952fb and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f947899d9bfab7f; op2val:0xc04faed66280d8b5; op3val:0x7fd112b7d42952fb; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 96, x18)

inst_134:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0x47899d9bfab7f and fs2 == 1 and fe2 == 0x404 and fm2 == 0xfaed66280d8b5 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x112b7d42952fb and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f947899d9bfab7f; op2val:0xc04faed66280d8b5; op3val:0x7fd112b7d42952fb; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 112, x18)

inst_135:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0x47899d9bfab7f and fs2 == 1 and fe2 == 0x404 and fm2 == 0xfaed66280d8b5 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x112b7d42952fb and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f947899d9bfab7f; op2val:0xc04faed66280d8b5; op3val:0x7fd112b7d42952fb; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 128, x18)

inst_136:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x6edc5cf85ef57 and fs2 == 1 and fe2 == 0x402 and fm2 == 0xb8f2e4f11fd26 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xdf9b50c24f6a7 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb6edc5cf85ef57; op2val:0xc02b8f2e4f11fd26; op3val:0x7fcdf9b50c24f6a7; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 144, x18)

inst_137:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x6edc5cf85ef57 and fs2 == 1 and fe2 == 0x402 and fm2 == 0xb8f2e4f11fd26 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xdf9b50c24f6a7 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb6edc5cf85ef57; op2val:0xc02b8f2e4f11fd26; op3val:0x7fcdf9b50c24f6a7; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 160, x18)

inst_138:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x6edc5cf85ef57 and fs2 == 1 and fe2 == 0x402 and fm2 == 0xb8f2e4f11fd26 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xdf9b50c24f6a7 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb6edc5cf85ef57; op2val:0xc02b8f2e4f11fd26; op3val:0x7fcdf9b50c24f6a7; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 176, x18)

inst_139:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x6edc5cf85ef57 and fs2 == 1 and fe2 == 0x402 and fm2 == 0xb8f2e4f11fd26 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xdf9b50c24f6a7 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb6edc5cf85ef57; op2val:0xc02b8f2e4f11fd26; op3val:0x7fcdf9b50c24f6a7; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 192, x18)

inst_140:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x6edc5cf85ef57 and fs2 == 1 and fe2 == 0x402 and fm2 == 0xb8f2e4f11fd26 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xdf9b50c24f6a7 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb6edc5cf85ef57; op2val:0xc02b8f2e4f11fd26; op3val:0x7fcdf9b50c24f6a7; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 208, x18)

inst_141:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x81f8e726306f5 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x49e96e9cad6d5 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xab2b7e6d25349 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd81f8e726306f5; op2val:0xbf849e96e9cad6d5; op3val:0x7feab2b7e6d25349; valaddr_reg:x16; val_offset:1344; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1344, x17, x15, 224, x18)

inst_142:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x81f8e726306f5 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x49e96e9cad6d5 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xab2b7e6d25349 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd81f8e726306f5; op2val:0xbf849e96e9cad6d5; op3val:0x7feab2b7e6d25349; valaddr_reg:x16; val_offset:1368; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1368, x17, x15, 240, x18)

inst_143:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x81f8e726306f5 and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x49e96e9cad6d5 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xab2b7e6d25349 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd81f8e726306f5; op2val:0xbf849e96e9cad6d5; op3val:0x7feab2b7e6d25349; valaddr_reg:x16; val_offset:1392; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1392, x17, x15, 256, x18)

inst_144:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x113f1b844ec29 and fs2 == 1 and fe2 == 0x402 and fm2 == 0x194cca6feaee6 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xb19041a09c655 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd113f1b844ec29; op2val:0xc02194cca6feaee6; op3val:0x7fdb19041a09c655; valaddr_reg:x16; val_offset:1416; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1416, x17, x15, 272, x18)

inst_145:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x113f1b844ec29 and fs2 == 1 and fe2 == 0x402 and fm2 == 0x194cca6feaee6 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xb19041a09c655 and rm_val == 3  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd113f1b844ec29; op2val:0xc02194cca6feaee6; op3val:0x7fdb19041a09c655; valaddr_reg:x16; val_offset:1440; rmval:0x3; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1440, x17, x15, 288, x18)

inst_146:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x113f1b844ec29 and fs2 == 1 and fe2 == 0x402 and fm2 == 0x194cca6feaee6 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xb19041a09c655 and rm_val == 2  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd113f1b844ec29; op2val:0xc02194cca6feaee6; op3val:0x7fdb19041a09c655; valaddr_reg:x16; val_offset:1464; rmval:0x2; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1464, x17, x15, 304, x18)

inst_147:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x113f1b844ec29 and fs2 == 1 and fe2 == 0x402 and fm2 == 0x194cca6feaee6 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xb19041a09c655 and rm_val == 1  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd113f1b844ec29; op2val:0xc02194cca6feaee6; op3val:0x7fdb19041a09c655; valaddr_reg:x16; val_offset:1488; rmval:0x1; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1488, x17, x15, 320, x18)

inst_148:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x113f1b844ec29 and fs2 == 1 and fe2 == 0x402 and fm2 == 0x194cca6feaee6 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xb19041a09c655 and rm_val == 0  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd113f1b844ec29; op2val:0xc02194cca6feaee6; op3val:0x7fdb19041a09c655; valaddr_reg:x16; val_offset:1512; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1512, x17, x15, 336, x18)

inst_149:
// fs1 == 0 and fe1 == 0x7f8 and fm1 == 0x867824bb36ebf and fs2 == 0 and fe2 == 0x407 and fm2 == 0x8295552baee7e and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x5f78051c221f1 and rm_val == 4  
// opcode: fnmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f8867824bb36ebf; op2val:0x4078295552baee7e; op3val:0x7fd5f78051c221f1; valaddr_reg:x16; val_offset:1536; rmval:0x4; testreg:x18
TEST_FPR4_OP(fnmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1536, x17, x15, 352, x18)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_fp:
.dword 0x7fb6edc5cf85ef57
.dword 0xc02b8f2e4f11fd26
.dword 0x7fb6edc5cf85ef57
.dword 0x7fd81f8e726306f5
.dword 0xbf849e96e9cad6d5
.dword 0x7feab2b7e6d25349
.dword 0x7fd81f8e726306f5
.dword 0xbf849e96e9cad6d5
.dword 0x7feab2b7e6d25349
.dword 0x7fd81f8e726306f5
.dword 0xbf849e96e9cad6d5
.dword 0xbf849e96e9cad6d5
.dword 0x7fd81f8e726306f5
.dword 0xbf849e96e9cad6d5
.dword 0x7fd81f8e726306f5
.dword 0x7fd81f8e726306f5
.dword 0xbf849e96e9cad6d5
.dword 0x7feab2b7e6d25349
.dword 0x7fd113f1b844ec29
.dword 0x7fd113f1b844ec29
.dword 0x7fd113f1b844ec29
.dword 0x7fd113f1b844ec29
.dword 0x7fd113f1b844ec29
.dword 0x7fdb19041a09c655
.dword 0x7fd113f1b844ec29
.dword 0x7fd113f1b844ec29
.dword 0x7fd113f1b844ec29
.dword 0x7fd113f1b844ec29
.dword 0xc02194cca6feaee6
.dword 0xc02194cca6feaee6
.dword 0x7fd113f1b844ec29
.dword 0x7fd113f1b844ec29
.dword 0x7fdb19041a09c655
.dword 0x7f8867824bb36ebf
.dword 0x4078295552baee7e
.dword 0x7fd5f78051c221f1
.dword 0x7f8867824bb36ebf
.dword 0x4078295552baee7e
.dword 0x7fd5f78051c221f1
.dword 0x7f8867824bb36ebf
.dword 0x4078295552baee7e
.dword 0x7fd5f78051c221f1
.dword 0x7f8867824bb36ebf
.dword 0x4078295552baee7e
.dword 0x7fd5f78051c221f1
.dword 0x7f8867824bb36ebf
.dword 0x4078295552baee7e
.dword 0x7fd5f78051c221f1
.dword 0x7fcc277c8581da67
.dword 0xc035b5bea83c3f5c
.dword 0x7fcf37aa6e86c68b
.dword 0x7fcc277c8581da67
.dword 0xc035b5bea83c3f5c
.dword 0x7fcf37aa6e86c68b
.dword 0x7fcc277c8581da67
.dword 0xc035b5bea83c3f5c
.dword 0x7fcf37aa6e86c68b
.dword 0x7fcc277c8581da67
.dword 0xc035b5bea83c3f5c
.dword 0x7fcf37aa6e86c68b
.dword 0x7fcc277c8581da67
.dword 0xc035b5bea83c3f5c
.dword 0x7fcf37aa6e86c68b
.dword 0x7fe03cc30fa6fa7d
.dword 0x401eaa5a1d3c9b55
.dword 0x7fe67101be2e03ab
.dword 0x7fe03cc30fa6fa7d
.dword 0x401eaa5a1d3c9b55
.dword 0x7fe67101be2e03ab
.dword 0x7fe03cc30fa6fa7d
.dword 0x401eaa5a1d3c9b55
.dword 0x7fe67101be2e03ab
.dword 0x7fe03cc30fa6fa7d
.dword 0x401eaa5a1d3c9b55
.dword 0x7fe67101be2e03ab
.dword 0x7fe03cc30fa6fa7d
.dword 0x401eaa5a1d3c9b55
.dword 0x7fe67101be2e03ab
.dword 0x7fb248a2b9dc22bf
.dword 0xc035a233041e3ac1
.dword 0x7fece72ef36d4887
.dword 0x7fb248a2b9dc22bf
.dword 0xc035a233041e3ac1
.dword 0x7fece72ef36d4887
.dword 0x7fb248a2b9dc22bf
.dword 0xc035a233041e3ac1
.dword 0x7fece72ef36d4887
.dword 0x7fb248a2b9dc22bf
.dword 0xc035a233041e3ac1
.dword 0x7fece72ef36d4887
.dword 0x7fb248a2b9dc22bf
.dword 0xc035a233041e3ac1
.dword 0x7fece72ef36d4887
.dword 0x7fe0eb469d232dd1
.dword 0xbfe22e4c1eeb8fbf
.dword 0x7fe05034d6a0d355
.dword 0x7fe0eb469d232dd1
.dword 0xbfe22e4c1eeb8fbf
.dword 0x7fe05034d6a0d355
.dword 0x7fe0eb469d232dd1
.dword 0xbfe22e4c1eeb8fbf
.dword 0x7fe05034d6a0d355
.dword 0x7fe0eb469d232dd1
.dword 0xbfe22e4c1eeb8fbf
.dword 0x7fe05034d6a0d355
.dword 0x7fe0eb469d232dd1
.dword 0xbfe22e4c1eeb8fbf
.dword 0x7fe05034d6a0d355
.dword 0x7fc94c88e4f0cf23
.dword 0xbff43e6e4398ff87
.dword 0x7fc3387045b11b73
.dword 0x7fc94c88e4f0cf23
.dword 0xbff43e6e4398ff87
.dword 0x7fc3387045b11b73
.dword 0x7fc94c88e4f0cf23
.dword 0xbff43e6e4398ff87
.dword 0x7fc3387045b11b73
.dword 0x7fc94c88e4f0cf23
.dword 0xbff43e6e4398ff87
.dword 0x7fc3387045b11b73
.dword 0x7fc94c88e4f0cf23
.dword 0xbff43e6e4398ff87
.dword 0x7fc3387045b11b73
.dword 0x7feafde4f5fa80c8
.dword 0xbfd3700bd52d2c4f
.dword 0x7fe01daaa27ef61b
.dword 0x7feafde4f5fa80c8
.dword 0xbfd3700bd52d2c4f
.dword 0x7fe01daaa27ef61b
.dword 0x7feafde4f5fa80c8
.dword 0xbfd3700bd52d2c4f
.dword 0x7fe01daaa27ef61b
.dword 0x7feafde4f5fa80c8
.dword 0xbfd3700bd52d2c4f
.dword 0x7fe01daaa27ef61b
.dword 0x7feafde4f5fa80c8
.dword 0xbfd3700bd52d2c4f
.dword 0x7fe01daaa27ef61b
.dword 0x7fe677f9a96d9966
.dword 0xbff796cd8a02d3f6
.dword 0x7fee6665d6935c36
.dword 0x7fe677f9a96d9966
.dword 0xbff796cd8a02d3f6
.dword 0x7fee6665d6935c36
.dword 0x7fe677f9a96d9966
.dword 0xbff796cd8a02d3f6
.dword 0x7fee6665d6935c36
.dword 0x7fe677f9a96d9966
.dword 0xbff796cd8a02d3f6
.dword 0x7fee6665d6935c36
.dword 0x7fe677f9a96d9966
.dword 0xbff796cd8a02d3f6
.dword 0x7fee6665d6935c36
.dword 0x7fb8fd64f104922f
.dword 0xc01964aae7b394df
.dword 0x7fe615f701415147
.dword 0x7fb8fd64f104922f
.dword 0xc01964aae7b394df
.dword 0x7fe615f701415147
.dword 0x7fb8fd64f104922f
.dword 0xc01964aae7b394df
.dword 0x7fe615f701415147
.dword 0x7fb8fd64f104922f
.dword 0xc01964aae7b394df
.dword 0x7fe615f701415147
.dword 0x7fb8fd64f104922f
.dword 0xc01964aae7b394df
.dword 0x7fe615f701415147
.dword 0x7fc146e28288654f
.dword 0xc01a64c77bdc4c08
.dword 0x7fe8751b6a67be4c
.dword 0x7fc146e28288654f
.dword 0xc01a64c77bdc4c08
.dword 0x7fe8751b6a67be4c
.dword 0x7fc146e28288654f
.dword 0xc01a64c77bdc4c08
.dword 0x7fe8751b6a67be4c
.dword 0x7fc146e28288654f
.dword 0xc01a64c77bdc4c08
.dword 0x7fe8751b6a67be4c
.dword 0x7fc146e28288654f
.dword 0xc01a64c77bdc4c08
.dword 0x7fe8751b6a67be4c
.dword 0x7fd6d41e8ed71efb
.dword 0xc0018907e493e2f5
.dword 0x7fec1933e5b458c9
.dword 0x7fd6d41e8ed71efb
.dword 0xc0018907e493e2f5
.dword 0x7fec1933e5b458c9
.dword 0x7fd6d41e8ed71efb
.dword 0xc0018907e493e2f5
.dword 0x7fec1933e5b458c9
.dword 0x7fd6d41e8ed71efb
.dword 0xc0018907e493e2f5
.dword 0x7fec1933e5b458c9
.dword 0x7fd6d41e8ed71efb
.dword 0xc0018907e493e2f5
.dword 0x7fec1933e5b458c9
.dword 0x7fec30d25dc7d1f8
.dword 0xbfe29c66c9d482fb
.dword 0x7fd248247c756437
.dword 0x7fec30d25dc7d1f8
.dword 0xbfe29c66c9d482fb
.dword 0x7fd248247c756437
.dword 0x7fec30d25dc7d1f8
.dword 0xbfe29c66c9d482fb
.dword 0x7fd248247c756437
.dword 0x7fec30d25dc7d1f8
.dword 0xbfe29c66c9d482fb
.dword 0x7fd248247c756437
.dword 0x7fec30d25dc7d1f8
.dword 0xbfe29c66c9d482fb
.dword 0x7fd248247c756437
.dword 0x7fe286daddd336a6
.dword 0xc007e3e64752bdd8
.dword 0x7fe7537d0a566421
.dword 0x7fe286daddd336a6
.dword 0xc007e3e64752bdd8
.dword 0x7fe7537d0a566421
.dword 0x7fe286daddd336a6
.dword 0xc007e3e64752bdd8
.dword 0x7fe7537d0a566421
.dword 0x7fe286daddd336a6
.dword 0xc007e3e64752bdd8
.dword 0x7fe7537d0a566421
.dword 0x7fe286daddd336a6
.dword 0xc007e3e64752bdd8
.dword 0x7fe7537d0a566421
.dword 0x7fc8d035325f0f1f
.dword 0xc02413d1f8d0c012
.dword 0x7fee45febf70f5c4
.dword 0x7fc8d035325f0f1f
.dword 0xc02413d1f8d0c012
.dword 0x7fee45febf70f5c4
.dword 0x7fc8d035325f0f1f
.dword 0xc02413d1f8d0c012
.dword 0x7fee45febf70f5c4
.dword 0x7fc8d035325f0f1f
.dword 0xc02413d1f8d0c012
.dword 0x7fee45febf70f5c4
.dword 0x7fc8d035325f0f1f
.dword 0xc02413d1f8d0c012
.dword 0x7fee45febf70f5c4
.dword 0x7fee460da8265d2d
.dword 0xbff92d4b2f309f8a
.dword 0x7fdf46513d9d53ab
.dword 0x7fee460da8265d2d
.dword 0xbff92d4b2f309f8a
.dword 0x7fdf46513d9d53ab
.dword 0x7fee460da8265d2d
.dword 0xbff92d4b2f309f8a
.dword 0x7fdf46513d9d53ab
.dword 0x7fee460da8265d2d
.dword 0xbff92d4b2f309f8a
.dword 0x7fdf46513d9d53ab
.dword 0x7fee460da8265d2d
.dword 0xbff92d4b2f309f8a
.dword 0x7fdf46513d9d53ab
.dword 0x7fc23193c9b51c5f
.dword 0xc01df407fe3fe871
.dword 0x7fb07ac811455a27
.dword 0x7fc23193c9b51c5f
.dword 0xc01df407fe3fe871
.dword 0x7fb07ac811455a27
.dword 0x7fc23193c9b51c5f
.dword 0xc01df407fe3fe871
.dword 0x7fb07ac811455a27
.dword 0x7fc23193c9b51c5f
.dword 0xc01df407fe3fe871
.dword 0x7fb07ac811455a27
.dword 0x7fc23193c9b51c5f
.dword 0xc01df407fe3fe871
.dword 0x7fb07ac811455a27
.dword 0x7fecd8104cd4e803
.dword 0xbffc12c4e221f23c
.dword 0x7fe29bf2873bcb4b
.dword 0x7fecd8104cd4e803
.dword 0xbffc12c4e221f23c
.dword 0x7fe29bf2873bcb4b
.dword 0x7fecd8104cd4e803
.dword 0xbffc12c4e221f23c
.dword 0x7fe29bf2873bcb4b
.dword 0x7fecd8104cd4e803
.dword 0xbffc12c4e221f23c
.dword 0x7fe29bf2873bcb4b
.dword 0x7fecd8104cd4e803
.dword 0xbffc12c4e221f23c
.dword 0x7fe29bf2873bcb4b
.dword 0x7fdfd85c073a2591
.dword 0xc00a861d98748e27
.dword 0x7fe4ca84761136ef
.dword 0x7fdfd85c073a2591
.dword 0xc00a861d98748e27
.dword 0x7fe4ca84761136ef
.dword 0x7fdfd85c073a2591
.dword 0xc00a861d98748e27
.dword 0x7fe4ca84761136ef
.dword 0x7fdfd85c073a2591
.dword 0xc00a861d98748e27
.dword 0x7fe4ca84761136ef
.dword 0x7fdfd85c073a2591
.dword 0xc00a861d98748e27
.dword 0x7fe4ca84761136ef
.dword 0x7fd5a8fa51e01729
.dword 0xc013fd4ccd713462
.dword 0x7fe61f2260581ec6
.dword 0x7fd5a8fa51e01729
.dword 0xc013fd4ccd713462
.dword 0x7fe61f2260581ec6
.dword 0x7fd5a8fa51e01729
.dword 0xc013fd4ccd713462
.dword 0x7fe61f2260581ec6
.dword 0x7fd5a8fa51e01729
.dword 0xc013fd4ccd713462
.dword 0x7fe61f2260581ec6
.dword 0x7fd5a8fa51e01729
.dword 0xc013fd4ccd713462
.dword 0x7fe61f2260581ec6
.dword 0x7fd8242100dca0f9
.dword 0xc0119cb243429355
.dword 0x7fe525a0943b7292
.dword 0x7fd8242100dca0f9
.dword 0xc0119cb243429355
.dword 0x7fe525a0943b7292
.dword 0x7fd8242100dca0f9
.dword 0xc0119cb243429355
.dword 0x7fe525a0943b7292
.dword 0x7fd8242100dca0f9
.dword 0xc0119cb243429355
.dword 0x7fe525a0943b7292
.dword 0x7fd8242100dca0f9
.dword 0xc0119cb243429355
.dword 0x7fe525a0943b7292
.dword 0x7fb026946c5d22f7
.dword 0xc039ae4916027c77
.dword 0x7fe3d86a7b5170e5
.dword 0x7fb026946c5d22f7
.dword 0xc039ae4916027c77
.dword 0x7fe3d86a7b5170e5
.dword 0x7fb026946c5d22f7
.dword 0xc039ae4916027c77
.dword 0x7fe3d86a7b5170e5
.dword 0x7fb026946c5d22f7
.dword 0xc039ae4916027c77
.dword 0x7fe3d86a7b5170e5
.dword 0x7fb026946c5d22f7
.dword 0xc039ae4916027c77
.dword 0x7fe3d86a7b5170e5
.dword 0x7fd088ea90c6ff9b
.dword 0xc01ed5bda0d17287
.dword 0x7fefbb34f341c62f
.dword 0x7fd088ea90c6ff9b
.dword 0xc01ed5bda0d17287
.dword 0x7fefbb34f341c62f
.dword 0x7fd088ea90c6ff9b
.dword 0xc01ed5bda0d17287
.dword 0x7fefbb34f341c62f
.dword 0x7fd088ea90c6ff9b
.dword 0xc01ed5bda0d17287
.dword 0x7fefbb34f341c62f
.dword 0x7fd088ea90c6ff9b
.dword 0xc01ed5bda0d17287
.dword 0x7fefbb34f341c62f
.dword 0x7fd842c58dceda19
.dword 0xc00781104c024b06
.dword 0x7fbd1d785536fc77
.dword 0x7fd842c58dceda19
.dword 0xc00781104c024b06
.dword 0x7fbd1d785536fc77
.dword 0x7fd842c58dceda19
.dword 0xc00781104c024b06
.dword 0x7fbd1d785536fc77
.dword 0x7fd842c58dceda19
.dword 0xc00781104c024b06
.dword 0x7fbd1d785536fc77
.dword 0x7fd842c58dceda19
.dword 0xc00781104c024b06
.dword 0x7fbd1d785536fc77
.dword 0x7fda172a2bcb69dd
.dword 0xc012a9bea1ec3bd8
.dword 0x7fecddb5f3a506a8
.dword 0x7fda172a2bcb69dd
.dword 0xc012a9bea1ec3bd8
.dword 0x7fecddb5f3a506a8
.dword 0x7fda172a2bcb69dd
.dword 0xc012a9bea1ec3bd8
.dword 0x7fecddb5f3a506a8
.dword 0x7fda172a2bcb69dd
.dword 0xc012a9bea1ec3bd8
.dword 0x7fecddb5f3a506a8
.dword 0x7fda172a2bcb69dd
.dword 0xc012a9bea1ec3bd8
.dword 0x7fecddb5f3a506a8
.dword 0x7f947899d9bfab7f
.dword 0xc04faed66280d8b5
.dword 0x7fd112b7d42952fb
.dword 0x7f947899d9bfab7f
.dword 0xc04faed66280d8b5
.dword 0x7fd112b7d42952fb
.dword 0x7f947899d9bfab7f
.dword 0xc04faed66280d8b5
.dword 0x7fd112b7d42952fb
.dword 0x7f947899d9bfab7f
.dword 0xc04faed66280d8b5
.dword 0x7fd112b7d42952fb
.dword 0x7f947899d9bfab7f
.dword 0xc04faed66280d8b5
.dword 0x7fd112b7d42952fb
.dword 0x7fb6edc5cf85ef57
.dword 0xc02b8f2e4f11fd26
.dword 0x7fcdf9b50c24f6a7
.dword 0x7fb6edc5cf85ef57
.dword 0xc02b8f2e4f11fd26
.dword 0x7fcdf9b50c24f6a7
.dword 0x7fb6edc5cf85ef57
.dword 0xc02b8f2e4f11fd26
.dword 0x7fcdf9b50c24f6a7
.dword 0x7fb6edc5cf85ef57
.dword 0xc02b8f2e4f11fd26
.dword 0x7fcdf9b50c24f6a7
.dword 0x7fb6edc5cf85ef57
.dword 0xc02b8f2e4f11fd26
.dword 0x7fcdf9b50c24f6a7
.dword 0x7fd81f8e726306f5
.dword 0xbf849e96e9cad6d5
.dword 0x7feab2b7e6d25349
.dword 0x7fd81f8e726306f5
.dword 0xbf849e96e9cad6d5
.dword 0x7feab2b7e6d25349
.dword 0x7fd81f8e726306f5
.dword 0xbf849e96e9cad6d5
.dword 0x7feab2b7e6d25349
.dword 0x7fd113f1b844ec29
.dword 0xc02194cca6feaee6
.dword 0x7fdb19041a09c655
.dword 0x7fd113f1b844ec29
.dword 0xc02194cca6feaee6
.dword 0x7fdb19041a09c655
.dword 0x7fd113f1b844ec29
.dword 0xc02194cca6feaee6
.dword 0x7fdb19041a09c655
.dword 0x7fd113f1b844ec29
.dword 0xc02194cca6feaee6
.dword 0x7fdb19041a09c655
.dword 0x7fd113f1b844ec29
.dword 0xc02194cca6feaee6
.dword 0x7fdb19041a09c655
.dword 0x7f8867824bb36ebf
.dword 0x4078295552baee7e
.dword 0x7fd5f78051c221f1
RVTEST_DATA_END

RVMODEL_DATA_BEGIN


signature_x15_0:
    .fill 0*(XLEN/32),4,0xdeadbeef


signature_x15_1:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_2:
    .fill 46*(XLEN/32),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*(XLEN/32),4,0xdeadbeef

#endif

RVMODEL_DATA_END
