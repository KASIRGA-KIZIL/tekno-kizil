
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.5.6
// timestamp : Mon Sep 20 11:53:03 2021 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/compliance_fd/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /scratch/compliance_fd/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV64D/rv64d_fnmadd1.cgf \
 \
//                  -- xlen 64  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2021. IIT Madras. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmadd.d instruction of the RISC-V FD extension for the fnmadd_b17 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV64IFD")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*64.*);check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",d_fnmadd_b17)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x16,test_fp)
RVTEST_SIGBASE(x15,signature_x15_1)

inst_0:
// rs3 == rd != rs1 and rs3 == rd != rs2 and rs2 != rs1, rs1==f28, rs2==f18, rs3==f6, rd==f6, fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 1 and fe3 == 0x7f6 and fm3 == 0xcff39f2b2e98b and rm_val == 0  
// opcode: fnmadd.d ; op1:f28; op2:f18; op3:f6; dest:f6; op1val:0x5fae97d52f73d2ed; op2val:0x5fae549a4f656ebe; op3val:0xff6cff39f2b2e98b; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f6, f28, f18, f6, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_1:
// rs1 == rs2 == rs3 != rd, rs1==f27, rs2==f27, rs3==f27, rd==f1, fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x38aee2c19215f and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0x912bfdff44ba7 and fs3 == 1 and fe3 == 0x7ef and fm3 == 0xe9ffaccdec974 and rm_val == 0  
// opcode: fnmadd.d ; op1:f27; op2:f27; op3:f27; dest:f1; op1val:0x5f638aee2c19215f; op2val:0x5f638aee2c19215f; op3val:0x5f638aee2c19215f; valaddr_reg:x16; val_offset:24; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f1, f27, f27, f27, 0x0, 0, x16, 24, x17, x15, 16, x18)

inst_2:
// rs1 == rs3 != rs2 and rs1 == rs3 != rd and rd != rs2, rs1==f17, rs2==f0, rs3==f17, rd==f20, fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa56aface5eb97 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xabc379493ef0f and fs3 == 1 and fe3 == 0x7f6 and fm3 == 0x60159c3db36d8 and rm_val == 0  
// opcode: fnmadd.d ; op1:f17; op2:f0; op3:f17; dest:f20; op1val:0x5faa56aface5eb97; op2val:0x5faabc379493ef0f; op3val:0x5faa56aface5eb97; valaddr_reg:x16; val_offset:48; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f20, f17, f0, f17, 0x0, 0, x16, 48, x17, x15, 32, x18)

inst_3:
// rs1 == rd == rs3 != rs2, rs1==f5, rs2==f24, rs3==f5, rd==f5, fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe68dd9c514393 and fs2 == 0 and fe2 == 0x5f6 and fm2 == 0x878222f2318df and fs3 == 1 and fe3 == 0x7f1 and fm3 == 0x740cff07df955 and rm_val == 0  
// opcode: fnmadd.d ; op1:f5; op2:f24; op3:f5; dest:f5; op1val:0x5f9e68dd9c514393; op2val:0x5f6878222f2318df; op3val:0x5f9e68dd9c514393; valaddr_reg:x16; val_offset:72; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f5, f5, f24, f5, 0x0, 0, x16, 72, x17, x15, 48, x18)

inst_4:
// rs1 != rs2 and rs1 != rd and rs1 != rs3 and rs2 != rs3 and rs2 != rd and rs3 != rd, rs1==f6, rs2==f3, rs3==f7, rd==f10, fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4038aec1813f9 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x7c017850ccf9e and fs3 == 1 and fe3 == 0x7f5 and fm3 == 0xdb55fa1f8ea2e and rm_val == 0  
// opcode: fnmadd.d ; op1:f6; op2:f3; op3:f7; dest:f10; op1val:0x5fa4038aec1813f9; op2val:0x5fa7c017850ccf9e; op3val:0xff5db55fa1f8ea2e; valaddr_reg:x16; val_offset:96; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f10, f6, f3, f7, 0x0, 0, x16, 96, x17, x15, 64, x18)

inst_5:
// rd == rs2 == rs3 != rs1, rs1==f24, rs2==f14, rs3==f14, rd==f14, fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8e041c6437953 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x28d94e0280abc and fs3 == 1 and fe3 == 0x7f3 and fm3 == 0xcd869b9915f37 and rm_val == 0  
// opcode: fnmadd.d ; op1:f24; op2:f14; op3:f14; dest:f14; op1val:0x5f88e041c6437953; op2val:0x5fa28d94e0280abc; op3val:0x5fa28d94e0280abc; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f14, f24, f14, f14, 0x0, 0, x16, 120, x17, x15, 80, x18)

inst_6:
// rs1 == rs2 == rd != rs3, rs1==f21, rs2==f21, rs3==f16, rd==f21, fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xf59904d0ce0bf and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x1a7baab01ceb9 and fs3 == 1 and fe3 == 0x7f1 and fm3 == 0x14be6f22012e3 and rm_val == 0  
// opcode: fnmadd.d ; op1:f21; op2:f21; op3:f16; dest:f21; op1val:0x5f5f59904d0ce0bf; op2val:0x5f5f59904d0ce0bf; op3val:0xff114be6f22012e3; valaddr_reg:x16; val_offset:144; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f21, f21, f21, f16, 0x0, 0, x16, 144, x17, x15, 96, x18)

inst_7:
// rs2 == rd != rs1 and rs2 == rd != rs3 and rs3 != rs1, rs1==f11, rs2==f19, rs3==f22, rd==f19, fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67fb4908ceaaf and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x65eaa9e302952 and fs3 == 1 and fe3 == 0x7f5 and fm3 == 0xf74b676e24eb8 and rm_val == 0  
// opcode: fnmadd.d ; op1:f11; op2:f19; op3:f22; dest:f19; op1val:0x5fa67fb4908ceaaf; op2val:0x5fa65eaa9e302952; op3val:0xff5f74b676e24eb8; valaddr_reg:x16; val_offset:168; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f19, f11, f19, f22, 0x0, 0, x16, 168, x17, x15, 112, x18)

inst_8:
// rs1 == rs2 != rs3 and rs1 == rs2 != rd and rd != rs3, rs1==f26, rs2==f26, rs3==f11, rd==f17, fs1 == 0 and fe1 == 0x5fa and fm1 == 0x87dc8b1f4a7b7 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xf9492e51e93d3 and fs3 == 1 and fe3 == 0x7f6 and fm3 == 0x82b9099db4536 and rm_val == 0  
// opcode: fnmadd.d ; op1:f26; op2:f26; op3:f11; dest:f17; op1val:0x5fa87dc8b1f4a7b7; op2val:0x5fa87dc8b1f4a7b7; op3val:0xff682b9099db4536; valaddr_reg:x16; val_offset:192; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f17, f26, f26, f11, 0x0, 0, x16, 192, x17, x15, 128, x18)

inst_9:
// rs1 == rs2 == rs3 == rd, rs1==f13, rs2==f13, rs3==f13, rd==f13, fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ffb1e4665b2c and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0xe4206922dd131 and fs3 == 1 and fe3 == 0x7f5 and fm3 == 0x104d9d730c446 and rm_val == 0  
// opcode: fnmadd.d ; op1:f13; op2:f13; op3:f13; dest:f13; op1val:0x5fa1ffb1e4665b2c; op2val:0x5fa1ffb1e4665b2c; op3val:0x5fa1ffb1e4665b2c; valaddr_reg:x16; val_offset:216; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f13, f13, f13, 0x0, 0, x16, 216, x17, x15, 144, x18)

inst_10:
// rs2 == rs3 != rs1 and rs2 == rs3 != rd and rd != rs1, rs1==f2, rs2==f4, rs3==f4, rd==f0, fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x97b629a826ff3 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x98715cd327a81 and fs3 == 1 and fe3 == 0x7f5 and fm3 == 0x453f6ed111529 and rm_val == 0  
// opcode: fnmadd.d ; op1:f2; op2:f4; op3:f4; dest:f0; op1val:0x5f997b629a826ff3; op2val:0x5fa98715cd327a81; op3val:0x5fa98715cd327a81; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f0, f2, f4, f4, 0x0, 0, x16, 240, x17, x15, 160, x18)

inst_11:
// rs1 == rd != rs2 and rs1 == rd != rs3 and rs3 != rs2, rs1==f8, rs2==f6, rs3==f21, rd==f8, fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x308800ab9a08f and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0xb9343c1265853 and fs3 == 1 and fe3 == 0x7f4 and fm3 == 0x066c361ec0d88 and rm_val == 0  
// opcode: fnmadd.d ; op1:f8; op2:f6; op3:f21; dest:f8; op1val:0x5f9308800ab9a08f; op2val:0x5f9b9343c1265853; op3val:0xff4066c361ec0d88; valaddr_reg:x16; val_offset:264; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f8, f8, f6, f21, 0x0, 0, x16, 264, x17, x15, 176, x18)

inst_12:
// rs1==f31, rs2==f10, rs3==f23, rd==f18, fs1 == 0 and fe1 == 0x5fa and fm1 == 0x41176abd4258d and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0xaeb9622c6891f and fs3 == 1 and fe3 == 0x7f4 and fm3 == 0x0e1eed2c5920c and rm_val == 0  
// opcode: fnmadd.d ; op1:f31; op2:f10; op3:f23; dest:f18; op1val:0x5fa41176abd4258d; op2val:0x5f8aeb9622c6891f; op3val:0xff40e1eed2c5920c; valaddr_reg:x16; val_offset:288; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f18, f31, f10, f23, 0x0, 0, x16, 288, x17, x15, 192, x18)

inst_13:
// rs1==f14, rs2==f20, rs3==f9, rd==f16, fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4dd13d82cf047 and fs2 == 0 and fe2 == 0x5f7 and fm2 == 0xafe78faaa8367 and fs3 == 1 and fe3 == 0x7f1 and fm3 == 0x19989cda129c4 and rm_val == 0  
// opcode: fnmadd.d ; op1:f14; op2:f20; op3:f9; dest:f16; op1val:0x5f84dd13d82cf047; op2val:0x5f7afe78faaa8367; op3val:0xff119989cda129c4; valaddr_reg:x16; val_offset:312; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f16, f14, f20, f9, 0x0, 0, x16, 312, x17, x15, 208, x18)

inst_14:
// rs1==f15, rs2==f16, rs3==f2, rd==f31, fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6f674621915da and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x03a0ff71fb0c2 and fs3 == 1 and fe3 == 0x7f5 and fm3 == 0x749c8b1b3ec9a and rm_val == 0  
// opcode: fnmadd.d ; op1:f15; op2:f16; op3:f2; dest:f31; op1val:0x5fa6f674621915da; op2val:0x5fa03a0ff71fb0c2; op3val:0xff5749c8b1b3ec9a; valaddr_reg:x16; val_offset:336; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f31, f15, f16, f2, 0x0, 0, x16, 336, x17, x15, 224, x18)

inst_15:
// rs1==f30, rs2==f25, rs3==f12, rd==f3, fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ed0f2697260f and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb79b2b1934a01 and fs3 == 1 and fe3 == 0x7f6 and fm3 == 0x11bcc6f10ad2d and rm_val == 0  
// opcode: fnmadd.d ; op1:f30; op2:f25; op3:f12; dest:f3; op1val:0x5fa3ed0f2697260f; op2val:0x5fab79b2b1934a01; op3val:0xff611bcc6f10ad2d; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f3, f30, f25, f12, 0x0, 0, x16, 360, x17, x15, 240, x18)

inst_16:
// rs1==f10, rs2==f17, rs3==f24, rd==f9, fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xb3756a76d237f and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0xb8c3b0a05a317 and fs3 == 1 and fe3 == 0x7f0 and fm3 == 0x76df56eee6e8f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f17; op3:f24; dest:f9; op1val:0x5f6b3756a76d237f; op2val:0x5f8b8c3b0a05a317; op3val:0xff076df56eee6e8f; valaddr_reg:x16; val_offset:384; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f9, f10, f17, f24, 0x0, 0, x16, 384, x17, x15, 256, x18)

inst_17:
// rs1==f4, rs2==f28, rs3==f1, rd==f27, fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdd44967e4f77f and fs2 == 0 and fe2 == 0x5f7 and fm2 == 0xbb5518eec7ff7 and fs3 == 1 and fe3 == 0x7f0 and fm3 == 0x9d422b571218a and rm_val == 0  
// opcode: fnmadd.d ; op1:f4; op2:f28; op3:f1; dest:f27; op1val:0x5f7dd44967e4f77f; op2val:0x5f7bb5518eec7ff7; op3val:0xff09d422b571218a; valaddr_reg:x16; val_offset:408; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f27, f4, f28, f1, 0x0, 0, x16, 408, x17, x15, 272, x18)

inst_18:
// rs1==f29, rs2==f30, rs3==f26, rd==f2, fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1ea6995f1c073 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0xf7e9d38031687 and fs3 == 1 and fe3 == 0x7f3 and fm3 == 0x1a1f94e72955c and rm_val == 0  
// opcode: fnmadd.d ; op1:f29; op2:f30; op3:f26; dest:f2; op1val:0x5f81ea6995f1c073; op2val:0x5f9f7e9d38031687; op3val:0xff31a1f94e72955c; valaddr_reg:x16; val_offset:432; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f2, f29, f30, f26, 0x0, 0, x16, 432, x17, x15, 288, x18)

inst_19:
// rs1==f3, rs2==f29, rs3==f25, rd==f11, fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0bb792159b051 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x5d1ae1e1d28a7 and fs3 == 1 and fe3 == 0x7f5 and fm3 == 0x6d155f04ca716 and rm_val == 0  
// opcode: fnmadd.d ; op1:f3; op2:f29; op3:f25; dest:f11; op1val:0x5fa0bb792159b051; op2val:0x5fa5d1ae1e1d28a7; op3val:0xff56d155f04ca716; valaddr_reg:x16; val_offset:456; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f11, f3, f29, f25, 0x0, 0, x16, 456, x17, x15, 304, x18)

inst_20:
// rs1==f12, rs2==f9, rs3==f29, rd==f24, fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xd64f454066002 and fs3 == 1 and fe3 == 0x7f4 and fm3 == 0x77822b2577100 and rm_val == 0  
// opcode: fnmadd.d ; op1:f12; op2:f9; op3:f29; dest:f24; op1val:0x5f898cb938bd0d9b; op2val:0x5fad64f454066002; op3val:0xff477822b2577100; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f24, f12, f9, f29, 0x0, 0, x16, 480, x17, x15, 320, x18)

inst_21:
// rs1==f0, rs2==f11, rs3==f3, rd==f7, fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1bebe7b21cd5f and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x011af8e2b2a8d and fs3 == 1 and fe3 == 0x7f3 and fm3 == 0x1d25bd974be61 and rm_val == 0  
// opcode: fnmadd.d ; op1:f0; op2:f11; op3:f3; dest:f7; op1val:0x5f81bebe7b21cd5f; op2val:0x5fa011af8e2b2a8d; op3val:0xff31d25bd974be61; valaddr_reg:x16; val_offset:504; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f7, f0, f11, f3, 0x0, 0, x16, 504, x17, x15, 336, x18)

inst_22:
// rs1==f25, rs2==f2, rs3==f28, rd==f23, fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xeea576108affb and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0xed04e711db0e1 and fs3 == 1 and fe3 == 0x7f3 and fm3 == 0xdc4f0eb6c0dc8 and rm_val == 0  
// opcode: fnmadd.d ; op1:f25; op2:f2; op3:f28; dest:f23; op1val:0x5f8eea576108affb; op2val:0x5f9ed04e711db0e1; op3val:0xff3dc4f0eb6c0dc8; valaddr_reg:x16; val_offset:528; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f23, f25, f2, f28, 0x0, 0, x16, 528, x17, x15, 352, x18)

inst_23:
// rs1==f16, rs2==f12, rs3==f31, rd==f15, fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x5f6 and fm2 == 0x97b02f6ed223f and fs3 == 1 and fe3 == 0x7f2 and fm3 == 0x08bcad499e695 and rm_val == 0  
// opcode: fnmadd.d ; op1:f16; op2:f12; op3:f31; dest:f15; op1val:0x5fa4c791addc9912; op2val:0x5f697b02f6ed223f; op3val:0xff208bcad499e695; valaddr_reg:x16; val_offset:552; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f15, f16, f12, f31, 0x0, 0, x16, 552, x17, x15, 368, x18)

inst_24:
// rs1==f19, rs2==f31, rs3==f8, rd==f22, fs1 == 0 and fe1 == 0x5fa and fm1 == 0x56eb5abeef1c8 and fs2 == 0 and fe2 == 0x5f7 and fm2 == 0x78842cac09a97 and fs3 == 1 and fe3 == 0x7f2 and fm3 == 0xf85aba7a20503 and rm_val == 0  
// opcode: fnmadd.d ; op1:f19; op2:f31; op3:f8; dest:f22; op1val:0x5fa56eb5abeef1c8; op2val:0x5f778842cac09a97; op3val:0xff2f85aba7a20503; valaddr_reg:x16; val_offset:576; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f22, f19, f31, f8, 0x0, 0, x16, 576, x17, x15, 384, x18)

inst_25:
// rs1==f1, rs2==f5, rs3==f15, rd==f29, fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x670e7d1c3c471 and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0x62964c066279b and fs3 == 1 and fe3 == 0x7f2 and fm3 == 0xf154d61f9b7f2 and rm_val == 0  
// opcode: fnmadd.d ; op1:f1; op2:f5; op3:f15; dest:f29; op1val:0x5f9670e7d1c3c471; op2val:0x5f862964c066279b; op3val:0xff2f154d61f9b7f2; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f29, f1, f5, f15, 0x0, 0, x16, 600, x17, x15, 400, x18)

inst_26:
// rs1==f23, rs2==f15, rs3==f19, rd==f30, fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9889fc2d44e5e and fs2 == 0 and fe2 == 0x5f4 and fm2 == 0x21d9040c119bf and fs3 == 1 and fe3 == 0x7ef and fm3 == 0xce8e191b47a97 and rm_val == 0  
// opcode: fnmadd.d ; op1:f23; op2:f15; op3:f19; dest:f30; op1val:0x5fa9889fc2d44e5e; op2val:0x5f421d9040c119bf; op3val:0xfefce8e191b47a97; valaddr_reg:x16; val_offset:624; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f30, f23, f15, f19, 0x0, 0, x16, 624, x17, x15, 416, x18)

inst_27:
// rs1==f18, rs2==f22, rs3==f20, rd==f26, fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd486b68b34be3 and fs2 == 0 and fe2 == 0x5f7 and fm2 == 0x3cc532c905347 and fs3 == 1 and fe3 == 0x7f3 and fm3 == 0x21df98f84296c and rm_val == 0  
// opcode: fnmadd.d ; op1:f18; op2:f22; op3:f20; dest:f26; op1val:0x5fad486b68b34be3; op2val:0x5f73cc532c905347; op3val:0xff321df98f84296c; valaddr_reg:x16; val_offset:648; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f26, f18, f22, f20, 0x0, 0, x16, 648, x17, x15, 432, x18)

inst_28:
// rs1==f9, rs2==f7, rs3==f0, rd==f28, fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x06933c1e52e8b and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xdff0d9faf6b37 and fs3 == 1 and fe3 == 0x7f3 and fm3 == 0xec44871950571 and rm_val == 0  
// opcode: fnmadd.d ; op1:f9; op2:f7; op3:f0; dest:f28; op1val:0x5f806933c1e52e8b; op2val:0x5fadff0d9faf6b37; op3val:0xff3ec44871950571; valaddr_reg:x16; val_offset:672; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f28, f9, f7, f0, 0x0, 0, x16, 672, x17, x15, 448, x18)

inst_29:
// rs1==f22, rs2==f8, rs3==f30, rd==f12, fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x7a1eff83f19af and fs2 == 0 and fe2 == 0x5f7 and fm2 == 0xbb68e4e714e57 and fs3 == 1 and fe3 == 0x7ef and fm3 == 0x4777496d068c5 and rm_val == 0  
// opcode: fnmadd.d ; op1:f22; op2:f8; op3:f30; dest:f12; op1val:0x5f67a1eff83f19af; op2val:0x5f7bb68e4e714e57; op3val:0xfef4777496d068c5; valaddr_reg:x16; val_offset:696; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f12, f22, f8, f30, 0x0, 0, x16, 696, x17, x15, 464, x18)

inst_30:
// rs1==f7, rs2==f23, rs3==f10, rd==f25, fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0xa5ac383168515 and fs3 == 1 and fe3 == 0x7f4 and fm3 == 0x7f5d622c15cd4 and rm_val == 0  
// opcode: fnmadd.d ; op1:f7; op2:f23; op3:f10; dest:f25; op1val:0x5f9d17c6c95aefed; op2val:0x5f9a5ac383168515; op3val:0xff47f5d622c15cd4; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f25, f7, f23, f10, 0x0, 0, x16, 720, x17, x15, 480, x18)

inst_31:
// rs1==f20, rs2==f1, rs3==f18, rd==f4, fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xfa550bd9aed1a and fs3 == 1 and fe3 == 0x7f6 and fm3 == 0xf2b41fcc90774 and rm_val == 0  
// opcode: fnmadd.d ; op1:f20; op2:f1; op3:f18; dest:f4; op1val:0x5faf849379fb9b6b; op2val:0x5fafa550bd9aed1a; op3val:0xff6f2b41fcc90774; valaddr_reg:x16; val_offset:744; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f4, f20, f1, f18, 0x0, 0, x16, 744, x17, x15, 496, x18)

inst_32:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x31f03f05cb87a and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x2d0e69e0aad85 and fs3 == 1 and fe3 == 0x7f5 and fm3 == 0x67c8b3c54adc3 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa31f03f05cb87a; op2val:0x5fa2d0e69e0aad85; op3val:0xff567c8b3c54adc3; valaddr_reg:x16; val_offset:768; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 768, x17, x15, 512, x18)

inst_33:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d2d3af7c48ae and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x447163c5b6799 and fs3 == 1 and fe3 == 0x7f4 and fm3 == 0x91f9bb360fce8 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa3d2d3af7c48ae; op2val:0x5f9447163c5b6799; op3val:0xff491f9bb360fce8; valaddr_reg:x16; val_offset:792; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 792, x17, x15, 528, x18)

inst_34:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfea4d203770af and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x91b7d2621f217 and fs3 == 1 and fe3 == 0x7f5 and fm3 == 0x90a76c383db51 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fafea4d203770af; op2val:0x5f991b7d2621f217; op3val:0xff590a76c383db51; valaddr_reg:x16; val_offset:816; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 816, x17, x15, 544, x18)

inst_35:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x3883363d45ce5 and fs3 == 1 and fe3 == 0x7f5 and fm3 == 0xe021836ae0937 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa894eb52d7a53a; op2val:0x5fa3883363d45ce5; op3val:0xff5e021836ae0937; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 560, x18)

inst_36:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0bc55b64ea25c and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb0d4dc0773572 and fs3 == 1 and fe3 == 0x7f5 and fm3 == 0xc4bbafcf6046a and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa0bc55b64ea25c; op2val:0x5fab0d4dc0773572; op3val:0xff5c4bbafcf6046a; valaddr_reg:x16; val_offset:864; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 864, x17, x15, 576, x18)

inst_37:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb8178fb8c7f25 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x8ebf551167019 and fs3 == 1 and fe3 == 0x7f5 and fm3 == 0x56bec6a19f8a8 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f9b8178fb8c7f25; op2val:0x5fa8ebf551167019; op3val:0xff556bec6a19f8a8; valaddr_reg:x16; val_offset:888; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 888, x17, x15, 592, x18)

inst_38:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xf959d372fdf5f and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0x26ffb22d6ee1f and fs3 == 1 and fe3 == 0x7f0 and fm3 == 0x232af484e9f31 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f6f959d372fdf5f; op2val:0x5f826ffb22d6ee1f; op3val:0xff0232af484e9f31; valaddr_reg:x16; val_offset:912; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 912, x17, x15, 608, x18)

inst_39:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x588877f85511b and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x7dbc6852f0d29 and fs3 == 1 and fe3 == 0x7f4 and fm3 == 0x00e05595e0c43 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f9588877f85511b; op2val:0x5f97dbc6852f0d29; op3val:0xff400e05595e0c43; valaddr_reg:x16; val_offset:936; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 936, x17, x15, 624, x18)

inst_40:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xf8cb3cb5140d7 and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0xebb37bba609a7 and fs3 == 1 and fe3 == 0x7f2 and fm3 == 0xe4c7dbc1f4325 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f8f8cb3cb5140d7; op2val:0x5f8ebb37bba609a7; op3val:0xff2e4c7dbc1f4325; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 640, x18)

inst_41:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x002e328b68fcd and fs3 == 1 and fe3 == 0x7f3 and fm3 == 0xaeca6194ef529 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f9ae7cb22e21faf; op2val:0x5f9002e328b68fcd; op3val:0xff3aeca6194ef529; valaddr_reg:x16; val_offset:984; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 984, x17, x15, 656, x18)

inst_42:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2339bac8ac55f and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0xa27ff454d2247 and fs3 == 1 and fe3 == 0x7f1 and fm3 == 0xdc15d292d6f93 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f82339bac8ac55f; op2val:0x5f8a27ff454d2247; op3val:0xff1dc15d292d6f93; valaddr_reg:x16; val_offset:1008; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1008, x17, x15, 672, x18)

inst_43:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43f16419df5f9 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xda33f11fe6a09 and fs3 == 1 and fe3 == 0x7f5 and fm3 == 0x2c0756c6bb060 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f943f16419df5f9; op2val:0x5fada33f11fe6a09; op3val:0xff52c0756c6bb060; valaddr_reg:x16; val_offset:1032; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1032, x17, x15, 688, x18)

inst_44:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x237c293c04d53 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x468e8279a5120 and fs3 == 1 and fe3 == 0x7f4 and fm3 == 0x73d25ff0dc05a and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f9237c293c04d53; op2val:0x5fa468e8279a5120; op3val:0xff473d25ff0dc05a; valaddr_reg:x16; val_offset:1056; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1056, x17, x15, 704, x18)

inst_45:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe4e789d337d77 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xaac467660ea9f and fs3 == 1 and fe3 == 0x7f4 and fm3 == 0x942ea83cbc8f6 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f8e4e789d337d77; op2val:0x5faaac467660ea9f; op3val:0xff4942ea83cbc8f6; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 720, x18)

inst_46:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85eb50a9b65e8 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0xbee6f48112ca9 and fs3 == 1 and fe3 == 0x7f5 and fm3 == 0x5457de2d82a38 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa85eb50a9b65e8; op2val:0x5f9bee6f48112ca9; op3val:0xff55457de2d82a38; valaddr_reg:x16; val_offset:1104; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1104, x17, x15, 736, x18)

inst_47:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6fcb8489dc591 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xd5d579f837c3e and fs3 == 1 and fe3 == 0x7f5 and fm3 == 0x518146b0d327a and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f96fcb8489dc591; op2val:0x5fad5d579f837c3e; op3val:0xff5518146b0d327a; valaddr_reg:x16; val_offset:1128; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1128, x17, x15, 752, x18)

inst_48:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x0435cbf7ce303 and fs2 == 0 and fe2 == 0x5f5 and fm2 == 0xcb3c58d58b2bf and fs3 == 1 and fe3 == 0x7ee and fm3 == 0xd2c9cb9ca91a8 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f80435cbf7ce303; op2val:0x5f5cb3c58d58b2bf; op3val:0xfeed2c9cb9ca91a8; valaddr_reg:x16; val_offset:1152; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1152, x17, x15, 768, x18)

inst_49:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc9815c3b1adfc and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0x7dd98b509becf and fs3 == 1 and fe3 == 0x7f4 and fm3 == 0x553526f238a14 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fac9815c3b1adfc; op2val:0x5f87dd98b509becf; op3val:0xff4553526f238a14; valaddr_reg:x16; val_offset:1176; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1176, x17, x15, 784, x18)

inst_50:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea594439af755 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x6a7fe63869fed and fs3 == 1 and fe3 == 0x7f5 and fm3 == 0x5b2b9add5649b and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5faea594439af755; op2val:0x5f96a7fe63869fed; op3val:0xff55b2b9add5649b; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 800, x18)

inst_51:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7840b0a77fbbb and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x94a97c3df3b51 and fs3 == 1 and fe3 == 0x7f4 and fm3 == 0x295f980baba92 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f97840b0a77fbbb; op2val:0x5f994a97c3df3b51; op3val:0xff4295f980baba92; valaddr_reg:x16; val_offset:1224; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1224, x17, x15, 816, x18)

inst_52:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x2a9ac14416973 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x3eb682e8c47fa and fs3 == 1 and fe3 == 0x7f4 and fm3 == 0x73c11eca120ef and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f92a9ac14416973; op2val:0x5fa3eb682e8c47fa; op3val:0xff473c11eca120ef; valaddr_reg:x16; val_offset:1248; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1248, x17, x15, 832, x18)

inst_53:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdf0325e8750cf and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x81cf3ffe0cb08 and fs3 == 1 and fe3 == 0x7f6 and fm3 == 0x68f3c3a5b118b and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fadf0325e8750cf; op2val:0x5fa81cf3ffe0cb08; op3val:0xff668f3c3a5b118b; valaddr_reg:x16; val_offset:1272; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1272, x17, x15, 848, x18)

inst_54:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c30cfd9902ca and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x8083feedaf3d3 and fs3 == 1 and fe3 == 0x7f6 and fm3 == 0x1d869fad10212 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa7c30cfd9902ca; op2val:0x5fa8083feedaf3d3; op3val:0xff61d869fad10212; valaddr_reg:x16; val_offset:1296; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1296, x17, x15, 864, x18)

inst_55:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x01559da52cc50 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x61457deedafab and fs3 == 1 and fe3 == 0x7f5 and fm3 == 0x631ce90b27f1d and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa01559da52cc50; op2val:0x5fa61457deedafab; op3val:0xff5631ce90b27f1d; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 880, x18)

inst_56:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5e77a2a3ef6e5 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xc1d568ee159cf and fs3 == 1 and fe3 == 0x7f5 and fm3 == 0x33e9feb9321c9 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f95e77a2a3ef6e5; op2val:0x5fac1d568ee159cf; op3val:0xff533e9feb9321c9; valaddr_reg:x16; val_offset:1344; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1344, x17, x15, 896, x18)

inst_57:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x440c579831418 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x99ddc9e77cb45 and fs3 == 1 and fe3 == 0x7f5 and fm3 == 0x03683b163d6bf and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa440c579831418; op2val:0x5f999ddc9e77cb45; op3val:0xff503683b163d6bf; valaddr_reg:x16; val_offset:1368; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1368, x17, x15, 912, x18)

inst_58:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97170988aa151 and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0xdd895344c54d7 and fs3 == 1 and fe3 == 0x7f4 and fm3 == 0x7bb02640c9810 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa97170988aa151; op2val:0x5f8dd895344c54d7; op3val:0xff47bb02640c9810; valaddr_reg:x16; val_offset:1392; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1392, x17, x15, 928, x18)

inst_59:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b608176286de and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x7ec25e17b909b and fs3 == 1 and fe3 == 0x7f5 and fm3 == 0x03b0dfff0614c and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa5b608176286de; op2val:0x5f97ec25e17b909b; op3val:0xff503b0dfff0614c; valaddr_reg:x16; val_offset:1416; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1416, x17, x15, 944, x18)

inst_60:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x97c657c682e1f and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0xe719a478092fb and fs3 == 1 and fe3 == 0x7f1 and fm3 == 0x83f194a9bc9a7 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f797c657c682e1f; op2val:0x5f8e719a478092fb; op3val:0xff183f194a9bc9a7; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 960, x18)

inst_61:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x477c4d4dd15f5 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xdbfa105179648 and fs3 == 1 and fe3 == 0x7f6 and fm3 == 0x3071c3d96ff70 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa477c4d4dd15f5; op2val:0x5fadbfa105179648; op3val:0xff63071c3d96ff70; valaddr_reg:x16; val_offset:1464; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1464, x17, x15, 976, x18)

inst_62:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca057fc89126a and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xd7eea06dfbab7 and fs3 == 1 and fe3 == 0x7f6 and fm3 == 0xa62d871f82fff and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5faca057fc89126a; op2val:0x5fad7eea06dfbab7; op3val:0xff6a62d871f82fff; valaddr_reg:x16; val_offset:1488; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1488, x17, x15, 992, x18)

inst_63:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x54fc797f61a47 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0xc49dffef48af1 and fs3 == 1 and fe3 == 0x7f3 and fm3 == 0x2d701d20d0886 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f854fc797f61a47; op2val:0x5f9c49dffef48af1; op3val:0xff32d701d20d0886; valaddr_reg:x16; val_offset:1512; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1512, x17, x15, 1008, x18)

inst_64:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x46086cad941b7 and fs2 == 0 and fe2 == 0x5f7 and fm2 == 0x3cf8a4ab5f917 and fs3 == 1 and fe3 == 0x7f1 and fm3 == 0x93af100731ef8 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f946086cad941b7; op2val:0x5f73cf8a4ab5f917; op3val:0xff193af100731ef8; valaddr_reg:x16; val_offset:1536; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1536, x17, x15, 1024, x18)

inst_65:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x8450b36da4f99 and fs3 == 1 and fe3 == 0x7f5 and fm3 == 0x3de1971a22a66 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5faa321af726492d; op2val:0x5f98450b36da4f99; op3val:0xff53de1971a22a66; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1040, x18)

inst_66:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1c256e07d7b03 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xea5ed10729949 and fs3 == 1 and fe3 == 0x7f5 and fm3 == 0x1024712df5dce and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f91c256e07d7b03; op2val:0x5faea5ed10729949; op3val:0xff51024712df5dce; valaddr_reg:x16; val_offset:1584; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1584, x17, x15, 1056, x18)

inst_67:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdd01ebf317c47 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0xd484e5c7d8c61 and fs3 == 1 and fe3 == 0x7f3 and fm3 == 0xb47f923e94a27 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f8dd01ebf317c47; op2val:0x5f9d484e5c7d8c61; op3val:0xff3b47f923e94a27; valaddr_reg:x16; val_offset:1608; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1608, x17, x15, 1072, x18)

inst_68:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9881bee04c84c and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x41f756c5b46c8 and fs3 == 1 and fe3 == 0x7f6 and fm3 == 0x00e2affebe1df and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa9881bee04c84c; op2val:0x5fa41f756c5b46c8; op3val:0xff600e2affebe1df; valaddr_reg:x16; val_offset:1632; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1632, x17, x15, 1088, x18)

inst_69:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x908348cc50075 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x0f993cf648277 and fs3 == 1 and fe3 == 0x7f4 and fm3 == 0xa8eab7e6deee1 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f9908348cc50075; op2val:0x5fa0f993cf648277; op3val:0xff4a8eab7e6deee1; valaddr_reg:x16; val_offset:1656; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1656, x17, x15, 1104, x18)

inst_70:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 0 and fe2 == 0x5f7 and fm2 == 0x7cb7e10454cbf and fs3 == 1 and fe3 == 0x7f3 and fm3 == 0x40125908ba523 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5faae70dafae96a3; op2val:0x5f77cb7e10454cbf; op3val:0xff340125908ba523; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1120, x18)

inst_71:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x4e8baea923265 and fs3 == 1 and fe3 == 0x7f6 and fm3 == 0x0a3ec08a2df8e and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa97787813faa38; op2val:0x5fa4e8baea923265; op3val:0xff60a3ec08a2df8e; valaddr_reg:x16; val_offset:1704; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1704, x17, x15, 1136, x18)

inst_72:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x377828aab6e99 and fs3 == 1 and fe3 == 0x7f5 and fm3 == 0x00c421b49377d and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5faa613e194097b8; op2val:0x5f9377828aab6e99; op3val:0xff500c421b49377d; valaddr_reg:x16; val_offset:1728; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1728, x17, x15, 1152, x18)

inst_73:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x13bf56ad82c8a and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xd453f7d35f923 and fs3 == 1 and fe3 == 0x7f5 and fm3 == 0xf8743c6f979f8 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa13bf56ad82c8a; op2val:0x5fad453f7d35f923; op3val:0xff5f8743c6f979f8; valaddr_reg:x16; val_offset:1752; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1752, x17, x15, 1168, x18)

inst_74:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x3bd530bfc7921 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x4c524788895e4 and fs3 == 1 and fe3 == 0x7f4 and fm3 == 0x99fdfdc2e77fd and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f93bd530bfc7921; op2val:0x5fa4c524788895e4; op3val:0xff499fdfdc2e77fd; valaddr_reg:x16; val_offset:1776; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1776, x17, x15, 1184, x18)

inst_75:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x87814b483b2ff and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0xc56d7d1a2a465 and fs3 == 1 and fe3 == 0x7f4 and fm3 == 0x5ab79dcb0203d and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f987814b483b2ff; op2val:0x5f9c56d7d1a2a465; op3val:0xff45ab79dcb0203d; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1200, x18)

inst_76:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xef0f52001dd13 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x774135045aad3 and fs3 == 1 and fe3 == 0x7f5 and fm3 == 0x6ad6c5444aa35 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5faef0f52001dd13; op2val:0x5f9774135045aad3; op3val:0xff56ad6c5444aa35; valaddr_reg:x16; val_offset:1824; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1824, x17, x15, 1216, x18)

inst_77:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x2de4ff93f2d49 and fs2 == 0 and fe2 == 0x5f4 and fm2 == 0x54cb8485c10ff and fs3 == 1 and fe3 == 0x7ee and fm3 == 0x91e4244ef8416 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f92de4ff93f2d49; op2val:0x5f454cb8485c10ff; op3val:0xfee91e4244ef8416; valaddr_reg:x16; val_offset:1848; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1848, x17, x15, 1232, x18)

inst_78:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4cf1937fde173 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x86d2c67f038bd and fs3 == 1 and fe3 == 0x7f2 and fm3 == 0xfc4a2707d3c54 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f84cf1937fde173; op2val:0x5f986d2c67f038bd; op3val:0xff2fc4a2707d3c54; valaddr_reg:x16; val_offset:1872; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1872, x17, x15, 1248, x18)

inst_79:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x932903b557086 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xba615dee0d545 and fs3 == 1 and fe3 == 0x7f6 and fm3 == 0x5c57136f25b95 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa932903b557086; op2val:0x5faba615dee0d545; op3val:0xff65c57136f25b95; valaddr_reg:x16; val_offset:1896; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1896, x17, x15, 1264, x18)

inst_80:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9199ba7fdacbd and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x9e32e020ad6fd and fs3 == 1 and fe3 == 0x7f5 and fm3 == 0x44e3359d7ba4f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa9199ba7fdacbd; op2val:0x5f99e32e020ad6fd; op3val:0xff544e3359d7ba4f; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1280, x18)

inst_81:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x820702d63fac0 and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0x63bca2c276bab and fs3 == 1 and fe3 == 0x7f4 and fm3 == 0x0c3615c16de36 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa820702d63fac0; op2val:0x5f863bca2c276bab; op3val:0xff40c3615c16de36; valaddr_reg:x16; val_offset:1944; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1944, x17, x15, 1296, x18)

inst_82:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x017c339d75e4d and fs2 == 0 and fe2 == 0x5f5 and fm2 == 0xc30407e58dcff and fs3 == 1 and fe3 == 0x7f0 and fm3 == 0xc5a1dcd07d4e0 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa017c339d75e4d; op2val:0x5f5c30407e58dcff; op3val:0xff0c5a1dcd07d4e0; valaddr_reg:x16; val_offset:1968; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1968, x17, x15, 1312, x18)

inst_83:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x56ed923aca873 and fs3 == 1 and fe3 == 0x7f4 and fm3 == 0xced138018ff79 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa597fb1bb06230; op2val:0x5f956ed923aca873; op3val:0xff4ced138018ff79; valaddr_reg:x16; val_offset:1992; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1992, x17, x15, 1328, x18)

inst_84:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x82640d65dc24c and fs3 == 1 and fe3 == 0x7f5 and fm3 == 0xfccd10e0cb887 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa511a1344303ed; op2val:0x5fa82640d65dc24c; op3val:0xff5fccd10e0cb887; valaddr_reg:x16; val_offset:2016; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 2016, x17, x15, 1344, x18)
addi x16,x16,2040

inst_85:
// fs1 == 0 and fe1 == 0x5f2 and fm1 == 0x8e1a79f69deff and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0xf112c2c43eca3 and fs3 == 1 and fe3 == 0x7ed and fm3 == 0x827f49c2cd268 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f28e1a79f69deff; op2val:0x5f9f112c2c43eca3; op3val:0xfed827f49c2cd268; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 1360, x18)

inst_86:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa3d5b9f8ee473 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xeefde430a673b and fs3 == 1 and fe3 == 0x7f4 and fm3 == 0x95e366a8a4bfe and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f8a3d5b9f8ee473; op2val:0x5faeefde430a673b; op3val:0xff495e366a8a4bfe; valaddr_reg:x16; val_offset:24; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 24, x17, x15, 1376, x18)

inst_87:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x03c79a41b870f and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x21d7278b1bb7f and fs3 == 1 and fe3 == 0x7f4 and fm3 == 0x261ea9e7506ae and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f903c79a41b870f; op2val:0x5fa21d7278b1bb7f; op3val:0xff4261ea9e7506ae; valaddr_reg:x16; val_offset:48; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 48, x17, x15, 1392, x18)

inst_88:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1a5d3a022c06b and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x39827e2b6fc0e and fs3 == 1 and fe3 == 0x7f3 and fm3 == 0x59cbea6de8678 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f81a5d3a022c06b; op2val:0x5fa39827e2b6fc0e; op3val:0xff359cbea6de8678; valaddr_reg:x16; val_offset:72; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 72, x17, x15, 1408, x18)

inst_89:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0x882e3a7d63c53 and fs3 == 1 and fe3 == 0x7f3 and fm3 == 0xcbd064c6a588c and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa2c2600e5225e4; op2val:0x5f8882e3a7d63c53; op3val:0xff3cbd064c6a588c; valaddr_reg:x16; val_offset:96; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 96, x17, x15, 1424, x18)

inst_90:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0x98a767463fb7b and fs3 == 1 and fe3 == 0x7f4 and fm3 == 0x39701787d960d and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa88b452334d482; op2val:0x5f898a767463fb7b; op3val:0xff439701787d960d; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 1440, x18)

inst_91:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4f4bdbe3ee53 and fs2 == 0 and fe2 == 0x5f7 and fm2 == 0x9b7932c7ac007 and fs3 == 1 and fe3 == 0x7f3 and fm3 == 0x6c05af139ac4c and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fac4f4bdbe3ee53; op2val:0x5f79b7932c7ac007; op3val:0xff36c05af139ac4c; valaddr_reg:x16; val_offset:144; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 144, x17, x15, 1456, x18)

inst_92:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757c41e46ee0f and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x367fd258b0b63 and fs3 == 1 and fe3 == 0x7f5 and fm3 == 0xc4fef350a12aa and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa757c41e46ee0f; op2val:0x5fa367fd258b0b63; op3val:0xff5c4fef350a12aa; valaddr_reg:x16; val_offset:168; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 168, x17, x15, 1472, x18)

inst_93:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 0 and fe2 == 0x5f5 and fm2 == 0x18c773392efff and fs3 == 1 and fe3 == 0x7f0 and fm3 == 0xca454fc10de73 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5faa1d3ea060b239; op2val:0x5f518c773392efff; op3val:0xff0ca454fc10de73; valaddr_reg:x16; val_offset:192; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 192, x17, x15, 1488, x18)

inst_94:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6c53c0ba0796d and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xc43588ddd7fbc and fs3 == 1 and fe3 == 0x7f6 and fm3 == 0x41c80833c8fd5 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa6c53c0ba0796d; op2val:0x5fac43588ddd7fbc; op3val:0xff641c80833c8fd5; valaddr_reg:x16; val_offset:216; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 216, x17, x15, 1504, x18)

inst_95:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 0 and fe2 == 0x5f4 and fm2 == 0x7c4c7501c707f and fs3 == 1 and fe3 == 0x7ef and fm3 == 0xe2d9c39eca63e and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa45088c7a8eddc; op2val:0x5f47c4c7501c707f; op3val:0xfefe2d9c39eca63e; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 1520, x18)

inst_96:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9c63a6687c333 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x557d56987bca8 and fs3 == 1 and fe3 == 0x7f5 and fm3 == 0x130d526845787 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f99c63a6687c333; op2val:0x5fa557d56987bca8; op3val:0xff5130d526845787; valaddr_reg:x16; val_offset:264; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 264, x17, x15, 1536, x18)

inst_97:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb442f12e7354a and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0xcccc36886926f and fs3 == 1 and fe3 == 0x7f4 and fm3 == 0x88a225d31ef0e and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fab442f12e7354a; op2val:0x5f8cccc36886926f; op3val:0xff488a225d31ef0e; valaddr_reg:x16; val_offset:288; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 288, x17, x15, 1552, x18)

inst_98:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0f47a5db15 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x5124f30535e0b and fs3 == 1 and fe3 == 0x7f5 and fm3 == 0xf6c21b5d63b88 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa7dc0f47a5db15; op2val:0x5fa5124f30535e0b; op3val:0xff5f6c21b5d63b88; valaddr_reg:x16; val_offset:312; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 312, x17, x15, 1568, x18)

inst_99:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe3d6d32e17fa5 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xec884da30b843 and fs3 == 1 and fe3 == 0x7f5 and fm3 == 0xd1713d5c45d1a and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f9e3d6d32e17fa5; op2val:0x5faec884da30b843; op3val:0xff5d1713d5c45d1a; valaddr_reg:x16; val_offset:336; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 336, x17, x15, 1584, x18)

inst_100:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bc16c6eccc22 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xdf93331a60977 and fs3 == 1 and fe3 == 0x7f6 and fm3 == 0x54b80948cc1ed and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa6bc16c6eccc22; op2val:0x5fadf93331a60977; op3val:0xff654b80948cc1ed; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 1600, x18)

inst_101:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x053533036dba9 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0xee098e2310cc3 and fs3 == 1 and fe3 == 0x7f4 and fm3 == 0xf8166856b2927 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa053533036dba9; op2val:0x5f9ee098e2310cc3; op3val:0xff4f8166856b2927; valaddr_reg:x16; val_offset:384; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 384, x17, x15, 1616, x18)

inst_102:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30b95bd887309 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xc37d95ef26f70 and fs3 == 1 and fe3 == 0x7f6 and fm3 == 0x0cb604e46e63f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa30b95bd887309; op2val:0x5fac37d95ef26f70; op3val:0xff60cb604e46e63f; valaddr_reg:x16; val_offset:408; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 408, x17, x15, 1632, x18)

inst_103:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x287a907776fa3 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0xc3c58b5c03e1d and fs3 == 1 and fe3 == 0x7f3 and fm3 == 0x059a5a1c5fc28 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f8287a907776fa3; op2val:0x5f9c3c58b5c03e1d; op3val:0xff3059a5a1c5fc28; valaddr_reg:x16; val_offset:432; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 432, x17, x15, 1648, x18)

inst_104:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfd8213d6f2891 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x90cd3970eae8a and fs3 == 1 and fe3 == 0x7f6 and fm3 == 0x8ed9d93e3878e and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fafd8213d6f2891; op2val:0x5fa90cd3970eae8a; op3val:0xff68ed9d93e3878e; valaddr_reg:x16; val_offset:456; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 456, x17, x15, 1664, x18)

inst_105:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd800e87943f0d and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x680debcf012e2 and fs3 == 1 and fe3 == 0x7f5 and fm3 == 0x4bed78de6b01b and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f9d800e87943f0d; op2val:0x5fa680debcf012e2; op3val:0xff54bed78de6b01b; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1680, x18)

inst_106:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6e444c20e8184 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x076f4d15b455d and fs3 == 1 and fe3 == 0x7f4 and fm3 == 0x78e7681c69388 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa6e444c20e8184; op2val:0x5f9076f4d15b455d; op3val:0xff478e7681c69388; valaddr_reg:x16; val_offset:504; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 504, x17, x15, 1696, x18)

inst_107:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82f53e1b1e100 and fs2 == 0 and fe2 == 0x5f7 and fm2 == 0x89d942a85e30f and fs3 == 1 and fe3 == 0x7f3 and fm3 == 0x29a9717d7fbb7 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa82f53e1b1e100; op2val:0x5f789d942a85e30f; op3val:0xff329a9717d7fbb7; valaddr_reg:x16; val_offset:528; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 528, x17, x15, 1712, x18)

inst_108:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb0a304fe19bf and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x14eff5bf25de3 and fs3 == 1 and fe3 == 0x7f2 and fm3 == 0xf0954340ba8d2 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f7cb0a304fe19bf; op2val:0x5fa14eff5bf25de3; op3val:0xff2f0954340ba8d2; valaddr_reg:x16; val_offset:552; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 552, x17, x15, 1728, x18)

inst_109:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0xc160cd96157af and fs3 == 1 and fe3 == 0x7f5 and fm3 == 0x32122d42593f9 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa5cb9025515212; op2val:0x5f9c160cd96157af; op3val:0xff532122d42593f9; valaddr_reg:x16; val_offset:576; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 576, x17, x15, 1744, x18)

inst_110:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x2f7ee631fefc5 and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0xda8557b559e8b and fs3 == 1 and fe3 == 0x7f3 and fm3 == 0x19478590a4d1b and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f92f7ee631fefc5; op2val:0x5f8da8557b559e8b; op3val:0xff319478590a4d1b; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1760, x18)

inst_111:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa2ea1f3d3ef9 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x4bd16a0267938 and fs3 == 1 and fe3 == 0x7f6 and fm3 == 0x480c2e8a45a7b and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fafa2ea1f3d3ef9; op2val:0x5fa4bd16a0267938; op3val:0xff6480c2e8a45a7b; valaddr_reg:x16; val_offset:624; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 624, x17, x15, 1776, x18)

inst_112:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x11c62f98de3bf and fs2 == 0 and fe2 == 0x5f7 and fm2 == 0x60de25d29e92f and fs3 == 1 and fe3 == 0x7ef and fm3 == 0x795e13c25b2cc and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f711c62f98de3bf; op2val:0x5f760de25d29e92f; op3val:0xfef795e13c25b2cc; valaddr_reg:x16; val_offset:648; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 648, x17, x15, 1792, x18)

inst_113:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfed8d422e59b9 and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0x2c08bdce69f77 and fs3 == 1 and fe3 == 0x7f4 and fm3 == 0x2b5bc510c05b5 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fafed8d422e59b9; op2val:0x5f82c08bdce69f77; op3val:0xff42b5bc510c05b5; valaddr_reg:x16; val_offset:672; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 672, x17, x15, 1808, x18)

inst_114:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x5f7 and fm2 == 0x89000c246f107 and fs3 == 1 and fe3 == 0x7f3 and fm3 == 0x416a9e7426c8f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5faa2bda964d91ae; op2val:0x5f789000c246f107; op3val:0xff3416a9e7426c8f; valaddr_reg:x16; val_offset:696; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 696, x17, x15, 1824, x18)

inst_115:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xd65025c565597 and fs3 == 1 and fe3 == 0x7f6 and fm3 == 0x3f6895069b2d9 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa5bb8442cbfc28; op2val:0x5fad65025c565597; op3val:0xff63f6895069b2d9; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1840, x18)

inst_116:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x09a18dc6373ff and fs3 == 1 and fe3 == 0x7f4 and fm3 == 0x03ace329d0aed and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f9f4853a4c5bef9; op2val:0x5f909a18dc6373ff; op3val:0xff403ace329d0aed; valaddr_reg:x16; val_offset:744; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 744, x17, x15, 1856, x18)

inst_117:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xac08ec2b88c86 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x2fe2d0b2849b1 and fs3 == 1 and fe3 == 0x7f4 and fm3 == 0xfc19cc59c1236 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5faac08ec2b88c86; op2val:0x5f92fe2d0b2849b1; op3val:0xff4fc19cc59c1236; valaddr_reg:x16; val_offset:768; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 768, x17, x15, 1872, x18)

inst_118:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x9bd3c29ad0568 and fs3 == 1 and fe3 == 0x7f6 and fm3 == 0x892b8cdb4965c and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae8ce066e96229; op2val:0x5fa9bd3c29ad0568; op3val:0xff6892b8cdb4965c; valaddr_reg:x16; val_offset:792; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 792, x17, x15, 1888, x18)

inst_119:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x0d77af376928b and fs3 == 1 and fe3 == 0x7f4 and fm3 == 0x21e29395e67fa and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f91365a93dfa50f; op2val:0x5fa0d77af376928b; op3val:0xff421e29395e67fa; valaddr_reg:x16; val_offset:816; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 816, x17, x15, 1904, x18)

inst_120:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6e2aa97ad4287 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0xd4012b921b92d and fs3 == 1 and fe3 == 0x7f4 and fm3 == 0x4eb3d528adc8c and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f96e2aa97ad4287; op2val:0x5f9d4012b921b92d; op3val:0xff44eb3d528adc8c; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1920, x18)

inst_121:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x7270fced2be29 and fs3 == 1 and fe3 == 0x7f6 and fm3 == 0x1fe9547f4c080 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa8deeb902c377e; op2val:0x5fa7270fced2be29; op3val:0xff61fe9547f4c080; valaddr_reg:x16; val_offset:864; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 864, x17, x15, 1936, x18)

inst_122:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x5f5 and fm2 == 0x942c54f20963f and fs3 == 1 and fe3 == 0x7f1 and fm3 == 0x17f39a81124ff and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa62a35ac6bee41; op2val:0x5f5942c54f20963f; op3val:0xff117f39a81124ff; valaddr_reg:x16; val_offset:888; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 888, x17, x15, 1952, x18)

inst_123:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb33c7d55682c1 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x48300cd907da9 and fs3 == 1 and fe3 == 0x7f6 and fm3 == 0x16fb98e25f7e4 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fab33c7d55682c1; op2val:0x5fa48300cd907da9; op3val:0xff616fb98e25f7e4; valaddr_reg:x16; val_offset:912; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 912, x17, x15, 1968, x18)

inst_124:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf29a9c82218e7 and fs2 == 0 and fe2 == 0x5f7 and fm2 == 0xf2c5343ef46b7 and fs3 == 1 and fe3 == 0x7f0 and fm3 == 0xe5b86d98cd59f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f7f29a9c82218e7; op2val:0x5f7f2c5343ef46b7; op3val:0xff0e5b86d98cd59f; valaddr_reg:x16; val_offset:936; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 936, x17, x15, 1984, x18)

inst_125:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xda577e11e08d7 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x81d54dd6137b5 and fs3 == 1 and fe3 == 0x7f5 and fm3 == 0x657467cee0de2 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f9da577e11e08d7; op2val:0x5fa81d54dd6137b5; op3val:0xff5657467cee0de2; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 2000, x18)

inst_126:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x24a28f97e5b1f and fs3 == 1 and fe3 == 0x7f3 and fm3 == 0xc253ff32fb1ce and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f889f3951da2feb; op2val:0x5fa24a28f97e5b1f; op3val:0xff3c253ff32fb1ce; valaddr_reg:x16; val_offset:984; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 984, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_2)

inst_127:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdedbc42e4ee38 and fs2 == 0 and fe2 == 0x5f7 and fm2 == 0x398aa070366df and fs3 == 1 and fe3 == 0x7f3 and fm3 == 0x253f00b7cffec and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fadedbc42e4ee38; op2val:0x5f7398aa070366df; op3val:0xff3253f00b7cffec; valaddr_reg:x16; val_offset:1008; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1008, x17, x15, 0, x18)

inst_128:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x2e3db402ba61f and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x232f190317157 and fs3 == 1 and fe3 == 0x7f1 and fm3 == 0x57c7be7ad2ebc and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f72e3db402ba61f; op2val:0x5f9232f190317157; op3val:0xff157c7be7ad2ebc; valaddr_reg:x16; val_offset:1032; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1032, x17, x15, 16, x18)

inst_129:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0xaa7d58e3b9047 and fs3 == 1 and fe3 == 0x7f3 and fm3 == 0x9e6e57722524a and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f9f1860e3b4eb81; op2val:0x5f8aa7d58e3b9047; op3val:0xff39e6e57722524a; valaddr_reg:x16; val_offset:1056; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1056, x17, x15, 32, x18)

inst_130:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x0197267f1985f and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0xce41f387adc6f and fs3 == 1 and fe3 == 0x7ef and fm3 == 0xd12123e525707 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f50197267f1985f; op2val:0x5f9ce41f387adc6f; op3val:0xfefd12123e525707; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 48, x18)

inst_131:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x3943b61964e33 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xae64a7b19f21e and fs3 == 1 and fe3 == 0x7f5 and fm3 == 0x075573c327db8 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f93943b61964e33; op2val:0x5faae64a7b19f21e; op3val:0xff5075573c327db8; valaddr_reg:x16; val_offset:1104; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1104, x17, x15, 64, x18)

inst_132:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x3832e6fea9a3f and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x5ee10a5a625fc and fs3 == 1 and fe3 == 0x7f0 and fm3 == 0xabe8092d68a4a and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f53832e6fea9a3f; op2val:0x5fa5ee10a5a625fc; op3val:0xff0abe8092d68a4a; valaddr_reg:x16; val_offset:1128; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1128, x17, x15, 80, x18)

inst_133:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x2887dc585eda5 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xf79012fbad378 and fs3 == 1 and fe3 == 0x7f5 and fm3 == 0x23a4ea2d53b5d and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f92887dc585eda5; op2val:0x5faf79012fbad378; op3val:0xff523a4ea2d53b5d; valaddr_reg:x16; val_offset:1152; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1152, x17, x15, 96, x18)

inst_134:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xd7c8570796fe8 and fs3 == 1 and fe3 == 0x7f5 and fm3 == 0xe9e87df92d472 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa09d5da3d7b9db; op2val:0x5fad7c8570796fe8; op3val:0xff5e9e87df92d472; valaddr_reg:x16; val_offset:1176; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1176, x17, x15, 112, x18)

inst_135:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x9af59f9eb5168 and fs3 == 1 and fe3 == 0x7f3 and fm3 == 0x34572e32812be and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f7802693539b05f; op2val:0x5fa9af59f9eb5168; op3val:0xff334572e32812be; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 128, x18)

inst_136:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xac0c7cf6e58fb and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x0cd5422534b0d and fs3 == 1 and fe3 == 0x7f4 and fm3 == 0xc181a7cfdfdf5 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f9ac0c7cf6e58fb; op2val:0x5fa0cd5422534b0d; op3val:0xff4c181a7cfdfdf5; valaddr_reg:x16; val_offset:1224; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1224, x17, x15, 144, x18)

inst_137:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x2982d565d88fc and fs3 == 1 and fe3 == 0x7f5 and fm3 == 0x305ac88092a15 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa05e381015d598; op2val:0x5fa2982d565d88fc; op3val:0xff5305ac88092a15; valaddr_reg:x16; val_offset:1248; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1248, x17, x15, 160, x18)

inst_138:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xed1da04d72f12 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x7536733396cf8 and fs3 == 1 and fe3 == 0x7f6 and fm3 == 0x6772865c2b9c3 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5faed1da04d72f12; op2val:0x5fa7536733396cf8; op3val:0xff66772865c2b9c3; valaddr_reg:x16; val_offset:1272; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1272, x17, x15, 176, x18)

inst_139:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x48949a9851f6d and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0xb318d9af479ef and fs3 == 1 and fe3 == 0x7f4 and fm3 == 0x173a3403210e1 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa48949a9851f6d; op2val:0x5f8b318d9af479ef; op3val:0xff4173a3403210e1; valaddr_reg:x16; val_offset:1296; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1296, x17, x15, 192, x18)

inst_140:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0a9df4ead8eb3 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0xdb8c7d3a18027 and fs3 == 1 and fe3 == 0x7f4 and fm3 == 0xef45663d524c8 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa0a9df4ead8eb3; op2val:0x5f9db8c7d3a18027; op3val:0xff4ef45663d524c8; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 208, x18)

inst_141:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x743ea0c02659b and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0xda2a011aeffab and fs3 == 1 and fe3 == 0x7f2 and fm3 == 0x58bc84c2c83c3 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f8743ea0c02659b; op2val:0x5f8da2a011aeffab; op3val:0xff258bc84c2c83c3; valaddr_reg:x16; val_offset:1344; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1344, x17, x15, 224, x18)

inst_142:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7291f0459edd6 and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0xed4ae61a16dab and fs3 == 1 and fe3 == 0x7f4 and fm3 == 0x6507bb7d346b2 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa7291f0459edd6; op2val:0x5f8ed4ae61a16dab; op3val:0xff46507bb7d346b2; valaddr_reg:x16; val_offset:1368; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1368, x17, x15, 240, x18)

inst_143:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x22cfa989fca0f and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0xa2892d94829ad and fs3 == 1 and fe3 == 0x7f0 and fm3 == 0xdb72e7bc3e8f9 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f622cfa989fca0f; op2val:0x5f9a2892d94829ad; op3val:0xff0db72e7bc3e8f9; valaddr_reg:x16; val_offset:1392; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1392, x17, x15, 256, x18)

inst_144:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x0d68c4b00b1ad and fs3 == 1 and fe3 == 0x7f4 and fm3 == 0xc7dbd315c4cf6 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f9b12b5923ada87; op2val:0x5fa0d68c4b00b1ad; op3val:0xff4c7dbd315c4cf6; valaddr_reg:x16; val_offset:1416; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1416, x17, x15, 272, x18)

inst_145:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x99b4caa7ee21f and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x6b435c9707703 and fs3 == 1 and fe3 == 0x7f6 and fm3 == 0x22af94edeb7e7 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa99b4caa7ee21f; op2val:0x5fa6b435c9707703; op3val:0xff622af94edeb7e7; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 288, x18)

inst_146:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x00ccac0a4b811 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x2eb6a94e9ae19 and fs3 == 1 and fe3 == 0x7f4 and fm3 == 0x2fa8ae4c6bb09 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f900ccac0a4b811; op2val:0x5fa2eb6a94e9ae19; op3val:0xff42fa8ae4c6bb09; valaddr_reg:x16; val_offset:1464; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1464, x17, x15, 304, x18)

inst_147:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfd32694fcaecb and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0xdc1b3eb6c004b and fs3 == 1 and fe3 == 0x7f4 and fm3 == 0xd97ff66f9700f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fafd32694fcaecb; op2val:0x5f8dc1b3eb6c004b; op3val:0xff4d97ff66f9700f; valaddr_reg:x16; val_offset:1488; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1488, x17, x15, 320, x18)

inst_148:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x043a8c3aa6439 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xf788de2d51675 and fs3 == 1 and fe3 == 0x7f5 and fm3 == 0xffda2a7a927c2 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa043a8c3aa6439; op2val:0x5faf788de2d51675; op3val:0xff5ffda2a7a927c2; valaddr_reg:x16; val_offset:1512; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1512, x17, x15, 336, x18)

inst_149:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x5f7 and fm2 == 0x88b104e822b8f and fs3 == 1 and fe3 == 0x7f0 and fm3 == 0xfa4e1652dafbf and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f84a10e22bb3b33; op2val:0x5f788b104e822b8f; op3val:0xff0fa4e1652dafbf; valaddr_reg:x16; val_offset:1536; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1536, x17, x15, 352, x18)

inst_150:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x1fe2d6aba9e77 and fs2 == 0 and fe2 == 0x5f6 and fm2 == 0xd126610309c1f and fs3 == 1 and fe3 == 0x7f0 and fm3 == 0x058b18590588a and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f81fe2d6aba9e77; op2val:0x5f6d126610309c1f; op3val:0xff0058b18590588a; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 368, x18)

inst_151:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x5f5 and fm2 == 0x2774cd9885b7f and fs3 == 1 and fe3 == 0x7ef and fm3 == 0xf013dec82d387 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f9add465d39fd03; op2val:0x5f52774cd9885b7f; op3val:0xfeff013dec82d387; valaddr_reg:x16; val_offset:1584; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1584, x17, x15, 384, x18)

inst_152:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x095092a183e33 and fs3 == 1 and fe3 == 0x7f4 and fm3 == 0xfd42fbda1420a and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5faeb61e2d5d3c7a; op2val:0x5f9095092a183e33; op3val:0xff4fd42fbda1420a; valaddr_reg:x16; val_offset:1608; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1608, x17, x15, 400, x18)

inst_153:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x9262273e53737 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x07943814fd4f4 and fs3 == 1 and fe3 == 0x7f4 and fm3 == 0x9e4bcf362e2c2 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f99262273e53737; op2val:0x5fa07943814fd4f4; op3val:0xff49e4bcf362e2c2; valaddr_reg:x16; val_offset:1632; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1632, x17, x15, 416, x18)

inst_154:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbfe0f0fcad936 and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0x0531d684ae65b and fs3 == 1 and fe3 == 0x7f3 and fm3 == 0xc8f7870de7e0c and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fabfe0f0fcad936; op2val:0x5f80531d684ae65b; op3val:0xff3c8f7870de7e0c; valaddr_reg:x16; val_offset:1656; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1656, x17, x15, 432, x18)

inst_155:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x43e5b36b50bcd and fs2 == 0 and fe2 == 0x5f7 and fm2 == 0xa1fe3e0c64717 and fs3 == 1 and fe3 == 0x7f2 and fm3 == 0x086d6ad59125b and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f943e5b36b50bcd; op2val:0x5f7a1fe3e0c64717; op3val:0xff2086d6ad59125b; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 448, x18)

inst_156:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe4204ffab96f7 and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0xcde16617ec93f and fs3 == 1 and fe3 == 0x7f3 and fm3 == 0xb4bc38bf74baa and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f9e4204ffab96f7; op2val:0x5f8cde16617ec93f; op3val:0xff3b4bc38bf74baa; valaddr_reg:x16; val_offset:1704; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1704, x17, x15, 464, x18)

inst_157:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82e62659b7f9b and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb9927e27c836d and fs3 == 1 and fe3 == 0x7f6 and fm3 == 0x4dadeefde9cf6 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa82e62659b7f9b; op2val:0x5fab9927e27c836d; op3val:0xff64dadeefde9cf6; valaddr_reg:x16; val_offset:1728; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1728, x17, x15, 480, x18)

inst_158:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x882d3626badfd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x7ada4a02edef8 and fs3 == 1 and fe3 == 0x7f6 and fm3 == 0x223094eb6db60 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa882d3626badfd; op2val:0x5fa7ada4a02edef8; op3val:0xff6223094eb6db60; valaddr_reg:x16; val_offset:1752; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1752, x17, x15, 496, x18)

inst_159:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x594e913e8fb89 and fs2 == 0 and fe2 == 0x5f5 and fm2 == 0xf8ce1a7792dff and fs3 == 1 and fe3 == 0x7f0 and fm3 == 0x5474576fa7d6e and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f9594e913e8fb89; op2val:0x5f5f8ce1a7792dff; op3val:0xff05474576fa7d6e; valaddr_reg:x16; val_offset:1776; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1776, x17, x15, 512, x18)

inst_160:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3b00ab682d289 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x7c23aaefd9f67 and fs3 == 1 and fe3 == 0x7f5 and fm3 == 0xd3c0e1dba5ec6 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa3b00ab682d289; op2val:0x5fa7c23aaefd9f67; op3val:0xff5d3c0e1dba5ec6; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 528, x18)

inst_161:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x361bbef8877ab and fs2 == 0 and fe2 == 0x5f6 and fm2 == 0x291d98044bfbf and fs3 == 1 and fe3 == 0x7ef and fm3 == 0x67ea09d8a5329 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f8361bbef8877ab; op2val:0x5f6291d98044bfbf; op3val:0xfef67ea09d8a5329; valaddr_reg:x16; val_offset:1824; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1824, x17, x15, 544, x18)

inst_162:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8ad1c84b735e1 and fs2 == 0 and fe2 == 0x5f6 and fm2 == 0x61932b2d37baf and fs3 == 1 and fe3 == 0x7f1 and fm3 == 0x10a71f1e83702 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f98ad1c84b735e1; op2val:0x5f661932b2d37baf; op3val:0xff110a71f1e83702; valaddr_reg:x16; val_offset:1848; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1848, x17, x15, 560, x18)

inst_163:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x41c73bbc1b00b and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0x784c0d85e9517 and fs3 == 1 and fe3 == 0x7f1 and fm3 == 0xd8fc37e173505 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f841c73bbc1b00b; op2val:0x5f8784c0d85e9517; op3val:0xff1d8fc37e173505; valaddr_reg:x16; val_offset:1872; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1872, x17, x15, 576, x18)

inst_164:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5a7002fc1a6bf and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x05d39d105b541 and fs3 == 1 and fe3 == 0x7ef and fm3 == 0x625291ea51263 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f55a7002fc1a6bf; op2val:0x5f905d39d105b541; op3val:0xfef625291ea51263; valaddr_reg:x16; val_offset:1896; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1896, x17, x15, 592, x18)

inst_165:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8bc5f44515f5 and fs2 == 0 and fe2 == 0x5f5 and fm2 == 0x9f3f7053b60bf and fs3 == 1 and fe3 == 0x7f1 and fm3 == 0x8c613d9eb6038 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fae8bc5f44515f5; op2val:0x5f59f3f7053b60bf; op3val:0xff18c613d9eb6038; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 608, x18)

inst_166:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x6003243fdf57b and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x5874b6418015b and fs3 == 1 and fe3 == 0x7f3 and fm3 == 0xd9a4b4be8dc01 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f86003243fdf57b; op2val:0x5fa5874b6418015b; op3val:0xff3d9a4b4be8dc01; valaddr_reg:x16; val_offset:1944; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1944, x17, x15, 624, x18)

inst_167:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6f1586709a287 and fs2 == 0 and fe2 == 0x5f6 and fm2 == 0x051aac3a28d5f and fs3 == 1 and fe3 == 0x7f1 and fm3 == 0x76673136505d2 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa6f1586709a287; op2val:0x5f6051aac3a28d5f; op3val:0xff176673136505d2; valaddr_reg:x16; val_offset:1968; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1968, x17, x15, 640, x18)

inst_168:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf0f94f18e857 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xc2db9cc3dd583 and fs3 == 1 and fe3 == 0x7f4 and fm3 == 0x7b95970e29c11 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f8af0f94f18e857; op2val:0x5fac2db9cc3dd583; op3val:0xff47b95970e29c11; valaddr_reg:x16; val_offset:1992; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1992, x17, x15, 656, x18)

inst_169:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0b731e88bc69f and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb5380491038ac and fs3 == 1 and fe3 == 0x7f5 and fm3 == 0xc8c6091363ebd and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa0b731e88bc69f; op2val:0x5fab5380491038ac; op3val:0xff5c8c6091363ebd; valaddr_reg:x16; val_offset:2016; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 2016, x17, x15, 672, x18)
addi x16,x16,2040

inst_170:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd01c53aeb6daf and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xc04060fa9d235 and fs3 == 1 and fe3 == 0x7f4 and fm3 == 0x965324abd1ccc and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f8d01c53aeb6daf; op2val:0x5fac04060fa9d235; op3val:0xff4965324abd1ccc; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 688, x18)

inst_171:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0xe15a564c336ef and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x4e4a35c32157e and fs3 == 1 and fe3 == 0x7f2 and fm3 == 0x3a47b2e57bc08 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f6e15a564c336ef; op2val:0x5fa4e4a35c32157e; op3val:0xff23a47b2e57bc08; valaddr_reg:x16; val_offset:24; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 24, x17, x15, 704, x18)

inst_172:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0b7f9b429ef3 and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0x87fe27ff3fe2f and fs3 == 1 and fe3 == 0x7f4 and fm3 == 0x63cb2ec3a789b and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fad0b7f9b429ef3; op2val:0x5f887fe27ff3fe2f; op3val:0xff463cb2ec3a789b; valaddr_reg:x16; val_offset:48; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 48, x17, x15, 720, x18)

inst_173:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x34bccd918d207 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xa40b77d5da767 and fs3 == 1 and fe3 == 0x7f2 and fm3 == 0xfa9395e54ce7a and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f734bccd918d207; op2val:0x5faa40b77d5da767; op3val:0xff2fa9395e54ce7a; valaddr_reg:x16; val_offset:72; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 72, x17, x15, 736, x18)

inst_174:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0616a9d776586 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xde497aebca743 and fs3 == 1 and fe3 == 0x7f5 and fm3 == 0xe9a98b6ef06d3 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa0616a9d776586; op2val:0x5fade497aebca743; op3val:0xff5e9a98b6ef06d3; valaddr_reg:x16; val_offset:96; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 96, x17, x15, 752, x18)

inst_175:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0716da06e3c and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x3f541e5d8f1c1 and fs3 == 1 and fe3 == 0x7f4 and fm3 == 0x777ebf8206a8e and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa2d0716da06e3c; op2val:0x5f93f541e5d8f1c1; op3val:0xff4777ebf8206a8e; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 768, x18)

inst_176:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x022ce6a3fae64 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x09163be078882 and fs3 == 1 and fe3 == 0x7f5 and fm3 == 0x0b56e6fe4acfd and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa022ce6a3fae64; op2val:0x5fa09163be078882; op3val:0xff50b56e6fe4acfd; valaddr_reg:x16; val_offset:144; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 144, x17, x15, 784, x18)

inst_177:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x3cfe1da6d26d5 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xea2b5073270ea and fs3 == 1 and fe3 == 0x7f5 and fm3 == 0x2f7a038724c97 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f93cfe1da6d26d5; op2val:0x5faea2b5073270ea; op3val:0xff52f7a038724c97; valaddr_reg:x16; val_offset:168; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 168, x17, x15, 800, x18)

inst_178:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x1292a3e2f1241 and fs3 == 1 and fe3 == 0x7f4 and fm3 == 0xf29770009c3fd and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fad0dd93a77236c; op2val:0x5f91292a3e2f1241; op3val:0xff4f29770009c3fd; valaddr_reg:x16; val_offset:192; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 192, x17, x15, 816, x18)

inst_179:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4c7591e8478db and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x662e40f571128 and fs3 == 1 and fe3 == 0x7f4 and fm3 == 0xd1287b872fa3a and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f94c7591e8478db; op2val:0x5fa662e40f571128; op3val:0xff4d1287b872fa3a; valaddr_reg:x16; val_offset:216; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 216, x17, x15, 832, x18)

inst_180:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x72925e5d38221 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0xf2498354565a7 and fs3 == 1 and fe3 == 0x7f5 and fm3 == 0x68a592b49d8c0 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa72925e5d38221; op2val:0x5f9f2498354565a7; op3val:0xff568a592b49d8c0; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 848, x18)

inst_181:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd81392ace6303 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x22aa3d2e74e72 and fs3 == 1 and fe3 == 0x7f5 and fm3 == 0x0c000cfccc4f1 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f9d81392ace6303; op2val:0x5fa22aa3d2e74e72; op3val:0xff50c000cfccc4f1; valaddr_reg:x16; val_offset:264; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 264, x17, x15, 864, x18)

inst_182:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a6b1b54b21cf and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xc405091d199ee and fs3 == 1 and fe3 == 0x7f5 and fm3 == 0x3ff61ea004c00 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f96a6b1b54b21cf; op2val:0x5fac405091d199ee; op3val:0xff53ff61ea004c00; valaddr_reg:x16; val_offset:288; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 288, x17, x15, 880, x18)

inst_183:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd98396dfe04dc and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x006e3d60fc2f8 and fs3 == 1 and fe3 == 0x7f5 and fm3 == 0xda4f7ef273417 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fad98396dfe04dc; op2val:0x5fa006e3d60fc2f8; op3val:0xff5da4f7ef273417; valaddr_reg:x16; val_offset:312; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 312, x17, x15, 896, x18)

inst_184:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd87aff53d41f5 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x0f8ac8cffe63e and fs3 == 1 and fe3 == 0x7f4 and fm3 == 0xf52a5937592dd and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f9d87aff53d41f5; op2val:0x5fa0f8ac8cffe63e; op3val:0xff4f52a5937592dd; valaddr_reg:x16; val_offset:336; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 336, x17, x15, 912, x18)

inst_185:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x820cd259975cf and fs3 == 1 and fe3 == 0x7f3 and fm3 == 0xf1cd83ce94745 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f84a1b2df4767ef; op2val:0x5fa820cd259975cf; op3val:0xff3f1cd83ce94745; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 928, x18)

inst_186:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x6a47222e524ad and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xf6428fb6f94fe and fs3 == 1 and fe3 == 0x7f5 and fm3 == 0x6362d75f28653 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f96a47222e524ad; op2val:0x5faf6428fb6f94fe; op3val:0xff56362d75f28653; valaddr_reg:x16; val_offset:384; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 384, x17, x15, 944, x18)

inst_187:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x8698ed174ff65 and fs3 == 1 and fe3 == 0x7f6 and fm3 == 0x621cf3adc82a4 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fad02d0afa24812; op2val:0x5fa8698ed174ff65; op3val:0xff6621cf3adc82a4; valaddr_reg:x16; val_offset:408; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 408, x17, x15, 960, x18)

inst_188:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x97f0ea9a89f82 and fs3 == 1 and fe3 == 0x7f6 and fm3 == 0x6c864816a930c and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fac982355c85538; op2val:0x5fa97f0ea9a89f82; op3val:0xff66c864816a930c; valaddr_reg:x16; val_offset:432; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 432, x17, x15, 976, x18)

inst_189:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff5373e0e112c and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x59556723d53e2 and fs3 == 1 and fe3 == 0x7f6 and fm3 == 0x58e105f0d778f and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5faff5373e0e112c; op2val:0x5fa59556723d53e2; op3val:0xff658e105f0d778f; valaddr_reg:x16; val_offset:456; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 456, x17, x15, 992, x18)

inst_190:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4cf244963827f and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0x17f4cd829a48b and fs3 == 1 and fe3 == 0x7f2 and fm3 == 0x6c1a6af0f2fc7 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f94cf244963827f; op2val:0x5f817f4cd829a48b; op3val:0xff26c1a6af0f2fc7; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1008, x18)

inst_191:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0xe394ab3b08c6b and fs3 == 1 and fe3 == 0x7f4 and fm3 == 0x0f0d50c8aae86 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa1efb36cb5b1e4; op2val:0x5f8e394ab3b08c6b; op3val:0xff40f0d50c8aae86; valaddr_reg:x16; val_offset:504; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 504, x17, x15, 1024, x18)

inst_192:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x8522a1b638e23 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xc898a0b894837 and fs3 == 1 and fe3 == 0x7f5 and fm3 == 0x5b06d875689d5 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f98522a1b638e23; op2val:0x5fac898a0b894837; op3val:0xff55b06d875689d5; valaddr_reg:x16; val_offset:528; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 528, x17, x15, 1040, x18)

inst_193:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0xdc0d22f746bf5 and fs3 == 1 and fe3 == 0x7f0 and fm3 == 0xa215cb0ee4435 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f5c1a812e98063f; op2val:0x5f9dc0d22f746bf5; op3val:0xff0a215cb0ee4435; valaddr_reg:x16; val_offset:552; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 552, x17, x15, 1056, x18)

inst_194:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc787db4043bd9 and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x12adb3735ac6d and fs3 == 1 and fe3 == 0x7f3 and fm3 == 0xe8c47ecb34cba and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f9c787db4043bd9; op2val:0x5f912adb3735ac6d; op3val:0xff3e8c47ecb34cba; valaddr_reg:x16; val_offset:576; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 576, x17, x15, 1072, x18)

inst_195:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfd58fd60948f9 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe61729d7cfd5e and fs3 == 1 and fe3 == 0x7f6 and fm3 == 0xe39283a260c5d and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fafd58fd60948f9; op2val:0x5fae61729d7cfd5e; op3val:0xff6e39283a260c5d; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1088, x18)

inst_196:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x92fa0166dea3d and fs3 == 1 and fe3 == 0x7f4 and fm3 == 0x5b197cd20c492 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f9b9017651b96db; op2val:0x5f992fa0166dea3d; op3val:0xff45b197cd20c492; valaddr_reg:x16; val_offset:624; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 624, x17, x15, 1104, x18)

inst_197:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x299392ab99898 and fs3 == 1 and fe3 == 0x7f5 and fm3 == 0x6923cb396cbfc and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa36aeb78249790; op2val:0x5fa299392ab99898; op3val:0xff56923cb396cbfc; valaddr_reg:x16; val_offset:648; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 648, x17, x15, 1120, x18)

inst_198:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x56e6e736a538e and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0x3b881fa033e19 and fs3 == 1 and fe3 == 0x7f4 and fm3 == 0xa6a473879e230 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa56e6e736a538e; op2val:0x5f93b881fa033e19; op3val:0xff4a6a473879e230; valaddr_reg:x16; val_offset:672; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 672, x17, x15, 1136, x18)

inst_199:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xabc6824ad2440 and fs3 == 1 and fe3 == 0x7f3 and fm3 == 0x227300ca469b2 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f75ba2bcb8dc85f; op2val:0x5faabc6824ad2440; op3val:0xff3227300ca469b2; valaddr_reg:x16; val_offset:696; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 696, x17, x15, 1152, x18)

inst_200:
// fs1 == 0 and fe1 == 0x5f6 and fm1 == 0x38aee2c19215f and fs2 == 0 and fe2 == 0x5f8 and fm2 == 0x912bfdff44ba7 and fs3 == 1 and fe3 == 0x7ef and fm3 == 0xe9ffaccdec974 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f638aee2c19215f; op2val:0x5f8912bfdff44ba7; op3val:0xfefe9ffaccdec974; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1168, x18)

inst_201:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa56aface5eb97 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xabc379493ef0f and fs3 == 1 and fe3 == 0x7f6 and fm3 == 0x60159c3db36d8 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5faa56aface5eb97; op2val:0x5faabc379493ef0f; op3val:0xff660159c3db36d8; valaddr_reg:x16; val_offset:744; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 744, x17, x15, 1184, x18)

inst_202:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xe68dd9c514393 and fs2 == 0 and fe2 == 0x5f6 and fm2 == 0x878222f2318df and fs3 == 1 and fe3 == 0x7f1 and fm3 == 0x740cff07df955 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f9e68dd9c514393; op2val:0x5f6878222f2318df; op3val:0xff1740cff07df955; valaddr_reg:x16; val_offset:768; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 768, x17, x15, 1200, x18)

inst_203:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x8e041c6437953 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x28d94e0280abc and fs3 == 1 and fe3 == 0x7f3 and fm3 == 0xcd869b9915f37 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f88e041c6437953; op2val:0x5fa28d94e0280abc; op3val:0xff3cd869b9915f37; valaddr_reg:x16; val_offset:792; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 792, x17, x15, 1216, x18)

inst_204:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xf59904d0ce0bf and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x1a7baab01ceb9 and fs3 == 1 and fe3 == 0x7f1 and fm3 == 0x14be6f22012e3 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f5f59904d0ce0bf; op2val:0x5fa1a7baab01ceb9; op3val:0xff114be6f22012e3; valaddr_reg:x16; val_offset:816; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 816, x17, x15, 1232, x18)

inst_205:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x87dc8b1f4a7b7 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xf9492e51e93d3 and fs3 == 1 and fe3 == 0x7f6 and fm3 == 0x82b9099db4536 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa87dc8b1f4a7b7; op2val:0x5faf9492e51e93d3; op3val:0xff682b9099db4536; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1248, x18)

inst_206:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ffb1e4665b2c and fs2 == 0 and fe2 == 0x5f9 and fm2 == 0xe4206922dd131 and fs3 == 1 and fe3 == 0x7f5 and fm3 == 0x104d9d730c446 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5fa1ffb1e4665b2c; op2val:0x5f9e4206922dd131; op3val:0xff5104d9d730c446; valaddr_reg:x16; val_offset:864; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 864, x17, x15, 1264, x18)

inst_207:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x97b629a826ff3 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x98715cd327a81 and fs3 == 1 and fe3 == 0x7f5 and fm3 == 0x453f6ed111529 and rm_val == 0  
// opcode: fnmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x5f997b629a826ff3; op2val:0x5fa98715cd327a81; op3val:0xff5453f6ed111529; valaddr_reg:x16; val_offset:888; rmval:0x0; testreg:x18
TEST_FPR4_OP(fnmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 888, x17, x15, 1280, x18)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_fp:
.dword 0x5fae97d52f73d2ed
.dword 0x5fae549a4f656ebe
.dword 0xff6cff39f2b2e98b
.dword 0x5f638aee2c19215f
.dword 0x5f638aee2c19215f
.dword 0x5f638aee2c19215f
.dword 0x5faa56aface5eb97
.dword 0x5faabc379493ef0f
.dword 0x5faa56aface5eb97
.dword 0x5f9e68dd9c514393
.dword 0x5f6878222f2318df
.dword 0x5f9e68dd9c514393
.dword 0x5fa4038aec1813f9
.dword 0x5fa7c017850ccf9e
.dword 0xff5db55fa1f8ea2e
.dword 0x5f88e041c6437953
.dword 0x5fa28d94e0280abc
.dword 0x5fa28d94e0280abc
.dword 0x5f5f59904d0ce0bf
.dword 0x5f5f59904d0ce0bf
.dword 0xff114be6f22012e3
.dword 0x5fa67fb4908ceaaf
.dword 0x5fa65eaa9e302952
.dword 0xff5f74b676e24eb8
.dword 0x5fa87dc8b1f4a7b7
.dword 0x5fa87dc8b1f4a7b7
.dword 0xff682b9099db4536
.dword 0x5fa1ffb1e4665b2c
.dword 0x5fa1ffb1e4665b2c
.dword 0x5fa1ffb1e4665b2c
.dword 0x5f997b629a826ff3
.dword 0x5fa98715cd327a81
.dword 0x5fa98715cd327a81
.dword 0x5f9308800ab9a08f
.dword 0x5f9b9343c1265853
.dword 0xff4066c361ec0d88
.dword 0x5fa41176abd4258d
.dword 0x5f8aeb9622c6891f
.dword 0xff40e1eed2c5920c
.dword 0x5f84dd13d82cf047
.dword 0x5f7afe78faaa8367
.dword 0xff119989cda129c4
.dword 0x5fa6f674621915da
.dword 0x5fa03a0ff71fb0c2
.dword 0xff5749c8b1b3ec9a
.dword 0x5fa3ed0f2697260f
.dword 0x5fab79b2b1934a01
.dword 0xff611bcc6f10ad2d
.dword 0x5f6b3756a76d237f
.dword 0x5f8b8c3b0a05a317
.dword 0xff076df56eee6e8f
.dword 0x5f7dd44967e4f77f
.dword 0x5f7bb5518eec7ff7
.dword 0xff09d422b571218a
.dword 0x5f81ea6995f1c073
.dword 0x5f9f7e9d38031687
.dword 0xff31a1f94e72955c
.dword 0x5fa0bb792159b051
.dword 0x5fa5d1ae1e1d28a7
.dword 0xff56d155f04ca716
.dword 0x5f898cb938bd0d9b
.dword 0x5fad64f454066002
.dword 0xff477822b2577100
.dword 0x5f81bebe7b21cd5f
.dword 0x5fa011af8e2b2a8d
.dword 0xff31d25bd974be61
.dword 0x5f8eea576108affb
.dword 0x5f9ed04e711db0e1
.dword 0xff3dc4f0eb6c0dc8
.dword 0x5fa4c791addc9912
.dword 0x5f697b02f6ed223f
.dword 0xff208bcad499e695
.dword 0x5fa56eb5abeef1c8
.dword 0x5f778842cac09a97
.dword 0xff2f85aba7a20503
.dword 0x5f9670e7d1c3c471
.dword 0x5f862964c066279b
.dword 0xff2f154d61f9b7f2
.dword 0x5fa9889fc2d44e5e
.dword 0x5f421d9040c119bf
.dword 0xfefce8e191b47a97
.dword 0x5fad486b68b34be3
.dword 0x5f73cc532c905347
.dword 0xff321df98f84296c
.dword 0x5f806933c1e52e8b
.dword 0x5fadff0d9faf6b37
.dword 0xff3ec44871950571
.dword 0x5f67a1eff83f19af
.dword 0x5f7bb68e4e714e57
.dword 0xfef4777496d068c5
.dword 0x5f9d17c6c95aefed
.dword 0x5f9a5ac383168515
.dword 0xff47f5d622c15cd4
.dword 0x5faf849379fb9b6b
.dword 0x5fafa550bd9aed1a
.dword 0xff6f2b41fcc90774
.dword 0x5fa31f03f05cb87a
.dword 0x5fa2d0e69e0aad85
.dword 0xff567c8b3c54adc3
.dword 0x5fa3d2d3af7c48ae
.dword 0x5f9447163c5b6799
.dword 0xff491f9bb360fce8
.dword 0x5fafea4d203770af
.dword 0x5f991b7d2621f217
.dword 0xff590a76c383db51
.dword 0x5fa894eb52d7a53a
.dword 0x5fa3883363d45ce5
.dword 0xff5e021836ae0937
.dword 0x5fa0bc55b64ea25c
.dword 0x5fab0d4dc0773572
.dword 0xff5c4bbafcf6046a
.dword 0x5f9b8178fb8c7f25
.dword 0x5fa8ebf551167019
.dword 0xff556bec6a19f8a8
.dword 0x5f6f959d372fdf5f
.dword 0x5f826ffb22d6ee1f
.dword 0xff0232af484e9f31
.dword 0x5f9588877f85511b
.dword 0x5f97dbc6852f0d29
.dword 0xff400e05595e0c43
.dword 0x5f8f8cb3cb5140d7
.dword 0x5f8ebb37bba609a7
.dword 0xff2e4c7dbc1f4325
.dword 0x5f9ae7cb22e21faf
.dword 0x5f9002e328b68fcd
.dword 0xff3aeca6194ef529
.dword 0x5f82339bac8ac55f
.dword 0x5f8a27ff454d2247
.dword 0xff1dc15d292d6f93
.dword 0x5f943f16419df5f9
.dword 0x5fada33f11fe6a09
.dword 0xff52c0756c6bb060
.dword 0x5f9237c293c04d53
.dword 0x5fa468e8279a5120
.dword 0xff473d25ff0dc05a
.dword 0x5f8e4e789d337d77
.dword 0x5faaac467660ea9f
.dword 0xff4942ea83cbc8f6
.dword 0x5fa85eb50a9b65e8
.dword 0x5f9bee6f48112ca9
.dword 0xff55457de2d82a38
.dword 0x5f96fcb8489dc591
.dword 0x5fad5d579f837c3e
.dword 0xff5518146b0d327a
.dword 0x5f80435cbf7ce303
.dword 0x5f5cb3c58d58b2bf
.dword 0xfeed2c9cb9ca91a8
.dword 0x5fac9815c3b1adfc
.dword 0x5f87dd98b509becf
.dword 0xff4553526f238a14
.dword 0x5faea594439af755
.dword 0x5f96a7fe63869fed
.dword 0xff55b2b9add5649b
.dword 0x5f97840b0a77fbbb
.dword 0x5f994a97c3df3b51
.dword 0xff4295f980baba92
.dword 0x5f92a9ac14416973
.dword 0x5fa3eb682e8c47fa
.dword 0xff473c11eca120ef
.dword 0x5fadf0325e8750cf
.dword 0x5fa81cf3ffe0cb08
.dword 0xff668f3c3a5b118b
.dword 0x5fa7c30cfd9902ca
.dword 0x5fa8083feedaf3d3
.dword 0xff61d869fad10212
.dword 0x5fa01559da52cc50
.dword 0x5fa61457deedafab
.dword 0xff5631ce90b27f1d
.dword 0x5f95e77a2a3ef6e5
.dword 0x5fac1d568ee159cf
.dword 0xff533e9feb9321c9
.dword 0x5fa440c579831418
.dword 0x5f999ddc9e77cb45
.dword 0xff503683b163d6bf
.dword 0x5fa97170988aa151
.dword 0x5f8dd895344c54d7
.dword 0xff47bb02640c9810
.dword 0x5fa5b608176286de
.dword 0x5f97ec25e17b909b
.dword 0xff503b0dfff0614c
.dword 0x5f797c657c682e1f
.dword 0x5f8e719a478092fb
.dword 0xff183f194a9bc9a7
.dword 0x5fa477c4d4dd15f5
.dword 0x5fadbfa105179648
.dword 0xff63071c3d96ff70
.dword 0x5faca057fc89126a
.dword 0x5fad7eea06dfbab7
.dword 0xff6a62d871f82fff
.dword 0x5f854fc797f61a47
.dword 0x5f9c49dffef48af1
.dword 0xff32d701d20d0886
.dword 0x5f946086cad941b7
.dword 0x5f73cf8a4ab5f917
.dword 0xff193af100731ef8
.dword 0x5faa321af726492d
.dword 0x5f98450b36da4f99
.dword 0xff53de1971a22a66
.dword 0x5f91c256e07d7b03
.dword 0x5faea5ed10729949
.dword 0xff51024712df5dce
.dword 0x5f8dd01ebf317c47
.dword 0x5f9d484e5c7d8c61
.dword 0xff3b47f923e94a27
.dword 0x5fa9881bee04c84c
.dword 0x5fa41f756c5b46c8
.dword 0xff600e2affebe1df
.dword 0x5f9908348cc50075
.dword 0x5fa0f993cf648277
.dword 0xff4a8eab7e6deee1
.dword 0x5faae70dafae96a3
.dword 0x5f77cb7e10454cbf
.dword 0xff340125908ba523
.dword 0x5fa97787813faa38
.dword 0x5fa4e8baea923265
.dword 0xff60a3ec08a2df8e
.dword 0x5faa613e194097b8
.dword 0x5f9377828aab6e99
.dword 0xff500c421b49377d
.dword 0x5fa13bf56ad82c8a
.dword 0x5fad453f7d35f923
.dword 0xff5f8743c6f979f8
.dword 0x5f93bd530bfc7921
.dword 0x5fa4c524788895e4
.dword 0xff499fdfdc2e77fd
.dword 0x5f987814b483b2ff
.dword 0x5f9c56d7d1a2a465
.dword 0xff45ab79dcb0203d
.dword 0x5faef0f52001dd13
.dword 0x5f9774135045aad3
.dword 0xff56ad6c5444aa35
.dword 0x5f92de4ff93f2d49
.dword 0x5f454cb8485c10ff
.dword 0xfee91e4244ef8416
.dword 0x5f84cf1937fde173
.dword 0x5f986d2c67f038bd
.dword 0xff2fc4a2707d3c54
.dword 0x5fa932903b557086
.dword 0x5faba615dee0d545
.dword 0xff65c57136f25b95
.dword 0x5fa9199ba7fdacbd
.dword 0x5f99e32e020ad6fd
.dword 0xff544e3359d7ba4f
.dword 0x5fa820702d63fac0
.dword 0x5f863bca2c276bab
.dword 0xff40c3615c16de36
.dword 0x5fa017c339d75e4d
.dword 0x5f5c30407e58dcff
.dword 0xff0c5a1dcd07d4e0
.dword 0x5fa597fb1bb06230
.dword 0x5f956ed923aca873
.dword 0xff4ced138018ff79
.dword 0x5fa511a1344303ed
.dword 0x5fa82640d65dc24c
.dword 0xff5fccd10e0cb887
.dword 0x5f28e1a79f69deff
.dword 0x5f9f112c2c43eca3
.dword 0xfed827f49c2cd268
.dword 0x5f8a3d5b9f8ee473
.dword 0x5faeefde430a673b
.dword 0xff495e366a8a4bfe
.dword 0x5f903c79a41b870f
.dword 0x5fa21d7278b1bb7f
.dword 0xff4261ea9e7506ae
.dword 0x5f81a5d3a022c06b
.dword 0x5fa39827e2b6fc0e
.dword 0xff359cbea6de8678
.dword 0x5fa2c2600e5225e4
.dword 0x5f8882e3a7d63c53
.dword 0xff3cbd064c6a588c
.dword 0x5fa88b452334d482
.dword 0x5f898a767463fb7b
.dword 0xff439701787d960d
.dword 0x5fac4f4bdbe3ee53
.dword 0x5f79b7932c7ac007
.dword 0xff36c05af139ac4c
.dword 0x5fa757c41e46ee0f
.dword 0x5fa367fd258b0b63
.dword 0xff5c4fef350a12aa
.dword 0x5faa1d3ea060b239
.dword 0x5f518c773392efff
.dword 0xff0ca454fc10de73
.dword 0x5fa6c53c0ba0796d
.dword 0x5fac43588ddd7fbc
.dword 0xff641c80833c8fd5
.dword 0x5fa45088c7a8eddc
.dword 0x5f47c4c7501c707f
.dword 0xfefe2d9c39eca63e
.dword 0x5f99c63a6687c333
.dword 0x5fa557d56987bca8
.dword 0xff5130d526845787
.dword 0x5fab442f12e7354a
.dword 0x5f8cccc36886926f
.dword 0xff488a225d31ef0e
.dword 0x5fa7dc0f47a5db15
.dword 0x5fa5124f30535e0b
.dword 0xff5f6c21b5d63b88
.dword 0x5f9e3d6d32e17fa5
.dword 0x5faec884da30b843
.dword 0xff5d1713d5c45d1a
.dword 0x5fa6bc16c6eccc22
.dword 0x5fadf93331a60977
.dword 0xff654b80948cc1ed
.dword 0x5fa053533036dba9
.dword 0x5f9ee098e2310cc3
.dword 0xff4f8166856b2927
.dword 0x5fa30b95bd887309
.dword 0x5fac37d95ef26f70
.dword 0xff60cb604e46e63f
.dword 0x5f8287a907776fa3
.dword 0x5f9c3c58b5c03e1d
.dword 0xff3059a5a1c5fc28
.dword 0x5fafd8213d6f2891
.dword 0x5fa90cd3970eae8a
.dword 0xff68ed9d93e3878e
.dword 0x5f9d800e87943f0d
.dword 0x5fa680debcf012e2
.dword 0xff54bed78de6b01b
.dword 0x5fa6e444c20e8184
.dword 0x5f9076f4d15b455d
.dword 0xff478e7681c69388
.dword 0x5fa82f53e1b1e100
.dword 0x5f789d942a85e30f
.dword 0xff329a9717d7fbb7
.dword 0x5f7cb0a304fe19bf
.dword 0x5fa14eff5bf25de3
.dword 0xff2f0954340ba8d2
.dword 0x5fa5cb9025515212
.dword 0x5f9c160cd96157af
.dword 0xff532122d42593f9
.dword 0x5f92f7ee631fefc5
.dword 0x5f8da8557b559e8b
.dword 0xff319478590a4d1b
.dword 0x5fafa2ea1f3d3ef9
.dword 0x5fa4bd16a0267938
.dword 0xff6480c2e8a45a7b
.dword 0x5f711c62f98de3bf
.dword 0x5f760de25d29e92f
.dword 0xfef795e13c25b2cc
.dword 0x5fafed8d422e59b9
.dword 0x5f82c08bdce69f77
.dword 0xff42b5bc510c05b5
.dword 0x5faa2bda964d91ae
.dword 0x5f789000c246f107
.dword 0xff3416a9e7426c8f
.dword 0x5fa5bb8442cbfc28
.dword 0x5fad65025c565597
.dword 0xff63f6895069b2d9
.dword 0x5f9f4853a4c5bef9
.dword 0x5f909a18dc6373ff
.dword 0xff403ace329d0aed
.dword 0x5faac08ec2b88c86
.dword 0x5f92fe2d0b2849b1
.dword 0xff4fc19cc59c1236
.dword 0x5fae8ce066e96229
.dword 0x5fa9bd3c29ad0568
.dword 0xff6892b8cdb4965c
.dword 0x5f91365a93dfa50f
.dword 0x5fa0d77af376928b
.dword 0xff421e29395e67fa
.dword 0x5f96e2aa97ad4287
.dword 0x5f9d4012b921b92d
.dword 0xff44eb3d528adc8c
.dword 0x5fa8deeb902c377e
.dword 0x5fa7270fced2be29
.dword 0xff61fe9547f4c080
.dword 0x5fa62a35ac6bee41
.dword 0x5f5942c54f20963f
.dword 0xff117f39a81124ff
.dword 0x5fab33c7d55682c1
.dword 0x5fa48300cd907da9
.dword 0xff616fb98e25f7e4
.dword 0x5f7f29a9c82218e7
.dword 0x5f7f2c5343ef46b7
.dword 0xff0e5b86d98cd59f
.dword 0x5f9da577e11e08d7
.dword 0x5fa81d54dd6137b5
.dword 0xff5657467cee0de2
.dword 0x5f889f3951da2feb
.dword 0x5fa24a28f97e5b1f
.dword 0xff3c253ff32fb1ce
.dword 0x5fadedbc42e4ee38
.dword 0x5f7398aa070366df
.dword 0xff3253f00b7cffec
.dword 0x5f72e3db402ba61f
.dword 0x5f9232f190317157
.dword 0xff157c7be7ad2ebc
.dword 0x5f9f1860e3b4eb81
.dword 0x5f8aa7d58e3b9047
.dword 0xff39e6e57722524a
.dword 0x5f50197267f1985f
.dword 0x5f9ce41f387adc6f
.dword 0xfefd12123e525707
.dword 0x5f93943b61964e33
.dword 0x5faae64a7b19f21e
.dword 0xff5075573c327db8
.dword 0x5f53832e6fea9a3f
.dword 0x5fa5ee10a5a625fc
.dword 0xff0abe8092d68a4a
.dword 0x5f92887dc585eda5
.dword 0x5faf79012fbad378
.dword 0xff523a4ea2d53b5d
.dword 0x5fa09d5da3d7b9db
.dword 0x5fad7c8570796fe8
.dword 0xff5e9e87df92d472
.dword 0x5f7802693539b05f
.dword 0x5fa9af59f9eb5168
.dword 0xff334572e32812be
.dword 0x5f9ac0c7cf6e58fb
.dword 0x5fa0cd5422534b0d
.dword 0xff4c181a7cfdfdf5
.dword 0x5fa05e381015d598
.dword 0x5fa2982d565d88fc
.dword 0xff5305ac88092a15
.dword 0x5faed1da04d72f12
.dword 0x5fa7536733396cf8
.dword 0xff66772865c2b9c3
.dword 0x5fa48949a9851f6d
.dword 0x5f8b318d9af479ef
.dword 0xff4173a3403210e1
.dword 0x5fa0a9df4ead8eb3
.dword 0x5f9db8c7d3a18027
.dword 0xff4ef45663d524c8
.dword 0x5f8743ea0c02659b
.dword 0x5f8da2a011aeffab
.dword 0xff258bc84c2c83c3
.dword 0x5fa7291f0459edd6
.dword 0x5f8ed4ae61a16dab
.dword 0xff46507bb7d346b2
.dword 0x5f622cfa989fca0f
.dword 0x5f9a2892d94829ad
.dword 0xff0db72e7bc3e8f9
.dword 0x5f9b12b5923ada87
.dword 0x5fa0d68c4b00b1ad
.dword 0xff4c7dbd315c4cf6
.dword 0x5fa99b4caa7ee21f
.dword 0x5fa6b435c9707703
.dword 0xff622af94edeb7e7
.dword 0x5f900ccac0a4b811
.dword 0x5fa2eb6a94e9ae19
.dword 0xff42fa8ae4c6bb09
.dword 0x5fafd32694fcaecb
.dword 0x5f8dc1b3eb6c004b
.dword 0xff4d97ff66f9700f
.dword 0x5fa043a8c3aa6439
.dword 0x5faf788de2d51675
.dword 0xff5ffda2a7a927c2
.dword 0x5f84a10e22bb3b33
.dword 0x5f788b104e822b8f
.dword 0xff0fa4e1652dafbf
.dword 0x5f81fe2d6aba9e77
.dword 0x5f6d126610309c1f
.dword 0xff0058b18590588a
.dword 0x5f9add465d39fd03
.dword 0x5f52774cd9885b7f
.dword 0xfeff013dec82d387
.dword 0x5faeb61e2d5d3c7a
.dword 0x5f9095092a183e33
.dword 0xff4fd42fbda1420a
.dword 0x5f99262273e53737
.dword 0x5fa07943814fd4f4
.dword 0xff49e4bcf362e2c2
.dword 0x5fabfe0f0fcad936
.dword 0x5f80531d684ae65b
.dword 0xff3c8f7870de7e0c
.dword 0x5f943e5b36b50bcd
.dword 0x5f7a1fe3e0c64717
.dword 0xff2086d6ad59125b
.dword 0x5f9e4204ffab96f7
.dword 0x5f8cde16617ec93f
.dword 0xff3b4bc38bf74baa
.dword 0x5fa82e62659b7f9b
.dword 0x5fab9927e27c836d
.dword 0xff64dadeefde9cf6
.dword 0x5fa882d3626badfd
.dword 0x5fa7ada4a02edef8
.dword 0xff6223094eb6db60
.dword 0x5f9594e913e8fb89
.dword 0x5f5f8ce1a7792dff
.dword 0xff05474576fa7d6e
.dword 0x5fa3b00ab682d289
.dword 0x5fa7c23aaefd9f67
.dword 0xff5d3c0e1dba5ec6
.dword 0x5f8361bbef8877ab
.dword 0x5f6291d98044bfbf
.dword 0xfef67ea09d8a5329
.dword 0x5f98ad1c84b735e1
.dword 0x5f661932b2d37baf
.dword 0xff110a71f1e83702
.dword 0x5f841c73bbc1b00b
.dword 0x5f8784c0d85e9517
.dword 0xff1d8fc37e173505
.dword 0x5f55a7002fc1a6bf
.dword 0x5f905d39d105b541
.dword 0xfef625291ea51263
.dword 0x5fae8bc5f44515f5
.dword 0x5f59f3f7053b60bf
.dword 0xff18c613d9eb6038
.dword 0x5f86003243fdf57b
.dword 0x5fa5874b6418015b
.dword 0xff3d9a4b4be8dc01
.dword 0x5fa6f1586709a287
.dword 0x5f6051aac3a28d5f
.dword 0xff176673136505d2
.dword 0x5f8af0f94f18e857
.dword 0x5fac2db9cc3dd583
.dword 0xff47b95970e29c11
.dword 0x5fa0b731e88bc69f
.dword 0x5fab5380491038ac
.dword 0xff5c8c6091363ebd
.dword 0x5f8d01c53aeb6daf
.dword 0x5fac04060fa9d235
.dword 0xff4965324abd1ccc
.dword 0x5f6e15a564c336ef
.dword 0x5fa4e4a35c32157e
.dword 0xff23a47b2e57bc08
.dword 0x5fad0b7f9b429ef3
.dword 0x5f887fe27ff3fe2f
.dword 0xff463cb2ec3a789b
.dword 0x5f734bccd918d207
.dword 0x5faa40b77d5da767
.dword 0xff2fa9395e54ce7a
.dword 0x5fa0616a9d776586
.dword 0x5fade497aebca743
.dword 0xff5e9a98b6ef06d3
.dword 0x5fa2d0716da06e3c
.dword 0x5f93f541e5d8f1c1
.dword 0xff4777ebf8206a8e
.dword 0x5fa022ce6a3fae64
.dword 0x5fa09163be078882
.dword 0xff50b56e6fe4acfd
.dword 0x5f93cfe1da6d26d5
.dword 0x5faea2b5073270ea
.dword 0xff52f7a038724c97
.dword 0x5fad0dd93a77236c
.dword 0x5f91292a3e2f1241
.dword 0xff4f29770009c3fd
.dword 0x5f94c7591e8478db
.dword 0x5fa662e40f571128
.dword 0xff4d1287b872fa3a
.dword 0x5fa72925e5d38221
.dword 0x5f9f2498354565a7
.dword 0xff568a592b49d8c0
.dword 0x5f9d81392ace6303
.dword 0x5fa22aa3d2e74e72
.dword 0xff50c000cfccc4f1
.dword 0x5f96a6b1b54b21cf
.dword 0x5fac405091d199ee
.dword 0xff53ff61ea004c00
.dword 0x5fad98396dfe04dc
.dword 0x5fa006e3d60fc2f8
.dword 0xff5da4f7ef273417
.dword 0x5f9d87aff53d41f5
.dword 0x5fa0f8ac8cffe63e
.dword 0xff4f52a5937592dd
.dword 0x5f84a1b2df4767ef
.dword 0x5fa820cd259975cf
.dword 0xff3f1cd83ce94745
.dword 0x5f96a47222e524ad
.dword 0x5faf6428fb6f94fe
.dword 0xff56362d75f28653
.dword 0x5fad02d0afa24812
.dword 0x5fa8698ed174ff65
.dword 0xff6621cf3adc82a4
.dword 0x5fac982355c85538
.dword 0x5fa97f0ea9a89f82
.dword 0xff66c864816a930c
.dword 0x5faff5373e0e112c
.dword 0x5fa59556723d53e2
.dword 0xff658e105f0d778f
.dword 0x5f94cf244963827f
.dword 0x5f817f4cd829a48b
.dword 0xff26c1a6af0f2fc7
.dword 0x5fa1efb36cb5b1e4
.dword 0x5f8e394ab3b08c6b
.dword 0xff40f0d50c8aae86
.dword 0x5f98522a1b638e23
.dword 0x5fac898a0b894837
.dword 0xff55b06d875689d5
.dword 0x5f5c1a812e98063f
.dword 0x5f9dc0d22f746bf5
.dword 0xff0a215cb0ee4435
.dword 0x5f9c787db4043bd9
.dword 0x5f912adb3735ac6d
.dword 0xff3e8c47ecb34cba
.dword 0x5fafd58fd60948f9
.dword 0x5fae61729d7cfd5e
.dword 0xff6e39283a260c5d
.dword 0x5f9b9017651b96db
.dword 0x5f992fa0166dea3d
.dword 0xff45b197cd20c492
.dword 0x5fa36aeb78249790
.dword 0x5fa299392ab99898
.dword 0xff56923cb396cbfc
.dword 0x5fa56e6e736a538e
.dword 0x5f93b881fa033e19
.dword 0xff4a6a473879e230
.dword 0x5f75ba2bcb8dc85f
.dword 0x5faabc6824ad2440
.dword 0xff3227300ca469b2
.dword 0x5f638aee2c19215f
.dword 0x5f8912bfdff44ba7
.dword 0xfefe9ffaccdec974
.dword 0x5faa56aface5eb97
.dword 0x5faabc379493ef0f
.dword 0xff660159c3db36d8
.dword 0x5f9e68dd9c514393
.dword 0x5f6878222f2318df
.dword 0xff1740cff07df955
.dword 0x5f88e041c6437953
.dword 0x5fa28d94e0280abc
.dword 0xff3cd869b9915f37
.dword 0x5f5f59904d0ce0bf
.dword 0x5fa1a7baab01ceb9
.dword 0xff114be6f22012e3
.dword 0x5fa87dc8b1f4a7b7
.dword 0x5faf9492e51e93d3
.dword 0xff682b9099db4536
.dword 0x5fa1ffb1e4665b2c
.dword 0x5f9e4206922dd131
.dword 0xff5104d9d730c446
.dword 0x5f997b629a826ff3
.dword 0x5fa98715cd327a81
.dword 0xff5453f6ed111529
RVTEST_DATA_END

RVMODEL_DATA_BEGIN


signature_x15_0:
    .fill 0*(XLEN/32),4,0xdeadbeef


signature_x15_1:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_2:
    .fill 162*(XLEN/32),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*(XLEN/32),4,0xdeadbeef

#endif

RVMODEL_DATA_END
