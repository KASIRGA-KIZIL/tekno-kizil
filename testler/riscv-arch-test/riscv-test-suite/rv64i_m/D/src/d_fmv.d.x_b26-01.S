
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.5.6
// timestamp : Mon Sep 20 15:14:31 2021 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/compliance_fd/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /scratch/compliance_fd/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV64D/rv64d_fmv.d.x.cgf \
//                  --cgf /scratch/compliance_fd/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV64D/rv64d_fmv.x.d.cgf \
 \
//                  -- xlen 64  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2021. IIT Madras. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmv.d.x instruction of the RISC-V FD extension for the fmv.d.x_b26 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV64IFD")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*64.*);check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",d_fmv.d.x_b26)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x16,test_fp)
RVTEST_SIGBASE(x15,signature_x15_1)

inst_0:// rs1==x0, rd==f0, rs1_val == 0 and rm_val == 0  
// opcode: fmv.d.x ; op1:x0; dest:f0; op1val:0x0; valaddr_reg:x16; val_offset:0; rmval:0x0; correctval:0; testreg:x18
TEST_FPIO_OP(fmv.d.x, f0, x0, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_1:// rs1==x7, rd==f28, rs1_val == 9184267462870993263 and rm_val == 0  
// opcode: fmv.d.x ; op1:x7; dest:f28; op1val:0x7f751298de9a896f; valaddr_reg:x16; val_offset:8; rmval:0x0; correctval:0; testreg:x18
TEST_FPIO_OP(fmv.d.x, f28, x7, 0x0, 0, x16, 8, x17, x15, 16, x18)

inst_2:// rs1==x29, rd==f15, rs1_val == 3035559518675506972 and rm_val == 0  
// opcode: fmv.d.x ; op1:x29; dest:f15; op1val:0x2a20794c9535971c; valaddr_reg:x16; val_offset:16; rmval:0x0; correctval:0; testreg:x18
TEST_FPIO_OP(fmv.d.x, f15, x29, 0x0, 0, x16, 16, x17, x15, 32, x18)

inst_3:// rs1==x10, rd==f4, rs1_val == 2086309477244717835 and rm_val == 0  
// opcode: fmv.d.x ; op1:x10; dest:f4; op1val:0x1cf40f6a72b3cb0b; valaddr_reg:x16; val_offset:24; rmval:0x0; correctval:0; testreg:x18
TEST_FPIO_OP(fmv.d.x, f4, x10, 0x0, 0, x16, 24, x17, x15, 48, x18)
RVTEST_VALBASEMOV(x20, x16)
RVTEST_SIGBASE(x19,signature_x19_0)

inst_4:// rs1==x15, rd==f20, rs1_val == 878257878219487117 and rm_val == 0  
// opcode: fmv.d.x ; op1:x15; dest:f20; op1val:0xc3032e31475f78d; valaddr_reg:x20; val_offset:32; rmval:0x0; correctval:0; testreg:x18
TEST_FPIO_OP(fmv.d.x, f20, x15, 0x0, 0, x20, 32, x21, x19, 0, x18)
RVTEST_VALBASEMOV(x16, x20)
RVTEST_SIGBASE(x15,signature_x15_2)

inst_5:// rs1==x20, rd==f22, rs1_val == 428092830716901554 and rm_val == 0  
// opcode: fmv.d.x ; op1:x20; dest:f22; op1val:0x5f0e42951c5b8b2; valaddr_reg:x16; val_offset:40; rmval:0x0; correctval:0; testreg:x18
TEST_FPIO_OP(fmv.d.x, f22, x20, 0x0, 0, x16, 40, x17, x15, 0, x18)

inst_6:// rs1==x25, rd==f31, rs1_val == 156703057381110404 and rm_val == 0  
// opcode: fmv.d.x ; op1:x25; dest:f31; op1val:0x22cb899b66b3284; valaddr_reg:x16; val_offset:48; rmval:0x0; correctval:0; testreg:x18
TEST_FPIO_OP(fmv.d.x, f31, x25, 0x0, 0, x16, 48, x17, x15, 16, x18)

inst_7:// rs1==x9, rd==f21, rs1_val == 104291213792325832 and rm_val == 0  
// opcode: fmv.d.x ; op1:x9; dest:f21; op1val:0x172844e6f4930c8; valaddr_reg:x16; val_offset:56; rmval:0x0; correctval:0; testreg:x18
TEST_FPIO_OP(fmv.d.x, f21, x9, 0x0, 0, x16, 56, x17, x15, 32, x18)

inst_8:// rs1==x6, rd==f23, rs1_val == 59668294213987868 and rm_val == 0  
// opcode: fmv.d.x ; op1:x6; dest:f23; op1val:0xd3fbff58fa6e1c; valaddr_reg:x16; val_offset:64; rmval:0x0; correctval:0; testreg:x18
TEST_FPIO_OP(fmv.d.x, f23, x6, 0x0, 0, x16, 64, x17, x15, 48, x18)

inst_9:// rs1==x1, rd==f3, rs1_val == 24358691315317906 and rm_val == 0  
// opcode: fmv.d.x ; op1:x1; dest:f3; op1val:0x568a19c70afc92; valaddr_reg:x16; val_offset:72; rmval:0x0; correctval:0; testreg:x18
TEST_FPIO_OP(fmv.d.x, f3, x1, 0x0, 0, x16, 72, x17, x15, 64, x18)

inst_10:// rs1==x28, rd==f30, rs1_val == 12147253371253868 and rm_val == 0  
// opcode: fmv.d.x ; op1:x28; dest:f30; op1val:0x2b27dcd230b46c; valaddr_reg:x16; val_offset:80; rmval:0x0; correctval:0; testreg:x18
TEST_FPIO_OP(fmv.d.x, f30, x28, 0x0, 0, x16, 80, x17, x15, 80, x18)
RVTEST_VALBASEMOV(x20, x16)
RVTEST_SIGBASE(x19,signature_x19_1)

inst_11:// rs1==x17, rd==f19, rs1_val == 7228908657904184 and rm_val == 0  
// opcode: fmv.d.x ; op1:x17; dest:f19; op1val:0x19aea774ab0a38; valaddr_reg:x20; val_offset:88; rmval:0x0; correctval:0; testreg:x18
TEST_FPIO_OP(fmv.d.x, f19, x17, 0x0, 0, x20, 88, x21, x19, 0, x18)
RVTEST_VALBASEMOV(x16, x20)
RVTEST_SIGBASE(x15,signature_x15_3)

inst_12:// rs1==x8, rd==f17, rs1_val == 3454382579804098 and rm_val == 0  
// opcode: fmv.d.x ; op1:x8; dest:f17; op1val:0xc45be1e9667c2; valaddr_reg:x16; val_offset:96; rmval:0x0; correctval:0; testreg:x18
TEST_FPIO_OP(fmv.d.x, f17, x8, 0x0, 0, x16, 96, x17, x15, 0, x18)

inst_13:// rs1==x11, rd==f2, rs1_val == 1449063015970349 and rm_val == 0  
// opcode: fmv.d.x ; op1:x11; dest:f2; op1val:0x525ea4652f62d; valaddr_reg:x16; val_offset:104; rmval:0x0; correctval:0; testreg:x18
TEST_FPIO_OP(fmv.d.x, f2, x11, 0x0, 0, x16, 104, x17, x15, 16, x18)

inst_14:// rs1==x31, rd==f14, rs1_val == 1064659746632576 and rm_val == 0  
// opcode: fmv.d.x ; op1:x31; dest:f14; op1val:0x3c84d6a013380; valaddr_reg:x16; val_offset:112; rmval:0x0; correctval:0; testreg:x18
TEST_FPIO_OP(fmv.d.x, f14, x31, 0x0, 0, x16, 112, x17, x15, 32, x18)

inst_15:// rs1==x30, rd==f6, rs1_val == 477767642386861 and rm_val == 0  
// opcode: fmv.d.x ; op1:x30; dest:f6; op1val:0x1b286f29c11ad; valaddr_reg:x16; val_offset:120; rmval:0x0; correctval:0; testreg:x18
TEST_FPIO_OP(fmv.d.x, f6, x30, 0x0, 0, x16, 120, x17, x15, 48, x18)

inst_16:// rs1==x19, rd==f1, rs1_val == 194479587133174 and rm_val == 0  
// opcode: fmv.d.x ; op1:x19; dest:f1; op1val:0xb0e0ceb506f6; valaddr_reg:x16; val_offset:128; rmval:0x0; correctval:0; testreg:x18
TEST_FPIO_OP(fmv.d.x, f1, x19, 0x0, 0, x16, 128, x17, x15, 64, x18)

inst_17:// rs1==x27, rd==f16, rs1_val == 132508745935081 and rm_val == 0  
// opcode: fmv.d.x ; op1:x27; dest:f16; op1val:0x788418bb28e9; valaddr_reg:x16; val_offset:136; rmval:0x0; correctval:0; testreg:x18
TEST_FPIO_OP(fmv.d.x, f16, x27, 0x0, 0, x16, 136, x17, x15, 80, x18)

inst_18:// rs1==x26, rd==f26, rs1_val == 45718214482007 and rm_val == 0  
// opcode: fmv.d.x ; op1:x26; dest:f26; op1val:0x299499ef1857; valaddr_reg:x16; val_offset:144; rmval:0x0; correctval:0; testreg:x18
TEST_FPIO_OP(fmv.d.x, f26, x26, 0x0, 0, x16, 144, x17, x15, 96, x18)

inst_19:// rs1==x13, rd==f11, rs1_val == 31117680965175 and rm_val == 0  
// opcode: fmv.d.x ; op1:x13; dest:f11; op1val:0x1c4d2651f637; valaddr_reg:x16; val_offset:152; rmval:0x0; correctval:0; testreg:x18
TEST_FPIO_OP(fmv.d.x, f11, x13, 0x0, 0, x16, 152, x17, x15, 112, x18)

inst_20:// rs1==x23, rd==f8, rs1_val == 10221399934292 and rm_val == 0  
// opcode: fmv.d.x ; op1:x23; dest:f8; op1val:0x94bdae98554; valaddr_reg:x16; val_offset:160; rmval:0x0; correctval:0; testreg:x18
TEST_FPIO_OP(fmv.d.x, f8, x23, 0x0, 0, x16, 160, x17, x15, 128, x18)

inst_21:// rs1==x22, rd==f24, rs1_val == 5032232323694 and rm_val == 0  
// opcode: fmv.d.x ; op1:x22; dest:f24; op1val:0x493a86b8a6e; valaddr_reg:x16; val_offset:168; rmval:0x0; correctval:0; testreg:x18
TEST_FPIO_OP(fmv.d.x, f24, x22, 0x0, 0, x16, 168, x17, x15, 144, x18)

inst_22:// rs1==x2, rd==f25, rs1_val == 3524006078498 and rm_val == 0  
// opcode: fmv.d.x ; op1:x2; dest:f25; op1val:0x3347f216822; valaddr_reg:x16; val_offset:176; rmval:0x0; correctval:0; testreg:x18
TEST_FPIO_OP(fmv.d.x, f25, x2, 0x0, 0, x16, 176, x17, x15, 160, x18)

inst_23:// rs1==x3, rd==f18, rs1_val == 1168389695644 and rm_val == 0  
// opcode: fmv.d.x ; op1:x3; dest:f18; op1val:0x1100973e89c; valaddr_reg:x16; val_offset:184; rmval:0x0; correctval:0; testreg:x18
TEST_FPIO_OP(fmv.d.x, f18, x3, 0x0, 0, x16, 184, x17, x15, 176, x18)

inst_24:// rs1==x4, rd==f5, rs1_val == 813522083007 and rm_val == 0  
// opcode: fmv.d.x ; op1:x4; dest:f5; op1val:0xbd69b1dcbf; valaddr_reg:x16; val_offset:192; rmval:0x0; correctval:0; testreg:x18
TEST_FPIO_OP(fmv.d.x, f5, x4, 0x0, 0, x16, 192, x17, x15, 192, x18)

inst_25:// rs1==x21, rd==f12, rs1_val == 453482173015 and rm_val == 0  
// opcode: fmv.d.x ; op1:x21; dest:f12; op1val:0x6995a4d257; valaddr_reg:x16; val_offset:200; rmval:0x0; correctval:0; testreg:x18
TEST_FPIO_OP(fmv.d.x, f12, x21, 0x0, 0, x16, 200, x17, x15, 208, x18)

inst_26:// rs1==x18, rd==f9, rs1_val == 268160711063 and rm_val == 0  
// opcode: fmv.d.x ; op1:x18; dest:f9; op1val:0x3e6f9fb997; valaddr_reg:x16; val_offset:208; rmval:0x0; correctval:0; testreg:x22
TEST_FPIO_OP(fmv.d.x, f9, x18, 0x0, 0, x16, 208, x17, x15, 224, x22)

inst_27:// rs1==x24, rd==f13, rs1_val == 131206879410 and rm_val == 0  
// opcode: fmv.d.x ; op1:x24; dest:f13; op1val:0x1e8c8a18b2; valaddr_reg:x16; val_offset:216; rmval:0x0; correctval:0; testreg:x18
TEST_FPIO_OP(fmv.d.x, f13, x24, 0x0, 0, x16, 216, x17, x15, 240, x18)

inst_28:// rs1==x5, rd==f29, rs1_val == 51102363774 and rm_val == 0  
// opcode: fmv.d.x ; op1:x5; dest:f29; op1val:0xbe5f0307e; valaddr_reg:x16; val_offset:224; rmval:0x0; correctval:0; testreg:x18
TEST_FPIO_OP(fmv.d.x, f29, x5, 0x0, 0, x16, 224, x17, x15, 256, x18)

inst_29:// rs1==x14, rd==f27, rs1_val == 22050244097 and rm_val == 0  
// opcode: fmv.d.x ; op1:x14; dest:f27; op1val:0x5224c0601; valaddr_reg:x16; val_offset:232; rmval:0x0; correctval:0; testreg:x18
TEST_FPIO_OP(fmv.d.x, f27, x14, 0x0, 0, x16, 232, x17, x15, 272, x18)
RVTEST_VALBASEMOV(x20, x16)
RVTEST_SIGBASE(x19,signature_x19_2)

inst_30:// rs1==x16, rd==f7, rs1_val == 8607351303 and rm_val == 0  
// opcode: fmv.d.x ; op1:x16; dest:f7; op1val:0x20109c207; valaddr_reg:x20; val_offset:240; rmval:0x0; correctval:0; testreg:x18
TEST_FPIO_OP(fmv.d.x, f7, x16, 0x0, 0, x20, 240, x21, x19, 0, x18)
RVTEST_VALBASEMOV(x16, x20)
RVTEST_SIGBASE(x15,signature_x15_4)

inst_31:// rs1==x12, rd==f10, rs1_val == 6929185936 and rm_val == 0  
// opcode: fmv.d.x ; op1:x12; dest:f10; op1val:0x19d02fc90; valaddr_reg:x16; val_offset:248; rmval:0x0; correctval:0; testreg:x18
TEST_FPIO_OP(fmv.d.x, f10, x12, 0x0, 0, x16, 248, x17, x15, 0, x18)

inst_32:// rs1_val == 4035756470 and rm_val == 0  
// opcode: fmv.d.x ; op1:x10; dest:f11; op1val:0xf08cc1b6; valaddr_reg:x16; val_offset:256; rmval:0x0; correctval:0; testreg:x18
TEST_FPIO_OP(fmv.d.x, f11, x10, 0x0, 0, x16, 256, x17, x15, 16, x18)

inst_33:// rs1_val == 1587807073 and rm_val == 0  
// opcode: fmv.d.x ; op1:x10; dest:f11; op1val:0x5ea40361; valaddr_reg:x16; val_offset:264; rmval:0x0; correctval:0; testreg:x18
TEST_FPIO_OP(fmv.d.x, f11, x10, 0x0, 0, x16, 264, x17, x15, 32, x18)

inst_34:// rs1_val == 1027494066 and rm_val == 0  
// opcode: fmv.d.x ; op1:x10; dest:f11; op1val:0x3d3e50b2; valaddr_reg:x16; val_offset:272; rmval:0x0; correctval:0; testreg:x18
TEST_FPIO_OP(fmv.d.x, f11, x10, 0x0, 0, x16, 272, x17, x15, 48, x18)

inst_35:// rs1_val == 339827553 and rm_val == 0  
// opcode: fmv.d.x ; op1:x10; dest:f11; op1val:0x14415b61; valaddr_reg:x16; val_offset:280; rmval:0x0; correctval:0; testreg:x18
TEST_FPIO_OP(fmv.d.x, f11, x10, 0x0, 0, x16, 280, x17, x15, 64, x18)

inst_36:// rs1_val == 231549045 and rm_val == 0  
// opcode: fmv.d.x ; op1:x10; dest:f11; op1val:0xdcd2875; valaddr_reg:x16; val_offset:288; rmval:0x0; correctval:0; testreg:x18
TEST_FPIO_OP(fmv.d.x, f11, x10, 0x0, 0, x16, 288, x17, x15, 80, x18)

inst_37:// rs1_val == 107790943 and rm_val == 0  
// opcode: fmv.d.x ; op1:x10; dest:f11; op1val:0x66cc25f; valaddr_reg:x16; val_offset:296; rmval:0x0; correctval:0; testreg:x18
TEST_FPIO_OP(fmv.d.x, f11, x10, 0x0, 0, x16, 296, x17, x15, 96, x18)

inst_38:// rs1_val == 45276376 and rm_val == 0  
// opcode: fmv.d.x ; op1:x10; dest:f11; op1val:0x2b2dcd8; valaddr_reg:x16; val_offset:304; rmval:0x0; correctval:0; testreg:x18
TEST_FPIO_OP(fmv.d.x, f11, x10, 0x0, 0, x16, 304, x17, x15, 112, x18)

inst_39:// rs1_val == 32105925 and rm_val == 0  
// opcode: fmv.d.x ; op1:x10; dest:f11; op1val:0x1e9e5c5; valaddr_reg:x16; val_offset:312; rmval:0x0; correctval:0; testreg:x18
TEST_FPIO_OP(fmv.d.x, f11, x10, 0x0, 0, x16, 312, x17, x15, 128, x18)

inst_40:// rs1_val == 12789625 and rm_val == 0  
// opcode: fmv.d.x ; op1:x10; dest:f11; op1val:0xc32779; valaddr_reg:x16; val_offset:320; rmval:0x0; correctval:0; testreg:x18
TEST_FPIO_OP(fmv.d.x, f11, x10, 0x0, 0, x16, 320, x17, x15, 144, x18)

inst_41:// rs1_val == 6573466 and rm_val == 0  
// opcode: fmv.d.x ; op1:x10; dest:f11; op1val:0x644d9a; valaddr_reg:x16; val_offset:328; rmval:0x0; correctval:0; testreg:x18
TEST_FPIO_OP(fmv.d.x, f11, x10, 0x0, 0, x16, 328, x17, x15, 160, x18)

inst_42:// rs1_val == 3864061 and rm_val == 0  
// opcode: fmv.d.x ; op1:x10; dest:f11; op1val:0x3af5fd; valaddr_reg:x16; val_offset:336; rmval:0x0; correctval:0; testreg:x18
TEST_FPIO_OP(fmv.d.x, f11, x10, 0x0, 0, x16, 336, x17, x15, 176, x18)

inst_43:// rs1_val == 1848861 and rm_val == 0  
// opcode: fmv.d.x ; op1:x10; dest:f11; op1val:0x1c361d; valaddr_reg:x16; val_offset:344; rmval:0x0; correctval:0; testreg:x18
TEST_FPIO_OP(fmv.d.x, f11, x10, 0x0, 0, x16, 344, x17, x15, 192, x18)

inst_44:// rs1_val == 896618 and rm_val == 0  
// opcode: fmv.d.x ; op1:x10; dest:f11; op1val:0xdae6a; valaddr_reg:x16; val_offset:352; rmval:0x0; correctval:0; testreg:x18
TEST_FPIO_OP(fmv.d.x, f11, x10, 0x0, 0, x16, 352, x17, x15, 208, x18)

inst_45:// rs1_val == 334857 and rm_val == 0  
// opcode: fmv.d.x ; op1:x10; dest:f11; op1val:0x51c09; valaddr_reg:x16; val_offset:360; rmval:0x0; correctval:0; testreg:x18
TEST_FPIO_OP(fmv.d.x, f11, x10, 0x0, 0, x16, 360, x17, x15, 224, x18)

inst_46:// rs1_val == 241276 and rm_val == 0  
// opcode: fmv.d.x ; op1:x10; dest:f11; op1val:0x3ae7c; valaddr_reg:x16; val_offset:368; rmval:0x0; correctval:0; testreg:x18
TEST_FPIO_OP(fmv.d.x, f11, x10, 0x0, 0, x16, 368, x17, x15, 240, x18)

inst_47:// rs1_val == 71376 and rm_val == 0  
// opcode: fmv.d.x ; op1:x10; dest:f11; op1val:0x116d0; valaddr_reg:x16; val_offset:376; rmval:0x0; correctval:0; testreg:x18
TEST_FPIO_OP(fmv.d.x, f11, x10, 0x0, 0, x16, 376, x17, x15, 256, x18)

inst_48:// rs1_val == 56436 and rm_val == 0  
// opcode: fmv.d.x ; op1:x10; dest:f11; op1val:0xdc74; valaddr_reg:x16; val_offset:384; rmval:0x0; correctval:0; testreg:x18
TEST_FPIO_OP(fmv.d.x, f11, x10, 0x0, 0, x16, 384, x17, x15, 272, x18)

inst_49:// rs1_val == 24575 and rm_val == 0  
// opcode: fmv.d.x ; op1:x10; dest:f11; op1val:0x5fff; valaddr_reg:x16; val_offset:392; rmval:0x0; correctval:0; testreg:x18
TEST_FPIO_OP(fmv.d.x, f11, x10, 0x0, 0, x16, 392, x17, x15, 288, x18)

inst_50:// rs1_val == 9438 and rm_val == 0  
// opcode: fmv.d.x ; op1:x10; dest:f11; op1val:0x24de; valaddr_reg:x16; val_offset:400; rmval:0x0; correctval:0; testreg:x18
TEST_FPIO_OP(fmv.d.x, f11, x10, 0x0, 0, x16, 400, x17, x15, 304, x18)

inst_51:// rs1_val == 6781 and rm_val == 0  
// opcode: fmv.d.x ; op1:x10; dest:f11; op1val:0x1a7d; valaddr_reg:x16; val_offset:408; rmval:0x0; correctval:0; testreg:x18
TEST_FPIO_OP(fmv.d.x, f11, x10, 0x0, 0, x16, 408, x17, x15, 320, x18)

inst_52:// rs1_val == 4055 and rm_val == 0  
// opcode: fmv.d.x ; op1:x10; dest:f11; op1val:0xfd7; valaddr_reg:x16; val_offset:416; rmval:0x0; correctval:0; testreg:x18
TEST_FPIO_OP(fmv.d.x, f11, x10, 0x0, 0, x16, 416, x17, x15, 336, x18)

inst_53:// rs1_val == 1094 and rm_val == 0  
// opcode: fmv.d.x ; op1:x10; dest:f11; op1val:0x446; valaddr_reg:x16; val_offset:424; rmval:0x0; correctval:0; testreg:x18
TEST_FPIO_OP(fmv.d.x, f11, x10, 0x0, 0, x16, 424, x17, x15, 352, x18)

inst_54:// rs1_val == 676 and rm_val == 0  
// opcode: fmv.d.x ; op1:x10; dest:f11; op1val:0x2a4; valaddr_reg:x16; val_offset:432; rmval:0x0; correctval:0; testreg:x18
TEST_FPIO_OP(fmv.d.x, f11, x10, 0x0, 0, x16, 432, x17, x15, 368, x18)

inst_55:// rs1_val == 398 and rm_val == 0  
// opcode: fmv.d.x ; op1:x10; dest:f11; op1val:0x18e; valaddr_reg:x16; val_offset:440; rmval:0x0; correctval:0; testreg:x18
TEST_FPIO_OP(fmv.d.x, f11, x10, 0x0, 0, x16, 440, x17, x15, 384, x18)

inst_56:// rs1_val == 253 and rm_val == 0  
// opcode: fmv.d.x ; op1:x10; dest:f11; op1val:0xfd; valaddr_reg:x16; val_offset:448; rmval:0x0; correctval:0; testreg:x18
TEST_FPIO_OP(fmv.d.x, f11, x10, 0x0, 0, x16, 448, x17, x15, 400, x18)

inst_57:// rs1_val == 123 and rm_val == 0  
// opcode: fmv.d.x ; op1:x10; dest:f11; op1val:0x7b; valaddr_reg:x16; val_offset:456; rmval:0x0; correctval:0; testreg:x18
TEST_FPIO_OP(fmv.d.x, f11, x10, 0x0, 0, x16, 456, x17, x15, 416, x18)

inst_58:// rs1_val == 45 and rm_val == 0  
// opcode: fmv.d.x ; op1:x10; dest:f11; op1val:0x2d; valaddr_reg:x16; val_offset:464; rmval:0x0; correctval:0; testreg:x18
TEST_FPIO_OP(fmv.d.x, f11, x10, 0x0, 0, x16, 464, x17, x15, 432, x18)

inst_59:// rs1_val == 16 and rm_val == 0  
// opcode: fmv.d.x ; op1:x10; dest:f11; op1val:0x10; valaddr_reg:x16; val_offset:472; rmval:0x0; correctval:0; testreg:x18
TEST_FPIO_OP(fmv.d.x, f11, x10, 0x0, 0, x16, 472, x17, x15, 448, x18)

inst_60:// rs1_val == 15 and rm_val == 0  
// opcode: fmv.d.x ; op1:x10; dest:f11; op1val:0xf; valaddr_reg:x16; val_offset:480; rmval:0x0; correctval:0; testreg:x18
TEST_FPIO_OP(fmv.d.x, f11, x10, 0x0, 0, x16, 480, x17, x15, 464, x18)

inst_61:// rs1_val == 7 and rm_val == 0  
// opcode: fmv.d.x ; op1:x10; dest:f11; op1val:0x7; valaddr_reg:x16; val_offset:488; rmval:0x0; correctval:0; testreg:x18
TEST_FPIO_OP(fmv.d.x, f11, x10, 0x0, 0, x16, 488, x17, x15, 480, x18)

inst_62:// rs1_val == 2 and rm_val == 0  
// opcode: fmv.d.x ; op1:x10; dest:f11; op1val:0x2; valaddr_reg:x16; val_offset:496; rmval:0x0; correctval:0; testreg:x18
TEST_FPIO_OP(fmv.d.x, f11, x10, 0x0, 0, x16, 496, x17, x15, 496, x18)

inst_63:// rs1_val == 1 and rm_val == 0  
// opcode: fmv.d.x ; op1:x10; dest:f11; op1val:0x1; valaddr_reg:x16; val_offset:504; rmval:0x0; correctval:0; testreg:x18
TEST_FPIO_OP(fmv.d.x, f11, x10, 0x0, 0, x16, 504, x17, x15, 512, x18)

inst_64:// rs1_val == 0 and rm_val == 0  
// opcode: fmv.d.x ; op1:x10; dest:f11; op1val:0x0; valaddr_reg:x16; val_offset:512; rmval:0x0; correctval:0; testreg:x18
TEST_FPIO_OP(fmv.d.x, f11, x10, 0x0, 0, x16, 512, x17, x15, 528, x18)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_fp:
.dword 0x0
.dword 0x7f751298de9a896f
.dword 0x2a20794c9535971c
.dword 0x1cf40f6a72b3cb0b
.dword 0xc3032e31475f78d
.dword 0x5f0e42951c5b8b2
.dword 0x22cb899b66b3284
.dword 0x172844e6f4930c8
.dword 0xd3fbff58fa6e1c
.dword 0x568a19c70afc92
.dword 0x2b27dcd230b46c
.dword 0x19aea774ab0a38
.dword 0xc45be1e9667c2
.dword 0x525ea4652f62d
.dword 0x3c84d6a013380
.dword 0x1b286f29c11ad
.dword 0xb0e0ceb506f6
.dword 0x788418bb28e9
.dword 0x299499ef1857
.dword 0x1c4d2651f637
.dword 0x94bdae98554
.dword 0x493a86b8a6e
.dword 0x3347f216822
.dword 0x1100973e89c
.dword 0xbd69b1dcbf
.dword 0x6995a4d257
.dword 0x3e6f9fb997
.dword 0x1e8c8a18b2
.dword 0xbe5f0307e
.dword 0x5224c0601
.dword 0x20109c207
.dword 0x19d02fc90
.dword 0xf08cc1b6
.dword 0x5ea40361
.dword 0x3d3e50b2
.dword 0x14415b61
.dword 0xdcd2875
.dword 0x66cc25f
.dword 0x2b2dcd8
.dword 0x1e9e5c5
.dword 0xc32779
.dword 0x644d9a
.dword 0x3af5fd
.dword 0x1c361d
.dword 0xdae6a
.dword 0x51c09
.dword 0x3ae7c
.dword 0x116d0
.dword 0xdc74
.dword 0x5fff
.dword 0x24de
.dword 0x1a7d
.dword 0xfd7
.dword 0x446
.dword 0x2a4
.dword 0x18e
.dword 0xfd
.dword 0x7b
.dword 0x2d
.dword 0x10
.dword 0xf
.dword 0x7
.dword 0x2
.dword 0x1
.dword 0x0
RVTEST_DATA_END

RVMODEL_DATA_BEGIN


signature_x15_0:
    .fill 0*(XLEN/32),4,0xdeadbeef


signature_x15_1:
    .fill 8*(XLEN/32),4,0xdeadbeef


signature_x19_0:
    .fill 2*(XLEN/32),4,0xdeadbeef


signature_x15_2:
    .fill 12*(XLEN/32),4,0xdeadbeef


signature_x19_1:
    .fill 2*(XLEN/32),4,0xdeadbeef


signature_x15_3:
    .fill 36*(XLEN/32),4,0xdeadbeef


signature_x19_2:
    .fill 2*(XLEN/32),4,0xdeadbeef


signature_x15_4:
    .fill 68*(XLEN/32),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*(XLEN/32),4,0xdeadbeef

#endif

RVMODEL_DATA_END
