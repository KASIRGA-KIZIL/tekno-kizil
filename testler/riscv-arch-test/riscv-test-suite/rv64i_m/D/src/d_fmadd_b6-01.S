
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.5.6
// timestamp : Mon Sep 20 11:52:58 2021 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/compliance_fd/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /scratch/compliance_fd/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV64D/rv64d_fmadd1.cgf \
 \
//                  -- xlen 64  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2021. IIT Madras. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmadd.d instruction of the RISC-V FD extension for the fmadd_b6 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV64IFD")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*64.*);check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",d_fmadd_b6)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x16,test_fp)
RVTEST_SIGBASE(x15,signature_x15_1)

inst_0:
// rs2 == rs3 != rs1 and rs2 == rs3 != rd and rd != rs1, rs1==f9, rs2==f31, rs3==f31, rd==f15, fs1 == 0 and fe1 == 0x39b and fm1 == 0x0f2287fcf470c and fs2 == 0 and fe2 == 0x41c and fm2 == 0xe36b7e7d0dc99 and fs3 == 0 and fe3 == 0x39a and fm3 == 0xddabfd3b9dd04 and rm_val == 0  
// opcode: fmadd.d ; op1:f9; op2:f31; op3:f31; dest:f15; op1val:0x39b0f2287fcf470c; op2val:0x41ce36b7e7d0dc99; op3val:0x41ce36b7e7d0dc99; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f15, f9, f31, f31, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_1:
// rs1 == rs2 == rs3 == rd, rs1==f4, rs2==f4, rs3==f4, rd==f4, fs1 == 0 and fe1 == 0x39a and fm1 == 0x70762f226b782 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x9e72fa59afaac and fs3 == 0 and fe3 == 0x39b and fm3 == 0x2aaa0fc3296fd and rm_val == 4  
// opcode: fmadd.d ; op1:f4; op2:f4; op3:f4; dest:f4; op1val:0x39a70762f226b782; op2val:0x39a70762f226b782; op3val:0x39a70762f226b782; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f4, f4, f4, f4, 0x4, 0, x16, 24, x17, x15, 16, x18)

inst_2:
// rs1 != rs2 and rs1 != rd and rs1 != rs3 and rs2 != rs3 and rs2 != rd and rs3 != rd, rs1==f25, rs2==f24, rs3==f26, rd==f7, fs1 == 0 and fe1 == 0x39a and fm1 == 0x70762f226b782 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x9e72fa59afaac and fs3 == 0 and fe3 == 0x39b and fm3 == 0x2aaa0fc3296fd and rm_val == 3  
// opcode: fmadd.d ; op1:f25; op2:f24; op3:f26; dest:f7; op1val:0x39a70762f226b782; op2val:0xbff9e72fa59afaac; op3val:0x39b2aaa0fc3296fd; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f7, f25, f24, f26, 0x3, 0, x16, 48, x17, x15, 32, x18)

inst_3:
// rs1 == rs3 != rs2 and rs1 == rs3 != rd and rd != rs2, rs1==f22, rs2==f19, rs3==f22, rd==f25, fs1 == 0 and fe1 == 0x39a and fm1 == 0x70762f226b782 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x9e72fa59afaac and fs3 == 0 and fe3 == 0x39b and fm3 == 0x2aaa0fc3296fd and rm_val == 2  
// opcode: fmadd.d ; op1:f22; op2:f19; op3:f22; dest:f25; op1val:0x39a70762f226b782; op2val:0xbff9e72fa59afaac; op3val:0x39a70762f226b782; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f25, f22, f19, f22, 0x2, 0, x16, 72, x17, x15, 48, x18)

inst_4:
// rs1 == rs2 != rs3 and rs1 == rs2 != rd and rd != rs3, rs1==f6, rs2==f6, rs3==f1, rd==f9, fs1 == 0 and fe1 == 0x39a and fm1 == 0x70762f226b782 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x9e72fa59afaac and fs3 == 0 and fe3 == 0x39b and fm3 == 0x2aaa0fc3296fd and rm_val == 1  
// opcode: fmadd.d ; op1:f6; op2:f6; op3:f1; dest:f9; op1val:0x39a70762f226b782; op2val:0x39a70762f226b782; op3val:0x39b2aaa0fc3296fd; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f9, f6, f6, f1, 0x1, 0, x16, 96, x17, x15, 64, x18)

inst_5:
// rd == rs2 == rs3 != rs1, rs1==f0, rs2==f18, rs3==f18, rd==f18, fs1 == 0 and fe1 == 0x39a and fm1 == 0x70762f226b782 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x9e72fa59afaac and fs3 == 0 and fe3 == 0x39b and fm3 == 0x2aaa0fc3296fd and rm_val == 0  
// opcode: fmadd.d ; op1:f0; op2:f18; op3:f18; dest:f18; op1val:0x39a70762f226b782; op2val:0xbff9e72fa59afaac; op3val:0xbff9e72fa59afaac; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f18, f0, f18, f18, 0x0, 0, x16, 120, x17, x15, 80, x18)

inst_6:
// rs1 == rs2 == rs3 != rd, rs1==f12, rs2==f12, rs3==f12, rd==f6, fs1 == 0 and fe1 == 0x39b and fm1 == 0x23f8335dcbd7f and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x00336ade1c517 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x2b36c8d4a60c8 and rm_val == 4  
// opcode: fmadd.d ; op1:f12; op2:f12; op3:f12; dest:f6; op1val:0x39b23f8335dcbd7f; op2val:0x39b23f8335dcbd7f; op3val:0x39b23f8335dcbd7f; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f6, f12, f12, f12, 0x4, 0, x16, 144, x17, x15, 96, x18)

inst_7:
// rs1 == rd != rs2 and rs1 == rd != rs3 and rs3 != rs2, rs1==f8, rs2==f21, rs3==f17, rd==f8, fs1 == 0 and fe1 == 0x39b and fm1 == 0x23f8335dcbd7f and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x00336ade1c517 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x2b36c8d4a60c8 and rm_val == 3  
// opcode: fmadd.d ; op1:f8; op2:f21; op3:f17; dest:f8; op1val:0x39b23f8335dcbd7f; op2val:0xbfe00336ade1c517; op3val:0x39a2b36c8d4a60c8; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f8, f8, f21, f17, 0x3, 0, x16, 168, x17, x15, 112, x18)

inst_8:
// rs3 == rd != rs1 and rs3 == rd != rs2 and rs2 != rs1, rs1==f3, rs2==f17, rs3==f20, rd==f20, fs1 == 0 and fe1 == 0x39b and fm1 == 0x23f8335dcbd7f and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x00336ade1c517 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x2b36c8d4a60c8 and rm_val == 2  
// opcode: fmadd.d ; op1:f3; op2:f17; op3:f20; dest:f20; op1val:0x39b23f8335dcbd7f; op2val:0xbfe00336ade1c517; op3val:0x39a2b36c8d4a60c8; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f20, f3, f17, f20, 0x2, 0, x16, 192, x17, x15, 128, x18)

inst_9:
// rs1 == rd == rs3 != rs2, rs1==f29, rs2==f8, rs3==f29, rd==f29, fs1 == 0 and fe1 == 0x39b and fm1 == 0x23f8335dcbd7f and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x00336ade1c517 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x2b36c8d4a60c8 and rm_val == 1  
// opcode: fmadd.d ; op1:f29; op2:f8; op3:f29; dest:f29; op1val:0x39b23f8335dcbd7f; op2val:0xbfe00336ade1c517; op3val:0x39b23f8335dcbd7f; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f29, f29, f8, f29, 0x1, 0, x16, 216, x17, x15, 144, x18)

inst_10:
// rs2 == rd != rs1 and rs2 == rd != rs3 and rs3 != rs1, rs1==f31, rs2==f27, rs3==f24, rd==f27, fs1 == 0 and fe1 == 0x39b and fm1 == 0x23f8335dcbd7f and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x00336ade1c517 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x2b36c8d4a60c8 and rm_val == 0  
// opcode: fmadd.d ; op1:f31; op2:f27; op3:f24; dest:f27; op1val:0x39b23f8335dcbd7f; op2val:0xbfe00336ade1c517; op3val:0x39a2b36c8d4a60c8; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f27, f31, f27, f24, 0x0, 0, x16, 240, x17, x15, 160, x18)

inst_11:
// rs1 == rs2 == rd != rs3, rs1==f1, rs2==f1, rs3==f7, rd==f1, fs1 == 0 and fe1 == 0x399 and fm1 == 0xcb6b7d892c724 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x0d19d99aca709 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x1e8062836913b and rm_val == 4  
// opcode: fmadd.d ; op1:f1; op2:f1; op3:f7; dest:f1; op1val:0x399cb6b7d892c724; op2val:0x399cb6b7d892c724; op3val:0x39b1e8062836913b; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f1, f1, f1, f7, 0x4, 0, x16, 264, x17, x15, 176, x18)

inst_12:
// rs1==f24, rs2==f7, rs3==f14, rd==f26, fs1 == 0 and fe1 == 0x399 and fm1 == 0xcb6b7d892c724 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x0d19d99aca709 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x1e8062836913b and rm_val == 3  
// opcode: fmadd.d ; op1:f24; op2:f7; op3:f14; dest:f26; op1val:0x399cb6b7d892c724; op2val:0xc000d19d99aca709; op3val:0x39b1e8062836913b; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f26, f24, f7, f14, 0x3, 0, x16, 288, x17, x15, 192, x18)

inst_13:
// rs1==f28, rs2==f2, rs3==f5, rd==f13, fs1 == 0 and fe1 == 0x399 and fm1 == 0xcb6b7d892c724 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x0d19d99aca709 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x1e8062836913b and rm_val == 2  
// opcode: fmadd.d ; op1:f28; op2:f2; op3:f5; dest:f13; op1val:0x399cb6b7d892c724; op2val:0xc000d19d99aca709; op3val:0x39b1e8062836913b; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f28, f2, f5, 0x2, 0, x16, 312, x17, x15, 208, x18)

inst_14:
// rs1==f7, rs2==f14, rs3==f27, rd==f2, fs1 == 0 and fe1 == 0x399 and fm1 == 0xcb6b7d892c724 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x0d19d99aca709 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x1e8062836913b and rm_val == 1  
// opcode: fmadd.d ; op1:f7; op2:f14; op3:f27; dest:f2; op1val:0x399cb6b7d892c724; op2val:0xc000d19d99aca709; op3val:0x39b1e8062836913b; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f2, f7, f14, f27, 0x1, 0, x16, 336, x17, x15, 224, x18)

inst_15:
// rs1==f13, rs2==f28, rs3==f21, rd==f22, fs1 == 0 and fe1 == 0x399 and fm1 == 0xcb6b7d892c724 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x0d19d99aca709 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x1e8062836913b and rm_val == 0  
// opcode: fmadd.d ; op1:f13; op2:f28; op3:f21; dest:f22; op1val:0x399cb6b7d892c724; op2val:0xc000d19d99aca709; op3val:0x39b1e8062836913b; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f22, f13, f28, f21, 0x0, 0, x16, 360, x17, x15, 240, x18)

inst_16:
// rs1==f21, rs2==f16, rs3==f23, rd==f3, fs1 == 0 and fe1 == 0x39a and fm1 == 0x45107ec7c7f1b and fs2 == 0 and fe2 == 0x401 and fm2 == 0x28f64d94c431e and fs3 == 0 and fe3 == 0x39b and fm3 == 0x0dd85a18a0163 and rm_val == 4  
// opcode: fmadd.d ; op1:f21; op2:f16; op3:f23; dest:f3; op1val:0x39a45107ec7c7f1b; op2val:0x40128f64d94c431e; op3val:0x39b0dd85a18a0163; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f3, f21, f16, f23, 0x4, 0, x16, 384, x17, x15, 256, x18)

inst_17:
// rs1==f14, rs2==f20, rs3==f0, rd==f21, fs1 == 0 and fe1 == 0x39a and fm1 == 0x45107ec7c7f1b and fs2 == 0 and fe2 == 0x401 and fm2 == 0x28f64d94c431e and fs3 == 0 and fe3 == 0x39b and fm3 == 0x0dd85a18a0163 and rm_val == 3  
// opcode: fmadd.d ; op1:f14; op2:f20; op3:f0; dest:f21; op1val:0x39a45107ec7c7f1b; op2val:0x40128f64d94c431e; op3val:0x39b0dd85a18a0163; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f21, f14, f20, f0, 0x3, 0, x16, 408, x17, x15, 272, x18)

inst_18:
// rs1==f2, rs2==f3, rs3==f13, rd==f11, fs1 == 0 and fe1 == 0x39a and fm1 == 0x45107ec7c7f1b and fs2 == 0 and fe2 == 0x401 and fm2 == 0x28f64d94c431e and fs3 == 0 and fe3 == 0x39b and fm3 == 0x0dd85a18a0163 and rm_val == 2  
// opcode: fmadd.d ; op1:f2; op2:f3; op3:f13; dest:f11; op1val:0x39a45107ec7c7f1b; op2val:0x40128f64d94c431e; op3val:0x39b0dd85a18a0163; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f11, f2, f3, f13, 0x2, 0, x16, 432, x17, x15, 288, x18)

inst_19:
// rs1==f20, rs2==f29, rs3==f2, rd==f30, fs1 == 0 and fe1 == 0x39a and fm1 == 0x45107ec7c7f1b and fs2 == 0 and fe2 == 0x401 and fm2 == 0x28f64d94c431e and fs3 == 0 and fe3 == 0x39b and fm3 == 0x0dd85a18a0163 and rm_val == 1  
// opcode: fmadd.d ; op1:f20; op2:f29; op3:f2; dest:f30; op1val:0x39a45107ec7c7f1b; op2val:0x40128f64d94c431e; op3val:0x39b0dd85a18a0163; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f30, f20, f29, f2, 0x1, 0, x16, 456, x17, x15, 304, x18)

inst_20:
// rs1==f11, rs2==f30, rs3==f15, rd==f31, fs1 == 0 and fe1 == 0x39a and fm1 == 0x45107ec7c7f1b and fs2 == 0 and fe2 == 0x401 and fm2 == 0x28f64d94c431e and fs3 == 0 and fe3 == 0x39b and fm3 == 0x0dd85a18a0163 and rm_val == 0  
// opcode: fmadd.d ; op1:f11; op2:f30; op3:f15; dest:f31; op1val:0x39a45107ec7c7f1b; op2val:0x40128f64d94c431e; op3val:0x39b0dd85a18a0163; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f31, f11, f30, f15, 0x0, 0, x16, 480, x17, x15, 320, x18)

inst_21:
// rs1==f30, rs2==f26, rs3==f8, rd==f24, fs1 == 0 and fe1 == 0x39a and fm1 == 0x3e098724d83a1 and fs2 == 0 and fe2 == 0x407 and fm2 == 0x67848cf5259e6 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x2c200ae7f2a1e and rm_val == 4  
// opcode: fmadd.d ; op1:f30; op2:f26; op3:f8; dest:f24; op1val:0x39a3e098724d83a1; op2val:0x40767848cf5259e6; op3val:0x39b2c200ae7f2a1e; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f24, f30, f26, f8, 0x4, 0, x16, 504, x17, x15, 336, x18)

inst_22:
// rs1==f18, rs2==f5, rs3==f25, rd==f12, fs1 == 0 and fe1 == 0x39a and fm1 == 0x3e098724d83a1 and fs2 == 0 and fe2 == 0x407 and fm2 == 0x67848cf5259e6 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x2c200ae7f2a1e and rm_val == 3  
// opcode: fmadd.d ; op1:f18; op2:f5; op3:f25; dest:f12; op1val:0x39a3e098724d83a1; op2val:0x40767848cf5259e6; op3val:0x39b2c200ae7f2a1e; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f12, f18, f5, f25, 0x3, 0, x16, 528, x17, x15, 352, x18)

inst_23:
// rs1==f27, rs2==f25, rs3==f3, rd==f17, fs1 == 0 and fe1 == 0x39a and fm1 == 0x3e098724d83a1 and fs2 == 0 and fe2 == 0x407 and fm2 == 0x67848cf5259e6 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x2c200ae7f2a1e and rm_val == 2  
// opcode: fmadd.d ; op1:f27; op2:f25; op3:f3; dest:f17; op1val:0x39a3e098724d83a1; op2val:0x40767848cf5259e6; op3val:0x39b2c200ae7f2a1e; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f17, f27, f25, f3, 0x2, 0, x16, 552, x17, x15, 368, x18)

inst_24:
// rs1==f10, rs2==f15, rs3==f6, rd==f28, fs1 == 0 and fe1 == 0x39a and fm1 == 0x3e098724d83a1 and fs2 == 0 and fe2 == 0x407 and fm2 == 0x67848cf5259e6 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x2c200ae7f2a1e and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f15; op3:f6; dest:f28; op1val:0x39a3e098724d83a1; op2val:0x40767848cf5259e6; op3val:0x39b2c200ae7f2a1e; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f28, f10, f15, f6, 0x1, 0, x16, 576, x17, x15, 384, x18)

inst_25:
// rs1==f19, rs2==f9, rs3==f16, rd==f5, fs1 == 0 and fe1 == 0x39a and fm1 == 0x3e098724d83a1 and fs2 == 0 and fe2 == 0x407 and fm2 == 0x67848cf5259e6 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x2c200ae7f2a1e and rm_val == 0  
// opcode: fmadd.d ; op1:f19; op2:f9; op3:f16; dest:f5; op1val:0x39a3e098724d83a1; op2val:0x40767848cf5259e6; op3val:0x39b2c200ae7f2a1e; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f5, f19, f9, f16, 0x0, 0, x16, 600, x17, x15, 400, x18)

inst_26:
// rs1==f5, rs2==f23, rs3==f10, rd==f0, fs1 == 0 and fe1 == 0x39a and fm1 == 0x2b78566710e8f and fs2 == 0 and fe2 == 0x40f and fm2 == 0xb5ace13241177 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x5838754c8fa60 and rm_val == 4  
// opcode: fmadd.d ; op1:f5; op2:f23; op3:f10; dest:f0; op1val:0x39a2b78566710e8f; op2val:0x40fb5ace13241177; op3val:0x39a5838754c8fa60; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f0, f5, f23, f10, 0x4, 0, x16, 624, x17, x15, 416, x18)

inst_27:
// rs1==f26, rs2==f0, rs3==f28, rd==f10, fs1 == 0 and fe1 == 0x39a and fm1 == 0x2b78566710e8f and fs2 == 0 and fe2 == 0x40f and fm2 == 0xb5ace13241177 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x5838754c8fa60 and rm_val == 3  
// opcode: fmadd.d ; op1:f26; op2:f0; op3:f28; dest:f10; op1val:0x39a2b78566710e8f; op2val:0x40fb5ace13241177; op3val:0x39a5838754c8fa60; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f10, f26, f0, f28, 0x3, 0, x16, 648, x17, x15, 432, x18)

inst_28:
// rs1==f23, rs2==f22, rs3==f11, rd==f19, fs1 == 0 and fe1 == 0x39a and fm1 == 0x2b78566710e8f and fs2 == 0 and fe2 == 0x40f and fm2 == 0xb5ace13241177 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x5838754c8fa60 and rm_val == 2  
// opcode: fmadd.d ; op1:f23; op2:f22; op3:f11; dest:f19; op1val:0x39a2b78566710e8f; op2val:0x40fb5ace13241177; op3val:0x39a5838754c8fa60; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f19, f23, f22, f11, 0x2, 0, x16, 672, x17, x15, 448, x18)

inst_29:
// rs1==f15, rs2==f13, rs3==f30, rd==f23, fs1 == 0 and fe1 == 0x39a and fm1 == 0x2b78566710e8f and fs2 == 0 and fe2 == 0x40f and fm2 == 0xb5ace13241177 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x5838754c8fa60 and rm_val == 1  
// opcode: fmadd.d ; op1:f15; op2:f13; op3:f30; dest:f23; op1val:0x39a2b78566710e8f; op2val:0x40fb5ace13241177; op3val:0x39a5838754c8fa60; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f23, f15, f13, f30, 0x1, 0, x16, 696, x17, x15, 464, x18)

inst_30:
// rs1==f17, rs2==f11, rs3==f9, rd==f14, fs1 == 0 and fe1 == 0x39a and fm1 == 0x2b78566710e8f and fs2 == 0 and fe2 == 0x40f and fm2 == 0xb5ace13241177 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x5838754c8fa60 and rm_val == 0  
// opcode: fmadd.d ; op1:f17; op2:f11; op3:f9; dest:f14; op1val:0x39a2b78566710e8f; op2val:0x40fb5ace13241177; op3val:0x39a5838754c8fa60; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f14, f17, f11, f9, 0x0, 0, x16, 720, x17, x15, 480, x18)

inst_31:
// rs1==f16, fs1 == 0 and fe1 == 0x39a and fm1 == 0xe9606a456e60e and fs2 == 0 and fe2 == 0x41d and fm2 == 0x0bd5a971a7452 and fs3 == 0 and fe3 == 0x39a and fm3 == 0xd028d30b73b82 and rm_val == 4  
// opcode: fmadd.d ; op1:f16; op2:f0; op3:f23; dest:f24; op1val:0x39ae9606a456e60e; op2val:0x41d0bd5a971a7452; op3val:0x39ad028d30b73b82; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f24, f16, f0, f23, 0x4, 0, x16, 744, x17, x15, 496, x18)

inst_32:
// rs2==f10, fs1 == 0 and fe1 == 0x39a and fm1 == 0xe9606a456e60e and fs2 == 0 and fe2 == 0x41d and fm2 == 0x0bd5a971a7452 and fs3 == 0 and fe3 == 0x39a and fm3 == 0xd028d30b73b82 and rm_val == 3  
// opcode: fmadd.d ; op1:f13; op2:f10; op3:f26; dest:f5; op1val:0x39ae9606a456e60e; op2val:0x41d0bd5a971a7452; op3val:0x39ad028d30b73b82; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f5, f13, f10, f26, 0x3, 0, x16, 768, x17, x15, 512, x18)

inst_33:
// rs3==f19, fs1 == 0 and fe1 == 0x39a and fm1 == 0xe9606a456e60e and fs2 == 0 and fe2 == 0x41d and fm2 == 0x0bd5a971a7452 and fs3 == 0 and fe3 == 0x39a and fm3 == 0xd028d30b73b82 and rm_val == 2  
// opcode: fmadd.d ; op1:f24; op2:f8; op3:f19; dest:f14; op1val:0x39ae9606a456e60e; op2val:0x41d0bd5a971a7452; op3val:0x39ad028d30b73b82; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f14, f24, f8, f19, 0x2, 0, x16, 792, x17, x15, 528, x18)

inst_34:
// rd==f16, fs1 == 0 and fe1 == 0x39a and fm1 == 0xe9606a456e60e and fs2 == 0 and fe2 == 0x41d and fm2 == 0x0bd5a971a7452 and fs3 == 0 and fe3 == 0x39a and fm3 == 0xd028d30b73b82 and rm_val == 1  
// opcode: fmadd.d ; op1:f20; op2:f30; op3:f7; dest:f16; op1val:0x39ae9606a456e60e; op2val:0x41d0bd5a971a7452; op3val:0x39ad028d30b73b82; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f16, f20, f30, f7, 0x1, 0, x16, 816, x17, x15, 544, x18)

inst_35:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xe9606a456e60e and fs2 == 0 and fe2 == 0x41d and fm2 == 0x0bd5a971a7452 and fs3 == 0 and fe3 == 0x39a and fm3 == 0xd028d30b73b82 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39ae9606a456e60e; op2val:0x41d0bd5a971a7452; op3val:0x39ad028d30b73b82; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 560, x18)

inst_36:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x38279a7e437f6 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x5485a1301ce00 and fs3 == 0 and fe3 == 0x398 and fm3 == 0xa27593ab37361 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b38279a7e437f6; op2val:0xbfc5485a1301ce00; op3val:0x398a27593ab37361; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 576, x18)

inst_37:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x38279a7e437f6 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x5485a1301ce00 and fs3 == 0 and fe3 == 0x398 and fm3 == 0xa27593ab37361 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b38279a7e437f6; op2val:0xbfc5485a1301ce00; op3val:0x398a27593ab37361; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 592, x18)

inst_38:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x38279a7e437f6 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x5485a1301ce00 and fs3 == 0 and fe3 == 0x398 and fm3 == 0xa27593ab37361 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b38279a7e437f6; op2val:0xbfc5485a1301ce00; op3val:0x398a27593ab37361; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 608, x18)

inst_39:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x38279a7e437f6 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x5485a1301ce00 and fs3 == 0 and fe3 == 0x398 and fm3 == 0xa27593ab37361 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b38279a7e437f6; op2val:0xbfc5485a1301ce00; op3val:0x398a27593ab37361; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 624, x18)

inst_40:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x38279a7e437f6 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x5485a1301ce00 and fs3 == 0 and fe3 == 0x398 and fm3 == 0xa27593ab37361 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b38279a7e437f6; op2val:0xbfc5485a1301ce00; op3val:0x398a27593ab37361; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 640, x18)

inst_41:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0xcb3de38d2af33 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x5f019cdd5390a and fs3 == 0 and fe3 == 0x39b and fm3 == 0x3e585862dd141 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x399cb3de38d2af33; op2val:0xc005f019cdd5390a; op3val:0x39b3e585862dd141; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 656, x18)

inst_42:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0xcb3de38d2af33 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x5f019cdd5390a and fs3 == 0 and fe3 == 0x39b and fm3 == 0x3e585862dd141 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x399cb3de38d2af33; op2val:0xc005f019cdd5390a; op3val:0x39b3e585862dd141; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 672, x18)

inst_43:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0xcb3de38d2af33 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x5f019cdd5390a and fs3 == 0 and fe3 == 0x39b and fm3 == 0x3e585862dd141 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x399cb3de38d2af33; op2val:0xc005f019cdd5390a; op3val:0x39b3e585862dd141; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 688, x18)

inst_44:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0xcb3de38d2af33 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x5f019cdd5390a and fs3 == 0 and fe3 == 0x39b and fm3 == 0x3e585862dd141 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x399cb3de38d2af33; op2val:0xc005f019cdd5390a; op3val:0x39b3e585862dd141; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 704, x18)

inst_45:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0xcb3de38d2af33 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x5f019cdd5390a and fs3 == 0 and fe3 == 0x39b and fm3 == 0x3e585862dd141 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x399cb3de38d2af33; op2val:0xc005f019cdd5390a; op3val:0x39b3e585862dd141; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 720, x18)

inst_46:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xef2417c41b624 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xb4e3aa2d86754 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x0049aab588052 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39aef2417c41b624; op2val:0xbfeb4e3aa2d86754; op3val:0x39b0049aab588052; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 736, x18)

inst_47:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xef2417c41b624 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xb4e3aa2d86754 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x0049aab588052 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39aef2417c41b624; op2val:0xbfeb4e3aa2d86754; op3val:0x39b0049aab588052; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 752, x18)

inst_48:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xef2417c41b624 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xb4e3aa2d86754 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x0049aab588052 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39aef2417c41b624; op2val:0xbfeb4e3aa2d86754; op3val:0x39b0049aab588052; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 768, x18)

inst_49:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xef2417c41b624 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xb4e3aa2d86754 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x0049aab588052 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39aef2417c41b624; op2val:0xbfeb4e3aa2d86754; op3val:0x39b0049aab588052; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 784, x18)

inst_50:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xef2417c41b624 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xb4e3aa2d86754 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x0049aab588052 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39aef2417c41b624; op2val:0xbfeb4e3aa2d86754; op3val:0x39b0049aab588052; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 800, x18)

inst_51:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xdca7693fa12c9 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x87f49ce452d65 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x2634da905cb63 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39adca7693fa12c9; op2val:0x40087f49ce452d65; op3val:0x39b2634da905cb63; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 816, x18)

inst_52:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xdca7693fa12c9 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x87f49ce452d65 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x2634da905cb63 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39adca7693fa12c9; op2val:0x40087f49ce452d65; op3val:0x39b2634da905cb63; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 832, x18)

inst_53:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xdca7693fa12c9 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x87f49ce452d65 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x2634da905cb63 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39adca7693fa12c9; op2val:0x40087f49ce452d65; op3val:0x39b2634da905cb63; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 848, x18)

inst_54:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xdca7693fa12c9 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x87f49ce452d65 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x2634da905cb63 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39adca7693fa12c9; op2val:0x40087f49ce452d65; op3val:0x39b2634da905cb63; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 864, x18)

inst_55:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xdca7693fa12c9 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x87f49ce452d65 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x2634da905cb63 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39adca7693fa12c9; op2val:0x40087f49ce452d65; op3val:0x39b2634da905cb63; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 880, x18)

inst_56:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x21fb04d7b4cb7 and fs2 == 0 and fe2 == 0x406 and fm2 == 0x8a96ce44f8024 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x0290397edd944 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b21fb04d7b4cb7; op2val:0x4068a96ce44f8024; op3val:0x39b0290397edd944; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 896, x18)

inst_57:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x21fb04d7b4cb7 and fs2 == 0 and fe2 == 0x406 and fm2 == 0x8a96ce44f8024 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x0290397edd944 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b21fb04d7b4cb7; op2val:0x4068a96ce44f8024; op3val:0x39b0290397edd944; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 912, x18)

inst_58:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x21fb04d7b4cb7 and fs2 == 0 and fe2 == 0x406 and fm2 == 0x8a96ce44f8024 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x0290397edd944 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b21fb04d7b4cb7; op2val:0x4068a96ce44f8024; op3val:0x39b0290397edd944; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 928, x18)

inst_59:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x21fb04d7b4cb7 and fs2 == 0 and fe2 == 0x406 and fm2 == 0x8a96ce44f8024 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x0290397edd944 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b21fb04d7b4cb7; op2val:0x4068a96ce44f8024; op3val:0x39b0290397edd944; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 944, x18)

inst_60:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x21fb04d7b4cb7 and fs2 == 0 and fe2 == 0x406 and fm2 == 0x8a96ce44f8024 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x0290397edd944 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b21fb04d7b4cb7; op2val:0x4068a96ce44f8024; op3val:0x39b0290397edd944; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 960, x18)

inst_61:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xb5c3297b4b89a and fs2 == 0 and fe2 == 0x40f and fm2 == 0x2b699c6bac2c2 and fs3 == 0 and fe3 == 0x398 and fm3 == 0xd817bbc10b60c and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39ab5c3297b4b89a; op2val:0x40f2b699c6bac2c2; op3val:0x398d817bbc10b60c; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 976, x18)

inst_62:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xb5c3297b4b89a and fs2 == 0 and fe2 == 0x40f and fm2 == 0x2b699c6bac2c2 and fs3 == 0 and fe3 == 0x398 and fm3 == 0xd817bbc10b60c and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39ab5c3297b4b89a; op2val:0x40f2b699c6bac2c2; op3val:0x398d817bbc10b60c; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 992, x18)

inst_63:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xb5c3297b4b89a and fs2 == 0 and fe2 == 0x40f and fm2 == 0x2b699c6bac2c2 and fs3 == 0 and fe3 == 0x398 and fm3 == 0xd817bbc10b60c and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39ab5c3297b4b89a; op2val:0x40f2b699c6bac2c2; op3val:0x398d817bbc10b60c; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 1008, x18)

inst_64:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xb5c3297b4b89a and fs2 == 0 and fe2 == 0x40f and fm2 == 0x2b699c6bac2c2 and fs3 == 0 and fe3 == 0x398 and fm3 == 0xd817bbc10b60c and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39ab5c3297b4b89a; op2val:0x40f2b699c6bac2c2; op3val:0x398d817bbc10b60c; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 1024, x18)

inst_65:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xb5c3297b4b89a and fs2 == 0 and fe2 == 0x40f and fm2 == 0x2b699c6bac2c2 and fs3 == 0 and fe3 == 0x398 and fm3 == 0xd817bbc10b60c and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39ab5c3297b4b89a; op2val:0x40f2b699c6bac2c2; op3val:0x398d817bbc10b60c; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1040, x18)

inst_66:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x4b277a3d78b96 and fs2 == 0 and fe2 == 0x41d and fm2 == 0x8bcdb324bebf8 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x441762863bd7c and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a4b277a3d78b96; op2val:0x41d8bcdb324bebf8; op3val:0x39b441762863bd7c; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 1056, x18)

inst_67:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x4b277a3d78b96 and fs2 == 0 and fe2 == 0x41d and fm2 == 0x8bcdb324bebf8 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x441762863bd7c and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a4b277a3d78b96; op2val:0x41d8bcdb324bebf8; op3val:0x39b441762863bd7c; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 1072, x18)

inst_68:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x4b277a3d78b96 and fs2 == 0 and fe2 == 0x41d and fm2 == 0x8bcdb324bebf8 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x441762863bd7c and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a4b277a3d78b96; op2val:0x41d8bcdb324bebf8; op3val:0x39b441762863bd7c; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 1088, x18)

inst_69:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x4b277a3d78b96 and fs2 == 0 and fe2 == 0x41d and fm2 == 0x8bcdb324bebf8 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x441762863bd7c and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a4b277a3d78b96; op2val:0x41d8bcdb324bebf8; op3val:0x39b441762863bd7c; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 1104, x18)

inst_70:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x4b277a3d78b96 and fs2 == 0 and fe2 == 0x41d and fm2 == 0x8bcdb324bebf8 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x441762863bd7c and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a4b277a3d78b96; op2val:0x41d8bcdb324bebf8; op3val:0x39b441762863bd7c; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1120, x18)

inst_71:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0xa60f4558bba7f and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xaa944fc0f6c3c and fs3 == 0 and fe3 == 0x398 and fm3 == 0x62e30037fb4cd and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x399a60f4558bba7f; op2val:0xbfdaa944fc0f6c3c; op3val:0x39862e30037fb4cd; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 1136, x18)

inst_72:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0xa60f4558bba7f and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xaa944fc0f6c3c and fs3 == 0 and fe3 == 0x398 and fm3 == 0x62e30037fb4cd and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x399a60f4558bba7f; op2val:0xbfdaa944fc0f6c3c; op3val:0x39862e30037fb4cd; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 1152, x18)

inst_73:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0xa60f4558bba7f and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xaa944fc0f6c3c and fs3 == 0 and fe3 == 0x398 and fm3 == 0x62e30037fb4cd and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x399a60f4558bba7f; op2val:0xbfdaa944fc0f6c3c; op3val:0x39862e30037fb4cd; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 1168, x18)

inst_74:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0xa60f4558bba7f and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xaa944fc0f6c3c and fs3 == 0 and fe3 == 0x398 and fm3 == 0x62e30037fb4cd and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x399a60f4558bba7f; op2val:0xbfdaa944fc0f6c3c; op3val:0x39862e30037fb4cd; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 1184, x18)

inst_75:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0xa60f4558bba7f and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xaa944fc0f6c3c and fs3 == 0 and fe3 == 0x398 and fm3 == 0x62e30037fb4cd and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x399a60f4558bba7f; op2val:0xbfdaa944fc0f6c3c; op3val:0x39862e30037fb4cd; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1200, x18)

inst_76:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x328175f6f27a7 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0xc4b935ffb5f5c and fs3 == 0 and fe3 == 0x395 and fm3 == 0xef834e8f93d95 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x399328175f6f27a7; op2val:0xbfac4b935ffb5f5c; op3val:0x395ef834e8f93d95; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 1216, x18)

inst_77:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x328175f6f27a7 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0xc4b935ffb5f5c and fs3 == 0 and fe3 == 0x395 and fm3 == 0xef834e8f93d95 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x399328175f6f27a7; op2val:0xbfac4b935ffb5f5c; op3val:0x395ef834e8f93d95; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 1232, x18)

inst_78:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x328175f6f27a7 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0xc4b935ffb5f5c and fs3 == 0 and fe3 == 0x395 and fm3 == 0xef834e8f93d95 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x399328175f6f27a7; op2val:0xbfac4b935ffb5f5c; op3val:0x395ef834e8f93d95; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 1248, x18)

inst_79:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x328175f6f27a7 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0xc4b935ffb5f5c and fs3 == 0 and fe3 == 0x395 and fm3 == 0xef834e8f93d95 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x399328175f6f27a7; op2val:0xbfac4b935ffb5f5c; op3val:0x395ef834e8f93d95; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 1264, x18)

inst_80:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x328175f6f27a7 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0xc4b935ffb5f5c and fs3 == 0 and fe3 == 0x395 and fm3 == 0xef834e8f93d95 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x399328175f6f27a7; op2val:0xbfac4b935ffb5f5c; op3val:0x395ef834e8f93d95; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1280, x18)

inst_81:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x553ba996686f1 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x9ab36131b4858 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x6bcac20aae8b9 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a553ba996686f1; op2val:0xbfe9ab36131b4858; op3val:0x39a6bcac20aae8b9; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 1296, x18)

inst_82:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x553ba996686f1 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x9ab36131b4858 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x6bcac20aae8b9 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a553ba996686f1; op2val:0xbfe9ab36131b4858; op3val:0x39a6bcac20aae8b9; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 1312, x18)

inst_83:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x553ba996686f1 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x9ab36131b4858 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x6bcac20aae8b9 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a553ba996686f1; op2val:0xbfe9ab36131b4858; op3val:0x39a6bcac20aae8b9; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 1328, x18)

inst_84:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x553ba996686f1 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x9ab36131b4858 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x6bcac20aae8b9 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a553ba996686f1; op2val:0xbfe9ab36131b4858; op3val:0x39a6bcac20aae8b9; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 1344, x18)
addi x16,x16,2040

inst_85:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x553ba996686f1 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x9ab36131b4858 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x6bcac20aae8b9 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a553ba996686f1; op2val:0xbfe9ab36131b4858; op3val:0x39a6bcac20aae8b9; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 1360, x18)

inst_86:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0xed499e45bcd24 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x7d3b6768d9788 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x2166f83814469 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x399ed499e45bcd24; op2val:0x4017d3b6768d9788; op3val:0x39b2166f83814469; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 1376, x18)

inst_87:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0xed499e45bcd24 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x7d3b6768d9788 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x2166f83814469 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x399ed499e45bcd24; op2val:0x4017d3b6768d9788; op3val:0x39b2166f83814469; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 1392, x18)

inst_88:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0xed499e45bcd24 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x7d3b6768d9788 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x2166f83814469 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x399ed499e45bcd24; op2val:0x4017d3b6768d9788; op3val:0x39b2166f83814469; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 1408, x18)

inst_89:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0xed499e45bcd24 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x7d3b6768d9788 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x2166f83814469 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x399ed499e45bcd24; op2val:0x4017d3b6768d9788; op3val:0x39b2166f83814469; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 1424, x18)

inst_90:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0xed499e45bcd24 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x7d3b6768d9788 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x2166f83814469 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x399ed499e45bcd24; op2val:0x4017d3b6768d9788; op3val:0x39b2166f83814469; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 1440, x18)

inst_91:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x2dbbbdf85e1fb and fs2 == 0 and fe2 == 0x407 and fm2 == 0x7c3f8dfbb3a21 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x9d6430df3895a and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a2dbbbdf85e1fb; op2val:0x4077c3f8dfbb3a21; op3val:0x3999d6430df3895a; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 1456, x18)

inst_92:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x2dbbbdf85e1fb and fs2 == 0 and fe2 == 0x407 and fm2 == 0x7c3f8dfbb3a21 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x9d6430df3895a and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a2dbbbdf85e1fb; op2val:0x4077c3f8dfbb3a21; op3val:0x3999d6430df3895a; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 1472, x18)

inst_93:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x2dbbbdf85e1fb and fs2 == 0 and fe2 == 0x407 and fm2 == 0x7c3f8dfbb3a21 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x9d6430df3895a and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a2dbbbdf85e1fb; op2val:0x4077c3f8dfbb3a21; op3val:0x3999d6430df3895a; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 1488, x18)

inst_94:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x2dbbbdf85e1fb and fs2 == 0 and fe2 == 0x407 and fm2 == 0x7c3f8dfbb3a21 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x9d6430df3895a and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a2dbbbdf85e1fb; op2val:0x4077c3f8dfbb3a21; op3val:0x3999d6430df3895a; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 1504, x18)

inst_95:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x2dbbbdf85e1fb and fs2 == 0 and fe2 == 0x407 and fm2 == 0x7c3f8dfbb3a21 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x9d6430df3895a and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a2dbbbdf85e1fb; op2val:0x4077c3f8dfbb3a21; op3val:0x3999d6430df3895a; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 1520, x18)

inst_96:
// fs1 == 0 and fe1 == 0x396 and fm1 == 0x750f3fabf4677 and fs2 == 0 and fe2 == 0x413 and fm2 == 0x5f57da03cf336 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x1d00f1dc80e1e and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x396750f3fabf4677; op2val:0x4135f57da03cf336; op3val:0x3961d00f1dc80e1e; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 1536, x18)

inst_97:
// fs1 == 0 and fe1 == 0x396 and fm1 == 0x750f3fabf4677 and fs2 == 0 and fe2 == 0x413 and fm2 == 0x5f57da03cf336 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x1d00f1dc80e1e and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x396750f3fabf4677; op2val:0x4135f57da03cf336; op3val:0x3961d00f1dc80e1e; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 1552, x18)

inst_98:
// fs1 == 0 and fe1 == 0x396 and fm1 == 0x750f3fabf4677 and fs2 == 0 and fe2 == 0x413 and fm2 == 0x5f57da03cf336 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x1d00f1dc80e1e and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x396750f3fabf4677; op2val:0x4135f57da03cf336; op3val:0x3961d00f1dc80e1e; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 1568, x18)

inst_99:
// fs1 == 0 and fe1 == 0x396 and fm1 == 0x750f3fabf4677 and fs2 == 0 and fe2 == 0x413 and fm2 == 0x5f57da03cf336 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x1d00f1dc80e1e and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x396750f3fabf4677; op2val:0x4135f57da03cf336; op3val:0x3961d00f1dc80e1e; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 1584, x18)

inst_100:
// fs1 == 0 and fe1 == 0x396 and fm1 == 0x750f3fabf4677 and fs2 == 0 and fe2 == 0x413 and fm2 == 0x5f57da03cf336 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x1d00f1dc80e1e and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x396750f3fabf4677; op2val:0x4135f57da03cf336; op3val:0x3961d00f1dc80e1e; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 1600, x18)

inst_101:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x20ba1488c74a2 and fs2 == 0 and fe2 == 0x41d and fm2 == 0xc5f721cb706a2 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x5c32469e46a31 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a20ba1488c74a2; op2val:0x41dc5f721cb706a2; op3val:0x3995c32469e46a31; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 1616, x18)

inst_102:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x20ba1488c74a2 and fs2 == 0 and fe2 == 0x41d and fm2 == 0xc5f721cb706a2 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x5c32469e46a31 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a20ba1488c74a2; op2val:0x41dc5f721cb706a2; op3val:0x3995c32469e46a31; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 1632, x18)

inst_103:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x20ba1488c74a2 and fs2 == 0 and fe2 == 0x41d and fm2 == 0xc5f721cb706a2 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x5c32469e46a31 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a20ba1488c74a2; op2val:0x41dc5f721cb706a2; op3val:0x3995c32469e46a31; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 1648, x18)

inst_104:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x20ba1488c74a2 and fs2 == 0 and fe2 == 0x41d and fm2 == 0xc5f721cb706a2 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x5c32469e46a31 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a20ba1488c74a2; op2val:0x41dc5f721cb706a2; op3val:0x3995c32469e46a31; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 1664, x18)

inst_105:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x20ba1488c74a2 and fs2 == 0 and fe2 == 0x41d and fm2 == 0xc5f721cb706a2 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x5c32469e46a31 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a20ba1488c74a2; op2val:0x41dc5f721cb706a2; op3val:0x3995c32469e46a31; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1680, x18)

inst_106:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x3418b0aba6add and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x24cbc7a6ed8a8 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x6130ebb7253ff and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b3418b0aba6add; op2val:0xbfe24cbc7a6ed8a8; op3val:0x39a6130ebb7253ff; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 1696, x18)

inst_107:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x3418b0aba6add and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x24cbc7a6ed8a8 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x6130ebb7253ff and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b3418b0aba6add; op2val:0xbfe24cbc7a6ed8a8; op3val:0x39a6130ebb7253ff; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 1712, x18)

inst_108:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x3418b0aba6add and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x24cbc7a6ed8a8 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x6130ebb7253ff and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b3418b0aba6add; op2val:0xbfe24cbc7a6ed8a8; op3val:0x39a6130ebb7253ff; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 1728, x18)

inst_109:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x3418b0aba6add and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x24cbc7a6ed8a8 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x6130ebb7253ff and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b3418b0aba6add; op2val:0xbfe24cbc7a6ed8a8; op3val:0x39a6130ebb7253ff; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 1744, x18)

inst_110:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x3418b0aba6add and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x24cbc7a6ed8a8 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x6130ebb7253ff and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b3418b0aba6add; op2val:0xbfe24cbc7a6ed8a8; op3val:0x39a6130ebb7253ff; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1760, x18)

inst_111:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xd542fcca1c01a and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x5c69b27f83a24 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x42d66038a2fcf and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39ad542fcca1c01a; op2val:0xbff5c69b27f83a24; op3val:0x39b42d66038a2fcf; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 1776, x18)

inst_112:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xd542fcca1c01a and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x5c69b27f83a24 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x42d66038a2fcf and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39ad542fcca1c01a; op2val:0xbff5c69b27f83a24; op3val:0x39b42d66038a2fcf; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 1792, x18)

inst_113:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xd542fcca1c01a and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x5c69b27f83a24 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x42d66038a2fcf and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39ad542fcca1c01a; op2val:0xbff5c69b27f83a24; op3val:0x39b42d66038a2fcf; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 1808, x18)

inst_114:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xd542fcca1c01a and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x5c69b27f83a24 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x42d66038a2fcf and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39ad542fcca1c01a; op2val:0xbff5c69b27f83a24; op3val:0x39b42d66038a2fcf; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 1824, x18)

inst_115:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xd542fcca1c01a and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x5c69b27f83a24 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x42d66038a2fcf and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39ad542fcca1c01a; op2val:0xbff5c69b27f83a24; op3val:0x39b42d66038a2fcf; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1840, x18)

inst_116:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x17854491e5cd7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x2edcffb124d27 and fs3 == 0 and fe3 == 0x399 and fm3 == 0xfed560cf3e7cf and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a17854491e5cd7; op2val:0xbfe2edcffb124d27; op3val:0x399fed560cf3e7cf; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 1856, x18)

inst_117:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x17854491e5cd7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x2edcffb124d27 and fs3 == 0 and fe3 == 0x399 and fm3 == 0xfed560cf3e7cf and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a17854491e5cd7; op2val:0xbfe2edcffb124d27; op3val:0x399fed560cf3e7cf; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 1872, x18)

inst_118:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x17854491e5cd7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x2edcffb124d27 and fs3 == 0 and fe3 == 0x399 and fm3 == 0xfed560cf3e7cf and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a17854491e5cd7; op2val:0xbfe2edcffb124d27; op3val:0x399fed560cf3e7cf; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 1888, x18)

inst_119:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x17854491e5cd7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x2edcffb124d27 and fs3 == 0 and fe3 == 0x399 and fm3 == 0xfed560cf3e7cf and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a17854491e5cd7; op2val:0xbfe2edcffb124d27; op3val:0x399fed560cf3e7cf; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 1904, x18)

inst_120:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x17854491e5cd7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x2edcffb124d27 and fs3 == 0 and fe3 == 0x399 and fm3 == 0xfed560cf3e7cf and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a17854491e5cd7; op2val:0xbfe2edcffb124d27; op3val:0x399fed560cf3e7cf; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1920, x18)

inst_121:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x793914d36b26e and fs2 == 0 and fe2 == 0x401 and fm2 == 0x4a066a0a938ed and fs3 == 0 and fe3 == 0x398 and fm3 == 0x9b2f78fc2a2d6 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a793914d36b26e; op2val:0x4014a066a0a938ed; op3val:0x3989b2f78fc2a2d6; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 1936, x18)

inst_122:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x793914d36b26e and fs2 == 0 and fe2 == 0x401 and fm2 == 0x4a066a0a938ed and fs3 == 0 and fe3 == 0x398 and fm3 == 0x9b2f78fc2a2d6 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a793914d36b26e; op2val:0x4014a066a0a938ed; op3val:0x3989b2f78fc2a2d6; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 1952, x18)

inst_123:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x793914d36b26e and fs2 == 0 and fe2 == 0x401 and fm2 == 0x4a066a0a938ed and fs3 == 0 and fe3 == 0x398 and fm3 == 0x9b2f78fc2a2d6 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a793914d36b26e; op2val:0x4014a066a0a938ed; op3val:0x3989b2f78fc2a2d6; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 1968, x18)

inst_124:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x793914d36b26e and fs2 == 0 and fe2 == 0x401 and fm2 == 0x4a066a0a938ed and fs3 == 0 and fe3 == 0x398 and fm3 == 0x9b2f78fc2a2d6 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a793914d36b26e; op2val:0x4014a066a0a938ed; op3val:0x3989b2f78fc2a2d6; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 1984, x18)

inst_125:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x793914d36b26e and fs2 == 0 and fe2 == 0x401 and fm2 == 0x4a066a0a938ed and fs3 == 0 and fe3 == 0x398 and fm3 == 0x9b2f78fc2a2d6 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a793914d36b26e; op2val:0x4014a066a0a938ed; op3val:0x3989b2f78fc2a2d6; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 2000, x18)

inst_126:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x8947be5d6873c and fs2 == 0 and fe2 == 0x407 and fm2 == 0x234253a7619a2 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x89d63b4599df3 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a8947be5d6873c; op2val:0x407234253a7619a2; op3val:0x39a89d63b4599df3; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_2)

inst_127:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x8947be5d6873c and fs2 == 0 and fe2 == 0x407 and fm2 == 0x234253a7619a2 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x89d63b4599df3 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a8947be5d6873c; op2val:0x407234253a7619a2; op3val:0x39a89d63b4599df3; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 0, x18)

inst_128:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x8947be5d6873c and fs2 == 0 and fe2 == 0x407 and fm2 == 0x234253a7619a2 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x89d63b4599df3 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a8947be5d6873c; op2val:0x407234253a7619a2; op3val:0x39a89d63b4599df3; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 16, x18)

inst_129:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x8947be5d6873c and fs2 == 0 and fe2 == 0x407 and fm2 == 0x234253a7619a2 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x89d63b4599df3 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a8947be5d6873c; op2val:0x407234253a7619a2; op3val:0x39a89d63b4599df3; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 32, x18)

inst_130:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x8947be5d6873c and fs2 == 0 and fe2 == 0x407 and fm2 == 0x234253a7619a2 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x89d63b4599df3 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a8947be5d6873c; op2val:0x407234253a7619a2; op3val:0x39a89d63b4599df3; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 48, x18)

inst_131:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xb2ae0cc66e7fd and fs2 == 0 and fe2 == 0x40f and fm2 == 0x2d88f8d729a64 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x8ffbe6c7e0560 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39ab2ae0cc66e7fd; op2val:0x40f2d88f8d729a64; op3val:0x3998ffbe6c7e0560; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 64, x18)

inst_132:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xb2ae0cc66e7fd and fs2 == 0 and fe2 == 0x40f and fm2 == 0x2d88f8d729a64 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x8ffbe6c7e0560 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39ab2ae0cc66e7fd; op2val:0x40f2d88f8d729a64; op3val:0x3998ffbe6c7e0560; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 80, x18)

inst_133:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xb2ae0cc66e7fd and fs2 == 0 and fe2 == 0x40f and fm2 == 0x2d88f8d729a64 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x8ffbe6c7e0560 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39ab2ae0cc66e7fd; op2val:0x40f2d88f8d729a64; op3val:0x3998ffbe6c7e0560; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 96, x18)

inst_134:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xb2ae0cc66e7fd and fs2 == 0 and fe2 == 0x40f and fm2 == 0x2d88f8d729a64 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x8ffbe6c7e0560 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39ab2ae0cc66e7fd; op2val:0x40f2d88f8d729a64; op3val:0x3998ffbe6c7e0560; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 112, x18)

inst_135:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xb2ae0cc66e7fd and fs2 == 0 and fe2 == 0x40f and fm2 == 0x2d88f8d729a64 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x8ffbe6c7e0560 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39ab2ae0cc66e7fd; op2val:0x40f2d88f8d729a64; op3val:0x3998ffbe6c7e0560; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 128, x18)

inst_136:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x0f2287fcf470c and fs2 == 0 and fe2 == 0x41c and fm2 == 0xe36b7e7d0dc99 and fs3 == 0 and fe3 == 0x39a and fm3 == 0xddabfd3b9dd04 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b0f2287fcf470c; op2val:0x41ce36b7e7d0dc99; op3val:0x39addabfd3b9dd04; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 144, x18)

inst_137:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x0f2287fcf470c and fs2 == 0 and fe2 == 0x41c and fm2 == 0xe36b7e7d0dc99 and fs3 == 0 and fe3 == 0x39a and fm3 == 0xddabfd3b9dd04 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b0f2287fcf470c; op2val:0x41ce36b7e7d0dc99; op3val:0x39addabfd3b9dd04; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 160, x18)

inst_138:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x0f2287fcf470c and fs2 == 0 and fe2 == 0x41c and fm2 == 0xe36b7e7d0dc99 and fs3 == 0 and fe3 == 0x39a and fm3 == 0xddabfd3b9dd04 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b0f2287fcf470c; op2val:0x41ce36b7e7d0dc99; op3val:0x39addabfd3b9dd04; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 176, x18)

inst_139:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x0f2287fcf470c and fs2 == 0 and fe2 == 0x41c and fm2 == 0xe36b7e7d0dc99 and fs3 == 0 and fe3 == 0x39a and fm3 == 0xddabfd3b9dd04 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b0f2287fcf470c; op2val:0x41ce36b7e7d0dc99; op3val:0x39addabfd3b9dd04; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 192, x18)

inst_140:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x0f2287fcf470c and fs2 == 0 and fe2 == 0x41c and fm2 == 0xe36b7e7d0dc99 and fs3 == 0 and fe3 == 0x39a and fm3 == 0xddabfd3b9dd04 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b0f2287fcf470c; op2val:0x41ce36b7e7d0dc99; op3val:0x39addabfd3b9dd04; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 208, x18)

inst_141:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x70762f226b782 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x9e72fa59afaac and fs3 == 0 and fe3 == 0x39b and fm3 == 0x2aaa0fc3296fd and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a70762f226b782; op2val:0xbff9e72fa59afaac; op3val:0x39b2aaa0fc3296fd; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 224, x18)

inst_142:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x70762f226b782 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x9e72fa59afaac and fs3 == 0 and fe3 == 0x39b and fm3 == 0x2aaa0fc3296fd and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a70762f226b782; op2val:0xbff9e72fa59afaac; op3val:0x39b2aaa0fc3296fd; valaddr_reg:x16; val_offset:1368; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1368, x17, x15, 240, x18)

inst_143:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x70762f226b782 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x9e72fa59afaac and fs3 == 0 and fe3 == 0x39b and fm3 == 0x2aaa0fc3296fd and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a70762f226b782; op2val:0xbff9e72fa59afaac; op3val:0x39b2aaa0fc3296fd; valaddr_reg:x16; val_offset:1392; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1392, x17, x15, 256, x18)

inst_144:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x70762f226b782 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x9e72fa59afaac and fs3 == 0 and fe3 == 0x39b and fm3 == 0x2aaa0fc3296fd and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a70762f226b782; op2val:0xbff9e72fa59afaac; op3val:0x39b2aaa0fc3296fd; valaddr_reg:x16; val_offset:1416; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1416, x17, x15, 272, x18)

inst_145:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x23f8335dcbd7f and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x00336ade1c517 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x2b36c8d4a60c8 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b23f8335dcbd7f; op2val:0xbfe00336ade1c517; op3val:0x39a2b36c8d4a60c8; valaddr_reg:x16; val_offset:1440; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1440, x17, x15, 288, x18)

inst_146:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x23f8335dcbd7f and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x00336ade1c517 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x2b36c8d4a60c8 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b23f8335dcbd7f; op2val:0xbfe00336ade1c517; op3val:0x39a2b36c8d4a60c8; valaddr_reg:x16; val_offset:1464; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1464, x17, x15, 304, x18)

inst_147:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0xcb6b7d892c724 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x0d19d99aca709 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x1e8062836913b and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x399cb6b7d892c724; op2val:0xc000d19d99aca709; op3val:0x39b1e8062836913b; valaddr_reg:x16; val_offset:1488; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1488, x17, x15, 320, x18)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_fp:
.dword 0x39b0f2287fcf470c
.dword 0x41ce36b7e7d0dc99
.dword 0x41ce36b7e7d0dc99
.dword 0x39a70762f226b782
.dword 0x39a70762f226b782
.dword 0x39a70762f226b782
.dword 0x39a70762f226b782
.dword 0xbff9e72fa59afaac
.dword 0x39b2aaa0fc3296fd
.dword 0x39a70762f226b782
.dword 0xbff9e72fa59afaac
.dword 0x39a70762f226b782
.dword 0x39a70762f226b782
.dword 0x39a70762f226b782
.dword 0x39b2aaa0fc3296fd
.dword 0x39a70762f226b782
.dword 0xbff9e72fa59afaac
.dword 0xbff9e72fa59afaac
.dword 0x39b23f8335dcbd7f
.dword 0x39b23f8335dcbd7f
.dword 0x39b23f8335dcbd7f
.dword 0x39b23f8335dcbd7f
.dword 0xbfe00336ade1c517
.dword 0x39a2b36c8d4a60c8
.dword 0x39b23f8335dcbd7f
.dword 0xbfe00336ade1c517
.dword 0x39a2b36c8d4a60c8
.dword 0x39b23f8335dcbd7f
.dword 0xbfe00336ade1c517
.dword 0x39b23f8335dcbd7f
.dword 0x39b23f8335dcbd7f
.dword 0xbfe00336ade1c517
.dword 0x39a2b36c8d4a60c8
.dword 0x399cb6b7d892c724
.dword 0x399cb6b7d892c724
.dword 0x39b1e8062836913b
.dword 0x399cb6b7d892c724
.dword 0xc000d19d99aca709
.dword 0x39b1e8062836913b
.dword 0x399cb6b7d892c724
.dword 0xc000d19d99aca709
.dword 0x39b1e8062836913b
.dword 0x399cb6b7d892c724
.dword 0xc000d19d99aca709
.dword 0x39b1e8062836913b
.dword 0x399cb6b7d892c724
.dword 0xc000d19d99aca709
.dword 0x39b1e8062836913b
.dword 0x39a45107ec7c7f1b
.dword 0x40128f64d94c431e
.dword 0x39b0dd85a18a0163
.dword 0x39a45107ec7c7f1b
.dword 0x40128f64d94c431e
.dword 0x39b0dd85a18a0163
.dword 0x39a45107ec7c7f1b
.dword 0x40128f64d94c431e
.dword 0x39b0dd85a18a0163
.dword 0x39a45107ec7c7f1b
.dword 0x40128f64d94c431e
.dword 0x39b0dd85a18a0163
.dword 0x39a45107ec7c7f1b
.dword 0x40128f64d94c431e
.dword 0x39b0dd85a18a0163
.dword 0x39a3e098724d83a1
.dword 0x40767848cf5259e6
.dword 0x39b2c200ae7f2a1e
.dword 0x39a3e098724d83a1
.dword 0x40767848cf5259e6
.dword 0x39b2c200ae7f2a1e
.dword 0x39a3e098724d83a1
.dword 0x40767848cf5259e6
.dword 0x39b2c200ae7f2a1e
.dword 0x39a3e098724d83a1
.dword 0x40767848cf5259e6
.dword 0x39b2c200ae7f2a1e
.dword 0x39a3e098724d83a1
.dword 0x40767848cf5259e6
.dword 0x39b2c200ae7f2a1e
.dword 0x39a2b78566710e8f
.dword 0x40fb5ace13241177
.dword 0x39a5838754c8fa60
.dword 0x39a2b78566710e8f
.dword 0x40fb5ace13241177
.dword 0x39a5838754c8fa60
.dword 0x39a2b78566710e8f
.dword 0x40fb5ace13241177
.dword 0x39a5838754c8fa60
.dword 0x39a2b78566710e8f
.dword 0x40fb5ace13241177
.dword 0x39a5838754c8fa60
.dword 0x39a2b78566710e8f
.dword 0x40fb5ace13241177
.dword 0x39a5838754c8fa60
.dword 0x39ae9606a456e60e
.dword 0x41d0bd5a971a7452
.dword 0x39ad028d30b73b82
.dword 0x39ae9606a456e60e
.dword 0x41d0bd5a971a7452
.dword 0x39ad028d30b73b82
.dword 0x39ae9606a456e60e
.dword 0x41d0bd5a971a7452
.dword 0x39ad028d30b73b82
.dword 0x39ae9606a456e60e
.dword 0x41d0bd5a971a7452
.dword 0x39ad028d30b73b82
.dword 0x39ae9606a456e60e
.dword 0x41d0bd5a971a7452
.dword 0x39ad028d30b73b82
.dword 0x39b38279a7e437f6
.dword 0xbfc5485a1301ce00
.dword 0x398a27593ab37361
.dword 0x39b38279a7e437f6
.dword 0xbfc5485a1301ce00
.dword 0x398a27593ab37361
.dword 0x39b38279a7e437f6
.dword 0xbfc5485a1301ce00
.dword 0x398a27593ab37361
.dword 0x39b38279a7e437f6
.dword 0xbfc5485a1301ce00
.dword 0x398a27593ab37361
.dword 0x39b38279a7e437f6
.dword 0xbfc5485a1301ce00
.dword 0x398a27593ab37361
.dword 0x399cb3de38d2af33
.dword 0xc005f019cdd5390a
.dword 0x39b3e585862dd141
.dword 0x399cb3de38d2af33
.dword 0xc005f019cdd5390a
.dword 0x39b3e585862dd141
.dword 0x399cb3de38d2af33
.dword 0xc005f019cdd5390a
.dword 0x39b3e585862dd141
.dword 0x399cb3de38d2af33
.dword 0xc005f019cdd5390a
.dword 0x39b3e585862dd141
.dword 0x399cb3de38d2af33
.dword 0xc005f019cdd5390a
.dword 0x39b3e585862dd141
.dword 0x39aef2417c41b624
.dword 0xbfeb4e3aa2d86754
.dword 0x39b0049aab588052
.dword 0x39aef2417c41b624
.dword 0xbfeb4e3aa2d86754
.dword 0x39b0049aab588052
.dword 0x39aef2417c41b624
.dword 0xbfeb4e3aa2d86754
.dword 0x39b0049aab588052
.dword 0x39aef2417c41b624
.dword 0xbfeb4e3aa2d86754
.dword 0x39b0049aab588052
.dword 0x39aef2417c41b624
.dword 0xbfeb4e3aa2d86754
.dword 0x39b0049aab588052
.dword 0x39adca7693fa12c9
.dword 0x40087f49ce452d65
.dword 0x39b2634da905cb63
.dword 0x39adca7693fa12c9
.dword 0x40087f49ce452d65
.dword 0x39b2634da905cb63
.dword 0x39adca7693fa12c9
.dword 0x40087f49ce452d65
.dword 0x39b2634da905cb63
.dword 0x39adca7693fa12c9
.dword 0x40087f49ce452d65
.dword 0x39b2634da905cb63
.dword 0x39adca7693fa12c9
.dword 0x40087f49ce452d65
.dword 0x39b2634da905cb63
.dword 0x39b21fb04d7b4cb7
.dword 0x4068a96ce44f8024
.dword 0x39b0290397edd944
.dword 0x39b21fb04d7b4cb7
.dword 0x4068a96ce44f8024
.dword 0x39b0290397edd944
.dword 0x39b21fb04d7b4cb7
.dword 0x4068a96ce44f8024
.dword 0x39b0290397edd944
.dword 0x39b21fb04d7b4cb7
.dword 0x4068a96ce44f8024
.dword 0x39b0290397edd944
.dword 0x39b21fb04d7b4cb7
.dword 0x4068a96ce44f8024
.dword 0x39b0290397edd944
.dword 0x39ab5c3297b4b89a
.dword 0x40f2b699c6bac2c2
.dword 0x398d817bbc10b60c
.dword 0x39ab5c3297b4b89a
.dword 0x40f2b699c6bac2c2
.dword 0x398d817bbc10b60c
.dword 0x39ab5c3297b4b89a
.dword 0x40f2b699c6bac2c2
.dword 0x398d817bbc10b60c
.dword 0x39ab5c3297b4b89a
.dword 0x40f2b699c6bac2c2
.dword 0x398d817bbc10b60c
.dword 0x39ab5c3297b4b89a
.dword 0x40f2b699c6bac2c2
.dword 0x398d817bbc10b60c
.dword 0x39a4b277a3d78b96
.dword 0x41d8bcdb324bebf8
.dword 0x39b441762863bd7c
.dword 0x39a4b277a3d78b96
.dword 0x41d8bcdb324bebf8
.dword 0x39b441762863bd7c
.dword 0x39a4b277a3d78b96
.dword 0x41d8bcdb324bebf8
.dword 0x39b441762863bd7c
.dword 0x39a4b277a3d78b96
.dword 0x41d8bcdb324bebf8
.dword 0x39b441762863bd7c
.dword 0x39a4b277a3d78b96
.dword 0x41d8bcdb324bebf8
.dword 0x39b441762863bd7c
.dword 0x399a60f4558bba7f
.dword 0xbfdaa944fc0f6c3c
.dword 0x39862e30037fb4cd
.dword 0x399a60f4558bba7f
.dword 0xbfdaa944fc0f6c3c
.dword 0x39862e30037fb4cd
.dword 0x399a60f4558bba7f
.dword 0xbfdaa944fc0f6c3c
.dword 0x39862e30037fb4cd
.dword 0x399a60f4558bba7f
.dword 0xbfdaa944fc0f6c3c
.dword 0x39862e30037fb4cd
.dword 0x399a60f4558bba7f
.dword 0xbfdaa944fc0f6c3c
.dword 0x39862e30037fb4cd
.dword 0x399328175f6f27a7
.dword 0xbfac4b935ffb5f5c
.dword 0x395ef834e8f93d95
.dword 0x399328175f6f27a7
.dword 0xbfac4b935ffb5f5c
.dword 0x395ef834e8f93d95
.dword 0x399328175f6f27a7
.dword 0xbfac4b935ffb5f5c
.dword 0x395ef834e8f93d95
.dword 0x399328175f6f27a7
.dword 0xbfac4b935ffb5f5c
.dword 0x395ef834e8f93d95
.dword 0x399328175f6f27a7
.dword 0xbfac4b935ffb5f5c
.dword 0x395ef834e8f93d95
.dword 0x39a553ba996686f1
.dword 0xbfe9ab36131b4858
.dword 0x39a6bcac20aae8b9
.dword 0x39a553ba996686f1
.dword 0xbfe9ab36131b4858
.dword 0x39a6bcac20aae8b9
.dword 0x39a553ba996686f1
.dword 0xbfe9ab36131b4858
.dword 0x39a6bcac20aae8b9
.dword 0x39a553ba996686f1
.dword 0xbfe9ab36131b4858
.dword 0x39a6bcac20aae8b9
.dword 0x39a553ba996686f1
.dword 0xbfe9ab36131b4858
.dword 0x39a6bcac20aae8b9
.dword 0x399ed499e45bcd24
.dword 0x4017d3b6768d9788
.dword 0x39b2166f83814469
.dword 0x399ed499e45bcd24
.dword 0x4017d3b6768d9788
.dword 0x39b2166f83814469
.dword 0x399ed499e45bcd24
.dword 0x4017d3b6768d9788
.dword 0x39b2166f83814469
.dword 0x399ed499e45bcd24
.dword 0x4017d3b6768d9788
.dword 0x39b2166f83814469
.dword 0x399ed499e45bcd24
.dword 0x4017d3b6768d9788
.dword 0x39b2166f83814469
.dword 0x39a2dbbbdf85e1fb
.dword 0x4077c3f8dfbb3a21
.dword 0x3999d6430df3895a
.dword 0x39a2dbbbdf85e1fb
.dword 0x4077c3f8dfbb3a21
.dword 0x3999d6430df3895a
.dword 0x39a2dbbbdf85e1fb
.dword 0x4077c3f8dfbb3a21
.dword 0x3999d6430df3895a
.dword 0x39a2dbbbdf85e1fb
.dword 0x4077c3f8dfbb3a21
.dword 0x3999d6430df3895a
.dword 0x39a2dbbbdf85e1fb
.dword 0x4077c3f8dfbb3a21
.dword 0x3999d6430df3895a
.dword 0x396750f3fabf4677
.dword 0x4135f57da03cf336
.dword 0x3961d00f1dc80e1e
.dword 0x396750f3fabf4677
.dword 0x4135f57da03cf336
.dword 0x3961d00f1dc80e1e
.dword 0x396750f3fabf4677
.dword 0x4135f57da03cf336
.dword 0x3961d00f1dc80e1e
.dword 0x396750f3fabf4677
.dword 0x4135f57da03cf336
.dword 0x3961d00f1dc80e1e
.dword 0x396750f3fabf4677
.dword 0x4135f57da03cf336
.dword 0x3961d00f1dc80e1e
.dword 0x39a20ba1488c74a2
.dword 0x41dc5f721cb706a2
.dword 0x3995c32469e46a31
.dword 0x39a20ba1488c74a2
.dword 0x41dc5f721cb706a2
.dword 0x3995c32469e46a31
.dword 0x39a20ba1488c74a2
.dword 0x41dc5f721cb706a2
.dword 0x3995c32469e46a31
.dword 0x39a20ba1488c74a2
.dword 0x41dc5f721cb706a2
.dword 0x3995c32469e46a31
.dword 0x39a20ba1488c74a2
.dword 0x41dc5f721cb706a2
.dword 0x3995c32469e46a31
.dword 0x39b3418b0aba6add
.dword 0xbfe24cbc7a6ed8a8
.dword 0x39a6130ebb7253ff
.dword 0x39b3418b0aba6add
.dword 0xbfe24cbc7a6ed8a8
.dword 0x39a6130ebb7253ff
.dword 0x39b3418b0aba6add
.dword 0xbfe24cbc7a6ed8a8
.dword 0x39a6130ebb7253ff
.dword 0x39b3418b0aba6add
.dword 0xbfe24cbc7a6ed8a8
.dword 0x39a6130ebb7253ff
.dword 0x39b3418b0aba6add
.dword 0xbfe24cbc7a6ed8a8
.dword 0x39a6130ebb7253ff
.dword 0x39ad542fcca1c01a
.dword 0xbff5c69b27f83a24
.dword 0x39b42d66038a2fcf
.dword 0x39ad542fcca1c01a
.dword 0xbff5c69b27f83a24
.dword 0x39b42d66038a2fcf
.dword 0x39ad542fcca1c01a
.dword 0xbff5c69b27f83a24
.dword 0x39b42d66038a2fcf
.dword 0x39ad542fcca1c01a
.dword 0xbff5c69b27f83a24
.dword 0x39b42d66038a2fcf
.dword 0x39ad542fcca1c01a
.dword 0xbff5c69b27f83a24
.dword 0x39b42d66038a2fcf
.dword 0x39a17854491e5cd7
.dword 0xbfe2edcffb124d27
.dword 0x399fed560cf3e7cf
.dword 0x39a17854491e5cd7
.dword 0xbfe2edcffb124d27
.dword 0x399fed560cf3e7cf
.dword 0x39a17854491e5cd7
.dword 0xbfe2edcffb124d27
.dword 0x399fed560cf3e7cf
.dword 0x39a17854491e5cd7
.dword 0xbfe2edcffb124d27
.dword 0x399fed560cf3e7cf
.dword 0x39a17854491e5cd7
.dword 0xbfe2edcffb124d27
.dword 0x399fed560cf3e7cf
.dword 0x39a793914d36b26e
.dword 0x4014a066a0a938ed
.dword 0x3989b2f78fc2a2d6
.dword 0x39a793914d36b26e
.dword 0x4014a066a0a938ed
.dword 0x3989b2f78fc2a2d6
.dword 0x39a793914d36b26e
.dword 0x4014a066a0a938ed
.dword 0x3989b2f78fc2a2d6
.dword 0x39a793914d36b26e
.dword 0x4014a066a0a938ed
.dword 0x3989b2f78fc2a2d6
.dword 0x39a793914d36b26e
.dword 0x4014a066a0a938ed
.dword 0x3989b2f78fc2a2d6
.dword 0x39a8947be5d6873c
.dword 0x407234253a7619a2
.dword 0x39a89d63b4599df3
.dword 0x39a8947be5d6873c
.dword 0x407234253a7619a2
.dword 0x39a89d63b4599df3
.dword 0x39a8947be5d6873c
.dword 0x407234253a7619a2
.dword 0x39a89d63b4599df3
.dword 0x39a8947be5d6873c
.dword 0x407234253a7619a2
.dword 0x39a89d63b4599df3
.dword 0x39a8947be5d6873c
.dword 0x407234253a7619a2
.dword 0x39a89d63b4599df3
.dword 0x39ab2ae0cc66e7fd
.dword 0x40f2d88f8d729a64
.dword 0x3998ffbe6c7e0560
.dword 0x39ab2ae0cc66e7fd
.dword 0x40f2d88f8d729a64
.dword 0x3998ffbe6c7e0560
.dword 0x39ab2ae0cc66e7fd
.dword 0x40f2d88f8d729a64
.dword 0x3998ffbe6c7e0560
.dword 0x39ab2ae0cc66e7fd
.dword 0x40f2d88f8d729a64
.dword 0x3998ffbe6c7e0560
.dword 0x39ab2ae0cc66e7fd
.dword 0x40f2d88f8d729a64
.dword 0x3998ffbe6c7e0560
.dword 0x39b0f2287fcf470c
.dword 0x41ce36b7e7d0dc99
.dword 0x39addabfd3b9dd04
.dword 0x39b0f2287fcf470c
.dword 0x41ce36b7e7d0dc99
.dword 0x39addabfd3b9dd04
.dword 0x39b0f2287fcf470c
.dword 0x41ce36b7e7d0dc99
.dword 0x39addabfd3b9dd04
.dword 0x39b0f2287fcf470c
.dword 0x41ce36b7e7d0dc99
.dword 0x39addabfd3b9dd04
.dword 0x39b0f2287fcf470c
.dword 0x41ce36b7e7d0dc99
.dword 0x39addabfd3b9dd04
.dword 0x39a70762f226b782
.dword 0xbff9e72fa59afaac
.dword 0x39b2aaa0fc3296fd
.dword 0x39a70762f226b782
.dword 0xbff9e72fa59afaac
.dword 0x39b2aaa0fc3296fd
.dword 0x39a70762f226b782
.dword 0xbff9e72fa59afaac
.dword 0x39b2aaa0fc3296fd
.dword 0x39a70762f226b782
.dword 0xbff9e72fa59afaac
.dword 0x39b2aaa0fc3296fd
.dword 0x39b23f8335dcbd7f
.dword 0xbfe00336ade1c517
.dword 0x39a2b36c8d4a60c8
.dword 0x39b23f8335dcbd7f
.dword 0xbfe00336ade1c517
.dword 0x39a2b36c8d4a60c8
.dword 0x399cb6b7d892c724
.dword 0xc000d19d99aca709
.dword 0x39b1e8062836913b
RVTEST_DATA_END

RVMODEL_DATA_BEGIN


signature_x15_0:
    .fill 0*(XLEN/32),4,0xdeadbeef


signature_x15_1:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_2:
    .fill 42*(XLEN/32),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*(XLEN/32),4,0xdeadbeef

#endif

RVMODEL_DATA_END
