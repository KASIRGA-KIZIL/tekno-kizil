
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.5.6
// timestamp : Mon Sep 20 11:14:00 2021 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/compliance_fd/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /scratch/compliance_fd/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV64D/rv64d_fmsub1.cgf \
 \
//                  -- xlen 64  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2021. IIT Madras. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.d instruction of the RISC-V FD extension for the fmsub_b6 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV64IFD")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*64.*);check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",d_fmsub_b6)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x16,test_fp)
RVTEST_SIGBASE(x15,signature_x15_1)

inst_0:
// rs1 == rd != rs2 and rs1 == rd != rs3 and rs3 != rs2, rs1==f4, rs2==f15, rs3==f0, rd==f4, fs1 == 0 and fe1 == 0x397 and fm1 == 0x595dba319e6b7 and fs2 == 1 and fe2 == 0x468 and fm2 == 0xd4b3ce824f4e6 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x04a5c09e2e627 and rm_val == 0  
// opcode: fmsub.d ; op1:f4; op2:f15; op3:f0; dest:f4; op1val:0x397595dba319e6b7; op2val:0xc68d4b3ce824f4e6; op3val:0x39a04a5c09e2e627; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f4, f4, f15, f0, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_1:
// rs1 == rs3 != rs2 and rs1 == rs3 != rd and rd != rs2, rs1==f23, rs2==f29, rs3==f23, rd==f6, fs1 == 0 and fe1 == 0x39a and fm1 == 0x9a9f802f19511 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xc13c11507e273 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x66aa07ced57ce and rm_val == 4  
// opcode: fmsub.d ; op1:f23; op2:f29; op3:f23; dest:f6; op1val:0x39a9a9f802f19511; op2val:0x3fdc13c11507e273; op3val:0x39a9a9f802f19511; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f6, f23, f29, f23, 0x4, 0, x16, 24, x17, x15, 16, x18)

inst_2:
// rs2 == rs3 != rs1 and rs2 == rs3 != rd and rd != rs1, rs1==f20, rs2==f8, rs3==f8, rd==f7, fs1 == 0 and fe1 == 0x39a and fm1 == 0x9a9f802f19511 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xc13c11507e273 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x66aa07ced57ce and rm_val == 3  
// opcode: fmsub.d ; op1:f20; op2:f8; op3:f8; dest:f7; op1val:0x39a9a9f802f19511; op2val:0x3fdc13c11507e273; op3val:0x3fdc13c11507e273; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f7, f20, f8, f8, 0x3, 0, x16, 48, x17, x15, 32, x18)

inst_3:
// rs1 != rs2 and rs1 != rd and rs1 != rs3 and rs2 != rs3 and rs2 != rd and rs3 != rd, rs1==f12, rs2==f28, rs3==f16, rd==f8, fs1 == 0 and fe1 == 0x39a and fm1 == 0x9a9f802f19511 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xc13c11507e273 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x66aa07ced57ce and rm_val == 2  
// opcode: fmsub.d ; op1:f12; op2:f28; op3:f16; dest:f8; op1val:0x39a9a9f802f19511; op2val:0x3fdc13c11507e273; op3val:0x39966aa07ced57ce; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f8, f12, f28, f16, 0x2, 0, x16, 72, x17, x15, 48, x18)

inst_4:
// rs2 == rd != rs1 and rs2 == rd != rs3 and rs3 != rs1, rs1==f26, rs2==f12, rs3==f15, rd==f12, fs1 == 0 and fe1 == 0x39a and fm1 == 0x9a9f802f19511 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xc13c11507e273 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x66aa07ced57ce and rm_val == 1  
// opcode: fmsub.d ; op1:f26; op2:f12; op3:f15; dest:f12; op1val:0x39a9a9f802f19511; op2val:0x3fdc13c11507e273; op3val:0x39966aa07ced57ce; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f12, f26, f12, f15, 0x1, 0, x16, 96, x17, x15, 64, x18)

inst_5:
// rs1 == rs2 != rs3 and rs1 == rs2 != rd and rd != rs3, rs1==f14, rs2==f14, rs3==f20, rd==f27, fs1 == 0 and fe1 == 0x39a and fm1 == 0x9a9f802f19511 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xc13c11507e273 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x66aa07ced57ce and rm_val == 0  
// opcode: fmsub.d ; op1:f14; op2:f14; op3:f20; dest:f27; op1val:0x39a9a9f802f19511; op2val:0x39a9a9f802f19511; op3val:0x39966aa07ced57ce; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f27, f14, f14, f20, 0x0, 0, x16, 120, x17, x15, 80, x18)

inst_6:
// rs1 == rd == rs3 != rs2, rs1==f18, rs2==f0, rs3==f18, rd==f18, fs1 == 0 and fe1 == 0x39a and fm1 == 0x0beb46d781d82 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x08c8c5747da51 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x0714dd3e7e73e and rm_val == 4  
// opcode: fmsub.d ; op1:f18; op2:f0; op3:f18; dest:f18; op1val:0x39a0beb46d781d82; op2val:0x3fe08c8c5747da51; op3val:0x39a0beb46d781d82; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f18, f18, f0, f18, 0x4, 0, x16, 144, x17, x15, 96, x18)

inst_7:
// rd == rs2 == rs3 != rs1, rs1==f21, rs2==f17, rs3==f17, rd==f17, fs1 == 0 and fe1 == 0x39a and fm1 == 0x0beb46d781d82 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x08c8c5747da51 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x0714dd3e7e73e and rm_val == 3  
// opcode: fmsub.d ; op1:f21; op2:f17; op3:f17; dest:f17; op1val:0x39a0beb46d781d82; op2val:0x3fe08c8c5747da51; op3val:0x3fe08c8c5747da51; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f17, f21, f17, f17, 0x3, 0, x16, 168, x17, x15, 112, x18)

inst_8:
// rs1 == rs2 == rs3 == rd, rs1==f5, rs2==f5, rs3==f5, rd==f5, fs1 == 0 and fe1 == 0x39a and fm1 == 0x0beb46d781d82 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x08c8c5747da51 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x0714dd3e7e73e and rm_val == 2  
// opcode: fmsub.d ; op1:f5; op2:f5; op3:f5; dest:f5; op1val:0x39a0beb46d781d82; op2val:0x39a0beb46d781d82; op3val:0x39a0beb46d781d82; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f5, f5, f5, f5, 0x2, 0, x16, 192, x17, x15, 128, x18)

inst_9:
// rs1 == rs2 == rs3 != rd, rs1==f3, rs2==f3, rs3==f3, rd==f31, fs1 == 0 and fe1 == 0x39a and fm1 == 0x0beb46d781d82 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x08c8c5747da51 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x0714dd3e7e73e and rm_val == 1  
// opcode: fmsub.d ; op1:f3; op2:f3; op3:f3; dest:f31; op1val:0x39a0beb46d781d82; op2val:0x39a0beb46d781d82; op3val:0x39a0beb46d781d82; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f31, f3, f3, f3, 0x1, 0, x16, 216, x17, x15, 144, x18)

inst_10:
// rs1 == rs2 == rd != rs3, rs1==f16, rs2==f16, rs3==f12, rd==f16, fs1 == 0 and fe1 == 0x39a and fm1 == 0x0beb46d781d82 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x08c8c5747da51 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x0714dd3e7e73e and rm_val == 0  
// opcode: fmsub.d ; op1:f16; op2:f16; op3:f12; dest:f16; op1val:0x39a0beb46d781d82; op2val:0x39a0beb46d781d82; op3val:0x3990714dd3e7e73e; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f16, f16, f16, f12, 0x0, 0, x16, 240, x17, x15, 160, x18)

inst_11:
// rs3 == rd != rs1 and rs3 == rd != rs2 and rs2 != rs1, rs1==f6, rs2==f7, rs3==f9, rd==f9, fs1 == 0 and fe1 == 0x39b and fm1 == 0x43a2affc895c3 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x574f5bd5cf21d and fs3 == 0 and fe3 == 0x398 and fm3 == 0xfbbce1c784c51 and rm_val == 4  
// opcode: fmsub.d ; op1:f6; op2:f7; op3:f9; dest:f9; op1val:0x39b43a2affc895c3; op2val:0x3fd574f5bd5cf21d; op3val:0x398fbbce1c784c51; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f9, f6, f7, f9, 0x4, 0, x16, 264, x17, x15, 176, x18)

inst_12:
// rs1==f22, rs2==f24, rs3==f13, rd==f30, fs1 == 0 and fe1 == 0x39b and fm1 == 0x43a2affc895c3 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x574f5bd5cf21d and fs3 == 0 and fe3 == 0x398 and fm3 == 0xfbbce1c784c51 and rm_val == 3  
// opcode: fmsub.d ; op1:f22; op2:f24; op3:f13; dest:f30; op1val:0x39b43a2affc895c3; op2val:0x3fd574f5bd5cf21d; op3val:0x398fbbce1c784c51; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f30, f22, f24, f13, 0x3, 0, x16, 288, x17, x15, 192, x18)

inst_13:
// rs1==f10, rs2==f1, rs3==f11, rd==f26, fs1 == 0 and fe1 == 0x39b and fm1 == 0x43a2affc895c3 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x574f5bd5cf21d and fs3 == 0 and fe3 == 0x398 and fm3 == 0xfbbce1c784c51 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f1; op3:f11; dest:f26; op1val:0x39b43a2affc895c3; op2val:0x3fd574f5bd5cf21d; op3val:0x398fbbce1c784c51; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f26, f10, f1, f11, 0x2, 0, x16, 312, x17, x15, 208, x18)

inst_14:
// rs1==f0, rs2==f9, rs3==f14, rd==f29, fs1 == 0 and fe1 == 0x39b and fm1 == 0x43a2affc895c3 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x574f5bd5cf21d and fs3 == 0 and fe3 == 0x398 and fm3 == 0xfbbce1c784c51 and rm_val == 1  
// opcode: fmsub.d ; op1:f0; op2:f9; op3:f14; dest:f29; op1val:0x39b43a2affc895c3; op2val:0x3fd574f5bd5cf21d; op3val:0x398fbbce1c784c51; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f29, f0, f9, f14, 0x1, 0, x16, 336, x17, x15, 224, x18)

inst_15:
// rs1==f7, rs2==f19, rs3==f22, rd==f2, fs1 == 0 and fe1 == 0x39b and fm1 == 0x43a2affc895c3 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x574f5bd5cf21d and fs3 == 0 and fe3 == 0x398 and fm3 == 0xfbbce1c784c51 and rm_val == 0  
// opcode: fmsub.d ; op1:f7; op2:f19; op3:f22; dest:f2; op1val:0x39b43a2affc895c3; op2val:0x3fd574f5bd5cf21d; op3val:0x398fbbce1c784c51; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f2, f7, f19, f22, 0x0, 0, x16, 360, x17, x15, 240, x18)

inst_16:
// rs1==f15, rs2==f21, rs3==f1, rd==f0, fs1 == 0 and fe1 == 0x39a and fm1 == 0x31da307c8502d and fs2 == 0 and fe2 == 0x401 and fm2 == 0xdb1be11df76bf and fs3 == 0 and fe3 == 0x399 and fm3 == 0xbd093775ceed4 and rm_val == 4  
// opcode: fmsub.d ; op1:f15; op2:f21; op3:f1; dest:f0; op1val:0x39a31da307c8502d; op2val:0x401db1be11df76bf; op3val:0x399bd093775ceed4; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f0, f15, f21, f1, 0x4, 0, x16, 384, x17, x15, 256, x18)

inst_17:
// rs1==f24, rs2==f11, rs3==f29, rd==f14, fs1 == 0 and fe1 == 0x39a and fm1 == 0x31da307c8502d and fs2 == 0 and fe2 == 0x401 and fm2 == 0xdb1be11df76bf and fs3 == 0 and fe3 == 0x399 and fm3 == 0xbd093775ceed4 and rm_val == 3  
// opcode: fmsub.d ; op1:f24; op2:f11; op3:f29; dest:f14; op1val:0x39a31da307c8502d; op2val:0x401db1be11df76bf; op3val:0x399bd093775ceed4; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f14, f24, f11, f29, 0x3, 0, x16, 408, x17, x15, 272, x18)

inst_18:
// rs1==f9, rs2==f18, rs3==f19, rd==f10, fs1 == 0 and fe1 == 0x39a and fm1 == 0x31da307c8502d and fs2 == 0 and fe2 == 0x401 and fm2 == 0xdb1be11df76bf and fs3 == 0 and fe3 == 0x399 and fm3 == 0xbd093775ceed4 and rm_val == 2  
// opcode: fmsub.d ; op1:f9; op2:f18; op3:f19; dest:f10; op1val:0x39a31da307c8502d; op2val:0x401db1be11df76bf; op3val:0x399bd093775ceed4; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f10, f9, f18, f19, 0x2, 0, x16, 432, x17, x15, 288, x18)

inst_19:
// rs1==f1, rs2==f22, rs3==f6, rd==f3, fs1 == 0 and fe1 == 0x39a and fm1 == 0x31da307c8502d and fs2 == 0 and fe2 == 0x401 and fm2 == 0xdb1be11df76bf and fs3 == 0 and fe3 == 0x399 and fm3 == 0xbd093775ceed4 and rm_val == 1  
// opcode: fmsub.d ; op1:f1; op2:f22; op3:f6; dest:f3; op1val:0x39a31da307c8502d; op2val:0x401db1be11df76bf; op3val:0x399bd093775ceed4; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f3, f1, f22, f6, 0x1, 0, x16, 456, x17, x15, 304, x18)

inst_20:
// rs1==f17, rs2==f25, rs3==f2, rd==f13, fs1 == 0 and fe1 == 0x39a and fm1 == 0x31da307c8502d and fs2 == 0 and fe2 == 0x401 and fm2 == 0xdb1be11df76bf and fs3 == 0 and fe3 == 0x399 and fm3 == 0xbd093775ceed4 and rm_val == 0  
// opcode: fmsub.d ; op1:f17; op2:f25; op3:f2; dest:f13; op1val:0x39a31da307c8502d; op2val:0x401db1be11df76bf; op3val:0x399bd093775ceed4; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f17, f25, f2, 0x0, 0, x16, 480, x17, x15, 320, x18)

inst_21:
// rs1==f30, rs2==f20, rs3==f21, rd==f25, fs1 == 0 and fe1 == 0x399 and fm1 == 0x6c05eb40c4ba6 and fs2 == 0 and fe2 == 0x408 and fm2 == 0x3cb4025d5a1a9 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x5afd48389c633 and rm_val == 4  
// opcode: fmsub.d ; op1:f30; op2:f20; op3:f21; dest:f25; op1val:0x3996c05eb40c4ba6; op2val:0x4083cb4025d5a1a9; op3val:0x39a5afd48389c633; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f25, f30, f20, f21, 0x4, 0, x16, 504, x17, x15, 336, x18)

inst_22:
// rs1==f8, rs2==f27, rs3==f25, rd==f22, fs1 == 0 and fe1 == 0x399 and fm1 == 0x6c05eb40c4ba6 and fs2 == 0 and fe2 == 0x408 and fm2 == 0x3cb4025d5a1a9 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x5afd48389c633 and rm_val == 3  
// opcode: fmsub.d ; op1:f8; op2:f27; op3:f25; dest:f22; op1val:0x3996c05eb40c4ba6; op2val:0x4083cb4025d5a1a9; op3val:0x39a5afd48389c633; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f22, f8, f27, f25, 0x3, 0, x16, 528, x17, x15, 352, x18)

inst_23:
// rs1==f27, rs2==f30, rs3==f28, rd==f21, fs1 == 0 and fe1 == 0x399 and fm1 == 0x6c05eb40c4ba6 and fs2 == 0 and fe2 == 0x408 and fm2 == 0x3cb4025d5a1a9 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x5afd48389c633 and rm_val == 2  
// opcode: fmsub.d ; op1:f27; op2:f30; op3:f28; dest:f21; op1val:0x3996c05eb40c4ba6; op2val:0x4083cb4025d5a1a9; op3val:0x39a5afd48389c633; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f21, f27, f30, f28, 0x2, 0, x16, 552, x17, x15, 368, x18)

inst_24:
// rs1==f31, rs2==f13, rs3==f10, rd==f11, fs1 == 0 and fe1 == 0x399 and fm1 == 0x6c05eb40c4ba6 and fs2 == 0 and fe2 == 0x408 and fm2 == 0x3cb4025d5a1a9 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x5afd48389c633 and rm_val == 1  
// opcode: fmsub.d ; op1:f31; op2:f13; op3:f10; dest:f11; op1val:0x3996c05eb40c4ba6; op2val:0x4083cb4025d5a1a9; op3val:0x39a5afd48389c633; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f11, f31, f13, f10, 0x1, 0, x16, 576, x17, x15, 384, x18)

inst_25:
// rs1==f29, rs2==f6, rs3==f27, rd==f19, fs1 == 0 and fe1 == 0x399 and fm1 == 0x6c05eb40c4ba6 and fs2 == 0 and fe2 == 0x408 and fm2 == 0x3cb4025d5a1a9 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x5afd48389c633 and rm_val == 0  
// opcode: fmsub.d ; op1:f29; op2:f6; op3:f27; dest:f19; op1val:0x3996c05eb40c4ba6; op2val:0x4083cb4025d5a1a9; op3val:0x39a5afd48389c633; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f19, f29, f6, f27, 0x0, 0, x16, 600, x17, x15, 400, x18)

inst_26:
// rs1==f11, rs2==f31, rs3==f30, rd==f28, fs1 == 0 and fe1 == 0x396 and fm1 == 0xe108feec3fd98 and fs2 == 0 and fe2 == 0x413 and fm2 == 0x107b7ba6ddb6d and fs3 == 0 and fe3 == 0x39a and fm3 == 0x96865e46e1628 and rm_val == 4  
// opcode: fmsub.d ; op1:f11; op2:f31; op3:f30; dest:f28; op1val:0x396e108feec3fd98; op2val:0x413107b7ba6ddb6d; op3val:0x39a96865e46e1628; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f28, f11, f31, f30, 0x4, 0, x16, 624, x17, x15, 416, x18)

inst_27:
// rs1==f13, rs2==f2, rs3==f4, rd==f20, fs1 == 0 and fe1 == 0x396 and fm1 == 0xe108feec3fd98 and fs2 == 0 and fe2 == 0x413 and fm2 == 0x107b7ba6ddb6d and fs3 == 0 and fe3 == 0x39a and fm3 == 0x96865e46e1628 and rm_val == 3  
// opcode: fmsub.d ; op1:f13; op2:f2; op3:f4; dest:f20; op1val:0x396e108feec3fd98; op2val:0x413107b7ba6ddb6d; op3val:0x39a96865e46e1628; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f20, f13, f2, f4, 0x3, 0, x16, 648, x17, x15, 432, x18)

inst_28:
// rs1==f28, rs2==f23, rs3==f24, rd==f15, fs1 == 0 and fe1 == 0x396 and fm1 == 0xe108feec3fd98 and fs2 == 0 and fe2 == 0x413 and fm2 == 0x107b7ba6ddb6d and fs3 == 0 and fe3 == 0x39a and fm3 == 0x96865e46e1628 and rm_val == 2  
// opcode: fmsub.d ; op1:f28; op2:f23; op3:f24; dest:f15; op1val:0x396e108feec3fd98; op2val:0x413107b7ba6ddb6d; op3val:0x39a96865e46e1628; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f15, f28, f23, f24, 0x2, 0, x16, 672, x17, x15, 448, x18)

inst_29:
// rs1==f19, rs2==f10, rs3==f7, rd==f1, fs1 == 0 and fe1 == 0x396 and fm1 == 0xe108feec3fd98 and fs2 == 0 and fe2 == 0x413 and fm2 == 0x107b7ba6ddb6d and fs3 == 0 and fe3 == 0x39a and fm3 == 0x96865e46e1628 and rm_val == 1  
// opcode: fmsub.d ; op1:f19; op2:f10; op3:f7; dest:f1; op1val:0x396e108feec3fd98; op2val:0x413107b7ba6ddb6d; op3val:0x39a96865e46e1628; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f1, f19, f10, f7, 0x1, 0, x16, 696, x17, x15, 464, x18)

inst_30:
// rs1==f25, rs2==f4, rs3==f26, rd==f23, fs1 == 0 and fe1 == 0x396 and fm1 == 0xe108feec3fd98 and fs2 == 0 and fe2 == 0x413 and fm2 == 0x107b7ba6ddb6d and fs3 == 0 and fe3 == 0x39a and fm3 == 0x96865e46e1628 and rm_val == 0  
// opcode: fmsub.d ; op1:f25; op2:f4; op3:f26; dest:f23; op1val:0x396e108feec3fd98; op2val:0x413107b7ba6ddb6d; op3val:0x39a96865e46e1628; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f23, f25, f4, f26, 0x0, 0, x16, 720, x17, x15, 480, x18)

inst_31:
// rs1==f2, rs2==f26, rs3==f31, rd==f24, fs1 == 0 and fe1 == 0x39b and fm1 == 0x07b387586d9e2 and fs2 == 0 and fe2 == 0x41c and fm2 == 0xf10c191255df5 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xc103913225855 and rm_val == 4  
// opcode: fmsub.d ; op1:f2; op2:f26; op3:f31; dest:f24; op1val:0x39b07b387586d9e2; op2val:0x41cf10c191255df5; op3val:0x396c103913225855; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f24, f2, f26, f31, 0x4, 0, x16, 744, x17, x15, 496, x18)

inst_32:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x07b387586d9e2 and fs2 == 0 and fe2 == 0x41c and fm2 == 0xf10c191255df5 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xc103913225855 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b07b387586d9e2; op2val:0x41cf10c191255df5; op3val:0x396c103913225855; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 512, x18)

inst_33:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x07b387586d9e2 and fs2 == 0 and fe2 == 0x41c and fm2 == 0xf10c191255df5 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xc103913225855 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b07b387586d9e2; op2val:0x41cf10c191255df5; op3val:0x396c103913225855; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 528, x18)

inst_34:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x07b387586d9e2 and fs2 == 0 and fe2 == 0x41c and fm2 == 0xf10c191255df5 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xc103913225855 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b07b387586d9e2; op2val:0x41cf10c191255df5; op3val:0x396c103913225855; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 544, x18)

inst_35:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x07b387586d9e2 and fs2 == 0 and fe2 == 0x41c and fm2 == 0xf10c191255df5 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xc103913225855 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b07b387586d9e2; op2val:0x41cf10c191255df5; op3val:0x396c103913225855; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 560, x18)

inst_36:
// fs1 == 0 and fe1 == 0x398 and fm1 == 0xa2cfeed793415 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xe62a026651722 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x8c0eb80d62dac and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x398a2cfeed793415; op2val:0x3ffe62a026651722; op3val:0x3998c0eb80d62dac; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 576, x18)

inst_37:
// fs1 == 0 and fe1 == 0x398 and fm1 == 0xa2cfeed793415 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xe62a026651722 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x8c0eb80d62dac and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x398a2cfeed793415; op2val:0x3ffe62a026651722; op3val:0x3998c0eb80d62dac; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 592, x18)

inst_38:
// fs1 == 0 and fe1 == 0x398 and fm1 == 0xa2cfeed793415 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xe62a026651722 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x8c0eb80d62dac and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x398a2cfeed793415; op2val:0x3ffe62a026651722; op3val:0x3998c0eb80d62dac; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 608, x18)

inst_39:
// fs1 == 0 and fe1 == 0x398 and fm1 == 0xa2cfeed793415 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xe62a026651722 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x8c0eb80d62dac and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x398a2cfeed793415; op2val:0x3ffe62a026651722; op3val:0x3998c0eb80d62dac; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 624, x18)

inst_40:
// fs1 == 0 and fe1 == 0x398 and fm1 == 0xa2cfeed793415 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xe62a026651722 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x8c0eb80d62dac and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x398a2cfeed793415; op2val:0x3ffe62a026651722; op3val:0x3998c0eb80d62dac; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 640, x18)

inst_41:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x84b76733b0607 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x79bb4d9eddb8a and fs3 == 0 and fe3 == 0x39a and fm3 == 0x17c34e456afbe and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a84b76733b0607; op2val:0x3fe79bb4d9eddb8a; op3val:0x39a17c34e456afbe; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 656, x18)

inst_42:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x84b76733b0607 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x79bb4d9eddb8a and fs3 == 0 and fe3 == 0x39a and fm3 == 0x17c34e456afbe and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a84b76733b0607; op2val:0x3fe79bb4d9eddb8a; op3val:0x39a17c34e456afbe; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 672, x18)

inst_43:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x84b76733b0607 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x79bb4d9eddb8a and fs3 == 0 and fe3 == 0x39a and fm3 == 0x17c34e456afbe and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a84b76733b0607; op2val:0x3fe79bb4d9eddb8a; op3val:0x39a17c34e456afbe; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 688, x18)

inst_44:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x84b76733b0607 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x79bb4d9eddb8a and fs3 == 0 and fe3 == 0x39a and fm3 == 0x17c34e456afbe and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a84b76733b0607; op2val:0x3fe79bb4d9eddb8a; op3val:0x39a17c34e456afbe; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 704, x18)

inst_45:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x84b76733b0607 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x79bb4d9eddb8a and fs3 == 0 and fe3 == 0x39a and fm3 == 0x17c34e456afbe and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a84b76733b0607; op2val:0x3fe79bb4d9eddb8a; op3val:0x39a17c34e456afbe; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 720, x18)

inst_46:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x49f3d964f96f0 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x165581f0ea188 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x0caa956ab3972 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a49f3d964f96f0; op2val:0x3ff165581f0ea188; op3val:0x39a0caa956ab3972; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 736, x18)

inst_47:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x49f3d964f96f0 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x165581f0ea188 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x0caa956ab3972 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a49f3d964f96f0; op2val:0x3ff165581f0ea188; op3val:0x39a0caa956ab3972; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 752, x18)

inst_48:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x49f3d964f96f0 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x165581f0ea188 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x0caa956ab3972 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a49f3d964f96f0; op2val:0x3ff165581f0ea188; op3val:0x39a0caa956ab3972; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 768, x18)

inst_49:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x49f3d964f96f0 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x165581f0ea188 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x0caa956ab3972 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a49f3d964f96f0; op2val:0x3ff165581f0ea188; op3val:0x39a0caa956ab3972; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 784, x18)

inst_50:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x49f3d964f96f0 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x165581f0ea188 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x0caa956ab3972 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a49f3d964f96f0; op2val:0x3ff165581f0ea188; op3val:0x39a0caa956ab3972; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 800, x18)

inst_51:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x1e540c6c2d7b8 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x2265e7285040b and fs3 == 0 and fe3 == 0x39b and fm3 == 0x1334bf1981380 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b1e540c6c2d7b8; op2val:0x4012265e7285040b; op3val:0x39b1334bf1981380; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 816, x18)

inst_52:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x1e540c6c2d7b8 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x2265e7285040b and fs3 == 0 and fe3 == 0x39b and fm3 == 0x1334bf1981380 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b1e540c6c2d7b8; op2val:0x4012265e7285040b; op3val:0x39b1334bf1981380; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 832, x18)

inst_53:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x1e540c6c2d7b8 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x2265e7285040b and fs3 == 0 and fe3 == 0x39b and fm3 == 0x1334bf1981380 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b1e540c6c2d7b8; op2val:0x4012265e7285040b; op3val:0x39b1334bf1981380; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 848, x18)

inst_54:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x1e540c6c2d7b8 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x2265e7285040b and fs3 == 0 and fe3 == 0x39b and fm3 == 0x1334bf1981380 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b1e540c6c2d7b8; op2val:0x4012265e7285040b; op3val:0x39b1334bf1981380; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 864, x18)

inst_55:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x1e540c6c2d7b8 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x2265e7285040b and fs3 == 0 and fe3 == 0x39b and fm3 == 0x1334bf1981380 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b1e540c6c2d7b8; op2val:0x4012265e7285040b; op3val:0x39b1334bf1981380; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 880, x18)

inst_56:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x26f1fd54e5fb5 and fs2 == 0 and fe2 == 0x406 and fm2 == 0x86f5bb59f2eb2 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x737cbf40c9df3 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b26f1fd54e5fb5; op2val:0x40686f5bb59f2eb2; op3val:0x39a737cbf40c9df3; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 896, x18)

inst_57:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x26f1fd54e5fb5 and fs2 == 0 and fe2 == 0x406 and fm2 == 0x86f5bb59f2eb2 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x737cbf40c9df3 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b26f1fd54e5fb5; op2val:0x40686f5bb59f2eb2; op3val:0x39a737cbf40c9df3; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 912, x18)

inst_58:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x26f1fd54e5fb5 and fs2 == 0 and fe2 == 0x406 and fm2 == 0x86f5bb59f2eb2 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x737cbf40c9df3 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b26f1fd54e5fb5; op2val:0x40686f5bb59f2eb2; op3val:0x39a737cbf40c9df3; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 928, x18)

inst_59:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x26f1fd54e5fb5 and fs2 == 0 and fe2 == 0x406 and fm2 == 0x86f5bb59f2eb2 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x737cbf40c9df3 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b26f1fd54e5fb5; op2val:0x40686f5bb59f2eb2; op3val:0x39a737cbf40c9df3; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 944, x18)

inst_60:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x26f1fd54e5fb5 and fs2 == 0 and fe2 == 0x406 and fm2 == 0x86f5bb59f2eb2 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x737cbf40c9df3 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b26f1fd54e5fb5; op2val:0x40686f5bb59f2eb2; op3val:0x39a737cbf40c9df3; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 960, x18)

inst_61:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x63701d585a076 and fs2 == 0 and fe2 == 0x40f and fm2 == 0x70c39d380240b and fs3 == 0 and fe3 == 0x399 and fm3 == 0x85bdc2bae0463 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a63701d585a076; op2val:0x40f70c39d380240b; op3val:0x39985bdc2bae0463; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 976, x18)

inst_62:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x63701d585a076 and fs2 == 0 and fe2 == 0x40f and fm2 == 0x70c39d380240b and fs3 == 0 and fe3 == 0x399 and fm3 == 0x85bdc2bae0463 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a63701d585a076; op2val:0x40f70c39d380240b; op3val:0x39985bdc2bae0463; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 992, x18)

inst_63:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x63701d585a076 and fs2 == 0 and fe2 == 0x40f and fm2 == 0x70c39d380240b and fs3 == 0 and fe3 == 0x399 and fm3 == 0x85bdc2bae0463 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a63701d585a076; op2val:0x40f70c39d380240b; op3val:0x39985bdc2bae0463; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 1008, x18)

inst_64:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x63701d585a076 and fs2 == 0 and fe2 == 0x40f and fm2 == 0x70c39d380240b and fs3 == 0 and fe3 == 0x399 and fm3 == 0x85bdc2bae0463 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a63701d585a076; op2val:0x40f70c39d380240b; op3val:0x39985bdc2bae0463; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 1024, x18)

inst_65:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x63701d585a076 and fs2 == 0 and fe2 == 0x40f and fm2 == 0x70c39d380240b and fs3 == 0 and fe3 == 0x399 and fm3 == 0x85bdc2bae0463 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a63701d585a076; op2val:0x40f70c39d380240b; op3val:0x39985bdc2bae0463; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1040, x18)

inst_66:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x2f4a904908b78 and fs2 == 0 and fe2 == 0x41c and fm2 == 0xb02a59bddd2aa and fs3 == 0 and fe3 == 0x39b and fm3 == 0x18dd9c9f69342 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b2f4a904908b78; op2val:0x41cb02a59bddd2aa; op3val:0x39b18dd9c9f69342; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 1056, x18)

inst_67:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x2f4a904908b78 and fs2 == 0 and fe2 == 0x41c and fm2 == 0xb02a59bddd2aa and fs3 == 0 and fe3 == 0x39b and fm3 == 0x18dd9c9f69342 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b2f4a904908b78; op2val:0x41cb02a59bddd2aa; op3val:0x39b18dd9c9f69342; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 1072, x18)

inst_68:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x2f4a904908b78 and fs2 == 0 and fe2 == 0x41c and fm2 == 0xb02a59bddd2aa and fs3 == 0 and fe3 == 0x39b and fm3 == 0x18dd9c9f69342 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b2f4a904908b78; op2val:0x41cb02a59bddd2aa; op3val:0x39b18dd9c9f69342; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 1088, x18)

inst_69:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x2f4a904908b78 and fs2 == 0 and fe2 == 0x41c and fm2 == 0xb02a59bddd2aa and fs3 == 0 and fe3 == 0x39b and fm3 == 0x18dd9c9f69342 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b2f4a904908b78; op2val:0x41cb02a59bddd2aa; op3val:0x39b18dd9c9f69342; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 1104, x18)

inst_70:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x2f4a904908b78 and fs2 == 0 and fe2 == 0x41c and fm2 == 0xb02a59bddd2aa and fs3 == 0 and fe3 == 0x39b and fm3 == 0x18dd9c9f69342 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b2f4a904908b78; op2val:0x41cb02a59bddd2aa; op3val:0x39b18dd9c9f69342; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1120, x18)

inst_71:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x336048eaa4560 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x87c5cc2b9e4ef and fs3 == 0 and fe3 == 0x397 and fm3 == 0xcfe97ae238935 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a336048eaa4560; op2val:0x3fc87c5cc2b9e4ef; op3val:0x397cfe97ae238935; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 1136, x18)

inst_72:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x336048eaa4560 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x87c5cc2b9e4ef and fs3 == 0 and fe3 == 0x397 and fm3 == 0xcfe97ae238935 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a336048eaa4560; op2val:0x3fc87c5cc2b9e4ef; op3val:0x397cfe97ae238935; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 1152, x18)

inst_73:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x336048eaa4560 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x87c5cc2b9e4ef and fs3 == 0 and fe3 == 0x397 and fm3 == 0xcfe97ae238935 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a336048eaa4560; op2val:0x3fc87c5cc2b9e4ef; op3val:0x397cfe97ae238935; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 1168, x18)

inst_74:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x336048eaa4560 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x87c5cc2b9e4ef and fs3 == 0 and fe3 == 0x397 and fm3 == 0xcfe97ae238935 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a336048eaa4560; op2val:0x3fc87c5cc2b9e4ef; op3val:0x397cfe97ae238935; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 1184, x18)

inst_75:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x336048eaa4560 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x87c5cc2b9e4ef and fs3 == 0 and fe3 == 0x397 and fm3 == 0xcfe97ae238935 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a336048eaa4560; op2val:0x3fc87c5cc2b9e4ef; op3val:0x397cfe97ae238935; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1200, x18)

inst_76:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x4861fd8b3e0f9 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x7db4ae95d05e4 and fs3 == 0 and fe3 == 0x398 and fm3 == 0xcd91d6a7290c8 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a4861fd8b3e0f9; op2val:0x3fd7db4ae95d05e4; op3val:0x398cd91d6a7290c8; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 1216, x18)

inst_77:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x4861fd8b3e0f9 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x7db4ae95d05e4 and fs3 == 0 and fe3 == 0x398 and fm3 == 0xcd91d6a7290c8 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a4861fd8b3e0f9; op2val:0x3fd7db4ae95d05e4; op3val:0x398cd91d6a7290c8; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 1232, x18)

inst_78:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x4861fd8b3e0f9 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x7db4ae95d05e4 and fs3 == 0 and fe3 == 0x398 and fm3 == 0xcd91d6a7290c8 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a4861fd8b3e0f9; op2val:0x3fd7db4ae95d05e4; op3val:0x398cd91d6a7290c8; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 1248, x18)

inst_79:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x4861fd8b3e0f9 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x7db4ae95d05e4 and fs3 == 0 and fe3 == 0x398 and fm3 == 0xcd91d6a7290c8 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a4861fd8b3e0f9; op2val:0x3fd7db4ae95d05e4; op3val:0x398cd91d6a7290c8; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 1264, x18)

inst_80:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x4861fd8b3e0f9 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x7db4ae95d05e4 and fs3 == 0 and fe3 == 0x398 and fm3 == 0xcd91d6a7290c8 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a4861fd8b3e0f9; op2val:0x3fd7db4ae95d05e4; op3val:0x398cd91d6a7290c8; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1280, x18)

inst_81:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x8938691fdcdb1 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x5676e3c35cec5 and fs3 == 0 and fe3 == 0x39a and fm3 == 0xb3f58c2f9af8a and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a8938691fdcdb1; op2val:0x3ff5676e3c35cec5; op3val:0x39ab3f58c2f9af8a; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 1296, x18)

inst_82:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x8938691fdcdb1 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x5676e3c35cec5 and fs3 == 0 and fe3 == 0x39a and fm3 == 0xb3f58c2f9af8a and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a8938691fdcdb1; op2val:0x3ff5676e3c35cec5; op3val:0x39ab3f58c2f9af8a; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 1312, x18)

inst_83:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x8938691fdcdb1 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x5676e3c35cec5 and fs3 == 0 and fe3 == 0x39a and fm3 == 0xb3f58c2f9af8a and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a8938691fdcdb1; op2val:0x3ff5676e3c35cec5; op3val:0x39ab3f58c2f9af8a; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 1328, x18)

inst_84:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x8938691fdcdb1 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x5676e3c35cec5 and fs3 == 0 and fe3 == 0x39a and fm3 == 0xb3f58c2f9af8a and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a8938691fdcdb1; op2val:0x3ff5676e3c35cec5; op3val:0x39ab3f58c2f9af8a; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 1344, x18)
addi x16,x16,2040

inst_85:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x8938691fdcdb1 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x5676e3c35cec5 and fs3 == 0 and fe3 == 0x39a and fm3 == 0xb3f58c2f9af8a and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a8938691fdcdb1; op2val:0x3ff5676e3c35cec5; op3val:0x39ab3f58c2f9af8a; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 1360, x18)

inst_86:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x1d97c18af0989 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xd78f5b3aa2195 and fs3 == 0 and fe3 == 0x397 and fm3 == 0xc24454430932e and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b1d97c18af0989; op2val:0x400d78f5b3aa2195; op3val:0x397c24454430932e; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 1376, x18)

inst_87:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x1d97c18af0989 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xd78f5b3aa2195 and fs3 == 0 and fe3 == 0x397 and fm3 == 0xc24454430932e and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b1d97c18af0989; op2val:0x400d78f5b3aa2195; op3val:0x397c24454430932e; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 1392, x18)

inst_88:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x1d97c18af0989 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xd78f5b3aa2195 and fs3 == 0 and fe3 == 0x397 and fm3 == 0xc24454430932e and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b1d97c18af0989; op2val:0x400d78f5b3aa2195; op3val:0x397c24454430932e; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 1408, x18)

inst_89:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x1d97c18af0989 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xd78f5b3aa2195 and fs3 == 0 and fe3 == 0x397 and fm3 == 0xc24454430932e and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b1d97c18af0989; op2val:0x400d78f5b3aa2195; op3val:0x397c24454430932e; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 1424, x18)

inst_90:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x1d97c18af0989 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xd78f5b3aa2195 and fs3 == 0 and fe3 == 0x397 and fm3 == 0xc24454430932e and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b1d97c18af0989; op2val:0x400d78f5b3aa2195; op3val:0x397c24454430932e; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 1440, x18)

inst_91:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xdb06ddfbf9214 and fs2 == 0 and fe2 == 0x406 and fm2 == 0xe644674861f0d and fs3 == 0 and fe3 == 0x39b and fm3 == 0x155968624739e and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39adb06ddfbf9214; op2val:0x406e644674861f0d; op3val:0x39b155968624739e; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 1456, x18)

inst_92:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xdb06ddfbf9214 and fs2 == 0 and fe2 == 0x406 and fm2 == 0xe644674861f0d and fs3 == 0 and fe3 == 0x39b and fm3 == 0x155968624739e and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39adb06ddfbf9214; op2val:0x406e644674861f0d; op3val:0x39b155968624739e; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 1472, x18)

inst_93:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xdb06ddfbf9214 and fs2 == 0 and fe2 == 0x406 and fm2 == 0xe644674861f0d and fs3 == 0 and fe3 == 0x39b and fm3 == 0x155968624739e and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39adb06ddfbf9214; op2val:0x406e644674861f0d; op3val:0x39b155968624739e; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 1488, x18)

inst_94:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xdb06ddfbf9214 and fs2 == 0 and fe2 == 0x406 and fm2 == 0xe644674861f0d and fs3 == 0 and fe3 == 0x39b and fm3 == 0x155968624739e and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39adb06ddfbf9214; op2val:0x406e644674861f0d; op3val:0x39b155968624739e; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 1504, x18)

inst_95:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xdb06ddfbf9214 and fs2 == 0 and fe2 == 0x406 and fm2 == 0xe644674861f0d and fs3 == 0 and fe3 == 0x39b and fm3 == 0x155968624739e and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39adb06ddfbf9214; op2val:0x406e644674861f0d; op3val:0x39b155968624739e; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 1520, x18)

inst_96:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x92354f370e226 and fs2 == 0 and fe2 == 0x410 and fm2 == 0x45e28866807e2 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x96ee30bfb4cea and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39992354f370e226; op2val:0x41045e28866807e2; op3val:0x39a96ee30bfb4cea; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 1536, x18)

inst_97:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x92354f370e226 and fs2 == 0 and fe2 == 0x410 and fm2 == 0x45e28866807e2 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x96ee30bfb4cea and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39992354f370e226; op2val:0x41045e28866807e2; op3val:0x39a96ee30bfb4cea; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 1552, x18)

inst_98:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x92354f370e226 and fs2 == 0 and fe2 == 0x410 and fm2 == 0x45e28866807e2 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x96ee30bfb4cea and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39992354f370e226; op2val:0x41045e28866807e2; op3val:0x39a96ee30bfb4cea; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 1568, x18)

inst_99:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x92354f370e226 and fs2 == 0 and fe2 == 0x410 and fm2 == 0x45e28866807e2 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x96ee30bfb4cea and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39992354f370e226; op2val:0x41045e28866807e2; op3val:0x39a96ee30bfb4cea; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 1584, x18)

inst_100:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x92354f370e226 and fs2 == 0 and fe2 == 0x410 and fm2 == 0x45e28866807e2 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x96ee30bfb4cea and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39992354f370e226; op2val:0x41045e28866807e2; op3val:0x39a96ee30bfb4cea; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 1600, x18)

inst_101:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x03c29ad189d45 and fs2 == 0 and fe2 == 0x41c and fm2 == 0xf896a8b45c45f and fs3 == 0 and fe3 == 0x398 and fm3 == 0xf63004f923af8 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b03c29ad189d45; op2val:0x41cf896a8b45c45f; op3val:0x398f63004f923af8; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 1616, x18)

inst_102:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x03c29ad189d45 and fs2 == 0 and fe2 == 0x41c and fm2 == 0xf896a8b45c45f and fs3 == 0 and fe3 == 0x398 and fm3 == 0xf63004f923af8 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b03c29ad189d45; op2val:0x41cf896a8b45c45f; op3val:0x398f63004f923af8; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 1632, x18)

inst_103:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x03c29ad189d45 and fs2 == 0 and fe2 == 0x41c and fm2 == 0xf896a8b45c45f and fs3 == 0 and fe3 == 0x398 and fm3 == 0xf63004f923af8 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b03c29ad189d45; op2val:0x41cf896a8b45c45f; op3val:0x398f63004f923af8; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 1648, x18)

inst_104:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x03c29ad189d45 and fs2 == 0 and fe2 == 0x41c and fm2 == 0xf896a8b45c45f and fs3 == 0 and fe3 == 0x398 and fm3 == 0xf63004f923af8 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b03c29ad189d45; op2val:0x41cf896a8b45c45f; op3val:0x398f63004f923af8; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 1664, x18)

inst_105:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x03c29ad189d45 and fs2 == 0 and fe2 == 0x41c and fm2 == 0xf896a8b45c45f and fs3 == 0 and fe3 == 0x398 and fm3 == 0xf63004f923af8 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b03c29ad189d45; op2val:0x41cf896a8b45c45f; op3val:0x398f63004f923af8; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1680, x18)

inst_106:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x0cfffbc2fc11c and fs2 == 1 and fe2 == 0x465 and fm2 == 0x2ce186e43520e and fs3 == 0 and fe3 == 0x39b and fm3 == 0x05c60e1d1754d and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b0cfffbc2fc11c; op2val:0xc652ce186e43520e; op3val:0x39b05c60e1d1754d; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 1696, x18)

inst_107:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x0cfffbc2fc11c and fs2 == 1 and fe2 == 0x465 and fm2 == 0x2ce186e43520e and fs3 == 0 and fe3 == 0x39b and fm3 == 0x05c60e1d1754d and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b0cfffbc2fc11c; op2val:0xc652ce186e43520e; op3val:0x39b05c60e1d1754d; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 1712, x18)

inst_108:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x0cfffbc2fc11c and fs2 == 1 and fe2 == 0x465 and fm2 == 0x2ce186e43520e and fs3 == 0 and fe3 == 0x39b and fm3 == 0x05c60e1d1754d and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b0cfffbc2fc11c; op2val:0xc652ce186e43520e; op3val:0x39b05c60e1d1754d; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 1728, x18)

inst_109:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x0cfffbc2fc11c and fs2 == 1 and fe2 == 0x465 and fm2 == 0x2ce186e43520e and fs3 == 0 and fe3 == 0x39b and fm3 == 0x05c60e1d1754d and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b0cfffbc2fc11c; op2val:0xc652ce186e43520e; op3val:0x39b05c60e1d1754d; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 1744, x18)

inst_110:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x0cfffbc2fc11c and fs2 == 1 and fe2 == 0x465 and fm2 == 0x2ce186e43520e and fs3 == 0 and fe3 == 0x39b and fm3 == 0x05c60e1d1754d and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b0cfffbc2fc11c; op2val:0xc652ce186e43520e; op3val:0x39b05c60e1d1754d; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1760, x18)

inst_111:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x164ec3aaad4a5 and fs2 == 1 and fe2 == 0x467 and fm2 == 0x22d17b13e4e89 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x2cfba931fb37b and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x399164ec3aaad4a5; op2val:0xc6722d17b13e4e89; op3val:0x39b2cfba931fb37b; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 1776, x18)

inst_112:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x164ec3aaad4a5 and fs2 == 1 and fe2 == 0x467 and fm2 == 0x22d17b13e4e89 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x2cfba931fb37b and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x399164ec3aaad4a5; op2val:0xc6722d17b13e4e89; op3val:0x39b2cfba931fb37b; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 1792, x18)

inst_113:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x164ec3aaad4a5 and fs2 == 1 and fe2 == 0x467 and fm2 == 0x22d17b13e4e89 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x2cfba931fb37b and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x399164ec3aaad4a5; op2val:0xc6722d17b13e4e89; op3val:0x39b2cfba931fb37b; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 1808, x18)

inst_114:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x164ec3aaad4a5 and fs2 == 1 and fe2 == 0x467 and fm2 == 0x22d17b13e4e89 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x2cfba931fb37b and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x399164ec3aaad4a5; op2val:0xc6722d17b13e4e89; op3val:0x39b2cfba931fb37b; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 1824, x18)

inst_115:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x164ec3aaad4a5 and fs2 == 1 and fe2 == 0x467 and fm2 == 0x22d17b13e4e89 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x2cfba931fb37b and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x399164ec3aaad4a5; op2val:0xc6722d17b13e4e89; op3val:0x39b2cfba931fb37b; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1840, x18)

inst_116:
// fs1 == 0 and fe1 == 0x398 and fm1 == 0xc043435ab09ee and fs2 == 1 and fe2 == 0x467 and fm2 == 0x691d2a3726324 and fs3 == 0 and fe3 == 0x398 and fm3 == 0x13aae709bc4f3 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x398c043435ab09ee; op2val:0xc67691d2a3726324; op3val:0x39813aae709bc4f3; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 1856, x18)

inst_117:
// fs1 == 0 and fe1 == 0x398 and fm1 == 0xc043435ab09ee and fs2 == 1 and fe2 == 0x467 and fm2 == 0x691d2a3726324 and fs3 == 0 and fe3 == 0x398 and fm3 == 0x13aae709bc4f3 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x398c043435ab09ee; op2val:0xc67691d2a3726324; op3val:0x39813aae709bc4f3; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 1872, x18)

inst_118:
// fs1 == 0 and fe1 == 0x398 and fm1 == 0xc043435ab09ee and fs2 == 1 and fe2 == 0x467 and fm2 == 0x691d2a3726324 and fs3 == 0 and fe3 == 0x398 and fm3 == 0x13aae709bc4f3 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x398c043435ab09ee; op2val:0xc67691d2a3726324; op3val:0x39813aae709bc4f3; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 1888, x18)

inst_119:
// fs1 == 0 and fe1 == 0x398 and fm1 == 0xc043435ab09ee and fs2 == 1 and fe2 == 0x467 and fm2 == 0x691d2a3726324 and fs3 == 0 and fe3 == 0x398 and fm3 == 0x13aae709bc4f3 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x398c043435ab09ee; op2val:0xc67691d2a3726324; op3val:0x39813aae709bc4f3; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 1904, x18)

inst_120:
// fs1 == 0 and fe1 == 0x398 and fm1 == 0xc043435ab09ee and fs2 == 1 and fe2 == 0x467 and fm2 == 0x691d2a3726324 and fs3 == 0 and fe3 == 0x398 and fm3 == 0x13aae709bc4f3 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x398c043435ab09ee; op2val:0xc67691d2a3726324; op3val:0x39813aae709bc4f3; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1920, x18)

inst_121:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x5c5342eebf7b3 and fs2 == 1 and fe2 == 0x465 and fm2 == 0xd0b87a440ebba and fs3 == 0 and fe3 == 0x399 and fm3 == 0x67279432f4eba and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a5c5342eebf7b3; op2val:0xc65d0b87a440ebba; op3val:0x39967279432f4eba; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 1936, x18)

inst_122:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x5c5342eebf7b3 and fs2 == 1 and fe2 == 0x465 and fm2 == 0xd0b87a440ebba and fs3 == 0 and fe3 == 0x399 and fm3 == 0x67279432f4eba and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a5c5342eebf7b3; op2val:0xc65d0b87a440ebba; op3val:0x39967279432f4eba; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 1952, x18)

inst_123:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x5c5342eebf7b3 and fs2 == 1 and fe2 == 0x465 and fm2 == 0xd0b87a440ebba and fs3 == 0 and fe3 == 0x399 and fm3 == 0x67279432f4eba and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a5c5342eebf7b3; op2val:0xc65d0b87a440ebba; op3val:0x39967279432f4eba; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 1968, x18)

inst_124:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x5c5342eebf7b3 and fs2 == 1 and fe2 == 0x465 and fm2 == 0xd0b87a440ebba and fs3 == 0 and fe3 == 0x399 and fm3 == 0x67279432f4eba and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a5c5342eebf7b3; op2val:0xc65d0b87a440ebba; op3val:0x39967279432f4eba; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 1984, x18)

inst_125:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x5c5342eebf7b3 and fs2 == 1 and fe2 == 0x465 and fm2 == 0xd0b87a440ebba and fs3 == 0 and fe3 == 0x399 and fm3 == 0x67279432f4eba and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a5c5342eebf7b3; op2val:0xc65d0b87a440ebba; op3val:0x39967279432f4eba; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 2000, x18)

inst_126:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xf09e71aeb7cb5 and fs2 == 1 and fe2 == 0x465 and fm2 == 0x45f3b4d4e490b and fs3 == 0 and fe3 == 0x399 and fm3 == 0x2014493a4320c and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39af09e71aeb7cb5; op2val:0xc6545f3b4d4e490b; op3val:0x3992014493a4320c; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_2)

inst_127:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xf09e71aeb7cb5 and fs2 == 1 and fe2 == 0x465 and fm2 == 0x45f3b4d4e490b and fs3 == 0 and fe3 == 0x399 and fm3 == 0x2014493a4320c and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39af09e71aeb7cb5; op2val:0xc6545f3b4d4e490b; op3val:0x3992014493a4320c; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 0, x18)

inst_128:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xf09e71aeb7cb5 and fs2 == 1 and fe2 == 0x465 and fm2 == 0x45f3b4d4e490b and fs3 == 0 and fe3 == 0x399 and fm3 == 0x2014493a4320c and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39af09e71aeb7cb5; op2val:0xc6545f3b4d4e490b; op3val:0x3992014493a4320c; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 16, x18)

inst_129:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xf09e71aeb7cb5 and fs2 == 1 and fe2 == 0x465 and fm2 == 0x45f3b4d4e490b and fs3 == 0 and fe3 == 0x399 and fm3 == 0x2014493a4320c and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39af09e71aeb7cb5; op2val:0xc6545f3b4d4e490b; op3val:0x3992014493a4320c; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 32, x18)

inst_130:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xf09e71aeb7cb5 and fs2 == 1 and fe2 == 0x465 and fm2 == 0x45f3b4d4e490b and fs3 == 0 and fe3 == 0x399 and fm3 == 0x2014493a4320c and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39af09e71aeb7cb5; op2val:0xc6545f3b4d4e490b; op3val:0x3992014493a4320c; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 48, x18)

inst_131:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x29e4b8ac9f56c and fs2 == 1 and fe2 == 0x465 and fm2 == 0x0fb29bbeb8d75 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x03c2facc640b3 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b29e4b8ac9f56c; op2val:0xc650fb29bbeb8d75; op3val:0x39b03c2facc640b3; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 64, x18)

inst_132:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x29e4b8ac9f56c and fs2 == 1 and fe2 == 0x465 and fm2 == 0x0fb29bbeb8d75 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x03c2facc640b3 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b29e4b8ac9f56c; op2val:0xc650fb29bbeb8d75; op3val:0x39b03c2facc640b3; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 80, x18)

inst_133:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x29e4b8ac9f56c and fs2 == 1 and fe2 == 0x465 and fm2 == 0x0fb29bbeb8d75 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x03c2facc640b3 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b29e4b8ac9f56c; op2val:0xc650fb29bbeb8d75; op3val:0x39b03c2facc640b3; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 96, x18)

inst_134:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x29e4b8ac9f56c and fs2 == 1 and fe2 == 0x465 and fm2 == 0x0fb29bbeb8d75 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x03c2facc640b3 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b29e4b8ac9f56c; op2val:0xc650fb29bbeb8d75; op3val:0x39b03c2facc640b3; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 112, x18)

inst_135:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x29e4b8ac9f56c and fs2 == 1 and fe2 == 0x465 and fm2 == 0x0fb29bbeb8d75 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x03c2facc640b3 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39b29e4b8ac9f56c; op2val:0xc650fb29bbeb8d75; op3val:0x39b03c2facc640b3; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 128, x18)

inst_136:
// fs1 == 0 and fe1 == 0x397 and fm1 == 0x595dba319e6b7 and fs2 == 1 and fe2 == 0x468 and fm2 == 0xd4b3ce824f4e6 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x04a5c09e2e627 and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x397595dba319e6b7; op2val:0xc68d4b3ce824f4e6; op3val:0x39a04a5c09e2e627; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 144, x18)

inst_137:
// fs1 == 0 and fe1 == 0x397 and fm1 == 0x595dba319e6b7 and fs2 == 1 and fe2 == 0x468 and fm2 == 0xd4b3ce824f4e6 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x04a5c09e2e627 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x397595dba319e6b7; op2val:0xc68d4b3ce824f4e6; op3val:0x39a04a5c09e2e627; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 160, x18)

inst_138:
// fs1 == 0 and fe1 == 0x397 and fm1 == 0x595dba319e6b7 and fs2 == 1 and fe2 == 0x468 and fm2 == 0xd4b3ce824f4e6 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x04a5c09e2e627 and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x397595dba319e6b7; op2val:0xc68d4b3ce824f4e6; op3val:0x39a04a5c09e2e627; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 176, x18)

inst_139:
// fs1 == 0 and fe1 == 0x397 and fm1 == 0x595dba319e6b7 and fs2 == 1 and fe2 == 0x468 and fm2 == 0xd4b3ce824f4e6 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x04a5c09e2e627 and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x397595dba319e6b7; op2val:0xc68d4b3ce824f4e6; op3val:0x39a04a5c09e2e627; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 192, x18)

inst_140:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x9a9f802f19511 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xc13c11507e273 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x66aa07ced57ce and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a9a9f802f19511; op2val:0x3fdc13c11507e273; op3val:0x39966aa07ced57ce; valaddr_reg:x16; val_offset:1320; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1320, x17, x15, 208, x18)

inst_141:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x9a9f802f19511 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xc13c11507e273 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x66aa07ced57ce and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a9a9f802f19511; op2val:0x3fdc13c11507e273; op3val:0x39966aa07ced57ce; valaddr_reg:x16; val_offset:1344; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1344, x17, x15, 224, x18)

inst_142:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x9a9f802f19511 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xc13c11507e273 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x66aa07ced57ce and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a9a9f802f19511; op2val:0x3fdc13c11507e273; op3val:0x39966aa07ced57ce; valaddr_reg:x16; val_offset:1368; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1368, x17, x15, 240, x18)

inst_143:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x0beb46d781d82 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x08c8c5747da51 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x0714dd3e7e73e and rm_val == 4  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a0beb46d781d82; op2val:0x3fe08c8c5747da51; op3val:0x3990714dd3e7e73e; valaddr_reg:x16; val_offset:1392; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x4, 0, x16, 1392, x17, x15, 256, x18)

inst_144:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x0beb46d781d82 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x08c8c5747da51 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x0714dd3e7e73e and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a0beb46d781d82; op2val:0x3fe08c8c5747da51; op3val:0x3990714dd3e7e73e; valaddr_reg:x16; val_offset:1416; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1416, x17, x15, 272, x18)

inst_145:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x0beb46d781d82 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x08c8c5747da51 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x0714dd3e7e73e and rm_val == 2  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a0beb46d781d82; op2val:0x3fe08c8c5747da51; op3val:0x3990714dd3e7e73e; valaddr_reg:x16; val_offset:1440; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x2, 0, x16, 1440, x17, x15, 288, x18)

inst_146:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x0beb46d781d82 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x08c8c5747da51 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x0714dd3e7e73e and rm_val == 1  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a0beb46d781d82; op2val:0x3fe08c8c5747da51; op3val:0x3990714dd3e7e73e; valaddr_reg:x16; val_offset:1464; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x1, 0, x16, 1464, x17, x15, 304, x18)

inst_147:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x0beb46d781d82 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x08c8c5747da51 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x0714dd3e7e73e and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x39a0beb46d781d82; op2val:0x3fe08c8c5747da51; op3val:0x3990714dd3e7e73e; valaddr_reg:x16; val_offset:1488; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1488, x17, x15, 320, x18)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_fp:
.dword 0x397595dba319e6b7
.dword 0xc68d4b3ce824f4e6
.dword 0x39a04a5c09e2e627
.dword 0x39a9a9f802f19511
.dword 0x3fdc13c11507e273
.dword 0x39a9a9f802f19511
.dword 0x39a9a9f802f19511
.dword 0x3fdc13c11507e273
.dword 0x3fdc13c11507e273
.dword 0x39a9a9f802f19511
.dword 0x3fdc13c11507e273
.dword 0x39966aa07ced57ce
.dword 0x39a9a9f802f19511
.dword 0x3fdc13c11507e273
.dword 0x39966aa07ced57ce
.dword 0x39a9a9f802f19511
.dword 0x39a9a9f802f19511
.dword 0x39966aa07ced57ce
.dword 0x39a0beb46d781d82
.dword 0x3fe08c8c5747da51
.dword 0x39a0beb46d781d82
.dword 0x39a0beb46d781d82
.dword 0x3fe08c8c5747da51
.dword 0x3fe08c8c5747da51
.dword 0x39a0beb46d781d82
.dword 0x39a0beb46d781d82
.dword 0x39a0beb46d781d82
.dword 0x39a0beb46d781d82
.dword 0x39a0beb46d781d82
.dword 0x39a0beb46d781d82
.dword 0x39a0beb46d781d82
.dword 0x39a0beb46d781d82
.dword 0x3990714dd3e7e73e
.dword 0x39b43a2affc895c3
.dword 0x3fd574f5bd5cf21d
.dword 0x398fbbce1c784c51
.dword 0x39b43a2affc895c3
.dword 0x3fd574f5bd5cf21d
.dword 0x398fbbce1c784c51
.dword 0x39b43a2affc895c3
.dword 0x3fd574f5bd5cf21d
.dword 0x398fbbce1c784c51
.dword 0x39b43a2affc895c3
.dword 0x3fd574f5bd5cf21d
.dword 0x398fbbce1c784c51
.dword 0x39b43a2affc895c3
.dword 0x3fd574f5bd5cf21d
.dword 0x398fbbce1c784c51
.dword 0x39a31da307c8502d
.dword 0x401db1be11df76bf
.dword 0x399bd093775ceed4
.dword 0x39a31da307c8502d
.dword 0x401db1be11df76bf
.dword 0x399bd093775ceed4
.dword 0x39a31da307c8502d
.dword 0x401db1be11df76bf
.dword 0x399bd093775ceed4
.dword 0x39a31da307c8502d
.dword 0x401db1be11df76bf
.dword 0x399bd093775ceed4
.dword 0x39a31da307c8502d
.dword 0x401db1be11df76bf
.dword 0x399bd093775ceed4
.dword 0x3996c05eb40c4ba6
.dword 0x4083cb4025d5a1a9
.dword 0x39a5afd48389c633
.dword 0x3996c05eb40c4ba6
.dword 0x4083cb4025d5a1a9
.dword 0x39a5afd48389c633
.dword 0x3996c05eb40c4ba6
.dword 0x4083cb4025d5a1a9
.dword 0x39a5afd48389c633
.dword 0x3996c05eb40c4ba6
.dword 0x4083cb4025d5a1a9
.dword 0x39a5afd48389c633
.dword 0x3996c05eb40c4ba6
.dword 0x4083cb4025d5a1a9
.dword 0x39a5afd48389c633
.dword 0x396e108feec3fd98
.dword 0x413107b7ba6ddb6d
.dword 0x39a96865e46e1628
.dword 0x396e108feec3fd98
.dword 0x413107b7ba6ddb6d
.dword 0x39a96865e46e1628
.dword 0x396e108feec3fd98
.dword 0x413107b7ba6ddb6d
.dword 0x39a96865e46e1628
.dword 0x396e108feec3fd98
.dword 0x413107b7ba6ddb6d
.dword 0x39a96865e46e1628
.dword 0x396e108feec3fd98
.dword 0x413107b7ba6ddb6d
.dword 0x39a96865e46e1628
.dword 0x39b07b387586d9e2
.dword 0x41cf10c191255df5
.dword 0x396c103913225855
.dword 0x39b07b387586d9e2
.dword 0x41cf10c191255df5
.dword 0x396c103913225855
.dword 0x39b07b387586d9e2
.dword 0x41cf10c191255df5
.dword 0x396c103913225855
.dword 0x39b07b387586d9e2
.dword 0x41cf10c191255df5
.dword 0x396c103913225855
.dword 0x39b07b387586d9e2
.dword 0x41cf10c191255df5
.dword 0x396c103913225855
.dword 0x398a2cfeed793415
.dword 0x3ffe62a026651722
.dword 0x3998c0eb80d62dac
.dword 0x398a2cfeed793415
.dword 0x3ffe62a026651722
.dword 0x3998c0eb80d62dac
.dword 0x398a2cfeed793415
.dword 0x3ffe62a026651722
.dword 0x3998c0eb80d62dac
.dword 0x398a2cfeed793415
.dword 0x3ffe62a026651722
.dword 0x3998c0eb80d62dac
.dword 0x398a2cfeed793415
.dword 0x3ffe62a026651722
.dword 0x3998c0eb80d62dac
.dword 0x39a84b76733b0607
.dword 0x3fe79bb4d9eddb8a
.dword 0x39a17c34e456afbe
.dword 0x39a84b76733b0607
.dword 0x3fe79bb4d9eddb8a
.dword 0x39a17c34e456afbe
.dword 0x39a84b76733b0607
.dword 0x3fe79bb4d9eddb8a
.dword 0x39a17c34e456afbe
.dword 0x39a84b76733b0607
.dword 0x3fe79bb4d9eddb8a
.dword 0x39a17c34e456afbe
.dword 0x39a84b76733b0607
.dword 0x3fe79bb4d9eddb8a
.dword 0x39a17c34e456afbe
.dword 0x39a49f3d964f96f0
.dword 0x3ff165581f0ea188
.dword 0x39a0caa956ab3972
.dword 0x39a49f3d964f96f0
.dword 0x3ff165581f0ea188
.dword 0x39a0caa956ab3972
.dword 0x39a49f3d964f96f0
.dword 0x3ff165581f0ea188
.dword 0x39a0caa956ab3972
.dword 0x39a49f3d964f96f0
.dword 0x3ff165581f0ea188
.dword 0x39a0caa956ab3972
.dword 0x39a49f3d964f96f0
.dword 0x3ff165581f0ea188
.dword 0x39a0caa956ab3972
.dword 0x39b1e540c6c2d7b8
.dword 0x4012265e7285040b
.dword 0x39b1334bf1981380
.dword 0x39b1e540c6c2d7b8
.dword 0x4012265e7285040b
.dword 0x39b1334bf1981380
.dword 0x39b1e540c6c2d7b8
.dword 0x4012265e7285040b
.dword 0x39b1334bf1981380
.dword 0x39b1e540c6c2d7b8
.dword 0x4012265e7285040b
.dword 0x39b1334bf1981380
.dword 0x39b1e540c6c2d7b8
.dword 0x4012265e7285040b
.dword 0x39b1334bf1981380
.dword 0x39b26f1fd54e5fb5
.dword 0x40686f5bb59f2eb2
.dword 0x39a737cbf40c9df3
.dword 0x39b26f1fd54e5fb5
.dword 0x40686f5bb59f2eb2
.dword 0x39a737cbf40c9df3
.dword 0x39b26f1fd54e5fb5
.dword 0x40686f5bb59f2eb2
.dword 0x39a737cbf40c9df3
.dword 0x39b26f1fd54e5fb5
.dword 0x40686f5bb59f2eb2
.dword 0x39a737cbf40c9df3
.dword 0x39b26f1fd54e5fb5
.dword 0x40686f5bb59f2eb2
.dword 0x39a737cbf40c9df3
.dword 0x39a63701d585a076
.dword 0x40f70c39d380240b
.dword 0x39985bdc2bae0463
.dword 0x39a63701d585a076
.dword 0x40f70c39d380240b
.dword 0x39985bdc2bae0463
.dword 0x39a63701d585a076
.dword 0x40f70c39d380240b
.dword 0x39985bdc2bae0463
.dword 0x39a63701d585a076
.dword 0x40f70c39d380240b
.dword 0x39985bdc2bae0463
.dword 0x39a63701d585a076
.dword 0x40f70c39d380240b
.dword 0x39985bdc2bae0463
.dword 0x39b2f4a904908b78
.dword 0x41cb02a59bddd2aa
.dword 0x39b18dd9c9f69342
.dword 0x39b2f4a904908b78
.dword 0x41cb02a59bddd2aa
.dword 0x39b18dd9c9f69342
.dword 0x39b2f4a904908b78
.dword 0x41cb02a59bddd2aa
.dword 0x39b18dd9c9f69342
.dword 0x39b2f4a904908b78
.dword 0x41cb02a59bddd2aa
.dword 0x39b18dd9c9f69342
.dword 0x39b2f4a904908b78
.dword 0x41cb02a59bddd2aa
.dword 0x39b18dd9c9f69342
.dword 0x39a336048eaa4560
.dword 0x3fc87c5cc2b9e4ef
.dword 0x397cfe97ae238935
.dword 0x39a336048eaa4560
.dword 0x3fc87c5cc2b9e4ef
.dword 0x397cfe97ae238935
.dword 0x39a336048eaa4560
.dword 0x3fc87c5cc2b9e4ef
.dword 0x397cfe97ae238935
.dword 0x39a336048eaa4560
.dword 0x3fc87c5cc2b9e4ef
.dword 0x397cfe97ae238935
.dword 0x39a336048eaa4560
.dword 0x3fc87c5cc2b9e4ef
.dword 0x397cfe97ae238935
.dword 0x39a4861fd8b3e0f9
.dword 0x3fd7db4ae95d05e4
.dword 0x398cd91d6a7290c8
.dword 0x39a4861fd8b3e0f9
.dword 0x3fd7db4ae95d05e4
.dword 0x398cd91d6a7290c8
.dword 0x39a4861fd8b3e0f9
.dword 0x3fd7db4ae95d05e4
.dword 0x398cd91d6a7290c8
.dword 0x39a4861fd8b3e0f9
.dword 0x3fd7db4ae95d05e4
.dword 0x398cd91d6a7290c8
.dword 0x39a4861fd8b3e0f9
.dword 0x3fd7db4ae95d05e4
.dword 0x398cd91d6a7290c8
.dword 0x39a8938691fdcdb1
.dword 0x3ff5676e3c35cec5
.dword 0x39ab3f58c2f9af8a
.dword 0x39a8938691fdcdb1
.dword 0x3ff5676e3c35cec5
.dword 0x39ab3f58c2f9af8a
.dword 0x39a8938691fdcdb1
.dword 0x3ff5676e3c35cec5
.dword 0x39ab3f58c2f9af8a
.dword 0x39a8938691fdcdb1
.dword 0x3ff5676e3c35cec5
.dword 0x39ab3f58c2f9af8a
.dword 0x39a8938691fdcdb1
.dword 0x3ff5676e3c35cec5
.dword 0x39ab3f58c2f9af8a
.dword 0x39b1d97c18af0989
.dword 0x400d78f5b3aa2195
.dword 0x397c24454430932e
.dword 0x39b1d97c18af0989
.dword 0x400d78f5b3aa2195
.dword 0x397c24454430932e
.dword 0x39b1d97c18af0989
.dword 0x400d78f5b3aa2195
.dword 0x397c24454430932e
.dword 0x39b1d97c18af0989
.dword 0x400d78f5b3aa2195
.dword 0x397c24454430932e
.dword 0x39b1d97c18af0989
.dword 0x400d78f5b3aa2195
.dword 0x397c24454430932e
.dword 0x39adb06ddfbf9214
.dword 0x406e644674861f0d
.dword 0x39b155968624739e
.dword 0x39adb06ddfbf9214
.dword 0x406e644674861f0d
.dword 0x39b155968624739e
.dword 0x39adb06ddfbf9214
.dword 0x406e644674861f0d
.dword 0x39b155968624739e
.dword 0x39adb06ddfbf9214
.dword 0x406e644674861f0d
.dword 0x39b155968624739e
.dword 0x39adb06ddfbf9214
.dword 0x406e644674861f0d
.dword 0x39b155968624739e
.dword 0x39992354f370e226
.dword 0x41045e28866807e2
.dword 0x39a96ee30bfb4cea
.dword 0x39992354f370e226
.dword 0x41045e28866807e2
.dword 0x39a96ee30bfb4cea
.dword 0x39992354f370e226
.dword 0x41045e28866807e2
.dword 0x39a96ee30bfb4cea
.dword 0x39992354f370e226
.dword 0x41045e28866807e2
.dword 0x39a96ee30bfb4cea
.dword 0x39992354f370e226
.dword 0x41045e28866807e2
.dword 0x39a96ee30bfb4cea
.dword 0x39b03c29ad189d45
.dword 0x41cf896a8b45c45f
.dword 0x398f63004f923af8
.dword 0x39b03c29ad189d45
.dword 0x41cf896a8b45c45f
.dword 0x398f63004f923af8
.dword 0x39b03c29ad189d45
.dword 0x41cf896a8b45c45f
.dword 0x398f63004f923af8
.dword 0x39b03c29ad189d45
.dword 0x41cf896a8b45c45f
.dword 0x398f63004f923af8
.dword 0x39b03c29ad189d45
.dword 0x41cf896a8b45c45f
.dword 0x398f63004f923af8
.dword 0x39b0cfffbc2fc11c
.dword 0xc652ce186e43520e
.dword 0x39b05c60e1d1754d
.dword 0x39b0cfffbc2fc11c
.dword 0xc652ce186e43520e
.dword 0x39b05c60e1d1754d
.dword 0x39b0cfffbc2fc11c
.dword 0xc652ce186e43520e
.dword 0x39b05c60e1d1754d
.dword 0x39b0cfffbc2fc11c
.dword 0xc652ce186e43520e
.dword 0x39b05c60e1d1754d
.dword 0x39b0cfffbc2fc11c
.dword 0xc652ce186e43520e
.dword 0x39b05c60e1d1754d
.dword 0x399164ec3aaad4a5
.dword 0xc6722d17b13e4e89
.dword 0x39b2cfba931fb37b
.dword 0x399164ec3aaad4a5
.dword 0xc6722d17b13e4e89
.dword 0x39b2cfba931fb37b
.dword 0x399164ec3aaad4a5
.dword 0xc6722d17b13e4e89
.dword 0x39b2cfba931fb37b
.dword 0x399164ec3aaad4a5
.dword 0xc6722d17b13e4e89
.dword 0x39b2cfba931fb37b
.dword 0x399164ec3aaad4a5
.dword 0xc6722d17b13e4e89
.dword 0x39b2cfba931fb37b
.dword 0x398c043435ab09ee
.dword 0xc67691d2a3726324
.dword 0x39813aae709bc4f3
.dword 0x398c043435ab09ee
.dword 0xc67691d2a3726324
.dword 0x39813aae709bc4f3
.dword 0x398c043435ab09ee
.dword 0xc67691d2a3726324
.dword 0x39813aae709bc4f3
.dword 0x398c043435ab09ee
.dword 0xc67691d2a3726324
.dword 0x39813aae709bc4f3
.dword 0x398c043435ab09ee
.dword 0xc67691d2a3726324
.dword 0x39813aae709bc4f3
.dword 0x39a5c5342eebf7b3
.dword 0xc65d0b87a440ebba
.dword 0x39967279432f4eba
.dword 0x39a5c5342eebf7b3
.dword 0xc65d0b87a440ebba
.dword 0x39967279432f4eba
.dword 0x39a5c5342eebf7b3
.dword 0xc65d0b87a440ebba
.dword 0x39967279432f4eba
.dword 0x39a5c5342eebf7b3
.dword 0xc65d0b87a440ebba
.dword 0x39967279432f4eba
.dword 0x39a5c5342eebf7b3
.dword 0xc65d0b87a440ebba
.dword 0x39967279432f4eba
.dword 0x39af09e71aeb7cb5
.dword 0xc6545f3b4d4e490b
.dword 0x3992014493a4320c
.dword 0x39af09e71aeb7cb5
.dword 0xc6545f3b4d4e490b
.dword 0x3992014493a4320c
.dword 0x39af09e71aeb7cb5
.dword 0xc6545f3b4d4e490b
.dword 0x3992014493a4320c
.dword 0x39af09e71aeb7cb5
.dword 0xc6545f3b4d4e490b
.dword 0x3992014493a4320c
.dword 0x39af09e71aeb7cb5
.dword 0xc6545f3b4d4e490b
.dword 0x3992014493a4320c
.dword 0x39b29e4b8ac9f56c
.dword 0xc650fb29bbeb8d75
.dword 0x39b03c2facc640b3
.dword 0x39b29e4b8ac9f56c
.dword 0xc650fb29bbeb8d75
.dword 0x39b03c2facc640b3
.dword 0x39b29e4b8ac9f56c
.dword 0xc650fb29bbeb8d75
.dword 0x39b03c2facc640b3
.dword 0x39b29e4b8ac9f56c
.dword 0xc650fb29bbeb8d75
.dword 0x39b03c2facc640b3
.dword 0x39b29e4b8ac9f56c
.dword 0xc650fb29bbeb8d75
.dword 0x39b03c2facc640b3
.dword 0x397595dba319e6b7
.dword 0xc68d4b3ce824f4e6
.dword 0x39a04a5c09e2e627
.dword 0x397595dba319e6b7
.dword 0xc68d4b3ce824f4e6
.dword 0x39a04a5c09e2e627
.dword 0x397595dba319e6b7
.dword 0xc68d4b3ce824f4e6
.dword 0x39a04a5c09e2e627
.dword 0x397595dba319e6b7
.dword 0xc68d4b3ce824f4e6
.dword 0x39a04a5c09e2e627
.dword 0x39a9a9f802f19511
.dword 0x3fdc13c11507e273
.dword 0x39966aa07ced57ce
.dword 0x39a9a9f802f19511
.dword 0x3fdc13c11507e273
.dword 0x39966aa07ced57ce
.dword 0x39a9a9f802f19511
.dword 0x3fdc13c11507e273
.dword 0x39966aa07ced57ce
.dword 0x39a0beb46d781d82
.dword 0x3fe08c8c5747da51
.dword 0x3990714dd3e7e73e
.dword 0x39a0beb46d781d82
.dword 0x3fe08c8c5747da51
.dword 0x3990714dd3e7e73e
.dword 0x39a0beb46d781d82
.dword 0x3fe08c8c5747da51
.dword 0x3990714dd3e7e73e
.dword 0x39a0beb46d781d82
.dword 0x3fe08c8c5747da51
.dword 0x3990714dd3e7e73e
.dword 0x39a0beb46d781d82
.dword 0x3fe08c8c5747da51
.dword 0x3990714dd3e7e73e
RVTEST_DATA_END

RVMODEL_DATA_BEGIN


signature_x15_0:
    .fill 0*(XLEN/32),4,0xdeadbeef


signature_x15_1:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_2:
    .fill 42*(XLEN/32),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*(XLEN/32),4,0xdeadbeef

#endif

RVMODEL_DATA_END
