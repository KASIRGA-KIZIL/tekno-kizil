
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.5.6
// timestamp : Mon Sep 20 13:35:21 2021 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/compliance_fd/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /scratch/compliance_fd/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV64D/rv64d_fle.cgf \
 \
//                  -- xlen 64  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2021. IIT Madras. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fle.d instruction of the RISC-V FD extension for the fle_b19 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV64IFD")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*64.*);check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",d_fle_b19)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x16,test_fp)
RVTEST_SIGBASE(x15,signature_x15_1)

inst_0:// rs1 == rs2, rs1==f30, rs2==f30, rd==x5, fs1 == 0 and fe1 == 0x7fc and fm1 == 0xe759ff97b7507 and fs2 == 0 and fe2 == 0x7fc and fm2 == 0xe759ff97b7507 and rm_val == 0  
// opcode: fle.d ; op1:f30; op2:f30; dest:x5; op1val:0x7fce759ff97b7507; op2val:0x7fce759ff97b7507; valaddr_reg:x16; val_offset:0; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x5, f30, f30, 0, x16, 0, x17, x15, 0, x18)

inst_1:// rs1 != rs2, rs1==f20, rs2==f3, rd==x18, fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f20; op2:f3; dest:x18; op1val:0x0; op2val:0x0; valaddr_reg:x16; val_offset:16; correctval:0; testreg:x22
TEST_FCMP_OP(fle.d, x18, f20, f3, 0, x16, 16, x17, x15, 16, x22)

inst_2:// rs1==f6, rs2==f28, rd==x2, fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x423d517f83eb0 and rm_val == 0  
// opcode: fle.d ; op1:f6; op2:f28; dest:x2; op1val:0x0; op2val:0x800423d517f83eb0; valaddr_reg:x16; val_offset:32; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x2, f6, f28, 0, x16, 32, x17, x15, 32, x18)
RVTEST_VALBASEMOV(x20, x16)
RVTEST_SIGBASE(x19,signature_x19_0)

inst_3:// rs1==f18, rs2==f0, rd==x17, fs1 == 1 and fe1 == 0x401 and fm1 == 0x707836e56fe8b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f18; op2:f0; dest:x17; op1val:0xc01707836e56fe8b; op2val:0x0; valaddr_reg:x20; val_offset:48; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x17, f18, f0, 0, x20, 48, x21, x19, 0, x18)
RVTEST_VALBASEMOV(x16, x20)
RVTEST_SIGBASE(x15,signature_x15_2)

inst_4:// rs1==f23, rs2==f29, rd==x6, fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x707836e56fe8b and rm_val == 0  
// opcode: fle.d ; op1:f23; op2:f29; dest:x6; op1val:0x0; op2val:0xc01707836e56fe8b; valaddr_reg:x16; val_offset:64; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x6, f23, f29, 0, x16, 64, x17, x15, 0, x18)

inst_5:// rs1==f16, rs2==f14, rd==x25, fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xd97133b894184 and rm_val == 0  
// opcode: fle.d ; op1:f16; op2:f14; dest:x25; op1val:0x0; op2val:0x800d97133b894184; valaddr_reg:x16; val_offset:80; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x25, f16, f14, 0, x16, 80, x17, x15, 16, x18)

inst_6:// rs1==f0, rs2==f31, rd==x30, fs1 == 1 and fe1 == 0x3ff and fm1 == 0xe3d32f95a320d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f0; op2:f31; dest:x30; op1val:0xbffe3d32f95a320d; op2val:0x0; valaddr_reg:x16; val_offset:96; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x30, f0, f31, 0, x16, 96, x17, x15, 32, x18)

inst_7:// rs1==f5, rs2==f20, rd==x31, fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xe3d32f95a320d and rm_val == 0  
// opcode: fle.d ; op1:f5; op2:f20; dest:x31; op1val:0x0; op2val:0xbffe3d32f95a320d; valaddr_reg:x16; val_offset:112; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x31, f5, f20, 0, x16, 112, x17, x15, 48, x18)

inst_8:// rs1==f22, rs2==f16, rd==x14, fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x879ccf8eb0579 and rm_val == 0  
// opcode: fle.d ; op1:f22; op2:f16; dest:x14; op1val:0x0; op2val:0x800879ccf8eb0579; valaddr_reg:x16; val_offset:128; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x14, f22, f16, 0, x16, 128, x17, x15, 64, x18)

inst_9:// rs1==f29, rs2==f9, rd==x9, fs1 == 1 and fe1 == 0x3ff and fm1 == 0x2dbf77d539bae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f29; op2:f9; dest:x9; op1val:0xbff2dbf77d539bae; op2val:0x0; valaddr_reg:x16; val_offset:144; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x9, f29, f9, 0, x16, 144, x17, x15, 80, x18)

inst_10:// rs1==f10, rs2==f27, rd==x1, fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x2dbf77d539bae and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f27; dest:x1; op1val:0x0; op2val:0xbff2dbf77d539bae; valaddr_reg:x16; val_offset:160; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x1, f10, f27, 0, x16, 160, x17, x15, 96, x18)

inst_11:// rs1==f1, rs2==f6, rd==x0, fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x299ba050fc0c8 and rm_val == 0  
// opcode: fle.d ; op1:f1; op2:f6; dest:x0; op1val:0x0; op2val:0x800299ba050fc0c8; valaddr_reg:x16; val_offset:176; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x0, f1, f6, 0, x16, 176, x17, x15, 112, x18)

inst_12:// rs1==f11, rs2==f24, rd==x8, fs1 == 1 and fe1 == 0x400 and fm1 == 0xcee7468323917 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f11; op2:f24; dest:x8; op1val:0xc00cee7468323917; op2val:0x0; valaddr_reg:x16; val_offset:192; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x8, f11, f24, 0, x16, 192, x17, x15, 128, x18)

inst_13:// rs1==f14, rs2==f4, rd==x22, fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xcee7468323917 and rm_val == 0  
// opcode: fle.d ; op1:f14; op2:f4; dest:x22; op1val:0x0; op2val:0xc00cee7468323917; valaddr_reg:x16; val_offset:208; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x22, f14, f4, 0, x16, 208, x17, x15, 144, x18)

inst_14:// rs1==f9, rs2==f22, rd==x7, fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x65657f10d48db and rm_val == 0  
// opcode: fle.d ; op1:f9; op2:f22; dest:x7; op1val:0x0; op2val:0x80065657f10d48db; valaddr_reg:x16; val_offset:224; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x7, f9, f22, 0, x16, 224, x17, x15, 160, x18)

inst_15:// rs1==f21, rs2==f12, rd==x19, fs1 == 1 and fe1 == 0x402 and fm1 == 0x1a04aee65a608 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f21; op2:f12; dest:x19; op1val:0xc021a04aee65a608; op2val:0x0; valaddr_reg:x16; val_offset:240; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x19, f21, f12, 0, x16, 240, x17, x15, 176, x18)

inst_16:// rs1==f4, rs2==f17, rd==x26, fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x402 and fm2 == 0x1a04aee65a608 and rm_val == 0  
// opcode: fle.d ; op1:f4; op2:f17; dest:x26; op1val:0x0; op2val:0xc021a04aee65a608; valaddr_reg:x16; val_offset:256; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x26, f4, f17, 0, x16, 256, x17, x15, 192, x18)

inst_17:// rs1==f15, rs2==f10, rd==x4, fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x85ef342c7a5c9 and rm_val == 0  
// opcode: fle.d ; op1:f15; op2:f10; dest:x4; op1val:0x0; op2val:0x85ef342c7a5c9; valaddr_reg:x16; val_offset:272; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x4, f15, f10, 0, x16, 272, x17, x15, 208, x18)

inst_18:// rs1==f28, rs2==f18, rd==x29, fs1 == 0 and fe1 == 0x3ff and fm1 == 0x2a038f94d730b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f28; op2:f18; dest:x29; op1val:0x3ff2a038f94d730b; op2val:0x0; valaddr_reg:x16; val_offset:288; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x29, f28, f18, 0, x16, 288, x17, x15, 224, x18)

inst_19:// rs1==f24, rs2==f23, rd==x12, fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x2a038f94d730b and rm_val == 0  
// opcode: fle.d ; op1:f24; op2:f23; dest:x12; op1val:0x0; op2val:0x3ff2a038f94d730b; valaddr_reg:x16; val_offset:304; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f24, f23, 0, x16, 304, x17, x15, 240, x18)

inst_20:// rs1==f17, rs2==f21, rd==x11, fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xa399f83b8d7e3 and rm_val == 0  
// opcode: fle.d ; op1:f17; op2:f21; dest:x11; op1val:0x0; op2val:0xa399f83b8d7e3; valaddr_reg:x16; val_offset:320; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x11, f17, f21, 0, x16, 320, x17, x15, 256, x18)
RVTEST_VALBASEMOV(x20, x16)
RVTEST_SIGBASE(x19,signature_x19_1)

inst_21:// rs1==f12, rs2==f1, rd==x15, fs1 == 0 and fe1 == 0x3ff and fm1 == 0x6c0679d004e5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f12; op2:f1; dest:x15; op1val:0x3ff6c0679d004e5b; op2val:0x0; valaddr_reg:x20; val_offset:336; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x15, f12, f1, 0, x20, 336, x21, x19, 0, x18)
RVTEST_VALBASEMOV(x16, x20)
RVTEST_SIGBASE(x15,signature_x15_3)

inst_22:// rs1==f25, rs2==f19, rd==x27, fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x6c0679d004e5b and rm_val == 0  
// opcode: fle.d ; op1:f25; op2:f19; dest:x27; op1val:0x0; op2val:0x3ff6c0679d004e5b; valaddr_reg:x16; val_offset:352; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x27, f25, f19, 0, x16, 352, x17, x15, 0, x18)

inst_23:// rs1==f26, rs2==f8, rd==x23, fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfee29476f2e06 and rm_val == 0  
// opcode: fle.d ; op1:f26; op2:f8; dest:x23; op1val:0x0; op2val:0xfee29476f2e06; valaddr_reg:x16; val_offset:368; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x23, f26, f8, 0, x16, 368, x17, x15, 16, x18)

inst_24:// rs1==f19, rs2==f13, rd==x20, fs1 == 0 and fe1 == 0x400 and fm1 == 0x1b91ae09e503b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f19; op2:f13; dest:x20; op1val:0x4001b91ae09e503b; op2val:0x0; valaddr_reg:x16; val_offset:384; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x20, f19, f13, 0, x16, 384, x17, x15, 32, x18)

inst_25:// rs1==f31, rs2==f2, rd==x10, fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x1b91ae09e503b and rm_val == 0  
// opcode: fle.d ; op1:f31; op2:f2; dest:x10; op1val:0x0; op2val:0x4001b91ae09e503b; valaddr_reg:x16; val_offset:400; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x10, f31, f2, 0, x16, 400, x17, x15, 48, x18)
RVTEST_VALBASEMOV(x20, x16)
RVTEST_SIGBASE(x19,signature_x19_2)

inst_26:// rs1==f7, rs2==f15, rd==x16, fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x035efa3d150a6 and rm_val == 0  
// opcode: fle.d ; op1:f7; op2:f15; dest:x16; op1val:0x0; op2val:0x35efa3d150a6; valaddr_reg:x20; val_offset:416; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x16, f7, f15, 0, x20, 416, x21, x19, 0, x18)
RVTEST_VALBASEMOV(x16, x20)
RVTEST_SIGBASE(x15,signature_x15_4)

inst_27:// rs1==f2, rs2==f26, rd==x3, fs1 == 0 and fe1 == 0x400 and fm1 == 0x77096ee4d2f12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f2; op2:f26; dest:x3; op1val:0x40077096ee4d2f12; op2val:0x0; valaddr_reg:x16; val_offset:432; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x3, f2, f26, 0, x16, 432, x17, x15, 0, x18)

inst_28:// rs1==f8, rs2==f7, rd==x24, fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x77096ee4d2f12 and rm_val == 0  
// opcode: fle.d ; op1:f8; op2:f7; dest:x24; op1val:0x0; op2val:0x40077096ee4d2f12; valaddr_reg:x16; val_offset:448; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x24, f8, f7, 0, x16, 448, x17, x15, 16, x18)

inst_29:// rs1==f3, rs2==f11, rd==x21, fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x5eb561bd4f6b8 and rm_val == 0  
// opcode: fle.d ; op1:f3; op2:f11; dest:x21; op1val:0x0; op2val:0x5eb561bd4f6b8; valaddr_reg:x16; val_offset:464; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x21, f3, f11, 0, x16, 464, x17, x15, 32, x18)

inst_30:// rs1==f13, rs2==f25, rd==x13, fs1 == 0 and fe1 == 0x402 and fm1 == 0x076ab4deeec91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f13; op2:f25; dest:x13; op1val:0x402076ab4deeec91; op2val:0x0; valaddr_reg:x16; val_offset:480; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x13, f13, f25, 0, x16, 480, x17, x15, 48, x18)

inst_31:// rs1==f27, rs2==f5, rd==x28, fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x076ab4deeec91 and rm_val == 0  
// opcode: fle.d ; op1:f27; op2:f5; dest:x28; op1val:0x0; op2val:0x402076ab4deeec91; valaddr_reg:x16; val_offset:496; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x28, f27, f5, 0, x16, 496, x17, x15, 64, x18)

inst_32:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x0e3e4312fc728 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x0; op2val:0xffc0e3e4312fc728; valaddr_reg:x16; val_offset:512; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 512, x17, x15, 80, x18)

inst_33:// fs1 == 1 and fe1 == 0x400 and fm1 == 0x2fa24c650ac14 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xc002fa24c650ac14; op2val:0x0; valaddr_reg:x16; val_offset:528; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 528, x17, x15, 96, x18)

inst_34:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x2fa24c650ac14 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x0; op2val:0xc002fa24c650ac14; valaddr_reg:x16; val_offset:544; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 544, x17, x15, 112, x18)

inst_35:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x0c1b6ea69558e and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x0; op2val:0xffe0c1b6ea69558e; valaddr_reg:x16; val_offset:560; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 560, x17, x15, 128, x18)

inst_36:// fs1 == 1 and fe1 == 0x402 and fm1 == 0x2d3be740985a9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xc022d3be740985a9; op2val:0x0; valaddr_reg:x16; val_offset:576; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 576, x17, x15, 144, x18)

inst_37:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x402 and fm2 == 0x2d3be740985a9 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x0; op2val:0xc022d3be740985a9; valaddr_reg:x16; val_offset:592; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 592, x17, x15, 160, x18)

inst_38:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x8805c5b3ba76f and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x0; op2val:0xffe8805c5b3ba76f; valaddr_reg:x16; val_offset:608; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 608, x17, x15, 176, x18)

inst_39:// fs1 == 1 and fe1 == 0x3ff and fm1 == 0x605e3d372e471 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xbff605e3d372e471; op2val:0x0; valaddr_reg:x16; val_offset:624; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 624, x17, x15, 192, x18)

inst_40:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x605e3d372e471 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x0; op2val:0xbff605e3d372e471; valaddr_reg:x16; val_offset:640; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 640, x17, x15, 208, x18)

inst_41:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xde7300593ddb7 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x0; op2val:0xffede7300593ddb7; valaddr_reg:x16; val_offset:656; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 656, x17, x15, 224, x18)

inst_42:// fs1 == 1 and fe1 == 0x3ff and fm1 == 0xae0d6ce341771 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xbffae0d6ce341771; op2val:0x0; valaddr_reg:x16; val_offset:672; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 672, x17, x15, 240, x18)

inst_43:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xae0d6ce341771 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x0; op2val:0xbffae0d6ce341771; valaddr_reg:x16; val_offset:688; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 688, x17, x15, 256, x18)

inst_44:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xd2b592ef4e4e6 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x0; op2val:0xffdd2b592ef4e4e6; valaddr_reg:x16; val_offset:704; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 704, x17, x15, 272, x18)

inst_45:// fs1 == 1 and fe1 == 0x402 and fm1 == 0x06300128a7be9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xc0206300128a7be9; op2val:0x0; valaddr_reg:x16; val_offset:720; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 720, x17, x15, 288, x18)

inst_46:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x402 and fm2 == 0x06300128a7be9 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x0; op2val:0xc0206300128a7be9; valaddr_reg:x16; val_offset:736; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 736, x17, x15, 304, x18)

inst_47:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x450c74c9b42e4 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x0; op2val:0x7fe450c74c9b42e4; valaddr_reg:x16; val_offset:752; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 752, x17, x15, 320, x18)

inst_48:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x242b3b0a4387a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x3ff242b3b0a4387a; op2val:0x0; valaddr_reg:x16; val_offset:768; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 768, x17, x15, 336, x18)

inst_49:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x242b3b0a4387a and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x0; op2val:0x3ff242b3b0a4387a; valaddr_reg:x16; val_offset:784; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 784, x17, x15, 352, x18)

inst_50:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xac44ace32d282 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x0; op2val:0x7feac44ace32d282; valaddr_reg:x16; val_offset:800; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 800, x17, x15, 368, x18)

inst_51:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x80f28c9e9c76b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x3ff80f28c9e9c76b; op2val:0x0; valaddr_reg:x16; val_offset:816; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 816, x17, x15, 384, x18)

inst_52:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x80f28c9e9c76b and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x0; op2val:0x3ff80f28c9e9c76b; valaddr_reg:x16; val_offset:832; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 832, x17, x15, 400, x18)

inst_53:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x09941946801c5 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x0; op2val:0x7fd09941946801c5; valaddr_reg:x16; val_offset:848; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 848, x17, x15, 416, x18)

inst_54:// fs1 == 0 and fe1 == 0x401 and fm1 == 0x2a6496228606e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x4012a6496228606e; op2val:0x0; valaddr_reg:x16; val_offset:864; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 864, x17, x15, 432, x18)

inst_55:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x2a6496228606e and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x0; op2val:0x4012a6496228606e; valaddr_reg:x16; val_offset:880; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 880, x17, x15, 448, x18)

inst_56:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x405e69652cae2 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x0; op2val:0x7fe405e69652cae2; valaddr_reg:x16; val_offset:896; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 896, x17, x15, 464, x18)

inst_57:// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x1ff65f57ff366 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x3ff1ff65f57ff366; op2val:0x0; valaddr_reg:x16; val_offset:912; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 912, x17, x15, 480, x18)

inst_58:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x1ff65f57ff366 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x0; op2val:0x3ff1ff65f57ff366; valaddr_reg:x16; val_offset:928; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 928, x17, x15, 496, x18)

inst_59:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7fc and fm2 == 0xe759ff97b7507 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x0; op2val:0x7fce759ff97b7507; valaddr_reg:x16; val_offset:944; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 944, x17, x15, 512, x18)

inst_60:// fs1 == 0 and fe1 == 0x401 and fm1 == 0x11c8af0ae0986 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x40111c8af0ae0986; op2val:0x0; valaddr_reg:x16; val_offset:960; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 960, x17, x15, 528, x18)

inst_61:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x11c8af0ae0986 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x0; op2val:0x40111c8af0ae0986; valaddr_reg:x16; val_offset:976; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 976, x17, x15, 544, x18)

inst_62:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x423d517f83eb0 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x423d517f83eb0 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800423d517f83eb0; op2val:0x800423d517f83eb0; valaddr_reg:x16; val_offset:992; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 992, x17, x15, 560, x18)

inst_63:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x423d517f83eb0 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x707836e56fe8b and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800423d517f83eb0; op2val:0xc01707836e56fe8b; valaddr_reg:x16; val_offset:1008; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1008, x17, x15, 576, x18)

inst_64:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x423d517f83eb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800423d517f83eb0; op2val:0x0; valaddr_reg:x16; val_offset:1024; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1024, x17, x15, 592, x18)

inst_65:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x423d517f83eb0 and fs2 == 1 and fe2 == 0x002 and fm2 == 0x4b32977d93970 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800423d517f83eb0; op2val:0x8024b32977d93970; valaddr_reg:x16; val_offset:1040; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1040, x17, x15, 608, x18)

inst_66:// fs1 == 1 and fe1 == 0x002 and fm1 == 0x4b32977d93970 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xd97133b894184 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x8024b32977d93970; op2val:0x800d97133b894184; valaddr_reg:x16; val_offset:1056; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1056, x17, x15, 624, x18)

inst_67:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x15be852c0ecf4 and fs2 == 1 and fe2 == 0x002 and fm2 == 0x4b32977d93970 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x80015be852c0ecf4; op2val:0x8024b32977d93970; valaddr_reg:x16; val_offset:1072; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1072, x17, x15, 640, x18)

inst_68:// fs1 == 1 and fe1 == 0x002 and fm1 == 0x4b32977d93970 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x15be852c0ecf4 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x8024b32977d93970; op2val:0x80015be852c0ecf4; valaddr_reg:x16; val_offset:1088; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1088, x17, x15, 656, x18)

inst_69:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x423d517f83eb0 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xd97133b894184 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800423d517f83eb0; op2val:0x800d97133b894184; valaddr_reg:x16; val_offset:1104; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1104, x17, x15, 672, x18)

inst_70:// fs1 == 1 and fe1 == 0x002 and fm1 == 0x4b32977d93970 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x879ccf8eb0579 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x8024b32977d93970; op2val:0x800879ccf8eb0579; valaddr_reg:x16; val_offset:1120; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1120, x17, x15, 688, x18)

inst_71:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0d8fae5b11a26 and fs2 == 1 and fe2 == 0x002 and fm2 == 0x4b32977d93970 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x8000d8fae5b11a26; op2val:0x8024b32977d93970; valaddr_reg:x16; val_offset:1136; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1136, x17, x15, 704, x18)

inst_72:// fs1 == 1 and fe1 == 0x002 and fm1 == 0x4b32977d93970 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0d8fae5b11a26 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x8024b32977d93970; op2val:0x8000d8fae5b11a26; valaddr_reg:x16; val_offset:1152; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1152, x17, x15, 720, x18)

inst_73:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x423d517f83eb0 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x879ccf8eb0579 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800423d517f83eb0; op2val:0x800879ccf8eb0579; valaddr_reg:x16; val_offset:1168; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1168, x17, x15, 736, x18)

inst_74:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x423d517f83eb0 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x299ba050fc0c8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800423d517f83eb0; op2val:0x800299ba050fc0c8; valaddr_reg:x16; val_offset:1184; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1184, x17, x15, 752, x18)

inst_75:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x299ba050fc0c8 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x423d517f83eb0 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800299ba050fc0c8; op2val:0x800423d517f83eb0; valaddr_reg:x16; val_offset:1200; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1200, x17, x15, 768, x18)

inst_76:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x423d517f83eb0 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x65657f10d48db and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800423d517f83eb0; op2val:0x80065657f10d48db; valaddr_reg:x16; val_offset:1216; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1216, x17, x15, 784, x18)

inst_77:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x65657f10d48db and fs2 == 1 and fe2 == 0x000 and fm2 == 0x423d517f83eb0 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x80065657f10d48db; op2val:0x800423d517f83eb0; valaddr_reg:x16; val_offset:1232; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1232, x17, x15, 800, x18)

inst_78:// fs1 == 1 and fe1 == 0x002 and fm1 == 0x4b32977d93970 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x85ef342c7a5c9 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x8024b32977d93970; op2val:0x85ef342c7a5c9; valaddr_reg:x16; val_offset:1248; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1248, x17, x15, 816, x18)

inst_79:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0d64b86ad9094 and fs2 == 1 and fe2 == 0x002 and fm2 == 0x4b32977d93970 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xd64b86ad9094; op2val:0x8024b32977d93970; valaddr_reg:x16; val_offset:1264; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1264, x17, x15, 832, x18)

inst_80:// fs1 == 1 and fe1 == 0x002 and fm1 == 0x4b32977d93970 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0d64b86ad9094 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x8024b32977d93970; op2val:0xd64b86ad9094; valaddr_reg:x16; val_offset:1280; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1280, x17, x15, 848, x18)

inst_81:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x423d517f83eb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x85ef342c7a5c9 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800423d517f83eb0; op2val:0x85ef342c7a5c9; valaddr_reg:x16; val_offset:1296; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1296, x17, x15, 864, x18)

inst_82:// fs1 == 1 and fe1 == 0x002 and fm1 == 0x4b32977d93970 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xa399f83b8d7e3 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x8024b32977d93970; op2val:0xa399f83b8d7e3; valaddr_reg:x16; val_offset:1312; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1312, x17, x15, 880, x18)

inst_83:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x105c326c5af30 and fs2 == 1 and fe2 == 0x002 and fm2 == 0x4b32977d93970 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x105c326c5af30; op2val:0x8024b32977d93970; valaddr_reg:x16; val_offset:1328; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1328, x17, x15, 896, x18)

inst_84:// fs1 == 1 and fe1 == 0x002 and fm1 == 0x4b32977d93970 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x105c326c5af30 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x8024b32977d93970; op2val:0x105c326c5af30; valaddr_reg:x16; val_offset:1344; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1344, x17, x15, 912, x18)

inst_85:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x423d517f83eb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xa399f83b8d7e3 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800423d517f83eb0; op2val:0xa399f83b8d7e3; valaddr_reg:x16; val_offset:1360; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1360, x17, x15, 928, x18)

inst_86:// fs1 == 1 and fe1 == 0x002 and fm1 == 0x4b32977d93970 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfee29476f2e06 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x8024b32977d93970; op2val:0xfee29476f2e06; valaddr_reg:x16; val_offset:1376; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1376, x17, x15, 944, x18)

inst_87:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x197d0ed8b1e34 and fs2 == 1 and fe2 == 0x002 and fm2 == 0x4b32977d93970 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x197d0ed8b1e34; op2val:0x8024b32977d93970; valaddr_reg:x16; val_offset:1392; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1392, x17, x15, 960, x18)

inst_88:// fs1 == 1 and fe1 == 0x002 and fm1 == 0x4b32977d93970 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x197d0ed8b1e34 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x8024b32977d93970; op2val:0x197d0ed8b1e34; valaddr_reg:x16; val_offset:1408; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1408, x17, x15, 976, x18)

inst_89:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x423d517f83eb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfee29476f2e06 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800423d517f83eb0; op2val:0xfee29476f2e06; valaddr_reg:x16; val_offset:1424; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1424, x17, x15, 992, x18)

inst_90:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x423d517f83eb0 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x069fbb598d312 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800423d517f83eb0; op2val:0x800069fbb598d312; valaddr_reg:x16; val_offset:1440; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1440, x17, x15, 1008, x18)

inst_91:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x069fbb598d312 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x035efa3d150a6 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800069fbb598d312; op2val:0x35efa3d150a6; valaddr_reg:x16; val_offset:1456; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1456, x17, x15, 1024, x18)

inst_92:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x21b5c662d267b and fs2 == 1 and fe2 == 0x000 and fm2 == 0x069fbb598d312 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x21b5c662d267b; op2val:0x800069fbb598d312; valaddr_reg:x16; val_offset:1472; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1472, x17, x15, 1040, x18)

inst_93:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x069fbb598d312 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x21b5c662d267b and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800069fbb598d312; op2val:0x21b5c662d267b; valaddr_reg:x16; val_offset:1488; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1488, x17, x15, 1056, x18)

inst_94:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x423d517f83eb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x035efa3d150a6 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800423d517f83eb0; op2val:0x35efa3d150a6; valaddr_reg:x16; val_offset:1504; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1504, x17, x15, 1072, x18)

inst_95:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x423d517f83eb0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x5eb561bd4f6b8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800423d517f83eb0; op2val:0x5eb561bd4f6b8; valaddr_reg:x16; val_offset:1520; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1520, x17, x15, 1088, x18)

inst_96:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x5eb561bd4f6b8 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x423d517f83eb0 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x5eb561bd4f6b8; op2val:0x800423d517f83eb0; valaddr_reg:x16; val_offset:1536; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1536, x17, x15, 1104, x18)

inst_97:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x423d517f83eb0 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x47f2e5cadc271 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800423d517f83eb0; op2val:0xffd47f2e5cadc271; valaddr_reg:x16; val_offset:1552; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1552, x17, x15, 1120, x18)

inst_98:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0x47f2e5cadc271 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x0e3e4312fc728 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffd47f2e5cadc271; op2val:0xffc0e3e4312fc728; valaddr_reg:x16; val_offset:1568; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1568, x17, x15, 1136, x18)

inst_99:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x1b4ac2dd761b7 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x47f2e5cadc271 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x8001b4ac2dd761b7; op2val:0xffd47f2e5cadc271; valaddr_reg:x16; val_offset:1584; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1584, x17, x15, 1152, x18)

inst_100:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0x47f2e5cadc271 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x1b4ac2dd761b7 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffd47f2e5cadc271; op2val:0x8001b4ac2dd761b7; valaddr_reg:x16; val_offset:1600; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1600, x17, x15, 1168, x18)

inst_101:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x423d517f83eb0 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x0e3e4312fc728 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800423d517f83eb0; op2val:0xffc0e3e4312fc728; valaddr_reg:x16; val_offset:1616; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1616, x17, x15, 1184, x18)

inst_102:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0x47f2e5cadc271 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x0c1b6ea69558e and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffd47f2e5cadc271; op2val:0xffe0c1b6ea69558e; valaddr_reg:x16; val_offset:1632; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1632, x17, x15, 1200, x18)

inst_103:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x6c4e25604ed00 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x47f2e5cadc271 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x8006c4e25604ed00; op2val:0xffd47f2e5cadc271; valaddr_reg:x16; val_offset:1648; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1648, x17, x15, 1216, x18)

inst_104:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0x47f2e5cadc271 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x6c4e25604ed00 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffd47f2e5cadc271; op2val:0x8006c4e25604ed00; valaddr_reg:x16; val_offset:1664; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1664, x17, x15, 1232, x18)

inst_105:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x423d517f83eb0 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x0c1b6ea69558e and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800423d517f83eb0; op2val:0xffe0c1b6ea69558e; valaddr_reg:x16; val_offset:1680; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1680, x17, x15, 1248, x18)

inst_106:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x423d517f83eb0 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800423d517f83eb0; op2val:0xfff0000000000000; valaddr_reg:x16; val_offset:1696; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1696, x17, x15, 1264, x18)

inst_107:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x8805c5b3ba76f and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xfff0000000000000; op2val:0xffe8805c5b3ba76f; valaddr_reg:x16; val_offset:1712; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1712, x17, x15, 1280, x18)

inst_108:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0fd6141352983 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x8000fd6141352983; op2val:0xfff0000000000000; valaddr_reg:x16; val_offset:1728; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1728, x17, x15, 1296, x18)

inst_109:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0fd6141352983 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xfff0000000000000; op2val:0x8000fd6141352983; valaddr_reg:x16; val_offset:1744; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1744, x17, x15, 1312, x18)

inst_110:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x423d517f83eb0 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x8805c5b3ba76f and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800423d517f83eb0; op2val:0xffe8805c5b3ba76f; valaddr_reg:x16; val_offset:1760; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1760, x17, x15, 1328, x18)

inst_111:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xde7300593ddb7 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xfff0000000000000; op2val:0xffede7300593ddb7; valaddr_reg:x16; val_offset:1776; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1776, x17, x15, 1344, x18)

inst_112:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x1353dad8f9fcc and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x8001353dad8f9fcc; op2val:0xfff0000000000000; valaddr_reg:x16; val_offset:1792; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1792, x17, x15, 1360, x18)

inst_113:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x1353dad8f9fcc and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xfff0000000000000; op2val:0x8001353dad8f9fcc; valaddr_reg:x16; val_offset:1808; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1808, x17, x15, 1376, x18)

inst_114:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x423d517f83eb0 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xde7300593ddb7 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800423d517f83eb0; op2val:0xffede7300593ddb7; valaddr_reg:x16; val_offset:1824; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1824, x17, x15, 1392, x18)

inst_115:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0x47f2e5cadc271 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xd2b592ef4e4e6 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffd47f2e5cadc271; op2val:0xffdd2b592ef4e4e6; valaddr_reg:x16; val_offset:1840; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1840, x17, x15, 1408, x18)

inst_116:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x5e443bf91c5dd and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x47f2e5cadc271 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x8005e443bf91c5dd; op2val:0xffd47f2e5cadc271; valaddr_reg:x16; val_offset:1856; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1856, x17, x15, 1424, x18)

inst_117:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0x47f2e5cadc271 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x5e443bf91c5dd and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffd47f2e5cadc271; op2val:0x8005e443bf91c5dd; valaddr_reg:x16; val_offset:1872; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1872, x17, x15, 1440, x18)

inst_118:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x423d517f83eb0 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xd2b592ef4e4e6 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800423d517f83eb0; op2val:0xffdd2b592ef4e4e6; valaddr_reg:x16; val_offset:1888; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1888, x17, x15, 1456, x18)

inst_119:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x450c74c9b42e4 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xfff0000000000000; op2val:0x7fe450c74c9b42e4; valaddr_reg:x16; val_offset:1904; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1904, x17, x15, 1472, x18)

inst_120:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0d2178c8e4bc2 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xd2178c8e4bc2; op2val:0xfff0000000000000; valaddr_reg:x16; val_offset:1920; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1920, x17, x15, 1488, x18)

inst_121:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0d2178c8e4bc2 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xfff0000000000000; op2val:0xd2178c8e4bc2; valaddr_reg:x16; val_offset:1936; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1936, x17, x15, 1504, x18)

inst_122:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x423d517f83eb0 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x450c74c9b42e4 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800423d517f83eb0; op2val:0x7fe450c74c9b42e4; valaddr_reg:x16; val_offset:1952; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1952, x17, x15, 1520, x18)

inst_123:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xac44ace32d282 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xfff0000000000000; op2val:0x7feac44ace32d282; valaddr_reg:x16; val_offset:1968; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1968, x17, x15, 1536, x18)

inst_124:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x114ce95016c16 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x114ce95016c16; op2val:0xfff0000000000000; valaddr_reg:x16; val_offset:1984; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1984, x17, x15, 1552, x18)

inst_125:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x114ce95016c16 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xfff0000000000000; op2val:0x114ce95016c16; valaddr_reg:x16; val_offset:2000; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 2000, x17, x15, 1568, x18)

inst_126:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x423d517f83eb0 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xac44ace32d282 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800423d517f83eb0; op2val:0x7feac44ace32d282; valaddr_reg:x16; val_offset:2016; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 2016, x17, x15, 1584, x18)
addi x16,x16,2032

inst_127:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0x47f2e5cadc271 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x09941946801c5 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffd47f2e5cadc271; op2val:0x7fd09941946801c5; valaddr_reg:x16; val_offset:0; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 0, x17, x15, 1600, x18)

inst_128:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x35a452e11324d and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x47f2e5cadc271 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x35a452e11324d; op2val:0xffd47f2e5cadc271; valaddr_reg:x16; val_offset:16; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 16, x17, x15, 1616, x18)

inst_129:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0x47f2e5cadc271 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x35a452e11324d and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffd47f2e5cadc271; op2val:0x35a452e11324d; valaddr_reg:x16; val_offset:32; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 32, x17, x15, 1632, x18)

inst_130:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x423d517f83eb0 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x09941946801c5 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800423d517f83eb0; op2val:0x7fd09941946801c5; valaddr_reg:x16; val_offset:48; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 48, x17, x15, 1648, x18)

inst_131:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x405e69652cae2 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xfff0000000000000; op2val:0x7fe405e69652cae2; valaddr_reg:x16; val_offset:64; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 64, x17, x15, 1664, x18)

inst_132:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0cf11346ee18e and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xcf11346ee18e; op2val:0xfff0000000000000; valaddr_reg:x16; val_offset:80; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 80, x17, x15, 1680, x18)

inst_133:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0cf11346ee18e and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xfff0000000000000; op2val:0xcf11346ee18e; valaddr_reg:x16; val_offset:96; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 96, x17, x15, 1696, x18)

inst_134:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x423d517f83eb0 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x405e69652cae2 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800423d517f83eb0; op2val:0x7fe405e69652cae2; valaddr_reg:x16; val_offset:112; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 112, x17, x15, 1712, x18)

inst_135:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0x47f2e5cadc271 and fs2 == 0 and fe2 == 0x7fc and fm2 == 0xe759ff97b7507 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffd47f2e5cadc271; op2val:0x7fce759ff97b7507; valaddr_reg:x16; val_offset:128; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 128, x17, x15, 1728, x18)

inst_136:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x3137cb6875068 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0x47f2e5cadc271 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x3137cb6875068; op2val:0xffd47f2e5cadc271; valaddr_reg:x16; val_offset:144; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 144, x17, x15, 1744, x18)

inst_137:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0x47f2e5cadc271 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x3137cb6875068 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffd47f2e5cadc271; op2val:0x3137cb6875068; valaddr_reg:x16; val_offset:160; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 160, x17, x15, 1760, x18)

inst_138:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x423d517f83eb0 and fs2 == 0 and fe2 == 0x7fc and fm2 == 0xe759ff97b7507 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800423d517f83eb0; op2val:0x7fce759ff97b7507; valaddr_reg:x16; val_offset:176; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 176, x17, x15, 1776, x18)

inst_139:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xd97133b894184 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xd97133b894184 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800d97133b894184; op2val:0x800d97133b894184; valaddr_reg:x16; val_offset:192; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 192, x17, x15, 1792, x18)

inst_140:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xd97133b894184 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xe3d32f95a320d and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800d97133b894184; op2val:0xbffe3d32f95a320d; valaddr_reg:x16; val_offset:208; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 208, x17, x15, 1808, x18)

inst_141:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xd97133b894184 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800d97133b894184; op2val:0x0; valaddr_reg:x16; val_offset:224; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 224, x17, x15, 1824, x18)

inst_142:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xd97133b894184 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x15be852c0ecf4 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800d97133b894184; op2val:0x80015be852c0ecf4; valaddr_reg:x16; val_offset:240; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 240, x17, x15, 1840, x18)

inst_143:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x15be852c0ecf4 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x423d517f83eb0 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x80015be852c0ecf4; op2val:0x800423d517f83eb0; valaddr_reg:x16; val_offset:256; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 256, x17, x15, 1856, x18)

inst_144:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xd97133b894184 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x423d517f83eb0 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800d97133b894184; op2val:0x800423d517f83eb0; valaddr_reg:x16; val_offset:272; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 272, x17, x15, 1872, x18)

inst_145:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xd97133b894184 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x879ccf8eb0579 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800d97133b894184; op2val:0x800879ccf8eb0579; valaddr_reg:x16; val_offset:288; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 288, x17, x15, 1888, x18)

inst_146:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x879ccf8eb0579 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xd97133b894184 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800879ccf8eb0579; op2val:0x800d97133b894184; valaddr_reg:x16; val_offset:304; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 304, x17, x15, 1904, x18)

inst_147:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x15be852c0ecf4 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x299ba050fc0c8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x80015be852c0ecf4; op2val:0x800299ba050fc0c8; valaddr_reg:x16; val_offset:320; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 320, x17, x15, 1920, x18)

inst_148:// fs1 == 1 and fe1 == 0x001 and fm1 == 0xa0144329d87cc and fs2 == 1 and fe2 == 0x000 and fm2 == 0x15be852c0ecf4 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x801a0144329d87cc; op2val:0x80015be852c0ecf4; valaddr_reg:x16; val_offset:336; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 336, x17, x15, 1936, x18)

inst_149:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x15be852c0ecf4 and fs2 == 1 and fe2 == 0x001 and fm2 == 0xa0144329d87cc and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x80015be852c0ecf4; op2val:0x801a0144329d87cc; valaddr_reg:x16; val_offset:352; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 352, x17, x15, 1952, x18)

inst_150:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xd97133b894184 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x299ba050fc0c8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800d97133b894184; op2val:0x800299ba050fc0c8; valaddr_reg:x16; val_offset:368; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 368, x17, x15, 1968, x18)

inst_151:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x15be852c0ecf4 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x65657f10d48db and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x80015be852c0ecf4; op2val:0x80065657f10d48db; valaddr_reg:x16; val_offset:384; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 384, x17, x15, 1984, x18)

inst_152:// fs1 == 1 and fe1 == 0x002 and fm1 == 0xfafb7b5426c47 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x15be852c0ecf4 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x802fafb7b5426c47; op2val:0x80015be852c0ecf4; valaddr_reg:x16; val_offset:400; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 400, x17, x15, 2000, x18)

inst_153:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x15be852c0ecf4 and fs2 == 1 and fe2 == 0x002 and fm2 == 0xfafb7b5426c47 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x80015be852c0ecf4; op2val:0x802fafb7b5426c47; valaddr_reg:x16; val_offset:416; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 416, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_5)

inst_154:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xd97133b894184 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x65657f10d48db and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800d97133b894184; op2val:0x80065657f10d48db; valaddr_reg:x16; val_offset:432; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 432, x17, x15, 0, x18)

inst_155:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xd97133b894184 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x85ef342c7a5c9 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800d97133b894184; op2val:0x85ef342c7a5c9; valaddr_reg:x16; val_offset:448; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 448, x17, x15, 16, x18)

inst_156:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x85ef342c7a5c9 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xd97133b894184 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x85ef342c7a5c9; op2val:0x800d97133b894184; valaddr_reg:x16; val_offset:464; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 464, x17, x15, 32, x18)

inst_157:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xd97133b894184 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xa399f83b8d7e3 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800d97133b894184; op2val:0xa399f83b8d7e3; valaddr_reg:x16; val_offset:480; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 480, x17, x15, 48, x18)

inst_158:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xa399f83b8d7e3 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xd97133b894184 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xa399f83b8d7e3; op2val:0x800d97133b894184; valaddr_reg:x16; val_offset:496; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 496, x17, x15, 64, x18)

inst_159:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xd97133b894184 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfee29476f2e06 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800d97133b894184; op2val:0xfee29476f2e06; valaddr_reg:x16; val_offset:512; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 512, x17, x15, 80, x18)

inst_160:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfee29476f2e06 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xd97133b894184 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xfee29476f2e06; op2val:0x800d97133b894184; valaddr_reg:x16; val_offset:528; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 528, x17, x15, 96, x18)

inst_161:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xd97133b894184 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x022ca6eace47f and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800d97133b894184; op2val:0x800022ca6eace47f; valaddr_reg:x16; val_offset:544; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 544, x17, x15, 112, x18)

inst_162:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x022ca6eace47f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x035efa3d150a6 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800022ca6eace47f; op2val:0x35efa3d150a6; valaddr_reg:x16; val_offset:560; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 560, x17, x15, 128, x18)

inst_163:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x5119bfdc380d2 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x022ca6eace47f and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x15119bfdc380d2; op2val:0x800022ca6eace47f; valaddr_reg:x16; val_offset:576; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 576, x17, x15, 144, x18)

inst_164:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x022ca6eace47f and fs2 == 0 and fe2 == 0x001 and fm2 == 0x5119bfdc380d2 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800022ca6eace47f; op2val:0x15119bfdc380d2; valaddr_reg:x16; val_offset:592; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 592, x17, x15, 160, x18)

inst_165:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xd97133b894184 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x035efa3d150a6 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800d97133b894184; op2val:0x35efa3d150a6; valaddr_reg:x16; val_offset:608; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 608, x17, x15, 176, x18)

inst_166:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x15be852c0ecf4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x5eb561bd4f6b8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x80015be852c0ecf4; op2val:0x5eb561bd4f6b8; valaddr_reg:x16; val_offset:624; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 624, x17, x15, 192, x18)

inst_167:// fs1 == 0 and fe1 == 0x002 and fm1 == 0xd98ae8b28d198 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x15be852c0ecf4 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x2d98ae8b28d198; op2val:0x80015be852c0ecf4; valaddr_reg:x16; val_offset:640; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 640, x17, x15, 208, x18)

inst_168:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x15be852c0ecf4 and fs2 == 0 and fe2 == 0x002 and fm2 == 0xd98ae8b28d198 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x80015be852c0ecf4; op2val:0x2d98ae8b28d198; valaddr_reg:x16; val_offset:656; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 656, x17, x15, 224, x18)

inst_169:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xd97133b894184 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x5eb561bd4f6b8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800d97133b894184; op2val:0x5eb561bd4f6b8; valaddr_reg:x16; val_offset:672; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 672, x17, x15, 240, x18)

inst_170:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xd97133b894184 and fs2 == 1 and fe2 == 0x7fb and fm2 == 0xae9e55abc765f and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800d97133b894184; op2val:0xffbae9e55abc765f; valaddr_reg:x16; val_offset:688; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 688, x17, x15, 256, x18)

inst_171:// fs1 == 1 and fe1 == 0x7fb and fm1 == 0xae9e55abc765f and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x0e3e4312fc728 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffbae9e55abc765f; op2val:0xffc0e3e4312fc728; valaddr_reg:x16; val_offset:704; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 704, x17, x15, 272, x18)

inst_172:// fs1 == 1 and fe1 == 0x001 and fm1 == 0x10eb9ca69d123 and fs2 == 1 and fe2 == 0x7fb and fm2 == 0xae9e55abc765f and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x80110eb9ca69d123; op2val:0xffbae9e55abc765f; valaddr_reg:x16; val_offset:720; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 720, x17, x15, 288, x18)

inst_173:// fs1 == 1 and fe1 == 0x7fb and fm1 == 0xae9e55abc765f and fs2 == 1 and fe2 == 0x001 and fm2 == 0x10eb9ca69d123 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffbae9e55abc765f; op2val:0x80110eb9ca69d123; valaddr_reg:x16; val_offset:736; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 736, x17, x15, 304, x18)

inst_174:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xd97133b894184 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x0e3e4312fc728 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800d97133b894184; op2val:0xffc0e3e4312fc728; valaddr_reg:x16; val_offset:752; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 752, x17, x15, 320, x18)

inst_175:// fs1 == 1 and fe1 == 0x7fb and fm1 == 0xae9e55abc765f and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x0c1b6ea69558e and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffbae9e55abc765f; op2val:0xffe0c1b6ea69558e; valaddr_reg:x16; val_offset:768; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 768, x17, x15, 336, x18)

inst_176:// fs1 == 1 and fe1 == 0x003 and fm1 == 0x0ec35d70c5080 and fs2 == 1 and fe2 == 0x7fb and fm2 == 0xae9e55abc765f and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x8030ec35d70c5080; op2val:0xffbae9e55abc765f; valaddr_reg:x16; val_offset:784; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 784, x17, x15, 352, x18)

inst_177:// fs1 == 1 and fe1 == 0x7fb and fm1 == 0xae9e55abc765f and fs2 == 1 and fe2 == 0x003 and fm2 == 0x0ec35d70c5080 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffbae9e55abc765f; op2val:0x8030ec35d70c5080; valaddr_reg:x16; val_offset:800; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 800, x17, x15, 368, x18)

inst_178:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xd97133b894184 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x0c1b6ea69558e and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800d97133b894184; op2val:0xffe0c1b6ea69558e; valaddr_reg:x16; val_offset:816; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 816, x17, x15, 384, x18)

inst_179:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xd97133b894184 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800d97133b894184; op2val:0xfff0000000000000; valaddr_reg:x16; val_offset:832; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 832, x17, x15, 400, x18)

inst_180:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x9e5cc8c139f1c and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x8009e5cc8c139f1c; op2val:0xfff0000000000000; valaddr_reg:x16; val_offset:848; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 848, x17, x15, 416, x18)

inst_181:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x9e5cc8c139f1c and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xfff0000000000000; op2val:0x8009e5cc8c139f1c; valaddr_reg:x16; val_offset:864; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 864, x17, x15, 432, x18)

inst_182:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xd97133b894184 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x8805c5b3ba76f and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800d97133b894184; op2val:0xffe8805c5b3ba76f; valaddr_reg:x16; val_offset:880; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 880, x17, x15, 448, x18)

inst_183:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xc1468c79c3df8 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800c1468c79c3df8; op2val:0xfff0000000000000; valaddr_reg:x16; val_offset:896; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 896, x17, x15, 464, x18)

inst_184:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xc1468c79c3df8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xfff0000000000000; op2val:0x800c1468c79c3df8; valaddr_reg:x16; val_offset:912; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 912, x17, x15, 480, x18)

inst_185:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xd97133b894184 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xde7300593ddb7 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800d97133b894184; op2val:0xffede7300593ddb7; valaddr_reg:x16; val_offset:928; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 928, x17, x15, 496, x18)

inst_186:// fs1 == 1 and fe1 == 0x7fb and fm1 == 0xae9e55abc765f and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xd2b592ef4e4e6 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffbae9e55abc765f; op2val:0xffdd2b592ef4e4e6; valaddr_reg:x16; val_offset:944; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 944, x17, x15, 512, x18)

inst_187:// fs1 == 1 and fe1 == 0x002 and fm1 == 0xd7552bdd8dd50 and fs2 == 1 and fe2 == 0x7fb and fm2 == 0xae9e55abc765f and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x802d7552bdd8dd50; op2val:0xffbae9e55abc765f; valaddr_reg:x16; val_offset:960; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 960, x17, x15, 528, x18)

inst_188:// fs1 == 1 and fe1 == 0x7fb and fm1 == 0xae9e55abc765f and fs2 == 1 and fe2 == 0x002 and fm2 == 0xd7552bdd8dd50 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffbae9e55abc765f; op2val:0x802d7552bdd8dd50; valaddr_reg:x16; val_offset:976; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 976, x17, x15, 544, x18)

inst_189:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xd97133b894184 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xd2b592ef4e4e6 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800d97133b894184; op2val:0xffdd2b592ef4e4e6; valaddr_reg:x16; val_offset:992; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 992, x17, x15, 560, x18)

inst_190:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x834eb7d8ef590 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x834eb7d8ef590; op2val:0xfff0000000000000; valaddr_reg:x16; val_offset:1008; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1008, x17, x15, 576, x18)

inst_191:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x834eb7d8ef590 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xfff0000000000000; op2val:0x834eb7d8ef590; valaddr_reg:x16; val_offset:1024; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1024, x17, x15, 592, x18)

inst_192:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xd97133b894184 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x450c74c9b42e4 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800d97133b894184; op2val:0x7fe450c74c9b42e4; valaddr_reg:x16; val_offset:1040; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1040, x17, x15, 608, x18)

inst_193:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xad011d20e38de and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xad011d20e38de; op2val:0xfff0000000000000; valaddr_reg:x16; val_offset:1056; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1056, x17, x15, 624, x18)

inst_194:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xad011d20e38de and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xfff0000000000000; op2val:0xad011d20e38de; valaddr_reg:x16; val_offset:1072; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1072, x17, x15, 640, x18)

inst_195:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xd97133b894184 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xac44ace32d282 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800d97133b894184; op2val:0x7feac44ace32d282; valaddr_reg:x16; val_offset:1088; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1088, x17, x15, 656, x18)

inst_196:// fs1 == 1 and fe1 == 0x7fb and fm1 == 0xae9e55abc765f and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x09941946801c5 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffbae9e55abc765f; op2val:0x7fd09941946801c5; valaddr_reg:x16; val_offset:1104; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1104, x17, x15, 672, x18)

inst_197:// fs1 == 0 and fe1 == 0x002 and fm1 == 0x0c359e655fb81 and fs2 == 1 and fe2 == 0x7fb and fm2 == 0xae9e55abc765f and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x20c359e655fb81; op2val:0xffbae9e55abc765f; valaddr_reg:x16; val_offset:1120; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1120, x17, x15, 688, x18)

inst_198:// fs1 == 1 and fe1 == 0x7fb and fm1 == 0xae9e55abc765f and fs2 == 0 and fe2 == 0x002 and fm2 == 0x0c359e655fb81 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffbae9e55abc765f; op2val:0x20c359e655fb81; valaddr_reg:x16; val_offset:1136; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1136, x17, x15, 704, x18)

inst_199:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xd97133b894184 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x09941946801c5 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800d97133b894184; op2val:0x7fd09941946801c5; valaddr_reg:x16; val_offset:1152; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1152, x17, x15, 720, x18)

inst_200:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x816ac0c54cf8a and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x816ac0c54cf8a; op2val:0xfff0000000000000; valaddr_reg:x16; val_offset:1168; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1168, x17, x15, 736, x18)

inst_201:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x816ac0c54cf8a and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xfff0000000000000; op2val:0x816ac0c54cf8a; valaddr_reg:x16; val_offset:1184; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1184, x17, x15, 752, x18)

inst_202:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xd97133b894184 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x405e69652cae2 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800d97133b894184; op2val:0x7fe405e69652cae2; valaddr_reg:x16; val_offset:1200; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1200, x17, x15, 768, x18)

inst_203:// fs1 == 1 and fe1 == 0x7fb and fm1 == 0xae9e55abc765f and fs2 == 0 and fe2 == 0x7fc and fm2 == 0xe759ff97b7507 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffbae9e55abc765f; op2val:0x7fce759ff97b7507; valaddr_reg:x16; val_offset:1216; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1216, x17, x15, 784, x18)

inst_204:// fs1 == 0 and fe1 == 0x001 and fm1 == 0xec2df2149240f and fs2 == 1 and fe2 == 0x7fb and fm2 == 0xae9e55abc765f and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x1ec2df2149240f; op2val:0xffbae9e55abc765f; valaddr_reg:x16; val_offset:1232; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1232, x17, x15, 800, x18)

inst_205:// fs1 == 1 and fe1 == 0x7fb and fm1 == 0xae9e55abc765f and fs2 == 0 and fe2 == 0x001 and fm2 == 0xec2df2149240f and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffbae9e55abc765f; op2val:0x1ec2df2149240f; valaddr_reg:x16; val_offset:1248; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1248, x17, x15, 816, x18)

inst_206:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xd97133b894184 and fs2 == 0 and fe2 == 0x7fc and fm2 == 0xe759ff97b7507 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800d97133b894184; op2val:0x7fce759ff97b7507; valaddr_reg:x16; val_offset:1264; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1264, x17, x15, 832, x18)

inst_207:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x879ccf8eb0579 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x879ccf8eb0579 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800879ccf8eb0579; op2val:0x800879ccf8eb0579; valaddr_reg:x16; val_offset:1280; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1280, x17, x15, 848, x18)

inst_208:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x879ccf8eb0579 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x2dbf77d539bae and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800879ccf8eb0579; op2val:0xbff2dbf77d539bae; valaddr_reg:x16; val_offset:1296; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1296, x17, x15, 864, x18)

inst_209:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x879ccf8eb0579 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800879ccf8eb0579; op2val:0x0; valaddr_reg:x16; val_offset:1312; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1312, x17, x15, 880, x18)

inst_210:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x879ccf8eb0579 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0d8fae5b11a26 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800879ccf8eb0579; op2val:0x8000d8fae5b11a26; valaddr_reg:x16; val_offset:1328; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1328, x17, x15, 896, x18)

inst_211:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0d8fae5b11a26 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x423d517f83eb0 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x8000d8fae5b11a26; op2val:0x800423d517f83eb0; valaddr_reg:x16; val_offset:1344; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1344, x17, x15, 912, x18)

inst_212:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x879ccf8eb0579 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x423d517f83eb0 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800879ccf8eb0579; op2val:0x800423d517f83eb0; valaddr_reg:x16; val_offset:1360; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1360, x17, x15, 928, x18)

inst_213:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0d8fae5b11a26 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x299ba050fc0c8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x8000d8fae5b11a26; op2val:0x800299ba050fc0c8; valaddr_reg:x16; val_offset:1376; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1376, x17, x15, 944, x18)

inst_214:// fs1 == 1 and fe1 == 0x001 and fm1 == 0xa0144329d87cc and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0d8fae5b11a26 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x801a0144329d87cc; op2val:0x8000d8fae5b11a26; valaddr_reg:x16; val_offset:1392; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1392, x17, x15, 960, x18)

inst_215:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0d8fae5b11a26 and fs2 == 1 and fe2 == 0x001 and fm2 == 0xa0144329d87cc and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x8000d8fae5b11a26; op2val:0x801a0144329d87cc; valaddr_reg:x16; val_offset:1408; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1408, x17, x15, 976, x18)

inst_216:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x879ccf8eb0579 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x299ba050fc0c8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800879ccf8eb0579; op2val:0x800299ba050fc0c8; valaddr_reg:x16; val_offset:1424; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1424, x17, x15, 992, x18)

inst_217:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0d8fae5b11a26 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x65657f10d48db and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x8000d8fae5b11a26; op2val:0x80065657f10d48db; valaddr_reg:x16; val_offset:1440; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1440, x17, x15, 1008, x18)

inst_218:// fs1 == 1 and fe1 == 0x002 and fm1 == 0xfafb7b5426c47 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0d8fae5b11a26 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x802fafb7b5426c47; op2val:0x8000d8fae5b11a26; valaddr_reg:x16; val_offset:1456; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1456, x17, x15, 1024, x18)

inst_219:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0d8fae5b11a26 and fs2 == 1 and fe2 == 0x002 and fm2 == 0xfafb7b5426c47 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x8000d8fae5b11a26; op2val:0x802fafb7b5426c47; valaddr_reg:x16; val_offset:1472; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1472, x17, x15, 1040, x18)

inst_220:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x879ccf8eb0579 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x65657f10d48db and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800879ccf8eb0579; op2val:0x80065657f10d48db; valaddr_reg:x16; val_offset:1488; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1488, x17, x15, 1056, x18)

inst_221:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x879ccf8eb0579 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x85ef342c7a5c9 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800879ccf8eb0579; op2val:0x85ef342c7a5c9; valaddr_reg:x16; val_offset:1504; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1504, x17, x15, 1072, x18)

inst_222:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x85ef342c7a5c9 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x879ccf8eb0579 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x85ef342c7a5c9; op2val:0x800879ccf8eb0579; valaddr_reg:x16; val_offset:1520; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1520, x17, x15, 1088, x18)

inst_223:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x879ccf8eb0579 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xa399f83b8d7e3 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800879ccf8eb0579; op2val:0xa399f83b8d7e3; valaddr_reg:x16; val_offset:1536; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1536, x17, x15, 1104, x18)

inst_224:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xa399f83b8d7e3 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x879ccf8eb0579 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xa399f83b8d7e3; op2val:0x800879ccf8eb0579; valaddr_reg:x16; val_offset:1552; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1552, x17, x15, 1120, x18)

inst_225:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x879ccf8eb0579 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfee29476f2e06 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800879ccf8eb0579; op2val:0xfee29476f2e06; valaddr_reg:x16; val_offset:1568; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1568, x17, x15, 1136, x18)

inst_226:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfee29476f2e06 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x879ccf8eb0579 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xfee29476f2e06; op2val:0x800879ccf8eb0579; valaddr_reg:x16; val_offset:1584; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1584, x17, x15, 1152, x18)

inst_227:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x879ccf8eb0579 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x015b2b091b5d1 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800879ccf8eb0579; op2val:0x800015b2b091b5d1; valaddr_reg:x16; val_offset:1600; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1600, x17, x15, 1168, x18)

inst_228:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x015b2b091b5d1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x035efa3d150a6 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800015b2b091b5d1; op2val:0x35efa3d150a6; valaddr_reg:x16; val_offset:1616; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1616, x17, x15, 1184, x18)

inst_229:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x5119bfdc380d2 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x015b2b091b5d1 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x15119bfdc380d2; op2val:0x800015b2b091b5d1; valaddr_reg:x16; val_offset:1632; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1632, x17, x15, 1200, x18)

inst_230:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x015b2b091b5d1 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x5119bfdc380d2 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800015b2b091b5d1; op2val:0x15119bfdc380d2; valaddr_reg:x16; val_offset:1648; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1648, x17, x15, 1216, x18)

inst_231:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x879ccf8eb0579 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x035efa3d150a6 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800879ccf8eb0579; op2val:0x35efa3d150a6; valaddr_reg:x16; val_offset:1664; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1664, x17, x15, 1232, x18)

inst_232:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0d8fae5b11a26 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x5eb561bd4f6b8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x8000d8fae5b11a26; op2val:0x5eb561bd4f6b8; valaddr_reg:x16; val_offset:1680; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1680, x17, x15, 1248, x18)

inst_233:// fs1 == 0 and fe1 == 0x002 and fm1 == 0xd98ae8b28d198 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0d8fae5b11a26 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x2d98ae8b28d198; op2val:0x8000d8fae5b11a26; valaddr_reg:x16; val_offset:1696; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1696, x17, x15, 1264, x18)

inst_234:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0d8fae5b11a26 and fs2 == 0 and fe2 == 0x002 and fm2 == 0xd98ae8b28d198 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x8000d8fae5b11a26; op2val:0x2d98ae8b28d198; valaddr_reg:x16; val_offset:1712; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1712, x17, x15, 1280, x18)

inst_235:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x879ccf8eb0579 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x5eb561bd4f6b8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800879ccf8eb0579; op2val:0x5eb561bd4f6b8; valaddr_reg:x16; val_offset:1728; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1728, x17, x15, 1296, x18)

inst_236:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x879ccf8eb0579 and fs2 == 1 and fe2 == 0x7fb and fm2 == 0x0c90875ccb5d8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800879ccf8eb0579; op2val:0xffb0c90875ccb5d8; valaddr_reg:x16; val_offset:1744; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1744, x17, x15, 1312, x18)

inst_237:// fs1 == 1 and fe1 == 0x7fb and fm1 == 0x0c90875ccb5d8 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x0e3e4312fc728 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffb0c90875ccb5d8; op2val:0xffc0e3e4312fc728; valaddr_reg:x16; val_offset:1760; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1760, x17, x15, 1328, x18)

inst_238:// fs1 == 1 and fe1 == 0x001 and fm1 == 0x10eb9ca69d123 and fs2 == 1 and fe2 == 0x7fb and fm2 == 0x0c90875ccb5d8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x80110eb9ca69d123; op2val:0xffb0c90875ccb5d8; valaddr_reg:x16; val_offset:1776; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1776, x17, x15, 1344, x18)

inst_239:// fs1 == 1 and fe1 == 0x7fb and fm1 == 0x0c90875ccb5d8 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x10eb9ca69d123 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffb0c90875ccb5d8; op2val:0x80110eb9ca69d123; valaddr_reg:x16; val_offset:1792; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1792, x17, x15, 1360, x18)

inst_240:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x879ccf8eb0579 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x0e3e4312fc728 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800879ccf8eb0579; op2val:0xffc0e3e4312fc728; valaddr_reg:x16; val_offset:1808; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1808, x17, x15, 1376, x18)

inst_241:// fs1 == 1 and fe1 == 0x7fb and fm1 == 0x0c90875ccb5d8 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x0c1b6ea69558e and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffb0c90875ccb5d8; op2val:0xffe0c1b6ea69558e; valaddr_reg:x16; val_offset:1824; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1824, x17, x15, 1392, x18)

inst_242:// fs1 == 1 and fe1 == 0x003 and fm1 == 0x0ec35d70c5080 and fs2 == 1 and fe2 == 0x7fb and fm2 == 0x0c90875ccb5d8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x8030ec35d70c5080; op2val:0xffb0c90875ccb5d8; valaddr_reg:x16; val_offset:1840; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1840, x17, x15, 1408, x18)

inst_243:// fs1 == 1 and fe1 == 0x7fb and fm1 == 0x0c90875ccb5d8 and fs2 == 1 and fe2 == 0x003 and fm2 == 0x0ec35d70c5080 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffb0c90875ccb5d8; op2val:0x8030ec35d70c5080; valaddr_reg:x16; val_offset:1856; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1856, x17, x15, 1424, x18)

inst_244:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x879ccf8eb0579 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x0c1b6ea69558e and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800879ccf8eb0579; op2val:0xffe0c1b6ea69558e; valaddr_reg:x16; val_offset:1872; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1872, x17, x15, 1440, x18)

inst_245:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x879ccf8eb0579 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x4fb4a933fe34f and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800879ccf8eb0579; op2val:0xffe4fb4a933fe34f; valaddr_reg:x16; val_offset:1888; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1888, x17, x15, 1456, x18)

inst_246:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x4fb4a933fe34f and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x8805c5b3ba76f and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe4fb4a933fe34f; op2val:0xffe8805c5b3ba76f; valaddr_reg:x16; val_offset:1904; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1904, x17, x15, 1472, x18)

inst_247:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x9e5cc8c139f1c and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x4fb4a933fe34f and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x8009e5cc8c139f1c; op2val:0xffe4fb4a933fe34f; valaddr_reg:x16; val_offset:1920; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1920, x17, x15, 1488, x18)

inst_248:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x4fb4a933fe34f and fs2 == 1 and fe2 == 0x000 and fm2 == 0x9e5cc8c139f1c and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe4fb4a933fe34f; op2val:0x8009e5cc8c139f1c; valaddr_reg:x16; val_offset:1936; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1936, x17, x15, 1504, x18)

inst_249:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x879ccf8eb0579 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x8805c5b3ba76f and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800879ccf8eb0579; op2val:0xffe8805c5b3ba76f; valaddr_reg:x16; val_offset:1952; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1952, x17, x15, 1520, x18)

inst_250:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x4fb4a933fe34f and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xde7300593ddb7 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe4fb4a933fe34f; op2val:0xffede7300593ddb7; valaddr_reg:x16; val_offset:1968; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1968, x17, x15, 1536, x18)

inst_251:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xc1468c79c3df8 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x4fb4a933fe34f and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800c1468c79c3df8; op2val:0xffe4fb4a933fe34f; valaddr_reg:x16; val_offset:1984; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1984, x17, x15, 1552, x18)

inst_252:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x4fb4a933fe34f and fs2 == 1 and fe2 == 0x000 and fm2 == 0xc1468c79c3df8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe4fb4a933fe34f; op2val:0x800c1468c79c3df8; valaddr_reg:x16; val_offset:2000; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 2000, x17, x15, 1568, x18)

inst_253:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x879ccf8eb0579 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xde7300593ddb7 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800879ccf8eb0579; op2val:0xffede7300593ddb7; valaddr_reg:x16; val_offset:2016; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 2016, x17, x15, 1584, x18)
addi x16,x16,2032

inst_254:// fs1 == 1 and fe1 == 0x7fb and fm1 == 0x0c90875ccb5d8 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xd2b592ef4e4e6 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffb0c90875ccb5d8; op2val:0xffdd2b592ef4e4e6; valaddr_reg:x16; val_offset:0; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 0, x17, x15, 1600, x18)

inst_255:// fs1 == 1 and fe1 == 0x002 and fm1 == 0xd7552bdd8dd50 and fs2 == 1 and fe2 == 0x7fb and fm2 == 0x0c90875ccb5d8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x802d7552bdd8dd50; op2val:0xffb0c90875ccb5d8; valaddr_reg:x16; val_offset:16; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 16, x17, x15, 1616, x18)

inst_256:// fs1 == 1 and fe1 == 0x7fb and fm1 == 0x0c90875ccb5d8 and fs2 == 1 and fe2 == 0x002 and fm2 == 0xd7552bdd8dd50 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffb0c90875ccb5d8; op2val:0x802d7552bdd8dd50; valaddr_reg:x16; val_offset:32; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 32, x17, x15, 1632, x18)

inst_257:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x879ccf8eb0579 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xd2b592ef4e4e6 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800879ccf8eb0579; op2val:0xffdd2b592ef4e4e6; valaddr_reg:x16; val_offset:48; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 48, x17, x15, 1648, x18)

inst_258:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x4fb4a933fe34f and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x450c74c9b42e4 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe4fb4a933fe34f; op2val:0x7fe450c74c9b42e4; valaddr_reg:x16; val_offset:64; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 64, x17, x15, 1664, x18)

inst_259:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x834eb7d8ef590 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x4fb4a933fe34f and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x834eb7d8ef590; op2val:0xffe4fb4a933fe34f; valaddr_reg:x16; val_offset:80; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 80, x17, x15, 1680, x18)

inst_260:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x4fb4a933fe34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x834eb7d8ef590 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe4fb4a933fe34f; op2val:0x834eb7d8ef590; valaddr_reg:x16; val_offset:96; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 96, x17, x15, 1696, x18)

inst_261:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x879ccf8eb0579 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x450c74c9b42e4 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800879ccf8eb0579; op2val:0x7fe450c74c9b42e4; valaddr_reg:x16; val_offset:112; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 112, x17, x15, 1712, x18)

inst_262:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x4fb4a933fe34f and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xac44ace32d282 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe4fb4a933fe34f; op2val:0x7feac44ace32d282; valaddr_reg:x16; val_offset:128; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 128, x17, x15, 1728, x18)

inst_263:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xad011d20e38de and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x4fb4a933fe34f and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xad011d20e38de; op2val:0xffe4fb4a933fe34f; valaddr_reg:x16; val_offset:144; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 144, x17, x15, 1744, x18)

inst_264:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x4fb4a933fe34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0xad011d20e38de and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe4fb4a933fe34f; op2val:0xad011d20e38de; valaddr_reg:x16; val_offset:160; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 160, x17, x15, 1760, x18)

inst_265:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x879ccf8eb0579 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xac44ace32d282 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800879ccf8eb0579; op2val:0x7feac44ace32d282; valaddr_reg:x16; val_offset:176; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 176, x17, x15, 1776, x18)

inst_266:// fs1 == 1 and fe1 == 0x7fb and fm1 == 0x0c90875ccb5d8 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x09941946801c5 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffb0c90875ccb5d8; op2val:0x7fd09941946801c5; valaddr_reg:x16; val_offset:192; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 192, x17, x15, 1792, x18)

inst_267:// fs1 == 0 and fe1 == 0x002 and fm1 == 0x0c359e655fb81 and fs2 == 1 and fe2 == 0x7fb and fm2 == 0x0c90875ccb5d8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x20c359e655fb81; op2val:0xffb0c90875ccb5d8; valaddr_reg:x16; val_offset:208; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 208, x17, x15, 1808, x18)

inst_268:// fs1 == 1 and fe1 == 0x7fb and fm1 == 0x0c90875ccb5d8 and fs2 == 0 and fe2 == 0x002 and fm2 == 0x0c359e655fb81 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffb0c90875ccb5d8; op2val:0x20c359e655fb81; valaddr_reg:x16; val_offset:224; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 224, x17, x15, 1824, x18)

inst_269:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x879ccf8eb0579 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x09941946801c5 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800879ccf8eb0579; op2val:0x7fd09941946801c5; valaddr_reg:x16; val_offset:240; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 240, x17, x15, 1840, x18)

inst_270:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x4fb4a933fe34f and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x405e69652cae2 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe4fb4a933fe34f; op2val:0x7fe405e69652cae2; valaddr_reg:x16; val_offset:256; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 256, x17, x15, 1856, x18)

inst_271:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x816ac0c54cf8a and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x4fb4a933fe34f and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x816ac0c54cf8a; op2val:0xffe4fb4a933fe34f; valaddr_reg:x16; val_offset:272; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 272, x17, x15, 1872, x18)

inst_272:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x4fb4a933fe34f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x816ac0c54cf8a and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe4fb4a933fe34f; op2val:0x816ac0c54cf8a; valaddr_reg:x16; val_offset:288; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 288, x17, x15, 1888, x18)

inst_273:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x879ccf8eb0579 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x405e69652cae2 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800879ccf8eb0579; op2val:0x7fe405e69652cae2; valaddr_reg:x16; val_offset:304; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 304, x17, x15, 1904, x18)

inst_274:// fs1 == 1 and fe1 == 0x7fb and fm1 == 0x0c90875ccb5d8 and fs2 == 0 and fe2 == 0x7fc and fm2 == 0xe759ff97b7507 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffb0c90875ccb5d8; op2val:0x7fce759ff97b7507; valaddr_reg:x16; val_offset:320; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 320, x17, x15, 1920, x18)

inst_275:// fs1 == 0 and fe1 == 0x001 and fm1 == 0xec2df2149240f and fs2 == 1 and fe2 == 0x7fb and fm2 == 0x0c90875ccb5d8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x1ec2df2149240f; op2val:0xffb0c90875ccb5d8; valaddr_reg:x16; val_offset:336; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 336, x17, x15, 1936, x18)

inst_276:// fs1 == 1 and fe1 == 0x7fb and fm1 == 0x0c90875ccb5d8 and fs2 == 0 and fe2 == 0x001 and fm2 == 0xec2df2149240f and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffb0c90875ccb5d8; op2val:0x1ec2df2149240f; valaddr_reg:x16; val_offset:352; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 352, x17, x15, 1952, x18)

inst_277:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x879ccf8eb0579 and fs2 == 0 and fe2 == 0x7fc and fm2 == 0xe759ff97b7507 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800879ccf8eb0579; op2val:0x7fce759ff97b7507; valaddr_reg:x16; val_offset:368; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 368, x17, x15, 1968, x18)

inst_278:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x299ba050fc0c8 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x299ba050fc0c8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800299ba050fc0c8; op2val:0x800299ba050fc0c8; valaddr_reg:x16; val_offset:384; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 384, x17, x15, 1984, x18)

inst_279:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x299ba050fc0c8 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xcee7468323917 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800299ba050fc0c8; op2val:0xc00cee7468323917; valaddr_reg:x16; val_offset:400; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 400, x17, x15, 2000, x18)

inst_280:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x299ba050fc0c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800299ba050fc0c8; op2val:0x0; valaddr_reg:x16; val_offset:416; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 416, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_6)

inst_281:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x299ba050fc0c8 and fs2 == 1 and fe2 == 0x001 and fm2 == 0xa0144329d87cc and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800299ba050fc0c8; op2val:0x801a0144329d87cc; valaddr_reg:x16; val_offset:432; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 432, x17, x15, 0, x18)

inst_282:// fs1 == 1 and fe1 == 0x001 and fm1 == 0xa0144329d87cc and fs2 == 1 and fe2 == 0x000 and fm2 == 0xd97133b894184 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x801a0144329d87cc; op2val:0x800d97133b894184; valaddr_reg:x16; val_offset:448; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 448, x17, x15, 16, x18)

inst_283:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x299ba050fc0c8 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xd97133b894184 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800299ba050fc0c8; op2val:0x800d97133b894184; valaddr_reg:x16; val_offset:464; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 464, x17, x15, 32, x18)

inst_284:// fs1 == 1 and fe1 == 0x001 and fm1 == 0xa0144329d87cc and fs2 == 1 and fe2 == 0x000 and fm2 == 0x879ccf8eb0579 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x801a0144329d87cc; op2val:0x800879ccf8eb0579; valaddr_reg:x16; val_offset:480; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 480, x17, x15, 48, x18)

inst_285:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x299ba050fc0c8 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x879ccf8eb0579 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800299ba050fc0c8; op2val:0x800879ccf8eb0579; valaddr_reg:x16; val_offset:496; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 496, x17, x15, 64, x18)

inst_286:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x299ba050fc0c8 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x65657f10d48db and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800299ba050fc0c8; op2val:0x80065657f10d48db; valaddr_reg:x16; val_offset:512; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 512, x17, x15, 80, x18)

inst_287:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x65657f10d48db and fs2 == 1 and fe2 == 0x000 and fm2 == 0x299ba050fc0c8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x80065657f10d48db; op2val:0x800299ba050fc0c8; valaddr_reg:x16; val_offset:528; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 528, x17, x15, 96, x18)

inst_288:// fs1 == 1 and fe1 == 0x001 and fm1 == 0xa0144329d87cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x85ef342c7a5c9 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x801a0144329d87cc; op2val:0x85ef342c7a5c9; valaddr_reg:x16; val_offset:544; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 544, x17, x15, 112, x18)

inst_289:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0d64b86ad9094 and fs2 == 1 and fe2 == 0x001 and fm2 == 0xa0144329d87cc and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xd64b86ad9094; op2val:0x801a0144329d87cc; valaddr_reg:x16; val_offset:560; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 560, x17, x15, 128, x18)

inst_290:// fs1 == 1 and fe1 == 0x001 and fm1 == 0xa0144329d87cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0d64b86ad9094 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x801a0144329d87cc; op2val:0xd64b86ad9094; valaddr_reg:x16; val_offset:576; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 576, x17, x15, 144, x18)

inst_291:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x299ba050fc0c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x85ef342c7a5c9 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800299ba050fc0c8; op2val:0x85ef342c7a5c9; valaddr_reg:x16; val_offset:592; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 592, x17, x15, 160, x18)

inst_292:// fs1 == 1 and fe1 == 0x001 and fm1 == 0xa0144329d87cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0xa399f83b8d7e3 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x801a0144329d87cc; op2val:0xa399f83b8d7e3; valaddr_reg:x16; val_offset:608; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 608, x17, x15, 176, x18)

inst_293:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x105c326c5af30 and fs2 == 1 and fe2 == 0x001 and fm2 == 0xa0144329d87cc and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x105c326c5af30; op2val:0x801a0144329d87cc; valaddr_reg:x16; val_offset:624; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 624, x17, x15, 192, x18)

inst_294:// fs1 == 1 and fe1 == 0x001 and fm1 == 0xa0144329d87cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x105c326c5af30 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x801a0144329d87cc; op2val:0x105c326c5af30; valaddr_reg:x16; val_offset:640; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 640, x17, x15, 208, x18)

inst_295:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x299ba050fc0c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xa399f83b8d7e3 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800299ba050fc0c8; op2val:0xa399f83b8d7e3; valaddr_reg:x16; val_offset:656; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 656, x17, x15, 224, x18)

inst_296:// fs1 == 1 and fe1 == 0x001 and fm1 == 0xa0144329d87cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfee29476f2e06 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x801a0144329d87cc; op2val:0xfee29476f2e06; valaddr_reg:x16; val_offset:672; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 672, x17, x15, 240, x18)

inst_297:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x197d0ed8b1e34 and fs2 == 1 and fe2 == 0x001 and fm2 == 0xa0144329d87cc and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x197d0ed8b1e34; op2val:0x801a0144329d87cc; valaddr_reg:x16; val_offset:688; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 688, x17, x15, 256, x18)

inst_298:// fs1 == 1 and fe1 == 0x001 and fm1 == 0xa0144329d87cc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x197d0ed8b1e34 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x801a0144329d87cc; op2val:0x197d0ed8b1e34; valaddr_reg:x16; val_offset:704; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 704, x17, x15, 272, x18)

inst_299:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x299ba050fc0c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfee29476f2e06 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800299ba050fc0c8; op2val:0xfee29476f2e06; valaddr_reg:x16; val_offset:720; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 720, x17, x15, 288, x18)

inst_300:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x299ba050fc0c8 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x042929a1b2ce1 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800299ba050fc0c8; op2val:0x800042929a1b2ce1; valaddr_reg:x16; val_offset:736; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 736, x17, x15, 304, x18)

inst_301:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x042929a1b2ce1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x035efa3d150a6 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800042929a1b2ce1; op2val:0x35efa3d150a6; valaddr_reg:x16; val_offset:752; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 752, x17, x15, 320, x18)

inst_302:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x21b5c662d267b and fs2 == 1 and fe2 == 0x000 and fm2 == 0x042929a1b2ce1 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x21b5c662d267b; op2val:0x800042929a1b2ce1; valaddr_reg:x16; val_offset:768; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 768, x17, x15, 336, x18)

inst_303:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x042929a1b2ce1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x21b5c662d267b and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800042929a1b2ce1; op2val:0x21b5c662d267b; valaddr_reg:x16; val_offset:784; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 784, x17, x15, 352, x18)

inst_304:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x299ba050fc0c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x035efa3d150a6 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800299ba050fc0c8; op2val:0x35efa3d150a6; valaddr_reg:x16; val_offset:800; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 800, x17, x15, 368, x18)

inst_305:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x299ba050fc0c8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x5eb561bd4f6b8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800299ba050fc0c8; op2val:0x5eb561bd4f6b8; valaddr_reg:x16; val_offset:816; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 816, x17, x15, 384, x18)

inst_306:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x5eb561bd4f6b8 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x299ba050fc0c8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x5eb561bd4f6b8; op2val:0x800299ba050fc0c8; valaddr_reg:x16; val_offset:832; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 832, x17, x15, 400, x18)

inst_307:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x299ba050fc0c8 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x9bff6a8783cf3 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800299ba050fc0c8; op2val:0xffc9bff6a8783cf3; valaddr_reg:x16; val_offset:848; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 848, x17, x15, 416, x18)

inst_308:// fs1 == 1 and fe1 == 0x7fc and fm1 == 0x9bff6a8783cf3 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x0e3e4312fc728 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffc9bff6a8783cf3; op2val:0xffc0e3e4312fc728; valaddr_reg:x16; val_offset:864; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 864, x17, x15, 432, x18)

inst_309:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x1b4ac2dd761b7 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x9bff6a8783cf3 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x8001b4ac2dd761b7; op2val:0xffc9bff6a8783cf3; valaddr_reg:x16; val_offset:880; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 880, x17, x15, 448, x18)

inst_310:// fs1 == 1 and fe1 == 0x7fc and fm1 == 0x9bff6a8783cf3 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x1b4ac2dd761b7 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffc9bff6a8783cf3; op2val:0x8001b4ac2dd761b7; valaddr_reg:x16; val_offset:896; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 896, x17, x15, 464, x18)

inst_311:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x299ba050fc0c8 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x0e3e4312fc728 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800299ba050fc0c8; op2val:0xffc0e3e4312fc728; valaddr_reg:x16; val_offset:912; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 912, x17, x15, 480, x18)

inst_312:// fs1 == 1 and fe1 == 0x7fc and fm1 == 0x9bff6a8783cf3 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x0c1b6ea69558e and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffc9bff6a8783cf3; op2val:0xffe0c1b6ea69558e; valaddr_reg:x16; val_offset:928; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 928, x17, x15, 496, x18)

inst_313:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x6c4e25604ed00 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x9bff6a8783cf3 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x8006c4e25604ed00; op2val:0xffc9bff6a8783cf3; valaddr_reg:x16; val_offset:944; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 944, x17, x15, 512, x18)

inst_314:// fs1 == 1 and fe1 == 0x7fc and fm1 == 0x9bff6a8783cf3 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x6c4e25604ed00 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffc9bff6a8783cf3; op2val:0x8006c4e25604ed00; valaddr_reg:x16; val_offset:960; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 960, x17, x15, 528, x18)

inst_315:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x299ba050fc0c8 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x0c1b6ea69558e and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800299ba050fc0c8; op2val:0xffe0c1b6ea69558e; valaddr_reg:x16; val_offset:976; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 976, x17, x15, 544, x18)

inst_316:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x299ba050fc0c8 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800299ba050fc0c8; op2val:0xfff0000000000000; valaddr_reg:x16; val_offset:992; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 992, x17, x15, 560, x18)

inst_317:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x299ba050fc0c8 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x8805c5b3ba76f and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800299ba050fc0c8; op2val:0xffe8805c5b3ba76f; valaddr_reg:x16; val_offset:1008; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1008, x17, x15, 576, x18)

inst_318:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x299ba050fc0c8 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xde7300593ddb7 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800299ba050fc0c8; op2val:0xffede7300593ddb7; valaddr_reg:x16; val_offset:1024; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1024, x17, x15, 592, x18)

inst_319:// fs1 == 1 and fe1 == 0x7fc and fm1 == 0x9bff6a8783cf3 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xd2b592ef4e4e6 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffc9bff6a8783cf3; op2val:0xffdd2b592ef4e4e6; valaddr_reg:x16; val_offset:1040; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1040, x17, x15, 608, x18)

inst_320:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x5e443bf91c5dd and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x9bff6a8783cf3 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x8005e443bf91c5dd; op2val:0xffc9bff6a8783cf3; valaddr_reg:x16; val_offset:1056; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1056, x17, x15, 624, x18)

inst_321:// fs1 == 1 and fe1 == 0x7fc and fm1 == 0x9bff6a8783cf3 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x5e443bf91c5dd and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffc9bff6a8783cf3; op2val:0x8005e443bf91c5dd; valaddr_reg:x16; val_offset:1072; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1072, x17, x15, 640, x18)

inst_322:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x299ba050fc0c8 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xd2b592ef4e4e6 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800299ba050fc0c8; op2val:0xffdd2b592ef4e4e6; valaddr_reg:x16; val_offset:1088; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1088, x17, x15, 656, x18)

inst_323:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x299ba050fc0c8 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x450c74c9b42e4 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800299ba050fc0c8; op2val:0x7fe450c74c9b42e4; valaddr_reg:x16; val_offset:1104; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1104, x17, x15, 672, x18)

inst_324:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x299ba050fc0c8 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xac44ace32d282 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800299ba050fc0c8; op2val:0x7feac44ace32d282; valaddr_reg:x16; val_offset:1120; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1120, x17, x15, 688, x18)

inst_325:// fs1 == 1 and fe1 == 0x7fc and fm1 == 0x9bff6a8783cf3 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x09941946801c5 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffc9bff6a8783cf3; op2val:0x7fd09941946801c5; valaddr_reg:x16; val_offset:1136; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1136, x17, x15, 704, x18)

inst_326:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x35a452e11324d and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x9bff6a8783cf3 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x35a452e11324d; op2val:0xffc9bff6a8783cf3; valaddr_reg:x16; val_offset:1152; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1152, x17, x15, 720, x18)

inst_327:// fs1 == 1 and fe1 == 0x7fc and fm1 == 0x9bff6a8783cf3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x35a452e11324d and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffc9bff6a8783cf3; op2val:0x35a452e11324d; valaddr_reg:x16; val_offset:1168; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1168, x17, x15, 736, x18)

inst_328:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x299ba050fc0c8 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x09941946801c5 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800299ba050fc0c8; op2val:0x7fd09941946801c5; valaddr_reg:x16; val_offset:1184; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1184, x17, x15, 752, x18)

inst_329:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x299ba050fc0c8 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x405e69652cae2 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800299ba050fc0c8; op2val:0x7fe405e69652cae2; valaddr_reg:x16; val_offset:1200; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1200, x17, x15, 768, x18)

inst_330:// fs1 == 1 and fe1 == 0x7fc and fm1 == 0x9bff6a8783cf3 and fs2 == 0 and fe2 == 0x7fc and fm2 == 0xe759ff97b7507 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffc9bff6a8783cf3; op2val:0x7fce759ff97b7507; valaddr_reg:x16; val_offset:1216; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1216, x17, x15, 784, x18)

inst_331:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x3137cb6875068 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x9bff6a8783cf3 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x3137cb6875068; op2val:0xffc9bff6a8783cf3; valaddr_reg:x16; val_offset:1232; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1232, x17, x15, 800, x18)

inst_332:// fs1 == 1 and fe1 == 0x7fc and fm1 == 0x9bff6a8783cf3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x3137cb6875068 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffc9bff6a8783cf3; op2val:0x3137cb6875068; valaddr_reg:x16; val_offset:1248; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1248, x17, x15, 816, x18)

inst_333:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x299ba050fc0c8 and fs2 == 0 and fe2 == 0x7fc and fm2 == 0xe759ff97b7507 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800299ba050fc0c8; op2val:0x7fce759ff97b7507; valaddr_reg:x16; val_offset:1264; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1264, x17, x15, 832, x18)

inst_334:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x65657f10d48db and fs2 == 1 and fe2 == 0x000 and fm2 == 0x65657f10d48db and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x80065657f10d48db; op2val:0x80065657f10d48db; valaddr_reg:x16; val_offset:1280; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1280, x17, x15, 848, x18)

inst_335:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x65657f10d48db and fs2 == 1 and fe2 == 0x402 and fm2 == 0x1a04aee65a608 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x80065657f10d48db; op2val:0xc021a04aee65a608; valaddr_reg:x16; val_offset:1296; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1296, x17, x15, 864, x18)

inst_336:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x65657f10d48db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x80065657f10d48db; op2val:0x0; valaddr_reg:x16; val_offset:1312; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1312, x17, x15, 880, x18)

inst_337:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x65657f10d48db and fs2 == 1 and fe2 == 0x002 and fm2 == 0xfafb7b5426c47 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x80065657f10d48db; op2val:0x802fafb7b5426c47; valaddr_reg:x16; val_offset:1328; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1328, x17, x15, 896, x18)

inst_338:// fs1 == 1 and fe1 == 0x002 and fm1 == 0xfafb7b5426c47 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xd97133b894184 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x802fafb7b5426c47; op2val:0x800d97133b894184; valaddr_reg:x16; val_offset:1344; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1344, x17, x15, 912, x18)

inst_339:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x65657f10d48db and fs2 == 1 and fe2 == 0x000 and fm2 == 0xd97133b894184 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x80065657f10d48db; op2val:0x800d97133b894184; valaddr_reg:x16; val_offset:1360; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1360, x17, x15, 928, x18)

inst_340:// fs1 == 1 and fe1 == 0x002 and fm1 == 0xfafb7b5426c47 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x879ccf8eb0579 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x802fafb7b5426c47; op2val:0x800879ccf8eb0579; valaddr_reg:x16; val_offset:1376; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1376, x17, x15, 944, x18)

inst_341:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x65657f10d48db and fs2 == 1 and fe2 == 0x000 and fm2 == 0x879ccf8eb0579 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x80065657f10d48db; op2val:0x800879ccf8eb0579; valaddr_reg:x16; val_offset:1392; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1392, x17, x15, 960, x18)

inst_342:// fs1 == 1 and fe1 == 0x002 and fm1 == 0xfafb7b5426c47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x85ef342c7a5c9 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x802fafb7b5426c47; op2val:0x85ef342c7a5c9; valaddr_reg:x16; val_offset:1408; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1408, x17, x15, 976, x18)

inst_343:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0d64b86ad9094 and fs2 == 1 and fe2 == 0x002 and fm2 == 0xfafb7b5426c47 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xd64b86ad9094; op2val:0x802fafb7b5426c47; valaddr_reg:x16; val_offset:1424; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1424, x17, x15, 992, x18)

inst_344:// fs1 == 1 and fe1 == 0x002 and fm1 == 0xfafb7b5426c47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0d64b86ad9094 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x802fafb7b5426c47; op2val:0xd64b86ad9094; valaddr_reg:x16; val_offset:1440; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1440, x17, x15, 1008, x18)

inst_345:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x65657f10d48db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x85ef342c7a5c9 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x80065657f10d48db; op2val:0x85ef342c7a5c9; valaddr_reg:x16; val_offset:1456; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1456, x17, x15, 1024, x18)

inst_346:// fs1 == 1 and fe1 == 0x002 and fm1 == 0xfafb7b5426c47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xa399f83b8d7e3 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x802fafb7b5426c47; op2val:0xa399f83b8d7e3; valaddr_reg:x16; val_offset:1472; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1472, x17, x15, 1040, x18)

inst_347:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x105c326c5af30 and fs2 == 1 and fe2 == 0x002 and fm2 == 0xfafb7b5426c47 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x105c326c5af30; op2val:0x802fafb7b5426c47; valaddr_reg:x16; val_offset:1488; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1488, x17, x15, 1056, x18)

inst_348:// fs1 == 1 and fe1 == 0x002 and fm1 == 0xfafb7b5426c47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x105c326c5af30 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x802fafb7b5426c47; op2val:0x105c326c5af30; valaddr_reg:x16; val_offset:1504; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1504, x17, x15, 1072, x18)

inst_349:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x65657f10d48db and fs2 == 0 and fe2 == 0x000 and fm2 == 0xa399f83b8d7e3 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x80065657f10d48db; op2val:0xa399f83b8d7e3; valaddr_reg:x16; val_offset:1520; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1520, x17, x15, 1088, x18)

inst_350:// fs1 == 1 and fe1 == 0x002 and fm1 == 0xfafb7b5426c47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfee29476f2e06 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x802fafb7b5426c47; op2val:0xfee29476f2e06; valaddr_reg:x16; val_offset:1536; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1536, x17, x15, 1104, x18)

inst_351:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x197d0ed8b1e34 and fs2 == 1 and fe2 == 0x002 and fm2 == 0xfafb7b5426c47 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x197d0ed8b1e34; op2val:0x802fafb7b5426c47; valaddr_reg:x16; val_offset:1552; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1552, x17, x15, 1120, x18)

inst_352:// fs1 == 1 and fe1 == 0x002 and fm1 == 0xfafb7b5426c47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x197d0ed8b1e34 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x802fafb7b5426c47; op2val:0x197d0ed8b1e34; valaddr_reg:x16; val_offset:1568; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1568, x17, x15, 1136, x18)

inst_353:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x65657f10d48db and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfee29476f2e06 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x80065657f10d48db; op2val:0xfee29476f2e06; valaddr_reg:x16; val_offset:1584; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1584, x17, x15, 1152, x18)

inst_354:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x65657f10d48db and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0a23bfe815416 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x80065657f10d48db; op2val:0x8000a23bfe815416; valaddr_reg:x16; val_offset:1600; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1600, x17, x15, 1168, x18)

inst_355:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0a23bfe815416 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x035efa3d150a6 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x8000a23bfe815416; op2val:0x35efa3d150a6; valaddr_reg:x16; val_offset:1616; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1616, x17, x15, 1184, x18)

inst_356:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x21b5c662d267b and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0a23bfe815416 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x21b5c662d267b; op2val:0x8000a23bfe815416; valaddr_reg:x16; val_offset:1632; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1632, x17, x15, 1200, x18)

inst_357:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0a23bfe815416 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x21b5c662d267b and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x8000a23bfe815416; op2val:0x21b5c662d267b; valaddr_reg:x16; val_offset:1648; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1648, x17, x15, 1216, x18)

inst_358:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x65657f10d48db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x035efa3d150a6 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x80065657f10d48db; op2val:0x35efa3d150a6; valaddr_reg:x16; val_offset:1664; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1664, x17, x15, 1232, x18)

inst_359:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x65657f10d48db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x5eb561bd4f6b8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x80065657f10d48db; op2val:0x5eb561bd4f6b8; valaddr_reg:x16; val_offset:1680; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1680, x17, x15, 1248, x18)

inst_360:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x5eb561bd4f6b8 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x65657f10d48db and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x5eb561bd4f6b8; op2val:0x80065657f10d48db; valaddr_reg:x16; val_offset:1696; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1696, x17, x15, 1264, x18)

inst_361:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x65657f10d48db and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xf6025caa2d205 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x80065657f10d48db; op2val:0xffdf6025caa2d205; valaddr_reg:x16; val_offset:1712; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1712, x17, x15, 1280, x18)

inst_362:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xf6025caa2d205 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x0e3e4312fc728 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffdf6025caa2d205; op2val:0xffc0e3e4312fc728; valaddr_reg:x16; val_offset:1728; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1728, x17, x15, 1296, x18)

inst_363:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x1b4ac2dd761b7 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xf6025caa2d205 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x8001b4ac2dd761b7; op2val:0xffdf6025caa2d205; valaddr_reg:x16; val_offset:1744; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1744, x17, x15, 1312, x18)

inst_364:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xf6025caa2d205 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x1b4ac2dd761b7 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffdf6025caa2d205; op2val:0x8001b4ac2dd761b7; valaddr_reg:x16; val_offset:1760; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1760, x17, x15, 1328, x18)

inst_365:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x65657f10d48db and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x0e3e4312fc728 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x80065657f10d48db; op2val:0xffc0e3e4312fc728; valaddr_reg:x16; val_offset:1776; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1776, x17, x15, 1344, x18)

inst_366:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xf6025caa2d205 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x0c1b6ea69558e and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffdf6025caa2d205; op2val:0xffe0c1b6ea69558e; valaddr_reg:x16; val_offset:1792; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1792, x17, x15, 1360, x18)

inst_367:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x6c4e25604ed00 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xf6025caa2d205 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x8006c4e25604ed00; op2val:0xffdf6025caa2d205; valaddr_reg:x16; val_offset:1808; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1808, x17, x15, 1376, x18)

inst_368:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xf6025caa2d205 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x6c4e25604ed00 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffdf6025caa2d205; op2val:0x8006c4e25604ed00; valaddr_reg:x16; val_offset:1824; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1824, x17, x15, 1392, x18)

inst_369:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x65657f10d48db and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x0c1b6ea69558e and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x80065657f10d48db; op2val:0xffe0c1b6ea69558e; valaddr_reg:x16; val_offset:1840; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1840, x17, x15, 1408, x18)

inst_370:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x65657f10d48db and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x80065657f10d48db; op2val:0xfff0000000000000; valaddr_reg:x16; val_offset:1856; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1856, x17, x15, 1424, x18)

inst_371:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x65657f10d48db and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x8805c5b3ba76f and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x80065657f10d48db; op2val:0xffe8805c5b3ba76f; valaddr_reg:x16; val_offset:1872; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1872, x17, x15, 1440, x18)

inst_372:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x65657f10d48db and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xde7300593ddb7 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x80065657f10d48db; op2val:0xffede7300593ddb7; valaddr_reg:x16; val_offset:1888; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1888, x17, x15, 1456, x18)

inst_373:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xf6025caa2d205 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xd2b592ef4e4e6 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffdf6025caa2d205; op2val:0xffdd2b592ef4e4e6; valaddr_reg:x16; val_offset:1904; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1904, x17, x15, 1472, x18)

inst_374:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x5e443bf91c5dd and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xf6025caa2d205 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x8005e443bf91c5dd; op2val:0xffdf6025caa2d205; valaddr_reg:x16; val_offset:1920; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1920, x17, x15, 1488, x18)

inst_375:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xf6025caa2d205 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x5e443bf91c5dd and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffdf6025caa2d205; op2val:0x8005e443bf91c5dd; valaddr_reg:x16; val_offset:1936; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1936, x17, x15, 1504, x18)

inst_376:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x65657f10d48db and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xd2b592ef4e4e6 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x80065657f10d48db; op2val:0xffdd2b592ef4e4e6; valaddr_reg:x16; val_offset:1952; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1952, x17, x15, 1520, x18)

inst_377:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x65657f10d48db and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x450c74c9b42e4 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x80065657f10d48db; op2val:0x7fe450c74c9b42e4; valaddr_reg:x16; val_offset:1968; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1968, x17, x15, 1536, x18)

inst_378:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x65657f10d48db and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xac44ace32d282 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x80065657f10d48db; op2val:0x7feac44ace32d282; valaddr_reg:x16; val_offset:1984; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1984, x17, x15, 1552, x18)

inst_379:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xf6025caa2d205 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x09941946801c5 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffdf6025caa2d205; op2val:0x7fd09941946801c5; valaddr_reg:x16; val_offset:2000; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 2000, x17, x15, 1568, x18)

inst_380:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x35a452e11324d and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xf6025caa2d205 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x35a452e11324d; op2val:0xffdf6025caa2d205; valaddr_reg:x16; val_offset:2016; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 2016, x17, x15, 1584, x18)
addi x16,x16,2032

inst_381:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xf6025caa2d205 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x35a452e11324d and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffdf6025caa2d205; op2val:0x35a452e11324d; valaddr_reg:x16; val_offset:0; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 0, x17, x15, 1600, x18)

inst_382:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x65657f10d48db and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x09941946801c5 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x80065657f10d48db; op2val:0x7fd09941946801c5; valaddr_reg:x16; val_offset:16; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 16, x17, x15, 1616, x18)

inst_383:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x65657f10d48db and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x405e69652cae2 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x80065657f10d48db; op2val:0x7fe405e69652cae2; valaddr_reg:x16; val_offset:32; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 32, x17, x15, 1632, x18)

inst_384:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xf6025caa2d205 and fs2 == 0 and fe2 == 0x7fc and fm2 == 0xe759ff97b7507 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffdf6025caa2d205; op2val:0x7fce759ff97b7507; valaddr_reg:x16; val_offset:48; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 48, x17, x15, 1648, x18)

inst_385:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x3137cb6875068 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xf6025caa2d205 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x3137cb6875068; op2val:0xffdf6025caa2d205; valaddr_reg:x16; val_offset:64; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 64, x17, x15, 1664, x18)

inst_386:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xf6025caa2d205 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x3137cb6875068 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffdf6025caa2d205; op2val:0x3137cb6875068; valaddr_reg:x16; val_offset:80; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 80, x17, x15, 1680, x18)

inst_387:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x65657f10d48db and fs2 == 0 and fe2 == 0x7fc and fm2 == 0xe759ff97b7507 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x80065657f10d48db; op2val:0x7fce759ff97b7507; valaddr_reg:x16; val_offset:96; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 96, x17, x15, 1696, x18)

inst_388:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x85ef342c7a5c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x85ef342c7a5c9 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x85ef342c7a5c9; op2val:0x85ef342c7a5c9; valaddr_reg:x16; val_offset:112; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 112, x17, x15, 1712, x18)

inst_389:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x85ef342c7a5c9 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x2a038f94d730b and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x85ef342c7a5c9; op2val:0x3ff2a038f94d730b; valaddr_reg:x16; val_offset:128; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 128, x17, x15, 1728, x18)

inst_390:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x85ef342c7a5c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x85ef342c7a5c9; op2val:0x0; valaddr_reg:x16; val_offset:144; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 144, x17, x15, 1744, x18)

inst_391:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x85ef342c7a5c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0d64b86ad9094 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x85ef342c7a5c9; op2val:0xd64b86ad9094; valaddr_reg:x16; val_offset:160; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 160, x17, x15, 1760, x18)

inst_392:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0d64b86ad9094 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x423d517f83eb0 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xd64b86ad9094; op2val:0x800423d517f83eb0; valaddr_reg:x16; val_offset:176; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 176, x17, x15, 1776, x18)

inst_393:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x85ef342c7a5c9 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x423d517f83eb0 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x85ef342c7a5c9; op2val:0x800423d517f83eb0; valaddr_reg:x16; val_offset:192; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 192, x17, x15, 1792, x18)

inst_394:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0d64b86ad9094 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x299ba050fc0c8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xd64b86ad9094; op2val:0x800299ba050fc0c8; valaddr_reg:x16; val_offset:208; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 208, x17, x15, 1808, x18)

inst_395:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x85ef342c7a5c9 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x299ba050fc0c8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x85ef342c7a5c9; op2val:0x800299ba050fc0c8; valaddr_reg:x16; val_offset:224; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 224, x17, x15, 1824, x18)

inst_396:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0d64b86ad9094 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x65657f10d48db and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xd64b86ad9094; op2val:0x80065657f10d48db; valaddr_reg:x16; val_offset:240; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 240, x17, x15, 1840, x18)

inst_397:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x85ef342c7a5c9 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x65657f10d48db and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x85ef342c7a5c9; op2val:0x80065657f10d48db; valaddr_reg:x16; val_offset:256; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 256, x17, x15, 1856, x18)

inst_398:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x85ef342c7a5c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xa399f83b8d7e3 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x85ef342c7a5c9; op2val:0xa399f83b8d7e3; valaddr_reg:x16; val_offset:272; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 272, x17, x15, 1872, x18)

inst_399:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xa399f83b8d7e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x85ef342c7a5c9 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xa399f83b8d7e3; op2val:0x85ef342c7a5c9; valaddr_reg:x16; val_offset:288; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 288, x17, x15, 1888, x18)

inst_400:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x85ef342c7a5c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfee29476f2e06 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x85ef342c7a5c9; op2val:0xfee29476f2e06; valaddr_reg:x16; val_offset:304; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 304, x17, x15, 1904, x18)

inst_401:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfee29476f2e06 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x85ef342c7a5c9 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xfee29476f2e06; op2val:0x85ef342c7a5c9; valaddr_reg:x16; val_offset:320; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 320, x17, x15, 1920, x18)

inst_402:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x85ef342c7a5c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0156df3de280f and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x85ef342c7a5c9; op2val:0x156df3de280f; valaddr_reg:x16; val_offset:336; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 336, x17, x15, 1936, x18)

inst_403:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0156df3de280f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x035efa3d150a6 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x156df3de280f; op2val:0x35efa3d150a6; valaddr_reg:x16; val_offset:352; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 352, x17, x15, 1952, x18)

inst_404:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x5119bfdc380d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0156df3de280f and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x15119bfdc380d2; op2val:0x156df3de280f; valaddr_reg:x16; val_offset:368; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 368, x17, x15, 1968, x18)

inst_405:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0156df3de280f and fs2 == 0 and fe2 == 0x001 and fm2 == 0x5119bfdc380d2 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x156df3de280f; op2val:0x15119bfdc380d2; valaddr_reg:x16; val_offset:384; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 384, x17, x15, 1984, x18)

inst_406:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x85ef342c7a5c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x035efa3d150a6 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x85ef342c7a5c9; op2val:0x35efa3d150a6; valaddr_reg:x16; val_offset:400; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 400, x17, x15, 2000, x18)

inst_407:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0d64b86ad9094 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x5eb561bd4f6b8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xd64b86ad9094; op2val:0x5eb561bd4f6b8; valaddr_reg:x16; val_offset:416; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 416, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_7)

inst_408:// fs1 == 0 and fe1 == 0x002 and fm1 == 0xd98ae8b28d198 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0d64b86ad9094 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x2d98ae8b28d198; op2val:0xd64b86ad9094; valaddr_reg:x16; val_offset:432; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 432, x17, x15, 0, x18)

inst_409:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0d64b86ad9094 and fs2 == 0 and fe2 == 0x002 and fm2 == 0xd98ae8b28d198 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xd64b86ad9094; op2val:0x2d98ae8b28d198; valaddr_reg:x16; val_offset:448; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 448, x17, x15, 16, x18)

inst_410:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x85ef342c7a5c9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x5eb561bd4f6b8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x85ef342c7a5c9; op2val:0x5eb561bd4f6b8; valaddr_reg:x16; val_offset:464; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 464, x17, x15, 32, x18)

inst_411:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x85ef342c7a5c9 and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x093dbe3aa0387 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x85ef342c7a5c9; op2val:0x7fb093dbe3aa0387; valaddr_reg:x16; val_offset:480; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 480, x17, x15, 48, x18)

inst_412:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x093dbe3aa0387 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x0e3e4312fc728 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb093dbe3aa0387; op2val:0xffc0e3e4312fc728; valaddr_reg:x16; val_offset:496; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 496, x17, x15, 64, x18)

inst_413:// fs1 == 1 and fe1 == 0x001 and fm1 == 0x10eb9ca69d123 and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x093dbe3aa0387 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x80110eb9ca69d123; op2val:0x7fb093dbe3aa0387; valaddr_reg:x16; val_offset:512; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 512, x17, x15, 80, x18)

inst_414:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x093dbe3aa0387 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x10eb9ca69d123 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb093dbe3aa0387; op2val:0x80110eb9ca69d123; valaddr_reg:x16; val_offset:528; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 528, x17, x15, 96, x18)

inst_415:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x85ef342c7a5c9 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x0e3e4312fc728 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x85ef342c7a5c9; op2val:0xffc0e3e4312fc728; valaddr_reg:x16; val_offset:544; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 544, x17, x15, 112, x18)

inst_416:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x093dbe3aa0387 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x0c1b6ea69558e and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb093dbe3aa0387; op2val:0xffe0c1b6ea69558e; valaddr_reg:x16; val_offset:560; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 560, x17, x15, 128, x18)

inst_417:// fs1 == 1 and fe1 == 0x003 and fm1 == 0x0ec35d70c5080 and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x093dbe3aa0387 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x8030ec35d70c5080; op2val:0x7fb093dbe3aa0387; valaddr_reg:x16; val_offset:576; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 576, x17, x15, 144, x18)

inst_418:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x093dbe3aa0387 and fs2 == 1 and fe2 == 0x003 and fm2 == 0x0ec35d70c5080 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb093dbe3aa0387; op2val:0x8030ec35d70c5080; valaddr_reg:x16; val_offset:592; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 592, x17, x15, 160, x18)

inst_419:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x85ef342c7a5c9 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x0c1b6ea69558e and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x85ef342c7a5c9; op2val:0xffe0c1b6ea69558e; valaddr_reg:x16; val_offset:608; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 608, x17, x15, 176, x18)

inst_420:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x85ef342c7a5c9 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x4b8d2dc948469 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x85ef342c7a5c9; op2val:0x7fe4b8d2dc948469; valaddr_reg:x16; val_offset:624; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 624, x17, x15, 192, x18)

inst_421:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4b8d2dc948469 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x8805c5b3ba76f and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe4b8d2dc948469; op2val:0xffe8805c5b3ba76f; valaddr_reg:x16; val_offset:640; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 640, x17, x15, 208, x18)

inst_422:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x9e5cc8c139f1c and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x4b8d2dc948469 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x8009e5cc8c139f1c; op2val:0x7fe4b8d2dc948469; valaddr_reg:x16; val_offset:656; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 656, x17, x15, 224, x18)

inst_423:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4b8d2dc948469 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x9e5cc8c139f1c and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe4b8d2dc948469; op2val:0x8009e5cc8c139f1c; valaddr_reg:x16; val_offset:672; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 672, x17, x15, 240, x18)

inst_424:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x85ef342c7a5c9 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x8805c5b3ba76f and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x85ef342c7a5c9; op2val:0xffe8805c5b3ba76f; valaddr_reg:x16; val_offset:688; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 688, x17, x15, 256, x18)

inst_425:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4b8d2dc948469 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xde7300593ddb7 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe4b8d2dc948469; op2val:0xffede7300593ddb7; valaddr_reg:x16; val_offset:704; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 704, x17, x15, 272, x18)

inst_426:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xc1468c79c3df8 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x4b8d2dc948469 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800c1468c79c3df8; op2val:0x7fe4b8d2dc948469; valaddr_reg:x16; val_offset:720; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 720, x17, x15, 288, x18)

inst_427:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4b8d2dc948469 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xc1468c79c3df8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe4b8d2dc948469; op2val:0x800c1468c79c3df8; valaddr_reg:x16; val_offset:736; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 736, x17, x15, 304, x18)

inst_428:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x85ef342c7a5c9 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xde7300593ddb7 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x85ef342c7a5c9; op2val:0xffede7300593ddb7; valaddr_reg:x16; val_offset:752; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 752, x17, x15, 320, x18)

inst_429:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x093dbe3aa0387 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xd2b592ef4e4e6 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb093dbe3aa0387; op2val:0xffdd2b592ef4e4e6; valaddr_reg:x16; val_offset:768; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 768, x17, x15, 336, x18)

inst_430:// fs1 == 1 and fe1 == 0x002 and fm1 == 0xd7552bdd8dd50 and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x093dbe3aa0387 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x802d7552bdd8dd50; op2val:0x7fb093dbe3aa0387; valaddr_reg:x16; val_offset:784; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 784, x17, x15, 352, x18)

inst_431:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x093dbe3aa0387 and fs2 == 1 and fe2 == 0x002 and fm2 == 0xd7552bdd8dd50 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb093dbe3aa0387; op2val:0x802d7552bdd8dd50; valaddr_reg:x16; val_offset:800; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 800, x17, x15, 368, x18)

inst_432:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x85ef342c7a5c9 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xd2b592ef4e4e6 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x85ef342c7a5c9; op2val:0xffdd2b592ef4e4e6; valaddr_reg:x16; val_offset:816; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 816, x17, x15, 384, x18)

inst_433:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4b8d2dc948469 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x450c74c9b42e4 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe4b8d2dc948469; op2val:0x7fe450c74c9b42e4; valaddr_reg:x16; val_offset:832; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 832, x17, x15, 400, x18)

inst_434:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x834eb7d8ef590 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x4b8d2dc948469 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x834eb7d8ef590; op2val:0x7fe4b8d2dc948469; valaddr_reg:x16; val_offset:848; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 848, x17, x15, 416, x18)

inst_435:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4b8d2dc948469 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x834eb7d8ef590 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe4b8d2dc948469; op2val:0x834eb7d8ef590; valaddr_reg:x16; val_offset:864; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 864, x17, x15, 432, x18)

inst_436:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x85ef342c7a5c9 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x450c74c9b42e4 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x85ef342c7a5c9; op2val:0x7fe450c74c9b42e4; valaddr_reg:x16; val_offset:880; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 880, x17, x15, 448, x18)

inst_437:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4b8d2dc948469 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xac44ace32d282 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe4b8d2dc948469; op2val:0x7feac44ace32d282; valaddr_reg:x16; val_offset:896; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 896, x17, x15, 464, x18)

inst_438:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xad011d20e38de and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x4b8d2dc948469 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xad011d20e38de; op2val:0x7fe4b8d2dc948469; valaddr_reg:x16; val_offset:912; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 912, x17, x15, 480, x18)

inst_439:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4b8d2dc948469 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xad011d20e38de and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe4b8d2dc948469; op2val:0xad011d20e38de; valaddr_reg:x16; val_offset:928; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 928, x17, x15, 496, x18)

inst_440:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x85ef342c7a5c9 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xac44ace32d282 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x85ef342c7a5c9; op2val:0x7feac44ace32d282; valaddr_reg:x16; val_offset:944; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 944, x17, x15, 512, x18)

inst_441:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x093dbe3aa0387 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x09941946801c5 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb093dbe3aa0387; op2val:0x7fd09941946801c5; valaddr_reg:x16; val_offset:960; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 960, x17, x15, 528, x18)

inst_442:// fs1 == 0 and fe1 == 0x002 and fm1 == 0x0c359e655fb81 and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x093dbe3aa0387 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x20c359e655fb81; op2val:0x7fb093dbe3aa0387; valaddr_reg:x16; val_offset:976; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 976, x17, x15, 544, x18)

inst_443:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x093dbe3aa0387 and fs2 == 0 and fe2 == 0x002 and fm2 == 0x0c359e655fb81 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb093dbe3aa0387; op2val:0x20c359e655fb81; valaddr_reg:x16; val_offset:992; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 992, x17, x15, 560, x18)

inst_444:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x85ef342c7a5c9 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x09941946801c5 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x85ef342c7a5c9; op2val:0x7fd09941946801c5; valaddr_reg:x16; val_offset:1008; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1008, x17, x15, 576, x18)

inst_445:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4b8d2dc948469 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x405e69652cae2 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe4b8d2dc948469; op2val:0x7fe405e69652cae2; valaddr_reg:x16; val_offset:1024; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1024, x17, x15, 592, x18)

inst_446:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x816ac0c54cf8a and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x4b8d2dc948469 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x816ac0c54cf8a; op2val:0x7fe4b8d2dc948469; valaddr_reg:x16; val_offset:1040; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1040, x17, x15, 608, x18)

inst_447:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4b8d2dc948469 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x816ac0c54cf8a and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe4b8d2dc948469; op2val:0x816ac0c54cf8a; valaddr_reg:x16; val_offset:1056; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1056, x17, x15, 624, x18)

inst_448:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x85ef342c7a5c9 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x405e69652cae2 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x85ef342c7a5c9; op2val:0x7fe405e69652cae2; valaddr_reg:x16; val_offset:1072; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1072, x17, x15, 640, x18)

inst_449:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x093dbe3aa0387 and fs2 == 0 and fe2 == 0x7fc and fm2 == 0xe759ff97b7507 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb093dbe3aa0387; op2val:0x7fce759ff97b7507; valaddr_reg:x16; val_offset:1088; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1088, x17, x15, 656, x18)

inst_450:// fs1 == 0 and fe1 == 0x001 and fm1 == 0xec2df2149240f and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x093dbe3aa0387 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x1ec2df2149240f; op2val:0x7fb093dbe3aa0387; valaddr_reg:x16; val_offset:1104; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1104, x17, x15, 672, x18)

inst_451:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x093dbe3aa0387 and fs2 == 0 and fe2 == 0x001 and fm2 == 0xec2df2149240f and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb093dbe3aa0387; op2val:0x1ec2df2149240f; valaddr_reg:x16; val_offset:1120; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1120, x17, x15, 688, x18)

inst_452:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x85ef342c7a5c9 and fs2 == 0 and fe2 == 0x7fc and fm2 == 0xe759ff97b7507 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x85ef342c7a5c9; op2val:0x7fce759ff97b7507; valaddr_reg:x16; val_offset:1136; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1136, x17, x15, 704, x18)

inst_453:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xa399f83b8d7e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xa399f83b8d7e3 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xa399f83b8d7e3; op2val:0xa399f83b8d7e3; valaddr_reg:x16; val_offset:1152; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1152, x17, x15, 720, x18)

inst_454:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xa399f83b8d7e3 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x6c0679d004e5b and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xa399f83b8d7e3; op2val:0x3ff6c0679d004e5b; valaddr_reg:x16; val_offset:1168; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1168, x17, x15, 736, x18)

inst_455:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xa399f83b8d7e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xa399f83b8d7e3; op2val:0x0; valaddr_reg:x16; val_offset:1184; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1184, x17, x15, 752, x18)

inst_456:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xa399f83b8d7e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x105c326c5af30 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xa399f83b8d7e3; op2val:0x105c326c5af30; valaddr_reg:x16; val_offset:1200; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1200, x17, x15, 768, x18)

inst_457:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x105c326c5af30 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x423d517f83eb0 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x105c326c5af30; op2val:0x800423d517f83eb0; valaddr_reg:x16; val_offset:1216; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1216, x17, x15, 784, x18)

inst_458:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xa399f83b8d7e3 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x423d517f83eb0 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xa399f83b8d7e3; op2val:0x800423d517f83eb0; valaddr_reg:x16; val_offset:1232; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1232, x17, x15, 800, x18)

inst_459:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x105c326c5af30 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x299ba050fc0c8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x105c326c5af30; op2val:0x800299ba050fc0c8; valaddr_reg:x16; val_offset:1248; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1248, x17, x15, 816, x18)

inst_460:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xa399f83b8d7e3 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x299ba050fc0c8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xa399f83b8d7e3; op2val:0x800299ba050fc0c8; valaddr_reg:x16; val_offset:1264; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1264, x17, x15, 832, x18)

inst_461:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x105c326c5af30 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x65657f10d48db and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x105c326c5af30; op2val:0x80065657f10d48db; valaddr_reg:x16; val_offset:1280; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1280, x17, x15, 848, x18)

inst_462:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xa399f83b8d7e3 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x65657f10d48db and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xa399f83b8d7e3; op2val:0x80065657f10d48db; valaddr_reg:x16; val_offset:1296; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1296, x17, x15, 864, x18)

inst_463:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xa399f83b8d7e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfee29476f2e06 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xa399f83b8d7e3; op2val:0xfee29476f2e06; valaddr_reg:x16; val_offset:1312; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1312, x17, x15, 880, x18)

inst_464:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfee29476f2e06 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xa399f83b8d7e3 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xfee29476f2e06; op2val:0xa399f83b8d7e3; valaddr_reg:x16; val_offset:1328; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1328, x17, x15, 896, x18)

inst_465:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xa399f83b8d7e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x01a2d1d7a2b1e and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xa399f83b8d7e3; op2val:0x1a2d1d7a2b1e; valaddr_reg:x16; val_offset:1344; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1344, x17, x15, 912, x18)

inst_466:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x01a2d1d7a2b1e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x035efa3d150a6 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x1a2d1d7a2b1e; op2val:0x35efa3d150a6; valaddr_reg:x16; val_offset:1360; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1360, x17, x15, 928, x18)

inst_467:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x5119bfdc380d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x01a2d1d7a2b1e and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x15119bfdc380d2; op2val:0x1a2d1d7a2b1e; valaddr_reg:x16; val_offset:1376; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1376, x17, x15, 944, x18)

inst_468:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x01a2d1d7a2b1e and fs2 == 0 and fe2 == 0x001 and fm2 == 0x5119bfdc380d2 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x1a2d1d7a2b1e; op2val:0x15119bfdc380d2; valaddr_reg:x16; val_offset:1392; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1392, x17, x15, 960, x18)

inst_469:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xa399f83b8d7e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x035efa3d150a6 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xa399f83b8d7e3; op2val:0x35efa3d150a6; valaddr_reg:x16; val_offset:1408; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1408, x17, x15, 976, x18)

inst_470:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x105c326c5af30 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x5eb561bd4f6b8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x105c326c5af30; op2val:0x5eb561bd4f6b8; valaddr_reg:x16; val_offset:1424; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1424, x17, x15, 992, x18)

inst_471:// fs1 == 0 and fe1 == 0x002 and fm1 == 0xd98ae8b28d198 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x105c326c5af30 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x2d98ae8b28d198; op2val:0x105c326c5af30; valaddr_reg:x16; val_offset:1440; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1440, x17, x15, 1008, x18)

inst_472:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x105c326c5af30 and fs2 == 0 and fe2 == 0x002 and fm2 == 0xd98ae8b28d198 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x105c326c5af30; op2val:0x2d98ae8b28d198; valaddr_reg:x16; val_offset:1456; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1456, x17, x15, 1024, x18)

inst_473:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xa399f83b8d7e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x5eb561bd4f6b8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xa399f83b8d7e3; op2val:0x5eb561bd4f6b8; valaddr_reg:x16; val_offset:1472; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1472, x17, x15, 1040, x18)

inst_474:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xa399f83b8d7e3 and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x43fe46d2b7ce6 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xa399f83b8d7e3; op2val:0x7fb43fe46d2b7ce6; valaddr_reg:x16; val_offset:1488; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1488, x17, x15, 1056, x18)

inst_475:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x43fe46d2b7ce6 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x0e3e4312fc728 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb43fe46d2b7ce6; op2val:0xffc0e3e4312fc728; valaddr_reg:x16; val_offset:1504; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1504, x17, x15, 1072, x18)

inst_476:// fs1 == 1 and fe1 == 0x001 and fm1 == 0x10eb9ca69d123 and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x43fe46d2b7ce6 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x80110eb9ca69d123; op2val:0x7fb43fe46d2b7ce6; valaddr_reg:x16; val_offset:1520; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1520, x17, x15, 1088, x18)

inst_477:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x43fe46d2b7ce6 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x10eb9ca69d123 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb43fe46d2b7ce6; op2val:0x80110eb9ca69d123; valaddr_reg:x16; val_offset:1536; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1536, x17, x15, 1104, x18)

inst_478:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xa399f83b8d7e3 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x0e3e4312fc728 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xa399f83b8d7e3; op2val:0xffc0e3e4312fc728; valaddr_reg:x16; val_offset:1552; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1552, x17, x15, 1120, x18)

inst_479:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x43fe46d2b7ce6 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x0c1b6ea69558e and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb43fe46d2b7ce6; op2val:0xffe0c1b6ea69558e; valaddr_reg:x16; val_offset:1568; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1568, x17, x15, 1136, x18)

inst_480:// fs1 == 1 and fe1 == 0x003 and fm1 == 0x0ec35d70c5080 and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x43fe46d2b7ce6 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x8030ec35d70c5080; op2val:0x7fb43fe46d2b7ce6; valaddr_reg:x16; val_offset:1584; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1584, x17, x15, 1152, x18)

inst_481:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x43fe46d2b7ce6 and fs2 == 1 and fe2 == 0x003 and fm2 == 0x0ec35d70c5080 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb43fe46d2b7ce6; op2val:0x8030ec35d70c5080; valaddr_reg:x16; val_offset:1600; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1600, x17, x15, 1168, x18)

inst_482:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xa399f83b8d7e3 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x0c1b6ea69558e and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xa399f83b8d7e3; op2val:0xffe0c1b6ea69558e; valaddr_reg:x16; val_offset:1616; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1616, x17, x15, 1184, x18)

inst_483:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xa399f83b8d7e3 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x94fdd88765c1f and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xa399f83b8d7e3; op2val:0x7fe94fdd88765c1f; valaddr_reg:x16; val_offset:1632; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1632, x17, x15, 1200, x18)

inst_484:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x94fdd88765c1f and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x8805c5b3ba76f and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe94fdd88765c1f; op2val:0xffe8805c5b3ba76f; valaddr_reg:x16; val_offset:1648; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1648, x17, x15, 1216, x18)

inst_485:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x9e5cc8c139f1c and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x94fdd88765c1f and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x8009e5cc8c139f1c; op2val:0x7fe94fdd88765c1f; valaddr_reg:x16; val_offset:1664; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1664, x17, x15, 1232, x18)

inst_486:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x94fdd88765c1f and fs2 == 1 and fe2 == 0x000 and fm2 == 0x9e5cc8c139f1c and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe94fdd88765c1f; op2val:0x8009e5cc8c139f1c; valaddr_reg:x16; val_offset:1680; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1680, x17, x15, 1248, x18)

inst_487:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xa399f83b8d7e3 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x8805c5b3ba76f and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xa399f83b8d7e3; op2val:0xffe8805c5b3ba76f; valaddr_reg:x16; val_offset:1696; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1696, x17, x15, 1264, x18)

inst_488:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x94fdd88765c1f and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xde7300593ddb7 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe94fdd88765c1f; op2val:0xffede7300593ddb7; valaddr_reg:x16; val_offset:1712; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1712, x17, x15, 1280, x18)

inst_489:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xc1468c79c3df8 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x94fdd88765c1f and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800c1468c79c3df8; op2val:0x7fe94fdd88765c1f; valaddr_reg:x16; val_offset:1728; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1728, x17, x15, 1296, x18)

inst_490:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x94fdd88765c1f and fs2 == 1 and fe2 == 0x000 and fm2 == 0xc1468c79c3df8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe94fdd88765c1f; op2val:0x800c1468c79c3df8; valaddr_reg:x16; val_offset:1744; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1744, x17, x15, 1312, x18)

inst_491:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xa399f83b8d7e3 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xde7300593ddb7 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xa399f83b8d7e3; op2val:0xffede7300593ddb7; valaddr_reg:x16; val_offset:1760; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1760, x17, x15, 1328, x18)

inst_492:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x43fe46d2b7ce6 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xd2b592ef4e4e6 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb43fe46d2b7ce6; op2val:0xffdd2b592ef4e4e6; valaddr_reg:x16; val_offset:1776; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1776, x17, x15, 1344, x18)

inst_493:// fs1 == 1 and fe1 == 0x002 and fm1 == 0xd7552bdd8dd50 and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x43fe46d2b7ce6 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x802d7552bdd8dd50; op2val:0x7fb43fe46d2b7ce6; valaddr_reg:x16; val_offset:1792; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1792, x17, x15, 1360, x18)

inst_494:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x43fe46d2b7ce6 and fs2 == 1 and fe2 == 0x002 and fm2 == 0xd7552bdd8dd50 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb43fe46d2b7ce6; op2val:0x802d7552bdd8dd50; valaddr_reg:x16; val_offset:1808; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1808, x17, x15, 1376, x18)

inst_495:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xa399f83b8d7e3 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xd2b592ef4e4e6 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xa399f83b8d7e3; op2val:0xffdd2b592ef4e4e6; valaddr_reg:x16; val_offset:1824; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1824, x17, x15, 1392, x18)

inst_496:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x94fdd88765c1f and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x450c74c9b42e4 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe94fdd88765c1f; op2val:0x7fe450c74c9b42e4; valaddr_reg:x16; val_offset:1840; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1840, x17, x15, 1408, x18)

inst_497:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x834eb7d8ef590 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x94fdd88765c1f and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x834eb7d8ef590; op2val:0x7fe94fdd88765c1f; valaddr_reg:x16; val_offset:1856; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1856, x17, x15, 1424, x18)

inst_498:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x94fdd88765c1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x834eb7d8ef590 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe94fdd88765c1f; op2val:0x834eb7d8ef590; valaddr_reg:x16; val_offset:1872; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1872, x17, x15, 1440, x18)

inst_499:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xa399f83b8d7e3 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x450c74c9b42e4 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xa399f83b8d7e3; op2val:0x7fe450c74c9b42e4; valaddr_reg:x16; val_offset:1888; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1888, x17, x15, 1456, x18)

inst_500:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x94fdd88765c1f and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xac44ace32d282 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe94fdd88765c1f; op2val:0x7feac44ace32d282; valaddr_reg:x16; val_offset:1904; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1904, x17, x15, 1472, x18)

inst_501:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xad011d20e38de and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x94fdd88765c1f and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xad011d20e38de; op2val:0x7fe94fdd88765c1f; valaddr_reg:x16; val_offset:1920; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1920, x17, x15, 1488, x18)

inst_502:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x94fdd88765c1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0xad011d20e38de and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe94fdd88765c1f; op2val:0xad011d20e38de; valaddr_reg:x16; val_offset:1936; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1936, x17, x15, 1504, x18)

inst_503:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xa399f83b8d7e3 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xac44ace32d282 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xa399f83b8d7e3; op2val:0x7feac44ace32d282; valaddr_reg:x16; val_offset:1952; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1952, x17, x15, 1520, x18)

inst_504:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x43fe46d2b7ce6 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x09941946801c5 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb43fe46d2b7ce6; op2val:0x7fd09941946801c5; valaddr_reg:x16; val_offset:1968; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1968, x17, x15, 1536, x18)

inst_505:// fs1 == 0 and fe1 == 0x002 and fm1 == 0x0c359e655fb81 and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x43fe46d2b7ce6 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x20c359e655fb81; op2val:0x7fb43fe46d2b7ce6; valaddr_reg:x16; val_offset:1984; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1984, x17, x15, 1552, x18)

inst_506:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x43fe46d2b7ce6 and fs2 == 0 and fe2 == 0x002 and fm2 == 0x0c359e655fb81 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb43fe46d2b7ce6; op2val:0x20c359e655fb81; valaddr_reg:x16; val_offset:2000; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 2000, x17, x15, 1568, x18)

inst_507:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xa399f83b8d7e3 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x09941946801c5 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xa399f83b8d7e3; op2val:0x7fd09941946801c5; valaddr_reg:x16; val_offset:2016; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 2016, x17, x15, 1584, x18)
addi x16,x16,2032

inst_508:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x94fdd88765c1f and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x405e69652cae2 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe94fdd88765c1f; op2val:0x7fe405e69652cae2; valaddr_reg:x16; val_offset:0; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 0, x17, x15, 1600, x18)

inst_509:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x816ac0c54cf8a and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x94fdd88765c1f and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x816ac0c54cf8a; op2val:0x7fe94fdd88765c1f; valaddr_reg:x16; val_offset:16; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 16, x17, x15, 1616, x18)

inst_510:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x94fdd88765c1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x816ac0c54cf8a and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe94fdd88765c1f; op2val:0x816ac0c54cf8a; valaddr_reg:x16; val_offset:32; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 32, x17, x15, 1632, x18)

inst_511:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xa399f83b8d7e3 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x405e69652cae2 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xa399f83b8d7e3; op2val:0x7fe405e69652cae2; valaddr_reg:x16; val_offset:48; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 48, x17, x15, 1648, x18)

inst_512:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x43fe46d2b7ce6 and fs2 == 0 and fe2 == 0x7fc and fm2 == 0xe759ff97b7507 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb43fe46d2b7ce6; op2val:0x7fce759ff97b7507; valaddr_reg:x16; val_offset:64; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 64, x17, x15, 1664, x18)

inst_513:// fs1 == 0 and fe1 == 0x001 and fm1 == 0xec2df2149240f and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x43fe46d2b7ce6 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x1ec2df2149240f; op2val:0x7fb43fe46d2b7ce6; valaddr_reg:x16; val_offset:80; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 80, x17, x15, 1680, x18)

inst_514:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x43fe46d2b7ce6 and fs2 == 0 and fe2 == 0x001 and fm2 == 0xec2df2149240f and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb43fe46d2b7ce6; op2val:0x1ec2df2149240f; valaddr_reg:x16; val_offset:96; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 96, x17, x15, 1696, x18)

inst_515:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xa399f83b8d7e3 and fs2 == 0 and fe2 == 0x7fc and fm2 == 0xe759ff97b7507 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xa399f83b8d7e3; op2val:0x7fce759ff97b7507; valaddr_reg:x16; val_offset:112; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 112, x17, x15, 1712, x18)

inst_516:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfee29476f2e06 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfee29476f2e06 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xfee29476f2e06; op2val:0xfee29476f2e06; valaddr_reg:x16; val_offset:128; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 128, x17, x15, 1728, x18)

inst_517:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfee29476f2e06 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x1b91ae09e503b and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xfee29476f2e06; op2val:0x4001b91ae09e503b; valaddr_reg:x16; val_offset:144; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 144, x17, x15, 1744, x18)

inst_518:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfee29476f2e06 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xfee29476f2e06; op2val:0x0; valaddr_reg:x16; val_offset:160; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 160, x17, x15, 1760, x18)

inst_519:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfee29476f2e06 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x197d0ed8b1e34 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xfee29476f2e06; op2val:0x197d0ed8b1e34; valaddr_reg:x16; val_offset:176; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 176, x17, x15, 1776, x18)

inst_520:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x197d0ed8b1e34 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x423d517f83eb0 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x197d0ed8b1e34; op2val:0x800423d517f83eb0; valaddr_reg:x16; val_offset:192; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 192, x17, x15, 1792, x18)

inst_521:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfee29476f2e06 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x423d517f83eb0 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xfee29476f2e06; op2val:0x800423d517f83eb0; valaddr_reg:x16; val_offset:208; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 208, x17, x15, 1808, x18)

inst_522:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x197d0ed8b1e34 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x299ba050fc0c8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x197d0ed8b1e34; op2val:0x800299ba050fc0c8; valaddr_reg:x16; val_offset:224; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 224, x17, x15, 1824, x18)

inst_523:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfee29476f2e06 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x299ba050fc0c8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xfee29476f2e06; op2val:0x800299ba050fc0c8; valaddr_reg:x16; val_offset:240; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 240, x17, x15, 1840, x18)

inst_524:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x197d0ed8b1e34 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x65657f10d48db and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x197d0ed8b1e34; op2val:0x80065657f10d48db; valaddr_reg:x16; val_offset:256; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 256, x17, x15, 1856, x18)

inst_525:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfee29476f2e06 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x65657f10d48db and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xfee29476f2e06; op2val:0x80065657f10d48db; valaddr_reg:x16; val_offset:272; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 272, x17, x15, 1872, x18)

inst_526:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfee29476f2e06 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x028c817c11c9f and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xfee29476f2e06; op2val:0x28c817c11c9f; valaddr_reg:x16; val_offset:288; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 288, x17, x15, 1888, x18)

inst_527:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x028c817c11c9f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x035efa3d150a6 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x28c817c11c9f; op2val:0x35efa3d150a6; valaddr_reg:x16; val_offset:304; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 304, x17, x15, 1904, x18)

inst_528:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x5119bfdc380d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x028c817c11c9f and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x15119bfdc380d2; op2val:0x28c817c11c9f; valaddr_reg:x16; val_offset:320; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 320, x17, x15, 1920, x18)

inst_529:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x028c817c11c9f and fs2 == 0 and fe2 == 0x001 and fm2 == 0x5119bfdc380d2 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x28c817c11c9f; op2val:0x15119bfdc380d2; valaddr_reg:x16; val_offset:336; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 336, x17, x15, 1936, x18)

inst_530:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfee29476f2e06 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x035efa3d150a6 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xfee29476f2e06; op2val:0x35efa3d150a6; valaddr_reg:x16; val_offset:352; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 352, x17, x15, 1952, x18)

inst_531:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x197d0ed8b1e34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x5eb561bd4f6b8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x197d0ed8b1e34; op2val:0x5eb561bd4f6b8; valaddr_reg:x16; val_offset:368; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 368, x17, x15, 1968, x18)

inst_532:// fs1 == 0 and fe1 == 0x002 and fm1 == 0xd98ae8b28d198 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x197d0ed8b1e34 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x2d98ae8b28d198; op2val:0x197d0ed8b1e34; valaddr_reg:x16; val_offset:384; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 384, x17, x15, 1984, x18)

inst_533:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x197d0ed8b1e34 and fs2 == 0 and fe2 == 0x002 and fm2 == 0xd98ae8b28d198 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x197d0ed8b1e34; op2val:0x2d98ae8b28d198; valaddr_reg:x16; val_offset:400; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 400, x17, x15, 2000, x18)

inst_534:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfee29476f2e06 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x5eb561bd4f6b8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xfee29476f2e06; op2val:0x5eb561bd4f6b8; valaddr_reg:x16; val_offset:416; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 416, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_8)

inst_535:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfee29476f2e06 and fs2 == 0 and fe2 == 0x7fb and fm2 == 0xf8c50a18d0c04 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xfee29476f2e06; op2val:0x7fbf8c50a18d0c04; valaddr_reg:x16; val_offset:432; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 432, x17, x15, 0, x18)

inst_536:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xf8c50a18d0c04 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x0e3e4312fc728 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fbf8c50a18d0c04; op2val:0xffc0e3e4312fc728; valaddr_reg:x16; val_offset:448; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 448, x17, x15, 16, x18)

inst_537:// fs1 == 1 and fe1 == 0x001 and fm1 == 0x10eb9ca69d123 and fs2 == 0 and fe2 == 0x7fb and fm2 == 0xf8c50a18d0c04 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x80110eb9ca69d123; op2val:0x7fbf8c50a18d0c04; valaddr_reg:x16; val_offset:464; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 464, x17, x15, 32, x18)

inst_538:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xf8c50a18d0c04 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x10eb9ca69d123 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fbf8c50a18d0c04; op2val:0x80110eb9ca69d123; valaddr_reg:x16; val_offset:480; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 480, x17, x15, 48, x18)

inst_539:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfee29476f2e06 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x0e3e4312fc728 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xfee29476f2e06; op2val:0xffc0e3e4312fc728; valaddr_reg:x16; val_offset:496; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 496, x17, x15, 64, x18)

inst_540:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xf8c50a18d0c04 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x0c1b6ea69558e and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fbf8c50a18d0c04; op2val:0xffe0c1b6ea69558e; valaddr_reg:x16; val_offset:512; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 512, x17, x15, 80, x18)

inst_541:// fs1 == 1 and fe1 == 0x003 and fm1 == 0x0ec35d70c5080 and fs2 == 0 and fe2 == 0x7fb and fm2 == 0xf8c50a18d0c04 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x8030ec35d70c5080; op2val:0x7fbf8c50a18d0c04; valaddr_reg:x16; val_offset:528; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 528, x17, x15, 96, x18)

inst_542:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xf8c50a18d0c04 and fs2 == 1 and fe2 == 0x003 and fm2 == 0x0ec35d70c5080 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fbf8c50a18d0c04; op2val:0x8030ec35d70c5080; valaddr_reg:x16; val_offset:544; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 544, x17, x15, 112, x18)

inst_543:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfee29476f2e06 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x0c1b6ea69558e and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xfee29476f2e06; op2val:0xffe0c1b6ea69558e; valaddr_reg:x16; val_offset:560; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 560, x17, x15, 128, x18)

inst_544:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfee29476f2e06 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xfee29476f2e06; op2val:0x7ff0000000000000; valaddr_reg:x16; val_offset:576; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 576, x17, x15, 144, x18)

inst_545:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x8805c5b3ba76f and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7ff0000000000000; op2val:0xffe8805c5b3ba76f; valaddr_reg:x16; val_offset:592; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 592, x17, x15, 160, x18)

inst_546:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x9e5cc8c139f1c and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x8009e5cc8c139f1c; op2val:0x7ff0000000000000; valaddr_reg:x16; val_offset:608; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 608, x17, x15, 176, x18)

inst_547:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x9e5cc8c139f1c and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7ff0000000000000; op2val:0x8009e5cc8c139f1c; valaddr_reg:x16; val_offset:624; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 624, x17, x15, 192, x18)

inst_548:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfee29476f2e06 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x8805c5b3ba76f and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xfee29476f2e06; op2val:0xffe8805c5b3ba76f; valaddr_reg:x16; val_offset:640; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 640, x17, x15, 208, x18)

inst_549:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xde7300593ddb7 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7ff0000000000000; op2val:0xffede7300593ddb7; valaddr_reg:x16; val_offset:656; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 656, x17, x15, 224, x18)

inst_550:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xc1468c79c3df8 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800c1468c79c3df8; op2val:0x7ff0000000000000; valaddr_reg:x16; val_offset:672; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 672, x17, x15, 240, x18)

inst_551:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xc1468c79c3df8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7ff0000000000000; op2val:0x800c1468c79c3df8; valaddr_reg:x16; val_offset:688; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 688, x17, x15, 256, x18)

inst_552:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfee29476f2e06 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xde7300593ddb7 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xfee29476f2e06; op2val:0xffede7300593ddb7; valaddr_reg:x16; val_offset:704; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 704, x17, x15, 272, x18)

inst_553:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xf8c50a18d0c04 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xd2b592ef4e4e6 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fbf8c50a18d0c04; op2val:0xffdd2b592ef4e4e6; valaddr_reg:x16; val_offset:720; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 720, x17, x15, 288, x18)

inst_554:// fs1 == 1 and fe1 == 0x002 and fm1 == 0xd7552bdd8dd50 and fs2 == 0 and fe2 == 0x7fb and fm2 == 0xf8c50a18d0c04 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x802d7552bdd8dd50; op2val:0x7fbf8c50a18d0c04; valaddr_reg:x16; val_offset:736; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 736, x17, x15, 304, x18)

inst_555:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xf8c50a18d0c04 and fs2 == 1 and fe2 == 0x002 and fm2 == 0xd7552bdd8dd50 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fbf8c50a18d0c04; op2val:0x802d7552bdd8dd50; valaddr_reg:x16; val_offset:752; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 752, x17, x15, 320, x18)

inst_556:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfee29476f2e06 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xd2b592ef4e4e6 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xfee29476f2e06; op2val:0xffdd2b592ef4e4e6; valaddr_reg:x16; val_offset:768; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 768, x17, x15, 336, x18)

inst_557:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x450c74c9b42e4 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7ff0000000000000; op2val:0x7fe450c74c9b42e4; valaddr_reg:x16; val_offset:784; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 784, x17, x15, 352, x18)

inst_558:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x834eb7d8ef590 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x834eb7d8ef590; op2val:0x7ff0000000000000; valaddr_reg:x16; val_offset:800; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 800, x17, x15, 368, x18)

inst_559:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x834eb7d8ef590 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7ff0000000000000; op2val:0x834eb7d8ef590; valaddr_reg:x16; val_offset:816; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 816, x17, x15, 384, x18)

inst_560:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfee29476f2e06 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x450c74c9b42e4 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xfee29476f2e06; op2val:0x7fe450c74c9b42e4; valaddr_reg:x16; val_offset:832; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 832, x17, x15, 400, x18)

inst_561:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xac44ace32d282 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7ff0000000000000; op2val:0x7feac44ace32d282; valaddr_reg:x16; val_offset:848; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 848, x17, x15, 416, x18)

inst_562:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xad011d20e38de and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xad011d20e38de; op2val:0x7ff0000000000000; valaddr_reg:x16; val_offset:864; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 864, x17, x15, 432, x18)

inst_563:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xad011d20e38de and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7ff0000000000000; op2val:0xad011d20e38de; valaddr_reg:x16; val_offset:880; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 880, x17, x15, 448, x18)

inst_564:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfee29476f2e06 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xac44ace32d282 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xfee29476f2e06; op2val:0x7feac44ace32d282; valaddr_reg:x16; val_offset:896; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 896, x17, x15, 464, x18)

inst_565:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xf8c50a18d0c04 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x09941946801c5 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fbf8c50a18d0c04; op2val:0x7fd09941946801c5; valaddr_reg:x16; val_offset:912; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 912, x17, x15, 480, x18)

inst_566:// fs1 == 0 and fe1 == 0x002 and fm1 == 0x0c359e655fb81 and fs2 == 0 and fe2 == 0x7fb and fm2 == 0xf8c50a18d0c04 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x20c359e655fb81; op2val:0x7fbf8c50a18d0c04; valaddr_reg:x16; val_offset:928; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 928, x17, x15, 496, x18)

inst_567:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xf8c50a18d0c04 and fs2 == 0 and fe2 == 0x002 and fm2 == 0x0c359e655fb81 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fbf8c50a18d0c04; op2val:0x20c359e655fb81; valaddr_reg:x16; val_offset:944; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 944, x17, x15, 512, x18)

inst_568:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfee29476f2e06 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x09941946801c5 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xfee29476f2e06; op2val:0x7fd09941946801c5; valaddr_reg:x16; val_offset:960; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 960, x17, x15, 528, x18)

inst_569:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x405e69652cae2 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7ff0000000000000; op2val:0x7fe405e69652cae2; valaddr_reg:x16; val_offset:976; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 976, x17, x15, 544, x18)

inst_570:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x816ac0c54cf8a and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x816ac0c54cf8a; op2val:0x7ff0000000000000; valaddr_reg:x16; val_offset:992; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 992, x17, x15, 560, x18)

inst_571:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x816ac0c54cf8a and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7ff0000000000000; op2val:0x816ac0c54cf8a; valaddr_reg:x16; val_offset:1008; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1008, x17, x15, 576, x18)

inst_572:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfee29476f2e06 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x405e69652cae2 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xfee29476f2e06; op2val:0x7fe405e69652cae2; valaddr_reg:x16; val_offset:1024; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1024, x17, x15, 592, x18)

inst_573:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xf8c50a18d0c04 and fs2 == 0 and fe2 == 0x7fc and fm2 == 0xe759ff97b7507 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fbf8c50a18d0c04; op2val:0x7fce759ff97b7507; valaddr_reg:x16; val_offset:1040; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1040, x17, x15, 608, x18)

inst_574:// fs1 == 0 and fe1 == 0x001 and fm1 == 0xec2df2149240f and fs2 == 0 and fe2 == 0x7fb and fm2 == 0xf8c50a18d0c04 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x1ec2df2149240f; op2val:0x7fbf8c50a18d0c04; valaddr_reg:x16; val_offset:1056; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1056, x17, x15, 624, x18)

inst_575:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xf8c50a18d0c04 and fs2 == 0 and fe2 == 0x001 and fm2 == 0xec2df2149240f and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fbf8c50a18d0c04; op2val:0x1ec2df2149240f; valaddr_reg:x16; val_offset:1072; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1072, x17, x15, 640, x18)

inst_576:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xfee29476f2e06 and fs2 == 0 and fe2 == 0x7fc and fm2 == 0xe759ff97b7507 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xfee29476f2e06; op2val:0x7fce759ff97b7507; valaddr_reg:x16; val_offset:1088; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1088, x17, x15, 656, x18)

inst_577:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x035efa3d150a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x035efa3d150a6 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x35efa3d150a6; op2val:0x35efa3d150a6; valaddr_reg:x16; val_offset:1104; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1104, x17, x15, 672, x18)

inst_578:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x035efa3d150a6 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x77096ee4d2f12 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x35efa3d150a6; op2val:0x40077096ee4d2f12; valaddr_reg:x16; val_offset:1120; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1120, x17, x15, 688, x18)

inst_579:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x035efa3d150a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x35efa3d150a6; op2val:0x0; valaddr_reg:x16; val_offset:1136; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1136, x17, x15, 704, x18)

inst_580:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x035efa3d150a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x21b5c662d267b and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x35efa3d150a6; op2val:0x21b5c662d267b; valaddr_reg:x16; val_offset:1152; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1152, x17, x15, 720, x18)

inst_581:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x21b5c662d267b and fs2 == 1 and fe2 == 0x000 and fm2 == 0x423d517f83eb0 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x21b5c662d267b; op2val:0x800423d517f83eb0; valaddr_reg:x16; val_offset:1168; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1168, x17, x15, 736, x18)

inst_582:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x035efa3d150a6 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x423d517f83eb0 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x35efa3d150a6; op2val:0x800423d517f83eb0; valaddr_reg:x16; val_offset:1184; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1184, x17, x15, 752, x18)

inst_583:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x035efa3d150a6 and fs2 == 0 and fe2 == 0x001 and fm2 == 0x5119bfdc380d2 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x35efa3d150a6; op2val:0x15119bfdc380d2; valaddr_reg:x16; val_offset:1200; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1200, x17, x15, 768, x18)

inst_584:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x5119bfdc380d2 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xd97133b894184 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x15119bfdc380d2; op2val:0x800d97133b894184; valaddr_reg:x16; val_offset:1216; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1216, x17, x15, 784, x18)

inst_585:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x035efa3d150a6 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xd97133b894184 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x35efa3d150a6; op2val:0x800d97133b894184; valaddr_reg:x16; val_offset:1232; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1232, x17, x15, 800, x18)

inst_586:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x5119bfdc380d2 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x879ccf8eb0579 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x15119bfdc380d2; op2val:0x800879ccf8eb0579; valaddr_reg:x16; val_offset:1248; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1248, x17, x15, 816, x18)

inst_587:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x035efa3d150a6 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x879ccf8eb0579 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x35efa3d150a6; op2val:0x800879ccf8eb0579; valaddr_reg:x16; val_offset:1264; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1264, x17, x15, 832, x18)

inst_588:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x21b5c662d267b and fs2 == 1 and fe2 == 0x000 and fm2 == 0x299ba050fc0c8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x21b5c662d267b; op2val:0x800299ba050fc0c8; valaddr_reg:x16; val_offset:1280; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1280, x17, x15, 848, x18)

inst_589:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x035efa3d150a6 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x299ba050fc0c8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x35efa3d150a6; op2val:0x800299ba050fc0c8; valaddr_reg:x16; val_offset:1296; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1296, x17, x15, 864, x18)

inst_590:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x21b5c662d267b and fs2 == 1 and fe2 == 0x000 and fm2 == 0x65657f10d48db and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x21b5c662d267b; op2val:0x80065657f10d48db; valaddr_reg:x16; val_offset:1312; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1312, x17, x15, 880, x18)

inst_591:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x035efa3d150a6 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x65657f10d48db and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x35efa3d150a6; op2val:0x80065657f10d48db; valaddr_reg:x16; val_offset:1328; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1328, x17, x15, 896, x18)

inst_592:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x5119bfdc380d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x85ef342c7a5c9 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x15119bfdc380d2; op2val:0x85ef342c7a5c9; valaddr_reg:x16; val_offset:1344; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1344, x17, x15, 912, x18)

inst_593:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x035efa3d150a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x85ef342c7a5c9 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x35efa3d150a6; op2val:0x85ef342c7a5c9; valaddr_reg:x16; val_offset:1360; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1360, x17, x15, 928, x18)

inst_594:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x5119bfdc380d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xa399f83b8d7e3 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x15119bfdc380d2; op2val:0xa399f83b8d7e3; valaddr_reg:x16; val_offset:1376; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1376, x17, x15, 944, x18)

inst_595:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x035efa3d150a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xa399f83b8d7e3 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x35efa3d150a6; op2val:0xa399f83b8d7e3; valaddr_reg:x16; val_offset:1392; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1392, x17, x15, 960, x18)

inst_596:// fs1 == 0 and fe1 == 0x001 and fm1 == 0x5119bfdc380d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfee29476f2e06 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x15119bfdc380d2; op2val:0xfee29476f2e06; valaddr_reg:x16; val_offset:1408; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1408, x17, x15, 976, x18)

inst_597:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x035efa3d150a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfee29476f2e06 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x35efa3d150a6; op2val:0xfee29476f2e06; valaddr_reg:x16; val_offset:1424; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1424, x17, x15, 992, x18)

inst_598:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x21b5c662d267b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x5eb561bd4f6b8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x21b5c662d267b; op2val:0x5eb561bd4f6b8; valaddr_reg:x16; val_offset:1440; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1440, x17, x15, 1008, x18)

inst_599:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x097889c6218ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x21b5c662d267b and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x97889c6218ac; op2val:0x21b5c662d267b; valaddr_reg:x16; val_offset:1456; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1456, x17, x15, 1024, x18)

inst_600:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x21b5c662d267b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x097889c6218ac and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x21b5c662d267b; op2val:0x97889c6218ac; valaddr_reg:x16; val_offset:1472; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1472, x17, x15, 1040, x18)

inst_601:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x035efa3d150a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x5eb561bd4f6b8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x35efa3d150a6; op2val:0x5eb561bd4f6b8; valaddr_reg:x16; val_offset:1488; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1488, x17, x15, 1056, x18)

inst_602:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x035efa3d150a6 and fs2 == 0 and fe2 == 0x7fc and fm2 == 0x4dcb3b62b25ff and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x35efa3d150a6; op2val:0x7fc4dcb3b62b25ff; valaddr_reg:x16; val_offset:1504; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1504, x17, x15, 1072, x18)

inst_603:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x4dcb3b62b25ff and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x0e3e4312fc728 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fc4dcb3b62b25ff; op2val:0xffc0e3e4312fc728; valaddr_reg:x16; val_offset:1520; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1520, x17, x15, 1088, x18)

inst_604:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x02baad1625692 and fs2 == 0 and fe2 == 0x7fc and fm2 == 0x4dcb3b62b25ff and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x80002baad1625692; op2val:0x7fc4dcb3b62b25ff; valaddr_reg:x16; val_offset:1536; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1536, x17, x15, 1104, x18)

inst_605:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x4dcb3b62b25ff and fs2 == 1 and fe2 == 0x000 and fm2 == 0x02baad1625692 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fc4dcb3b62b25ff; op2val:0x80002baad1625692; valaddr_reg:x16; val_offset:1552; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1552, x17, x15, 1120, x18)

inst_606:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x035efa3d150a6 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x0e3e4312fc728 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x35efa3d150a6; op2val:0xffc0e3e4312fc728; valaddr_reg:x16; val_offset:1568; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1568, x17, x15, 1136, x18)

inst_607:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x4dcb3b62b25ff and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x0c1b6ea69558e and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fc4dcb3b62b25ff; op2val:0xffe0c1b6ea69558e; valaddr_reg:x16; val_offset:1584; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1584, x17, x15, 1152, x18)

inst_608:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0ad49d566e480 and fs2 == 0 and fe2 == 0x7fc and fm2 == 0x4dcb3b62b25ff and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x8000ad49d566e480; op2val:0x7fc4dcb3b62b25ff; valaddr_reg:x16; val_offset:1600; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1600, x17, x15, 1168, x18)

inst_609:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x4dcb3b62b25ff and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0ad49d566e480 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fc4dcb3b62b25ff; op2val:0x8000ad49d566e480; valaddr_reg:x16; val_offset:1616; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1616, x17, x15, 1184, x18)

inst_610:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x035efa3d150a6 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x0c1b6ea69558e and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x35efa3d150a6; op2val:0xffe0c1b6ea69558e; valaddr_reg:x16; val_offset:1632; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1632, x17, x15, 1200, x18)

inst_611:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x035efa3d150a6 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x35efa3d150a6; op2val:0x7ff0000000000000; valaddr_reg:x16; val_offset:1648; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1648, x17, x15, 1216, x18)

inst_612:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x01956868550f3 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x80001956868550f3; op2val:0x7ff0000000000000; valaddr_reg:x16; val_offset:1664; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1664, x17, x15, 1232, x18)

inst_613:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x01956868550f3 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7ff0000000000000; op2val:0x80001956868550f3; valaddr_reg:x16; val_offset:1680; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1680, x17, x15, 1248, x18)

inst_614:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x035efa3d150a6 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x8805c5b3ba76f and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x35efa3d150a6; op2val:0xffe8805c5b3ba76f; valaddr_reg:x16; val_offset:1696; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1696, x17, x15, 1264, x18)

inst_615:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x01eec915b2994 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x80001eec915b2994; op2val:0x7ff0000000000000; valaddr_reg:x16; val_offset:1712; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1712, x17, x15, 1280, x18)

inst_616:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x01eec915b2994 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7ff0000000000000; op2val:0x80001eec915b2994; valaddr_reg:x16; val_offset:1728; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1728, x17, x15, 1296, x18)

inst_617:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x035efa3d150a6 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xde7300593ddb7 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x35efa3d150a6; op2val:0xffede7300593ddb7; valaddr_reg:x16; val_offset:1744; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1744, x17, x15, 1312, x18)

inst_618:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x4dcb3b62b25ff and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xd2b592ef4e4e6 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fc4dcb3b62b25ff; op2val:0xffdd2b592ef4e4e6; valaddr_reg:x16; val_offset:1760; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1760, x17, x15, 1328, x18)

inst_619:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x096d393282d63 and fs2 == 0 and fe2 == 0x7fc and fm2 == 0x4dcb3b62b25ff and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800096d393282d63; op2val:0x7fc4dcb3b62b25ff; valaddr_reg:x16; val_offset:1776; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1776, x17, x15, 1344, x18)

inst_620:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x4dcb3b62b25ff and fs2 == 1 and fe2 == 0x000 and fm2 == 0x096d393282d63 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fc4dcb3b62b25ff; op2val:0x800096d393282d63; valaddr_reg:x16; val_offset:1792; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1792, x17, x15, 1360, x18)

inst_621:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x035efa3d150a6 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xd2b592ef4e4e6 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x35efa3d150a6; op2val:0xffdd2b592ef4e4e6; valaddr_reg:x16; val_offset:1808; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1808, x17, x15, 1376, x18)

inst_622:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x015025adb0793 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x15025adb0793; op2val:0x7ff0000000000000; valaddr_reg:x16; val_offset:1824; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1824, x17, x15, 1392, x18)

inst_623:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x015025adb0793 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7ff0000000000000; op2val:0x15025adb0793; valaddr_reg:x16; val_offset:1840; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1840, x17, x15, 1408, x18)

inst_624:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x035efa3d150a6 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x450c74c9b42e4 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x35efa3d150a6; op2val:0x7fe450c74c9b42e4; valaddr_reg:x16; val_offset:1856; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1856, x17, x15, 1424, x18)

inst_625:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x01bae4219be02 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x1bae4219be02; op2val:0x7ff0000000000000; valaddr_reg:x16; val_offset:1872; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1872, x17, x15, 1440, x18)

inst_626:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x01bae4219be02 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7ff0000000000000; op2val:0x1bae4219be02; valaddr_reg:x16; val_offset:1888; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1888, x17, x15, 1456, x18)

inst_627:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x035efa3d150a6 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xac44ace32d282 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x35efa3d150a6; op2val:0x7feac44ace32d282; valaddr_reg:x16; val_offset:1904; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1904, x17, x15, 1472, x18)

inst_628:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x4dcb3b62b25ff and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x09941946801c5 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fc4dcb3b62b25ff; op2val:0x7fd09941946801c5; valaddr_reg:x16; val_offset:1920; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1920, x17, x15, 1488, x18)

inst_629:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x055d3b7ce8508 and fs2 == 0 and fe2 == 0x7fc and fm2 == 0x4dcb3b62b25ff and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x55d3b7ce8508; op2val:0x7fc4dcb3b62b25ff; valaddr_reg:x16; val_offset:1936; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1936, x17, x15, 1504, x18)

inst_630:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x4dcb3b62b25ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x055d3b7ce8508 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fc4dcb3b62b25ff; op2val:0x55d3b7ce8508; valaddr_reg:x16; val_offset:1952; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1952, x17, x15, 1520, x18)

inst_631:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x035efa3d150a6 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x09941946801c5 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x35efa3d150a6; op2val:0x7fd09941946801c5; valaddr_reg:x16; val_offset:1968; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1968, x17, x15, 1536, x18)

inst_632:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x014b4eba4b028 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x14b4eba4b028; op2val:0x7ff0000000000000; valaddr_reg:x16; val_offset:1984; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1984, x17, x15, 1552, x18)

inst_633:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x014b4eba4b028 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7ff0000000000000; op2val:0x14b4eba4b028; valaddr_reg:x16; val_offset:2000; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 2000, x17, x15, 1568, x18)

inst_634:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x035efa3d150a6 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x405e69652cae2 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x35efa3d150a6; op2val:0x7fe405e69652cae2; valaddr_reg:x16; val_offset:2016; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 2016, x17, x15, 1584, x18)
addi x16,x16,2032

inst_635:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x4dcb3b62b25ff and fs2 == 0 and fe2 == 0x7fc and fm2 == 0xe759ff97b7507 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fc4dcb3b62b25ff; op2val:0x7fce759ff97b7507; valaddr_reg:x16; val_offset:0; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 0, x17, x15, 1600, x18)

inst_636:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x04ebfabda54d7 and fs2 == 0 and fe2 == 0x7fc and fm2 == 0x4dcb3b62b25ff and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x4ebfabda54d7; op2val:0x7fc4dcb3b62b25ff; valaddr_reg:x16; val_offset:16; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 16, x17, x15, 1616, x18)

inst_637:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x4dcb3b62b25ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x04ebfabda54d7 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fc4dcb3b62b25ff; op2val:0x4ebfabda54d7; valaddr_reg:x16; val_offset:32; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 32, x17, x15, 1632, x18)

inst_638:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x035efa3d150a6 and fs2 == 0 and fe2 == 0x7fc and fm2 == 0xe759ff97b7507 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x35efa3d150a6; op2val:0x7fce759ff97b7507; valaddr_reg:x16; val_offset:48; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 48, x17, x15, 1648, x18)

inst_639:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x5eb561bd4f6b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x5eb561bd4f6b8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x5eb561bd4f6b8; op2val:0x5eb561bd4f6b8; valaddr_reg:x16; val_offset:64; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 64, x17, x15, 1664, x18)

inst_640:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x5eb561bd4f6b8 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x076ab4deeec91 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x5eb561bd4f6b8; op2val:0x402076ab4deeec91; valaddr_reg:x16; val_offset:80; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 80, x17, x15, 1680, x18)

inst_641:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x5eb561bd4f6b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x5eb561bd4f6b8; op2val:0x0; valaddr_reg:x16; val_offset:96; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 96, x17, x15, 1696, x18)

inst_642:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x5eb561bd4f6b8 and fs2 == 0 and fe2 == 0x002 and fm2 == 0xd98ae8b28d198 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x5eb561bd4f6b8; op2val:0x2d98ae8b28d198; valaddr_reg:x16; val_offset:112; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 112, x17, x15, 1712, x18)

inst_643:// fs1 == 0 and fe1 == 0x002 and fm1 == 0xd98ae8b28d198 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xd97133b894184 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x2d98ae8b28d198; op2val:0x800d97133b894184; valaddr_reg:x16; val_offset:128; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 128, x17, x15, 1728, x18)

inst_644:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x5eb561bd4f6b8 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xd97133b894184 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x5eb561bd4f6b8; op2val:0x800d97133b894184; valaddr_reg:x16; val_offset:144; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 144, x17, x15, 1744, x18)

inst_645:// fs1 == 0 and fe1 == 0x002 and fm1 == 0xd98ae8b28d198 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x879ccf8eb0579 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x2d98ae8b28d198; op2val:0x800879ccf8eb0579; valaddr_reg:x16; val_offset:160; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 160, x17, x15, 1760, x18)

inst_646:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x5eb561bd4f6b8 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x879ccf8eb0579 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x5eb561bd4f6b8; op2val:0x800879ccf8eb0579; valaddr_reg:x16; val_offset:176; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 176, x17, x15, 1776, x18)

inst_647:// fs1 == 0 and fe1 == 0x002 and fm1 == 0xd98ae8b28d198 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x85ef342c7a5c9 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x2d98ae8b28d198; op2val:0x85ef342c7a5c9; valaddr_reg:x16; val_offset:192; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 192, x17, x15, 1792, x18)

inst_648:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x5eb561bd4f6b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x85ef342c7a5c9 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x5eb561bd4f6b8; op2val:0x85ef342c7a5c9; valaddr_reg:x16; val_offset:208; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 208, x17, x15, 1808, x18)

inst_649:// fs1 == 0 and fe1 == 0x002 and fm1 == 0xd98ae8b28d198 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xa399f83b8d7e3 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x2d98ae8b28d198; op2val:0xa399f83b8d7e3; valaddr_reg:x16; val_offset:224; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 224, x17, x15, 1824, x18)

inst_650:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x5eb561bd4f6b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xa399f83b8d7e3 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x5eb561bd4f6b8; op2val:0xa399f83b8d7e3; valaddr_reg:x16; val_offset:240; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 240, x17, x15, 1840, x18)

inst_651:// fs1 == 0 and fe1 == 0x002 and fm1 == 0xd98ae8b28d198 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfee29476f2e06 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x2d98ae8b28d198; op2val:0xfee29476f2e06; valaddr_reg:x16; val_offset:256; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 256, x17, x15, 1856, x18)

inst_652:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x5eb561bd4f6b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfee29476f2e06 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x5eb561bd4f6b8; op2val:0xfee29476f2e06; valaddr_reg:x16; val_offset:272; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 272, x17, x15, 1872, x18)

inst_653:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x5eb561bd4f6b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x097889c6218ac and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x5eb561bd4f6b8; op2val:0x97889c6218ac; valaddr_reg:x16; val_offset:288; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 288, x17, x15, 1888, x18)

inst_654:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x097889c6218ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x035efa3d150a6 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x97889c6218ac; op2val:0x35efa3d150a6; valaddr_reg:x16; val_offset:304; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 304, x17, x15, 1904, x18)

inst_655:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x5eb561bd4f6b8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x035efa3d150a6 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x5eb561bd4f6b8; op2val:0x35efa3d150a6; valaddr_reg:x16; val_offset:320; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 320, x17, x15, 1920, x18)

inst_656:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x5eb561bd4f6b8 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xd4e5c31a3975f and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x5eb561bd4f6b8; op2val:0x7fdd4e5c31a3975f; valaddr_reg:x16; val_offset:336; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 336, x17, x15, 1936, x18)

inst_657:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xd4e5c31a3975f and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x0e3e4312fc728 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fdd4e5c31a3975f; op2val:0xffc0e3e4312fc728; valaddr_reg:x16; val_offset:352; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 352, x17, x15, 1952, x18)

inst_658:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x1b4ac2dd761b7 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xd4e5c31a3975f and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x8001b4ac2dd761b7; op2val:0x7fdd4e5c31a3975f; valaddr_reg:x16; val_offset:368; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 368, x17, x15, 1968, x18)

inst_659:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xd4e5c31a3975f and fs2 == 1 and fe2 == 0x000 and fm2 == 0x1b4ac2dd761b7 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fdd4e5c31a3975f; op2val:0x8001b4ac2dd761b7; valaddr_reg:x16; val_offset:384; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 384, x17, x15, 1984, x18)

inst_660:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x5eb561bd4f6b8 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x0e3e4312fc728 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x5eb561bd4f6b8; op2val:0xffc0e3e4312fc728; valaddr_reg:x16; val_offset:400; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 400, x17, x15, 2000, x18)

inst_661:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xd4e5c31a3975f and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x0c1b6ea69558e and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fdd4e5c31a3975f; op2val:0xffe0c1b6ea69558e; valaddr_reg:x16; val_offset:416; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 416, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_9)

inst_662:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x6c4e25604ed00 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xd4e5c31a3975f and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x8006c4e25604ed00; op2val:0x7fdd4e5c31a3975f; valaddr_reg:x16; val_offset:432; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 432, x17, x15, 0, x18)

inst_663:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xd4e5c31a3975f and fs2 == 1 and fe2 == 0x000 and fm2 == 0x6c4e25604ed00 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fdd4e5c31a3975f; op2val:0x8006c4e25604ed00; valaddr_reg:x16; val_offset:448; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 448, x17, x15, 16, x18)

inst_664:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x5eb561bd4f6b8 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x0c1b6ea69558e and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x5eb561bd4f6b8; op2val:0xffe0c1b6ea69558e; valaddr_reg:x16; val_offset:464; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 464, x17, x15, 32, x18)

inst_665:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x5eb561bd4f6b8 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x5eb561bd4f6b8; op2val:0x7ff0000000000000; valaddr_reg:x16; val_offset:480; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 480, x17, x15, 48, x18)

inst_666:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0fd6141352983 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x8000fd6141352983; op2val:0x7ff0000000000000; valaddr_reg:x16; val_offset:496; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 496, x17, x15, 64, x18)

inst_667:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0fd6141352983 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7ff0000000000000; op2val:0x8000fd6141352983; valaddr_reg:x16; val_offset:512; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 512, x17, x15, 80, x18)

inst_668:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x5eb561bd4f6b8 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x8805c5b3ba76f and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x5eb561bd4f6b8; op2val:0xffe8805c5b3ba76f; valaddr_reg:x16; val_offset:528; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 528, x17, x15, 96, x18)

inst_669:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x1353dad8f9fcc and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x8001353dad8f9fcc; op2val:0x7ff0000000000000; valaddr_reg:x16; val_offset:544; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 544, x17, x15, 112, x18)

inst_670:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x1353dad8f9fcc and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7ff0000000000000; op2val:0x8001353dad8f9fcc; valaddr_reg:x16; val_offset:560; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 560, x17, x15, 128, x18)

inst_671:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x5eb561bd4f6b8 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xde7300593ddb7 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x5eb561bd4f6b8; op2val:0xffede7300593ddb7; valaddr_reg:x16; val_offset:576; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 576, x17, x15, 144, x18)

inst_672:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xd4e5c31a3975f and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xd2b592ef4e4e6 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fdd4e5c31a3975f; op2val:0xffdd2b592ef4e4e6; valaddr_reg:x16; val_offset:592; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 592, x17, x15, 160, x18)

inst_673:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x5e443bf91c5dd and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xd4e5c31a3975f and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x8005e443bf91c5dd; op2val:0x7fdd4e5c31a3975f; valaddr_reg:x16; val_offset:608; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 608, x17, x15, 176, x18)

inst_674:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xd4e5c31a3975f and fs2 == 1 and fe2 == 0x000 and fm2 == 0x5e443bf91c5dd and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fdd4e5c31a3975f; op2val:0x8005e443bf91c5dd; valaddr_reg:x16; val_offset:624; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 624, x17, x15, 192, x18)

inst_675:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x5eb561bd4f6b8 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xd2b592ef4e4e6 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x5eb561bd4f6b8; op2val:0xffdd2b592ef4e4e6; valaddr_reg:x16; val_offset:640; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 640, x17, x15, 208, x18)

inst_676:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0d2178c8e4bc2 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xd2178c8e4bc2; op2val:0x7ff0000000000000; valaddr_reg:x16; val_offset:656; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 656, x17, x15, 224, x18)

inst_677:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0d2178c8e4bc2 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7ff0000000000000; op2val:0xd2178c8e4bc2; valaddr_reg:x16; val_offset:672; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 672, x17, x15, 240, x18)

inst_678:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x5eb561bd4f6b8 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x450c74c9b42e4 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x5eb561bd4f6b8; op2val:0x7fe450c74c9b42e4; valaddr_reg:x16; val_offset:688; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 688, x17, x15, 256, x18)

inst_679:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x114ce95016c16 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x114ce95016c16; op2val:0x7ff0000000000000; valaddr_reg:x16; val_offset:704; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 704, x17, x15, 272, x18)

inst_680:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x114ce95016c16 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7ff0000000000000; op2val:0x114ce95016c16; valaddr_reg:x16; val_offset:720; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 720, x17, x15, 288, x18)

inst_681:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x5eb561bd4f6b8 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xac44ace32d282 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x5eb561bd4f6b8; op2val:0x7feac44ace32d282; valaddr_reg:x16; val_offset:736; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 736, x17, x15, 304, x18)

inst_682:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xd4e5c31a3975f and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x09941946801c5 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fdd4e5c31a3975f; op2val:0x7fd09941946801c5; valaddr_reg:x16; val_offset:752; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 752, x17, x15, 320, x18)

inst_683:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x35a452e11324d and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xd4e5c31a3975f and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x35a452e11324d; op2val:0x7fdd4e5c31a3975f; valaddr_reg:x16; val_offset:768; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 768, x17, x15, 336, x18)

inst_684:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xd4e5c31a3975f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x35a452e11324d and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fdd4e5c31a3975f; op2val:0x35a452e11324d; valaddr_reg:x16; val_offset:784; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 784, x17, x15, 352, x18)

inst_685:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x5eb561bd4f6b8 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x09941946801c5 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x5eb561bd4f6b8; op2val:0x7fd09941946801c5; valaddr_reg:x16; val_offset:800; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 800, x17, x15, 368, x18)

inst_686:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0cf11346ee18e and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xcf11346ee18e; op2val:0x7ff0000000000000; valaddr_reg:x16; val_offset:816; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 816, x17, x15, 384, x18)

inst_687:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0cf11346ee18e and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7ff0000000000000; op2val:0xcf11346ee18e; valaddr_reg:x16; val_offset:832; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 832, x17, x15, 400, x18)

inst_688:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x5eb561bd4f6b8 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x405e69652cae2 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x5eb561bd4f6b8; op2val:0x7fe405e69652cae2; valaddr_reg:x16; val_offset:848; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 848, x17, x15, 416, x18)

inst_689:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xd4e5c31a3975f and fs2 == 0 and fe2 == 0x7fc and fm2 == 0xe759ff97b7507 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fdd4e5c31a3975f; op2val:0x7fce759ff97b7507; valaddr_reg:x16; val_offset:864; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 864, x17, x15, 432, x18)

inst_690:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x3137cb6875068 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xd4e5c31a3975f and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x3137cb6875068; op2val:0x7fdd4e5c31a3975f; valaddr_reg:x16; val_offset:880; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 880, x17, x15, 448, x18)

inst_691:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xd4e5c31a3975f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x3137cb6875068 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fdd4e5c31a3975f; op2val:0x3137cb6875068; valaddr_reg:x16; val_offset:896; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 896, x17, x15, 464, x18)

inst_692:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x5eb561bd4f6b8 and fs2 == 0 and fe2 == 0x7fc and fm2 == 0xe759ff97b7507 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x5eb561bd4f6b8; op2val:0x7fce759ff97b7507; valaddr_reg:x16; val_offset:912; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 912, x17, x15, 480, x18)

inst_693:// fs1 == 1 and fe1 == 0x7fc and fm1 == 0x0e3e4312fc728 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x0e3e4312fc728 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffc0e3e4312fc728; op2val:0xffc0e3e4312fc728; valaddr_reg:x16; val_offset:928; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 928, x17, x15, 496, x18)

inst_694:// fs1 == 1 and fe1 == 0x7fc and fm1 == 0x0e3e4312fc728 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x2fa24c650ac14 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffc0e3e4312fc728; op2val:0xc002fa24c650ac14; valaddr_reg:x16; val_offset:944; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 944, x17, x15, 512, x18)

inst_695:// fs1 == 1 and fe1 == 0x7fc and fm1 == 0x0e3e4312fc728 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffc0e3e4312fc728; op2val:0x0; valaddr_reg:x16; val_offset:960; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 960, x17, x15, 528, x18)

inst_696:// fs1 == 1 and fe1 == 0x7fc and fm1 == 0x0e3e4312fc728 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x1b4ac2dd761b7 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffc0e3e4312fc728; op2val:0x8001b4ac2dd761b7; valaddr_reg:x16; val_offset:976; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 976, x17, x15, 544, x18)

inst_697:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x1b4ac2dd761b7 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x423d517f83eb0 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x8001b4ac2dd761b7; op2val:0x800423d517f83eb0; valaddr_reg:x16; val_offset:992; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 992, x17, x15, 560, x18)

inst_698:// fs1 == 1 and fe1 == 0x7fc and fm1 == 0x0e3e4312fc728 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x423d517f83eb0 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffc0e3e4312fc728; op2val:0x800423d517f83eb0; valaddr_reg:x16; val_offset:1008; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1008, x17, x15, 576, x18)

inst_699:// fs1 == 1 and fe1 == 0x7fc and fm1 == 0x0e3e4312fc728 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x10eb9ca69d123 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffc0e3e4312fc728; op2val:0x80110eb9ca69d123; valaddr_reg:x16; val_offset:1024; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1024, x17, x15, 592, x18)

inst_700:// fs1 == 1 and fe1 == 0x001 and fm1 == 0x10eb9ca69d123 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xd97133b894184 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x80110eb9ca69d123; op2val:0x800d97133b894184; valaddr_reg:x16; val_offset:1040; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1040, x17, x15, 608, x18)

inst_701:// fs1 == 1 and fe1 == 0x7fc and fm1 == 0x0e3e4312fc728 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xd97133b894184 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffc0e3e4312fc728; op2val:0x800d97133b894184; valaddr_reg:x16; val_offset:1056; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1056, x17, x15, 624, x18)

inst_702:// fs1 == 1 and fe1 == 0x001 and fm1 == 0x10eb9ca69d123 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x879ccf8eb0579 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x80110eb9ca69d123; op2val:0x800879ccf8eb0579; valaddr_reg:x16; val_offset:1072; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1072, x17, x15, 640, x18)

inst_703:// fs1 == 1 and fe1 == 0x7fc and fm1 == 0x0e3e4312fc728 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x879ccf8eb0579 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffc0e3e4312fc728; op2val:0x800879ccf8eb0579; valaddr_reg:x16; val_offset:1088; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1088, x17, x15, 656, x18)

inst_704:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x1b4ac2dd761b7 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x299ba050fc0c8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x8001b4ac2dd761b7; op2val:0x800299ba050fc0c8; valaddr_reg:x16; val_offset:1104; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1104, x17, x15, 672, x18)

inst_705:// fs1 == 1 and fe1 == 0x7fc and fm1 == 0x0e3e4312fc728 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x299ba050fc0c8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffc0e3e4312fc728; op2val:0x800299ba050fc0c8; valaddr_reg:x16; val_offset:1120; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1120, x17, x15, 688, x18)

inst_706:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x1b4ac2dd761b7 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x65657f10d48db and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x8001b4ac2dd761b7; op2val:0x80065657f10d48db; valaddr_reg:x16; val_offset:1136; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1136, x17, x15, 704, x18)

inst_707:// fs1 == 1 and fe1 == 0x7fc and fm1 == 0x0e3e4312fc728 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x65657f10d48db and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffc0e3e4312fc728; op2val:0x80065657f10d48db; valaddr_reg:x16; val_offset:1152; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1152, x17, x15, 720, x18)

inst_708:// fs1 == 1 and fe1 == 0x001 and fm1 == 0x10eb9ca69d123 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x85ef342c7a5c9 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x80110eb9ca69d123; op2val:0x85ef342c7a5c9; valaddr_reg:x16; val_offset:1168; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1168, x17, x15, 736, x18)

inst_709:// fs1 == 1 and fe1 == 0x7fc and fm1 == 0x0e3e4312fc728 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x85ef342c7a5c9 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffc0e3e4312fc728; op2val:0x85ef342c7a5c9; valaddr_reg:x16; val_offset:1184; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1184, x17, x15, 752, x18)

inst_710:// fs1 == 1 and fe1 == 0x001 and fm1 == 0x10eb9ca69d123 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xa399f83b8d7e3 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x80110eb9ca69d123; op2val:0xa399f83b8d7e3; valaddr_reg:x16; val_offset:1200; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1200, x17, x15, 768, x18)

inst_711:// fs1 == 1 and fe1 == 0x7fc and fm1 == 0x0e3e4312fc728 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xa399f83b8d7e3 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffc0e3e4312fc728; op2val:0xa399f83b8d7e3; valaddr_reg:x16; val_offset:1216; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1216, x17, x15, 784, x18)

inst_712:// fs1 == 1 and fe1 == 0x001 and fm1 == 0x10eb9ca69d123 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfee29476f2e06 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x80110eb9ca69d123; op2val:0xfee29476f2e06; valaddr_reg:x16; val_offset:1232; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1232, x17, x15, 800, x18)

inst_713:// fs1 == 1 and fe1 == 0x7fc and fm1 == 0x0e3e4312fc728 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfee29476f2e06 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffc0e3e4312fc728; op2val:0xfee29476f2e06; valaddr_reg:x16; val_offset:1248; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1248, x17, x15, 816, x18)

inst_714:// fs1 == 1 and fe1 == 0x7fc and fm1 == 0x0e3e4312fc728 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x02baad1625692 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffc0e3e4312fc728; op2val:0x80002baad1625692; valaddr_reg:x16; val_offset:1264; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1264, x17, x15, 832, x18)

inst_715:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x02baad1625692 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x035efa3d150a6 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x80002baad1625692; op2val:0x35efa3d150a6; valaddr_reg:x16; val_offset:1280; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1280, x17, x15, 848, x18)

inst_716:// fs1 == 1 and fe1 == 0x7fc and fm1 == 0x0e3e4312fc728 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x035efa3d150a6 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffc0e3e4312fc728; op2val:0x35efa3d150a6; valaddr_reg:x16; val_offset:1296; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1296, x17, x15, 864, x18)

inst_717:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x1b4ac2dd761b7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x5eb561bd4f6b8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x8001b4ac2dd761b7; op2val:0x5eb561bd4f6b8; valaddr_reg:x16; val_offset:1312; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1312, x17, x15, 880, x18)

inst_718:// fs1 == 1 and fe1 == 0x7fc and fm1 == 0x0e3e4312fc728 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x5eb561bd4f6b8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffc0e3e4312fc728; op2val:0x5eb561bd4f6b8; valaddr_reg:x16; val_offset:1328; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1328, x17, x15, 896, x18)

inst_719:// fs1 == 1 and fe1 == 0x7fc and fm1 == 0x0e3e4312fc728 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x0c1b6ea69558e and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffc0e3e4312fc728; op2val:0xffe0c1b6ea69558e; valaddr_reg:x16; val_offset:1344; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1344, x17, x15, 912, x18)

inst_720:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x0c1b6ea69558e and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x0e3e4312fc728 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe0c1b6ea69558e; op2val:0xffc0e3e4312fc728; valaddr_reg:x16; val_offset:1360; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1360, x17, x15, 928, x18)

inst_721:// fs1 == 1 and fe1 == 0x7fc and fm1 == 0x0e3e4312fc728 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffc0e3e4312fc728; op2val:0xfff0000000000000; valaddr_reg:x16; val_offset:1376; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1376, x17, x15, 944, x18)

inst_722:// fs1 == 1 and fe1 == 0x7fb and fm1 == 0x399e37c2fb926 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffb399e37c2fb926; op2val:0xfff0000000000000; valaddr_reg:x16; val_offset:1392; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1392, x17, x15, 960, x18)

inst_723:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x7fb and fm2 == 0x399e37c2fb926 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xfff0000000000000; op2val:0xffb399e37c2fb926; valaddr_reg:x16; val_offset:1408; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1408, x17, x15, 976, x18)

inst_724:// fs1 == 1 and fe1 == 0x7fc and fm1 == 0x0e3e4312fc728 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x8805c5b3ba76f and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffc0e3e4312fc728; op2val:0xffe8805c5b3ba76f; valaddr_reg:x16; val_offset:1424; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1424, x17, x15, 992, x18)

inst_725:// fs1 == 1 and fe1 == 0x7fb and fm1 == 0x7ec266adcb15f and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffb7ec266adcb15f; op2val:0xfff0000000000000; valaddr_reg:x16; val_offset:1440; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1440, x17, x15, 1008, x18)

inst_726:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x7fb and fm2 == 0x7ec266adcb15f and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xfff0000000000000; op2val:0xffb7ec266adcb15f; valaddr_reg:x16; val_offset:1456; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1456, x17, x15, 1024, x18)

inst_727:// fs1 == 1 and fe1 == 0x7fc and fm1 == 0x0e3e4312fc728 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xde7300593ddb7 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffc0e3e4312fc728; op2val:0xffede7300593ddb7; valaddr_reg:x16; val_offset:1472; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1472, x17, x15, 1040, x18)

inst_728:// fs1 == 1 and fe1 == 0x7fc and fm1 == 0x0e3e4312fc728 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xd2b592ef4e4e6 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffc0e3e4312fc728; op2val:0xffdd2b592ef4e4e6; valaddr_reg:x16; val_offset:1488; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1488, x17, x15, 1056, x18)

inst_729:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xd2b592ef4e4e6 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x0e3e4312fc728 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffdd2b592ef4e4e6; op2val:0xffc0e3e4312fc728; valaddr_reg:x16; val_offset:1504; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1504, x17, x15, 1072, x18)

inst_730:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x0409f707c3583 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb0409f707c3583; op2val:0xfff0000000000000; valaddr_reg:x16; val_offset:1520; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1520, x17, x15, 1088, x18)

inst_731:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x0409f707c3583 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xfff0000000000000; op2val:0x7fb0409f707c3583; valaddr_reg:x16; val_offset:1536; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1536, x17, x15, 1104, x18)

inst_732:// fs1 == 1 and fe1 == 0x7fc and fm1 == 0x0e3e4312fc728 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x450c74c9b42e4 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffc0e3e4312fc728; op2val:0x7fe450c74c9b42e4; valaddr_reg:x16; val_offset:1552; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1552, x17, x15, 1120, x18)

inst_733:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x569d571c24201 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb569d571c24201; op2val:0xfff0000000000000; valaddr_reg:x16; val_offset:1568; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1568, x17, x15, 1136, x18)

inst_734:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x569d571c24201 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xfff0000000000000; op2val:0x7fb569d571c24201; valaddr_reg:x16; val_offset:1584; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1584, x17, x15, 1152, x18)

inst_735:// fs1 == 1 and fe1 == 0x7fc and fm1 == 0x0e3e4312fc728 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xac44ace32d282 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffc0e3e4312fc728; op2val:0x7feac44ace32d282; valaddr_reg:x16; val_offset:1600; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1600, x17, x15, 1168, x18)

inst_736:// fs1 == 1 and fe1 == 0x7fc and fm1 == 0x0e3e4312fc728 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x09941946801c5 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffc0e3e4312fc728; op2val:0x7fd09941946801c5; valaddr_reg:x16; val_offset:1616; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1616, x17, x15, 1184, x18)

inst_737:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x09941946801c5 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x0e3e4312fc728 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fd09941946801c5; op2val:0xffc0e3e4312fc728; valaddr_reg:x16; val_offset:1632; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1632, x17, x15, 1200, x18)

inst_738:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x004b878423be8 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb004b878423be8; op2val:0xfff0000000000000; valaddr_reg:x16; val_offset:1648; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1648, x17, x15, 1216, x18)

inst_739:// fs1 == 1 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x004b878423be8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xfff0000000000000; op2val:0x7fb004b878423be8; valaddr_reg:x16; val_offset:1664; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1664, x17, x15, 1232, x18)

inst_740:// fs1 == 1 and fe1 == 0x7fc and fm1 == 0x0e3e4312fc728 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x405e69652cae2 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffc0e3e4312fc728; op2val:0x7fe405e69652cae2; valaddr_reg:x16; val_offset:1680; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1680, x17, x15, 1248, x18)

inst_741:// fs1 == 1 and fe1 == 0x7fc and fm1 == 0x0e3e4312fc728 and fs2 == 0 and fe2 == 0x7fc and fm2 == 0xe759ff97b7507 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffc0e3e4312fc728; op2val:0x7fce759ff97b7507; valaddr_reg:x16; val_offset:1696; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1696, x17, x15, 1264, x18)

inst_742:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xe759ff97b7507 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x0e3e4312fc728 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fce759ff97b7507; op2val:0xffc0e3e4312fc728; valaddr_reg:x16; val_offset:1712; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1712, x17, x15, 1280, x18)

inst_743:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x0c1b6ea69558e and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x0c1b6ea69558e and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe0c1b6ea69558e; op2val:0xffe0c1b6ea69558e; valaddr_reg:x16; val_offset:1728; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1728, x17, x15, 1296, x18)

inst_744:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x0c1b6ea69558e and fs2 == 1 and fe2 == 0x402 and fm2 == 0x2d3be740985a9 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe0c1b6ea69558e; op2val:0xc022d3be740985a9; valaddr_reg:x16; val_offset:1744; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1744, x17, x15, 1312, x18)

inst_745:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x0c1b6ea69558e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe0c1b6ea69558e; op2val:0x0; valaddr_reg:x16; val_offset:1760; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1760, x17, x15, 1328, x18)

inst_746:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x0c1b6ea69558e and fs2 == 1 and fe2 == 0x000 and fm2 == 0x6c4e25604ed00 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe0c1b6ea69558e; op2val:0x8006c4e25604ed00; valaddr_reg:x16; val_offset:1776; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1776, x17, x15, 1344, x18)

inst_747:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x6c4e25604ed00 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x423d517f83eb0 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x8006c4e25604ed00; op2val:0x800423d517f83eb0; valaddr_reg:x16; val_offset:1792; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1792, x17, x15, 1360, x18)

inst_748:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x0c1b6ea69558e and fs2 == 1 and fe2 == 0x000 and fm2 == 0x423d517f83eb0 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe0c1b6ea69558e; op2val:0x800423d517f83eb0; valaddr_reg:x16; val_offset:1808; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1808, x17, x15, 1376, x18)

inst_749:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x0c1b6ea69558e and fs2 == 1 and fe2 == 0x003 and fm2 == 0x0ec35d70c5080 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe0c1b6ea69558e; op2val:0x8030ec35d70c5080; valaddr_reg:x16; val_offset:1824; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1824, x17, x15, 1392, x18)

inst_750:// fs1 == 1 and fe1 == 0x003 and fm1 == 0x0ec35d70c5080 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xd97133b894184 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x8030ec35d70c5080; op2val:0x800d97133b894184; valaddr_reg:x16; val_offset:1840; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1840, x17, x15, 1408, x18)

inst_751:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x0c1b6ea69558e and fs2 == 1 and fe2 == 0x000 and fm2 == 0xd97133b894184 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe0c1b6ea69558e; op2val:0x800d97133b894184; valaddr_reg:x16; val_offset:1856; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1856, x17, x15, 1424, x18)

inst_752:// fs1 == 1 and fe1 == 0x003 and fm1 == 0x0ec35d70c5080 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x879ccf8eb0579 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x8030ec35d70c5080; op2val:0x800879ccf8eb0579; valaddr_reg:x16; val_offset:1872; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1872, x17, x15, 1440, x18)

inst_753:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x0c1b6ea69558e and fs2 == 1 and fe2 == 0x000 and fm2 == 0x879ccf8eb0579 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe0c1b6ea69558e; op2val:0x800879ccf8eb0579; valaddr_reg:x16; val_offset:1888; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1888, x17, x15, 1456, x18)

inst_754:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x6c4e25604ed00 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x299ba050fc0c8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x8006c4e25604ed00; op2val:0x800299ba050fc0c8; valaddr_reg:x16; val_offset:1904; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1904, x17, x15, 1472, x18)

inst_755:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x0c1b6ea69558e and fs2 == 1 and fe2 == 0x000 and fm2 == 0x299ba050fc0c8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe0c1b6ea69558e; op2val:0x800299ba050fc0c8; valaddr_reg:x16; val_offset:1920; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1920, x17, x15, 1488, x18)

inst_756:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x6c4e25604ed00 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x65657f10d48db and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x8006c4e25604ed00; op2val:0x80065657f10d48db; valaddr_reg:x16; val_offset:1936; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1936, x17, x15, 1504, x18)

inst_757:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x0c1b6ea69558e and fs2 == 1 and fe2 == 0x000 and fm2 == 0x65657f10d48db and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe0c1b6ea69558e; op2val:0x80065657f10d48db; valaddr_reg:x16; val_offset:1952; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1952, x17, x15, 1520, x18)

inst_758:// fs1 == 1 and fe1 == 0x003 and fm1 == 0x0ec35d70c5080 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x85ef342c7a5c9 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x8030ec35d70c5080; op2val:0x85ef342c7a5c9; valaddr_reg:x16; val_offset:1968; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1968, x17, x15, 1536, x18)

inst_759:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x0c1b6ea69558e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x85ef342c7a5c9 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe0c1b6ea69558e; op2val:0x85ef342c7a5c9; valaddr_reg:x16; val_offset:1984; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1984, x17, x15, 1552, x18)

inst_760:// fs1 == 1 and fe1 == 0x003 and fm1 == 0x0ec35d70c5080 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xa399f83b8d7e3 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x8030ec35d70c5080; op2val:0xa399f83b8d7e3; valaddr_reg:x16; val_offset:2000; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 2000, x17, x15, 1568, x18)

inst_761:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x0c1b6ea69558e and fs2 == 0 and fe2 == 0x000 and fm2 == 0xa399f83b8d7e3 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe0c1b6ea69558e; op2val:0xa399f83b8d7e3; valaddr_reg:x16; val_offset:2016; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 2016, x17, x15, 1584, x18)
addi x16,x16,2032

inst_762:// fs1 == 1 and fe1 == 0x003 and fm1 == 0x0ec35d70c5080 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfee29476f2e06 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x8030ec35d70c5080; op2val:0xfee29476f2e06; valaddr_reg:x16; val_offset:0; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 0, x17, x15, 1600, x18)

inst_763:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x0c1b6ea69558e and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfee29476f2e06 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe0c1b6ea69558e; op2val:0xfee29476f2e06; valaddr_reg:x16; val_offset:16; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 16, x17, x15, 1616, x18)

inst_764:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x0c1b6ea69558e and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0ad49d566e480 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe0c1b6ea69558e; op2val:0x8000ad49d566e480; valaddr_reg:x16; val_offset:32; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 32, x17, x15, 1632, x18)

inst_765:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0ad49d566e480 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x035efa3d150a6 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x8000ad49d566e480; op2val:0x35efa3d150a6; valaddr_reg:x16; val_offset:48; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 48, x17, x15, 1648, x18)

inst_766:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x0c1b6ea69558e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x035efa3d150a6 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe0c1b6ea69558e; op2val:0x35efa3d150a6; valaddr_reg:x16; val_offset:64; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 64, x17, x15, 1664, x18)

inst_767:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x6c4e25604ed00 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x5eb561bd4f6b8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x8006c4e25604ed00; op2val:0x5eb561bd4f6b8; valaddr_reg:x16; val_offset:80; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 80, x17, x15, 1680, x18)

inst_768:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x0c1b6ea69558e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x5eb561bd4f6b8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe0c1b6ea69558e; op2val:0x5eb561bd4f6b8; valaddr_reg:x16; val_offset:96; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 96, x17, x15, 1696, x18)

inst_769:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x0c1b6ea69558e and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe0c1b6ea69558e; op2val:0xfff0000000000000; valaddr_reg:x16; val_offset:112; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 112, x17, x15, 1712, x18)

inst_770:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x0c1b6ea69558e and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x8805c5b3ba76f and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe0c1b6ea69558e; op2val:0xffe8805c5b3ba76f; valaddr_reg:x16; val_offset:128; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 128, x17, x15, 1728, x18)

inst_771:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x0c1b6ea69558e and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xde7300593ddb7 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe0c1b6ea69558e; op2val:0xffede7300593ddb7; valaddr_reg:x16; val_offset:144; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 144, x17, x15, 1744, x18)

inst_772:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x0c1b6ea69558e and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xd2b592ef4e4e6 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe0c1b6ea69558e; op2val:0xffdd2b592ef4e4e6; valaddr_reg:x16; val_offset:160; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 160, x17, x15, 1760, x18)

inst_773:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xd2b592ef4e4e6 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x0c1b6ea69558e and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffdd2b592ef4e4e6; op2val:0xffe0c1b6ea69558e; valaddr_reg:x16; val_offset:176; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 176, x17, x15, 1776, x18)

inst_774:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x0c1b6ea69558e and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x450c74c9b42e4 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe0c1b6ea69558e; op2val:0x7fe450c74c9b42e4; valaddr_reg:x16; val_offset:192; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 192, x17, x15, 1792, x18)

inst_775:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x0c1b6ea69558e and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xac44ace32d282 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe0c1b6ea69558e; op2val:0x7feac44ace32d282; valaddr_reg:x16; val_offset:208; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 208, x17, x15, 1808, x18)

inst_776:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x0c1b6ea69558e and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x09941946801c5 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe0c1b6ea69558e; op2val:0x7fd09941946801c5; valaddr_reg:x16; val_offset:224; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 224, x17, x15, 1824, x18)

inst_777:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x09941946801c5 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x0c1b6ea69558e and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fd09941946801c5; op2val:0xffe0c1b6ea69558e; valaddr_reg:x16; val_offset:240; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 240, x17, x15, 1840, x18)

inst_778:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x0c1b6ea69558e and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x405e69652cae2 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe0c1b6ea69558e; op2val:0x7fe405e69652cae2; valaddr_reg:x16; val_offset:256; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 256, x17, x15, 1856, x18)

inst_779:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x0c1b6ea69558e and fs2 == 0 and fe2 == 0x7fc and fm2 == 0xe759ff97b7507 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe0c1b6ea69558e; op2val:0x7fce759ff97b7507; valaddr_reg:x16; val_offset:272; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 272, x17, x15, 1872, x18)

inst_780:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xe759ff97b7507 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x0c1b6ea69558e and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fce759ff97b7507; op2val:0xffe0c1b6ea69558e; valaddr_reg:x16; val_offset:288; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 288, x17, x15, 1888, x18)

inst_781:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x8805c5b3ba76f and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x8805c5b3ba76f and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe8805c5b3ba76f; op2val:0xffe8805c5b3ba76f; valaddr_reg:x16; val_offset:304; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 304, x17, x15, 1904, x18)

inst_782:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x8805c5b3ba76f and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x605e3d372e471 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe8805c5b3ba76f; op2val:0xbff605e3d372e471; valaddr_reg:x16; val_offset:320; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 320, x17, x15, 1920, x18)

inst_783:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x8805c5b3ba76f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe8805c5b3ba76f; op2val:0x0; valaddr_reg:x16; val_offset:336; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 336, x17, x15, 1936, x18)

inst_784:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x8805c5b3ba76f and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0fd6141352983 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe8805c5b3ba76f; op2val:0x8000fd6141352983; valaddr_reg:x16; val_offset:352; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 352, x17, x15, 1952, x18)

inst_785:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0fd6141352983 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x423d517f83eb0 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x8000fd6141352983; op2val:0x800423d517f83eb0; valaddr_reg:x16; val_offset:368; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 368, x17, x15, 1968, x18)

inst_786:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x8805c5b3ba76f and fs2 == 1 and fe2 == 0x000 and fm2 == 0x423d517f83eb0 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe8805c5b3ba76f; op2val:0x800423d517f83eb0; valaddr_reg:x16; val_offset:384; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 384, x17, x15, 1984, x18)

inst_787:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x8805c5b3ba76f and fs2 == 1 and fe2 == 0x000 and fm2 == 0x9e5cc8c139f1c and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe8805c5b3ba76f; op2val:0x8009e5cc8c139f1c; valaddr_reg:x16; val_offset:400; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 400, x17, x15, 2000, x18)

inst_788:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x9e5cc8c139f1c and fs2 == 1 and fe2 == 0x000 and fm2 == 0xd97133b894184 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x8009e5cc8c139f1c; op2val:0x800d97133b894184; valaddr_reg:x16; val_offset:416; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 416, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_10)

inst_789:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x8805c5b3ba76f and fs2 == 1 and fe2 == 0x000 and fm2 == 0xd97133b894184 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe8805c5b3ba76f; op2val:0x800d97133b894184; valaddr_reg:x16; val_offset:432; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 432, x17, x15, 0, x18)

inst_790:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x9e5cc8c139f1c and fs2 == 1 and fe2 == 0x000 and fm2 == 0x879ccf8eb0579 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x8009e5cc8c139f1c; op2val:0x800879ccf8eb0579; valaddr_reg:x16; val_offset:448; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 448, x17, x15, 16, x18)

inst_791:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x8805c5b3ba76f and fs2 == 1 and fe2 == 0x000 and fm2 == 0x879ccf8eb0579 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe8805c5b3ba76f; op2val:0x800879ccf8eb0579; valaddr_reg:x16; val_offset:464; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 464, x17, x15, 32, x18)

inst_792:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0fd6141352983 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x299ba050fc0c8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x8000fd6141352983; op2val:0x800299ba050fc0c8; valaddr_reg:x16; val_offset:480; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 480, x17, x15, 48, x18)

inst_793:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x8805c5b3ba76f and fs2 == 1 and fe2 == 0x000 and fm2 == 0x299ba050fc0c8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe8805c5b3ba76f; op2val:0x800299ba050fc0c8; valaddr_reg:x16; val_offset:496; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 496, x17, x15, 64, x18)

inst_794:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0fd6141352983 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x65657f10d48db and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x8000fd6141352983; op2val:0x80065657f10d48db; valaddr_reg:x16; val_offset:512; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 512, x17, x15, 80, x18)

inst_795:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x8805c5b3ba76f and fs2 == 1 and fe2 == 0x000 and fm2 == 0x65657f10d48db and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe8805c5b3ba76f; op2val:0x80065657f10d48db; valaddr_reg:x16; val_offset:528; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 528, x17, x15, 96, x18)

inst_796:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x9e5cc8c139f1c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x85ef342c7a5c9 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x8009e5cc8c139f1c; op2val:0x85ef342c7a5c9; valaddr_reg:x16; val_offset:544; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 544, x17, x15, 112, x18)

inst_797:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x8805c5b3ba76f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x85ef342c7a5c9 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe8805c5b3ba76f; op2val:0x85ef342c7a5c9; valaddr_reg:x16; val_offset:560; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 560, x17, x15, 128, x18)

inst_798:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x9e5cc8c139f1c and fs2 == 0 and fe2 == 0x000 and fm2 == 0xa399f83b8d7e3 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x8009e5cc8c139f1c; op2val:0xa399f83b8d7e3; valaddr_reg:x16; val_offset:576; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 576, x17, x15, 144, x18)

inst_799:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x8805c5b3ba76f and fs2 == 0 and fe2 == 0x000 and fm2 == 0xa399f83b8d7e3 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe8805c5b3ba76f; op2val:0xa399f83b8d7e3; valaddr_reg:x16; val_offset:592; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 592, x17, x15, 160, x18)

inst_800:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x9e5cc8c139f1c and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfee29476f2e06 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x8009e5cc8c139f1c; op2val:0xfee29476f2e06; valaddr_reg:x16; val_offset:608; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 608, x17, x15, 176, x18)

inst_801:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x8805c5b3ba76f and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfee29476f2e06 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe8805c5b3ba76f; op2val:0xfee29476f2e06; valaddr_reg:x16; val_offset:624; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 624, x17, x15, 192, x18)

inst_802:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x8805c5b3ba76f and fs2 == 1 and fe2 == 0x000 and fm2 == 0x01956868550f3 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe8805c5b3ba76f; op2val:0x80001956868550f3; valaddr_reg:x16; val_offset:640; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 640, x17, x15, 208, x18)

inst_803:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x01956868550f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x035efa3d150a6 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x80001956868550f3; op2val:0x35efa3d150a6; valaddr_reg:x16; val_offset:656; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 656, x17, x15, 224, x18)

inst_804:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x8805c5b3ba76f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x035efa3d150a6 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe8805c5b3ba76f; op2val:0x35efa3d150a6; valaddr_reg:x16; val_offset:672; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 672, x17, x15, 240, x18)

inst_805:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x0fd6141352983 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x5eb561bd4f6b8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x8000fd6141352983; op2val:0x5eb561bd4f6b8; valaddr_reg:x16; val_offset:688; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 688, x17, x15, 256, x18)

inst_806:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x8805c5b3ba76f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x5eb561bd4f6b8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe8805c5b3ba76f; op2val:0x5eb561bd4f6b8; valaddr_reg:x16; val_offset:704; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 704, x17, x15, 272, x18)

inst_807:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x8805c5b3ba76f and fs2 == 1 and fe2 == 0x7fb and fm2 == 0x399e37c2fb926 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe8805c5b3ba76f; op2val:0xffb399e37c2fb926; valaddr_reg:x16; val_offset:720; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 720, x17, x15, 288, x18)

inst_808:// fs1 == 1 and fe1 == 0x7fb and fm1 == 0x399e37c2fb926 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x0e3e4312fc728 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffb399e37c2fb926; op2val:0xffc0e3e4312fc728; valaddr_reg:x16; val_offset:736; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 736, x17, x15, 304, x18)

inst_809:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x8805c5b3ba76f and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x0e3e4312fc728 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe8805c5b3ba76f; op2val:0xffc0e3e4312fc728; valaddr_reg:x16; val_offset:752; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 752, x17, x15, 320, x18)

inst_810:// fs1 == 1 and fe1 == 0x7fb and fm1 == 0x399e37c2fb926 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x0c1b6ea69558e and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffb399e37c2fb926; op2val:0xffe0c1b6ea69558e; valaddr_reg:x16; val_offset:768; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 768, x17, x15, 336, x18)

inst_811:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x8805c5b3ba76f and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x0c1b6ea69558e and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe8805c5b3ba76f; op2val:0xffe0c1b6ea69558e; valaddr_reg:x16; val_offset:784; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 784, x17, x15, 352, x18)

inst_812:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x8805c5b3ba76f and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xde7300593ddb7 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe8805c5b3ba76f; op2val:0xffede7300593ddb7; valaddr_reg:x16; val_offset:800; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 800, x17, x15, 368, x18)

inst_813:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xde7300593ddb7 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x8805c5b3ba76f and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffede7300593ddb7; op2val:0xffe8805c5b3ba76f; valaddr_reg:x16; val_offset:816; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 816, x17, x15, 384, x18)

inst_814:// fs1 == 1 and fe1 == 0x7fb and fm1 == 0x399e37c2fb926 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xd2b592ef4e4e6 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffb399e37c2fb926; op2val:0xffdd2b592ef4e4e6; valaddr_reg:x16; val_offset:832; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 832, x17, x15, 400, x18)

inst_815:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x8805c5b3ba76f and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xd2b592ef4e4e6 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe8805c5b3ba76f; op2val:0xffdd2b592ef4e4e6; valaddr_reg:x16; val_offset:848; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 848, x17, x15, 416, x18)

inst_816:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x8805c5b3ba76f and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x450c74c9b42e4 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe8805c5b3ba76f; op2val:0x7fe450c74c9b42e4; valaddr_reg:x16; val_offset:864; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 864, x17, x15, 432, x18)

inst_817:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x450c74c9b42e4 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x8805c5b3ba76f and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe450c74c9b42e4; op2val:0xffe8805c5b3ba76f; valaddr_reg:x16; val_offset:880; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 880, x17, x15, 448, x18)

inst_818:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x8805c5b3ba76f and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xac44ace32d282 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe8805c5b3ba76f; op2val:0x7feac44ace32d282; valaddr_reg:x16; val_offset:896; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 896, x17, x15, 464, x18)

inst_819:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xac44ace32d282 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x8805c5b3ba76f and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7feac44ace32d282; op2val:0xffe8805c5b3ba76f; valaddr_reg:x16; val_offset:912; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 912, x17, x15, 480, x18)

inst_820:// fs1 == 1 and fe1 == 0x7fb and fm1 == 0x399e37c2fb926 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x09941946801c5 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffb399e37c2fb926; op2val:0x7fd09941946801c5; valaddr_reg:x16; val_offset:928; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 928, x17, x15, 496, x18)

inst_821:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x7fb and fm2 == 0x399e37c2fb926 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7ff0000000000000; op2val:0xffb399e37c2fb926; valaddr_reg:x16; val_offset:944; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 944, x17, x15, 512, x18)

inst_822:// fs1 == 1 and fe1 == 0x7fb and fm1 == 0x399e37c2fb926 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffb399e37c2fb926; op2val:0x7ff0000000000000; valaddr_reg:x16; val_offset:960; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 960, x17, x15, 528, x18)

inst_823:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x8805c5b3ba76f and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x09941946801c5 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe8805c5b3ba76f; op2val:0x7fd09941946801c5; valaddr_reg:x16; val_offset:976; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 976, x17, x15, 544, x18)

inst_824:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x8805c5b3ba76f and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x405e69652cae2 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe8805c5b3ba76f; op2val:0x7fe405e69652cae2; valaddr_reg:x16; val_offset:992; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 992, x17, x15, 560, x18)

inst_825:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x405e69652cae2 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x8805c5b3ba76f and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe405e69652cae2; op2val:0xffe8805c5b3ba76f; valaddr_reg:x16; val_offset:1008; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1008, x17, x15, 576, x18)

inst_826:// fs1 == 1 and fe1 == 0x7fb and fm1 == 0x399e37c2fb926 and fs2 == 0 and fe2 == 0x7fc and fm2 == 0xe759ff97b7507 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffb399e37c2fb926; op2val:0x7fce759ff97b7507; valaddr_reg:x16; val_offset:1024; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1024, x17, x15, 592, x18)

inst_827:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0x8805c5b3ba76f and fs2 == 0 and fe2 == 0x7fc and fm2 == 0xe759ff97b7507 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffe8805c5b3ba76f; op2val:0x7fce759ff97b7507; valaddr_reg:x16; val_offset:1040; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1040, x17, x15, 608, x18)

inst_828:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xde7300593ddb7 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xde7300593ddb7 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffede7300593ddb7; op2val:0xffede7300593ddb7; valaddr_reg:x16; val_offset:1056; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1056, x17, x15, 624, x18)

inst_829:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xde7300593ddb7 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xae0d6ce341771 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffede7300593ddb7; op2val:0xbffae0d6ce341771; valaddr_reg:x16; val_offset:1072; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1072, x17, x15, 640, x18)

inst_830:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xde7300593ddb7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffede7300593ddb7; op2val:0x0; valaddr_reg:x16; val_offset:1088; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1088, x17, x15, 656, x18)

inst_831:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xde7300593ddb7 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x1353dad8f9fcc and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffede7300593ddb7; op2val:0x8001353dad8f9fcc; valaddr_reg:x16; val_offset:1104; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1104, x17, x15, 672, x18)

inst_832:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x1353dad8f9fcc and fs2 == 1 and fe2 == 0x000 and fm2 == 0x423d517f83eb0 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x8001353dad8f9fcc; op2val:0x800423d517f83eb0; valaddr_reg:x16; val_offset:1120; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1120, x17, x15, 688, x18)

inst_833:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xde7300593ddb7 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x423d517f83eb0 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffede7300593ddb7; op2val:0x800423d517f83eb0; valaddr_reg:x16; val_offset:1136; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1136, x17, x15, 704, x18)

inst_834:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xde7300593ddb7 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xc1468c79c3df8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffede7300593ddb7; op2val:0x800c1468c79c3df8; valaddr_reg:x16; val_offset:1152; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1152, x17, x15, 720, x18)

inst_835:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xc1468c79c3df8 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xd97133b894184 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800c1468c79c3df8; op2val:0x800d97133b894184; valaddr_reg:x16; val_offset:1168; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1168, x17, x15, 736, x18)

inst_836:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xde7300593ddb7 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xd97133b894184 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffede7300593ddb7; op2val:0x800d97133b894184; valaddr_reg:x16; val_offset:1184; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1184, x17, x15, 752, x18)

inst_837:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xc1468c79c3df8 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x879ccf8eb0579 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800c1468c79c3df8; op2val:0x800879ccf8eb0579; valaddr_reg:x16; val_offset:1200; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1200, x17, x15, 768, x18)

inst_838:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xde7300593ddb7 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x879ccf8eb0579 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffede7300593ddb7; op2val:0x800879ccf8eb0579; valaddr_reg:x16; val_offset:1216; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1216, x17, x15, 784, x18)

inst_839:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x1353dad8f9fcc and fs2 == 1 and fe2 == 0x000 and fm2 == 0x299ba050fc0c8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x8001353dad8f9fcc; op2val:0x800299ba050fc0c8; valaddr_reg:x16; val_offset:1232; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1232, x17, x15, 800, x18)

inst_840:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xde7300593ddb7 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x299ba050fc0c8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffede7300593ddb7; op2val:0x800299ba050fc0c8; valaddr_reg:x16; val_offset:1248; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1248, x17, x15, 816, x18)

inst_841:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x1353dad8f9fcc and fs2 == 1 and fe2 == 0x000 and fm2 == 0x65657f10d48db and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x8001353dad8f9fcc; op2val:0x80065657f10d48db; valaddr_reg:x16; val_offset:1264; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1264, x17, x15, 832, x18)

inst_842:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xde7300593ddb7 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x65657f10d48db and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffede7300593ddb7; op2val:0x80065657f10d48db; valaddr_reg:x16; val_offset:1280; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1280, x17, x15, 848, x18)

inst_843:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xc1468c79c3df8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x85ef342c7a5c9 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800c1468c79c3df8; op2val:0x85ef342c7a5c9; valaddr_reg:x16; val_offset:1296; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1296, x17, x15, 864, x18)

inst_844:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xde7300593ddb7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x85ef342c7a5c9 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffede7300593ddb7; op2val:0x85ef342c7a5c9; valaddr_reg:x16; val_offset:1312; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1312, x17, x15, 880, x18)

inst_845:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xc1468c79c3df8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xa399f83b8d7e3 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800c1468c79c3df8; op2val:0xa399f83b8d7e3; valaddr_reg:x16; val_offset:1328; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1328, x17, x15, 896, x18)

inst_846:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xde7300593ddb7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xa399f83b8d7e3 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffede7300593ddb7; op2val:0xa399f83b8d7e3; valaddr_reg:x16; val_offset:1344; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1344, x17, x15, 912, x18)

inst_847:// fs1 == 1 and fe1 == 0x000 and fm1 == 0xc1468c79c3df8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfee29476f2e06 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800c1468c79c3df8; op2val:0xfee29476f2e06; valaddr_reg:x16; val_offset:1360; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1360, x17, x15, 928, x18)

inst_848:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xde7300593ddb7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfee29476f2e06 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffede7300593ddb7; op2val:0xfee29476f2e06; valaddr_reg:x16; val_offset:1376; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1376, x17, x15, 944, x18)

inst_849:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xde7300593ddb7 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x01eec915b2994 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffede7300593ddb7; op2val:0x80001eec915b2994; valaddr_reg:x16; val_offset:1392; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1392, x17, x15, 960, x18)

inst_850:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x01eec915b2994 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x035efa3d150a6 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x80001eec915b2994; op2val:0x35efa3d150a6; valaddr_reg:x16; val_offset:1408; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1408, x17, x15, 976, x18)

inst_851:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xde7300593ddb7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x035efa3d150a6 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffede7300593ddb7; op2val:0x35efa3d150a6; valaddr_reg:x16; val_offset:1424; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1424, x17, x15, 992, x18)

inst_852:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x1353dad8f9fcc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x5eb561bd4f6b8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x8001353dad8f9fcc; op2val:0x5eb561bd4f6b8; valaddr_reg:x16; val_offset:1440; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1440, x17, x15, 1008, x18)

inst_853:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xde7300593ddb7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x5eb561bd4f6b8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffede7300593ddb7; op2val:0x5eb561bd4f6b8; valaddr_reg:x16; val_offset:1456; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1456, x17, x15, 1024, x18)

inst_854:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xde7300593ddb7 and fs2 == 1 and fe2 == 0x7fb and fm2 == 0x7ec266adcb15f and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffede7300593ddb7; op2val:0xffb7ec266adcb15f; valaddr_reg:x16; val_offset:1472; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1472, x17, x15, 1040, x18)

inst_855:// fs1 == 1 and fe1 == 0x7fb and fm1 == 0x7ec266adcb15f and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x0e3e4312fc728 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffb7ec266adcb15f; op2val:0xffc0e3e4312fc728; valaddr_reg:x16; val_offset:1488; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1488, x17, x15, 1056, x18)

inst_856:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xde7300593ddb7 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x0e3e4312fc728 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffede7300593ddb7; op2val:0xffc0e3e4312fc728; valaddr_reg:x16; val_offset:1504; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1504, x17, x15, 1072, x18)

inst_857:// fs1 == 1 and fe1 == 0x7fb and fm1 == 0x7ec266adcb15f and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x0c1b6ea69558e and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffb7ec266adcb15f; op2val:0xffe0c1b6ea69558e; valaddr_reg:x16; val_offset:1520; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1520, x17, x15, 1088, x18)

inst_858:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xde7300593ddb7 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x0c1b6ea69558e and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffede7300593ddb7; op2val:0xffe0c1b6ea69558e; valaddr_reg:x16; val_offset:1536; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1536, x17, x15, 1104, x18)

inst_859:// fs1 == 1 and fe1 == 0x7fb and fm1 == 0x7ec266adcb15f and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xd2b592ef4e4e6 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffb7ec266adcb15f; op2val:0xffdd2b592ef4e4e6; valaddr_reg:x16; val_offset:1552; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1552, x17, x15, 1120, x18)

inst_860:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xde7300593ddb7 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xd2b592ef4e4e6 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffede7300593ddb7; op2val:0xffdd2b592ef4e4e6; valaddr_reg:x16; val_offset:1568; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1568, x17, x15, 1136, x18)

inst_861:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xde7300593ddb7 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x450c74c9b42e4 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffede7300593ddb7; op2val:0x7fe450c74c9b42e4; valaddr_reg:x16; val_offset:1584; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1584, x17, x15, 1152, x18)

inst_862:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x450c74c9b42e4 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xde7300593ddb7 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe450c74c9b42e4; op2val:0xffede7300593ddb7; valaddr_reg:x16; val_offset:1600; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1600, x17, x15, 1168, x18)

inst_863:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xde7300593ddb7 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xac44ace32d282 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffede7300593ddb7; op2val:0x7feac44ace32d282; valaddr_reg:x16; val_offset:1616; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1616, x17, x15, 1184, x18)

inst_864:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xac44ace32d282 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xde7300593ddb7 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7feac44ace32d282; op2val:0xffede7300593ddb7; valaddr_reg:x16; val_offset:1632; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1632, x17, x15, 1200, x18)

inst_865:// fs1 == 1 and fe1 == 0x7fb and fm1 == 0x7ec266adcb15f and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x09941946801c5 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffb7ec266adcb15f; op2val:0x7fd09941946801c5; valaddr_reg:x16; val_offset:1648; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1648, x17, x15, 1216, x18)

inst_866:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x7fb and fm2 == 0x7ec266adcb15f and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7ff0000000000000; op2val:0xffb7ec266adcb15f; valaddr_reg:x16; val_offset:1664; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1664, x17, x15, 1232, x18)

inst_867:// fs1 == 1 and fe1 == 0x7fb and fm1 == 0x7ec266adcb15f and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffb7ec266adcb15f; op2val:0x7ff0000000000000; valaddr_reg:x16; val_offset:1680; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1680, x17, x15, 1248, x18)

inst_868:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xde7300593ddb7 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x09941946801c5 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffede7300593ddb7; op2val:0x7fd09941946801c5; valaddr_reg:x16; val_offset:1696; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1696, x17, x15, 1264, x18)

inst_869:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xde7300593ddb7 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x405e69652cae2 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffede7300593ddb7; op2val:0x7fe405e69652cae2; valaddr_reg:x16; val_offset:1712; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1712, x17, x15, 1280, x18)

inst_870:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x405e69652cae2 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xde7300593ddb7 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe405e69652cae2; op2val:0xffede7300593ddb7; valaddr_reg:x16; val_offset:1728; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1728, x17, x15, 1296, x18)

inst_871:// fs1 == 1 and fe1 == 0x7fb and fm1 == 0x7ec266adcb15f and fs2 == 0 and fe2 == 0x7fc and fm2 == 0xe759ff97b7507 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffb7ec266adcb15f; op2val:0x7fce759ff97b7507; valaddr_reg:x16; val_offset:1744; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1744, x17, x15, 1312, x18)

inst_872:// fs1 == 1 and fe1 == 0x7fe and fm1 == 0xde7300593ddb7 and fs2 == 0 and fe2 == 0x7fc and fm2 == 0xe759ff97b7507 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffede7300593ddb7; op2val:0x7fce759ff97b7507; valaddr_reg:x16; val_offset:1760; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1760, x17, x15, 1328, x18)

inst_873:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xd2b592ef4e4e6 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xd2b592ef4e4e6 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffdd2b592ef4e4e6; op2val:0xffdd2b592ef4e4e6; valaddr_reg:x16; val_offset:1776; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1776, x17, x15, 1344, x18)

inst_874:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xd2b592ef4e4e6 and fs2 == 1 and fe2 == 0x402 and fm2 == 0x06300128a7be9 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffdd2b592ef4e4e6; op2val:0xc0206300128a7be9; valaddr_reg:x16; val_offset:1792; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1792, x17, x15, 1360, x18)

inst_875:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xd2b592ef4e4e6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffdd2b592ef4e4e6; op2val:0x0; valaddr_reg:x16; val_offset:1808; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1808, x17, x15, 1376, x18)

inst_876:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xd2b592ef4e4e6 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x5e443bf91c5dd and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffdd2b592ef4e4e6; op2val:0x8005e443bf91c5dd; valaddr_reg:x16; val_offset:1824; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1824, x17, x15, 1392, x18)

inst_877:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x5e443bf91c5dd and fs2 == 1 and fe2 == 0x000 and fm2 == 0x423d517f83eb0 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x8005e443bf91c5dd; op2val:0x800423d517f83eb0; valaddr_reg:x16; val_offset:1840; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1840, x17, x15, 1408, x18)

inst_878:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xd2b592ef4e4e6 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x423d517f83eb0 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffdd2b592ef4e4e6; op2val:0x800423d517f83eb0; valaddr_reg:x16; val_offset:1856; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1856, x17, x15, 1424, x18)

inst_879:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xd2b592ef4e4e6 and fs2 == 1 and fe2 == 0x002 and fm2 == 0xd7552bdd8dd50 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffdd2b592ef4e4e6; op2val:0x802d7552bdd8dd50; valaddr_reg:x16; val_offset:1872; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1872, x17, x15, 1440, x18)

inst_880:// fs1 == 1 and fe1 == 0x002 and fm1 == 0xd7552bdd8dd50 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xd97133b894184 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x802d7552bdd8dd50; op2val:0x800d97133b894184; valaddr_reg:x16; val_offset:1888; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1888, x17, x15, 1456, x18)

inst_881:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xd2b592ef4e4e6 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xd97133b894184 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffdd2b592ef4e4e6; op2val:0x800d97133b894184; valaddr_reg:x16; val_offset:1904; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1904, x17, x15, 1472, x18)

inst_882:// fs1 == 1 and fe1 == 0x002 and fm1 == 0xd7552bdd8dd50 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x879ccf8eb0579 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x802d7552bdd8dd50; op2val:0x800879ccf8eb0579; valaddr_reg:x16; val_offset:1920; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1920, x17, x15, 1488, x18)

inst_883:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xd2b592ef4e4e6 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x879ccf8eb0579 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffdd2b592ef4e4e6; op2val:0x800879ccf8eb0579; valaddr_reg:x16; val_offset:1936; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1936, x17, x15, 1504, x18)

inst_884:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x5e443bf91c5dd and fs2 == 1 and fe2 == 0x000 and fm2 == 0x299ba050fc0c8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x8005e443bf91c5dd; op2val:0x800299ba050fc0c8; valaddr_reg:x16; val_offset:1952; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1952, x17, x15, 1520, x18)

inst_885:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xd2b592ef4e4e6 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x299ba050fc0c8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffdd2b592ef4e4e6; op2val:0x800299ba050fc0c8; valaddr_reg:x16; val_offset:1968; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1968, x17, x15, 1536, x18)

inst_886:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x5e443bf91c5dd and fs2 == 1 and fe2 == 0x000 and fm2 == 0x65657f10d48db and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x8005e443bf91c5dd; op2val:0x80065657f10d48db; valaddr_reg:x16; val_offset:1984; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1984, x17, x15, 1552, x18)

inst_887:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xd2b592ef4e4e6 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x65657f10d48db and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffdd2b592ef4e4e6; op2val:0x80065657f10d48db; valaddr_reg:x16; val_offset:2000; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 2000, x17, x15, 1568, x18)

inst_888:// fs1 == 1 and fe1 == 0x002 and fm1 == 0xd7552bdd8dd50 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x85ef342c7a5c9 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x802d7552bdd8dd50; op2val:0x85ef342c7a5c9; valaddr_reg:x16; val_offset:2016; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 2016, x17, x15, 1584, x18)
addi x16,x16,2032

inst_889:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xd2b592ef4e4e6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x85ef342c7a5c9 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffdd2b592ef4e4e6; op2val:0x85ef342c7a5c9; valaddr_reg:x16; val_offset:0; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 0, x17, x15, 1600, x18)

inst_890:// fs1 == 1 and fe1 == 0x002 and fm1 == 0xd7552bdd8dd50 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xa399f83b8d7e3 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x802d7552bdd8dd50; op2val:0xa399f83b8d7e3; valaddr_reg:x16; val_offset:16; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 16, x17, x15, 1616, x18)

inst_891:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xd2b592ef4e4e6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xa399f83b8d7e3 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffdd2b592ef4e4e6; op2val:0xa399f83b8d7e3; valaddr_reg:x16; val_offset:32; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 32, x17, x15, 1632, x18)

inst_892:// fs1 == 1 and fe1 == 0x002 and fm1 == 0xd7552bdd8dd50 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfee29476f2e06 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x802d7552bdd8dd50; op2val:0xfee29476f2e06; valaddr_reg:x16; val_offset:48; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 48, x17, x15, 1648, x18)

inst_893:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xd2b592ef4e4e6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfee29476f2e06 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffdd2b592ef4e4e6; op2val:0xfee29476f2e06; valaddr_reg:x16; val_offset:64; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 64, x17, x15, 1664, x18)

inst_894:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xd2b592ef4e4e6 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x096d393282d63 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffdd2b592ef4e4e6; op2val:0x800096d393282d63; valaddr_reg:x16; val_offset:80; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 80, x17, x15, 1680, x18)

inst_895:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x096d393282d63 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x035efa3d150a6 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x800096d393282d63; op2val:0x35efa3d150a6; valaddr_reg:x16; val_offset:96; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 96, x17, x15, 1696, x18)

inst_896:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xd2b592ef4e4e6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x035efa3d150a6 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffdd2b592ef4e4e6; op2val:0x35efa3d150a6; valaddr_reg:x16; val_offset:112; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 112, x17, x15, 1712, x18)

inst_897:// fs1 == 1 and fe1 == 0x000 and fm1 == 0x5e443bf91c5dd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x5eb561bd4f6b8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x8005e443bf91c5dd; op2val:0x5eb561bd4f6b8; valaddr_reg:x16; val_offset:128; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 128, x17, x15, 1728, x18)

inst_898:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xd2b592ef4e4e6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x5eb561bd4f6b8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffdd2b592ef4e4e6; op2val:0x5eb561bd4f6b8; valaddr_reg:x16; val_offset:144; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 144, x17, x15, 1744, x18)

inst_899:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xd2b592ef4e4e6 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffdd2b592ef4e4e6; op2val:0xfff0000000000000; valaddr_reg:x16; val_offset:160; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 160, x17, x15, 1760, x18)

inst_900:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xd2b592ef4e4e6 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x8805c5b3ba76f and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffdd2b592ef4e4e6; op2val:0xffe8805c5b3ba76f; valaddr_reg:x16; val_offset:176; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 176, x17, x15, 1776, x18)

inst_901:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xd2b592ef4e4e6 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xde7300593ddb7 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffdd2b592ef4e4e6; op2val:0xffede7300593ddb7; valaddr_reg:x16; val_offset:192; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 192, x17, x15, 1792, x18)

inst_902:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xd2b592ef4e4e6 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x450c74c9b42e4 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffdd2b592ef4e4e6; op2val:0x7fe450c74c9b42e4; valaddr_reg:x16; val_offset:208; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 208, x17, x15, 1808, x18)

inst_903:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xd2b592ef4e4e6 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xac44ace32d282 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffdd2b592ef4e4e6; op2val:0x7feac44ace32d282; valaddr_reg:x16; val_offset:224; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 224, x17, x15, 1824, x18)

inst_904:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xd2b592ef4e4e6 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x09941946801c5 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffdd2b592ef4e4e6; op2val:0x7fd09941946801c5; valaddr_reg:x16; val_offset:240; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 240, x17, x15, 1840, x18)

inst_905:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x09941946801c5 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xd2b592ef4e4e6 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fd09941946801c5; op2val:0xffdd2b592ef4e4e6; valaddr_reg:x16; val_offset:256; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 256, x17, x15, 1856, x18)

inst_906:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xd2b592ef4e4e6 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x405e69652cae2 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffdd2b592ef4e4e6; op2val:0x7fe405e69652cae2; valaddr_reg:x16; val_offset:272; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 272, x17, x15, 1872, x18)

inst_907:// fs1 == 1 and fe1 == 0x7fd and fm1 == 0xd2b592ef4e4e6 and fs2 == 0 and fe2 == 0x7fc and fm2 == 0xe759ff97b7507 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xffdd2b592ef4e4e6; op2val:0x7fce759ff97b7507; valaddr_reg:x16; val_offset:288; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 288, x17, x15, 1888, x18)

inst_908:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xe759ff97b7507 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xd2b592ef4e4e6 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fce759ff97b7507; op2val:0xffdd2b592ef4e4e6; valaddr_reg:x16; val_offset:304; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 304, x17, x15, 1904, x18)

inst_909:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x450c74c9b42e4 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x450c74c9b42e4 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe450c74c9b42e4; op2val:0x7fe450c74c9b42e4; valaddr_reg:x16; val_offset:320; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 320, x17, x15, 1920, x18)

inst_910:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x450c74c9b42e4 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x242b3b0a4387a and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe450c74c9b42e4; op2val:0x3ff242b3b0a4387a; valaddr_reg:x16; val_offset:336; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 336, x17, x15, 1936, x18)

inst_911:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x450c74c9b42e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe450c74c9b42e4; op2val:0x0; valaddr_reg:x16; val_offset:352; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 352, x17, x15, 1952, x18)

inst_912:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x450c74c9b42e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0d2178c8e4bc2 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe450c74c9b42e4; op2val:0xd2178c8e4bc2; valaddr_reg:x16; val_offset:368; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 368, x17, x15, 1968, x18)

inst_913:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0d2178c8e4bc2 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x423d517f83eb0 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xd2178c8e4bc2; op2val:0x800423d517f83eb0; valaddr_reg:x16; val_offset:384; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 384, x17, x15, 1984, x18)

inst_914:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x450c74c9b42e4 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x423d517f83eb0 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe450c74c9b42e4; op2val:0x800423d517f83eb0; valaddr_reg:x16; val_offset:400; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 400, x17, x15, 2000, x18)

inst_915:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x450c74c9b42e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x834eb7d8ef590 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe450c74c9b42e4; op2val:0x834eb7d8ef590; valaddr_reg:x16; val_offset:416; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 416, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_11)

inst_916:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x834eb7d8ef590 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xd97133b894184 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x834eb7d8ef590; op2val:0x800d97133b894184; valaddr_reg:x16; val_offset:432; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 432, x17, x15, 0, x18)

inst_917:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x450c74c9b42e4 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xd97133b894184 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe450c74c9b42e4; op2val:0x800d97133b894184; valaddr_reg:x16; val_offset:448; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 448, x17, x15, 16, x18)

inst_918:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x834eb7d8ef590 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x879ccf8eb0579 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x834eb7d8ef590; op2val:0x800879ccf8eb0579; valaddr_reg:x16; val_offset:464; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 464, x17, x15, 32, x18)

inst_919:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x450c74c9b42e4 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x879ccf8eb0579 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe450c74c9b42e4; op2val:0x800879ccf8eb0579; valaddr_reg:x16; val_offset:480; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 480, x17, x15, 48, x18)

inst_920:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0d2178c8e4bc2 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x299ba050fc0c8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xd2178c8e4bc2; op2val:0x800299ba050fc0c8; valaddr_reg:x16; val_offset:496; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 496, x17, x15, 64, x18)

inst_921:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x450c74c9b42e4 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x299ba050fc0c8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe450c74c9b42e4; op2val:0x800299ba050fc0c8; valaddr_reg:x16; val_offset:512; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 512, x17, x15, 80, x18)

inst_922:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0d2178c8e4bc2 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x65657f10d48db and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xd2178c8e4bc2; op2val:0x80065657f10d48db; valaddr_reg:x16; val_offset:528; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 528, x17, x15, 96, x18)

inst_923:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x450c74c9b42e4 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x65657f10d48db and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe450c74c9b42e4; op2val:0x80065657f10d48db; valaddr_reg:x16; val_offset:544; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 544, x17, x15, 112, x18)

inst_924:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x834eb7d8ef590 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x85ef342c7a5c9 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x834eb7d8ef590; op2val:0x85ef342c7a5c9; valaddr_reg:x16; val_offset:560; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 560, x17, x15, 128, x18)

inst_925:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x450c74c9b42e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x85ef342c7a5c9 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe450c74c9b42e4; op2val:0x85ef342c7a5c9; valaddr_reg:x16; val_offset:576; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 576, x17, x15, 144, x18)

inst_926:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x834eb7d8ef590 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xa399f83b8d7e3 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x834eb7d8ef590; op2val:0xa399f83b8d7e3; valaddr_reg:x16; val_offset:592; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 592, x17, x15, 160, x18)

inst_927:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x450c74c9b42e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xa399f83b8d7e3 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe450c74c9b42e4; op2val:0xa399f83b8d7e3; valaddr_reg:x16; val_offset:608; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 608, x17, x15, 176, x18)

inst_928:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x834eb7d8ef590 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfee29476f2e06 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x834eb7d8ef590; op2val:0xfee29476f2e06; valaddr_reg:x16; val_offset:624; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 624, x17, x15, 192, x18)

inst_929:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x450c74c9b42e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfee29476f2e06 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe450c74c9b42e4; op2val:0xfee29476f2e06; valaddr_reg:x16; val_offset:640; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 640, x17, x15, 208, x18)

inst_930:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x450c74c9b42e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x015025adb0793 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe450c74c9b42e4; op2val:0x15025adb0793; valaddr_reg:x16; val_offset:656; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 656, x17, x15, 224, x18)

inst_931:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x015025adb0793 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x035efa3d150a6 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x15025adb0793; op2val:0x35efa3d150a6; valaddr_reg:x16; val_offset:672; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 672, x17, x15, 240, x18)

inst_932:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x450c74c9b42e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x035efa3d150a6 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe450c74c9b42e4; op2val:0x35efa3d150a6; valaddr_reg:x16; val_offset:688; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 688, x17, x15, 256, x18)

inst_933:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0d2178c8e4bc2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x5eb561bd4f6b8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xd2178c8e4bc2; op2val:0x5eb561bd4f6b8; valaddr_reg:x16; val_offset:704; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 704, x17, x15, 272, x18)

inst_934:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x450c74c9b42e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x5eb561bd4f6b8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe450c74c9b42e4; op2val:0x5eb561bd4f6b8; valaddr_reg:x16; val_offset:720; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 720, x17, x15, 288, x18)

inst_935:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x450c74c9b42e4 and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x0409f707c3583 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe450c74c9b42e4; op2val:0x7fb0409f707c3583; valaddr_reg:x16; val_offset:736; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 736, x17, x15, 304, x18)

inst_936:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x0409f707c3583 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x0e3e4312fc728 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb0409f707c3583; op2val:0xffc0e3e4312fc728; valaddr_reg:x16; val_offset:752; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 752, x17, x15, 320, x18)

inst_937:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x450c74c9b42e4 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x0e3e4312fc728 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe450c74c9b42e4; op2val:0xffc0e3e4312fc728; valaddr_reg:x16; val_offset:768; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 768, x17, x15, 336, x18)

inst_938:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x0409f707c3583 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x0c1b6ea69558e and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb0409f707c3583; op2val:0xffe0c1b6ea69558e; valaddr_reg:x16; val_offset:784; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 784, x17, x15, 352, x18)

inst_939:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x450c74c9b42e4 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x0c1b6ea69558e and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe450c74c9b42e4; op2val:0xffe0c1b6ea69558e; valaddr_reg:x16; val_offset:800; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 800, x17, x15, 368, x18)

inst_940:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x0409f707c3583 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xd2b592ef4e4e6 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb0409f707c3583; op2val:0xffdd2b592ef4e4e6; valaddr_reg:x16; val_offset:816; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 816, x17, x15, 384, x18)

inst_941:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x450c74c9b42e4 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xd2b592ef4e4e6 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe450c74c9b42e4; op2val:0xffdd2b592ef4e4e6; valaddr_reg:x16; val_offset:832; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 832, x17, x15, 400, x18)

inst_942:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x450c74c9b42e4 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xac44ace32d282 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe450c74c9b42e4; op2val:0x7feac44ace32d282; valaddr_reg:x16; val_offset:848; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 848, x17, x15, 416, x18)

inst_943:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xac44ace32d282 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x450c74c9b42e4 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7feac44ace32d282; op2val:0x7fe450c74c9b42e4; valaddr_reg:x16; val_offset:864; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 864, x17, x15, 432, x18)

inst_944:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x0409f707c3583 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x09941946801c5 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb0409f707c3583; op2val:0x7fd09941946801c5; valaddr_reg:x16; val_offset:880; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 880, x17, x15, 448, x18)

inst_945:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x0409f707c3583 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7ff0000000000000; op2val:0x7fb0409f707c3583; valaddr_reg:x16; val_offset:896; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 896, x17, x15, 464, x18)

inst_946:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x0409f707c3583 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb0409f707c3583; op2val:0x7ff0000000000000; valaddr_reg:x16; val_offset:912; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 912, x17, x15, 480, x18)

inst_947:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x450c74c9b42e4 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x09941946801c5 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe450c74c9b42e4; op2val:0x7fd09941946801c5; valaddr_reg:x16; val_offset:928; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 928, x17, x15, 496, x18)

inst_948:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x450c74c9b42e4 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x405e69652cae2 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe450c74c9b42e4; op2val:0x7fe405e69652cae2; valaddr_reg:x16; val_offset:944; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 944, x17, x15, 512, x18)

inst_949:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x405e69652cae2 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x450c74c9b42e4 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe405e69652cae2; op2val:0x7fe450c74c9b42e4; valaddr_reg:x16; val_offset:960; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 960, x17, x15, 528, x18)

inst_950:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x0409f707c3583 and fs2 == 0 and fe2 == 0x7fc and fm2 == 0xe759ff97b7507 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb0409f707c3583; op2val:0x7fce759ff97b7507; valaddr_reg:x16; val_offset:976; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 976, x17, x15, 544, x18)

inst_951:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x450c74c9b42e4 and fs2 == 0 and fe2 == 0x7fc and fm2 == 0xe759ff97b7507 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe450c74c9b42e4; op2val:0x7fce759ff97b7507; valaddr_reg:x16; val_offset:992; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 992, x17, x15, 560, x18)

inst_952:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xac44ace32d282 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xac44ace32d282 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7feac44ace32d282; op2val:0x7feac44ace32d282; valaddr_reg:x16; val_offset:1008; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1008, x17, x15, 576, x18)

inst_953:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xac44ace32d282 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x80f28c9e9c76b and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7feac44ace32d282; op2val:0x3ff80f28c9e9c76b; valaddr_reg:x16; val_offset:1024; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1024, x17, x15, 592, x18)

inst_954:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xac44ace32d282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7feac44ace32d282; op2val:0x0; valaddr_reg:x16; val_offset:1040; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1040, x17, x15, 608, x18)

inst_955:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xac44ace32d282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x114ce95016c16 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7feac44ace32d282; op2val:0x114ce95016c16; valaddr_reg:x16; val_offset:1056; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1056, x17, x15, 624, x18)

inst_956:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x114ce95016c16 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x423d517f83eb0 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x114ce95016c16; op2val:0x800423d517f83eb0; valaddr_reg:x16; val_offset:1072; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1072, x17, x15, 640, x18)

inst_957:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xac44ace32d282 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x423d517f83eb0 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7feac44ace32d282; op2val:0x800423d517f83eb0; valaddr_reg:x16; val_offset:1088; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1088, x17, x15, 656, x18)

inst_958:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xac44ace32d282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xad011d20e38de and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7feac44ace32d282; op2val:0xad011d20e38de; valaddr_reg:x16; val_offset:1104; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1104, x17, x15, 672, x18)

inst_959:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xad011d20e38de and fs2 == 1 and fe2 == 0x000 and fm2 == 0xd97133b894184 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xad011d20e38de; op2val:0x800d97133b894184; valaddr_reg:x16; val_offset:1120; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1120, x17, x15, 688, x18)

inst_960:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xac44ace32d282 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xd97133b894184 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7feac44ace32d282; op2val:0x800d97133b894184; valaddr_reg:x16; val_offset:1136; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1136, x17, x15, 704, x18)

inst_961:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xad011d20e38de and fs2 == 1 and fe2 == 0x000 and fm2 == 0x879ccf8eb0579 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xad011d20e38de; op2val:0x800879ccf8eb0579; valaddr_reg:x16; val_offset:1152; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1152, x17, x15, 720, x18)

inst_962:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xac44ace32d282 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x879ccf8eb0579 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7feac44ace32d282; op2val:0x800879ccf8eb0579; valaddr_reg:x16; val_offset:1168; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1168, x17, x15, 736, x18)

inst_963:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x114ce95016c16 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x299ba050fc0c8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x114ce95016c16; op2val:0x800299ba050fc0c8; valaddr_reg:x16; val_offset:1184; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1184, x17, x15, 752, x18)

inst_964:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xac44ace32d282 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x299ba050fc0c8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7feac44ace32d282; op2val:0x800299ba050fc0c8; valaddr_reg:x16; val_offset:1200; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1200, x17, x15, 768, x18)

inst_965:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x114ce95016c16 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x65657f10d48db and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x114ce95016c16; op2val:0x80065657f10d48db; valaddr_reg:x16; val_offset:1216; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1216, x17, x15, 784, x18)

inst_966:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xac44ace32d282 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x65657f10d48db and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7feac44ace32d282; op2val:0x80065657f10d48db; valaddr_reg:x16; val_offset:1232; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1232, x17, x15, 800, x18)

inst_967:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xad011d20e38de and fs2 == 0 and fe2 == 0x000 and fm2 == 0x85ef342c7a5c9 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xad011d20e38de; op2val:0x85ef342c7a5c9; valaddr_reg:x16; val_offset:1248; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1248, x17, x15, 816, x18)

inst_968:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xac44ace32d282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x85ef342c7a5c9 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7feac44ace32d282; op2val:0x85ef342c7a5c9; valaddr_reg:x16; val_offset:1264; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1264, x17, x15, 832, x18)

inst_969:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xad011d20e38de and fs2 == 0 and fe2 == 0x000 and fm2 == 0xa399f83b8d7e3 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xad011d20e38de; op2val:0xa399f83b8d7e3; valaddr_reg:x16; val_offset:1280; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1280, x17, x15, 848, x18)

inst_970:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xac44ace32d282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xa399f83b8d7e3 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7feac44ace32d282; op2val:0xa399f83b8d7e3; valaddr_reg:x16; val_offset:1296; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1296, x17, x15, 864, x18)

inst_971:// fs1 == 0 and fe1 == 0x000 and fm1 == 0xad011d20e38de and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfee29476f2e06 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xad011d20e38de; op2val:0xfee29476f2e06; valaddr_reg:x16; val_offset:1312; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1312, x17, x15, 880, x18)

inst_972:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xac44ace32d282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfee29476f2e06 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7feac44ace32d282; op2val:0xfee29476f2e06; valaddr_reg:x16; val_offset:1328; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1328, x17, x15, 896, x18)

inst_973:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xac44ace32d282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x01bae4219be02 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7feac44ace32d282; op2val:0x1bae4219be02; valaddr_reg:x16; val_offset:1344; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1344, x17, x15, 912, x18)

inst_974:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x01bae4219be02 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x035efa3d150a6 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x1bae4219be02; op2val:0x35efa3d150a6; valaddr_reg:x16; val_offset:1360; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1360, x17, x15, 928, x18)

inst_975:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xac44ace32d282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x035efa3d150a6 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7feac44ace32d282; op2val:0x35efa3d150a6; valaddr_reg:x16; val_offset:1376; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1376, x17, x15, 944, x18)

inst_976:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x114ce95016c16 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x5eb561bd4f6b8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x114ce95016c16; op2val:0x5eb561bd4f6b8; valaddr_reg:x16; val_offset:1392; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1392, x17, x15, 960, x18)

inst_977:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xac44ace32d282 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x5eb561bd4f6b8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7feac44ace32d282; op2val:0x5eb561bd4f6b8; valaddr_reg:x16; val_offset:1408; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1408, x17, x15, 976, x18)

inst_978:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xac44ace32d282 and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x569d571c24201 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7feac44ace32d282; op2val:0x7fb569d571c24201; valaddr_reg:x16; val_offset:1424; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1424, x17, x15, 992, x18)

inst_979:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x569d571c24201 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x0e3e4312fc728 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb569d571c24201; op2val:0xffc0e3e4312fc728; valaddr_reg:x16; val_offset:1440; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1440, x17, x15, 1008, x18)

inst_980:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xac44ace32d282 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x0e3e4312fc728 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7feac44ace32d282; op2val:0xffc0e3e4312fc728; valaddr_reg:x16; val_offset:1456; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1456, x17, x15, 1024, x18)

inst_981:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x569d571c24201 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x0c1b6ea69558e and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb569d571c24201; op2val:0xffe0c1b6ea69558e; valaddr_reg:x16; val_offset:1472; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1472, x17, x15, 1040, x18)

inst_982:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xac44ace32d282 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x0c1b6ea69558e and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7feac44ace32d282; op2val:0xffe0c1b6ea69558e; valaddr_reg:x16; val_offset:1488; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1488, x17, x15, 1056, x18)

inst_983:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x569d571c24201 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xd2b592ef4e4e6 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb569d571c24201; op2val:0xffdd2b592ef4e4e6; valaddr_reg:x16; val_offset:1504; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1504, x17, x15, 1072, x18)

inst_984:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xac44ace32d282 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xd2b592ef4e4e6 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7feac44ace32d282; op2val:0xffdd2b592ef4e4e6; valaddr_reg:x16; val_offset:1520; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1520, x17, x15, 1088, x18)

inst_985:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x569d571c24201 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x09941946801c5 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb569d571c24201; op2val:0x7fd09941946801c5; valaddr_reg:x16; val_offset:1536; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1536, x17, x15, 1104, x18)

inst_986:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x569d571c24201 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7ff0000000000000; op2val:0x7fb569d571c24201; valaddr_reg:x16; val_offset:1552; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1552, x17, x15, 1120, x18)

inst_987:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x569d571c24201 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb569d571c24201; op2val:0x7ff0000000000000; valaddr_reg:x16; val_offset:1568; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1568, x17, x15, 1136, x18)

inst_988:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xac44ace32d282 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x09941946801c5 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7feac44ace32d282; op2val:0x7fd09941946801c5; valaddr_reg:x16; val_offset:1584; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1584, x17, x15, 1152, x18)

inst_989:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xac44ace32d282 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x405e69652cae2 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7feac44ace32d282; op2val:0x7fe405e69652cae2; valaddr_reg:x16; val_offset:1600; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1600, x17, x15, 1168, x18)

inst_990:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x405e69652cae2 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xac44ace32d282 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe405e69652cae2; op2val:0x7feac44ace32d282; valaddr_reg:x16; val_offset:1616; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1616, x17, x15, 1184, x18)

inst_991:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x569d571c24201 and fs2 == 0 and fe2 == 0x7fc and fm2 == 0xe759ff97b7507 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb569d571c24201; op2val:0x7fce759ff97b7507; valaddr_reg:x16; val_offset:1632; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1632, x17, x15, 1200, x18)

inst_992:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xac44ace32d282 and fs2 == 0 and fe2 == 0x7fc and fm2 == 0xe759ff97b7507 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7feac44ace32d282; op2val:0x7fce759ff97b7507; valaddr_reg:x16; val_offset:1648; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1648, x17, x15, 1216, x18)

inst_993:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x09941946801c5 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x09941946801c5 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fd09941946801c5; op2val:0x7fd09941946801c5; valaddr_reg:x16; val_offset:1664; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1664, x17, x15, 1232, x18)

inst_994:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x09941946801c5 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x2a6496228606e and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fd09941946801c5; op2val:0x4012a6496228606e; valaddr_reg:x16; val_offset:1680; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1680, x17, x15, 1248, x18)

inst_995:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x09941946801c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fd09941946801c5; op2val:0x0; valaddr_reg:x16; val_offset:1696; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1696, x17, x15, 1264, x18)

inst_996:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x09941946801c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x35a452e11324d and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fd09941946801c5; op2val:0x35a452e11324d; valaddr_reg:x16; val_offset:1712; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1712, x17, x15, 1280, x18)

inst_997:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x35a452e11324d and fs2 == 1 and fe2 == 0x000 and fm2 == 0x423d517f83eb0 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x35a452e11324d; op2val:0x800423d517f83eb0; valaddr_reg:x16; val_offset:1728; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1728, x17, x15, 1296, x18)

inst_998:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x09941946801c5 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x423d517f83eb0 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fd09941946801c5; op2val:0x800423d517f83eb0; valaddr_reg:x16; val_offset:1744; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1744, x17, x15, 1312, x18)

inst_999:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x09941946801c5 and fs2 == 0 and fe2 == 0x002 and fm2 == 0x0c359e655fb81 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fd09941946801c5; op2val:0x20c359e655fb81; valaddr_reg:x16; val_offset:1760; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1760, x17, x15, 1328, x18)

inst_1000:// fs1 == 0 and fe1 == 0x002 and fm1 == 0x0c359e655fb81 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xd97133b894184 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x20c359e655fb81; op2val:0x800d97133b894184; valaddr_reg:x16; val_offset:1776; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1776, x17, x15, 1344, x18)

inst_1001:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x09941946801c5 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xd97133b894184 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fd09941946801c5; op2val:0x800d97133b894184; valaddr_reg:x16; val_offset:1792; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1792, x17, x15, 1360, x18)

inst_1002:// fs1 == 0 and fe1 == 0x002 and fm1 == 0x0c359e655fb81 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x879ccf8eb0579 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x20c359e655fb81; op2val:0x800879ccf8eb0579; valaddr_reg:x16; val_offset:1808; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1808, x17, x15, 1376, x18)

inst_1003:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x09941946801c5 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x879ccf8eb0579 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fd09941946801c5; op2val:0x800879ccf8eb0579; valaddr_reg:x16; val_offset:1824; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1824, x17, x15, 1392, x18)

inst_1004:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x35a452e11324d and fs2 == 1 and fe2 == 0x000 and fm2 == 0x299ba050fc0c8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x35a452e11324d; op2val:0x800299ba050fc0c8; valaddr_reg:x16; val_offset:1840; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1840, x17, x15, 1408, x18)

inst_1005:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x09941946801c5 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x299ba050fc0c8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fd09941946801c5; op2val:0x800299ba050fc0c8; valaddr_reg:x16; val_offset:1856; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1856, x17, x15, 1424, x18)

inst_1006:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x35a452e11324d and fs2 == 1 and fe2 == 0x000 and fm2 == 0x65657f10d48db and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x35a452e11324d; op2val:0x80065657f10d48db; valaddr_reg:x16; val_offset:1872; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1872, x17, x15, 1440, x18)

inst_1007:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x09941946801c5 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x65657f10d48db and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fd09941946801c5; op2val:0x80065657f10d48db; valaddr_reg:x16; val_offset:1888; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1888, x17, x15, 1456, x18)

inst_1008:// fs1 == 0 and fe1 == 0x002 and fm1 == 0x0c359e655fb81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x85ef342c7a5c9 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x20c359e655fb81; op2val:0x85ef342c7a5c9; valaddr_reg:x16; val_offset:1904; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1904, x17, x15, 1472, x18)

inst_1009:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x09941946801c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x85ef342c7a5c9 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fd09941946801c5; op2val:0x85ef342c7a5c9; valaddr_reg:x16; val_offset:1920; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1920, x17, x15, 1488, x18)

inst_1010:// fs1 == 0 and fe1 == 0x002 and fm1 == 0x0c359e655fb81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xa399f83b8d7e3 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x20c359e655fb81; op2val:0xa399f83b8d7e3; valaddr_reg:x16; val_offset:1936; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1936, x17, x15, 1504, x18)

inst_1011:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x09941946801c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xa399f83b8d7e3 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fd09941946801c5; op2val:0xa399f83b8d7e3; valaddr_reg:x16; val_offset:1952; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1952, x17, x15, 1520, x18)

inst_1012:// fs1 == 0 and fe1 == 0x002 and fm1 == 0x0c359e655fb81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfee29476f2e06 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x20c359e655fb81; op2val:0xfee29476f2e06; valaddr_reg:x16; val_offset:1968; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1968, x17, x15, 1536, x18)

inst_1013:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x09941946801c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfee29476f2e06 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fd09941946801c5; op2val:0xfee29476f2e06; valaddr_reg:x16; val_offset:1984; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1984, x17, x15, 1552, x18)

inst_1014:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x09941946801c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x055d3b7ce8508 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fd09941946801c5; op2val:0x55d3b7ce8508; valaddr_reg:x16; val_offset:2000; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 2000, x17, x15, 1568, x18)

inst_1015:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x055d3b7ce8508 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x035efa3d150a6 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x55d3b7ce8508; op2val:0x35efa3d150a6; valaddr_reg:x16; val_offset:2016; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 2016, x17, x15, 1584, x18)
addi x16,x16,2032

inst_1016:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x09941946801c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x035efa3d150a6 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fd09941946801c5; op2val:0x35efa3d150a6; valaddr_reg:x16; val_offset:0; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 0, x17, x15, 1600, x18)

inst_1017:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x35a452e11324d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x5eb561bd4f6b8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x35a452e11324d; op2val:0x5eb561bd4f6b8; valaddr_reg:x16; val_offset:16; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 16, x17, x15, 1616, x18)

inst_1018:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x09941946801c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x5eb561bd4f6b8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fd09941946801c5; op2val:0x5eb561bd4f6b8; valaddr_reg:x16; val_offset:32; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 32, x17, x15, 1632, x18)

inst_1019:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x09941946801c5 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fd09941946801c5; op2val:0x7ff0000000000000; valaddr_reg:x16; val_offset:48; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 48, x17, x15, 1648, x18)

inst_1020:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x09941946801c5 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x8805c5b3ba76f and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fd09941946801c5; op2val:0xffe8805c5b3ba76f; valaddr_reg:x16; val_offset:64; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 64, x17, x15, 1664, x18)

inst_1021:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x09941946801c5 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xde7300593ddb7 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fd09941946801c5; op2val:0xffede7300593ddb7; valaddr_reg:x16; val_offset:80; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 80, x17, x15, 1680, x18)

inst_1022:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x09941946801c5 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x450c74c9b42e4 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fd09941946801c5; op2val:0x7fe450c74c9b42e4; valaddr_reg:x16; val_offset:96; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 96, x17, x15, 1696, x18)

inst_1023:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x09941946801c5 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xac44ace32d282 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fd09941946801c5; op2val:0x7feac44ace32d282; valaddr_reg:x16; val_offset:112; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 112, x17, x15, 1712, x18)

inst_1024:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x004b878423be8 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb004b878423be8; op2val:0x7ff0000000000000; valaddr_reg:x16; val_offset:128; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 128, x17, x15, 1728, x18)

inst_1025:// fs1 == 0 and fe1 == 0x7ff and fm1 == 0x0000000000000 and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x004b878423be8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7ff0000000000000; op2val:0x7fb004b878423be8; valaddr_reg:x16; val_offset:144; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 144, x17, x15, 1744, x18)

inst_1026:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x09941946801c5 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x405e69652cae2 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fd09941946801c5; op2val:0x7fe405e69652cae2; valaddr_reg:x16; val_offset:160; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 160, x17, x15, 1760, x18)

inst_1027:// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x09941946801c5 and fs2 == 0 and fe2 == 0x7fc and fm2 == 0xe759ff97b7507 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fd09941946801c5; op2val:0x7fce759ff97b7507; valaddr_reg:x16; val_offset:176; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 176, x17, x15, 1776, x18)

inst_1028:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xe759ff97b7507 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x09941946801c5 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fce759ff97b7507; op2val:0x7fd09941946801c5; valaddr_reg:x16; val_offset:192; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 192, x17, x15, 1792, x18)

inst_1029:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x405e69652cae2 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x405e69652cae2 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe405e69652cae2; op2val:0x7fe405e69652cae2; valaddr_reg:x16; val_offset:208; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 208, x17, x15, 1808, x18)

inst_1030:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x405e69652cae2 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x1ff65f57ff366 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe405e69652cae2; op2val:0x3ff1ff65f57ff366; valaddr_reg:x16; val_offset:224; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 224, x17, x15, 1824, x18)

inst_1031:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x405e69652cae2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe405e69652cae2; op2val:0x0; valaddr_reg:x16; val_offset:240; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 240, x17, x15, 1840, x18)

inst_1032:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x405e69652cae2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0cf11346ee18e and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe405e69652cae2; op2val:0xcf11346ee18e; valaddr_reg:x16; val_offset:256; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 256, x17, x15, 1856, x18)

inst_1033:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0cf11346ee18e and fs2 == 1 and fe2 == 0x000 and fm2 == 0x423d517f83eb0 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xcf11346ee18e; op2val:0x800423d517f83eb0; valaddr_reg:x16; val_offset:272; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 272, x17, x15, 1872, x18)

inst_1034:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x405e69652cae2 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x423d517f83eb0 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe405e69652cae2; op2val:0x800423d517f83eb0; valaddr_reg:x16; val_offset:288; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 288, x17, x15, 1888, x18)

inst_1035:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x405e69652cae2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x816ac0c54cf8a and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe405e69652cae2; op2val:0x816ac0c54cf8a; valaddr_reg:x16; val_offset:304; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 304, x17, x15, 1904, x18)

inst_1036:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x816ac0c54cf8a and fs2 == 1 and fe2 == 0x000 and fm2 == 0xd97133b894184 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x816ac0c54cf8a; op2val:0x800d97133b894184; valaddr_reg:x16; val_offset:320; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 320, x17, x15, 1920, x18)

inst_1037:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x405e69652cae2 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xd97133b894184 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe405e69652cae2; op2val:0x800d97133b894184; valaddr_reg:x16; val_offset:336; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 336, x17, x15, 1936, x18)

inst_1038:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x816ac0c54cf8a and fs2 == 1 and fe2 == 0x000 and fm2 == 0x879ccf8eb0579 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x816ac0c54cf8a; op2val:0x800879ccf8eb0579; valaddr_reg:x16; val_offset:352; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 352, x17, x15, 1952, x18)

inst_1039:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x405e69652cae2 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x879ccf8eb0579 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe405e69652cae2; op2val:0x800879ccf8eb0579; valaddr_reg:x16; val_offset:368; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 368, x17, x15, 1968, x18)

inst_1040:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0cf11346ee18e and fs2 == 1 and fe2 == 0x000 and fm2 == 0x299ba050fc0c8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xcf11346ee18e; op2val:0x800299ba050fc0c8; valaddr_reg:x16; val_offset:384; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 384, x17, x15, 1984, x18)

inst_1041:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x405e69652cae2 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x299ba050fc0c8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe405e69652cae2; op2val:0x800299ba050fc0c8; valaddr_reg:x16; val_offset:400; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 400, x17, x15, 2000, x18)

inst_1042:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0cf11346ee18e and fs2 == 1 and fe2 == 0x000 and fm2 == 0x65657f10d48db and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xcf11346ee18e; op2val:0x80065657f10d48db; valaddr_reg:x16; val_offset:416; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 416, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_12)

inst_1043:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x405e69652cae2 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x65657f10d48db and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe405e69652cae2; op2val:0x80065657f10d48db; valaddr_reg:x16; val_offset:432; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 432, x17, x15, 0, x18)

inst_1044:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x816ac0c54cf8a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x85ef342c7a5c9 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x816ac0c54cf8a; op2val:0x85ef342c7a5c9; valaddr_reg:x16; val_offset:448; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 448, x17, x15, 16, x18)

inst_1045:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x405e69652cae2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x85ef342c7a5c9 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe405e69652cae2; op2val:0x85ef342c7a5c9; valaddr_reg:x16; val_offset:464; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 464, x17, x15, 32, x18)

inst_1046:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x816ac0c54cf8a and fs2 == 0 and fe2 == 0x000 and fm2 == 0xa399f83b8d7e3 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x816ac0c54cf8a; op2val:0xa399f83b8d7e3; valaddr_reg:x16; val_offset:480; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 480, x17, x15, 48, x18)

inst_1047:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x405e69652cae2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xa399f83b8d7e3 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe405e69652cae2; op2val:0xa399f83b8d7e3; valaddr_reg:x16; val_offset:496; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 496, x17, x15, 64, x18)

inst_1048:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x816ac0c54cf8a and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfee29476f2e06 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x816ac0c54cf8a; op2val:0xfee29476f2e06; valaddr_reg:x16; val_offset:512; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 512, x17, x15, 80, x18)

inst_1049:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x405e69652cae2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfee29476f2e06 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe405e69652cae2; op2val:0xfee29476f2e06; valaddr_reg:x16; val_offset:528; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 528, x17, x15, 96, x18)

inst_1050:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x405e69652cae2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x014b4eba4b028 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe405e69652cae2; op2val:0x14b4eba4b028; valaddr_reg:x16; val_offset:544; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 544, x17, x15, 112, x18)

inst_1051:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x014b4eba4b028 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x035efa3d150a6 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x14b4eba4b028; op2val:0x35efa3d150a6; valaddr_reg:x16; val_offset:560; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 560, x17, x15, 128, x18)

inst_1052:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x405e69652cae2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x035efa3d150a6 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe405e69652cae2; op2val:0x35efa3d150a6; valaddr_reg:x16; val_offset:576; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 576, x17, x15, 144, x18)

inst_1053:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0cf11346ee18e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x5eb561bd4f6b8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0xcf11346ee18e; op2val:0x5eb561bd4f6b8; valaddr_reg:x16; val_offset:592; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 592, x17, x15, 160, x18)

inst_1054:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x405e69652cae2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x5eb561bd4f6b8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe405e69652cae2; op2val:0x5eb561bd4f6b8; valaddr_reg:x16; val_offset:608; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 608, x17, x15, 176, x18)

inst_1055:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x405e69652cae2 and fs2 == 0 and fe2 == 0x7fb and fm2 == 0x004b878423be8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe405e69652cae2; op2val:0x7fb004b878423be8; valaddr_reg:x16; val_offset:624; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 624, x17, x15, 192, x18)

inst_1056:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x004b878423be8 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x0e3e4312fc728 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb004b878423be8; op2val:0xffc0e3e4312fc728; valaddr_reg:x16; val_offset:640; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 640, x17, x15, 208, x18)

inst_1057:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x405e69652cae2 and fs2 == 1 and fe2 == 0x7fc and fm2 == 0x0e3e4312fc728 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe405e69652cae2; op2val:0xffc0e3e4312fc728; valaddr_reg:x16; val_offset:656; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 656, x17, x15, 224, x18)

inst_1058:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x004b878423be8 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x0c1b6ea69558e and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb004b878423be8; op2val:0xffe0c1b6ea69558e; valaddr_reg:x16; val_offset:672; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 672, x17, x15, 240, x18)

inst_1059:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x405e69652cae2 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x0c1b6ea69558e and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe405e69652cae2; op2val:0xffe0c1b6ea69558e; valaddr_reg:x16; val_offset:688; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 688, x17, x15, 256, x18)

inst_1060:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x004b878423be8 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xd2b592ef4e4e6 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb004b878423be8; op2val:0xffdd2b592ef4e4e6; valaddr_reg:x16; val_offset:704; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 704, x17, x15, 272, x18)

inst_1061:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x405e69652cae2 and fs2 == 1 and fe2 == 0x7fd and fm2 == 0xd2b592ef4e4e6 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe405e69652cae2; op2val:0xffdd2b592ef4e4e6; valaddr_reg:x16; val_offset:720; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 720, x17, x15, 288, x18)

inst_1062:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x004b878423be8 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x09941946801c5 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb004b878423be8; op2val:0x7fd09941946801c5; valaddr_reg:x16; val_offset:736; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 736, x17, x15, 304, x18)

inst_1063:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x405e69652cae2 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0x09941946801c5 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe405e69652cae2; op2val:0x7fd09941946801c5; valaddr_reg:x16; val_offset:752; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 752, x17, x15, 320, x18)

inst_1064:// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x004b878423be8 and fs2 == 0 and fe2 == 0x7fc and fm2 == 0xe759ff97b7507 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fb004b878423be8; op2val:0x7fce759ff97b7507; valaddr_reg:x16; val_offset:768; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 768, x17, x15, 336, x18)

inst_1065:// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x405e69652cae2 and fs2 == 0 and fe2 == 0x7fc and fm2 == 0xe759ff97b7507 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fe405e69652cae2; op2val:0x7fce759ff97b7507; valaddr_reg:x16; val_offset:784; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 784, x17, x15, 352, x18)

inst_1066:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xe759ff97b7507 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x11c8af0ae0986 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fce759ff97b7507; op2val:0x40111c8af0ae0986; valaddr_reg:x16; val_offset:800; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 800, x17, x15, 368, x18)

inst_1067:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xe759ff97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fce759ff97b7507; op2val:0x0; valaddr_reg:x16; val_offset:816; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 816, x17, x15, 384, x18)

inst_1068:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xe759ff97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x3137cb6875068 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fce759ff97b7507; op2val:0x3137cb6875068; valaddr_reg:x16; val_offset:832; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 832, x17, x15, 400, x18)

inst_1069:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x3137cb6875068 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x423d517f83eb0 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x3137cb6875068; op2val:0x800423d517f83eb0; valaddr_reg:x16; val_offset:848; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 848, x17, x15, 416, x18)

inst_1070:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xe759ff97b7507 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x423d517f83eb0 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fce759ff97b7507; op2val:0x800423d517f83eb0; valaddr_reg:x16; val_offset:864; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 864, x17, x15, 432, x18)

inst_1071:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xe759ff97b7507 and fs2 == 0 and fe2 == 0x001 and fm2 == 0xec2df2149240f and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fce759ff97b7507; op2val:0x1ec2df2149240f; valaddr_reg:x16; val_offset:880; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 880, x17, x15, 448, x18)

inst_1072:// fs1 == 0 and fe1 == 0x001 and fm1 == 0xec2df2149240f and fs2 == 1 and fe2 == 0x000 and fm2 == 0xd97133b894184 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x1ec2df2149240f; op2val:0x800d97133b894184; valaddr_reg:x16; val_offset:896; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 896, x17, x15, 464, x18)

inst_1073:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xe759ff97b7507 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xd97133b894184 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fce759ff97b7507; op2val:0x800d97133b894184; valaddr_reg:x16; val_offset:912; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 912, x17, x15, 480, x18)

inst_1074:// fs1 == 0 and fe1 == 0x001 and fm1 == 0xec2df2149240f and fs2 == 1 and fe2 == 0x000 and fm2 == 0x879ccf8eb0579 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x1ec2df2149240f; op2val:0x800879ccf8eb0579; valaddr_reg:x16; val_offset:928; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 928, x17, x15, 496, x18)

inst_1075:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xe759ff97b7507 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x879ccf8eb0579 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fce759ff97b7507; op2val:0x800879ccf8eb0579; valaddr_reg:x16; val_offset:944; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 944, x17, x15, 512, x18)

inst_1076:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x3137cb6875068 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x299ba050fc0c8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x3137cb6875068; op2val:0x800299ba050fc0c8; valaddr_reg:x16; val_offset:960; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 960, x17, x15, 528, x18)

inst_1077:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xe759ff97b7507 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x299ba050fc0c8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fce759ff97b7507; op2val:0x800299ba050fc0c8; valaddr_reg:x16; val_offset:976; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 976, x17, x15, 544, x18)

inst_1078:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x3137cb6875068 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x65657f10d48db and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x3137cb6875068; op2val:0x80065657f10d48db; valaddr_reg:x16; val_offset:992; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 992, x17, x15, 560, x18)

inst_1079:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xe759ff97b7507 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x65657f10d48db and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fce759ff97b7507; op2val:0x80065657f10d48db; valaddr_reg:x16; val_offset:1008; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1008, x17, x15, 576, x18)

inst_1080:// fs1 == 0 and fe1 == 0x001 and fm1 == 0xec2df2149240f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x85ef342c7a5c9 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x1ec2df2149240f; op2val:0x85ef342c7a5c9; valaddr_reg:x16; val_offset:1024; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1024, x17, x15, 592, x18)

inst_1081:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xe759ff97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x85ef342c7a5c9 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fce759ff97b7507; op2val:0x85ef342c7a5c9; valaddr_reg:x16; val_offset:1040; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1040, x17, x15, 608, x18)

inst_1082:// fs1 == 0 and fe1 == 0x001 and fm1 == 0xec2df2149240f and fs2 == 0 and fe2 == 0x000 and fm2 == 0xa399f83b8d7e3 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x1ec2df2149240f; op2val:0xa399f83b8d7e3; valaddr_reg:x16; val_offset:1056; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1056, x17, x15, 624, x18)

inst_1083:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xe759ff97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xa399f83b8d7e3 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fce759ff97b7507; op2val:0xa399f83b8d7e3; valaddr_reg:x16; val_offset:1072; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1072, x17, x15, 640, x18)

inst_1084:// fs1 == 0 and fe1 == 0x001 and fm1 == 0xec2df2149240f and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfee29476f2e06 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x1ec2df2149240f; op2val:0xfee29476f2e06; valaddr_reg:x16; val_offset:1088; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1088, x17, x15, 656, x18)

inst_1085:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xe759ff97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfee29476f2e06 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fce759ff97b7507; op2val:0xfee29476f2e06; valaddr_reg:x16; val_offset:1104; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1104, x17, x15, 672, x18)

inst_1086:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xe759ff97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x04ebfabda54d7 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fce759ff97b7507; op2val:0x4ebfabda54d7; valaddr_reg:x16; val_offset:1120; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1120, x17, x15, 688, x18)

inst_1087:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x04ebfabda54d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x035efa3d150a6 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x4ebfabda54d7; op2val:0x35efa3d150a6; valaddr_reg:x16; val_offset:1136; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1136, x17, x15, 704, x18)

inst_1088:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xe759ff97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x035efa3d150a6 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fce759ff97b7507; op2val:0x35efa3d150a6; valaddr_reg:x16; val_offset:1152; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1152, x17, x15, 720, x18)

inst_1089:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x3137cb6875068 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x5eb561bd4f6b8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x3137cb6875068; op2val:0x5eb561bd4f6b8; valaddr_reg:x16; val_offset:1168; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1168, x17, x15, 736, x18)

inst_1090:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xe759ff97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x5eb561bd4f6b8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fce759ff97b7507; op2val:0x5eb561bd4f6b8; valaddr_reg:x16; val_offset:1184; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1184, x17, x15, 752, x18)

inst_1091:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xe759ff97b7507 and fs2 == 0 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fce759ff97b7507; op2val:0x7ff0000000000000; valaddr_reg:x16; val_offset:1200; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1200, x17, x15, 768, x18)

inst_1092:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xe759ff97b7507 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0x8805c5b3ba76f and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fce759ff97b7507; op2val:0xffe8805c5b3ba76f; valaddr_reg:x16; val_offset:1216; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1216, x17, x15, 784, x18)

inst_1093:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xe759ff97b7507 and fs2 == 1 and fe2 == 0x7fe and fm2 == 0xde7300593ddb7 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fce759ff97b7507; op2val:0xffede7300593ddb7; valaddr_reg:x16; val_offset:1232; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1232, x17, x15, 800, x18)

inst_1094:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xe759ff97b7507 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x450c74c9b42e4 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fce759ff97b7507; op2val:0x7fe450c74c9b42e4; valaddr_reg:x16; val_offset:1248; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1248, x17, x15, 816, x18)

inst_1095:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xe759ff97b7507 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0xac44ace32d282 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fce759ff97b7507; op2val:0x7feac44ace32d282; valaddr_reg:x16; val_offset:1264; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1264, x17, x15, 832, x18)

inst_1096:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xe759ff97b7507 and fs2 == 0 and fe2 == 0x7fe and fm2 == 0x405e69652cae2 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fce759ff97b7507; op2val:0x7fe405e69652cae2; valaddr_reg:x16; val_offset:1280; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1280, x17, x15, 848, x18)

inst_1097:// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xe759ff97b7507 and fs2 == 0 and fe2 == 0x7fc and fm2 == 0xe759ff97b7507 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x7fce759ff97b7507; op2val:0x7fce759ff97b7507; valaddr_reg:x16; val_offset:1296; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1296, x17, x15, 864, x18)

inst_1098:// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000000 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x299ba050fc0c8 and rm_val == 0  
// opcode: fle.d ; op1:f10; op2:f11; dest:x12; op1val:0x0; op2val:0x800299ba050fc0c8; valaddr_reg:x16; val_offset:1312; correctval:0; testreg:x18
TEST_FCMP_OP(fle.d, x12, f10, f11, 0, x16, 1312, x17, x15, 880, x18)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_fp:
.dword 0x7fce759ff97b7507
.dword 0x7fce759ff97b7507
.dword 0x0
.dword 0x0
.dword 0x0
.dword 0x800423d517f83eb0
.dword 0xc01707836e56fe8b
.dword 0x0
.dword 0x0
.dword 0xc01707836e56fe8b
.dword 0x0
.dword 0x800d97133b894184
.dword 0xbffe3d32f95a320d
.dword 0x0
.dword 0x0
.dword 0xbffe3d32f95a320d
.dword 0x0
.dword 0x800879ccf8eb0579
.dword 0xbff2dbf77d539bae
.dword 0x0
.dword 0x0
.dword 0xbff2dbf77d539bae
.dword 0x0
.dword 0x800299ba050fc0c8
.dword 0xc00cee7468323917
.dword 0x0
.dword 0x0
.dword 0xc00cee7468323917
.dword 0x0
.dword 0x80065657f10d48db
.dword 0xc021a04aee65a608
.dword 0x0
.dword 0x0
.dword 0xc021a04aee65a608
.dword 0x0
.dword 0x85ef342c7a5c9
.dword 0x3ff2a038f94d730b
.dword 0x0
.dword 0x0
.dword 0x3ff2a038f94d730b
.dword 0x0
.dword 0xa399f83b8d7e3
.dword 0x3ff6c0679d004e5b
.dword 0x0
.dword 0x0
.dword 0x3ff6c0679d004e5b
.dword 0x0
.dword 0xfee29476f2e06
.dword 0x4001b91ae09e503b
.dword 0x0
.dword 0x0
.dword 0x4001b91ae09e503b
.dword 0x0
.dword 0x35efa3d150a6
.dword 0x40077096ee4d2f12
.dword 0x0
.dword 0x0
.dword 0x40077096ee4d2f12
.dword 0x0
.dword 0x5eb561bd4f6b8
.dword 0x402076ab4deeec91
.dword 0x0
.dword 0x0
.dword 0x402076ab4deeec91
.dword 0x0
.dword 0xffc0e3e4312fc728
.dword 0xc002fa24c650ac14
.dword 0x0
.dword 0x0
.dword 0xc002fa24c650ac14
.dword 0x0
.dword 0xffe0c1b6ea69558e
.dword 0xc022d3be740985a9
.dword 0x0
.dword 0x0
.dword 0xc022d3be740985a9
.dword 0x0
.dword 0xffe8805c5b3ba76f
.dword 0xbff605e3d372e471
.dword 0x0
.dword 0x0
.dword 0xbff605e3d372e471
.dword 0x0
.dword 0xffede7300593ddb7
.dword 0xbffae0d6ce341771
.dword 0x0
.dword 0x0
.dword 0xbffae0d6ce341771
.dword 0x0
.dword 0xffdd2b592ef4e4e6
.dword 0xc0206300128a7be9
.dword 0x0
.dword 0x0
.dword 0xc0206300128a7be9
.dword 0x0
.dword 0x7fe450c74c9b42e4
.dword 0x3ff242b3b0a4387a
.dword 0x0
.dword 0x0
.dword 0x3ff242b3b0a4387a
.dword 0x0
.dword 0x7feac44ace32d282
.dword 0x3ff80f28c9e9c76b
.dword 0x0
.dword 0x0
.dword 0x3ff80f28c9e9c76b
.dword 0x0
.dword 0x7fd09941946801c5
.dword 0x4012a6496228606e
.dword 0x0
.dword 0x0
.dword 0x4012a6496228606e
.dword 0x0
.dword 0x7fe405e69652cae2
.dword 0x3ff1ff65f57ff366
.dword 0x0
.dword 0x0
.dword 0x3ff1ff65f57ff366
.dword 0x0
.dword 0x7fce759ff97b7507
.dword 0x40111c8af0ae0986
.dword 0x0
.dword 0x0
.dword 0x40111c8af0ae0986
.dword 0x800423d517f83eb0
.dword 0x800423d517f83eb0
.dword 0x800423d517f83eb0
.dword 0xc01707836e56fe8b
.dword 0x800423d517f83eb0
.dword 0x0
.dword 0x800423d517f83eb0
.dword 0x8024b32977d93970
.dword 0x8024b32977d93970
.dword 0x800d97133b894184
.dword 0x80015be852c0ecf4
.dword 0x8024b32977d93970
.dword 0x8024b32977d93970
.dword 0x80015be852c0ecf4
.dword 0x800423d517f83eb0
.dword 0x800d97133b894184
.dword 0x8024b32977d93970
.dword 0x800879ccf8eb0579
.dword 0x8000d8fae5b11a26
.dword 0x8024b32977d93970
.dword 0x8024b32977d93970
.dword 0x8000d8fae5b11a26
.dword 0x800423d517f83eb0
.dword 0x800879ccf8eb0579
.dword 0x800423d517f83eb0
.dword 0x800299ba050fc0c8
.dword 0x800299ba050fc0c8
.dword 0x800423d517f83eb0
.dword 0x800423d517f83eb0
.dword 0x80065657f10d48db
.dword 0x80065657f10d48db
.dword 0x800423d517f83eb0
.dword 0x8024b32977d93970
.dword 0x85ef342c7a5c9
.dword 0xd64b86ad9094
.dword 0x8024b32977d93970
.dword 0x8024b32977d93970
.dword 0xd64b86ad9094
.dword 0x800423d517f83eb0
.dword 0x85ef342c7a5c9
.dword 0x8024b32977d93970
.dword 0xa399f83b8d7e3
.dword 0x105c326c5af30
.dword 0x8024b32977d93970
.dword 0x8024b32977d93970
.dword 0x105c326c5af30
.dword 0x800423d517f83eb0
.dword 0xa399f83b8d7e3
.dword 0x8024b32977d93970
.dword 0xfee29476f2e06
.dword 0x197d0ed8b1e34
.dword 0x8024b32977d93970
.dword 0x8024b32977d93970
.dword 0x197d0ed8b1e34
.dword 0x800423d517f83eb0
.dword 0xfee29476f2e06
.dword 0x800423d517f83eb0
.dword 0x800069fbb598d312
.dword 0x800069fbb598d312
.dword 0x35efa3d150a6
.dword 0x21b5c662d267b
.dword 0x800069fbb598d312
.dword 0x800069fbb598d312
.dword 0x21b5c662d267b
.dword 0x800423d517f83eb0
.dword 0x35efa3d150a6
.dword 0x800423d517f83eb0
.dword 0x5eb561bd4f6b8
.dword 0x5eb561bd4f6b8
.dword 0x800423d517f83eb0
.dword 0x800423d517f83eb0
.dword 0xffd47f2e5cadc271
.dword 0xffd47f2e5cadc271
.dword 0xffc0e3e4312fc728
.dword 0x8001b4ac2dd761b7
.dword 0xffd47f2e5cadc271
.dword 0xffd47f2e5cadc271
.dword 0x8001b4ac2dd761b7
.dword 0x800423d517f83eb0
.dword 0xffc0e3e4312fc728
.dword 0xffd47f2e5cadc271
.dword 0xffe0c1b6ea69558e
.dword 0x8006c4e25604ed00
.dword 0xffd47f2e5cadc271
.dword 0xffd47f2e5cadc271
.dword 0x8006c4e25604ed00
.dword 0x800423d517f83eb0
.dword 0xffe0c1b6ea69558e
.dword 0x800423d517f83eb0
.dword 0xfff0000000000000
.dword 0xfff0000000000000
.dword 0xffe8805c5b3ba76f
.dword 0x8000fd6141352983
.dword 0xfff0000000000000
.dword 0xfff0000000000000
.dword 0x8000fd6141352983
.dword 0x800423d517f83eb0
.dword 0xffe8805c5b3ba76f
.dword 0xfff0000000000000
.dword 0xffede7300593ddb7
.dword 0x8001353dad8f9fcc
.dword 0xfff0000000000000
.dword 0xfff0000000000000
.dword 0x8001353dad8f9fcc
.dword 0x800423d517f83eb0
.dword 0xffede7300593ddb7
.dword 0xffd47f2e5cadc271
.dword 0xffdd2b592ef4e4e6
.dword 0x8005e443bf91c5dd
.dword 0xffd47f2e5cadc271
.dword 0xffd47f2e5cadc271
.dword 0x8005e443bf91c5dd
.dword 0x800423d517f83eb0
.dword 0xffdd2b592ef4e4e6
.dword 0xfff0000000000000
.dword 0x7fe450c74c9b42e4
.dword 0xd2178c8e4bc2
.dword 0xfff0000000000000
.dword 0xfff0000000000000
.dword 0xd2178c8e4bc2
.dword 0x800423d517f83eb0
.dword 0x7fe450c74c9b42e4
.dword 0xfff0000000000000
.dword 0x7feac44ace32d282
.dword 0x114ce95016c16
.dword 0xfff0000000000000
.dword 0xfff0000000000000
.dword 0x114ce95016c16
.dword 0x800423d517f83eb0
.dword 0x7feac44ace32d282
.dword 0xffd47f2e5cadc271
.dword 0x7fd09941946801c5
.dword 0x35a452e11324d
.dword 0xffd47f2e5cadc271
.dword 0xffd47f2e5cadc271
.dword 0x35a452e11324d
.dword 0x800423d517f83eb0
.dword 0x7fd09941946801c5
.dword 0xfff0000000000000
.dword 0x7fe405e69652cae2
.dword 0xcf11346ee18e
.dword 0xfff0000000000000
.dword 0xfff0000000000000
.dword 0xcf11346ee18e
.dword 0x800423d517f83eb0
.dword 0x7fe405e69652cae2
.dword 0xffd47f2e5cadc271
.dword 0x7fce759ff97b7507
.dword 0x3137cb6875068
.dword 0xffd47f2e5cadc271
.dword 0xffd47f2e5cadc271
.dword 0x3137cb6875068
.dword 0x800423d517f83eb0
.dword 0x7fce759ff97b7507
.dword 0x800d97133b894184
.dword 0x800d97133b894184
.dword 0x800d97133b894184
.dword 0xbffe3d32f95a320d
.dword 0x800d97133b894184
.dword 0x0
.dword 0x800d97133b894184
.dword 0x80015be852c0ecf4
.dword 0x80015be852c0ecf4
.dword 0x800423d517f83eb0
.dword 0x800d97133b894184
.dword 0x800423d517f83eb0
.dword 0x800d97133b894184
.dword 0x800879ccf8eb0579
.dword 0x800879ccf8eb0579
.dword 0x800d97133b894184
.dword 0x80015be852c0ecf4
.dword 0x800299ba050fc0c8
.dword 0x801a0144329d87cc
.dword 0x80015be852c0ecf4
.dword 0x80015be852c0ecf4
.dword 0x801a0144329d87cc
.dword 0x800d97133b894184
.dword 0x800299ba050fc0c8
.dword 0x80015be852c0ecf4
.dword 0x80065657f10d48db
.dword 0x802fafb7b5426c47
.dword 0x80015be852c0ecf4
.dword 0x80015be852c0ecf4
.dword 0x802fafb7b5426c47
.dword 0x800d97133b894184
.dword 0x80065657f10d48db
.dword 0x800d97133b894184
.dword 0x85ef342c7a5c9
.dword 0x85ef342c7a5c9
.dword 0x800d97133b894184
.dword 0x800d97133b894184
.dword 0xa399f83b8d7e3
.dword 0xa399f83b8d7e3
.dword 0x800d97133b894184
.dword 0x800d97133b894184
.dword 0xfee29476f2e06
.dword 0xfee29476f2e06
.dword 0x800d97133b894184
.dword 0x800d97133b894184
.dword 0x800022ca6eace47f
.dword 0x800022ca6eace47f
.dword 0x35efa3d150a6
.dword 0x15119bfdc380d2
.dword 0x800022ca6eace47f
.dword 0x800022ca6eace47f
.dword 0x15119bfdc380d2
.dword 0x800d97133b894184
.dword 0x35efa3d150a6
.dword 0x80015be852c0ecf4
.dword 0x5eb561bd4f6b8
.dword 0x2d98ae8b28d198
.dword 0x80015be852c0ecf4
.dword 0x80015be852c0ecf4
.dword 0x2d98ae8b28d198
.dword 0x800d97133b894184
.dword 0x5eb561bd4f6b8
.dword 0x800d97133b894184
.dword 0xffbae9e55abc765f
.dword 0xffbae9e55abc765f
.dword 0xffc0e3e4312fc728
.dword 0x80110eb9ca69d123
.dword 0xffbae9e55abc765f
.dword 0xffbae9e55abc765f
.dword 0x80110eb9ca69d123
.dword 0x800d97133b894184
.dword 0xffc0e3e4312fc728
.dword 0xffbae9e55abc765f
.dword 0xffe0c1b6ea69558e
.dword 0x8030ec35d70c5080
.dword 0xffbae9e55abc765f
.dword 0xffbae9e55abc765f
.dword 0x8030ec35d70c5080
.dword 0x800d97133b894184
.dword 0xffe0c1b6ea69558e
.dword 0x800d97133b894184
.dword 0xfff0000000000000
.dword 0x8009e5cc8c139f1c
.dword 0xfff0000000000000
.dword 0xfff0000000000000
.dword 0x8009e5cc8c139f1c
.dword 0x800d97133b894184
.dword 0xffe8805c5b3ba76f
.dword 0x800c1468c79c3df8
.dword 0xfff0000000000000
.dword 0xfff0000000000000
.dword 0x800c1468c79c3df8
.dword 0x800d97133b894184
.dword 0xffede7300593ddb7
.dword 0xffbae9e55abc765f
.dword 0xffdd2b592ef4e4e6
.dword 0x802d7552bdd8dd50
.dword 0xffbae9e55abc765f
.dword 0xffbae9e55abc765f
.dword 0x802d7552bdd8dd50
.dword 0x800d97133b894184
.dword 0xffdd2b592ef4e4e6
.dword 0x834eb7d8ef590
.dword 0xfff0000000000000
.dword 0xfff0000000000000
.dword 0x834eb7d8ef590
.dword 0x800d97133b894184
.dword 0x7fe450c74c9b42e4
.dword 0xad011d20e38de
.dword 0xfff0000000000000
.dword 0xfff0000000000000
.dword 0xad011d20e38de
.dword 0x800d97133b894184
.dword 0x7feac44ace32d282
.dword 0xffbae9e55abc765f
.dword 0x7fd09941946801c5
.dword 0x20c359e655fb81
.dword 0xffbae9e55abc765f
.dword 0xffbae9e55abc765f
.dword 0x20c359e655fb81
.dword 0x800d97133b894184
.dword 0x7fd09941946801c5
.dword 0x816ac0c54cf8a
.dword 0xfff0000000000000
.dword 0xfff0000000000000
.dword 0x816ac0c54cf8a
.dword 0x800d97133b894184
.dword 0x7fe405e69652cae2
.dword 0xffbae9e55abc765f
.dword 0x7fce759ff97b7507
.dword 0x1ec2df2149240f
.dword 0xffbae9e55abc765f
.dword 0xffbae9e55abc765f
.dword 0x1ec2df2149240f
.dword 0x800d97133b894184
.dword 0x7fce759ff97b7507
.dword 0x800879ccf8eb0579
.dword 0x800879ccf8eb0579
.dword 0x800879ccf8eb0579
.dword 0xbff2dbf77d539bae
.dword 0x800879ccf8eb0579
.dword 0x0
.dword 0x800879ccf8eb0579
.dword 0x8000d8fae5b11a26
.dword 0x8000d8fae5b11a26
.dword 0x800423d517f83eb0
.dword 0x800879ccf8eb0579
.dword 0x800423d517f83eb0
.dword 0x8000d8fae5b11a26
.dword 0x800299ba050fc0c8
.dword 0x801a0144329d87cc
.dword 0x8000d8fae5b11a26
.dword 0x8000d8fae5b11a26
.dword 0x801a0144329d87cc
.dword 0x800879ccf8eb0579
.dword 0x800299ba050fc0c8
.dword 0x8000d8fae5b11a26
.dword 0x80065657f10d48db
.dword 0x802fafb7b5426c47
.dword 0x8000d8fae5b11a26
.dword 0x8000d8fae5b11a26
.dword 0x802fafb7b5426c47
.dword 0x800879ccf8eb0579
.dword 0x80065657f10d48db
.dword 0x800879ccf8eb0579
.dword 0x85ef342c7a5c9
.dword 0x85ef342c7a5c9
.dword 0x800879ccf8eb0579
.dword 0x800879ccf8eb0579
.dword 0xa399f83b8d7e3
.dword 0xa399f83b8d7e3
.dword 0x800879ccf8eb0579
.dword 0x800879ccf8eb0579
.dword 0xfee29476f2e06
.dword 0xfee29476f2e06
.dword 0x800879ccf8eb0579
.dword 0x800879ccf8eb0579
.dword 0x800015b2b091b5d1
.dword 0x800015b2b091b5d1
.dword 0x35efa3d150a6
.dword 0x15119bfdc380d2
.dword 0x800015b2b091b5d1
.dword 0x800015b2b091b5d1
.dword 0x15119bfdc380d2
.dword 0x800879ccf8eb0579
.dword 0x35efa3d150a6
.dword 0x8000d8fae5b11a26
.dword 0x5eb561bd4f6b8
.dword 0x2d98ae8b28d198
.dword 0x8000d8fae5b11a26
.dword 0x8000d8fae5b11a26
.dword 0x2d98ae8b28d198
.dword 0x800879ccf8eb0579
.dword 0x5eb561bd4f6b8
.dword 0x800879ccf8eb0579
.dword 0xffb0c90875ccb5d8
.dword 0xffb0c90875ccb5d8
.dword 0xffc0e3e4312fc728
.dword 0x80110eb9ca69d123
.dword 0xffb0c90875ccb5d8
.dword 0xffb0c90875ccb5d8
.dword 0x80110eb9ca69d123
.dword 0x800879ccf8eb0579
.dword 0xffc0e3e4312fc728
.dword 0xffb0c90875ccb5d8
.dword 0xffe0c1b6ea69558e
.dword 0x8030ec35d70c5080
.dword 0xffb0c90875ccb5d8
.dword 0xffb0c90875ccb5d8
.dword 0x8030ec35d70c5080
.dword 0x800879ccf8eb0579
.dword 0xffe0c1b6ea69558e
.dword 0x800879ccf8eb0579
.dword 0xffe4fb4a933fe34f
.dword 0xffe4fb4a933fe34f
.dword 0xffe8805c5b3ba76f
.dword 0x8009e5cc8c139f1c
.dword 0xffe4fb4a933fe34f
.dword 0xffe4fb4a933fe34f
.dword 0x8009e5cc8c139f1c
.dword 0x800879ccf8eb0579
.dword 0xffe8805c5b3ba76f
.dword 0xffe4fb4a933fe34f
.dword 0xffede7300593ddb7
.dword 0x800c1468c79c3df8
.dword 0xffe4fb4a933fe34f
.dword 0xffe4fb4a933fe34f
.dword 0x800c1468c79c3df8
.dword 0x800879ccf8eb0579
.dword 0xffede7300593ddb7
.dword 0xffb0c90875ccb5d8
.dword 0xffdd2b592ef4e4e6
.dword 0x802d7552bdd8dd50
.dword 0xffb0c90875ccb5d8
.dword 0xffb0c90875ccb5d8
.dword 0x802d7552bdd8dd50
.dword 0x800879ccf8eb0579
.dword 0xffdd2b592ef4e4e6
.dword 0xffe4fb4a933fe34f
.dword 0x7fe450c74c9b42e4
.dword 0x834eb7d8ef590
.dword 0xffe4fb4a933fe34f
.dword 0xffe4fb4a933fe34f
.dword 0x834eb7d8ef590
.dword 0x800879ccf8eb0579
.dword 0x7fe450c74c9b42e4
.dword 0xffe4fb4a933fe34f
.dword 0x7feac44ace32d282
.dword 0xad011d20e38de
.dword 0xffe4fb4a933fe34f
.dword 0xffe4fb4a933fe34f
.dword 0xad011d20e38de
.dword 0x800879ccf8eb0579
.dword 0x7feac44ace32d282
.dword 0xffb0c90875ccb5d8
.dword 0x7fd09941946801c5
.dword 0x20c359e655fb81
.dword 0xffb0c90875ccb5d8
.dword 0xffb0c90875ccb5d8
.dword 0x20c359e655fb81
.dword 0x800879ccf8eb0579
.dword 0x7fd09941946801c5
.dword 0xffe4fb4a933fe34f
.dword 0x7fe405e69652cae2
.dword 0x816ac0c54cf8a
.dword 0xffe4fb4a933fe34f
.dword 0xffe4fb4a933fe34f
.dword 0x816ac0c54cf8a
.dword 0x800879ccf8eb0579
.dword 0x7fe405e69652cae2
.dword 0xffb0c90875ccb5d8
.dword 0x7fce759ff97b7507
.dword 0x1ec2df2149240f
.dword 0xffb0c90875ccb5d8
.dword 0xffb0c90875ccb5d8
.dword 0x1ec2df2149240f
.dword 0x800879ccf8eb0579
.dword 0x7fce759ff97b7507
.dword 0x800299ba050fc0c8
.dword 0x800299ba050fc0c8
.dword 0x800299ba050fc0c8
.dword 0xc00cee7468323917
.dword 0x800299ba050fc0c8
.dword 0x0
.dword 0x800299ba050fc0c8
.dword 0x801a0144329d87cc
.dword 0x801a0144329d87cc
.dword 0x800d97133b894184
.dword 0x800299ba050fc0c8
.dword 0x800d97133b894184
.dword 0x801a0144329d87cc
.dword 0x800879ccf8eb0579
.dword 0x800299ba050fc0c8
.dword 0x800879ccf8eb0579
.dword 0x800299ba050fc0c8
.dword 0x80065657f10d48db
.dword 0x80065657f10d48db
.dword 0x800299ba050fc0c8
.dword 0x801a0144329d87cc
.dword 0x85ef342c7a5c9
.dword 0xd64b86ad9094
.dword 0x801a0144329d87cc
.dword 0x801a0144329d87cc
.dword 0xd64b86ad9094
.dword 0x800299ba050fc0c8
.dword 0x85ef342c7a5c9
.dword 0x801a0144329d87cc
.dword 0xa399f83b8d7e3
.dword 0x105c326c5af30
.dword 0x801a0144329d87cc
.dword 0x801a0144329d87cc
.dword 0x105c326c5af30
.dword 0x800299ba050fc0c8
.dword 0xa399f83b8d7e3
.dword 0x801a0144329d87cc
.dword 0xfee29476f2e06
.dword 0x197d0ed8b1e34
.dword 0x801a0144329d87cc
.dword 0x801a0144329d87cc
.dword 0x197d0ed8b1e34
.dword 0x800299ba050fc0c8
.dword 0xfee29476f2e06
.dword 0x800299ba050fc0c8
.dword 0x800042929a1b2ce1
.dword 0x800042929a1b2ce1
.dword 0x35efa3d150a6
.dword 0x21b5c662d267b
.dword 0x800042929a1b2ce1
.dword 0x800042929a1b2ce1
.dword 0x21b5c662d267b
.dword 0x800299ba050fc0c8
.dword 0x35efa3d150a6
.dword 0x800299ba050fc0c8
.dword 0x5eb561bd4f6b8
.dword 0x5eb561bd4f6b8
.dword 0x800299ba050fc0c8
.dword 0x800299ba050fc0c8
.dword 0xffc9bff6a8783cf3
.dword 0xffc9bff6a8783cf3
.dword 0xffc0e3e4312fc728
.dword 0x8001b4ac2dd761b7
.dword 0xffc9bff6a8783cf3
.dword 0xffc9bff6a8783cf3
.dword 0x8001b4ac2dd761b7
.dword 0x800299ba050fc0c8
.dword 0xffc0e3e4312fc728
.dword 0xffc9bff6a8783cf3
.dword 0xffe0c1b6ea69558e
.dword 0x8006c4e25604ed00
.dword 0xffc9bff6a8783cf3
.dword 0xffc9bff6a8783cf3
.dword 0x8006c4e25604ed00
.dword 0x800299ba050fc0c8
.dword 0xffe0c1b6ea69558e
.dword 0x800299ba050fc0c8
.dword 0xfff0000000000000
.dword 0x800299ba050fc0c8
.dword 0xffe8805c5b3ba76f
.dword 0x800299ba050fc0c8
.dword 0xffede7300593ddb7
.dword 0xffc9bff6a8783cf3
.dword 0xffdd2b592ef4e4e6
.dword 0x8005e443bf91c5dd
.dword 0xffc9bff6a8783cf3
.dword 0xffc9bff6a8783cf3
.dword 0x8005e443bf91c5dd
.dword 0x800299ba050fc0c8
.dword 0xffdd2b592ef4e4e6
.dword 0x800299ba050fc0c8
.dword 0x7fe450c74c9b42e4
.dword 0x800299ba050fc0c8
.dword 0x7feac44ace32d282
.dword 0xffc9bff6a8783cf3
.dword 0x7fd09941946801c5
.dword 0x35a452e11324d
.dword 0xffc9bff6a8783cf3
.dword 0xffc9bff6a8783cf3
.dword 0x35a452e11324d
.dword 0x800299ba050fc0c8
.dword 0x7fd09941946801c5
.dword 0x800299ba050fc0c8
.dword 0x7fe405e69652cae2
.dword 0xffc9bff6a8783cf3
.dword 0x7fce759ff97b7507
.dword 0x3137cb6875068
.dword 0xffc9bff6a8783cf3
.dword 0xffc9bff6a8783cf3
.dword 0x3137cb6875068
.dword 0x800299ba050fc0c8
.dword 0x7fce759ff97b7507
.dword 0x80065657f10d48db
.dword 0x80065657f10d48db
.dword 0x80065657f10d48db
.dword 0xc021a04aee65a608
.dword 0x80065657f10d48db
.dword 0x0
.dword 0x80065657f10d48db
.dword 0x802fafb7b5426c47
.dword 0x802fafb7b5426c47
.dword 0x800d97133b894184
.dword 0x80065657f10d48db
.dword 0x800d97133b894184
.dword 0x802fafb7b5426c47
.dword 0x800879ccf8eb0579
.dword 0x80065657f10d48db
.dword 0x800879ccf8eb0579
.dword 0x802fafb7b5426c47
.dword 0x85ef342c7a5c9
.dword 0xd64b86ad9094
.dword 0x802fafb7b5426c47
.dword 0x802fafb7b5426c47
.dword 0xd64b86ad9094
.dword 0x80065657f10d48db
.dword 0x85ef342c7a5c9
.dword 0x802fafb7b5426c47
.dword 0xa399f83b8d7e3
.dword 0x105c326c5af30
.dword 0x802fafb7b5426c47
.dword 0x802fafb7b5426c47
.dword 0x105c326c5af30
.dword 0x80065657f10d48db
.dword 0xa399f83b8d7e3
.dword 0x802fafb7b5426c47
.dword 0xfee29476f2e06
.dword 0x197d0ed8b1e34
.dword 0x802fafb7b5426c47
.dword 0x802fafb7b5426c47
.dword 0x197d0ed8b1e34
.dword 0x80065657f10d48db
.dword 0xfee29476f2e06
.dword 0x80065657f10d48db
.dword 0x8000a23bfe815416
.dword 0x8000a23bfe815416
.dword 0x35efa3d150a6
.dword 0x21b5c662d267b
.dword 0x8000a23bfe815416
.dword 0x8000a23bfe815416
.dword 0x21b5c662d267b
.dword 0x80065657f10d48db
.dword 0x35efa3d150a6
.dword 0x80065657f10d48db
.dword 0x5eb561bd4f6b8
.dword 0x5eb561bd4f6b8
.dword 0x80065657f10d48db
.dword 0x80065657f10d48db
.dword 0xffdf6025caa2d205
.dword 0xffdf6025caa2d205
.dword 0xffc0e3e4312fc728
.dword 0x8001b4ac2dd761b7
.dword 0xffdf6025caa2d205
.dword 0xffdf6025caa2d205
.dword 0x8001b4ac2dd761b7
.dword 0x80065657f10d48db
.dword 0xffc0e3e4312fc728
.dword 0xffdf6025caa2d205
.dword 0xffe0c1b6ea69558e
.dword 0x8006c4e25604ed00
.dword 0xffdf6025caa2d205
.dword 0xffdf6025caa2d205
.dword 0x8006c4e25604ed00
.dword 0x80065657f10d48db
.dword 0xffe0c1b6ea69558e
.dword 0x80065657f10d48db
.dword 0xfff0000000000000
.dword 0x80065657f10d48db
.dword 0xffe8805c5b3ba76f
.dword 0x80065657f10d48db
.dword 0xffede7300593ddb7
.dword 0xffdf6025caa2d205
.dword 0xffdd2b592ef4e4e6
.dword 0x8005e443bf91c5dd
.dword 0xffdf6025caa2d205
.dword 0xffdf6025caa2d205
.dword 0x8005e443bf91c5dd
.dword 0x80065657f10d48db
.dword 0xffdd2b592ef4e4e6
.dword 0x80065657f10d48db
.dword 0x7fe450c74c9b42e4
.dword 0x80065657f10d48db
.dword 0x7feac44ace32d282
.dword 0xffdf6025caa2d205
.dword 0x7fd09941946801c5
.dword 0x35a452e11324d
.dword 0xffdf6025caa2d205
.dword 0xffdf6025caa2d205
.dword 0x35a452e11324d
.dword 0x80065657f10d48db
.dword 0x7fd09941946801c5
.dword 0x80065657f10d48db
.dword 0x7fe405e69652cae2
.dword 0xffdf6025caa2d205
.dword 0x7fce759ff97b7507
.dword 0x3137cb6875068
.dword 0xffdf6025caa2d205
.dword 0xffdf6025caa2d205
.dword 0x3137cb6875068
.dword 0x80065657f10d48db
.dword 0x7fce759ff97b7507
.dword 0x85ef342c7a5c9
.dword 0x85ef342c7a5c9
.dword 0x85ef342c7a5c9
.dword 0x3ff2a038f94d730b
.dword 0x85ef342c7a5c9
.dword 0x0
.dword 0x85ef342c7a5c9
.dword 0xd64b86ad9094
.dword 0xd64b86ad9094
.dword 0x800423d517f83eb0
.dword 0x85ef342c7a5c9
.dword 0x800423d517f83eb0
.dword 0xd64b86ad9094
.dword 0x800299ba050fc0c8
.dword 0x85ef342c7a5c9
.dword 0x800299ba050fc0c8
.dword 0xd64b86ad9094
.dword 0x80065657f10d48db
.dword 0x85ef342c7a5c9
.dword 0x80065657f10d48db
.dword 0x85ef342c7a5c9
.dword 0xa399f83b8d7e3
.dword 0xa399f83b8d7e3
.dword 0x85ef342c7a5c9
.dword 0x85ef342c7a5c9
.dword 0xfee29476f2e06
.dword 0xfee29476f2e06
.dword 0x85ef342c7a5c9
.dword 0x85ef342c7a5c9
.dword 0x156df3de280f
.dword 0x156df3de280f
.dword 0x35efa3d150a6
.dword 0x15119bfdc380d2
.dword 0x156df3de280f
.dword 0x156df3de280f
.dword 0x15119bfdc380d2
.dword 0x85ef342c7a5c9
.dword 0x35efa3d150a6
.dword 0xd64b86ad9094
.dword 0x5eb561bd4f6b8
.dword 0x2d98ae8b28d198
.dword 0xd64b86ad9094
.dword 0xd64b86ad9094
.dword 0x2d98ae8b28d198
.dword 0x85ef342c7a5c9
.dword 0x5eb561bd4f6b8
.dword 0x85ef342c7a5c9
.dword 0x7fb093dbe3aa0387
.dword 0x7fb093dbe3aa0387
.dword 0xffc0e3e4312fc728
.dword 0x80110eb9ca69d123
.dword 0x7fb093dbe3aa0387
.dword 0x7fb093dbe3aa0387
.dword 0x80110eb9ca69d123
.dword 0x85ef342c7a5c9
.dword 0xffc0e3e4312fc728
.dword 0x7fb093dbe3aa0387
.dword 0xffe0c1b6ea69558e
.dword 0x8030ec35d70c5080
.dword 0x7fb093dbe3aa0387
.dword 0x7fb093dbe3aa0387
.dword 0x8030ec35d70c5080
.dword 0x85ef342c7a5c9
.dword 0xffe0c1b6ea69558e
.dword 0x85ef342c7a5c9
.dword 0x7fe4b8d2dc948469
.dword 0x7fe4b8d2dc948469
.dword 0xffe8805c5b3ba76f
.dword 0x8009e5cc8c139f1c
.dword 0x7fe4b8d2dc948469
.dword 0x7fe4b8d2dc948469
.dword 0x8009e5cc8c139f1c
.dword 0x85ef342c7a5c9
.dword 0xffe8805c5b3ba76f
.dword 0x7fe4b8d2dc948469
.dword 0xffede7300593ddb7
.dword 0x800c1468c79c3df8
.dword 0x7fe4b8d2dc948469
.dword 0x7fe4b8d2dc948469
.dword 0x800c1468c79c3df8
.dword 0x85ef342c7a5c9
.dword 0xffede7300593ddb7
.dword 0x7fb093dbe3aa0387
.dword 0xffdd2b592ef4e4e6
.dword 0x802d7552bdd8dd50
.dword 0x7fb093dbe3aa0387
.dword 0x7fb093dbe3aa0387
.dword 0x802d7552bdd8dd50
.dword 0x85ef342c7a5c9
.dword 0xffdd2b592ef4e4e6
.dword 0x7fe4b8d2dc948469
.dword 0x7fe450c74c9b42e4
.dword 0x834eb7d8ef590
.dword 0x7fe4b8d2dc948469
.dword 0x7fe4b8d2dc948469
.dword 0x834eb7d8ef590
.dword 0x85ef342c7a5c9
.dword 0x7fe450c74c9b42e4
.dword 0x7fe4b8d2dc948469
.dword 0x7feac44ace32d282
.dword 0xad011d20e38de
.dword 0x7fe4b8d2dc948469
.dword 0x7fe4b8d2dc948469
.dword 0xad011d20e38de
.dword 0x85ef342c7a5c9
.dword 0x7feac44ace32d282
.dword 0x7fb093dbe3aa0387
.dword 0x7fd09941946801c5
.dword 0x20c359e655fb81
.dword 0x7fb093dbe3aa0387
.dword 0x7fb093dbe3aa0387
.dword 0x20c359e655fb81
.dword 0x85ef342c7a5c9
.dword 0x7fd09941946801c5
.dword 0x7fe4b8d2dc948469
.dword 0x7fe405e69652cae2
.dword 0x816ac0c54cf8a
.dword 0x7fe4b8d2dc948469
.dword 0x7fe4b8d2dc948469
.dword 0x816ac0c54cf8a
.dword 0x85ef342c7a5c9
.dword 0x7fe405e69652cae2
.dword 0x7fb093dbe3aa0387
.dword 0x7fce759ff97b7507
.dword 0x1ec2df2149240f
.dword 0x7fb093dbe3aa0387
.dword 0x7fb093dbe3aa0387
.dword 0x1ec2df2149240f
.dword 0x85ef342c7a5c9
.dword 0x7fce759ff97b7507
.dword 0xa399f83b8d7e3
.dword 0xa399f83b8d7e3
.dword 0xa399f83b8d7e3
.dword 0x3ff6c0679d004e5b
.dword 0xa399f83b8d7e3
.dword 0x0
.dword 0xa399f83b8d7e3
.dword 0x105c326c5af30
.dword 0x105c326c5af30
.dword 0x800423d517f83eb0
.dword 0xa399f83b8d7e3
.dword 0x800423d517f83eb0
.dword 0x105c326c5af30
.dword 0x800299ba050fc0c8
.dword 0xa399f83b8d7e3
.dword 0x800299ba050fc0c8
.dword 0x105c326c5af30
.dword 0x80065657f10d48db
.dword 0xa399f83b8d7e3
.dword 0x80065657f10d48db
.dword 0xa399f83b8d7e3
.dword 0xfee29476f2e06
.dword 0xfee29476f2e06
.dword 0xa399f83b8d7e3
.dword 0xa399f83b8d7e3
.dword 0x1a2d1d7a2b1e
.dword 0x1a2d1d7a2b1e
.dword 0x35efa3d150a6
.dword 0x15119bfdc380d2
.dword 0x1a2d1d7a2b1e
.dword 0x1a2d1d7a2b1e
.dword 0x15119bfdc380d2
.dword 0xa399f83b8d7e3
.dword 0x35efa3d150a6
.dword 0x105c326c5af30
.dword 0x5eb561bd4f6b8
.dword 0x2d98ae8b28d198
.dword 0x105c326c5af30
.dword 0x105c326c5af30
.dword 0x2d98ae8b28d198
.dword 0xa399f83b8d7e3
.dword 0x5eb561bd4f6b8
.dword 0xa399f83b8d7e3
.dword 0x7fb43fe46d2b7ce6
.dword 0x7fb43fe46d2b7ce6
.dword 0xffc0e3e4312fc728
.dword 0x80110eb9ca69d123
.dword 0x7fb43fe46d2b7ce6
.dword 0x7fb43fe46d2b7ce6
.dword 0x80110eb9ca69d123
.dword 0xa399f83b8d7e3
.dword 0xffc0e3e4312fc728
.dword 0x7fb43fe46d2b7ce6
.dword 0xffe0c1b6ea69558e
.dword 0x8030ec35d70c5080
.dword 0x7fb43fe46d2b7ce6
.dword 0x7fb43fe46d2b7ce6
.dword 0x8030ec35d70c5080
.dword 0xa399f83b8d7e3
.dword 0xffe0c1b6ea69558e
.dword 0xa399f83b8d7e3
.dword 0x7fe94fdd88765c1f
.dword 0x7fe94fdd88765c1f
.dword 0xffe8805c5b3ba76f
.dword 0x8009e5cc8c139f1c
.dword 0x7fe94fdd88765c1f
.dword 0x7fe94fdd88765c1f
.dword 0x8009e5cc8c139f1c
.dword 0xa399f83b8d7e3
.dword 0xffe8805c5b3ba76f
.dword 0x7fe94fdd88765c1f
.dword 0xffede7300593ddb7
.dword 0x800c1468c79c3df8
.dword 0x7fe94fdd88765c1f
.dword 0x7fe94fdd88765c1f
.dword 0x800c1468c79c3df8
.dword 0xa399f83b8d7e3
.dword 0xffede7300593ddb7
.dword 0x7fb43fe46d2b7ce6
.dword 0xffdd2b592ef4e4e6
.dword 0x802d7552bdd8dd50
.dword 0x7fb43fe46d2b7ce6
.dword 0x7fb43fe46d2b7ce6
.dword 0x802d7552bdd8dd50
.dword 0xa399f83b8d7e3
.dword 0xffdd2b592ef4e4e6
.dword 0x7fe94fdd88765c1f
.dword 0x7fe450c74c9b42e4
.dword 0x834eb7d8ef590
.dword 0x7fe94fdd88765c1f
.dword 0x7fe94fdd88765c1f
.dword 0x834eb7d8ef590
.dword 0xa399f83b8d7e3
.dword 0x7fe450c74c9b42e4
.dword 0x7fe94fdd88765c1f
.dword 0x7feac44ace32d282
.dword 0xad011d20e38de
.dword 0x7fe94fdd88765c1f
.dword 0x7fe94fdd88765c1f
.dword 0xad011d20e38de
.dword 0xa399f83b8d7e3
.dword 0x7feac44ace32d282
.dword 0x7fb43fe46d2b7ce6
.dword 0x7fd09941946801c5
.dword 0x20c359e655fb81
.dword 0x7fb43fe46d2b7ce6
.dword 0x7fb43fe46d2b7ce6
.dword 0x20c359e655fb81
.dword 0xa399f83b8d7e3
.dword 0x7fd09941946801c5
.dword 0x7fe94fdd88765c1f
.dword 0x7fe405e69652cae2
.dword 0x816ac0c54cf8a
.dword 0x7fe94fdd88765c1f
.dword 0x7fe94fdd88765c1f
.dword 0x816ac0c54cf8a
.dword 0xa399f83b8d7e3
.dword 0x7fe405e69652cae2
.dword 0x7fb43fe46d2b7ce6
.dword 0x7fce759ff97b7507
.dword 0x1ec2df2149240f
.dword 0x7fb43fe46d2b7ce6
.dword 0x7fb43fe46d2b7ce6
.dword 0x1ec2df2149240f
.dword 0xa399f83b8d7e3
.dword 0x7fce759ff97b7507
.dword 0xfee29476f2e06
.dword 0xfee29476f2e06
.dword 0xfee29476f2e06
.dword 0x4001b91ae09e503b
.dword 0xfee29476f2e06
.dword 0x0
.dword 0xfee29476f2e06
.dword 0x197d0ed8b1e34
.dword 0x197d0ed8b1e34
.dword 0x800423d517f83eb0
.dword 0xfee29476f2e06
.dword 0x800423d517f83eb0
.dword 0x197d0ed8b1e34
.dword 0x800299ba050fc0c8
.dword 0xfee29476f2e06
.dword 0x800299ba050fc0c8
.dword 0x197d0ed8b1e34
.dword 0x80065657f10d48db
.dword 0xfee29476f2e06
.dword 0x80065657f10d48db
.dword 0xfee29476f2e06
.dword 0x28c817c11c9f
.dword 0x28c817c11c9f
.dword 0x35efa3d150a6
.dword 0x15119bfdc380d2
.dword 0x28c817c11c9f
.dword 0x28c817c11c9f
.dword 0x15119bfdc380d2
.dword 0xfee29476f2e06
.dword 0x35efa3d150a6
.dword 0x197d0ed8b1e34
.dword 0x5eb561bd4f6b8
.dword 0x2d98ae8b28d198
.dword 0x197d0ed8b1e34
.dword 0x197d0ed8b1e34
.dword 0x2d98ae8b28d198
.dword 0xfee29476f2e06
.dword 0x5eb561bd4f6b8
.dword 0xfee29476f2e06
.dword 0x7fbf8c50a18d0c04
.dword 0x7fbf8c50a18d0c04
.dword 0xffc0e3e4312fc728
.dword 0x80110eb9ca69d123
.dword 0x7fbf8c50a18d0c04
.dword 0x7fbf8c50a18d0c04
.dword 0x80110eb9ca69d123
.dword 0xfee29476f2e06
.dword 0xffc0e3e4312fc728
.dword 0x7fbf8c50a18d0c04
.dword 0xffe0c1b6ea69558e
.dword 0x8030ec35d70c5080
.dword 0x7fbf8c50a18d0c04
.dword 0x7fbf8c50a18d0c04
.dword 0x8030ec35d70c5080
.dword 0xfee29476f2e06
.dword 0xffe0c1b6ea69558e
.dword 0xfee29476f2e06
.dword 0x7ff0000000000000
.dword 0x7ff0000000000000
.dword 0xffe8805c5b3ba76f
.dword 0x8009e5cc8c139f1c
.dword 0x7ff0000000000000
.dword 0x7ff0000000000000
.dword 0x8009e5cc8c139f1c
.dword 0xfee29476f2e06
.dword 0xffe8805c5b3ba76f
.dword 0x7ff0000000000000
.dword 0xffede7300593ddb7
.dword 0x800c1468c79c3df8
.dword 0x7ff0000000000000
.dword 0x7ff0000000000000
.dword 0x800c1468c79c3df8
.dword 0xfee29476f2e06
.dword 0xffede7300593ddb7
.dword 0x7fbf8c50a18d0c04
.dword 0xffdd2b592ef4e4e6
.dword 0x802d7552bdd8dd50
.dword 0x7fbf8c50a18d0c04
.dword 0x7fbf8c50a18d0c04
.dword 0x802d7552bdd8dd50
.dword 0xfee29476f2e06
.dword 0xffdd2b592ef4e4e6
.dword 0x7ff0000000000000
.dword 0x7fe450c74c9b42e4
.dword 0x834eb7d8ef590
.dword 0x7ff0000000000000
.dword 0x7ff0000000000000
.dword 0x834eb7d8ef590
.dword 0xfee29476f2e06
.dword 0x7fe450c74c9b42e4
.dword 0x7ff0000000000000
.dword 0x7feac44ace32d282
.dword 0xad011d20e38de
.dword 0x7ff0000000000000
.dword 0x7ff0000000000000
.dword 0xad011d20e38de
.dword 0xfee29476f2e06
.dword 0x7feac44ace32d282
.dword 0x7fbf8c50a18d0c04
.dword 0x7fd09941946801c5
.dword 0x20c359e655fb81
.dword 0x7fbf8c50a18d0c04
.dword 0x7fbf8c50a18d0c04
.dword 0x20c359e655fb81
.dword 0xfee29476f2e06
.dword 0x7fd09941946801c5
.dword 0x7ff0000000000000
.dword 0x7fe405e69652cae2
.dword 0x816ac0c54cf8a
.dword 0x7ff0000000000000
.dword 0x7ff0000000000000
.dword 0x816ac0c54cf8a
.dword 0xfee29476f2e06
.dword 0x7fe405e69652cae2
.dword 0x7fbf8c50a18d0c04
.dword 0x7fce759ff97b7507
.dword 0x1ec2df2149240f
.dword 0x7fbf8c50a18d0c04
.dword 0x7fbf8c50a18d0c04
.dword 0x1ec2df2149240f
.dword 0xfee29476f2e06
.dword 0x7fce759ff97b7507
.dword 0x35efa3d150a6
.dword 0x35efa3d150a6
.dword 0x35efa3d150a6
.dword 0x40077096ee4d2f12
.dword 0x35efa3d150a6
.dword 0x0
.dword 0x35efa3d150a6
.dword 0x21b5c662d267b
.dword 0x21b5c662d267b
.dword 0x800423d517f83eb0
.dword 0x35efa3d150a6
.dword 0x800423d517f83eb0
.dword 0x35efa3d150a6
.dword 0x15119bfdc380d2
.dword 0x15119bfdc380d2
.dword 0x800d97133b894184
.dword 0x35efa3d150a6
.dword 0x800d97133b894184
.dword 0x15119bfdc380d2
.dword 0x800879ccf8eb0579
.dword 0x35efa3d150a6
.dword 0x800879ccf8eb0579
.dword 0x21b5c662d267b
.dword 0x800299ba050fc0c8
.dword 0x35efa3d150a6
.dword 0x800299ba050fc0c8
.dword 0x21b5c662d267b
.dword 0x80065657f10d48db
.dword 0x35efa3d150a6
.dword 0x80065657f10d48db
.dword 0x15119bfdc380d2
.dword 0x85ef342c7a5c9
.dword 0x35efa3d150a6
.dword 0x85ef342c7a5c9
.dword 0x15119bfdc380d2
.dword 0xa399f83b8d7e3
.dword 0x35efa3d150a6
.dword 0xa399f83b8d7e3
.dword 0x15119bfdc380d2
.dword 0xfee29476f2e06
.dword 0x35efa3d150a6
.dword 0xfee29476f2e06
.dword 0x21b5c662d267b
.dword 0x5eb561bd4f6b8
.dword 0x97889c6218ac
.dword 0x21b5c662d267b
.dword 0x21b5c662d267b
.dword 0x97889c6218ac
.dword 0x35efa3d150a6
.dword 0x5eb561bd4f6b8
.dword 0x35efa3d150a6
.dword 0x7fc4dcb3b62b25ff
.dword 0x7fc4dcb3b62b25ff
.dword 0xffc0e3e4312fc728
.dword 0x80002baad1625692
.dword 0x7fc4dcb3b62b25ff
.dword 0x7fc4dcb3b62b25ff
.dword 0x80002baad1625692
.dword 0x35efa3d150a6
.dword 0xffc0e3e4312fc728
.dword 0x7fc4dcb3b62b25ff
.dword 0xffe0c1b6ea69558e
.dword 0x8000ad49d566e480
.dword 0x7fc4dcb3b62b25ff
.dword 0x7fc4dcb3b62b25ff
.dword 0x8000ad49d566e480
.dword 0x35efa3d150a6
.dword 0xffe0c1b6ea69558e
.dword 0x35efa3d150a6
.dword 0x7ff0000000000000
.dword 0x80001956868550f3
.dword 0x7ff0000000000000
.dword 0x7ff0000000000000
.dword 0x80001956868550f3
.dword 0x35efa3d150a6
.dword 0xffe8805c5b3ba76f
.dword 0x80001eec915b2994
.dword 0x7ff0000000000000
.dword 0x7ff0000000000000
.dword 0x80001eec915b2994
.dword 0x35efa3d150a6
.dword 0xffede7300593ddb7
.dword 0x7fc4dcb3b62b25ff
.dword 0xffdd2b592ef4e4e6
.dword 0x800096d393282d63
.dword 0x7fc4dcb3b62b25ff
.dword 0x7fc4dcb3b62b25ff
.dword 0x800096d393282d63
.dword 0x35efa3d150a6
.dword 0xffdd2b592ef4e4e6
.dword 0x15025adb0793
.dword 0x7ff0000000000000
.dword 0x7ff0000000000000
.dword 0x15025adb0793
.dword 0x35efa3d150a6
.dword 0x7fe450c74c9b42e4
.dword 0x1bae4219be02
.dword 0x7ff0000000000000
.dword 0x7ff0000000000000
.dword 0x1bae4219be02
.dword 0x35efa3d150a6
.dword 0x7feac44ace32d282
.dword 0x7fc4dcb3b62b25ff
.dword 0x7fd09941946801c5
.dword 0x55d3b7ce8508
.dword 0x7fc4dcb3b62b25ff
.dword 0x7fc4dcb3b62b25ff
.dword 0x55d3b7ce8508
.dword 0x35efa3d150a6
.dword 0x7fd09941946801c5
.dword 0x14b4eba4b028
.dword 0x7ff0000000000000
.dword 0x7ff0000000000000
.dword 0x14b4eba4b028
.dword 0x35efa3d150a6
.dword 0x7fe405e69652cae2
.dword 0x7fc4dcb3b62b25ff
.dword 0x7fce759ff97b7507
.dword 0x4ebfabda54d7
.dword 0x7fc4dcb3b62b25ff
.dword 0x7fc4dcb3b62b25ff
.dword 0x4ebfabda54d7
.dword 0x35efa3d150a6
.dword 0x7fce759ff97b7507
.dword 0x5eb561bd4f6b8
.dword 0x5eb561bd4f6b8
.dword 0x5eb561bd4f6b8
.dword 0x402076ab4deeec91
.dword 0x5eb561bd4f6b8
.dword 0x0
.dword 0x5eb561bd4f6b8
.dword 0x2d98ae8b28d198
.dword 0x2d98ae8b28d198
.dword 0x800d97133b894184
.dword 0x5eb561bd4f6b8
.dword 0x800d97133b894184
.dword 0x2d98ae8b28d198
.dword 0x800879ccf8eb0579
.dword 0x5eb561bd4f6b8
.dword 0x800879ccf8eb0579
.dword 0x2d98ae8b28d198
.dword 0x85ef342c7a5c9
.dword 0x5eb561bd4f6b8
.dword 0x85ef342c7a5c9
.dword 0x2d98ae8b28d198
.dword 0xa399f83b8d7e3
.dword 0x5eb561bd4f6b8
.dword 0xa399f83b8d7e3
.dword 0x2d98ae8b28d198
.dword 0xfee29476f2e06
.dword 0x5eb561bd4f6b8
.dword 0xfee29476f2e06
.dword 0x5eb561bd4f6b8
.dword 0x97889c6218ac
.dword 0x97889c6218ac
.dword 0x35efa3d150a6
.dword 0x5eb561bd4f6b8
.dword 0x35efa3d150a6
.dword 0x5eb561bd4f6b8
.dword 0x7fdd4e5c31a3975f
.dword 0x7fdd4e5c31a3975f
.dword 0xffc0e3e4312fc728
.dword 0x8001b4ac2dd761b7
.dword 0x7fdd4e5c31a3975f
.dword 0x7fdd4e5c31a3975f
.dword 0x8001b4ac2dd761b7
.dword 0x5eb561bd4f6b8
.dword 0xffc0e3e4312fc728
.dword 0x7fdd4e5c31a3975f
.dword 0xffe0c1b6ea69558e
.dword 0x8006c4e25604ed00
.dword 0x7fdd4e5c31a3975f
.dword 0x7fdd4e5c31a3975f
.dword 0x8006c4e25604ed00
.dword 0x5eb561bd4f6b8
.dword 0xffe0c1b6ea69558e
.dword 0x5eb561bd4f6b8
.dword 0x7ff0000000000000
.dword 0x8000fd6141352983
.dword 0x7ff0000000000000
.dword 0x7ff0000000000000
.dword 0x8000fd6141352983
.dword 0x5eb561bd4f6b8
.dword 0xffe8805c5b3ba76f
.dword 0x8001353dad8f9fcc
.dword 0x7ff0000000000000
.dword 0x7ff0000000000000
.dword 0x8001353dad8f9fcc
.dword 0x5eb561bd4f6b8
.dword 0xffede7300593ddb7
.dword 0x7fdd4e5c31a3975f
.dword 0xffdd2b592ef4e4e6
.dword 0x8005e443bf91c5dd
.dword 0x7fdd4e5c31a3975f
.dword 0x7fdd4e5c31a3975f
.dword 0x8005e443bf91c5dd
.dword 0x5eb561bd4f6b8
.dword 0xffdd2b592ef4e4e6
.dword 0xd2178c8e4bc2
.dword 0x7ff0000000000000
.dword 0x7ff0000000000000
.dword 0xd2178c8e4bc2
.dword 0x5eb561bd4f6b8
.dword 0x7fe450c74c9b42e4
.dword 0x114ce95016c16
.dword 0x7ff0000000000000
.dword 0x7ff0000000000000
.dword 0x114ce95016c16
.dword 0x5eb561bd4f6b8
.dword 0x7feac44ace32d282
.dword 0x7fdd4e5c31a3975f
.dword 0x7fd09941946801c5
.dword 0x35a452e11324d
.dword 0x7fdd4e5c31a3975f
.dword 0x7fdd4e5c31a3975f
.dword 0x35a452e11324d
.dword 0x5eb561bd4f6b8
.dword 0x7fd09941946801c5
.dword 0xcf11346ee18e
.dword 0x7ff0000000000000
.dword 0x7ff0000000000000
.dword 0xcf11346ee18e
.dword 0x5eb561bd4f6b8
.dword 0x7fe405e69652cae2
.dword 0x7fdd4e5c31a3975f
.dword 0x7fce759ff97b7507
.dword 0x3137cb6875068
.dword 0x7fdd4e5c31a3975f
.dword 0x7fdd4e5c31a3975f
.dword 0x3137cb6875068
.dword 0x5eb561bd4f6b8
.dword 0x7fce759ff97b7507
.dword 0xffc0e3e4312fc728
.dword 0xffc0e3e4312fc728
.dword 0xffc0e3e4312fc728
.dword 0xc002fa24c650ac14
.dword 0xffc0e3e4312fc728
.dword 0x0
.dword 0xffc0e3e4312fc728
.dword 0x8001b4ac2dd761b7
.dword 0x8001b4ac2dd761b7
.dword 0x800423d517f83eb0
.dword 0xffc0e3e4312fc728
.dword 0x800423d517f83eb0
.dword 0xffc0e3e4312fc728
.dword 0x80110eb9ca69d123
.dword 0x80110eb9ca69d123
.dword 0x800d97133b894184
.dword 0xffc0e3e4312fc728
.dword 0x800d97133b894184
.dword 0x80110eb9ca69d123
.dword 0x800879ccf8eb0579
.dword 0xffc0e3e4312fc728
.dword 0x800879ccf8eb0579
.dword 0x8001b4ac2dd761b7
.dword 0x800299ba050fc0c8
.dword 0xffc0e3e4312fc728
.dword 0x800299ba050fc0c8
.dword 0x8001b4ac2dd761b7
.dword 0x80065657f10d48db
.dword 0xffc0e3e4312fc728
.dword 0x80065657f10d48db
.dword 0x80110eb9ca69d123
.dword 0x85ef342c7a5c9
.dword 0xffc0e3e4312fc728
.dword 0x85ef342c7a5c9
.dword 0x80110eb9ca69d123
.dword 0xa399f83b8d7e3
.dword 0xffc0e3e4312fc728
.dword 0xa399f83b8d7e3
.dword 0x80110eb9ca69d123
.dword 0xfee29476f2e06
.dword 0xffc0e3e4312fc728
.dword 0xfee29476f2e06
.dword 0xffc0e3e4312fc728
.dword 0x80002baad1625692
.dword 0x80002baad1625692
.dword 0x35efa3d150a6
.dword 0xffc0e3e4312fc728
.dword 0x35efa3d150a6
.dword 0x8001b4ac2dd761b7
.dword 0x5eb561bd4f6b8
.dword 0xffc0e3e4312fc728
.dword 0x5eb561bd4f6b8
.dword 0xffc0e3e4312fc728
.dword 0xffe0c1b6ea69558e
.dword 0xffe0c1b6ea69558e
.dword 0xffc0e3e4312fc728
.dword 0xffc0e3e4312fc728
.dword 0xfff0000000000000
.dword 0xffb399e37c2fb926
.dword 0xfff0000000000000
.dword 0xfff0000000000000
.dword 0xffb399e37c2fb926
.dword 0xffc0e3e4312fc728
.dword 0xffe8805c5b3ba76f
.dword 0xffb7ec266adcb15f
.dword 0xfff0000000000000
.dword 0xfff0000000000000
.dword 0xffb7ec266adcb15f
.dword 0xffc0e3e4312fc728
.dword 0xffede7300593ddb7
.dword 0xffc0e3e4312fc728
.dword 0xffdd2b592ef4e4e6
.dword 0xffdd2b592ef4e4e6
.dword 0xffc0e3e4312fc728
.dword 0x7fb0409f707c3583
.dword 0xfff0000000000000
.dword 0xfff0000000000000
.dword 0x7fb0409f707c3583
.dword 0xffc0e3e4312fc728
.dword 0x7fe450c74c9b42e4
.dword 0x7fb569d571c24201
.dword 0xfff0000000000000
.dword 0xfff0000000000000
.dword 0x7fb569d571c24201
.dword 0xffc0e3e4312fc728
.dword 0x7feac44ace32d282
.dword 0xffc0e3e4312fc728
.dword 0x7fd09941946801c5
.dword 0x7fd09941946801c5
.dword 0xffc0e3e4312fc728
.dword 0x7fb004b878423be8
.dword 0xfff0000000000000
.dword 0xfff0000000000000
.dword 0x7fb004b878423be8
.dword 0xffc0e3e4312fc728
.dword 0x7fe405e69652cae2
.dword 0xffc0e3e4312fc728
.dword 0x7fce759ff97b7507
.dword 0x7fce759ff97b7507
.dword 0xffc0e3e4312fc728
.dword 0xffe0c1b6ea69558e
.dword 0xffe0c1b6ea69558e
.dword 0xffe0c1b6ea69558e
.dword 0xc022d3be740985a9
.dword 0xffe0c1b6ea69558e
.dword 0x0
.dword 0xffe0c1b6ea69558e
.dword 0x8006c4e25604ed00
.dword 0x8006c4e25604ed00
.dword 0x800423d517f83eb0
.dword 0xffe0c1b6ea69558e
.dword 0x800423d517f83eb0
.dword 0xffe0c1b6ea69558e
.dword 0x8030ec35d70c5080
.dword 0x8030ec35d70c5080
.dword 0x800d97133b894184
.dword 0xffe0c1b6ea69558e
.dword 0x800d97133b894184
.dword 0x8030ec35d70c5080
.dword 0x800879ccf8eb0579
.dword 0xffe0c1b6ea69558e
.dword 0x800879ccf8eb0579
.dword 0x8006c4e25604ed00
.dword 0x800299ba050fc0c8
.dword 0xffe0c1b6ea69558e
.dword 0x800299ba050fc0c8
.dword 0x8006c4e25604ed00
.dword 0x80065657f10d48db
.dword 0xffe0c1b6ea69558e
.dword 0x80065657f10d48db
.dword 0x8030ec35d70c5080
.dword 0x85ef342c7a5c9
.dword 0xffe0c1b6ea69558e
.dword 0x85ef342c7a5c9
.dword 0x8030ec35d70c5080
.dword 0xa399f83b8d7e3
.dword 0xffe0c1b6ea69558e
.dword 0xa399f83b8d7e3
.dword 0x8030ec35d70c5080
.dword 0xfee29476f2e06
.dword 0xffe0c1b6ea69558e
.dword 0xfee29476f2e06
.dword 0xffe0c1b6ea69558e
.dword 0x8000ad49d566e480
.dword 0x8000ad49d566e480
.dword 0x35efa3d150a6
.dword 0xffe0c1b6ea69558e
.dword 0x35efa3d150a6
.dword 0x8006c4e25604ed00
.dword 0x5eb561bd4f6b8
.dword 0xffe0c1b6ea69558e
.dword 0x5eb561bd4f6b8
.dword 0xffe0c1b6ea69558e
.dword 0xfff0000000000000
.dword 0xffe0c1b6ea69558e
.dword 0xffe8805c5b3ba76f
.dword 0xffe0c1b6ea69558e
.dword 0xffede7300593ddb7
.dword 0xffe0c1b6ea69558e
.dword 0xffdd2b592ef4e4e6
.dword 0xffdd2b592ef4e4e6
.dword 0xffe0c1b6ea69558e
.dword 0xffe0c1b6ea69558e
.dword 0x7fe450c74c9b42e4
.dword 0xffe0c1b6ea69558e
.dword 0x7feac44ace32d282
.dword 0xffe0c1b6ea69558e
.dword 0x7fd09941946801c5
.dword 0x7fd09941946801c5
.dword 0xffe0c1b6ea69558e
.dword 0xffe0c1b6ea69558e
.dword 0x7fe405e69652cae2
.dword 0xffe0c1b6ea69558e
.dword 0x7fce759ff97b7507
.dword 0x7fce759ff97b7507
.dword 0xffe0c1b6ea69558e
.dword 0xffe8805c5b3ba76f
.dword 0xffe8805c5b3ba76f
.dword 0xffe8805c5b3ba76f
.dword 0xbff605e3d372e471
.dword 0xffe8805c5b3ba76f
.dword 0x0
.dword 0xffe8805c5b3ba76f
.dword 0x8000fd6141352983
.dword 0x8000fd6141352983
.dword 0x800423d517f83eb0
.dword 0xffe8805c5b3ba76f
.dword 0x800423d517f83eb0
.dword 0xffe8805c5b3ba76f
.dword 0x8009e5cc8c139f1c
.dword 0x8009e5cc8c139f1c
.dword 0x800d97133b894184
.dword 0xffe8805c5b3ba76f
.dword 0x800d97133b894184
.dword 0x8009e5cc8c139f1c
.dword 0x800879ccf8eb0579
.dword 0xffe8805c5b3ba76f
.dword 0x800879ccf8eb0579
.dword 0x8000fd6141352983
.dword 0x800299ba050fc0c8
.dword 0xffe8805c5b3ba76f
.dword 0x800299ba050fc0c8
.dword 0x8000fd6141352983
.dword 0x80065657f10d48db
.dword 0xffe8805c5b3ba76f
.dword 0x80065657f10d48db
.dword 0x8009e5cc8c139f1c
.dword 0x85ef342c7a5c9
.dword 0xffe8805c5b3ba76f
.dword 0x85ef342c7a5c9
.dword 0x8009e5cc8c139f1c
.dword 0xa399f83b8d7e3
.dword 0xffe8805c5b3ba76f
.dword 0xa399f83b8d7e3
.dword 0x8009e5cc8c139f1c
.dword 0xfee29476f2e06
.dword 0xffe8805c5b3ba76f
.dword 0xfee29476f2e06
.dword 0xffe8805c5b3ba76f
.dword 0x80001956868550f3
.dword 0x80001956868550f3
.dword 0x35efa3d150a6
.dword 0xffe8805c5b3ba76f
.dword 0x35efa3d150a6
.dword 0x8000fd6141352983
.dword 0x5eb561bd4f6b8
.dword 0xffe8805c5b3ba76f
.dword 0x5eb561bd4f6b8
.dword 0xffe8805c5b3ba76f
.dword 0xffb399e37c2fb926
.dword 0xffb399e37c2fb926
.dword 0xffc0e3e4312fc728
.dword 0xffe8805c5b3ba76f
.dword 0xffc0e3e4312fc728
.dword 0xffb399e37c2fb926
.dword 0xffe0c1b6ea69558e
.dword 0xffe8805c5b3ba76f
.dword 0xffe0c1b6ea69558e
.dword 0xffe8805c5b3ba76f
.dword 0xffede7300593ddb7
.dword 0xffede7300593ddb7
.dword 0xffe8805c5b3ba76f
.dword 0xffb399e37c2fb926
.dword 0xffdd2b592ef4e4e6
.dword 0xffe8805c5b3ba76f
.dword 0xffdd2b592ef4e4e6
.dword 0xffe8805c5b3ba76f
.dword 0x7fe450c74c9b42e4
.dword 0x7fe450c74c9b42e4
.dword 0xffe8805c5b3ba76f
.dword 0xffe8805c5b3ba76f
.dword 0x7feac44ace32d282
.dword 0x7feac44ace32d282
.dword 0xffe8805c5b3ba76f
.dword 0xffb399e37c2fb926
.dword 0x7fd09941946801c5
.dword 0x7ff0000000000000
.dword 0xffb399e37c2fb926
.dword 0xffb399e37c2fb926
.dword 0x7ff0000000000000
.dword 0xffe8805c5b3ba76f
.dword 0x7fd09941946801c5
.dword 0xffe8805c5b3ba76f
.dword 0x7fe405e69652cae2
.dword 0x7fe405e69652cae2
.dword 0xffe8805c5b3ba76f
.dword 0xffb399e37c2fb926
.dword 0x7fce759ff97b7507
.dword 0xffe8805c5b3ba76f
.dword 0x7fce759ff97b7507
.dword 0xffede7300593ddb7
.dword 0xffede7300593ddb7
.dword 0xffede7300593ddb7
.dword 0xbffae0d6ce341771
.dword 0xffede7300593ddb7
.dword 0x0
.dword 0xffede7300593ddb7
.dword 0x8001353dad8f9fcc
.dword 0x8001353dad8f9fcc
.dword 0x800423d517f83eb0
.dword 0xffede7300593ddb7
.dword 0x800423d517f83eb0
.dword 0xffede7300593ddb7
.dword 0x800c1468c79c3df8
.dword 0x800c1468c79c3df8
.dword 0x800d97133b894184
.dword 0xffede7300593ddb7
.dword 0x800d97133b894184
.dword 0x800c1468c79c3df8
.dword 0x800879ccf8eb0579
.dword 0xffede7300593ddb7
.dword 0x800879ccf8eb0579
.dword 0x8001353dad8f9fcc
.dword 0x800299ba050fc0c8
.dword 0xffede7300593ddb7
.dword 0x800299ba050fc0c8
.dword 0x8001353dad8f9fcc
.dword 0x80065657f10d48db
.dword 0xffede7300593ddb7
.dword 0x80065657f10d48db
.dword 0x800c1468c79c3df8
.dword 0x85ef342c7a5c9
.dword 0xffede7300593ddb7
.dword 0x85ef342c7a5c9
.dword 0x800c1468c79c3df8
.dword 0xa399f83b8d7e3
.dword 0xffede7300593ddb7
.dword 0xa399f83b8d7e3
.dword 0x800c1468c79c3df8
.dword 0xfee29476f2e06
.dword 0xffede7300593ddb7
.dword 0xfee29476f2e06
.dword 0xffede7300593ddb7
.dword 0x80001eec915b2994
.dword 0x80001eec915b2994
.dword 0x35efa3d150a6
.dword 0xffede7300593ddb7
.dword 0x35efa3d150a6
.dword 0x8001353dad8f9fcc
.dword 0x5eb561bd4f6b8
.dword 0xffede7300593ddb7
.dword 0x5eb561bd4f6b8
.dword 0xffede7300593ddb7
.dword 0xffb7ec266adcb15f
.dword 0xffb7ec266adcb15f
.dword 0xffc0e3e4312fc728
.dword 0xffede7300593ddb7
.dword 0xffc0e3e4312fc728
.dword 0xffb7ec266adcb15f
.dword 0xffe0c1b6ea69558e
.dword 0xffede7300593ddb7
.dword 0xffe0c1b6ea69558e
.dword 0xffb7ec266adcb15f
.dword 0xffdd2b592ef4e4e6
.dword 0xffede7300593ddb7
.dword 0xffdd2b592ef4e4e6
.dword 0xffede7300593ddb7
.dword 0x7fe450c74c9b42e4
.dword 0x7fe450c74c9b42e4
.dword 0xffede7300593ddb7
.dword 0xffede7300593ddb7
.dword 0x7feac44ace32d282
.dword 0x7feac44ace32d282
.dword 0xffede7300593ddb7
.dword 0xffb7ec266adcb15f
.dword 0x7fd09941946801c5
.dword 0x7ff0000000000000
.dword 0xffb7ec266adcb15f
.dword 0xffb7ec266adcb15f
.dword 0x7ff0000000000000
.dword 0xffede7300593ddb7
.dword 0x7fd09941946801c5
.dword 0xffede7300593ddb7
.dword 0x7fe405e69652cae2
.dword 0x7fe405e69652cae2
.dword 0xffede7300593ddb7
.dword 0xffb7ec266adcb15f
.dword 0x7fce759ff97b7507
.dword 0xffede7300593ddb7
.dword 0x7fce759ff97b7507
.dword 0xffdd2b592ef4e4e6
.dword 0xffdd2b592ef4e4e6
.dword 0xffdd2b592ef4e4e6
.dword 0xc0206300128a7be9
.dword 0xffdd2b592ef4e4e6
.dword 0x0
.dword 0xffdd2b592ef4e4e6
.dword 0x8005e443bf91c5dd
.dword 0x8005e443bf91c5dd
.dword 0x800423d517f83eb0
.dword 0xffdd2b592ef4e4e6
.dword 0x800423d517f83eb0
.dword 0xffdd2b592ef4e4e6
.dword 0x802d7552bdd8dd50
.dword 0x802d7552bdd8dd50
.dword 0x800d97133b894184
.dword 0xffdd2b592ef4e4e6
.dword 0x800d97133b894184
.dword 0x802d7552bdd8dd50
.dword 0x800879ccf8eb0579
.dword 0xffdd2b592ef4e4e6
.dword 0x800879ccf8eb0579
.dword 0x8005e443bf91c5dd
.dword 0x800299ba050fc0c8
.dword 0xffdd2b592ef4e4e6
.dword 0x800299ba050fc0c8
.dword 0x8005e443bf91c5dd
.dword 0x80065657f10d48db
.dword 0xffdd2b592ef4e4e6
.dword 0x80065657f10d48db
.dword 0x802d7552bdd8dd50
.dword 0x85ef342c7a5c9
.dword 0xffdd2b592ef4e4e6
.dword 0x85ef342c7a5c9
.dword 0x802d7552bdd8dd50
.dword 0xa399f83b8d7e3
.dword 0xffdd2b592ef4e4e6
.dword 0xa399f83b8d7e3
.dword 0x802d7552bdd8dd50
.dword 0xfee29476f2e06
.dword 0xffdd2b592ef4e4e6
.dword 0xfee29476f2e06
.dword 0xffdd2b592ef4e4e6
.dword 0x800096d393282d63
.dword 0x800096d393282d63
.dword 0x35efa3d150a6
.dword 0xffdd2b592ef4e4e6
.dword 0x35efa3d150a6
.dword 0x8005e443bf91c5dd
.dword 0x5eb561bd4f6b8
.dword 0xffdd2b592ef4e4e6
.dword 0x5eb561bd4f6b8
.dword 0xffdd2b592ef4e4e6
.dword 0xfff0000000000000
.dword 0xffdd2b592ef4e4e6
.dword 0xffe8805c5b3ba76f
.dword 0xffdd2b592ef4e4e6
.dword 0xffede7300593ddb7
.dword 0xffdd2b592ef4e4e6
.dword 0x7fe450c74c9b42e4
.dword 0xffdd2b592ef4e4e6
.dword 0x7feac44ace32d282
.dword 0xffdd2b592ef4e4e6
.dword 0x7fd09941946801c5
.dword 0x7fd09941946801c5
.dword 0xffdd2b592ef4e4e6
.dword 0xffdd2b592ef4e4e6
.dword 0x7fe405e69652cae2
.dword 0xffdd2b592ef4e4e6
.dword 0x7fce759ff97b7507
.dword 0x7fce759ff97b7507
.dword 0xffdd2b592ef4e4e6
.dword 0x7fe450c74c9b42e4
.dword 0x7fe450c74c9b42e4
.dword 0x7fe450c74c9b42e4
.dword 0x3ff242b3b0a4387a
.dword 0x7fe450c74c9b42e4
.dword 0x0
.dword 0x7fe450c74c9b42e4
.dword 0xd2178c8e4bc2
.dword 0xd2178c8e4bc2
.dword 0x800423d517f83eb0
.dword 0x7fe450c74c9b42e4
.dword 0x800423d517f83eb0
.dword 0x7fe450c74c9b42e4
.dword 0x834eb7d8ef590
.dword 0x834eb7d8ef590
.dword 0x800d97133b894184
.dword 0x7fe450c74c9b42e4
.dword 0x800d97133b894184
.dword 0x834eb7d8ef590
.dword 0x800879ccf8eb0579
.dword 0x7fe450c74c9b42e4
.dword 0x800879ccf8eb0579
.dword 0xd2178c8e4bc2
.dword 0x800299ba050fc0c8
.dword 0x7fe450c74c9b42e4
.dword 0x800299ba050fc0c8
.dword 0xd2178c8e4bc2
.dword 0x80065657f10d48db
.dword 0x7fe450c74c9b42e4
.dword 0x80065657f10d48db
.dword 0x834eb7d8ef590
.dword 0x85ef342c7a5c9
.dword 0x7fe450c74c9b42e4
.dword 0x85ef342c7a5c9
.dword 0x834eb7d8ef590
.dword 0xa399f83b8d7e3
.dword 0x7fe450c74c9b42e4
.dword 0xa399f83b8d7e3
.dword 0x834eb7d8ef590
.dword 0xfee29476f2e06
.dword 0x7fe450c74c9b42e4
.dword 0xfee29476f2e06
.dword 0x7fe450c74c9b42e4
.dword 0x15025adb0793
.dword 0x15025adb0793
.dword 0x35efa3d150a6
.dword 0x7fe450c74c9b42e4
.dword 0x35efa3d150a6
.dword 0xd2178c8e4bc2
.dword 0x5eb561bd4f6b8
.dword 0x7fe450c74c9b42e4
.dword 0x5eb561bd4f6b8
.dword 0x7fe450c74c9b42e4
.dword 0x7fb0409f707c3583
.dword 0x7fb0409f707c3583
.dword 0xffc0e3e4312fc728
.dword 0x7fe450c74c9b42e4
.dword 0xffc0e3e4312fc728
.dword 0x7fb0409f707c3583
.dword 0xffe0c1b6ea69558e
.dword 0x7fe450c74c9b42e4
.dword 0xffe0c1b6ea69558e
.dword 0x7fb0409f707c3583
.dword 0xffdd2b592ef4e4e6
.dword 0x7fe450c74c9b42e4
.dword 0xffdd2b592ef4e4e6
.dword 0x7fe450c74c9b42e4
.dword 0x7feac44ace32d282
.dword 0x7feac44ace32d282
.dword 0x7fe450c74c9b42e4
.dword 0x7fb0409f707c3583
.dword 0x7fd09941946801c5
.dword 0x7ff0000000000000
.dword 0x7fb0409f707c3583
.dword 0x7fb0409f707c3583
.dword 0x7ff0000000000000
.dword 0x7fe450c74c9b42e4
.dword 0x7fd09941946801c5
.dword 0x7fe450c74c9b42e4
.dword 0x7fe405e69652cae2
.dword 0x7fe405e69652cae2
.dword 0x7fe450c74c9b42e4
.dword 0x7fb0409f707c3583
.dword 0x7fce759ff97b7507
.dword 0x7fe450c74c9b42e4
.dword 0x7fce759ff97b7507
.dword 0x7feac44ace32d282
.dword 0x7feac44ace32d282
.dword 0x7feac44ace32d282
.dword 0x3ff80f28c9e9c76b
.dword 0x7feac44ace32d282
.dword 0x0
.dword 0x7feac44ace32d282
.dword 0x114ce95016c16
.dword 0x114ce95016c16
.dword 0x800423d517f83eb0
.dword 0x7feac44ace32d282
.dword 0x800423d517f83eb0
.dword 0x7feac44ace32d282
.dword 0xad011d20e38de
.dword 0xad011d20e38de
.dword 0x800d97133b894184
.dword 0x7feac44ace32d282
.dword 0x800d97133b894184
.dword 0xad011d20e38de
.dword 0x800879ccf8eb0579
.dword 0x7feac44ace32d282
.dword 0x800879ccf8eb0579
.dword 0x114ce95016c16
.dword 0x800299ba050fc0c8
.dword 0x7feac44ace32d282
.dword 0x800299ba050fc0c8
.dword 0x114ce95016c16
.dword 0x80065657f10d48db
.dword 0x7feac44ace32d282
.dword 0x80065657f10d48db
.dword 0xad011d20e38de
.dword 0x85ef342c7a5c9
.dword 0x7feac44ace32d282
.dword 0x85ef342c7a5c9
.dword 0xad011d20e38de
.dword 0xa399f83b8d7e3
.dword 0x7feac44ace32d282
.dword 0xa399f83b8d7e3
.dword 0xad011d20e38de
.dword 0xfee29476f2e06
.dword 0x7feac44ace32d282
.dword 0xfee29476f2e06
.dword 0x7feac44ace32d282
.dword 0x1bae4219be02
.dword 0x1bae4219be02
.dword 0x35efa3d150a6
.dword 0x7feac44ace32d282
.dword 0x35efa3d150a6
.dword 0x114ce95016c16
.dword 0x5eb561bd4f6b8
.dword 0x7feac44ace32d282
.dword 0x5eb561bd4f6b8
.dword 0x7feac44ace32d282
.dword 0x7fb569d571c24201
.dword 0x7fb569d571c24201
.dword 0xffc0e3e4312fc728
.dword 0x7feac44ace32d282
.dword 0xffc0e3e4312fc728
.dword 0x7fb569d571c24201
.dword 0xffe0c1b6ea69558e
.dword 0x7feac44ace32d282
.dword 0xffe0c1b6ea69558e
.dword 0x7fb569d571c24201
.dword 0xffdd2b592ef4e4e6
.dword 0x7feac44ace32d282
.dword 0xffdd2b592ef4e4e6
.dword 0x7fb569d571c24201
.dword 0x7fd09941946801c5
.dword 0x7ff0000000000000
.dword 0x7fb569d571c24201
.dword 0x7fb569d571c24201
.dword 0x7ff0000000000000
.dword 0x7feac44ace32d282
.dword 0x7fd09941946801c5
.dword 0x7feac44ace32d282
.dword 0x7fe405e69652cae2
.dword 0x7fe405e69652cae2
.dword 0x7feac44ace32d282
.dword 0x7fb569d571c24201
.dword 0x7fce759ff97b7507
.dword 0x7feac44ace32d282
.dword 0x7fce759ff97b7507
.dword 0x7fd09941946801c5
.dword 0x7fd09941946801c5
.dword 0x7fd09941946801c5
.dword 0x4012a6496228606e
.dword 0x7fd09941946801c5
.dword 0x0
.dword 0x7fd09941946801c5
.dword 0x35a452e11324d
.dword 0x35a452e11324d
.dword 0x800423d517f83eb0
.dword 0x7fd09941946801c5
.dword 0x800423d517f83eb0
.dword 0x7fd09941946801c5
.dword 0x20c359e655fb81
.dword 0x20c359e655fb81
.dword 0x800d97133b894184
.dword 0x7fd09941946801c5
.dword 0x800d97133b894184
.dword 0x20c359e655fb81
.dword 0x800879ccf8eb0579
.dword 0x7fd09941946801c5
.dword 0x800879ccf8eb0579
.dword 0x35a452e11324d
.dword 0x800299ba050fc0c8
.dword 0x7fd09941946801c5
.dword 0x800299ba050fc0c8
.dword 0x35a452e11324d
.dword 0x80065657f10d48db
.dword 0x7fd09941946801c5
.dword 0x80065657f10d48db
.dword 0x20c359e655fb81
.dword 0x85ef342c7a5c9
.dword 0x7fd09941946801c5
.dword 0x85ef342c7a5c9
.dword 0x20c359e655fb81
.dword 0xa399f83b8d7e3
.dword 0x7fd09941946801c5
.dword 0xa399f83b8d7e3
.dword 0x20c359e655fb81
.dword 0xfee29476f2e06
.dword 0x7fd09941946801c5
.dword 0xfee29476f2e06
.dword 0x7fd09941946801c5
.dword 0x55d3b7ce8508
.dword 0x55d3b7ce8508
.dword 0x35efa3d150a6
.dword 0x7fd09941946801c5
.dword 0x35efa3d150a6
.dword 0x35a452e11324d
.dword 0x5eb561bd4f6b8
.dword 0x7fd09941946801c5
.dword 0x5eb561bd4f6b8
.dword 0x7fd09941946801c5
.dword 0x7ff0000000000000
.dword 0x7fd09941946801c5
.dword 0xffe8805c5b3ba76f
.dword 0x7fd09941946801c5
.dword 0xffede7300593ddb7
.dword 0x7fd09941946801c5
.dword 0x7fe450c74c9b42e4
.dword 0x7fd09941946801c5
.dword 0x7feac44ace32d282
.dword 0x7fb004b878423be8
.dword 0x7ff0000000000000
.dword 0x7ff0000000000000
.dword 0x7fb004b878423be8
.dword 0x7fd09941946801c5
.dword 0x7fe405e69652cae2
.dword 0x7fd09941946801c5
.dword 0x7fce759ff97b7507
.dword 0x7fce759ff97b7507
.dword 0x7fd09941946801c5
.dword 0x7fe405e69652cae2
.dword 0x7fe405e69652cae2
.dword 0x7fe405e69652cae2
.dword 0x3ff1ff65f57ff366
.dword 0x7fe405e69652cae2
.dword 0x0
.dword 0x7fe405e69652cae2
.dword 0xcf11346ee18e
.dword 0xcf11346ee18e
.dword 0x800423d517f83eb0
.dword 0x7fe405e69652cae2
.dword 0x800423d517f83eb0
.dword 0x7fe405e69652cae2
.dword 0x816ac0c54cf8a
.dword 0x816ac0c54cf8a
.dword 0x800d97133b894184
.dword 0x7fe405e69652cae2
.dword 0x800d97133b894184
.dword 0x816ac0c54cf8a
.dword 0x800879ccf8eb0579
.dword 0x7fe405e69652cae2
.dword 0x800879ccf8eb0579
.dword 0xcf11346ee18e
.dword 0x800299ba050fc0c8
.dword 0x7fe405e69652cae2
.dword 0x800299ba050fc0c8
.dword 0xcf11346ee18e
.dword 0x80065657f10d48db
.dword 0x7fe405e69652cae2
.dword 0x80065657f10d48db
.dword 0x816ac0c54cf8a
.dword 0x85ef342c7a5c9
.dword 0x7fe405e69652cae2
.dword 0x85ef342c7a5c9
.dword 0x816ac0c54cf8a
.dword 0xa399f83b8d7e3
.dword 0x7fe405e69652cae2
.dword 0xa399f83b8d7e3
.dword 0x816ac0c54cf8a
.dword 0xfee29476f2e06
.dword 0x7fe405e69652cae2
.dword 0xfee29476f2e06
.dword 0x7fe405e69652cae2
.dword 0x14b4eba4b028
.dword 0x14b4eba4b028
.dword 0x35efa3d150a6
.dword 0x7fe405e69652cae2
.dword 0x35efa3d150a6
.dword 0xcf11346ee18e
.dword 0x5eb561bd4f6b8
.dword 0x7fe405e69652cae2
.dword 0x5eb561bd4f6b8
.dword 0x7fe405e69652cae2
.dword 0x7fb004b878423be8
.dword 0x7fb004b878423be8
.dword 0xffc0e3e4312fc728
.dword 0x7fe405e69652cae2
.dword 0xffc0e3e4312fc728
.dword 0x7fb004b878423be8
.dword 0xffe0c1b6ea69558e
.dword 0x7fe405e69652cae2
.dword 0xffe0c1b6ea69558e
.dword 0x7fb004b878423be8
.dword 0xffdd2b592ef4e4e6
.dword 0x7fe405e69652cae2
.dword 0xffdd2b592ef4e4e6
.dword 0x7fb004b878423be8
.dword 0x7fd09941946801c5
.dword 0x7fe405e69652cae2
.dword 0x7fd09941946801c5
.dword 0x7fb004b878423be8
.dword 0x7fce759ff97b7507
.dword 0x7fe405e69652cae2
.dword 0x7fce759ff97b7507
.dword 0x7fce759ff97b7507
.dword 0x40111c8af0ae0986
.dword 0x7fce759ff97b7507
.dword 0x0
.dword 0x7fce759ff97b7507
.dword 0x3137cb6875068
.dword 0x3137cb6875068
.dword 0x800423d517f83eb0
.dword 0x7fce759ff97b7507
.dword 0x800423d517f83eb0
.dword 0x7fce759ff97b7507
.dword 0x1ec2df2149240f
.dword 0x1ec2df2149240f
.dword 0x800d97133b894184
.dword 0x7fce759ff97b7507
.dword 0x800d97133b894184
.dword 0x1ec2df2149240f
.dword 0x800879ccf8eb0579
.dword 0x7fce759ff97b7507
.dword 0x800879ccf8eb0579
.dword 0x3137cb6875068
.dword 0x800299ba050fc0c8
.dword 0x7fce759ff97b7507
.dword 0x800299ba050fc0c8
.dword 0x3137cb6875068
.dword 0x80065657f10d48db
.dword 0x7fce759ff97b7507
.dword 0x80065657f10d48db
.dword 0x1ec2df2149240f
.dword 0x85ef342c7a5c9
.dword 0x7fce759ff97b7507
.dword 0x85ef342c7a5c9
.dword 0x1ec2df2149240f
.dword 0xa399f83b8d7e3
.dword 0x7fce759ff97b7507
.dword 0xa399f83b8d7e3
.dword 0x1ec2df2149240f
.dword 0xfee29476f2e06
.dword 0x7fce759ff97b7507
.dword 0xfee29476f2e06
.dword 0x7fce759ff97b7507
.dword 0x4ebfabda54d7
.dword 0x4ebfabda54d7
.dword 0x35efa3d150a6
.dword 0x7fce759ff97b7507
.dword 0x35efa3d150a6
.dword 0x3137cb6875068
.dword 0x5eb561bd4f6b8
.dword 0x7fce759ff97b7507
.dword 0x5eb561bd4f6b8
.dword 0x7fce759ff97b7507
.dword 0x7ff0000000000000
.dword 0x7fce759ff97b7507
.dword 0xffe8805c5b3ba76f
.dword 0x7fce759ff97b7507
.dword 0xffede7300593ddb7
.dword 0x7fce759ff97b7507
.dword 0x7fe450c74c9b42e4
.dword 0x7fce759ff97b7507
.dword 0x7feac44ace32d282
.dword 0x7fce759ff97b7507
.dword 0x7fe405e69652cae2
.dword 0x7fce759ff97b7507
.dword 0x7fce759ff97b7507
.dword 0x0
.dword 0x800299ba050fc0c8
RVTEST_DATA_END

RVMODEL_DATA_BEGIN


signature_x15_0:
    .fill 0*(XLEN/32),4,0xdeadbeef


signature_x15_1:
    .fill 6*(XLEN/32),4,0xdeadbeef


signature_x19_0:
    .fill 2*(XLEN/32),4,0xdeadbeef


signature_x15_2:
    .fill 34*(XLEN/32),4,0xdeadbeef


signature_x19_1:
    .fill 2*(XLEN/32),4,0xdeadbeef


signature_x15_3:
    .fill 8*(XLEN/32),4,0xdeadbeef


signature_x19_2:
    .fill 2*(XLEN/32),4,0xdeadbeef


signature_x15_4:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_5:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_6:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_7:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_8:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_9:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_10:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_11:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_12:
    .fill 112*(XLEN/32),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*(XLEN/32),4,0xdeadbeef

#endif

RVMODEL_DATA_END
