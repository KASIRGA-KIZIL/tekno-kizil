
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.5.6
// timestamp : Mon Sep 20 11:14:00 2021 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/compliance_fd/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /scratch/compliance_fd/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV64D/rv64d_fmsub1.cgf \
 \
//                  -- xlen 64  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2021. IIT Madras. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.d instruction of the RISC-V FD extension for the fmsub_b7 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV64IFD")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*64.*);check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",d_fmsub_b7)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x16,test_fp)
RVTEST_SIGBASE(x15,signature_x15_1)

inst_0:
// rs1 == rd != rs2 and rs1 == rd != rs3 and rs3 != rs2, rs1==f26, rs2==f29, rs3==f11, rd==f26, fs1 == 0 and fe1 == 0x7fd and fm1 == 0x4b9ad0f953a6d and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xdd010c341e476 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x34f069651326f and rm_val == 3  
// opcode: fmsub.d ; op1:f26; op2:f29; op3:f11; dest:f26; op1val:0x7fd4b9ad0f953a6d; op2val:0x3fddd010c341e476; op3val:0x7fc34f069651326f; valaddr_reg:x16; val_offset:0; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f26, f26, f29, f11, 0x3, 0, x16, 0, x17, x15, 0, x18)

inst_1:
// rs1 == rs3 != rs2 and rs1 == rs3 != rd and rd != rs2, rs1==f13, rs2==f26, rs3==f13, rd==f0, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x45c7f25bfedc8 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x190fc2a460989 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x65ac8770e2d21 and rm_val == 3  
// opcode: fmsub.d ; op1:f13; op2:f26; op3:f13; dest:f0; op1val:0x7fe45c7f25bfedc8; op2val:0x3ff190fc2a460989; op3val:0x7fe45c7f25bfedc8; valaddr_reg:x16; val_offset:24; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f0, f13, f26, f13, 0x3, 0, x16, 24, x17, x15, 16, x18)

inst_2:
// rs2 == rs3 != rs1 and rs2 == rs3 != rd and rd != rs1, rs1==f8, rs2==f24, rs3==f24, rd==f9, fs1 == 0 and fe1 == 0x7fc and fm1 == 0x06137ba060843 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xf7b7e63ad7b56 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x01d645c39dcc7 and rm_val == 3  
// opcode: fmsub.d ; op1:f8; op2:f24; op3:f24; dest:f9; op1val:0x7fc06137ba060843; op2val:0x3fff7b7e63ad7b56; op3val:0x3fff7b7e63ad7b56; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f9, f8, f24, f24, 0x3, 0, x16, 48, x17, x15, 32, x18)

inst_3:
// rs1 != rs2 and rs1 != rd and rs1 != rs3 and rs2 != rs3 and rs2 != rd and rs3 != rd, rs1==f30, rs2==f16, rs3==f3, rd==f27, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4a7fbbadc2ea0 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xe1e7e86e9b07a and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x3712b27b3110f and rm_val == 3  
// opcode: fmsub.d ; op1:f30; op2:f16; op3:f3; dest:f27; op1val:0x7fe4a7fbbadc2ea0; op2val:0x3fde1e7e86e9b07a; op3val:0x7fd3712b27b3110f; valaddr_reg:x16; val_offset:72; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f27, f30, f16, f3, 0x3, 0, x16, 72, x17, x15, 48, x18)

inst_4:
// rs2 == rd != rs1 and rs2 == rd != rs3 and rs3 != rs1, rs1==f11, rs2==f12, rs3==f26, rd==f12, fs1 == 0 and fe1 == 0x7fc and fm1 == 0xdc513d91c3097 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xfa488909a06e9 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd6ffc4c267e71 and rm_val == 3  
// opcode: fmsub.d ; op1:f11; op2:f12; op3:f26; dest:f12; op1val:0x7fcdc513d91c3097; op2val:0x400fa488909a06e9; op3val:0x7fed6ffc4c267e71; valaddr_reg:x16; val_offset:96; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f12, f11, f12, f26, 0x3, 0, x16, 96, x17, x15, 64, x18)

inst_5:
// rs1 == rs2 != rs3 and rs1 == rs2 != rd and rd != rs3, rs1==f0, rs2==f0, rs3==f20, rd==f28, fs1 == 0 and fe1 == 0x7fa and fm1 == 0x43f684016618f and fs2 == 0 and fe2 == 0x403 and fm2 == 0x3c8281523ad71 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x908971c80aada and rm_val == 3  
// opcode: fmsub.d ; op1:f0; op2:f0; op3:f20; dest:f28; op1val:0x7fa43f684016618f; op2val:0x7fa43f684016618f; op3val:0x7fe908971c80aada; valaddr_reg:x16; val_offset:120; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f28, f0, f0, f20, 0x3, 0, x16, 120, x17, x15, 80, x18)

inst_6:
// rs1 == rd == rs3 != rs2, rs1==f22, rs2==f8, rs3==f22, rd==f22, fs1 == 0 and fe1 == 0x7fd and fm1 == 0xd44d040ae163f and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x34b7acba40d23 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x1a5e53f1b819b and rm_val == 3  
// opcode: fmsub.d ; op1:f22; op2:f8; op3:f22; dest:f22; op1val:0x7fdd44d040ae163f; op2val:0x3ff34b7acba40d23; op3val:0x7fdd44d040ae163f; valaddr_reg:x16; val_offset:144; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f22, f22, f8, f22, 0x3, 0, x16, 144, x17, x15, 96, x18)

inst_7:
// rd == rs2 == rs3 != rs1, rs1==f18, rs2==f7, rs3==f7, rd==f7, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4b7136762d31f and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x2e729b7d2c834 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8793eff945d39 and rm_val == 3  
// opcode: fmsub.d ; op1:f18; op2:f7; op3:f7; dest:f7; op1val:0x7fe4b7136762d31f; op2val:0x3ff2e729b7d2c834; op3val:0x3ff2e729b7d2c834; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f7, f18, f7, f7, 0x3, 0, x16, 168, x17, x15, 112, x18)

inst_8:
// rs1 == rs2 == rs3 == rd, rs1==f6, rs2==f6, rs3==f6, rd==f6, fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe20b0cf4d346f and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x887e36352d615 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x718749acdd3e9 and rm_val == 3  
// opcode: fmsub.d ; op1:f6; op2:f6; op3:f6; dest:f6; op1val:0x7fee20b0cf4d346f; op2val:0x7fee20b0cf4d346f; op3val:0x7fee20b0cf4d346f; valaddr_reg:x16; val_offset:192; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f6, f6, f6, f6, 0x3, 0, x16, 192, x17, x15, 128, x18)

inst_9:
// rs1 == rs2 == rs3 != rd, rs1==f21, rs2==f21, rs3==f21, rd==f20, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0b73813e3367a and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x4e4526c9cf173 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5d38f146f80f6 and rm_val == 3  
// opcode: fmsub.d ; op1:f21; op2:f21; op3:f21; dest:f20; op1val:0x7fe0b73813e3367a; op2val:0x7fe0b73813e3367a; op3val:0x7fe0b73813e3367a; valaddr_reg:x16; val_offset:216; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f20, f21, f21, f21, 0x3, 0, x16, 216, x17, x15, 144, x18)

inst_10:
// rs1 == rs2 == rd != rs3, rs1==f5, rs2==f5, rs3==f29, rd==f5, fs1 == 0 and fe1 == 0x7fb and fm1 == 0xbea7047295f77 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x6a6c7efc0ad33 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x3c2abc26edf17 and rm_val == 3  
// opcode: fmsub.d ; op1:f5; op2:f5; op3:f29; dest:f5; op1val:0x7fbbea7047295f77; op2val:0x7fbbea7047295f77; op3val:0x7fc3c2abc26edf17; valaddr_reg:x16; val_offset:240; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f5, f5, f5, f29, 0x3, 0, x16, 240, x17, x15, 160, x18)

inst_11:
// rs3 == rd != rs1 and rs3 == rd != rs2 and rs2 != rs1, rs1==f12, rs2==f22, rs3==f2, rd==f2, fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf1c9969cbb9a7 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x05b157dd288f1 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xfcdb5dc879b63 and rm_val == 3  
// opcode: fmsub.d ; op1:f12; op2:f22; op3:f2; dest:f2; op1val:0x7fef1c9969cbb9a7; op2val:0x3fd05b157dd288f1; op3val:0x7fcfcdb5dc879b63; valaddr_reg:x16; val_offset:264; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f2, f12, f22, f2, 0x3, 0, x16, 264, x17, x15, 176, x18)

inst_12:
// rs1==f29, rs2==f9, rs3==f4, rd==f15, fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa6b3a0e1c87b2 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x094361d976ea2 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xb5ff341df6314 and rm_val == 3  
// opcode: fmsub.d ; op1:f29; op2:f9; op3:f4; dest:f15; op1val:0x7fea6b3a0e1c87b2; op2val:0x3ff094361d976ea2; op3val:0x7feb5ff341df6314; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f15, f29, f9, f4, 0x3, 0, x16, 288, x17, x15, 192, x18)

inst_13:
// rs1==f28, rs2==f20, rs3==f1, rd==f4, fs1 == 0 and fe1 == 0x7fd and fm1 == 0x90eae7f7120e1 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x2f01f600da378 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xda891abb66fc1 and rm_val == 3  
// opcode: fmsub.d ; op1:f28; op2:f20; op3:f1; dest:f4; op1val:0x7fd90eae7f7120e1; op2val:0x4002f01f600da378; op3val:0x7feda891abb66fc1; valaddr_reg:x16; val_offset:312; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f4, f28, f20, f1, 0x3, 0, x16, 312, x17, x15, 208, x18)

inst_14:
// rs1==f16, rs2==f30, rs3==f15, rd==f8, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2ca2659f59483 and fs2 == 0 and fe2 == 0x3f3 and fm2 == 0x3f197caabd246 and fs3 == 0 and fe3 == 0x7f2 and fm3 == 0x76bc4ae4a7fff and rm_val == 3  
// opcode: fmsub.d ; op1:f16; op2:f30; op3:f15; dest:f8; op1val:0x7fe2ca2659f59483; op2val:0x3f33f197caabd246; op3val:0x7f276bc4ae4a7fff; valaddr_reg:x16; val_offset:336; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f8, f16, f30, f15, 0x3, 0, x16, 336, x17, x15, 224, x18)

inst_15:
// rs1==f15, rs2==f25, rs3==f19, rd==f21, fs1 == 0 and fe1 == 0x7fe and fm1 == 0xca98bbf378d1d and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x0e87d86e10872 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xe4a0707bf0a3d and rm_val == 3  
// opcode: fmsub.d ; op1:f15; op2:f25; op3:f19; dest:f21; op1val:0x7feca98bbf378d1d; op2val:0x3fe0e87d86e10872; op3val:0x7fde4a0707bf0a3d; valaddr_reg:x16; val_offset:360; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f21, f15, f25, f19, 0x3, 0, x16, 360, x17, x15, 240, x18)

inst_16:
// rs1==f9, rs2==f4, rs3==f23, rd==f18, fs1 == 0 and fe1 == 0x7fa and fm1 == 0x082381b36797f and fs2 == 0 and fe2 == 0x403 and fm2 == 0x6013ae6c00679 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x6b4520f0e04f2 and rm_val == 3  
// opcode: fmsub.d ; op1:f9; op2:f4; op3:f23; dest:f18; op1val:0x7fa082381b36797f; op2val:0x4036013ae6c00679; op3val:0x7fe6b4520f0e04f2; valaddr_reg:x16; val_offset:384; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f18, f9, f4, f23, 0x3, 0, x16, 384, x17, x15, 256, x18)

inst_17:
// rs1==f17, rs2==f27, rs3==f12, rd==f10, fs1 == 0 and fe1 == 0x7fe and fm1 == 0xbeeb913df45f9 and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x9961122d0989c and fs3 == 0 and fe3 == 0x7f9 and fm3 == 0x6557e9049a15f and rm_val == 3  
// opcode: fmsub.d ; op1:f17; op2:f27; op3:f12; dest:f10; op1val:0x7febeeb913df45f9; op2val:0x3f99961122d0989c; op3val:0x7f96557e9049a15f; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f10, f17, f27, f12, 0x3, 0, x16, 408, x17, x15, 272, x18)

inst_18:
// rs1==f4, rs2==f1, rs3==f18, rd==f19, fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe86b4ad3f811f and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xc78145e474c93 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xb286aab41e211 and rm_val == 3  
// opcode: fmsub.d ; op1:f4; op2:f1; op3:f18; dest:f19; op1val:0x7fee86b4ad3f811f; op2val:0x3fec78145e474c93; op3val:0x7feb286aab41e211; valaddr_reg:x16; val_offset:432; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f19, f4, f1, f18, 0x3, 0, x16, 432, x17, x15, 288, x18)

inst_19:
// rs1==f20, rs2==f15, rs3==f5, rd==f24, fs1 == 0 and fe1 == 0x7fd and fm1 == 0x9959ef52a94d7 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x1d85d189e3f0d and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xc88f1a37466c9 and rm_val == 3  
// opcode: fmsub.d ; op1:f20; op2:f15; op3:f5; dest:f24; op1val:0x7fd9959ef52a94d7; op2val:0x3ff1d85d189e3f0d; op3val:0x7fdc88f1a37466c9; valaddr_reg:x16; val_offset:456; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f24, f20, f15, f5, 0x3, 0, x16, 456, x17, x15, 304, x18)

inst_20:
// rs1==f1, rs2==f11, rs3==f14, rd==f3, fs1 == 0 and fe1 == 0x7fd and fm1 == 0x15867f72ca04d and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xd55df652a8155 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xfcd544627292b and rm_val == 3  
// opcode: fmsub.d ; op1:f1; op2:f11; op3:f14; dest:f3; op1val:0x7fd15867f72ca04d; op2val:0x3fed55df652a8155; op3val:0x7fcfcd544627292b; valaddr_reg:x16; val_offset:480; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f3, f1, f11, f14, 0x3, 0, x16, 480, x17, x15, 320, x18)

inst_21:
// rs1==f24, rs2==f28, rs3==f25, rd==f31, fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb9c8f6764ffdb and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x004b48dee6c8d and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xba4ae217b4833 and rm_val == 3  
// opcode: fmsub.d ; op1:f24; op2:f28; op3:f25; dest:f31; op1val:0x7feb9c8f6764ffdb; op2val:0x3fd004b48dee6c8d; op3val:0x7fcba4ae217b4833; valaddr_reg:x16; val_offset:504; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f31, f24, f28, f25, 0x3, 0, x16, 504, x17, x15, 336, x18)

inst_22:
// rs1==f10, rs2==f14, rs3==f27, rd==f29, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x01bd1661ded56 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x4031c2b470846 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x425e753294784 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f14; op3:f27; dest:f29; op1val:0x7fe01bd1661ded56; op2val:0x3ff4031c2b470846; op3val:0x7fe425e753294784; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f29, f10, f14, f27, 0x3, 0, x16, 528, x17, x15, 352, x18)

inst_23:
// rs1==f23, rs2==f18, rs3==f30, rd==f11, fs1 == 0 and fe1 == 0x7fe and fm1 == 0xef7471570c9e8 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x0a65ebf53446a and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x01ca1fafcf0e3 and rm_val == 3  
// opcode: fmsub.d ; op1:f23; op2:f18; op3:f30; dest:f11; op1val:0x7feef7471570c9e8; op2val:0x3fc0a65ebf53446a; op3val:0x7fc01ca1fafcf0e3; valaddr_reg:x16; val_offset:552; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f11, f23, f18, f30, 0x3, 0, x16, 552, x17, x15, 368, x18)

inst_24:
// rs1==f25, rs2==f3, rs3==f31, rd==f16, fs1 == 0 and fe1 == 0x7fa and fm1 == 0xfc643dfe19f4f and fs2 == 0 and fe2 == 0x401 and fm2 == 0x1e3199a5d96aa and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x1c2d3ec982081 and rm_val == 3  
// opcode: fmsub.d ; op1:f25; op2:f3; op3:f31; dest:f16; op1val:0x7fafc643dfe19f4f; op2val:0x4011e3199a5d96aa; op3val:0x7fd1c2d3ec982081; valaddr_reg:x16; val_offset:576; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f16, f25, f3, f31, 0x3, 0, x16, 576, x17, x15, 384, x18)

inst_25:
// rs1==f3, rs2==f23, rs3==f8, rd==f17, fs1 == 0 and fe1 == 0x7fd and fm1 == 0x81e91ca297381 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xcb794e6dc29f6 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x5a51e9e0452c5 and rm_val == 3  
// opcode: fmsub.d ; op1:f3; op2:f23; op3:f8; dest:f17; op1val:0x7fd81e91ca297381; op2val:0x3fecb794e6dc29f6; op3val:0x7fd5a51e9e0452c5; valaddr_reg:x16; val_offset:600; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f17, f3, f23, f8, 0x3, 0, x16, 600, x17, x15, 400, x18)

inst_26:
// rs1==f27, rs2==f2, rs3==f17, rd==f1, fs1 == 0 and fe1 == 0x7fd and fm1 == 0xa7d1185f77b3d and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x4436e7bd34d14 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0c5fc44d70b87 and rm_val == 3  
// opcode: fmsub.d ; op1:f27; op2:f2; op3:f17; dest:f1; op1val:0x7fda7d1185f77b3d; op2val:0x3ff4436e7bd34d14; op3val:0x7fe0c5fc44d70b87; valaddr_reg:x16; val_offset:624; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f1, f27, f2, f17, 0x3, 0, x16, 624, x17, x15, 416, x18)

inst_27:
// rs1==f31, rs2==f19, rs3==f10, rd==f25, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7fd31f37b82a0 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x19ebc58134c63 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xa6b03c3100d4d and rm_val == 3  
// opcode: fmsub.d ; op1:f31; op2:f19; op3:f10; dest:f25; op1val:0x7fe7fd31f37b82a0; op2val:0x3fe19ebc58134c63; op3val:0x7fda6b03c3100d4d; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f25, f31, f19, f10, 0x3, 0, x16, 648, x17, x15, 432, x18)

inst_28:
// rs1==f2, rs2==f31, rs3==f28, rd==f23, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x23a4efccefe44 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x8ec0956e7209d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc645d2c14904c and rm_val == 3  
// opcode: fmsub.d ; op1:f2; op2:f31; op3:f28; dest:f23; op1val:0x7fe23a4efccefe44; op2val:0x3ff8ec0956e7209d; op3val:0x7fec645d2c14904c; valaddr_reg:x16; val_offset:672; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f23, f2, f31, f28, 0x3, 0, x16, 672, x17, x15, 448, x18)

inst_29:
// rs1==f19, rs2==f13, rs3==f9, rd==f14, fs1 == 0 and fe1 == 0x7fc and fm1 == 0xe9bb325e4941f and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x149685b9fa191 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x088ee2e7990e9 and rm_val == 3  
// opcode: fmsub.d ; op1:f19; op2:f13; op3:f9; dest:f14; op1val:0x7fce9bb325e4941f; op2val:0x3ff149685b9fa191; op3val:0x7fd088ee2e7990e9; valaddr_reg:x16; val_offset:696; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f14, f19, f13, f9, 0x3, 0, x16, 696, x17, x15, 464, x18)

inst_30:
// rs1==f7, rs2==f10, rs3==f16, rd==f13, fs1 == 0 and fe1 == 0x7fd and fm1 == 0x5e29834726e1b and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x10c937f937819 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x751f56a379ae7 and rm_val == 3  
// opcode: fmsub.d ; op1:f7; op2:f10; op3:f16; dest:f13; op1val:0x7fd5e29834726e1b; op2val:0x3fd10c937f937819; op3val:0x7fb751f56a379ae7; valaddr_reg:x16; val_offset:720; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f7, f10, f16, 0x3, 0, x16, 720, x17, x15, 480, x18)

inst_31:
// rs1==f14, rs2==f17, rs3==f0, rd==f30, fs1 == 0 and fe1 == 0x7fc and fm1 == 0x8a0cbb3e7c653 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xe2c97cd66ceb8 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x73910e5971a27 and rm_val == 3  
// opcode: fmsub.d ; op1:f14; op2:f17; op3:f0; dest:f30; op1val:0x7fc8a0cbb3e7c653; op2val:0x3fde2c97cd66ceb8; op3val:0x7fb73910e5971a27; valaddr_reg:x16; val_offset:744; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f30, f14, f17, f0, 0x3, 0, x16, 744, x17, x15, 496, x18)

inst_32:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xccc26e36b5cc1 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x3dafc013c1302 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x1de48a8c3ba83 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdccc26e36b5cc1; op2val:0x3fd3dafc013c1302; op3val:0x7fc1de48a8c3ba83; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 512, x18)

inst_33:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd0013b154d27f and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x197bef7179510 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xfe31fc7097844 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fed0013b154d27f; op2val:0x3ff197bef7179510; op3val:0x7fefe31fc7097844; valaddr_reg:x16; val_offset:792; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 792, x17, x15, 528, x18)

inst_34:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xfd016f467310d and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xc5433925a1d2e and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xc29c9973f6e4f and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdfd016f467310d; op2val:0x3fdc5433925a1d2e; op3val:0x7fcc29c9973f6e4f; valaddr_reg:x16; val_offset:816; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 816, x17, x15, 544, x18)

inst_35:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xa9b9118027a27 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x16ed8737eb4bc and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xcfd9fa33f4f74 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fca9b9118027a27; op2val:0x40116ed8737eb4bc; op3val:0x7fecfd9fa33f4f74; valaddr_reg:x16; val_offset:840; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 840, x17, x15, 560, x18)

inst_36:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x56b267a4a915b and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xeea25c12b5249 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x4b12ce133e613 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc56b267a4a915b; op2val:0x3feeea25c12b5249; op3val:0x7fc4b12ce133e613; valaddr_reg:x16; val_offset:864; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 864, x17, x15, 576, x18)

inst_37:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1d59452acedd2 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x6a4c2dfad0480 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x93d5258f53b8f and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe1d59452acedd2; op2val:0x3fe6a4c2dfad0480; op3val:0x7fd93d5258f53b8f; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 592, x18)

inst_38:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4fde9e8f46499 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xd599f93300a4c and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x340e6dbdd8e87 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe4fde9e8f46499; op2val:0x3fdd599f93300a4c; op3val:0x7fd340e6dbdd8e87; valaddr_reg:x16; val_offset:912; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 912, x17, x15, 608, x18)

inst_39:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf3dd17a9c7c45 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x10e1a66abf85e and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x0a69c1b3feaa3 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef3dd17a9c7c45; op2val:0x3fd10e1a66abf85e; op3val:0x7fd0a69c1b3feaa3; valaddr_reg:x16; val_offset:936; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 936, x17, x15, 624, x18)

inst_40:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x30eb1ba0bc2dd and fs2 == 0 and fe2 == 0x400 and fm2 == 0x3dae133efb51d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x7a6277ef479a3 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd30eb1ba0bc2dd; op2val:0x4003dae133efb51d; op3val:0x7fe7a6277ef479a3; valaddr_reg:x16; val_offset:960; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 960, x17, x15, 640, x18)

inst_41:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe38439b51a599 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x74a43880b19cb and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x5fe927a41040f and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fde38439b51a599; op2val:0x3fe74a43880b19cb; op3val:0x7fd5fe927a41040f; valaddr_reg:x16; val_offset:984; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 984, x17, x15, 656, x18)

inst_42:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xda82856334f8f and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x19556b23fb28f and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x04bbcc2bb71c3 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feda82856334f8f; op2val:0x3fc19556b23fb28f; op3val:0x7fc04bbcc2bb71c3; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 672, x18)

inst_43:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x2513cb3e2752f and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x5e75e11fe8993 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x913803a5ca7bf and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd2513cb3e2752f; op2val:0x3fc5e75e11fe8993; op3val:0x7fa913803a5ca7bf; valaddr_reg:x16; val_offset:1032; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1032, x17, x15, 688, x18)

inst_44:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x815db388de5f4 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb669a948d2fc8 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x49faafb7a58a8 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe815db388de5f4; op2val:0x3feb669a948d2fc8; op3val:0x7fe49faafb7a58a8; valaddr_reg:x16; val_offset:1056; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1056, x17, x15, 704, x18)

inst_45:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x76f6e71a4bf4c and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x3b34431b2a732 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xcdae5aceb580f and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe76f6e71a4bf4c; op2val:0x3fe3b34431b2a732; op3val:0x7fdcdae5aceb580f; valaddr_reg:x16; val_offset:1080; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1080, x17, x15, 720, x18)

inst_46:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x706bd145282bf and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x19a17f4fcf871 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x954ec3bbde56f and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe706bd145282bf; op2val:0x3fb19a17f4fcf871; op3val:0x7fa954ec3bbde56f; valaddr_reg:x16; val_offset:1104; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1104, x17, x15, 736, x18)

inst_47:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe1a356a3773df and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x2aee81e6a084d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x19346e8d05179 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fee1a356a3773df; op2val:0x3fe2aee81e6a084d; op3val:0x7fe19346e8d05179; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 752, x18)

inst_48:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4304c6599a484 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x72a45d80f9b30 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd3ac4bb80be68 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe4304c6599a484; op2val:0x3ff72a45d80f9b30; op3val:0x7fed3ac4bb80be68; valaddr_reg:x16; val_offset:1152; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1152, x17, x15, 768, x18)

inst_49:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc4be9601db523 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xd6229120ea38a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x9fb984b0bef61 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec4be9601db523; op2val:0x3fed6229120ea38a; op3val:0x7fe9fb984b0bef61; valaddr_reg:x16; val_offset:1176; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1176, x17, x15, 784, x18)

inst_50:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7e4f46647f8df and fs2 == 0 and fe2 == 0x400 and fm2 == 0x47d067cf860fe and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe98e7e5b60378 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd7e4f46647f8df; op2val:0x40047d067cf860fe; op3val:0x7fee98e7e5b60378; valaddr_reg:x16; val_offset:1200; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1200, x17, x15, 800, x18)

inst_51:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x059cf0d432d00 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x7c77fccc0aee3 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x84cf93c5ef5cb and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe059cf0d432d00; op2val:0x3fd7c77fccc0aee3; op3val:0x7fc84cf93c5ef5cb; valaddr_reg:x16; val_offset:1224; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1224, x17, x15, 816, x18)

inst_52:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xfe9df4f895fc3 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x10d7ac367e0e5 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x101b0137d6bc7 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcfe9df4f895fc3; op2val:0x3ff10d7ac367e0e5; op3val:0x7fd101b0137d6bc7; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 832, x18)

inst_53:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x247a67d1467bb and fs2 == 0 and fe2 == 0x400 and fm2 == 0xa34727c10e472 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xdf05a34987d02 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd247a67d1467bb; op2val:0x400a34727c10e472; op3val:0x7fedf05a34987d02; valaddr_reg:x16; val_offset:1272; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1272, x17, x15, 848, x18)

inst_54:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xa09a841a6d9bf and fs2 == 0 and fe2 == 0x402 and fm2 == 0x069b2b1d1d7b6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xab5aa6ea5dd9a and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fba09a841a6d9bf; op2val:0x402069b2b1d1d7b6; op3val:0x7feab5aa6ea5dd9a; valaddr_reg:x16; val_offset:1296; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1296, x17, x15, 864, x18)

inst_55:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x19c24c6d583c7 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x67434a96b4133 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x8b69891f5f7cf and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd19c24c6d583c7; op2val:0x3fc67434a96b4133; op3val:0x7fa8b69891f5f7cf; valaddr_reg:x16; val_offset:1320; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1320, x17, x15, 880, x18)

inst_56:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x715dc8f67403b and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x2fcb638fbe403 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xb65375e0b9593 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd715dc8f67403b; op2val:0x3ff2fcb638fbe403; op3val:0x7fdb65375e0b9593; valaddr_reg:x16; val_offset:1344; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1344, x17, x15, 896, x18)

inst_57:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xff61bb37ad9ea and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x2e05ec6bcd531 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x2da89004e3bfa and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feff61bb37ad9ea; op2val:0x3fe2e05ec6bcd531; op3val:0x7fe2da89004e3bfa; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 912, x18)

inst_58:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7d27c388512d7 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0e389aa8e6cdc and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x92543731f0cc1 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd7d27c388512d7; op2val:0x3ff0e389aa8e6cdc; op3val:0x7fd92543731f0cc1; valaddr_reg:x16; val_offset:1392; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1392, x17, x15, 928, x18)

inst_59:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcd9a21ef5aa64 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x4931479e98e13 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x28c9f8a06941f and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fecd9a21ef5aa64; op2val:0x3fd4931479e98e13; op3val:0x7fd28c9f8a06941f; valaddr_reg:x16; val_offset:1416; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1416, x17, x15, 944, x18)

inst_60:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xda50f38c8705c and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x8a127dbe4a28e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x6d116cc0c00bf and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feda50f38c8705c; op2val:0x3fe8a127dbe4a28e; op3val:0x7fe6d116cc0c00bf; valaddr_reg:x16; val_offset:1440; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1440, x17, x15, 960, x18)

inst_61:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xad9fee197d159 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x24fb7d6ccf2d4 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xebb079e138157 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fead9fee197d159; op2val:0x3fc24fb7d6ccf2d4; op3val:0x7fbebb079e138157; valaddr_reg:x16; val_offset:1464; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1464, x17, x15, 976, x18)

inst_62:
// fs1 == 0 and fe1 == 0x7f5 and fm1 == 0xc87e298ac65ff and fs2 == 0 and fe2 == 0x407 and fm2 == 0xaf1d2bfcc9208 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x80603655a6422 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f5c87e298ac65ff; op2val:0x407af1d2bfcc9208; op3val:0x7fe80603655a6422; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 992, x18)

inst_63:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x43a9f68f79f51 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x544340f745d01 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xae32c315346b0 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd43a9f68f79f51; op2val:0x400544340f745d01; op3val:0x7feae32c315346b0; valaddr_reg:x16; val_offset:1512; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1512, x17, x15, 1008, x18)

inst_64:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x202b1b6a8ad9b and fs2 == 0 and fe2 == 0x400 and fm2 == 0x38e5b08809be3 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x603716b0243ef and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc202b1b6a8ad9b; op2val:0x40038e5b08809be3; op3val:0x7fd603716b0243ef; valaddr_reg:x16; val_offset:1536; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1536, x17, x15, 1024, x18)

inst_65:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xcd941bb3e4c7b and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x56f945237a31e and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x3532a75d14531 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdcd941bb3e4c7b; op2val:0x3fe56f945237a31e; op3val:0x7fd3532a75d14531; valaddr_reg:x16; val_offset:1560; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1560, x17, x15, 1040, x18)

inst_66:
// fs1 == 0 and fe1 == 0x7f6 and fm1 == 0xd69c3ccc232ff and fs2 == 0 and fe2 == 0x406 and fm2 == 0x11e3b1516326d and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xf77f2f573e477 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f6d69c3ccc232ff; op2val:0x40611e3b1516326d; op3val:0x7fdf77f2f573e477; valaddr_reg:x16; val_offset:1584; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1584, x17, x15, 1056, x18)

inst_67:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xf1cedb32713af and fs2 == 0 and fe2 == 0x3fa and fm2 == 0xa27c9c8f72760 and fs3 == 0 and fe3 == 0x7f9 and fm3 == 0x96e30945c401f and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdf1cedb32713af; op2val:0x3faa27c9c8f72760; op3val:0x7f996e30945c401f; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 1072, x18)

inst_68:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xd9dfa57f75957 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xf09af67a7bf04 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xcba014b812c36 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcd9dfa57f75957; op2val:0x400f09af67a7bf04; op3val:0x7fecba014b812c36; valaddr_reg:x16; val_offset:1632; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1632, x17, x15, 1088, x18)

inst_69:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc612cc07361be and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x960c4699b0a59 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x681bcad75f3fa and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec612cc07361be; op2val:0x3fe960c4699b0a59; op3val:0x7fe681bcad75f3fa; valaddr_reg:x16; val_offset:1656; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1656, x17, x15, 1104, x18)

inst_70:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa3f37be86d406 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x3d922ae1c5554 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x047a23d1e470a and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fea3f37be86d406; op2val:0x3fe3d922ae1c5554; op3val:0x7fe047a23d1e470a; valaddr_reg:x16; val_offset:1680; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1680, x17, x15, 1120, x18)

inst_71:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe7cd94d702ecf and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x1d0bdfeb27173 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x0f933f9a762d3 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fee7cd94d702ecf; op2val:0x3fc1d0bdfeb27173; op3val:0x7fc0f933f9a762d3; valaddr_reg:x16; val_offset:1704; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1704, x17, x15, 1136, x18)

inst_72:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x2248efbf5b40f and fs2 == 0 and fe2 == 0x400 and fm2 == 0xd942f4283c10f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0c525750c17a5 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc2248efbf5b40f; op2val:0x400d942f4283c10f; op3val:0x7fe0c525750c17a5; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 1152, x18)

inst_73:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xaf88181319d3f and fs2 == 0 and fe2 == 0x400 and fm2 == 0x613aa15e6dbf3 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x29b6bf05c7869 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcaf88181319d3f; op2val:0x400613aa15e6dbf3; op3val:0x7fe29b6bf05c7869; valaddr_reg:x16; val_offset:1752; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1752, x17, x15, 1168, x18)

inst_74:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xadbf22eaa3553 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x20670c63d396f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe42403fb8de70 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcadbf22eaa3553; op2val:0x40120670c63d396f; op3val:0x7fee42403fb8de70; valaddr_reg:x16; val_offset:1776; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1776, x17, x15, 1184, x18)

inst_75:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xcc3cdfff3a4f1 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x320baeabd9ff9 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x131ae231843f1 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdcc3cdfff3a4f1; op2val:0x3fe320baeabd9ff9; op3val:0x7fd131ae231843f1; valaddr_reg:x16; val_offset:1800; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1800, x17, x15, 1200, x18)

inst_76:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa3c9a1606c6ff and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x2e46c14fbf2f4 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xefabe27fa7ad1 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fea3c9a1606c6ff; op2val:0x3ff2e46c14fbf2f4; op3val:0x7feefabe27fa7ad1; valaddr_reg:x16; val_offset:1824; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1824, x17, x15, 1216, x18)

inst_77:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0x1ecb025113f7f and fs2 == 0 and fe2 == 0x403 and fm2 == 0xa3860dd245747 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xd5fc7289c9947 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f91ecb025113f7f; op2val:0x403a3860dd245747; op3val:0x7fdd5fc7289c9947; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 1232, x18)

inst_78:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf4cce5857ea2c and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xea15191aacbae and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xdf5cba9e44bbc and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef4cce5857ea2c; op2val:0x3feea15191aacbae; op3val:0x7fedf5cba9e44bbc; valaddr_reg:x16; val_offset:1872; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1872, x17, x15, 1248, x18)

inst_79:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc98e2fe32411b and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xc89ea2030c8a4 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x9810664fc9e8f and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec98e2fe32411b; op2val:0x3fcc89ea2030c8a4; op3val:0x7fc9810664fc9e8f; valaddr_reg:x16; val_offset:1896; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1896, x17, x15, 1264, x18)

inst_80:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xdd8802e2329e5 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x043635ce6ecfb and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xe56341fc91de7 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fddd8802e2329e5; op2val:0x3fd043635ce6ecfb; op3val:0x7fbe56341fc91de7; valaddr_reg:x16; val_offset:1920; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1920, x17, x15, 1280, x18)

inst_81:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x08775dd246585 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xcc9528d2934bd and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xdbd0943ba2885 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe08775dd246585; op2val:0x3fecc9528d2934bd; op3val:0x7fddbd0943ba2885; valaddr_reg:x16; val_offset:1944; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1944, x17, x15, 1296, x18)

inst_82:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x59f65a9f55d73 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xb8c7278d10c73 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x29d647dabc483 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe59f65a9f55d73; op2val:0x3fdb8c7278d10c73; op3val:0x7fd29d647dabc483; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 1312, x18)

inst_83:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x581097465e852 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x07b060581b5cb and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x6266184deeb07 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe581097465e852; op2val:0x3ff07b060581b5cb; op3val:0x7fe6266184deeb07; valaddr_reg:x16; val_offset:1992; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1992, x17, x15, 1328, x18)

inst_84:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0xf0ef5df1750af and fs2 == 0 and fe2 == 0x401 and fm2 == 0x1b9121c3beffe and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x13392afc7b2cb and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7faf0ef5df1750af; op2val:0x4011b9121c3beffe; op3val:0x7fd13392afc7b2cb; valaddr_reg:x16; val_offset:2016; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 2016, x17, x15, 1344, x18)
addi x16,x16,2040

inst_85:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x22b1a9488a4c1 and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0x67d388683bd28 and fs3 == 0 and fe3 == 0x7f8 and fm3 == 0x989757b7fec3f and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe22b1a9488a4c1; op2val:0x3f967d388683bd28; op3val:0x7f8989757b7fec3f; valaddr_reg:x16; val_offset:0; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 0, x17, x15, 1360, x18)

inst_86:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7c86f8ec5841e and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xa36c8ac35feb7 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x37b9204f81de1 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe7c86f8ec5841e; op2val:0x3fda36c8ac35feb7; op3val:0x7fd37b9204f81de1; valaddr_reg:x16; val_offset:24; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 24, x17, x15, 1376, x18)

inst_87:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x2ded3254ef123 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xb8f6061d94b51 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x0408ebd3657a3 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc2ded3254ef123; op2val:0x3ffb8f6061d94b51; op3val:0x7fd0408ebd3657a3; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 1392, x18)

inst_88:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x49183a8cb0c90 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0xedb035aa45d10 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x3d5317330c917 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe49183a8cb0c90; op2val:0x3fbedb035aa45d10; op3val:0x7fb3d5317330c917; valaddr_reg:x16; val_offset:72; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 72, x17, x15, 1408, x18)

inst_89:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x88b04e42fde91 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x9bde4ad39edb9 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x3be404a87fad7 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe88b04e42fde91; op2val:0x3fe9bde4ad39edb9; op3val:0x7fe3be404a87fad7; valaddr_reg:x16; val_offset:96; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 96, x17, x15, 1424, x18)

inst_90:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xea81a3f48a2bd and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x6d6443f906711 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5e0d79d2636fd and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdea81a3f48a2bd; op2val:0x3ff6d6443f906711; op3val:0x7fe5e0d79d2636fd; valaddr_reg:x16; val_offset:120; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 120, x17, x15, 1440, x18)

inst_91:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xf9cdb56c3a5e1 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x8c8a81d881e03 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x87bdef09d29c9 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdf9cdb56c3a5e1; op2val:0x3fe8c8a81d881e03; op3val:0x7fd87bdef09d29c9; valaddr_reg:x16; val_offset:144; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 144, x17, x15, 1456, x18)

inst_92:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7acad029987d7 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x51a13afe014c9 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xf3938cdd76361 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe7acad029987d7; op2val:0x3ff51a13afe014c9; op3val:0x7fef3938cdd76361; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 1472, x18)

inst_93:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x756b66f069892 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x202115a643acf and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xa449163b1185b and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe756b66f069892; op2val:0x3fd202115a643acf; op3val:0x7fca449163b1185b; valaddr_reg:x16; val_offset:192; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 192, x17, x15, 1488, x18)

inst_94:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x30f27bb1386cf and fs2 == 0 and fe2 == 0x400 and fm2 == 0xc89149824f6db and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x0fee7e9e0d747 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb30f27bb1386cf; op2val:0x400c89149824f6db; op3val:0x7fd0fee7e9e0d747; valaddr_reg:x16; val_offset:216; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 216, x17, x15, 1504, x18)

inst_95:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x793c51de53b23 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x5e80a6126c9ba and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x023f0567947b1 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe793c51de53b23; op2val:0x3fd5e80a6126c9ba; op3val:0x7fd023f0567947b1; valaddr_reg:x16; val_offset:240; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 240, x17, x15, 1520, x18)

inst_96:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x518fb3e1a9d28 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x9a5919bbce5f4 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x0e8ad17dd00bf and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe518fb3e1a9d28; op2val:0x3fb9a5919bbce5f4; op3val:0x7fb0e8ad17dd00bf; valaddr_reg:x16; val_offset:264; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 264, x17, x15, 1536, x18)

inst_97:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x01856bf9767f9 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x106755dbc7ecc and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x1205b5c5e2605 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe01856bf9767f9; op2val:0x3ff106755dbc7ecc; op3val:0x7fe1205b5c5e2605; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 1552, x18)

inst_98:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x986bd0447cb50 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xe045a79c60316 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x7f1ca37bae27e and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe986bd0447cb50; op2val:0x3fee045a79c60316; op3val:0x7fe7f1ca37bae27e; valaddr_reg:x16; val_offset:312; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 312, x17, x15, 1568, x18)

inst_99:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xf50991a1c3f71 and fs2 == 0 and fe2 == 0x3f7 and fm2 == 0xbbeba14cf9d4a and fs3 == 0 and fe3 == 0x7f6 and fm3 == 0xb26a5d3ea4fff and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdf50991a1c3f71; op2val:0x3f7bbeba14cf9d4a; op3val:0x7f6b26a5d3ea4fff; valaddr_reg:x16; val_offset:336; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 336, x17, x15, 1584, x18)

inst_100:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x40a0c122032cf and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x16410765a08c0 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5c8003cfa6dd9 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe40a0c122032cf; op2val:0x3ff16410765a08c0; op3val:0x7fe5c8003cfa6dd9; valaddr_reg:x16; val_offset:360; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 360, x17, x15, 1600, x18)

inst_101:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1df748833ffc0 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x1fbc689ddf505 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x416ab0c134af7 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe1df748833ffc0; op2val:0x3ff1fbc689ddf505; op3val:0x7fe416ab0c134af7; valaddr_reg:x16; val_offset:384; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 384, x17, x15, 1616, x18)

inst_102:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xadbce4c0d41b7 and fs2 == 0 and fe2 == 0x401 and fm2 == 0xfddbc80b63304 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xabf0c19ce382c and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbadbce4c0d41b7; op2val:0x401fddbc80b63304; op3val:0x7feabf0c19ce382c; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 1632, x18)

inst_103:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x10932aa31a49b and fs2 == 0 and fe2 == 0x400 and fm2 == 0x5ae769b6b5d4b and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x715d4cfad16c1 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc10932aa31a49b; op2val:0x4005ae769b6b5d4b; op3val:0x7fd715d4cfad16c1; valaddr_reg:x16; val_offset:432; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 432, x17, x15, 1648, x18)

inst_104:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xd6eb2915c891b and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x1589235a4123d and fs3 == 0 and fe3 == 0x7f9 and fm3 == 0xfe88b855bbcbf and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcd6eb2915c891b; op2val:0x3fc1589235a4123d; op3val:0x7f9fe88b855bbcbf; valaddr_reg:x16; val_offset:456; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 456, x17, x15, 1664, x18)

inst_105:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5da4763d30607 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x03e904a63e388 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x62fba4a9251b3 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe5da4763d30607; op2val:0x3ff03e904a63e388; op3val:0x7fe62fba4a9251b3; valaddr_reg:x16; val_offset:480; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 480, x17, x15, 1680, x18)

inst_106:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2b0a1c7311e4e and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x875610f99c362 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc920faad8412d and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe2b0a1c7311e4e; op2val:0x3ff875610f99c362; op3val:0x7fec920faad8412d; valaddr_reg:x16; val_offset:504; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 504, x17, x15, 1696, x18)

inst_107:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9bfeb40107735 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x06e9e5acdeb98 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa71f18abef271 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9bfeb40107735; op2val:0x3ff06e9e5acdeb98; op3val:0x7fea71f18abef271; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 1712, x18)

inst_108:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x023cec2461f7c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xa7c885c017c23 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xab7cf0b406a44 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe023cec2461f7c; op2val:0x3ffa7c885c017c23; op3val:0x7feab7cf0b406a44; valaddr_reg:x16; val_offset:552; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 552, x17, x15, 1728, x18)

inst_109:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x1d4d4ee8ee657 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xe13e6dd1aee1f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0c29ea302ef9a and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc1d4d4ee8ee657; op2val:0x400e13e6dd1aee1f; op3val:0x7fe0c29ea302ef9a; valaddr_reg:x16; val_offset:576; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 576, x17, x15, 1744, x18)

inst_110:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x77bb772cde0e8 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x1b5679b9667ec and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x9fdb28605ac8b and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe77bb772cde0e8; op2val:0x3ff1b5679b9667ec; op3val:0x7fe9fdb28605ac8b; valaddr_reg:x16; val_offset:600; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 600, x17, x15, 1760, x18)

inst_111:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc8acab20d4af1 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x681b357406e10 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x4131ad1b78beb and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec8acab20d4af1; op2val:0x3fe681b357406e10; op3val:0x7fe4131ad1b78beb; valaddr_reg:x16; val_offset:624; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 624, x17, x15, 1776, x18)

inst_112:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x66b63b4ca758f and fs2 == 0 and fe2 == 0x403 and fm2 == 0x31363596b9a6e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xabab122dc2bd6 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fa66b63b4ca758f; op2val:0x40331363596b9a6e; op3val:0x7feabab122dc2bd6; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 1792, x18)

inst_113:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x72c48ba798e5e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xc6c68c15f5c70 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x49540f49439eb and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe72c48ba798e5e; op2val:0x3fec6c68c15f5c70; op3val:0x7fe49540f49439eb; valaddr_reg:x16; val_offset:672; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 672, x17, x15, 1808, x18)

inst_114:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf82e691fa0d23 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x36d8f2c34be03 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x3219bc48bfcbb and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef82e691fa0d23; op2val:0x3fc36d8f2c34be03; op3val:0x7fc3219bc48bfcbb; valaddr_reg:x16; val_offset:696; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 696, x17, x15, 1824, x18)

inst_115:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x8edd67e1d4f43 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xacb0198fb28cb and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x4df644dc3f26f and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd8edd67e1d4f43; op2val:0x3feacb0198fb28cb; op3val:0x7fd4df644dc3f26f; valaddr_reg:x16; val_offset:720; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 720, x17, x15, 1840, x18)

inst_116:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6e96b1322dbaa and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x3a508bfdccb1a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc2182ce62e070 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe6e96b1322dbaa; op2val:0x3ff3a508bfdccb1a; op3val:0x7fec2182ce62e070; valaddr_reg:x16; val_offset:744; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 744, x17, x15, 1856, x18)

inst_117:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x8046dc89efa69 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xc08f4f8e73967 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x50a9907923a77 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe8046dc89efa69; op2val:0x3fec08f4f8e73967; op3val:0x7fe50a9907923a77; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 1872, x18)

inst_118:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2bd1927d49ed6 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xceb14dd622f0f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0ef1eeb69b9b5 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe2bd1927d49ed6; op2val:0x3feceb14dd622f0f; op3val:0x7fe0ef1eeb69b9b5; valaddr_reg:x16; val_offset:792; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 792, x17, x15, 1888, x18)

inst_119:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x378be2d09905b and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x87c8ff0970ad9 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xdccb4315a0a87 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd378be2d09905b; op2val:0x3fe87c8ff0970ad9; op3val:0x7fcdccb4315a0a87; valaddr_reg:x16; val_offset:816; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 816, x17, x15, 1904, x18)

inst_120:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x5555f1936f22f and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x1467f94672e9e and fs3 == 0 and fe3 == 0x7f9 and fm3 == 0x708b4a65acd3f and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fa5555f1936f22f; op2val:0x3fe1467f94672e9e; op3val:0x7f9708b4a65acd3f; valaddr_reg:x16; val_offset:840; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 840, x17, x15, 1920, x18)

inst_121:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x6fa14249a8b0f and fs2 == 0 and fe2 == 0x401 and fm2 == 0x1ce09d7b99965 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x991974cb1c493 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb6fa14249a8b0f; op2val:0x4011ce09d7b99965; op3val:0x7fd991974cb1c493; valaddr_reg:x16; val_offset:864; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 864, x17, x15, 1936, x18)

inst_122:
// fs1 == 0 and fe1 == 0x7f7 and fm1 == 0x447022e841cff and fs2 == 0 and fe2 == 0x404 and fm2 == 0xaae4b950ea7ce and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x0e823c6894e81 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f7447022e841cff; op2val:0x404aae4b950ea7ce; op3val:0x7fd0e823c6894e81; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 1952, x18)

inst_123:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x9b9b6e3f88af3 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x4174a18832cd7 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x026cb5b1ade26 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc9b9b6e3f88af3; op2val:0x4004174a18832cd7; op3val:0x7fe026cb5b1ade26; valaddr_reg:x16; val_offset:912; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 912, x17, x15, 1968, x18)

inst_124:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe608faa3b3f0d and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0f2ab24ea4e21 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x016a48a9fc325 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fde608faa3b3f0d; op2val:0x3ff0f2ab24ea4e21; op3val:0x7fe016a48a9fc325; valaddr_reg:x16; val_offset:936; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 936, x17, x15, 1984, x18)

inst_125:
// fs1 == 0 and fe1 == 0x7f5 and fm1 == 0x1835aaec2f3ff and fs2 == 0 and fe2 == 0x407 and fm2 == 0x6505bdb287230 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x86c9200abcecf and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f51835aaec2f3ff; op2val:0x4076505bdb287230; op3val:0x7fd86c9200abcecf; valaddr_reg:x16; val_offset:960; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 960, x17, x15, 2000, x18)

inst_126:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x3cfa211be3073 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x26e63c71e4bb3 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x6d2455976b29f and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd3cfa211be3073; op2val:0x3ff26e63c71e4bb3; op3val:0x7fd6d2455976b29f; valaddr_reg:x16; val_offset:984; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 984, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_2)

inst_127:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xf4a05d08d17ff and fs2 == 0 and fe2 == 0x400 and fm2 == 0xf9a76c4edad95 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xee6bdff8790dd and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcf4a05d08d17ff; op2val:0x400f9a76c4edad95; op3val:0x7feee6bdff8790dd; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 0, x18)

inst_128:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf1fba43f08c95 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x1ffc5a61fb28d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x181a0054b4c77 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef1fba43f08c95; op2val:0x3fe1ffc5a61fb28d; op3val:0x7fe181a0054b4c77; valaddr_reg:x16; val_offset:1032; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1032, x17, x15, 16, x18)

inst_129:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x0d8f972e9c2ef and fs2 == 0 and fe2 == 0x400 and fm2 == 0xd3a95f351ef8f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xec6f48d50d204 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd0d8f972e9c2ef; op2val:0x400d3a95f351ef8f; op3val:0x7feec6f48d50d204; valaddr_reg:x16; val_offset:1056; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1056, x17, x15, 32, x18)

inst_130:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x42a0a144df96b and fs2 == 0 and fe2 == 0x400 and fm2 == 0x6a3ec4d3e2eea and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xc8863f0076b57 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc42a0a144df96b; op2val:0x4006a3ec4d3e2eea; op3val:0x7fdc8863f0076b57; valaddr_reg:x16; val_offset:1080; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1080, x17, x15, 48, x18)

inst_131:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x2c178685ca577 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x915a69047262e and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xd67ad517b99d7 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd2c178685ca577; op2val:0x3ff915a69047262e; op3val:0x7fdd67ad517b99d7; valaddr_reg:x16; val_offset:1104; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1104, x17, x15, 64, x18)

inst_132:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x20b31e4ca4c55 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb7ddd6aeb162b and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xf00d55b153d67 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd20b31e4ca4c55; op2val:0x3feb7ddd6aeb162b; op3val:0x7fcf00d55b153d67; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 80, x18)

inst_133:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xbdb72220615e4 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x8a5ff217edb25 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5751737e23b77 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7febdb72220615e4; op2val:0x3fe8a5ff217edb25; op3val:0x7fe5751737e23b77; valaddr_reg:x16; val_offset:1152; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1152, x17, x15, 96, x18)

inst_134:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x5a0ccf5498b87 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x3ea4e4a974684 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xaebaced8605de and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb5a0ccf5498b87; op2val:0x4023ea4e4a974684; op3val:0x7feaebaced8605de; valaddr_reg:x16; val_offset:1176; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1176, x17, x15, 112, x18)

inst_135:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x05ba66b72282d and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x47030685b1521 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x4e54310e2ec3f and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd05ba66b72282d; op2val:0x3fe47030685b1521; op3val:0x7fc4e54310e2ec3f; valaddr_reg:x16; val_offset:1200; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1200, x17, x15, 128, x18)

inst_136:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x21ae3f403ac27 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x4f3b0adcd2e0d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x7b55d4384f883 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb21ae3f403ac27; op2val:0x4024f3b0adcd2e0d; op3val:0x7fe7b55d4384f883; valaddr_reg:x16; val_offset:1224; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1224, x17, x15, 144, x18)

inst_137:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0xbd8d07591377f and fs2 == 0 and fe2 == 0x400 and fm2 == 0x318515d6311d4 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x09de5303a6393 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fabd8d07591377f; op2val:0x400318515d6311d4; op3val:0x7fc09de5303a6393; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 160, x18)

inst_138:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x9e69137ea5e7f and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb7b3eacaee577 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x63e4b7fdae4e9 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd9e69137ea5e7f; op2val:0x3feb7b3eacaee577; op3val:0x7fd63e4b7fdae4e9; valaddr_reg:x16; val_offset:1272; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1272, x17, x15, 176, x18)

inst_139:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x69d7e96ea561f and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xccbeb890c5f19 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x459ec548f1271 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe69d7e96ea561f; op2val:0x3feccbeb890c5f19; op3val:0x7fe459ec548f1271; valaddr_reg:x16; val_offset:1296; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1296, x17, x15, 192, x18)

inst_140:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x5eedf6196c86d and fs2 == 0 and fe2 == 0x400 and fm2 == 0x36dbccb9a7fa5 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xaa21763871829 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd5eedf6196c86d; op2val:0x40036dbccb9a7fa5; op3val:0x7feaa21763871829; valaddr_reg:x16; val_offset:1320; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1320, x17, x15, 208, x18)

inst_141:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x601faf4dc586f and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x6db250f0a73a8 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xf702724eb1369 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe601faf4dc586f; op2val:0x3ff6db250f0a73a8; op3val:0x7fef702724eb1369; valaddr_reg:x16; val_offset:1344; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1344, x17, x15, 224, x18)

inst_142:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x928527fc33323 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x49fb921840ebb and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x036c5753b2b79 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd928527fc33323; op2val:0x3ff49fb921840ebb; op3val:0x7fe036c5753b2b79; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 240, x18)

inst_143:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xfae1b145e0417 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xafa3294e54a15 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xab528478e0e2d and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdfae1b145e0417; op2val:0x3ffafa3294e54a15; op3val:0x7feab528478e0e2d; valaddr_reg:x16; val_offset:1392; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1392, x17, x15, 256, x18)

inst_144:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa34980299b561 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x0e340b6f18efb and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xba8cc2d408803 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fea34980299b561; op2val:0x3fe0e340b6f18efb; op3val:0x7fdba8cc2d408803; valaddr_reg:x16; val_offset:1416; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1416, x17, x15, 272, x18)

inst_145:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xde89819c9c8ed and fs2 == 0 and fe2 == 0x3fb and fm2 == 0xd1c51041f81fa and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xb35411510f5bf and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fede89819c9c8ed; op2val:0x3fbd1c51041f81fa; op3val:0x7fbb35411510f5bf; valaddr_reg:x16; val_offset:1440; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1440, x17, x15, 288, x18)

inst_146:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x8401c483a4e5f and fs2 == 0 and fe2 == 0x400 and fm2 == 0x40c19bce4afc0 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xe627a71f726d1 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc8401c483a4e5f; op2val:0x40040c19bce4afc0; op3val:0x7fde627a71f726d1; valaddr_reg:x16; val_offset:1464; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1464, x17, x15, 304, x18)

inst_147:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x77564fe05ca27 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x80dd7fff0060e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x1a231c7e9865c and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe77564fe05ca27; op2val:0x3fe80dd7fff0060e; op3val:0x7fe1a231c7e9865c; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 320, x18)

inst_148:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x0075a384bac19 and fs2 == 0 and fe2 == 0x3fa and fm2 == 0xf5f5e6496f287 and fs3 == 0 and fe3 == 0x7f8 and fm3 == 0xf6dc904b8153f and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd0075a384bac19; op2val:0x3faf5f5e6496f287; op3val:0x7f8f6dc904b8153f; valaddr_reg:x16; val_offset:1512; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1512, x17, x15, 336, x18)

inst_149:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x63543c66def39 and fs2 == 0 and fe2 == 0x3fa and fm2 == 0xaccb6ce241fe2 and fs3 == 0 and fe3 == 0x7f9 and fm3 == 0x299597f4bbe1f and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd63543c66def39; op2val:0x3faaccb6ce241fe2; op3val:0x7f9299597f4bbe1f; valaddr_reg:x16; val_offset:1536; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1536, x17, x15, 352, x18)

inst_150:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000b9ceb049f9 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x6c463ff747485 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x6c56c64540f3f and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe000b9ceb049f9; op2val:0x3fd6c463ff747485; op3val:0x7fc6c56c64540f3f; valaddr_reg:x16; val_offset:1560; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1560, x17, x15, 368, x18)

inst_151:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x84dcf48d2cffc and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x86f131f3eab76 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x28eb7e390c445 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe84dcf48d2cffc; op2val:0x3fd86f131f3eab76; op3val:0x7fd28eb7e390c445; valaddr_reg:x16; val_offset:1584; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1584, x17, x15, 384, x18)

inst_152:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x3f7aefd0784b5 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xf488ab585c398 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x385355c3fa9ed and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd3f7aefd0784b5; op2val:0x3fef488ab585c398; op3val:0x7fd385355c3fa9ed; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 400, x18)

inst_153:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x9cb5ecb97e53f and fs2 == 0 and fe2 == 0x401 and fm2 == 0x005119d510e39 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x9d38abeea7bb3 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fa9cb5ecb97e53f; op2val:0x401005119d510e39; op3val:0x7fc9d38abeea7bb3; valaddr_reg:x16; val_offset:1632; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1632, x17, x15, 416, x18)

inst_154:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xc0502df03ca97 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x799e7f8f6d9cb and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x4aa5d2430b91b and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbc0502df03ca97; op2val:0x3ff799e7f8f6d9cb; op3val:0x7fc4aa5d2430b91b; valaddr_reg:x16; val_offset:1656; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1656, x17, x15, 432, x18)

inst_155:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0dc7ce6d690ca and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xcf5fb3c558905 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xe85138f02904f and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0dc7ce6d690ca; op2val:0x3fdcf5fb3c558905; op3val:0x7fce85138f02904f; valaddr_reg:x16; val_offset:1680; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1680, x17, x15, 448, x18)

inst_156:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x1249d34f93fa7 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xee03537e23353 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x08a7030b0f86f and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd1249d34f93fa7; op2val:0x3fdee03537e23353; op3val:0x7fc08a7030b0f86f; valaddr_reg:x16; val_offset:1704; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1704, x17, x15, 464, x18)

inst_157:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1b2b385abc95c and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xaceecb7c0e89e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xda74657a9659d and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe1b2b385abc95c; op2val:0x3ffaceecb7c0e89e; op3val:0x7feda74657a9659d; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 480, x18)

inst_158:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xd0aa01817a599 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x7eaba18734fc7 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x5b4a9a7f456a3 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdd0aa01817a599; op2val:0x3fe7eaba18734fc7; op3val:0x7fd5b4a9a7f456a3; valaddr_reg:x16; val_offset:1752; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1752, x17, x15, 496, x18)

inst_159:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x10e2ca87661e7 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x9e6804195486b and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xb9bda407c9909 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb10e2ca87661e7; op2val:0x4029e6804195486b; op3val:0x7feb9bda407c9909; valaddr_reg:x16; val_offset:1776; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1776, x17, x15, 512, x18)

inst_160:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x5702673763077 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x472f6a2ead396 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xb663998e3beea and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb5702673763077; op2val:0x402472f6a2ead396; op3val:0x7feb663998e3beea; valaddr_reg:x16; val_offset:1800; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1800, x17, x15, 528, x18)

inst_161:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x44d54145ab105 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x437635ea7ce87 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x9a6f1010ace1c and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe44d54145ab105; op2val:0x3ff437635ea7ce87; op3val:0x7fe9a6f1010ace1c; valaddr_reg:x16; val_offset:1824; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1824, x17, x15, 544, x18)

inst_162:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x289bae89b0547 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x9ea8d3864183b and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe06f5f8113c54 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb289bae89b0547; op2val:0x4029ea8d3864183b; op3val:0x7fee06f5f8113c54; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 560, x18)

inst_163:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x605c7b0bbbe88 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x3c6ba367054d3 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xb3864f7298b49 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe605c7b0bbbe88; op2val:0x3fe3c6ba367054d3; op3val:0x7fdb3864f7298b49; valaddr_reg:x16; val_offset:1872; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1872, x17, x15, 576, x18)

inst_164:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x6e6fec8ee140f and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x493aaf3b6ab0b and fs3 == 0 and fe3 == 0x7fa and fm3 == 0xd741d732c713f and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb6e6fec8ee140f; op2val:0x3fe493aaf3b6ab0b; op3val:0x7fad741d732c713f; valaddr_reg:x16; val_offset:1896; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1896, x17, x15, 592, x18)

inst_165:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2425049fa7b93 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x3a3ed6a3e60e5 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x669d1d94ee5cc and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe2425049fa7b93; op2val:0x3ff3a3ed6a3e60e5; op3val:0x7fe669d1d94ee5cc; valaddr_reg:x16; val_offset:1920; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1920, x17, x15, 608, x18)

inst_166:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x31e7d2895e8b3 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x89d6e02e36b0a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd69da5e0f232b and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc31e7d2895e8b3; op2val:0x40189d6e02e36b0a; op3val:0x7fed69da5e0f232b; valaddr_reg:x16; val_offset:1944; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1944, x17, x15, 624, x18)

inst_167:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa351367c8b4a1 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x435937d1093f0 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x08d0cd33f6191 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fea351367c8b4a1; op2val:0x3fd435937d1093f0; op3val:0x7fd08d0cd33f6191; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 640, x18)

inst_168:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xb063666cbf4b1 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x1448089b2ebd6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd2a4d4eb4326d and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdb063666cbf4b1; op2val:0x4001448089b2ebd6; op3val:0x7fed2a4d4eb4326d; valaddr_reg:x16; val_offset:1992; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1992, x17, x15, 656, x18)

inst_169:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x14efd260bd491 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xea8a7d6d20de8 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x09546cd1dcec3 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd14efd260bd491; op2val:0x3fdea8a7d6d20de8; op3val:0x7fc09546cd1dcec3; valaddr_reg:x16; val_offset:2016; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 2016, x17, x15, 672, x18)
addi x16,x16,2040

inst_170:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x444e739fa3e6f and fs2 == 0 and fe2 == 0x403 and fm2 == 0x3ad7200a2e80d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8ed8c04b9e89a and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fa444e739fa3e6f; op2val:0x4033ad7200a2e80d; op3val:0x7fe8ed8c04b9e89a; valaddr_reg:x16; val_offset:0; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 0, x17, x15, 688, x18)

inst_171:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xad2d5e2b0a13f and fs2 == 0 and fe2 == 0x400 and fm2 == 0x446a9e40825ba and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x0ff014a2ce4a1 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbad2d5e2b0a13f; op2val:0x400446a9e40825ba; op3val:0x7fd0ff014a2ce4a1; valaddr_reg:x16; val_offset:24; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 24, x17, x15, 704, x18)

inst_172:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x93a4528ea0a04 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x3b8851df15037 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xf18221f816cf7 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe93a4528ea0a04; op2val:0x3ff3b8851df15037; op3val:0x7fef18221f816cf7; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 720, x18)

inst_173:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x0755c839c777f and fs2 == 0 and fe2 == 0x402 and fm2 == 0xea50563547915 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xf85cd4bac97e1 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb0755c839c777f; op2val:0x402ea50563547915; op3val:0x7fef85cd4bac97e1; valaddr_reg:x16; val_offset:72; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 72, x17, x15, 736, x18)

inst_174:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3f735e92e8b84 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xa45ded224b04e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x06473dfd7d552 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3f735e92e8b84; op2val:0x3fea45ded224b04e; op3val:0x7fe06473dfd7d552; valaddr_reg:x16; val_offset:96; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 96, x17, x15, 752, x18)

inst_175:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0x28415313233bf and fs2 == 0 and fe2 == 0x403 and fm2 == 0x25542e0203a76 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x53742ec23b45b and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f928415313233bf; op2val:0x40325542e0203a76; op3val:0x7fd53742ec23b45b; valaddr_reg:x16; val_offset:120; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 120, x17, x15, 768, x18)

inst_176:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1bac795d5adc9 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x97077011e014f and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xc30772da00dd3 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe1bac795d5adc9; op2val:0x3fe97077011e014f; op3val:0x7fdc30772da00dd3; valaddr_reg:x16; val_offset:144; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 144, x17, x15, 784, x18)

inst_177:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x71bdc1176bc40 and fs2 == 0 and fe2 == 0x3f9 and fm2 == 0xba063f67a6ca8 and fs3 == 0 and fe3 == 0x7f9 and fm3 == 0x3f3552b42eaff and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe71bdc1176bc40; op2val:0x3f9ba063f67a6ca8; op3val:0x7f93f3552b42eaff; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 800, x18)

inst_178:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x90e2945b4b1b3 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xa09379e91019b and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x462b910bcd037 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc90e2945b4b1b3; op2val:0x3ffa09379e91019b; op3val:0x7fd462b910bcd037; valaddr_reg:x16; val_offset:192; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 192, x17, x15, 816, x18)

inst_179:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x07fd62d9d804c and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x50bebd7e9d921 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x5b414335ec631 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe07fd62d9d804c; op2val:0x3fe50bebd7e9d921; op3val:0x7fd5b414335ec631; valaddr_reg:x16; val_offset:216; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 216, x17, x15, 832, x18)

inst_180:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x4aaeb7b4d19eb and fs2 == 0 and fe2 == 0x400 and fm2 == 0x56153ee560dc4 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xb9e0daff3dc55 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc4aaeb7b4d19eb; op2val:0x40056153ee560dc4; op3val:0x7fdb9e0daff3dc55; valaddr_reg:x16; val_offset:240; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 240, x17, x15, 848, x18)

inst_181:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfad06e6abdc66 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xae929f80c30f1 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xaa36300e514cc and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fefad06e6abdc66; op2val:0x3feae929f80c30f1; op3val:0x7feaa36300e514cc; valaddr_reg:x16; val_offset:264; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 264, x17, x15, 864, x18)

inst_182:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x97d0a671457af and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x3936397ae5d5c and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xf2f47d14d678b and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd97d0a671457af; op2val:0x3ff3936397ae5d5c; op3val:0x7fdf2f47d14d678b; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 880, x18)

inst_183:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xc1b743bf268e7 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x159cba2b1fd8a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe7ae9f060626a and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcc1b743bf268e7; op2val:0x401159cba2b1fd8a; op3val:0x7fee7ae9f060626a; valaddr_reg:x16; val_offset:312; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 312, x17, x15, 896, x18)

inst_184:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc402aa48c8c77 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x18907c865e8fb and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xef62079def623 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec402aa48c8c77; op2val:0x3ff18907c865e8fb; op3val:0x7feef62079def623; valaddr_reg:x16; val_offset:336; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 336, x17, x15, 912, x18)

inst_185:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x520d24576f8bf and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xbb7eec62a971b and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x24d22c40cbacb and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe520d24576f8bf; op2val:0x3fcbb7eec62a971b; op3val:0x7fc24d22c40cbacb; valaddr_reg:x16; val_offset:360; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 360, x17, x15, 928, x18)

inst_186:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x3c4e82f083607 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x28bf65ecaacb4 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x6ea743e92e6a6 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc3c4e82f083607; op2val:0x40128bf65ecaacb4; op3val:0x7fe6ea743e92e6a6; valaddr_reg:x16; val_offset:384; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 384, x17, x15, 944, x18)

inst_187:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x91600fc7d4948 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x24ee350686e3f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xcb470c71b9436 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe91600fc7d4948; op2val:0x3ff24ee350686e3f; op3val:0x7fecb470c71b9436; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 960, x18)

inst_188:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x2b80ae6ce5acf and fs2 == 0 and fe2 == 0x402 and fm2 == 0x24fb884b09188 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x56c50d9360bf9 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb2b80ae6ce5acf; op2val:0x40224fb884b09188; op3val:0x7fe56c50d9360bf9; valaddr_reg:x16; val_offset:432; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 432, x17, x15, 976, x18)

inst_189:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x29261957a1af7 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xa894f7a055317 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xecd4036da79a7 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb29261957a1af7; op2val:0x400a894f7a055317; op3val:0x7fcecd4036da79a7; valaddr_reg:x16; val_offset:456; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 456, x17, x15, 992, x18)

inst_190:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xf229dcc8e3fb7 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xd14daf1382c6d and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xc4ba9aa872069 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbf229dcc8e3fb7; op2val:0x400d14daf1382c6d; op3val:0x7fdc4ba9aa872069; valaddr_reg:x16; val_offset:480; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 480, x17, x15, 1008, x18)

inst_191:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xae14739ca44d5 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x4e58ce86f883f and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x18d9f06aa8b9b and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feae14739ca44d5; op2val:0x3fc4e58ce86f883f; op3val:0x7fc18d9f06aa8b9b; valaddr_reg:x16; val_offset:504; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 504, x17, x15, 1024, x18)

inst_192:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1e7897f922e58 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xaf951defdb85e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe2f3e58cf735c and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe1e7897f922e58; op2val:0x3ffaf951defdb85e; op3val:0x7fee2f3e58cf735c; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 1040, x18)

inst_193:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe2657e7b613a3 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x1a22aa692456f and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x09d28ff61dcaf and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fee2657e7b613a3; op2val:0x3fd1a22aa692456f; op3val:0x7fd09d28ff61dcaf; valaddr_reg:x16; val_offset:552; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 552, x17, x15, 1056, x18)

inst_194:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x65ffe2e17c444 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x40eb8cac5594e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc0c9423810004 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe65ffe2e17c444; op2val:0x3ff40eb8cac5594e; op3val:0x7fec0c9423810004; valaddr_reg:x16; val_offset:576; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 576, x17, x15, 1072, x18)

inst_195:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe9825a40fe033 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xf83254b5a727e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe20c6f8fd997a and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fde9825a40fe033; op2val:0x3fff83254b5a727e; op3val:0x7fee20c6f8fd997a; valaddr_reg:x16; val_offset:600; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 600, x17, x15, 1088, x18)

inst_196:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xcf33bc410b42b and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x2dce8fa7b9c8d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x110ac9f3abd23 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdcf33bc410b42b; op2val:0x3ff2dce8fa7b9c8d; op3val:0x7fe110ac9f3abd23; valaddr_reg:x16; val_offset:624; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 624, x17, x15, 1104, x18)

inst_197:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x063a074cc3059 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x5a419ce7278f9 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x62ada351bd685 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe063a074cc3059; op2val:0x3ff5a419ce7278f9; op3val:0x7fe62ada351bd685; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 1120, x18)

inst_198:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x399d413e4b88b and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xa694f80594a8c and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x02d7dc26caf5a and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe399d413e4b88b; op2val:0x3fea694f80594a8c; op3val:0x7fe02d7dc26caf5a; valaddr_reg:x16; val_offset:672; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 672, x17, x15, 1136, x18)

inst_199:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd331a1c40e3c1 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xf16a8dc465195 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xc5e2e829adb51 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fed331a1c40e3c1; op2val:0x3fdf16a8dc465195; op3val:0x7fdc5e2e829adb51; valaddr_reg:x16; val_offset:696; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 696, x17, x15, 1152, x18)

inst_200:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1f9afe81c88d6 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x5a5b1745cb880 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x851dd239377e5 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe1f9afe81c88d6; op2val:0x3ff5a5b1745cb880; op3val:0x7fe851dd239377e5; valaddr_reg:x16; val_offset:720; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 720, x17, x15, 1168, x18)

inst_201:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x8b65ce8641755 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x509bbf55e512c and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x03f3169cf0733 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe8b65ce8641755; op2val:0x3fe509bbf55e512c; op3val:0x7fe03f3169cf0733; valaddr_reg:x16; val_offset:744; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 744, x17, x15, 1184, x18)

inst_202:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xfcea9730f9703 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x1d47ffdf2e702 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x1b90260566c5d and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcfcea9730f9703; op2val:0x3ff1d47ffdf2e702; op3val:0x7fd1b90260566c5d; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 1200, x18)

inst_203:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xb29fc9c4366f7 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x51f17371d44aa and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x1edf2283a2fb1 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbb29fc9c4366f7; op2val:0x40151f17371d44aa; op3val:0x7fe1edf2283a2fb1; valaddr_reg:x16; val_offset:792; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 792, x17, x15, 1216, x18)

inst_204:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1c62e09ee1112 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x69777b155c7d7 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x918c2971b2037 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe1c62e09ee1112; op2val:0x3ff69777b155c7d7; op3val:0x7fe918c2971b2037; valaddr_reg:x16; val_offset:816; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 816, x17, x15, 1232, x18)

inst_205:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x4dce43d756a23 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x9711b27824018 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x096500a1f76b9 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd4dce43d756a23; op2val:0x3ff9711b27824018; op3val:0x7fe096500a1f76b9; valaddr_reg:x16; val_offset:840; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 840, x17, x15, 1248, x18)

inst_206:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x734c8847b3984 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x88e1d72cdb3a6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x1cea5f83f3cc6 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe734c8847b3984; op2val:0x3fe88e1d72cdb3a6; op3val:0x7fe1cea5f83f3cc6; valaddr_reg:x16; val_offset:864; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 864, x17, x15, 1264, x18)

inst_207:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x60f750243d353 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x5fa870dff129f and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xe4db54cf3eb57 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc60f750243d353; op2val:0x4005fa870dff129f; op3val:0x7fde4db54cf3eb57; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 1280, x18)

inst_208:
// fs1 == 0 and fe1 == 0x7f7 and fm1 == 0x01b818d54fa7f and fs2 == 0 and fe2 == 0x406 and fm2 == 0x967222f02addf and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x992cde89965d1 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f701b818d54fa7f; op2val:0x406967222f02addf; op3val:0x7fe992cde89965d1; valaddr_reg:x16; val_offset:912; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 912, x17, x15, 1296, x18)

inst_209:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc2b01ae3648db and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xaa05636c3d5a4 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x7701449bca3c7 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdc2b01ae3648db; op2val:0x3fdaa05636c3d5a4; op3val:0x7fc7701449bca3c7; valaddr_reg:x16; val_offset:936; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 936, x17, x15, 1312, x18)

inst_210:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0c090e20accd5 and fs2 == 0 and fe2 == 0x3fa and fm2 == 0x24b326b764444 and fs3 == 0 and fe3 == 0x7f9 and fm3 == 0x3275e6fb817ff and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0c090e20accd5; op2val:0x3fa24b326b764444; op3val:0x7f93275e6fb817ff; valaddr_reg:x16; val_offset:960; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 960, x17, x15, 1328, x18)

inst_211:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x00d821485e6cc and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0f663aff0a092 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x104b5c89b7afe and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe00d821485e6cc; op2val:0x3ff0f663aff0a092; op3val:0x7fe104b5c89b7afe; valaddr_reg:x16; val_offset:984; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 984, x17, x15, 1344, x18)

inst_212:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xaeb92d69dfb67 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x1744c7b952882 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd5df89b833eac and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdaeb92d69dfb67; op2val:0x4001744c7b952882; op3val:0x7fed5df89b833eac; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 1360, x18)

inst_213:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2aacb0b429baf and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x8cd8ba7eb2d96 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xcefffca1129bf and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe2aacb0b429baf; op2val:0x3ff8cd8ba7eb2d96; op3val:0x7fecefffca1129bf; valaddr_reg:x16; val_offset:1032; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1032, x17, x15, 1376, x18)

inst_214:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x6a465bf2e7f6d and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x4b8718f931656 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xd5282754cbf99 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd6a465bf2e7f6d; op2val:0x3ff4b8718f931656; op3val:0x7fdd5282754cbf99; valaddr_reg:x16; val_offset:1056; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1056, x17, x15, 1392, x18)

inst_215:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x0c705b0f97703 and fs2 == 0 and fe2 == 0x401 and fm2 == 0xbc56ad55a2445 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd1edc16f5ae1f and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc0c705b0f97703; op2val:0x401bc56ad55a2445; op3val:0x7fed1edc16f5ae1f; valaddr_reg:x16; val_offset:1080; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1080, x17, x15, 1408, x18)

inst_216:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x0996ecc5ad59d and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x9d939ce559199 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xad11a06ac6e6b and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd0996ecc5ad59d; op2val:0x3ff9d939ce559199; op3val:0x7fdad11a06ac6e6b; valaddr_reg:x16; val_offset:1104; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1104, x17, x15, 1424, x18)

inst_217:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xec9feac380847 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x3810ac8e0bd02 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x2c417e14dd023 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcec9feac380847; op2val:0x4003810ac8e0bd02; op3val:0x7fe2c417e14dd023; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 1440, x18)

inst_218:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x01e0fc1b3c5e3 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x29cfe82489e48 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x2bff73402612d and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd01e0fc1b3c5e3; op2val:0x3ff29cfe82489e48; op3val:0x7fd2bff73402612d; valaddr_reg:x16; val_offset:1152; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1152, x17, x15, 1456, x18)

inst_219:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa6fdd237ee16f and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x0594fec5c4774 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xb036f7072a98b and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fea6fdd237ee16f; op2val:0x3fd0594fec5c4774; op3val:0x7fcb036f7072a98b; valaddr_reg:x16; val_offset:1176; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1176, x17, x15, 1472, x18)

inst_220:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xbc388a7e47403 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x0137832c6112c and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xbe5516cc77b12 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdbc388a7e47403; op2val:0x4000137832c6112c; op3val:0x7febe5516cc77b12; valaddr_reg:x16; val_offset:1200; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1200, x17, x15, 1488, x18)

inst_221:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0d9c07eff7bef and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xc5e2e7ea09ee5 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xde041208e97bd and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0d9c07eff7bef; op2val:0x3ffc5e2e7ea09ee5; op3val:0x7fede041208e97bd; valaddr_reg:x16; val_offset:1224; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1224, x17, x15, 1504, x18)

inst_222:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf118846e7cd8c and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x569b4d6573125 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x4ca2288693d12 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef118846e7cd8c; op2val:0x3fe569b4d6573125; op3val:0x7fe4ca2288693d12; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 1520, x18)

inst_223:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x0c4143057a407 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0xbd642f851c58f and fs3 == 0 and fe3 == 0x7f8 and fm3 == 0xd2b66cca2a8ff and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc0c4143057a407; op2val:0x3fbbd642f851c58f; op3val:0x7f8d2b66cca2a8ff; valaddr_reg:x16; val_offset:1272; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1272, x17, x15, 1536, x18)

inst_224:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x66d13a13f4f01 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x90d6c3ef0fe00 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x18e9f823171c4 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd66d13a13f4f01; op2val:0x3ff90d6c3ef0fe00; op3val:0x7fe18e9f823171c4; valaddr_reg:x16; val_offset:1296; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1296, x17, x15, 1552, x18)

inst_225:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf5eaa91e5bdd1 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x57482fe1c8752 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5085783bff77a and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef5eaa91e5bdd1; op2val:0x3fe57482fe1c8752; op3val:0x7fe5085783bff77a; valaddr_reg:x16; val_offset:1320; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1320, x17, x15, 1568, x18)

inst_226:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x2b5d6f9c9011b and fs2 == 0 and fe2 == 0x401 and fm2 == 0x69dfb973f79f1 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa72c61a622bce and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc2b5d6f9c9011b; op2val:0x40169dfb973f79f1; op3val:0x7fea72c61a622bce; valaddr_reg:x16; val_offset:1344; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1344, x17, x15, 1584, x18)

inst_227:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcf48c61dc85b9 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xc85988489669a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x9cedd3e9f9949 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fecf48c61dc85b9; op2val:0x3fec85988489669a; op3val:0x7fe9cedd3e9f9949; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 1600, x18)

inst_228:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x042cb1070d70f and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x3096f727622ae and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x358e7f973f797 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc042cb1070d70f; op2val:0x3ff3096f727622ae; op3val:0x7fc358e7f973f797; valaddr_reg:x16; val_offset:1392; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1392, x17, x15, 1616, x18)

inst_229:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7318cf8a2ab28 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xe05d4b14854ca and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x5c2ae0fe3c9c7 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe7318cf8a2ab28; op2val:0x3fce05d4b14854ca; op3val:0x7fc5c2ae0fe3c9c7; valaddr_reg:x16; val_offset:1416; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1416, x17, x15, 1632, x18)

inst_230:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x9b05255f262e5 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x2deda15b6308d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe4c293c56f511 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd9b05255f262e5; op2val:0x4002deda15b6308d; op3val:0x7fee4c293c56f511; valaddr_reg:x16; val_offset:1440; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1440, x17, x15, 1648, x18)

inst_231:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf17d106e32604 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xa12980fda43d2 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x9556afbb48d81 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef17d106e32604; op2val:0x3fda12980fda43d2; op3val:0x7fd9556afbb48d81; valaddr_reg:x16; val_offset:1464; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1464, x17, x15, 1664, x18)

inst_232:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x547f638b1a9e7 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x344561a7bbaf9 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x9a058bfc8df90 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd547f638b1a9e7; op2val:0x400344561a7bbaf9; op3val:0x7fe9a058bfc8df90; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 1680, x18)

inst_233:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x6d9ccb6f15b67 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x1ae7a70da303c and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x94098f28b1a38 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc6d9ccb6f15b67; op2val:0x4011ae7a70da303c; op3val:0x7fe94098f28b1a38; valaddr_reg:x16; val_offset:1512; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1512, x17, x15, 1696, x18)

inst_234:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x8012690cc1a61 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x4646a264c388c and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xe9816a71cb1cb and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe8012690cc1a61; op2val:0x3fe4646a264c388c; op3val:0x7fde9816a71cb1cb; valaddr_reg:x16; val_offset:1536; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1536, x17, x15, 1712, x18)

inst_235:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd1ce4f18ddc4f and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb842ba2798159 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x908a00ed8919c and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fed1ce4f18ddc4f; op2val:0x3feb842ba2798159; op3val:0x7fe908a00ed8919c; valaddr_reg:x16; val_offset:1560; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1560, x17, x15, 1728, x18)

inst_236:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x5b40afab57167 and fs2 == 0 and fe2 == 0x401 and fm2 == 0xf2ae85558a252 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x52384847ac803 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb5b40afab57167; op2val:0x401f2ae85558a252; op3val:0x7fe52384847ac803; valaddr_reg:x16; val_offset:1584; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1584, x17, x15, 1744, x18)

inst_237:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4e53235604357 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x3980124aa4300 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x996ae7a92917a and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe4e53235604357; op2val:0x3ff3980124aa4300; op3val:0x7fe996ae7a92917a; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 1760, x18)

inst_238:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xae4d90c01f43f and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x2419596701007 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xeafb14f460a39 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feae4d90c01f43f; op2val:0x3fe2419596701007; op3val:0x7fdeafb14f460a39; valaddr_reg:x16; val_offset:1632; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1632, x17, x15, 1776, x18)

inst_239:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3f85a17f0e51b and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x7151666c9f6a7 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xccf536e70e88e and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3f85a17f0e51b; op2val:0x3ff7151666c9f6a7; op3val:0x7feccf536e70e88e; valaddr_reg:x16; val_offset:1656; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1656, x17, x15, 1792, x18)

inst_240:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x92daae5675f67 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x09fa7537d57df and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xa28e807b8f2a7 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc92daae5675f67; op2val:0x3ff09fa7537d57df; op3val:0x7fca28e807b8f2a7; valaddr_reg:x16; val_offset:1680; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1680, x17, x15, 1808, x18)

inst_241:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xc381c01a26f87 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0769999898d4c and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xd0948b7857293 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcc381c01a26f87; op2val:0x3ff0769999898d4c; op3val:0x7fcd0948b7857293; valaddr_reg:x16; val_offset:1704; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1704, x17, x15, 1824, x18)

inst_242:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe8f5d7be5e740 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x86fb25e38210f and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x75631c0a4f12b and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fee8f5d7be5e740; op2val:0x3fd86fb25e38210f; op3val:0x7fd75631c0a4f12b; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 1840, x18)

inst_243:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xdfc13e2e47ba6 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0df028bb6dde5 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xf9e01fd65e87a and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fedfc13e2e47ba6; op2val:0x3ff0df028bb6dde5; op3val:0x7fef9e01fd65e87a; valaddr_reg:x16; val_offset:1752; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1752, x17, x15, 1856, x18)

inst_244:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe9bc581608b2c and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xdec7e893c57ef and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xc9f60d677f14f and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fee9bc581608b2c; op2val:0x3fddec7e893c57ef; op3val:0x7fdc9f60d677f14f; valaddr_reg:x16; val_offset:1776; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1776, x17, x15, 1872, x18)

inst_245:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x09650118c95b7 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x56051ce711386 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x62923c66ba98f and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd09650118c95b7; op2val:0x40056051ce711386; op3val:0x7fe62923c66ba98f; valaddr_reg:x16; val_offset:1800; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1800, x17, x15, 1888, x18)

inst_246:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xc9b89652275bf and fs2 == 0 and fe2 == 0x402 and fm2 == 0x400e03101e0da and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x1e1fe4bc725cb and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f9c9b89652275bf; op2val:0x402400e03101e0da; op3val:0x7fd1e1fe4bc725cb; valaddr_reg:x16; val_offset:1824; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1824, x17, x15, 1904, x18)

inst_247:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x6c18965d9189d and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x4dd84333cff51 and fs3 == 0 and fe3 == 0x7f9 and fm3 == 0xdacf8feab547f and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd6c18965d9189d; op2val:0x3fb4dd84333cff51; op3val:0x7f9dacf8feab547f; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 1920, x18)

inst_248:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xd05ccb332dd2f and fs2 == 0 and fe2 == 0x400 and fm2 == 0x2438416c6ef58 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0907f15f89bcc and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcd05ccb332dd2f; op2val:0x4002438416c6ef58; op3val:0x7fe0907f15f89bcc; valaddr_reg:x16; val_offset:1872; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1872, x17, x15, 1936, x18)

inst_249:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa2fc8919a4cff and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xcee91c7df3fa3 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x7ad0a2f369b1a and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fea2fc8919a4cff; op2val:0x3fecee91c7df3fa3; op3val:0x7fe7ad0a2f369b1a; valaddr_reg:x16; val_offset:1896; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1896, x17, x15, 1952, x18)

inst_250:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb48bc30c7d45b and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xe40bfa9b7f1f5 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x9cb6550f52209 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feb48bc30c7d45b; op2val:0x3fee40bfa9b7f1f5; op3val:0x7fe9cb6550f52209; valaddr_reg:x16; val_offset:1920; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1920, x17, x15, 1968, x18)

inst_251:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9f7e66f275221 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x36b4a098857b1 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xf8483a30885ab and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9f7e66f275221; op2val:0x3ff36b4a098857b1; op3val:0x7fef8483a30885ab; valaddr_reg:x16; val_offset:1944; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1944, x17, x15, 1984, x18)

inst_252:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x5193b35176edb and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x5a6779344470f and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xc8ca129cfc863 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd5193b35176edb; op2val:0x3fe5a6779344470f; op3val:0x7fcc8ca129cfc863; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 2000, x18)

inst_253:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x10aff362a9091 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x7677719c0fb36 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8ee048602c301 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe10aff362a9091; op2val:0x3ff7677719c0fb36; op3val:0x7fe8ee048602c301; valaddr_reg:x16; val_offset:1992; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1992, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_3)

inst_254:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x561a225b0ee73 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x27c20f760e378 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8b3b720e423c7 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc561a225b0ee73; op2val:0x40127c20f760e378; op3val:0x7fe8b3b720e423c7; valaddr_reg:x16; val_offset:2016; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 2016, x17, x15, 0, x18)
addi x16,x16,2040

inst_255:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x0b61c8425ad3f and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x6784267dd63bc and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x7780267441d0d and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd0b61c8425ad3f; op2val:0x3ff6784267dd63bc; op3val:0x7fd7780267441d0d; valaddr_reg:x16; val_offset:0; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 0, x17, x15, 16, x18)

inst_256:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xba05bd05d31dd and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x9ce23435bfc76 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x6473e7b61bd02 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feba05bd05d31dd; op2val:0x3fe9ce23435bfc76; op3val:0x7fe6473e7b61bd02; valaddr_reg:x16; val_offset:24; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 24, x17, x15, 32, x18)

inst_257:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0e645c5313e6b and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xda53976a38938 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xf4fe1d69258d9 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0e645c5313e6b; op2val:0x3ffda53976a38938; op3val:0x7fef4fe1d69258d9; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 48, x18)

inst_258:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x161ab23a815d4 and fs2 == 0 and fe2 == 0x3fa and fm2 == 0x97d93afcb77c8 and fs3 == 0 and fe3 == 0x7f9 and fm3 == 0xbb106e10ad3ff and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe161ab23a815d4; op2val:0x3fa97d93afcb77c8; op3val:0x7f9bb106e10ad3ff; valaddr_reg:x16; val_offset:72; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 72, x17, x15, 64, x18)

inst_259:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0e77c0d726f3b and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x1c2e7961399e0 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x2c3df3b0a844b and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0e77c0d726f3b; op2val:0x3fd1c2e7961399e0; op3val:0x7fc2c3df3b0a844b; valaddr_reg:x16; val_offset:96; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 96, x17, x15, 80, x18)

inst_260:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0x7a6679a447c1f and fs2 == 0 and fe2 == 0x404 and fm2 == 0x49681b9694e3f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe6e794bcede93 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f97a6679a447c1f; op2val:0x40449681b9694e3f; op3val:0x7fee6e794bcede93; valaddr_reg:x16; val_offset:120; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 120, x17, x15, 96, x18)

inst_261:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa85fbb6c4aa86 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x8ee51f605efcf and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x4aa053842e7fb and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fea85fbb6c4aa86; op2val:0x3fc8ee51f605efcf; op3val:0x7fc4aa053842e7fb; valaddr_reg:x16; val_offset:144; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 144, x17, x15, 112, x18)

inst_262:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x5edbeddec3d41 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x8ba02b0bd188e and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x0f1c6e3d437bb and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd5edbeddec3d41; op2val:0x3fe8ba02b0bd188e; op3val:0x7fd0f1c6e3d437bb; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 128, x18)

inst_263:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x5fc89849c9c47 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x30984b5bb5267 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xa28f7b7fd5427 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb5fc89849c9c47; op2val:0x3ff30984b5bb5267; op3val:0x7fba28f7b7fd5427; valaddr_reg:x16; val_offset:192; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 192, x17, x15, 144, x18)

inst_264:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xdd2c573d7d961 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x09cdb83340ea0 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xef725a27eac6b and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fddd2c573d7d961; op2val:0x3ff09cdb83340ea0; op3val:0x7fdef725a27eac6b; valaddr_reg:x16; val_offset:216; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 216, x17, x15, 160, x18)

inst_265:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb2a7dc5f3c81b and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x2b794582212d1 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xfc77f5be94a6d and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feb2a7dc5f3c81b; op2val:0x3ff2b794582212d1; op3val:0x7fefc77f5be94a6d; valaddr_reg:x16; val_offset:240; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 240, x17, x15, 176, x18)

inst_266:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x74e742bcb0feb and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x596c4cb3d62af and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xf7296a3b0f9d7 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd74e742bcb0feb; op2val:0x3fd596c4cb3d62af; op3val:0x7fbf7296a3b0f9d7; valaddr_reg:x16; val_offset:264; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 264, x17, x15, 192, x18)

inst_267:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x024fdb7a4cc69 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x608b0699807b2 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x63ba15cd177bf and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd024fdb7a4cc69; op2val:0x3ff608b0699807b2; op3val:0x7fd63ba15cd177bf; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 208, x18)

inst_268:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3a67401814244 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xef6f697feeed4 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x303b3ca268aa7 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3a67401814244; op2val:0x3fcef6f697feeed4; op3val:0x7fc303b3ca268aa7; valaddr_reg:x16; val_offset:312; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 312, x17, x15, 224, x18)

inst_269:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xa1ce7890019bf and fs2 == 0 and fe2 == 0x404 and fm2 == 0x124a72ef326d4 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xbfa87e4d4f18b and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f9a1ce7890019bf; op2val:0x404124a72ef326d4; op3val:0x7febfa87e4d4f18b; valaddr_reg:x16; val_offset:336; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 336, x17, x15, 240, x18)

inst_270:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x9f9919e5dc9c7 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xcab41e926fa19 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x745628ce8ef13 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb9f9919e5dc9c7; op2val:0x400cab41e926fa19; op3val:0x7fd745628ce8ef13; valaddr_reg:x16; val_offset:360; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 360, x17, x15, 256, x18)

inst_271:
// fs1 == 0 and fe1 == 0x7f2 and fm1 == 0xe93a4462ebfff and fs2 == 0 and fe2 == 0x408 and fm2 == 0x4435ea24b2dc9 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x35ca63895fd77 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f2e93a4462ebfff; op2val:0x4084435ea24b2dc9; op3val:0x7fc35ca63895fd77; valaddr_reg:x16; val_offset:384; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 384, x17, x15, 272, x18)

inst_272:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x5c37064ce4a17 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x3ca406e5d0503 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0xaeb30868d631f and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd5c37064ce4a17; op2val:0x3fc3ca406e5d0503; op3val:0x7faaeb30868d631f; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 288, x18)

inst_273:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xab8c0870ccebf and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x8e0e153843530 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x4c659d1c2442b and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcab8c0870ccebf; op2val:0x3fe8e0e153843530; op3val:0x7fc4c659d1c2442b; valaddr_reg:x16; val_offset:432; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 432, x17, x15, 304, x18)

inst_274:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0xfdef24c32f24f and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x14f92f8aa95db and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x13db17f82659f and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fafdef24c32f24f; op2val:0x3ff14f92f8aa95db; op3val:0x7fb13db17f82659f; valaddr_reg:x16; val_offset:456; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 456, x17, x15, 320, x18)

inst_275:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xa81682f68a287 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x8813c25ec02a6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x44c19a19a0da1 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fba81682f68a287; op2val:0x4018813c25ec02a6; op3val:0x7fe44c19a19a0da1; valaddr_reg:x16; val_offset:480; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 480, x17, x15, 336, x18)

inst_276:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x91cbc6b2f3f1f and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x044e559238bd2 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x988de83272863 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd91cbc6b2f3f1f; op2val:0x3ff044e559238bd2; op3val:0x7fd988de83272863; valaddr_reg:x16; val_offset:504; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 504, x17, x15, 352, x18)

inst_277:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xbfc0312b8e8ac and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xd32130c641952 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x9882d363cb1ba and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7febfc0312b8e8ac; op2val:0x3fed32130c641952; op3val:0x7fe9882d363cb1ba; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 368, x18)

inst_278:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcc8f9737be20b and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xbbf242bc1ad44 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8f58293cebb41 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fecc8f9737be20b; op2val:0x3febbf242bc1ad44; op3val:0x7fe8f58293cebb41; valaddr_reg:x16; val_offset:552; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 552, x17, x15, 384, x18)

inst_279:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5a36e5af58a21 and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x470e2ee853fca and fs3 == 0 and fe3 == 0x7fa and fm3 == 0xba4f4dd39a68f and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe5a36e5af58a21; op2val:0x3fb470e2ee853fca; op3val:0x7faba4f4dd39a68f; valaddr_reg:x16; val_offset:576; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 576, x17, x15, 400, x18)

inst_280:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x07ee7e3cd0780 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x32b473be6de7a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x3c351de9eaf86 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe07ee7e3cd0780; op2val:0x3ff32b473be6de7a; op3val:0x7fe3c351de9eaf86; valaddr_reg:x16; val_offset:600; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 600, x17, x15, 416, x18)

inst_281:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe7fc7388080d7 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x72ee1e089780f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x61886276fd2a1 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fee7fc7388080d7; op2val:0x3fe72ee1e089780f; op3val:0x7fe61886276fd2a1; valaddr_reg:x16; val_offset:624; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 624, x17, x15, 432, x18)

inst_282:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7a1d9bce0e555 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x88a395719f5a5 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x21f77a1464222 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd7a1d9bce0e555; op2val:0x3ff88a395719f5a5; op3val:0x7fe21f77a1464222; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 448, x18)

inst_283:
// fs1 == 0 and fe1 == 0x7f7 and fm1 == 0x0c4744a96187f and fs2 == 0 and fe2 == 0x405 and fm2 == 0x995df19783280 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xad004fc46d79f and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f70c4744a96187f; op2val:0x405995df19783280; op3val:0x7fdad004fc46d79f; valaddr_reg:x16; val_offset:672; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 672, x17, x15, 464, x18)

inst_284:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2da1988bab816 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xc8b320bc03279 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x0d0d7324164e3 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe2da1988bab816; op2val:0x3fdc8b320bc03279; op3val:0x7fd0d0d7324164e3; valaddr_reg:x16; val_offset:696; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 696, x17, x15, 480, x18)

inst_285:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xdddf4f0316907 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x0a089784d8f3d and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xf09a11ea6145f and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcdddf4f0316907; op2val:0x4000a089784d8f3d; op3val:0x7fdf09a11ea6145f; valaddr_reg:x16; val_offset:720; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 720, x17, x15, 496, x18)

inst_286:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x68e4d726bb7d7 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x50f99573d3393 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xdb0c33a8948c7 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc68e4d726bb7d7; op2val:0x3ff50f99573d3393; op3val:0x7fcdb0c33a8948c7; valaddr_reg:x16; val_offset:744; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 744, x17, x15, 512, x18)

inst_287:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xea5bbe8ec4a1e and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x42ba30fb3fcfe and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x351605153e7bf and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feea5bbe8ec4a1e; op2val:0x3fc42ba30fb3fcfe; op3val:0x7fc351605153e7bf; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 528, x18)

inst_288:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x6f61b5576377f and fs2 == 0 and fe2 == 0x400 and fm2 == 0x3b74da956e014 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc4b4ec1859266 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd6f61b5576377f; op2val:0x4003b74da956e014; op3val:0x7fec4b4ec1859266; valaddr_reg:x16; val_offset:792; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 792, x17, x15, 544, x18)

inst_289:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x1d1a695a6b34f and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x7dda5bc613ddb and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xa9437d7e448d9 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd1d1a695a6b34f; op2val:0x3ff7dda5bc613ddb; op3val:0x7fda9437d7e448d9; valaddr_reg:x16; val_offset:816; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 816, x17, x15, 560, x18)

inst_290:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa378a59b8daa9 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0df805a426e35 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xba5c2c2336cc0 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fea378a59b8daa9; op2val:0x3ff0df805a426e35; op3val:0x7feba5c2c2336cc0; valaddr_reg:x16; val_offset:840; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 840, x17, x15, 576, x18)

inst_291:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x19503011c81db and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x9b981b1265c97 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc44ae288c365c and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe19503011c81db; op2val:0x3ff9b981b1265c97; op3val:0x7fec44ae288c365c; valaddr_reg:x16; val_offset:864; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 864, x17, x15, 592, x18)

inst_292:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x4a0f9e552df5f and fs2 == 0 and fe2 == 0x401 and fm2 == 0x64c1f3bb840b8 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xcbf7c83369141 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb4a0f9e552df5f; op2val:0x40164c1f3bb840b8; op3val:0x7fdcbf7c83369141; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 608, x18)

inst_293:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x90551e755a3bd and fs2 == 0 and fe2 == 0x400 and fm2 == 0x1d4f75c9f66a4 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xbe2b055fc6c3f and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd90551e755a3bd; op2val:0x4001d4f75c9f66a4; op3val:0x7febe2b055fc6c3f; valaddr_reg:x16; val_offset:912; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 912, x17, x15, 624, x18)

inst_294:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x08e386bd0561b and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xea191d43c722f and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xfb1d7c65dc9f3 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc08e386bd0561b; op2val:0x3ffea191d43c722f; op3val:0x7fcfb1d7c65dc9f3; valaddr_reg:x16; val_offset:936; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 936, x17, x15, 640, x18)

inst_295:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0xe2f460df71daf and fs2 == 0 and fe2 == 0x402 and fm2 == 0xa0fdaacb5fbcf and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8955d5926548d and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fae2f460df71daf; op2val:0x402a0fdaacb5fbcf; op3val:0x7fe8955d5926548d; valaddr_reg:x16; val_offset:960; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 960, x17, x15, 656, x18)

inst_296:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x5829bf9c6538f and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x64c2b92225f5e and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xdf9fd6fcc553f and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc5829bf9c6538f; op2val:0x3fe64c2b92225f5e; op3val:0x7fbdf9fd6fcc553f; valaddr_reg:x16; val_offset:984; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 984, x17, x15, 672, x18)

inst_297:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0x71abc78672bff and fs2 == 0 and fe2 == 0x403 and fm2 == 0x4766a61cffe7f and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xd8c6a62d7fd8f and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f971abc78672bff; op2val:0x4034766a61cffe7f; op3val:0x7fdd8c6a62d7fd8f; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 688, x18)

inst_298:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x8b0ce9718a893 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xbbb2d2c120e46 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5659a61635557 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd8b0ce9718a893; op2val:0x3ffbbb2d2c120e46; op3val:0x7fe5659a61635557; valaddr_reg:x16; val_offset:1032; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1032, x17, x15, 704, x18)

inst_299:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa4d3535c8560c and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x6290a8daf6d85 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x236d02dbba759 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fea4d3535c8560c; op2val:0x3fd6290a8daf6d85; op3val:0x7fd236d02dbba759; valaddr_reg:x16; val_offset:1056; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1056, x17, x15, 720, x18)

inst_300:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4b547924fd121 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x88dcc2c35a5a1 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xfc77122b9963b and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe4b547924fd121; op2val:0x3ff88dcc2c35a5a1; op3val:0x7fefc77122b9963b; valaddr_reg:x16; val_offset:1080; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1080, x17, x15, 736, x18)

inst_301:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0xf10102ecb507f and fs2 == 0 and fe2 == 0x402 and fm2 == 0x72003d0023fd5 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x6729f653d09b6 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7faf10102ecb507f; op2val:0x40272003d0023fd5; op3val:0x7fe6729f653d09b6; valaddr_reg:x16; val_offset:1104; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1104, x17, x15, 752, x18)

inst_302:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe57a08d938ac9 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x669fb3be375cc and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x540bc20428f59 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fde57a08d938ac9; op2val:0x3ff669fb3be375cc; op3val:0x7fe540bc20428f59; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 768, x18)

inst_303:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xae1041c5fd79f and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x1fe9f24a7455f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe3ad3d9146af5 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feae1041c5fd79f; op2val:0x3ff1fe9f24a7455f; op3val:0x7fee3ad3d9146af5; valaddr_reg:x16; val_offset:1152; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1152, x17, x15, 784, x18)

inst_304:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x28e8063300472 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x92cabe4efe922 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xd3277d88cd395 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe28e8063300472; op2val:0x3fe92cabe4efe922; op3val:0x7fdd3277d88cd395; valaddr_reg:x16; val_offset:1176; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1176, x17, x15, 800, x18)

inst_305:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x63fdc11669528 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb5ae43b7daad0 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x30513f9fc9850 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe63fdc11669528; op2val:0x3feb5ae43b7daad0; op3val:0x7fe30513f9fc9850; valaddr_reg:x16; val_offset:1200; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1200, x17, x15, 816, x18)

inst_306:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc03ea0b45fe6a and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x6ef94d7b62f69 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x4147072b89211 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec03ea0b45fe6a; op2val:0x3fd6ef94d7b62f69; op3val:0x7fd4147072b89211; valaddr_reg:x16; val_offset:1224; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1224, x17, x15, 832, x18)

inst_307:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x8775d523b7834 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x7fbb0c63a2134 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x2563a7f28084c and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe8775d523b7834; op2val:0x3fe7fbb0c63a2134; op3val:0x7fe2563a7f28084c; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 848, x18)

inst_308:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x412f93d91b86f and fs2 == 0 and fe2 == 0x403 and fm2 == 0x10b0d09a9e321 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x56206384f7bbd and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fa412f93d91b86f; op2val:0x40310b0d09a9e321; op3val:0x7fe56206384f7bbd; valaddr_reg:x16; val_offset:1272; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1272, x17, x15, 864, x18)

inst_309:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x3743aaeeeacbb and fs2 == 0 and fe2 == 0x400 and fm2 == 0x9bcce06a14cb0 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xf4b2be35fa361 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc3743aaeeeacbb; op2val:0x4009bcce06a14cb0; op3val:0x7fdf4b2be35fa361; valaddr_reg:x16; val_offset:1296; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1296, x17, x15, 880, x18)

inst_310:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xac2863951d7a5 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xcf913c3426f6d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x83a7f9d5e43df and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdac2863951d7a5; op2val:0x3ffcf913c3426f6d; op3val:0x7fe83a7f9d5e43df; valaddr_reg:x16; val_offset:1320; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1320, x17, x15, 896, x18)

inst_311:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf5d97a44af52a and fs2 == 0 and fe2 == 0x3fb and fm2 == 0xed60f4ded2fb1 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xe398f1061c0ef and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef5d97a44af52a; op2val:0x3fbed60f4ded2fb1; op3val:0x7fbe398f1061c0ef; valaddr_reg:x16; val_offset:1344; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1344, x17, x15, 912, x18)

inst_312:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7579da5cb9b2f and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x943579dbdd6c5 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x26d9284df25e5 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe7579da5cb9b2f; op2val:0x3fd943579dbdd6c5; op3val:0x7fd26d9284df25e5; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 928, x18)

inst_313:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0ce68e5faffc7 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xaa92f4d6f9193 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc0120595fb816 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0ce68e5faffc7; op2val:0x3ffaa92f4d6f9193; op3val:0x7fec0120595fb816; valaddr_reg:x16; val_offset:1392; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1392, x17, x15, 944, x18)

inst_314:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xf3e8df14f472f and fs2 == 0 and fe2 == 0x400 and fm2 == 0x2d37c75ea8563 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x261add5337480 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcf3e8df14f472f; op2val:0x4002d37c75ea8563; op3val:0x7fe261add5337480; valaddr_reg:x16; val_offset:1416; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1416, x17, x15, 960, x18)

inst_315:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x96b8e84b814c5 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xc2858a780d3ff and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x65e29931e8ba7 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe96b8e84b814c5; op2val:0x3fec2858a780d3ff; op3val:0x7fe65e29931e8ba7; valaddr_reg:x16; val_offset:1440; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1440, x17, x15, 976, x18)

inst_316:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xd00f90ae48549 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x52abf187430ec and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x32f61e9fcc711 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdd00f90ae48549; op2val:0x3fe52abf187430ec; op3val:0x7fd32f61e9fcc711; valaddr_reg:x16; val_offset:1464; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1464, x17, x15, 992, x18)

inst_317:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x41afcbbb98d77 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xdd2d56b3ae715 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x2bcec3bb19a9d and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd41afcbbb98d77; op2val:0x3ffdd2d56b3ae715; op3val:0x7fe2bcec3bb19a9d; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 1008, x18)

inst_318:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5c5d62a207b44 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x41c339608df40 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xb5dac1e37c3b7 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe5c5d62a207b44; op2val:0x3fe41c339608df40; op3val:0x7fdb5dac1e37c3b7; valaddr_reg:x16; val_offset:1512; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1512, x17, x15, 1024, x18)

inst_319:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0xe840b679dda5f and fs2 == 0 and fe2 == 0x400 and fm2 == 0xba5199ddf7689 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xa5cdae7f1504f and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fae840b679dda5f; op2val:0x400ba5199ddf7689; op3val:0x7fca5cdae7f1504f; valaddr_reg:x16; val_offset:1536; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1536, x17, x15, 1040, x18)

inst_320:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1871f66d9338f and fs2 == 0 and fe2 == 0x3fb and fm2 == 0xd5883b90379fc and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x012f0320f4e17 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe1871f66d9338f; op2val:0x3fbd5883b90379fc; op3val:0x7fb012f0320f4e17; valaddr_reg:x16; val_offset:1560; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1560, x17, x15, 1056, x18)

inst_321:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x471faa8c06142 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x2a6cb740159e7 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x7d55c80c789ad and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe471faa8c06142; op2val:0x3fe2a6cb740159e7; op3val:0x7fd7d55c80c789ad; valaddr_reg:x16; val_offset:1584; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1584, x17, x15, 1072, x18)

inst_322:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x7220ac1a61dbb and fs2 == 0 and fe2 == 0x400 and fm2 == 0x9beb88f04a963 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x29c77f248e9cc and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc7220ac1a61dbb; op2val:0x4009beb88f04a963; op3val:0x7fe29c77f248e9cc; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 1088, x18)

inst_323:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x3be2a8c7b6829 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x52a3bf7842274 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa1db506ba5ee9 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd3be2a8c7b6829; op2val:0x40052a3bf7842274; op3val:0x7fea1db506ba5ee9; valaddr_reg:x16; val_offset:1632; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1632, x17, x15, 1104, x18)

inst_324:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x276f358a6a63b and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xa21385d91b7e5 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xe27a1d244ecc7 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc276f358a6a63b; op2val:0x3fea21385d91b7e5; op3val:0x7fbe27a1d244ecc7; valaddr_reg:x16; val_offset:1656; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1656, x17, x15, 1120, x18)

inst_325:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb7892d8885ef9 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x5973ca5b38043 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x288f5635a6591 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feb7892d8885ef9; op2val:0x3fd5973ca5b38043; op3val:0x7fd288f5635a6591; valaddr_reg:x16; val_offset:1680; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1680, x17, x15, 1136, x18)

inst_326:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf3d7b58e26345 and fs2 == 0 and fe2 == 0x3fa and fm2 == 0x86e30b0ef95b6 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x7d9af63a065bf and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef3d7b58e26345; op2val:0x3fa86e30b0ef95b6; op3val:0x7fa7d9af63a065bf; valaddr_reg:x16; val_offset:1704; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1704, x17, x15, 1152, x18)

inst_327:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x277a09a57982a and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x5fee54562abf2 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x9633680658f13 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe277a09a57982a; op2val:0x3fe5fee54562abf2; op3val:0x7fd9633680658f13; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 1168, x18)

inst_328:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x413eed654fd22 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x82ad1aedc7830 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe53a1b43f58c2 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe413eed654fd22; op2val:0x3ff82ad1aedc7830; op3val:0x7fee53a1b43f58c2; valaddr_reg:x16; val_offset:1752; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1752, x17, x15, 1184, x18)

inst_329:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xfb17c3e518207 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xcd9e20ba842b1 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xc93182a170b2f and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbfb17c3e518207; op2val:0x3ffcd9e20ba842b1; op3val:0x7fcc93182a170b2f; valaddr_reg:x16; val_offset:1776; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1776, x17, x15, 1200, x18)

inst_330:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xb2b5288790eeb and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xf29ef3e1f4174 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa75929643064a and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdb2b5288790eeb; op2val:0x3fff29ef3e1f4174; op3val:0x7fea75929643064a; valaddr_reg:x16; val_offset:1800; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1800, x17, x15, 1216, x18)

inst_331:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x1e20b87b382df and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x4c6fe2f4aa781 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x738f7d1a22dd7 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb1e20b87b382df; op2val:0x3ff4c6fe2f4aa781; op3val:0x7fb738f7d1a22dd7; valaddr_reg:x16; val_offset:1824; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1824, x17, x15, 1232, x18)

inst_332:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x332a1858028cf and fs2 == 0 and fe2 == 0x402 and fm2 == 0x721650593dd17 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xbc0d9d3586aa3 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fa332a1858028cf; op2val:0x402721650593dd17; op3val:0x7fdbc0d9d3586aa3; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 1248, x18)

inst_333:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0xdb208fa38975f and fs2 == 0 and fe2 == 0x402 and fm2 == 0x17f84065d01af and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x03ce9dcdbd9d6 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fadb208fa38975f; op2val:0x40217f84065d01af; op3val:0x7fe03ce9dcdbd9d6; valaddr_reg:x16; val_offset:1872; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1872, x17, x15, 1264, x18)

inst_334:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x125f20460639f and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x5d6446920937c and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x767727ca98cc1 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe125f20460639f; op2val:0x3fe5d6446920937c; op3val:0x7fd767727ca98cc1; valaddr_reg:x16; val_offset:1896; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1896, x17, x15, 1280, x18)

inst_335:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4d474883171fe and fs2 == 0 and fe2 == 0x3fb and fm2 == 0xc7ce04a4c90c6 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x28b2f3a47e0ff and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe4d474883171fe; op2val:0x3fbc7ce04a4c90c6; op3val:0x7fb28b2f3a47e0ff; valaddr_reg:x16; val_offset:1920; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1920, x17, x15, 1296, x18)

inst_336:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x45c7f25bfedc8 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x190fc2a460989 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x65ac8770e2d21 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe45c7f25bfedc8; op2val:0x3ff190fc2a460989; op3val:0x7fe65ac8770e2d21; valaddr_reg:x16; val_offset:1944; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1944, x17, x15, 1312, x18)

inst_337:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x06137ba060843 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xf7b7e63ad7b56 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x01d645c39dcc7 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc06137ba060843; op2val:0x3fff7b7e63ad7b56; op3val:0x7fd01d645c39dcc7; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 1328, x18)

inst_338:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x43f684016618f and fs2 == 0 and fe2 == 0x403 and fm2 == 0x3c8281523ad71 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x908971c80aada and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fa43f684016618f; op2val:0x4033c8281523ad71; op3val:0x7fe908971c80aada; valaddr_reg:x16; val_offset:1992; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 1992, x17, x15, 1344, x18)

inst_339:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xd44d040ae163f and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x34b7acba40d23 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x1a5e53f1b819b and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdd44d040ae163f; op2val:0x3ff34b7acba40d23; op3val:0x7fe1a5e53f1b819b; valaddr_reg:x16; val_offset:2016; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 2016, x17, x15, 1360, x18)
addi x16,x16,2040

inst_340:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4b7136762d31f and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x2e729b7d2c834 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8793eff945d39 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe4b7136762d31f; op2val:0x3ff2e729b7d2c834; op3val:0x7fe8793eff945d39; valaddr_reg:x16; val_offset:0; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 0, x17, x15, 1376, x18)

inst_341:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe20b0cf4d346f and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x887e36352d615 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x718749acdd3e9 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fee20b0cf4d346f; op2val:0x3fe887e36352d615; op3val:0x7fe718749acdd3e9; valaddr_reg:x16; val_offset:24; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 24, x17, x15, 1392, x18)

inst_342:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0b73813e3367a and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x4e4526c9cf173 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5d38f146f80f6 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0b73813e3367a; op2val:0x3ff4e4526c9cf173; op3val:0x7fe5d38f146f80f6; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 1408, x18)

inst_343:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xbea7047295f77 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x6a6c7efc0ad33 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x3c2abc26edf17 and rm_val == 3  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbbea7047295f77; op2val:0x3ff6a6c7efc0ad33; op3val:0x7fc3c2abc26edf17; valaddr_reg:x16; val_offset:72; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x3, 0, x16, 72, x17, x15, 1424, x18)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_fp:
.dword 0x7fd4b9ad0f953a6d
.dword 0x3fddd010c341e476
.dword 0x7fc34f069651326f
.dword 0x7fe45c7f25bfedc8
.dword 0x3ff190fc2a460989
.dword 0x7fe45c7f25bfedc8
.dword 0x7fc06137ba060843
.dword 0x3fff7b7e63ad7b56
.dword 0x3fff7b7e63ad7b56
.dword 0x7fe4a7fbbadc2ea0
.dword 0x3fde1e7e86e9b07a
.dword 0x7fd3712b27b3110f
.dword 0x7fcdc513d91c3097
.dword 0x400fa488909a06e9
.dword 0x7fed6ffc4c267e71
.dword 0x7fa43f684016618f
.dword 0x7fa43f684016618f
.dword 0x7fe908971c80aada
.dword 0x7fdd44d040ae163f
.dword 0x3ff34b7acba40d23
.dword 0x7fdd44d040ae163f
.dword 0x7fe4b7136762d31f
.dword 0x3ff2e729b7d2c834
.dword 0x3ff2e729b7d2c834
.dword 0x7fee20b0cf4d346f
.dword 0x7fee20b0cf4d346f
.dword 0x7fee20b0cf4d346f
.dword 0x7fe0b73813e3367a
.dword 0x7fe0b73813e3367a
.dword 0x7fe0b73813e3367a
.dword 0x7fbbea7047295f77
.dword 0x7fbbea7047295f77
.dword 0x7fc3c2abc26edf17
.dword 0x7fef1c9969cbb9a7
.dword 0x3fd05b157dd288f1
.dword 0x7fcfcdb5dc879b63
.dword 0x7fea6b3a0e1c87b2
.dword 0x3ff094361d976ea2
.dword 0x7feb5ff341df6314
.dword 0x7fd90eae7f7120e1
.dword 0x4002f01f600da378
.dword 0x7feda891abb66fc1
.dword 0x7fe2ca2659f59483
.dword 0x3f33f197caabd246
.dword 0x7f276bc4ae4a7fff
.dword 0x7feca98bbf378d1d
.dword 0x3fe0e87d86e10872
.dword 0x7fde4a0707bf0a3d
.dword 0x7fa082381b36797f
.dword 0x4036013ae6c00679
.dword 0x7fe6b4520f0e04f2
.dword 0x7febeeb913df45f9
.dword 0x3f99961122d0989c
.dword 0x7f96557e9049a15f
.dword 0x7fee86b4ad3f811f
.dword 0x3fec78145e474c93
.dword 0x7feb286aab41e211
.dword 0x7fd9959ef52a94d7
.dword 0x3ff1d85d189e3f0d
.dword 0x7fdc88f1a37466c9
.dword 0x7fd15867f72ca04d
.dword 0x3fed55df652a8155
.dword 0x7fcfcd544627292b
.dword 0x7feb9c8f6764ffdb
.dword 0x3fd004b48dee6c8d
.dword 0x7fcba4ae217b4833
.dword 0x7fe01bd1661ded56
.dword 0x3ff4031c2b470846
.dword 0x7fe425e753294784
.dword 0x7feef7471570c9e8
.dword 0x3fc0a65ebf53446a
.dword 0x7fc01ca1fafcf0e3
.dword 0x7fafc643dfe19f4f
.dword 0x4011e3199a5d96aa
.dword 0x7fd1c2d3ec982081
.dword 0x7fd81e91ca297381
.dword 0x3fecb794e6dc29f6
.dword 0x7fd5a51e9e0452c5
.dword 0x7fda7d1185f77b3d
.dword 0x3ff4436e7bd34d14
.dword 0x7fe0c5fc44d70b87
.dword 0x7fe7fd31f37b82a0
.dword 0x3fe19ebc58134c63
.dword 0x7fda6b03c3100d4d
.dword 0x7fe23a4efccefe44
.dword 0x3ff8ec0956e7209d
.dword 0x7fec645d2c14904c
.dword 0x7fce9bb325e4941f
.dword 0x3ff149685b9fa191
.dword 0x7fd088ee2e7990e9
.dword 0x7fd5e29834726e1b
.dword 0x3fd10c937f937819
.dword 0x7fb751f56a379ae7
.dword 0x7fc8a0cbb3e7c653
.dword 0x3fde2c97cd66ceb8
.dword 0x7fb73910e5971a27
.dword 0x7fdccc26e36b5cc1
.dword 0x3fd3dafc013c1302
.dword 0x7fc1de48a8c3ba83
.dword 0x7fed0013b154d27f
.dword 0x3ff197bef7179510
.dword 0x7fefe31fc7097844
.dword 0x7fdfd016f467310d
.dword 0x3fdc5433925a1d2e
.dword 0x7fcc29c9973f6e4f
.dword 0x7fca9b9118027a27
.dword 0x40116ed8737eb4bc
.dword 0x7fecfd9fa33f4f74
.dword 0x7fc56b267a4a915b
.dword 0x3feeea25c12b5249
.dword 0x7fc4b12ce133e613
.dword 0x7fe1d59452acedd2
.dword 0x3fe6a4c2dfad0480
.dword 0x7fd93d5258f53b8f
.dword 0x7fe4fde9e8f46499
.dword 0x3fdd599f93300a4c
.dword 0x7fd340e6dbdd8e87
.dword 0x7fef3dd17a9c7c45
.dword 0x3fd10e1a66abf85e
.dword 0x7fd0a69c1b3feaa3
.dword 0x7fd30eb1ba0bc2dd
.dword 0x4003dae133efb51d
.dword 0x7fe7a6277ef479a3
.dword 0x7fde38439b51a599
.dword 0x3fe74a43880b19cb
.dword 0x7fd5fe927a41040f
.dword 0x7feda82856334f8f
.dword 0x3fc19556b23fb28f
.dword 0x7fc04bbcc2bb71c3
.dword 0x7fd2513cb3e2752f
.dword 0x3fc5e75e11fe8993
.dword 0x7fa913803a5ca7bf
.dword 0x7fe815db388de5f4
.dword 0x3feb669a948d2fc8
.dword 0x7fe49faafb7a58a8
.dword 0x7fe76f6e71a4bf4c
.dword 0x3fe3b34431b2a732
.dword 0x7fdcdae5aceb580f
.dword 0x7fe706bd145282bf
.dword 0x3fb19a17f4fcf871
.dword 0x7fa954ec3bbde56f
.dword 0x7fee1a356a3773df
.dword 0x3fe2aee81e6a084d
.dword 0x7fe19346e8d05179
.dword 0x7fe4304c6599a484
.dword 0x3ff72a45d80f9b30
.dword 0x7fed3ac4bb80be68
.dword 0x7fec4be9601db523
.dword 0x3fed6229120ea38a
.dword 0x7fe9fb984b0bef61
.dword 0x7fd7e4f46647f8df
.dword 0x40047d067cf860fe
.dword 0x7fee98e7e5b60378
.dword 0x7fe059cf0d432d00
.dword 0x3fd7c77fccc0aee3
.dword 0x7fc84cf93c5ef5cb
.dword 0x7fcfe9df4f895fc3
.dword 0x3ff10d7ac367e0e5
.dword 0x7fd101b0137d6bc7
.dword 0x7fd247a67d1467bb
.dword 0x400a34727c10e472
.dword 0x7fedf05a34987d02
.dword 0x7fba09a841a6d9bf
.dword 0x402069b2b1d1d7b6
.dword 0x7feab5aa6ea5dd9a
.dword 0x7fd19c24c6d583c7
.dword 0x3fc67434a96b4133
.dword 0x7fa8b69891f5f7cf
.dword 0x7fd715dc8f67403b
.dword 0x3ff2fcb638fbe403
.dword 0x7fdb65375e0b9593
.dword 0x7feff61bb37ad9ea
.dword 0x3fe2e05ec6bcd531
.dword 0x7fe2da89004e3bfa
.dword 0x7fd7d27c388512d7
.dword 0x3ff0e389aa8e6cdc
.dword 0x7fd92543731f0cc1
.dword 0x7fecd9a21ef5aa64
.dword 0x3fd4931479e98e13
.dword 0x7fd28c9f8a06941f
.dword 0x7feda50f38c8705c
.dword 0x3fe8a127dbe4a28e
.dword 0x7fe6d116cc0c00bf
.dword 0x7fead9fee197d159
.dword 0x3fc24fb7d6ccf2d4
.dword 0x7fbebb079e138157
.dword 0x7f5c87e298ac65ff
.dword 0x407af1d2bfcc9208
.dword 0x7fe80603655a6422
.dword 0x7fd43a9f68f79f51
.dword 0x400544340f745d01
.dword 0x7feae32c315346b0
.dword 0x7fc202b1b6a8ad9b
.dword 0x40038e5b08809be3
.dword 0x7fd603716b0243ef
.dword 0x7fdcd941bb3e4c7b
.dword 0x3fe56f945237a31e
.dword 0x7fd3532a75d14531
.dword 0x7f6d69c3ccc232ff
.dword 0x40611e3b1516326d
.dword 0x7fdf77f2f573e477
.dword 0x7fdf1cedb32713af
.dword 0x3faa27c9c8f72760
.dword 0x7f996e30945c401f
.dword 0x7fcd9dfa57f75957
.dword 0x400f09af67a7bf04
.dword 0x7fecba014b812c36
.dword 0x7fec612cc07361be
.dword 0x3fe960c4699b0a59
.dword 0x7fe681bcad75f3fa
.dword 0x7fea3f37be86d406
.dword 0x3fe3d922ae1c5554
.dword 0x7fe047a23d1e470a
.dword 0x7fee7cd94d702ecf
.dword 0x3fc1d0bdfeb27173
.dword 0x7fc0f933f9a762d3
.dword 0x7fc2248efbf5b40f
.dword 0x400d942f4283c10f
.dword 0x7fe0c525750c17a5
.dword 0x7fcaf88181319d3f
.dword 0x400613aa15e6dbf3
.dword 0x7fe29b6bf05c7869
.dword 0x7fcadbf22eaa3553
.dword 0x40120670c63d396f
.dword 0x7fee42403fb8de70
.dword 0x7fdcc3cdfff3a4f1
.dword 0x3fe320baeabd9ff9
.dword 0x7fd131ae231843f1
.dword 0x7fea3c9a1606c6ff
.dword 0x3ff2e46c14fbf2f4
.dword 0x7feefabe27fa7ad1
.dword 0x7f91ecb025113f7f
.dword 0x403a3860dd245747
.dword 0x7fdd5fc7289c9947
.dword 0x7fef4cce5857ea2c
.dword 0x3feea15191aacbae
.dword 0x7fedf5cba9e44bbc
.dword 0x7fec98e2fe32411b
.dword 0x3fcc89ea2030c8a4
.dword 0x7fc9810664fc9e8f
.dword 0x7fddd8802e2329e5
.dword 0x3fd043635ce6ecfb
.dword 0x7fbe56341fc91de7
.dword 0x7fe08775dd246585
.dword 0x3fecc9528d2934bd
.dword 0x7fddbd0943ba2885
.dword 0x7fe59f65a9f55d73
.dword 0x3fdb8c7278d10c73
.dword 0x7fd29d647dabc483
.dword 0x7fe581097465e852
.dword 0x3ff07b060581b5cb
.dword 0x7fe6266184deeb07
.dword 0x7faf0ef5df1750af
.dword 0x4011b9121c3beffe
.dword 0x7fd13392afc7b2cb
.dword 0x7fe22b1a9488a4c1
.dword 0x3f967d388683bd28
.dword 0x7f8989757b7fec3f
.dword 0x7fe7c86f8ec5841e
.dword 0x3fda36c8ac35feb7
.dword 0x7fd37b9204f81de1
.dword 0x7fc2ded3254ef123
.dword 0x3ffb8f6061d94b51
.dword 0x7fd0408ebd3657a3
.dword 0x7fe49183a8cb0c90
.dword 0x3fbedb035aa45d10
.dword 0x7fb3d5317330c917
.dword 0x7fe88b04e42fde91
.dword 0x3fe9bde4ad39edb9
.dword 0x7fe3be404a87fad7
.dword 0x7fdea81a3f48a2bd
.dword 0x3ff6d6443f906711
.dword 0x7fe5e0d79d2636fd
.dword 0x7fdf9cdb56c3a5e1
.dword 0x3fe8c8a81d881e03
.dword 0x7fd87bdef09d29c9
.dword 0x7fe7acad029987d7
.dword 0x3ff51a13afe014c9
.dword 0x7fef3938cdd76361
.dword 0x7fe756b66f069892
.dword 0x3fd202115a643acf
.dword 0x7fca449163b1185b
.dword 0x7fb30f27bb1386cf
.dword 0x400c89149824f6db
.dword 0x7fd0fee7e9e0d747
.dword 0x7fe793c51de53b23
.dword 0x3fd5e80a6126c9ba
.dword 0x7fd023f0567947b1
.dword 0x7fe518fb3e1a9d28
.dword 0x3fb9a5919bbce5f4
.dword 0x7fb0e8ad17dd00bf
.dword 0x7fe01856bf9767f9
.dword 0x3ff106755dbc7ecc
.dword 0x7fe1205b5c5e2605
.dword 0x7fe986bd0447cb50
.dword 0x3fee045a79c60316
.dword 0x7fe7f1ca37bae27e
.dword 0x7fdf50991a1c3f71
.dword 0x3f7bbeba14cf9d4a
.dword 0x7f6b26a5d3ea4fff
.dword 0x7fe40a0c122032cf
.dword 0x3ff16410765a08c0
.dword 0x7fe5c8003cfa6dd9
.dword 0x7fe1df748833ffc0
.dword 0x3ff1fbc689ddf505
.dword 0x7fe416ab0c134af7
.dword 0x7fbadbce4c0d41b7
.dword 0x401fddbc80b63304
.dword 0x7feabf0c19ce382c
.dword 0x7fc10932aa31a49b
.dword 0x4005ae769b6b5d4b
.dword 0x7fd715d4cfad16c1
.dword 0x7fcd6eb2915c891b
.dword 0x3fc1589235a4123d
.dword 0x7f9fe88b855bbcbf
.dword 0x7fe5da4763d30607
.dword 0x3ff03e904a63e388
.dword 0x7fe62fba4a9251b3
.dword 0x7fe2b0a1c7311e4e
.dword 0x3ff875610f99c362
.dword 0x7fec920faad8412d
.dword 0x7fe9bfeb40107735
.dword 0x3ff06e9e5acdeb98
.dword 0x7fea71f18abef271
.dword 0x7fe023cec2461f7c
.dword 0x3ffa7c885c017c23
.dword 0x7feab7cf0b406a44
.dword 0x7fc1d4d4ee8ee657
.dword 0x400e13e6dd1aee1f
.dword 0x7fe0c29ea302ef9a
.dword 0x7fe77bb772cde0e8
.dword 0x3ff1b5679b9667ec
.dword 0x7fe9fdb28605ac8b
.dword 0x7fec8acab20d4af1
.dword 0x3fe681b357406e10
.dword 0x7fe4131ad1b78beb
.dword 0x7fa66b63b4ca758f
.dword 0x40331363596b9a6e
.dword 0x7feabab122dc2bd6
.dword 0x7fe72c48ba798e5e
.dword 0x3fec6c68c15f5c70
.dword 0x7fe49540f49439eb
.dword 0x7fef82e691fa0d23
.dword 0x3fc36d8f2c34be03
.dword 0x7fc3219bc48bfcbb
.dword 0x7fd8edd67e1d4f43
.dword 0x3feacb0198fb28cb
.dword 0x7fd4df644dc3f26f
.dword 0x7fe6e96b1322dbaa
.dword 0x3ff3a508bfdccb1a
.dword 0x7fec2182ce62e070
.dword 0x7fe8046dc89efa69
.dword 0x3fec08f4f8e73967
.dword 0x7fe50a9907923a77
.dword 0x7fe2bd1927d49ed6
.dword 0x3feceb14dd622f0f
.dword 0x7fe0ef1eeb69b9b5
.dword 0x7fd378be2d09905b
.dword 0x3fe87c8ff0970ad9
.dword 0x7fcdccb4315a0a87
.dword 0x7fa5555f1936f22f
.dword 0x3fe1467f94672e9e
.dword 0x7f9708b4a65acd3f
.dword 0x7fb6fa14249a8b0f
.dword 0x4011ce09d7b99965
.dword 0x7fd991974cb1c493
.dword 0x7f7447022e841cff
.dword 0x404aae4b950ea7ce
.dword 0x7fd0e823c6894e81
.dword 0x7fc9b9b6e3f88af3
.dword 0x4004174a18832cd7
.dword 0x7fe026cb5b1ade26
.dword 0x7fde608faa3b3f0d
.dword 0x3ff0f2ab24ea4e21
.dword 0x7fe016a48a9fc325
.dword 0x7f51835aaec2f3ff
.dword 0x4076505bdb287230
.dword 0x7fd86c9200abcecf
.dword 0x7fd3cfa211be3073
.dword 0x3ff26e63c71e4bb3
.dword 0x7fd6d2455976b29f
.dword 0x7fcf4a05d08d17ff
.dword 0x400f9a76c4edad95
.dword 0x7feee6bdff8790dd
.dword 0x7fef1fba43f08c95
.dword 0x3fe1ffc5a61fb28d
.dword 0x7fe181a0054b4c77
.dword 0x7fd0d8f972e9c2ef
.dword 0x400d3a95f351ef8f
.dword 0x7feec6f48d50d204
.dword 0x7fc42a0a144df96b
.dword 0x4006a3ec4d3e2eea
.dword 0x7fdc8863f0076b57
.dword 0x7fd2c178685ca577
.dword 0x3ff915a69047262e
.dword 0x7fdd67ad517b99d7
.dword 0x7fd20b31e4ca4c55
.dword 0x3feb7ddd6aeb162b
.dword 0x7fcf00d55b153d67
.dword 0x7febdb72220615e4
.dword 0x3fe8a5ff217edb25
.dword 0x7fe5751737e23b77
.dword 0x7fb5a0ccf5498b87
.dword 0x4023ea4e4a974684
.dword 0x7feaebaced8605de
.dword 0x7fd05ba66b72282d
.dword 0x3fe47030685b1521
.dword 0x7fc4e54310e2ec3f
.dword 0x7fb21ae3f403ac27
.dword 0x4024f3b0adcd2e0d
.dword 0x7fe7b55d4384f883
.dword 0x7fabd8d07591377f
.dword 0x400318515d6311d4
.dword 0x7fc09de5303a6393
.dword 0x7fd9e69137ea5e7f
.dword 0x3feb7b3eacaee577
.dword 0x7fd63e4b7fdae4e9
.dword 0x7fe69d7e96ea561f
.dword 0x3feccbeb890c5f19
.dword 0x7fe459ec548f1271
.dword 0x7fd5eedf6196c86d
.dword 0x40036dbccb9a7fa5
.dword 0x7feaa21763871829
.dword 0x7fe601faf4dc586f
.dword 0x3ff6db250f0a73a8
.dword 0x7fef702724eb1369
.dword 0x7fd928527fc33323
.dword 0x3ff49fb921840ebb
.dword 0x7fe036c5753b2b79
.dword 0x7fdfae1b145e0417
.dword 0x3ffafa3294e54a15
.dword 0x7feab528478e0e2d
.dword 0x7fea34980299b561
.dword 0x3fe0e340b6f18efb
.dword 0x7fdba8cc2d408803
.dword 0x7fede89819c9c8ed
.dword 0x3fbd1c51041f81fa
.dword 0x7fbb35411510f5bf
.dword 0x7fc8401c483a4e5f
.dword 0x40040c19bce4afc0
.dword 0x7fde627a71f726d1
.dword 0x7fe77564fe05ca27
.dword 0x3fe80dd7fff0060e
.dword 0x7fe1a231c7e9865c
.dword 0x7fd0075a384bac19
.dword 0x3faf5f5e6496f287
.dword 0x7f8f6dc904b8153f
.dword 0x7fd63543c66def39
.dword 0x3faaccb6ce241fe2
.dword 0x7f9299597f4bbe1f
.dword 0x7fe000b9ceb049f9
.dword 0x3fd6c463ff747485
.dword 0x7fc6c56c64540f3f
.dword 0x7fe84dcf48d2cffc
.dword 0x3fd86f131f3eab76
.dword 0x7fd28eb7e390c445
.dword 0x7fd3f7aefd0784b5
.dword 0x3fef488ab585c398
.dword 0x7fd385355c3fa9ed
.dword 0x7fa9cb5ecb97e53f
.dword 0x401005119d510e39
.dword 0x7fc9d38abeea7bb3
.dword 0x7fbc0502df03ca97
.dword 0x3ff799e7f8f6d9cb
.dword 0x7fc4aa5d2430b91b
.dword 0x7fe0dc7ce6d690ca
.dword 0x3fdcf5fb3c558905
.dword 0x7fce85138f02904f
.dword 0x7fd1249d34f93fa7
.dword 0x3fdee03537e23353
.dword 0x7fc08a7030b0f86f
.dword 0x7fe1b2b385abc95c
.dword 0x3ffaceecb7c0e89e
.dword 0x7feda74657a9659d
.dword 0x7fdd0aa01817a599
.dword 0x3fe7eaba18734fc7
.dword 0x7fd5b4a9a7f456a3
.dword 0x7fb10e2ca87661e7
.dword 0x4029e6804195486b
.dword 0x7feb9bda407c9909
.dword 0x7fb5702673763077
.dword 0x402472f6a2ead396
.dword 0x7feb663998e3beea
.dword 0x7fe44d54145ab105
.dword 0x3ff437635ea7ce87
.dword 0x7fe9a6f1010ace1c
.dword 0x7fb289bae89b0547
.dword 0x4029ea8d3864183b
.dword 0x7fee06f5f8113c54
.dword 0x7fe605c7b0bbbe88
.dword 0x3fe3c6ba367054d3
.dword 0x7fdb3864f7298b49
.dword 0x7fb6e6fec8ee140f
.dword 0x3fe493aaf3b6ab0b
.dword 0x7fad741d732c713f
.dword 0x7fe2425049fa7b93
.dword 0x3ff3a3ed6a3e60e5
.dword 0x7fe669d1d94ee5cc
.dword 0x7fc31e7d2895e8b3
.dword 0x40189d6e02e36b0a
.dword 0x7fed69da5e0f232b
.dword 0x7fea351367c8b4a1
.dword 0x3fd435937d1093f0
.dword 0x7fd08d0cd33f6191
.dword 0x7fdb063666cbf4b1
.dword 0x4001448089b2ebd6
.dword 0x7fed2a4d4eb4326d
.dword 0x7fd14efd260bd491
.dword 0x3fdea8a7d6d20de8
.dword 0x7fc09546cd1dcec3
.dword 0x7fa444e739fa3e6f
.dword 0x4033ad7200a2e80d
.dword 0x7fe8ed8c04b9e89a
.dword 0x7fbad2d5e2b0a13f
.dword 0x400446a9e40825ba
.dword 0x7fd0ff014a2ce4a1
.dword 0x7fe93a4528ea0a04
.dword 0x3ff3b8851df15037
.dword 0x7fef18221f816cf7
.dword 0x7fb0755c839c777f
.dword 0x402ea50563547915
.dword 0x7fef85cd4bac97e1
.dword 0x7fe3f735e92e8b84
.dword 0x3fea45ded224b04e
.dword 0x7fe06473dfd7d552
.dword 0x7f928415313233bf
.dword 0x40325542e0203a76
.dword 0x7fd53742ec23b45b
.dword 0x7fe1bac795d5adc9
.dword 0x3fe97077011e014f
.dword 0x7fdc30772da00dd3
.dword 0x7fe71bdc1176bc40
.dword 0x3f9ba063f67a6ca8
.dword 0x7f93f3552b42eaff
.dword 0x7fc90e2945b4b1b3
.dword 0x3ffa09379e91019b
.dword 0x7fd462b910bcd037
.dword 0x7fe07fd62d9d804c
.dword 0x3fe50bebd7e9d921
.dword 0x7fd5b414335ec631
.dword 0x7fc4aaeb7b4d19eb
.dword 0x40056153ee560dc4
.dword 0x7fdb9e0daff3dc55
.dword 0x7fefad06e6abdc66
.dword 0x3feae929f80c30f1
.dword 0x7feaa36300e514cc
.dword 0x7fd97d0a671457af
.dword 0x3ff3936397ae5d5c
.dword 0x7fdf2f47d14d678b
.dword 0x7fcc1b743bf268e7
.dword 0x401159cba2b1fd8a
.dword 0x7fee7ae9f060626a
.dword 0x7fec402aa48c8c77
.dword 0x3ff18907c865e8fb
.dword 0x7feef62079def623
.dword 0x7fe520d24576f8bf
.dword 0x3fcbb7eec62a971b
.dword 0x7fc24d22c40cbacb
.dword 0x7fc3c4e82f083607
.dword 0x40128bf65ecaacb4
.dword 0x7fe6ea743e92e6a6
.dword 0x7fe91600fc7d4948
.dword 0x3ff24ee350686e3f
.dword 0x7fecb470c71b9436
.dword 0x7fb2b80ae6ce5acf
.dword 0x40224fb884b09188
.dword 0x7fe56c50d9360bf9
.dword 0x7fb29261957a1af7
.dword 0x400a894f7a055317
.dword 0x7fcecd4036da79a7
.dword 0x7fbf229dcc8e3fb7
.dword 0x400d14daf1382c6d
.dword 0x7fdc4ba9aa872069
.dword 0x7feae14739ca44d5
.dword 0x3fc4e58ce86f883f
.dword 0x7fc18d9f06aa8b9b
.dword 0x7fe1e7897f922e58
.dword 0x3ffaf951defdb85e
.dword 0x7fee2f3e58cf735c
.dword 0x7fee2657e7b613a3
.dword 0x3fd1a22aa692456f
.dword 0x7fd09d28ff61dcaf
.dword 0x7fe65ffe2e17c444
.dword 0x3ff40eb8cac5594e
.dword 0x7fec0c9423810004
.dword 0x7fde9825a40fe033
.dword 0x3fff83254b5a727e
.dword 0x7fee20c6f8fd997a
.dword 0x7fdcf33bc410b42b
.dword 0x3ff2dce8fa7b9c8d
.dword 0x7fe110ac9f3abd23
.dword 0x7fe063a074cc3059
.dword 0x3ff5a419ce7278f9
.dword 0x7fe62ada351bd685
.dword 0x7fe399d413e4b88b
.dword 0x3fea694f80594a8c
.dword 0x7fe02d7dc26caf5a
.dword 0x7fed331a1c40e3c1
.dword 0x3fdf16a8dc465195
.dword 0x7fdc5e2e829adb51
.dword 0x7fe1f9afe81c88d6
.dword 0x3ff5a5b1745cb880
.dword 0x7fe851dd239377e5
.dword 0x7fe8b65ce8641755
.dword 0x3fe509bbf55e512c
.dword 0x7fe03f3169cf0733
.dword 0x7fcfcea9730f9703
.dword 0x3ff1d47ffdf2e702
.dword 0x7fd1b90260566c5d
.dword 0x7fbb29fc9c4366f7
.dword 0x40151f17371d44aa
.dword 0x7fe1edf2283a2fb1
.dword 0x7fe1c62e09ee1112
.dword 0x3ff69777b155c7d7
.dword 0x7fe918c2971b2037
.dword 0x7fd4dce43d756a23
.dword 0x3ff9711b27824018
.dword 0x7fe096500a1f76b9
.dword 0x7fe734c8847b3984
.dword 0x3fe88e1d72cdb3a6
.dword 0x7fe1cea5f83f3cc6
.dword 0x7fc60f750243d353
.dword 0x4005fa870dff129f
.dword 0x7fde4db54cf3eb57
.dword 0x7f701b818d54fa7f
.dword 0x406967222f02addf
.dword 0x7fe992cde89965d1
.dword 0x7fdc2b01ae3648db
.dword 0x3fdaa05636c3d5a4
.dword 0x7fc7701449bca3c7
.dword 0x7fe0c090e20accd5
.dword 0x3fa24b326b764444
.dword 0x7f93275e6fb817ff
.dword 0x7fe00d821485e6cc
.dword 0x3ff0f663aff0a092
.dword 0x7fe104b5c89b7afe
.dword 0x7fdaeb92d69dfb67
.dword 0x4001744c7b952882
.dword 0x7fed5df89b833eac
.dword 0x7fe2aacb0b429baf
.dword 0x3ff8cd8ba7eb2d96
.dword 0x7fecefffca1129bf
.dword 0x7fd6a465bf2e7f6d
.dword 0x3ff4b8718f931656
.dword 0x7fdd5282754cbf99
.dword 0x7fc0c705b0f97703
.dword 0x401bc56ad55a2445
.dword 0x7fed1edc16f5ae1f
.dword 0x7fd0996ecc5ad59d
.dword 0x3ff9d939ce559199
.dword 0x7fdad11a06ac6e6b
.dword 0x7fcec9feac380847
.dword 0x4003810ac8e0bd02
.dword 0x7fe2c417e14dd023
.dword 0x7fd01e0fc1b3c5e3
.dword 0x3ff29cfe82489e48
.dword 0x7fd2bff73402612d
.dword 0x7fea6fdd237ee16f
.dword 0x3fd0594fec5c4774
.dword 0x7fcb036f7072a98b
.dword 0x7fdbc388a7e47403
.dword 0x4000137832c6112c
.dword 0x7febe5516cc77b12
.dword 0x7fe0d9c07eff7bef
.dword 0x3ffc5e2e7ea09ee5
.dword 0x7fede041208e97bd
.dword 0x7fef118846e7cd8c
.dword 0x3fe569b4d6573125
.dword 0x7fe4ca2288693d12
.dword 0x7fc0c4143057a407
.dword 0x3fbbd642f851c58f
.dword 0x7f8d2b66cca2a8ff
.dword 0x7fd66d13a13f4f01
.dword 0x3ff90d6c3ef0fe00
.dword 0x7fe18e9f823171c4
.dword 0x7fef5eaa91e5bdd1
.dword 0x3fe57482fe1c8752
.dword 0x7fe5085783bff77a
.dword 0x7fc2b5d6f9c9011b
.dword 0x40169dfb973f79f1
.dword 0x7fea72c61a622bce
.dword 0x7fecf48c61dc85b9
.dword 0x3fec85988489669a
.dword 0x7fe9cedd3e9f9949
.dword 0x7fc042cb1070d70f
.dword 0x3ff3096f727622ae
.dword 0x7fc358e7f973f797
.dword 0x7fe7318cf8a2ab28
.dword 0x3fce05d4b14854ca
.dword 0x7fc5c2ae0fe3c9c7
.dword 0x7fd9b05255f262e5
.dword 0x4002deda15b6308d
.dword 0x7fee4c293c56f511
.dword 0x7fef17d106e32604
.dword 0x3fda12980fda43d2
.dword 0x7fd9556afbb48d81
.dword 0x7fd547f638b1a9e7
.dword 0x400344561a7bbaf9
.dword 0x7fe9a058bfc8df90
.dword 0x7fc6d9ccb6f15b67
.dword 0x4011ae7a70da303c
.dword 0x7fe94098f28b1a38
.dword 0x7fe8012690cc1a61
.dword 0x3fe4646a264c388c
.dword 0x7fde9816a71cb1cb
.dword 0x7fed1ce4f18ddc4f
.dword 0x3feb842ba2798159
.dword 0x7fe908a00ed8919c
.dword 0x7fb5b40afab57167
.dword 0x401f2ae85558a252
.dword 0x7fe52384847ac803
.dword 0x7fe4e53235604357
.dword 0x3ff3980124aa4300
.dword 0x7fe996ae7a92917a
.dword 0x7feae4d90c01f43f
.dword 0x3fe2419596701007
.dword 0x7fdeafb14f460a39
.dword 0x7fe3f85a17f0e51b
.dword 0x3ff7151666c9f6a7
.dword 0x7feccf536e70e88e
.dword 0x7fc92daae5675f67
.dword 0x3ff09fa7537d57df
.dword 0x7fca28e807b8f2a7
.dword 0x7fcc381c01a26f87
.dword 0x3ff0769999898d4c
.dword 0x7fcd0948b7857293
.dword 0x7fee8f5d7be5e740
.dword 0x3fd86fb25e38210f
.dword 0x7fd75631c0a4f12b
.dword 0x7fedfc13e2e47ba6
.dword 0x3ff0df028bb6dde5
.dword 0x7fef9e01fd65e87a
.dword 0x7fee9bc581608b2c
.dword 0x3fddec7e893c57ef
.dword 0x7fdc9f60d677f14f
.dword 0x7fd09650118c95b7
.dword 0x40056051ce711386
.dword 0x7fe62923c66ba98f
.dword 0x7f9c9b89652275bf
.dword 0x402400e03101e0da
.dword 0x7fd1e1fe4bc725cb
.dword 0x7fd6c18965d9189d
.dword 0x3fb4dd84333cff51
.dword 0x7f9dacf8feab547f
.dword 0x7fcd05ccb332dd2f
.dword 0x4002438416c6ef58
.dword 0x7fe0907f15f89bcc
.dword 0x7fea2fc8919a4cff
.dword 0x3fecee91c7df3fa3
.dword 0x7fe7ad0a2f369b1a
.dword 0x7feb48bc30c7d45b
.dword 0x3fee40bfa9b7f1f5
.dword 0x7fe9cb6550f52209
.dword 0x7fe9f7e66f275221
.dword 0x3ff36b4a098857b1
.dword 0x7fef8483a30885ab
.dword 0x7fd5193b35176edb
.dword 0x3fe5a6779344470f
.dword 0x7fcc8ca129cfc863
.dword 0x7fe10aff362a9091
.dword 0x3ff7677719c0fb36
.dword 0x7fe8ee048602c301
.dword 0x7fc561a225b0ee73
.dword 0x40127c20f760e378
.dword 0x7fe8b3b720e423c7
.dword 0x7fd0b61c8425ad3f
.dword 0x3ff6784267dd63bc
.dword 0x7fd7780267441d0d
.dword 0x7feba05bd05d31dd
.dword 0x3fe9ce23435bfc76
.dword 0x7fe6473e7b61bd02
.dword 0x7fe0e645c5313e6b
.dword 0x3ffda53976a38938
.dword 0x7fef4fe1d69258d9
.dword 0x7fe161ab23a815d4
.dword 0x3fa97d93afcb77c8
.dword 0x7f9bb106e10ad3ff
.dword 0x7fe0e77c0d726f3b
.dword 0x3fd1c2e7961399e0
.dword 0x7fc2c3df3b0a844b
.dword 0x7f97a6679a447c1f
.dword 0x40449681b9694e3f
.dword 0x7fee6e794bcede93
.dword 0x7fea85fbb6c4aa86
.dword 0x3fc8ee51f605efcf
.dword 0x7fc4aa053842e7fb
.dword 0x7fd5edbeddec3d41
.dword 0x3fe8ba02b0bd188e
.dword 0x7fd0f1c6e3d437bb
.dword 0x7fb5fc89849c9c47
.dword 0x3ff30984b5bb5267
.dword 0x7fba28f7b7fd5427
.dword 0x7fddd2c573d7d961
.dword 0x3ff09cdb83340ea0
.dword 0x7fdef725a27eac6b
.dword 0x7feb2a7dc5f3c81b
.dword 0x3ff2b794582212d1
.dword 0x7fefc77f5be94a6d
.dword 0x7fd74e742bcb0feb
.dword 0x3fd596c4cb3d62af
.dword 0x7fbf7296a3b0f9d7
.dword 0x7fd024fdb7a4cc69
.dword 0x3ff608b0699807b2
.dword 0x7fd63ba15cd177bf
.dword 0x7fe3a67401814244
.dword 0x3fcef6f697feeed4
.dword 0x7fc303b3ca268aa7
.dword 0x7f9a1ce7890019bf
.dword 0x404124a72ef326d4
.dword 0x7febfa87e4d4f18b
.dword 0x7fb9f9919e5dc9c7
.dword 0x400cab41e926fa19
.dword 0x7fd745628ce8ef13
.dword 0x7f2e93a4462ebfff
.dword 0x4084435ea24b2dc9
.dword 0x7fc35ca63895fd77
.dword 0x7fd5c37064ce4a17
.dword 0x3fc3ca406e5d0503
.dword 0x7faaeb30868d631f
.dword 0x7fcab8c0870ccebf
.dword 0x3fe8e0e153843530
.dword 0x7fc4c659d1c2442b
.dword 0x7fafdef24c32f24f
.dword 0x3ff14f92f8aa95db
.dword 0x7fb13db17f82659f
.dword 0x7fba81682f68a287
.dword 0x4018813c25ec02a6
.dword 0x7fe44c19a19a0da1
.dword 0x7fd91cbc6b2f3f1f
.dword 0x3ff044e559238bd2
.dword 0x7fd988de83272863
.dword 0x7febfc0312b8e8ac
.dword 0x3fed32130c641952
.dword 0x7fe9882d363cb1ba
.dword 0x7fecc8f9737be20b
.dword 0x3febbf242bc1ad44
.dword 0x7fe8f58293cebb41
.dword 0x7fe5a36e5af58a21
.dword 0x3fb470e2ee853fca
.dword 0x7faba4f4dd39a68f
.dword 0x7fe07ee7e3cd0780
.dword 0x3ff32b473be6de7a
.dword 0x7fe3c351de9eaf86
.dword 0x7fee7fc7388080d7
.dword 0x3fe72ee1e089780f
.dword 0x7fe61886276fd2a1
.dword 0x7fd7a1d9bce0e555
.dword 0x3ff88a395719f5a5
.dword 0x7fe21f77a1464222
.dword 0x7f70c4744a96187f
.dword 0x405995df19783280
.dword 0x7fdad004fc46d79f
.dword 0x7fe2da1988bab816
.dword 0x3fdc8b320bc03279
.dword 0x7fd0d0d7324164e3
.dword 0x7fcdddf4f0316907
.dword 0x4000a089784d8f3d
.dword 0x7fdf09a11ea6145f
.dword 0x7fc68e4d726bb7d7
.dword 0x3ff50f99573d3393
.dword 0x7fcdb0c33a8948c7
.dword 0x7feea5bbe8ec4a1e
.dword 0x3fc42ba30fb3fcfe
.dword 0x7fc351605153e7bf
.dword 0x7fd6f61b5576377f
.dword 0x4003b74da956e014
.dword 0x7fec4b4ec1859266
.dword 0x7fd1d1a695a6b34f
.dword 0x3ff7dda5bc613ddb
.dword 0x7fda9437d7e448d9
.dword 0x7fea378a59b8daa9
.dword 0x3ff0df805a426e35
.dword 0x7feba5c2c2336cc0
.dword 0x7fe19503011c81db
.dword 0x3ff9b981b1265c97
.dword 0x7fec44ae288c365c
.dword 0x7fb4a0f9e552df5f
.dword 0x40164c1f3bb840b8
.dword 0x7fdcbf7c83369141
.dword 0x7fd90551e755a3bd
.dword 0x4001d4f75c9f66a4
.dword 0x7febe2b055fc6c3f
.dword 0x7fc08e386bd0561b
.dword 0x3ffea191d43c722f
.dword 0x7fcfb1d7c65dc9f3
.dword 0x7fae2f460df71daf
.dword 0x402a0fdaacb5fbcf
.dword 0x7fe8955d5926548d
.dword 0x7fc5829bf9c6538f
.dword 0x3fe64c2b92225f5e
.dword 0x7fbdf9fd6fcc553f
.dword 0x7f971abc78672bff
.dword 0x4034766a61cffe7f
.dword 0x7fdd8c6a62d7fd8f
.dword 0x7fd8b0ce9718a893
.dword 0x3ffbbb2d2c120e46
.dword 0x7fe5659a61635557
.dword 0x7fea4d3535c8560c
.dword 0x3fd6290a8daf6d85
.dword 0x7fd236d02dbba759
.dword 0x7fe4b547924fd121
.dword 0x3ff88dcc2c35a5a1
.dword 0x7fefc77122b9963b
.dword 0x7faf10102ecb507f
.dword 0x40272003d0023fd5
.dword 0x7fe6729f653d09b6
.dword 0x7fde57a08d938ac9
.dword 0x3ff669fb3be375cc
.dword 0x7fe540bc20428f59
.dword 0x7feae1041c5fd79f
.dword 0x3ff1fe9f24a7455f
.dword 0x7fee3ad3d9146af5
.dword 0x7fe28e8063300472
.dword 0x3fe92cabe4efe922
.dword 0x7fdd3277d88cd395
.dword 0x7fe63fdc11669528
.dword 0x3feb5ae43b7daad0
.dword 0x7fe30513f9fc9850
.dword 0x7fec03ea0b45fe6a
.dword 0x3fd6ef94d7b62f69
.dword 0x7fd4147072b89211
.dword 0x7fe8775d523b7834
.dword 0x3fe7fbb0c63a2134
.dword 0x7fe2563a7f28084c
.dword 0x7fa412f93d91b86f
.dword 0x40310b0d09a9e321
.dword 0x7fe56206384f7bbd
.dword 0x7fc3743aaeeeacbb
.dword 0x4009bcce06a14cb0
.dword 0x7fdf4b2be35fa361
.dword 0x7fdac2863951d7a5
.dword 0x3ffcf913c3426f6d
.dword 0x7fe83a7f9d5e43df
.dword 0x7fef5d97a44af52a
.dword 0x3fbed60f4ded2fb1
.dword 0x7fbe398f1061c0ef
.dword 0x7fe7579da5cb9b2f
.dword 0x3fd943579dbdd6c5
.dword 0x7fd26d9284df25e5
.dword 0x7fe0ce68e5faffc7
.dword 0x3ffaa92f4d6f9193
.dword 0x7fec0120595fb816
.dword 0x7fcf3e8df14f472f
.dword 0x4002d37c75ea8563
.dword 0x7fe261add5337480
.dword 0x7fe96b8e84b814c5
.dword 0x3fec2858a780d3ff
.dword 0x7fe65e29931e8ba7
.dword 0x7fdd00f90ae48549
.dword 0x3fe52abf187430ec
.dword 0x7fd32f61e9fcc711
.dword 0x7fd41afcbbb98d77
.dword 0x3ffdd2d56b3ae715
.dword 0x7fe2bcec3bb19a9d
.dword 0x7fe5c5d62a207b44
.dword 0x3fe41c339608df40
.dword 0x7fdb5dac1e37c3b7
.dword 0x7fae840b679dda5f
.dword 0x400ba5199ddf7689
.dword 0x7fca5cdae7f1504f
.dword 0x7fe1871f66d9338f
.dword 0x3fbd5883b90379fc
.dword 0x7fb012f0320f4e17
.dword 0x7fe471faa8c06142
.dword 0x3fe2a6cb740159e7
.dword 0x7fd7d55c80c789ad
.dword 0x7fc7220ac1a61dbb
.dword 0x4009beb88f04a963
.dword 0x7fe29c77f248e9cc
.dword 0x7fd3be2a8c7b6829
.dword 0x40052a3bf7842274
.dword 0x7fea1db506ba5ee9
.dword 0x7fc276f358a6a63b
.dword 0x3fea21385d91b7e5
.dword 0x7fbe27a1d244ecc7
.dword 0x7feb7892d8885ef9
.dword 0x3fd5973ca5b38043
.dword 0x7fd288f5635a6591
.dword 0x7fef3d7b58e26345
.dword 0x3fa86e30b0ef95b6
.dword 0x7fa7d9af63a065bf
.dword 0x7fe277a09a57982a
.dword 0x3fe5fee54562abf2
.dword 0x7fd9633680658f13
.dword 0x7fe413eed654fd22
.dword 0x3ff82ad1aedc7830
.dword 0x7fee53a1b43f58c2
.dword 0x7fbfb17c3e518207
.dword 0x3ffcd9e20ba842b1
.dword 0x7fcc93182a170b2f
.dword 0x7fdb2b5288790eeb
.dword 0x3fff29ef3e1f4174
.dword 0x7fea75929643064a
.dword 0x7fb1e20b87b382df
.dword 0x3ff4c6fe2f4aa781
.dword 0x7fb738f7d1a22dd7
.dword 0x7fa332a1858028cf
.dword 0x402721650593dd17
.dword 0x7fdbc0d9d3586aa3
.dword 0x7fadb208fa38975f
.dword 0x40217f84065d01af
.dword 0x7fe03ce9dcdbd9d6
.dword 0x7fe125f20460639f
.dword 0x3fe5d6446920937c
.dword 0x7fd767727ca98cc1
.dword 0x7fe4d474883171fe
.dword 0x3fbc7ce04a4c90c6
.dword 0x7fb28b2f3a47e0ff
.dword 0x7fe45c7f25bfedc8
.dword 0x3ff190fc2a460989
.dword 0x7fe65ac8770e2d21
.dword 0x7fc06137ba060843
.dword 0x3fff7b7e63ad7b56
.dword 0x7fd01d645c39dcc7
.dword 0x7fa43f684016618f
.dword 0x4033c8281523ad71
.dword 0x7fe908971c80aada
.dword 0x7fdd44d040ae163f
.dword 0x3ff34b7acba40d23
.dword 0x7fe1a5e53f1b819b
.dword 0x7fe4b7136762d31f
.dword 0x3ff2e729b7d2c834
.dword 0x7fe8793eff945d39
.dword 0x7fee20b0cf4d346f
.dword 0x3fe887e36352d615
.dword 0x7fe718749acdd3e9
.dword 0x7fe0b73813e3367a
.dword 0x3ff4e4526c9cf173
.dword 0x7fe5d38f146f80f6
.dword 0x7fbbea7047295f77
.dword 0x3ff6a6c7efc0ad33
.dword 0x7fc3c2abc26edf17
RVTEST_DATA_END

RVMODEL_DATA_BEGIN


signature_x15_0:
    .fill 0*(XLEN/32),4,0xdeadbeef


signature_x15_1:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_2:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_3:
    .fill 180*(XLEN/32),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*(XLEN/32),4,0xdeadbeef

#endif

RVMODEL_DATA_END
