
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.5.6
// timestamp : Mon Sep 20 13:28:25 2021 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/compliance_fd/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /scratch/compliance_fd/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV64D/rv64d_fdiv.cgf \
 \
//                  -- xlen 64  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2021. IIT Madras. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fdiv.d instruction of the RISC-V FD extension for the fdiv_b6 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV64IFD")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*64.*);check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",d_fdiv_b6)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x16,test_fp)
RVTEST_SIGBASE(x15,signature_x15_1)

inst_0:
// rs1 != rs2  and rs1 != rd and rs2 != rd, rs1==f10, rs2==f20, rd==f5, fs1 == 0 and fe1 == 0x39a and fm1 == 0x418e4602ec269 and fs2 == 1 and fe2 == 0x398 and fm2 == 0x045e78f2d1def and rm_val == 0  
// opcode: fdiv.d ; op1:f10; op2:f20; dest:f5; op1val:0x39a418e4602ec269; op2val:0xb98045e78f2d1def; valaddr_reg:x16; val_offset:0; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f5, f10, f20, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_1:
// rs1 == rd != rs2, rs1==f1, rs2==f17, rd==f1, fs1 == 0 and fe1 == 0x39b and fm1 == 0x02c5c0cc0268b and fs2 == 0 and fe2 == 0x408 and fm2 == 0x3f3e196c11b71 and rm_val == 4  
// opcode: fdiv.d ; op1:f1; op2:f17; dest:f1; op1val:0x39b02c5c0cc0268b; op2val:0x4083f3e196c11b71; valaddr_reg:x16; val_offset:16; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f1, f1, f17, 0x4, 0, x16, 16, x17, x15, 16, x18)

inst_2:
// rs1 == rs2 != rd, rs1==f29, rs2==f29, rd==f15, fs1 == 0 and fe1 == 0x39b and fm1 == 0x02c5c0cc0268b and fs2 == 0 and fe2 == 0x408 and fm2 == 0x3f3e196c11b71 and rm_val == 3  
// opcode: fdiv.d ; op1:f29; op2:f29; dest:f15; op1val:0x39b02c5c0cc0268b; op2val:0x39b02c5c0cc0268b; valaddr_reg:x16; val_offset:32; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f15, f29, f29, 0x3, 0, x16, 32, x17, x15, 32, x18)

inst_3:
// rs1 == rs2 == rd, rs1==f4, rs2==f4, rd==f4, fs1 == 0 and fe1 == 0x39b and fm1 == 0x02c5c0cc0268b and fs2 == 0 and fe2 == 0x408 and fm2 == 0x3f3e196c11b71 and rm_val == 2  
// opcode: fdiv.d ; op1:f4; op2:f4; dest:f4; op1val:0x39b02c5c0cc0268b; op2val:0x39b02c5c0cc0268b; valaddr_reg:x16; val_offset:48; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f4, f4, f4, 0x2, 0, x16, 48, x17, x15, 48, x18)

inst_4:
// rs2 == rd != rs1, rs1==f17, rs2==f2, rd==f2, fs1 == 0 and fe1 == 0x39b and fm1 == 0x02c5c0cc0268b and fs2 == 0 and fe2 == 0x408 and fm2 == 0x3f3e196c11b71 and rm_val == 1  
// opcode: fdiv.d ; op1:f17; op2:f2; dest:f2; op1val:0x39b02c5c0cc0268b; op2val:0x4083f3e196c11b71; valaddr_reg:x16; val_offset:64; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f2, f17, f2, 0x1, 0, x16, 64, x17, x15, 64, x18)

inst_5:
// rs1==f3, rs2==f6, rd==f31, fs1 == 0 and fe1 == 0x39b and fm1 == 0x02c5c0cc0268b and fs2 == 0 and fe2 == 0x408 and fm2 == 0x3f3e196c11b71 and rm_val == 0  
// opcode: fdiv.d ; op1:f3; op2:f6; dest:f31; op1val:0x39b02c5c0cc0268b; op2val:0x4083f3e196c11b71; valaddr_reg:x16; val_offset:80; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f31, f3, f6, 0x0, 0, x16, 80, x17, x15, 80, x18)

inst_6:
// rs1==f12, rs2==f25, rd==f3, fs1 == 0 and fe1 == 0x396 and fm1 == 0x6689666859a12 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x98db5beecbb21 and rm_val == 4  
// opcode: fdiv.d ; op1:f12; op2:f25; dest:f3; op1val:0x3966689666859a12; op2val:0x40098db5beecbb21; valaddr_reg:x16; val_offset:96; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f3, f12, f25, 0x4, 0, x16, 96, x17, x15, 96, x18)

inst_7:
// rs1==f11, rs2==f27, rd==f10, fs1 == 0 and fe1 == 0x396 and fm1 == 0x6689666859a12 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x98db5beecbb21 and rm_val == 3  
// opcode: fdiv.d ; op1:f11; op2:f27; dest:f10; op1val:0x3966689666859a12; op2val:0x40098db5beecbb21; valaddr_reg:x16; val_offset:112; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f10, f11, f27, 0x3, 0, x16, 112, x17, x15, 112, x18)

inst_8:
// rs1==f8, rs2==f11, rd==f30, fs1 == 0 and fe1 == 0x396 and fm1 == 0x6689666859a12 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x98db5beecbb21 and rm_val == 2  
// opcode: fdiv.d ; op1:f8; op2:f11; dest:f30; op1val:0x3966689666859a12; op2val:0x40098db5beecbb21; valaddr_reg:x16; val_offset:128; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f30, f8, f11, 0x2, 0, x16, 128, x17, x15, 128, x18)

inst_9:
// rs1==f15, rs2==f16, rd==f19, fs1 == 0 and fe1 == 0x396 and fm1 == 0x6689666859a12 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x98db5beecbb21 and rm_val == 1  
// opcode: fdiv.d ; op1:f15; op2:f16; dest:f19; op1val:0x3966689666859a12; op2val:0x40098db5beecbb21; valaddr_reg:x16; val_offset:144; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f19, f15, f16, 0x1, 0, x16, 144, x17, x15, 144, x18)

inst_10:
// rs1==f22, rs2==f8, rd==f12, fs1 == 0 and fe1 == 0x396 and fm1 == 0x6689666859a12 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x98db5beecbb21 and rm_val == 0  
// opcode: fdiv.d ; op1:f22; op2:f8; dest:f12; op1val:0x3966689666859a12; op2val:0x40098db5beecbb21; valaddr_reg:x16; val_offset:160; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f22, f8, 0x0, 0, x16, 160, x17, x15, 160, x18)

inst_11:
// rs1==f30, rs2==f28, rd==f26, fs1 == 0 and fe1 == 0x39a and fm1 == 0x47f2accde0b78 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xd20ac4d8bb72d and rm_val == 4  
// opcode: fdiv.d ; op1:f30; op2:f28; dest:f26; op1val:0x39a47f2accde0b78; op2val:0x400d20ac4d8bb72d; valaddr_reg:x16; val_offset:176; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f26, f30, f28, 0x4, 0, x16, 176, x17, x15, 176, x18)

inst_12:
// rs1==f13, rs2==f30, rd==f28, fs1 == 0 and fe1 == 0x39a and fm1 == 0x47f2accde0b78 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xd20ac4d8bb72d and rm_val == 3  
// opcode: fdiv.d ; op1:f13; op2:f30; dest:f28; op1val:0x39a47f2accde0b78; op2val:0x400d20ac4d8bb72d; valaddr_reg:x16; val_offset:192; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f28, f13, f30, 0x3, 0, x16, 192, x17, x15, 192, x18)

inst_13:
// rs1==f6, rs2==f24, rd==f27, fs1 == 0 and fe1 == 0x39a and fm1 == 0x47f2accde0b78 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xd20ac4d8bb72d and rm_val == 2  
// opcode: fdiv.d ; op1:f6; op2:f24; dest:f27; op1val:0x39a47f2accde0b78; op2val:0x400d20ac4d8bb72d; valaddr_reg:x16; val_offset:208; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f27, f6, f24, 0x2, 0, x16, 208, x17, x15, 208, x18)

inst_14:
// rs1==f9, rs2==f26, rd==f11, fs1 == 0 and fe1 == 0x39a and fm1 == 0x47f2accde0b78 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xd20ac4d8bb72d and rm_val == 1  
// opcode: fdiv.d ; op1:f9; op2:f26; dest:f11; op1val:0x39a47f2accde0b78; op2val:0x400d20ac4d8bb72d; valaddr_reg:x16; val_offset:224; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f11, f9, f26, 0x1, 0, x16, 224, x17, x15, 224, x18)

inst_15:
// rs1==f18, rs2==f19, rd==f8, fs1 == 0 and fe1 == 0x39a and fm1 == 0x47f2accde0b78 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xd20ac4d8bb72d and rm_val == 0  
// opcode: fdiv.d ; op1:f18; op2:f19; dest:f8; op1val:0x39a47f2accde0b78; op2val:0x400d20ac4d8bb72d; valaddr_reg:x16; val_offset:240; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f8, f18, f19, 0x0, 0, x16, 240, x17, x15, 240, x18)

inst_16:
// rs1==f7, rs2==f15, rd==f14, fs1 == 0 and fe1 == 0x39b and fm1 == 0x1e617cb293d27 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x1e617cb293d27 and rm_val == 4  
// opcode: fdiv.d ; op1:f7; op2:f15; dest:f14; op1val:0x39b1e617cb293d27; op2val:0x3fd1e617cb293d27; valaddr_reg:x16; val_offset:256; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f14, f7, f15, 0x4, 0, x16, 256, x17, x15, 256, x18)

inst_17:
// rs1==f24, rs2==f9, rd==f0, fs1 == 0 and fe1 == 0x39b and fm1 == 0x1e617cb293d27 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x1e617cb293d27 and rm_val == 3  
// opcode: fdiv.d ; op1:f24; op2:f9; dest:f0; op1val:0x39b1e617cb293d27; op2val:0x3fd1e617cb293d27; valaddr_reg:x16; val_offset:272; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f0, f24, f9, 0x3, 0, x16, 272, x17, x15, 272, x18)

inst_18:
// rs1==f5, rs2==f21, rd==f29, fs1 == 0 and fe1 == 0x39b and fm1 == 0x1e617cb293d27 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x1e617cb293d27 and rm_val == 2  
// opcode: fdiv.d ; op1:f5; op2:f21; dest:f29; op1val:0x39b1e617cb293d27; op2val:0x3fd1e617cb293d27; valaddr_reg:x16; val_offset:288; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f29, f5, f21, 0x2, 0, x16, 288, x17, x15, 288, x18)

inst_19:
// rs1==f28, rs2==f3, rd==f17, fs1 == 0 and fe1 == 0x39b and fm1 == 0x1e617cb293d27 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x1e617cb293d27 and rm_val == 1  
// opcode: fdiv.d ; op1:f28; op2:f3; dest:f17; op1val:0x39b1e617cb293d27; op2val:0x3fd1e617cb293d27; valaddr_reg:x16; val_offset:304; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f17, f28, f3, 0x1, 0, x16, 304, x17, x15, 304, x18)

inst_20:
// rs1==f26, rs2==f18, rd==f24, fs1 == 0 and fe1 == 0x39b and fm1 == 0x1e617cb293d27 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x1e617cb293d27 and rm_val == 0  
// opcode: fdiv.d ; op1:f26; op2:f18; dest:f24; op1val:0x39b1e617cb293d27; op2val:0x3fd1e617cb293d27; valaddr_reg:x16; val_offset:320; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f24, f26, f18, 0x0, 0, x16, 320, x17, x15, 320, x18)

inst_21:
// rs1==f2, rs2==f23, rd==f22, fs1 == 0 and fe1 == 0x399 and fm1 == 0x89cb7abcc5297 and fs2 == 0 and fe2 == 0x3f5 and fm2 == 0xc1103c9e6e30c and rm_val == 4  
// opcode: fdiv.d ; op1:f2; op2:f23; dest:f22; op1val:0x39989cb7abcc5297; op2val:0x3f5c1103c9e6e30c; valaddr_reg:x16; val_offset:336; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f22, f2, f23, 0x4, 0, x16, 336, x17, x15, 336, x18)

inst_22:
// rs1==f20, rs2==f10, rd==f25, fs1 == 0 and fe1 == 0x399 and fm1 == 0x89cb7abcc5297 and fs2 == 0 and fe2 == 0x3f5 and fm2 == 0xc1103c9e6e30c and rm_val == 3  
// opcode: fdiv.d ; op1:f20; op2:f10; dest:f25; op1val:0x39989cb7abcc5297; op2val:0x3f5c1103c9e6e30c; valaddr_reg:x16; val_offset:352; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f25, f20, f10, 0x3, 0, x16, 352, x17, x15, 352, x18)

inst_23:
// rs1==f31, rs2==f12, rd==f9, fs1 == 0 and fe1 == 0x399 and fm1 == 0x89cb7abcc5297 and fs2 == 0 and fe2 == 0x3f5 and fm2 == 0xc1103c9e6e30c and rm_val == 2  
// opcode: fdiv.d ; op1:f31; op2:f12; dest:f9; op1val:0x39989cb7abcc5297; op2val:0x3f5c1103c9e6e30c; valaddr_reg:x16; val_offset:368; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f9, f31, f12, 0x2, 0, x16, 368, x17, x15, 368, x18)

inst_24:
// rs1==f27, rs2==f31, rd==f13, fs1 == 0 and fe1 == 0x399 and fm1 == 0x89cb7abcc5297 and fs2 == 0 and fe2 == 0x3f5 and fm2 == 0xc1103c9e6e30c and rm_val == 1  
// opcode: fdiv.d ; op1:f27; op2:f31; dest:f13; op1val:0x39989cb7abcc5297; op2val:0x3f5c1103c9e6e30c; valaddr_reg:x16; val_offset:384; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f13, f27, f31, 0x1, 0, x16, 384, x17, x15, 384, x18)

inst_25:
// rs1==f0, rs2==f22, rd==f16, fs1 == 0 and fe1 == 0x399 and fm1 == 0x89cb7abcc5297 and fs2 == 0 and fe2 == 0x3f5 and fm2 == 0xc1103c9e6e30c and rm_val == 0  
// opcode: fdiv.d ; op1:f0; op2:f22; dest:f16; op1val:0x39989cb7abcc5297; op2val:0x3f5c1103c9e6e30c; valaddr_reg:x16; val_offset:400; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f16, f0, f22, 0x0, 0, x16, 400, x17, x15, 400, x18)

inst_26:
// rs1==f25, rs2==f13, rd==f20, fs1 == 0 and fe1 == 0x39b and fm1 == 0x0d5caae56147d and fs2 == 0 and fe2 == 0x3ef and fm2 == 0x0d5caae56147d and rm_val == 4  
// opcode: fdiv.d ; op1:f25; op2:f13; dest:f20; op1val:0x39b0d5caae56147d; op2val:0x3ef0d5caae56147d; valaddr_reg:x16; val_offset:416; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f20, f25, f13, 0x4, 0, x16, 416, x17, x15, 416, x18)

inst_27:
// rs1==f23, rs2==f0, rd==f7, fs1 == 0 and fe1 == 0x39b and fm1 == 0x0d5caae56147d and fs2 == 0 and fe2 == 0x3ef and fm2 == 0x0d5caae56147d and rm_val == 3  
// opcode: fdiv.d ; op1:f23; op2:f0; dest:f7; op1val:0x39b0d5caae56147d; op2val:0x3ef0d5caae56147d; valaddr_reg:x16; val_offset:432; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f7, f23, f0, 0x3, 0, x16, 432, x17, x15, 432, x18)

inst_28:
// rs1==f16, rs2==f7, rd==f6, fs1 == 0 and fe1 == 0x39b and fm1 == 0x0d5caae56147d and fs2 == 0 and fe2 == 0x3ef and fm2 == 0x0d5caae56147d and rm_val == 2  
// opcode: fdiv.d ; op1:f16; op2:f7; dest:f6; op1val:0x39b0d5caae56147d; op2val:0x3ef0d5caae56147d; valaddr_reg:x16; val_offset:448; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f6, f16, f7, 0x2, 0, x16, 448, x17, x15, 448, x18)

inst_29:
// rs1==f19, rs2==f5, rd==f18, fs1 == 0 and fe1 == 0x39b and fm1 == 0x0d5caae56147d and fs2 == 0 and fe2 == 0x3ef and fm2 == 0x0d5caae56147d and rm_val == 1  
// opcode: fdiv.d ; op1:f19; op2:f5; dest:f18; op1val:0x39b0d5caae56147d; op2val:0x3ef0d5caae56147d; valaddr_reg:x16; val_offset:464; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f18, f19, f5, 0x1, 0, x16, 464, x17, x15, 464, x18)

inst_30:
// rs1==f21, rs2==f1, rd==f23, fs1 == 0 and fe1 == 0x39b and fm1 == 0x0d5caae56147d and fs2 == 0 and fe2 == 0x3ef and fm2 == 0x0d5caae56147d and rm_val == 0  
// opcode: fdiv.d ; op1:f21; op2:f1; dest:f23; op1val:0x39b0d5caae56147d; op2val:0x3ef0d5caae56147d; valaddr_reg:x16; val_offset:480; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f23, f21, f1, 0x0, 0, x16, 480, x17, x15, 480, x18)

inst_31:
// rs1==f14, fs1 == 0 and fe1 == 0x39b and fm1 == 0x2fe470b5b6140 and fs2 == 0 and fe2 == 0x3e1 and fm2 == 0x2fe470b5b6140 and rm_val == 4  
// opcode: fdiv.d ; op1:f14; op2:f27; dest:f21; op1val:0x39b2fe470b5b6140; op2val:0x3e12fe470b5b6140; valaddr_reg:x16; val_offset:496; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f21, f14, f27, 0x4, 0, x16, 496, x17, x15, 496, x18)

inst_32:
// rs2==f14, fs1 == 0 and fe1 == 0x39b and fm1 == 0x2fe470b5b6140 and fs2 == 0 and fe2 == 0x3e1 and fm2 == 0x2fe470b5b6140 and rm_val == 3  
// opcode: fdiv.d ; op1:f26; op2:f14; dest:f20; op1val:0x39b2fe470b5b6140; op2val:0x3e12fe470b5b6140; valaddr_reg:x16; val_offset:512; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f20, f26, f14, 0x3, 0, x16, 512, x17, x15, 512, x18)

inst_33:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x2fe470b5b6140 and fs2 == 0 and fe2 == 0x3e1 and fm2 == 0x2fe470b5b6140 and rm_val == 2  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x39b2fe470b5b6140; op2val:0x3e12fe470b5b6140; valaddr_reg:x16; val_offset:528; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x2, 0, x16, 528, x17, x15, 528, x18)

inst_34:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x2fe470b5b6140 and fs2 == 0 and fe2 == 0x3e1 and fm2 == 0x2fe470b5b6140 and rm_val == 1  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x39b2fe470b5b6140; op2val:0x3e12fe470b5b6140; valaddr_reg:x16; val_offset:544; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x1, 0, x16, 544, x17, x15, 544, x18)

inst_35:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x2fe470b5b6140 and fs2 == 0 and fe2 == 0x3e1 and fm2 == 0x2fe470b5b6140 and rm_val == 0  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x39b2fe470b5b6140; op2val:0x3e12fe470b5b6140; valaddr_reg:x16; val_offset:560; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x0, 0, x16, 560, x17, x15, 560, x18)

inst_36:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xd44528bd16692 and fs2 == 0 and fe2 == 0x408 and fm2 == 0x20d90fd02e865 and rm_val == 4  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x39ad44528bd16692; op2val:0x40820d90fd02e865; valaddr_reg:x16; val_offset:576; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x4, 0, x16, 576, x17, x15, 576, x18)

inst_37:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xd44528bd16692 and fs2 == 0 and fe2 == 0x408 and fm2 == 0x20d90fd02e865 and rm_val == 3  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x39ad44528bd16692; op2val:0x40820d90fd02e865; valaddr_reg:x16; val_offset:592; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x3, 0, x16, 592, x17, x15, 592, x18)

inst_38:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xd44528bd16692 and fs2 == 0 and fe2 == 0x408 and fm2 == 0x20d90fd02e865 and rm_val == 2  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x39ad44528bd16692; op2val:0x40820d90fd02e865; valaddr_reg:x16; val_offset:608; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x2, 0, x16, 608, x17, x15, 608, x18)

inst_39:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xd44528bd16692 and fs2 == 0 and fe2 == 0x408 and fm2 == 0x20d90fd02e865 and rm_val == 1  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x39ad44528bd16692; op2val:0x40820d90fd02e865; valaddr_reg:x16; val_offset:624; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x1, 0, x16, 624, x17, x15, 624, x18)

inst_40:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xd44528bd16692 and fs2 == 0 and fe2 == 0x408 and fm2 == 0x20d90fd02e865 and rm_val == 0  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x39ad44528bd16692; op2val:0x40820d90fd02e865; valaddr_reg:x16; val_offset:640; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x0, 0, x16, 640, x17, x15, 640, x18)

inst_41:
// fs1 == 0 and fe1 == 0x398 and fm1 == 0x39d928d470f2e and fs2 == 0 and fe2 == 0x402 and fm2 == 0x65e57ef9b16de and rm_val == 4  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x39839d928d470f2e; op2val:0x40265e57ef9b16de; valaddr_reg:x16; val_offset:656; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x4, 0, x16, 656, x17, x15, 656, x18)

inst_42:
// fs1 == 0 and fe1 == 0x398 and fm1 == 0x39d928d470f2e and fs2 == 0 and fe2 == 0x402 and fm2 == 0x65e57ef9b16de and rm_val == 3  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x39839d928d470f2e; op2val:0x40265e57ef9b16de; valaddr_reg:x16; val_offset:672; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x3, 0, x16, 672, x17, x15, 672, x18)

inst_43:
// fs1 == 0 and fe1 == 0x398 and fm1 == 0x39d928d470f2e and fs2 == 0 and fe2 == 0x402 and fm2 == 0x65e57ef9b16de and rm_val == 2  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x39839d928d470f2e; op2val:0x40265e57ef9b16de; valaddr_reg:x16; val_offset:688; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x2, 0, x16, 688, x17, x15, 688, x18)

inst_44:
// fs1 == 0 and fe1 == 0x398 and fm1 == 0x39d928d470f2e and fs2 == 0 and fe2 == 0x402 and fm2 == 0x65e57ef9b16de and rm_val == 1  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x39839d928d470f2e; op2val:0x40265e57ef9b16de; valaddr_reg:x16; val_offset:704; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x1, 0, x16, 704, x17, x15, 704, x18)

inst_45:
// fs1 == 0 and fe1 == 0x398 and fm1 == 0x39d928d470f2e and fs2 == 0 and fe2 == 0x402 and fm2 == 0x65e57ef9b16de and rm_val == 0  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x39839d928d470f2e; op2val:0x40265e57ef9b16de; valaddr_reg:x16; val_offset:720; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x0, 0, x16, 720, x17, x15, 720, x18)

inst_46:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x421947d912a96 and fs2 == 0 and fe2 == 0x401 and fm2 == 0xc9bad7f3a2b19 and rm_val == 4  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x39b421947d912a96; op2val:0x401c9bad7f3a2b19; valaddr_reg:x16; val_offset:736; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x4, 0, x16, 736, x17, x15, 736, x18)

inst_47:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x421947d912a96 and fs2 == 0 and fe2 == 0x401 and fm2 == 0xc9bad7f3a2b19 and rm_val == 3  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x39b421947d912a96; op2val:0x401c9bad7f3a2b19; valaddr_reg:x16; val_offset:752; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x3, 0, x16, 752, x17, x15, 752, x18)

inst_48:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x421947d912a96 and fs2 == 0 and fe2 == 0x401 and fm2 == 0xc9bad7f3a2b19 and rm_val == 2  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x39b421947d912a96; op2val:0x401c9bad7f3a2b19; valaddr_reg:x16; val_offset:768; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x2, 0, x16, 768, x17, x15, 768, x18)

inst_49:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x421947d912a96 and fs2 == 0 and fe2 == 0x401 and fm2 == 0xc9bad7f3a2b19 and rm_val == 1  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x39b421947d912a96; op2val:0x401c9bad7f3a2b19; valaddr_reg:x16; val_offset:784; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x1, 0, x16, 784, x17, x15, 784, x18)

inst_50:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x421947d912a96 and fs2 == 0 and fe2 == 0x401 and fm2 == 0xc9bad7f3a2b19 and rm_val == 0  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x39b421947d912a96; op2val:0x401c9bad7f3a2b19; valaddr_reg:x16; val_offset:800; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x0, 0, x16, 800, x17, x15, 800, x18)

inst_51:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xa0df74c28420b and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xa0df74c28420b and rm_val == 4  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x39aa0df74c28420b; op2val:0x3fca0df74c28420b; valaddr_reg:x16; val_offset:816; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x4, 0, x16, 816, x17, x15, 816, x18)

inst_52:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xa0df74c28420b and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xa0df74c28420b and rm_val == 3  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x39aa0df74c28420b; op2val:0x3fca0df74c28420b; valaddr_reg:x16; val_offset:832; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x3, 0, x16, 832, x17, x15, 832, x18)

inst_53:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xa0df74c28420b and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xa0df74c28420b and rm_val == 2  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x39aa0df74c28420b; op2val:0x3fca0df74c28420b; valaddr_reg:x16; val_offset:848; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x2, 0, x16, 848, x17, x15, 848, x18)

inst_54:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xa0df74c28420b and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xa0df74c28420b and rm_val == 1  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x39aa0df74c28420b; op2val:0x3fca0df74c28420b; valaddr_reg:x16; val_offset:864; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x1, 0, x16, 864, x17, x15, 864, x18)

inst_55:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xa0df74c28420b and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xa0df74c28420b and rm_val == 0  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x39aa0df74c28420b; op2val:0x3fca0df74c28420b; valaddr_reg:x16; val_offset:880; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x0, 0, x16, 880, x17, x15, 880, x18)

inst_56:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x0fcf4180a101f and fs2 == 0 and fe2 == 0x3f7 and fm2 == 0x35f52c697170d and rm_val == 4  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x39b0fcf4180a101f; op2val:0x3f735f52c697170d; valaddr_reg:x16; val_offset:896; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x4, 0, x16, 896, x17, x15, 896, x18)

inst_57:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x0fcf4180a101f and fs2 == 0 and fe2 == 0x3f7 and fm2 == 0x35f52c697170d and rm_val == 3  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x39b0fcf4180a101f; op2val:0x3f735f52c697170d; valaddr_reg:x16; val_offset:912; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x3, 0, x16, 912, x17, x15, 912, x18)

inst_58:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x0fcf4180a101f and fs2 == 0 and fe2 == 0x3f7 and fm2 == 0x35f52c697170d and rm_val == 2  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x39b0fcf4180a101f; op2val:0x3f735f52c697170d; valaddr_reg:x16; val_offset:928; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x2, 0, x16, 928, x17, x15, 928, x18)

inst_59:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x0fcf4180a101f and fs2 == 0 and fe2 == 0x3f7 and fm2 == 0x35f52c697170d and rm_val == 1  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x39b0fcf4180a101f; op2val:0x3f735f52c697170d; valaddr_reg:x16; val_offset:944; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x1, 0, x16, 944, x17, x15, 944, x18)

inst_60:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x0fcf4180a101f and fs2 == 0 and fe2 == 0x3f7 and fm2 == 0x35f52c697170d and rm_val == 0  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x39b0fcf4180a101f; op2val:0x3f735f52c697170d; valaddr_reg:x16; val_offset:960; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x0, 0, x16, 960, x17, x15, 960, x18)

inst_61:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x7828756cfe4e5 and fs2 == 0 and fe2 == 0x3ed and fm2 == 0x7828756cfe4e5 and rm_val == 4  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x3997828756cfe4e5; op2val:0x3ed7828756cfe4e5; valaddr_reg:x16; val_offset:976; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x4, 0, x16, 976, x17, x15, 976, x18)

inst_62:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x7828756cfe4e5 and fs2 == 0 and fe2 == 0x3ed and fm2 == 0x7828756cfe4e5 and rm_val == 3  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x3997828756cfe4e5; op2val:0x3ed7828756cfe4e5; valaddr_reg:x16; val_offset:992; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x3, 0, x16, 992, x17, x15, 992, x18)

inst_63:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x7828756cfe4e5 and fs2 == 0 and fe2 == 0x3ed and fm2 == 0x7828756cfe4e5 and rm_val == 2  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x3997828756cfe4e5; op2val:0x3ed7828756cfe4e5; valaddr_reg:x16; val_offset:1008; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x2, 0, x16, 1008, x17, x15, 1008, x18)

inst_64:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x7828756cfe4e5 and fs2 == 0 and fe2 == 0x3ed and fm2 == 0x7828756cfe4e5 and rm_val == 1  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x3997828756cfe4e5; op2val:0x3ed7828756cfe4e5; valaddr_reg:x16; val_offset:1024; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x1, 0, x16, 1024, x17, x15, 1024, x18)

inst_65:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x7828756cfe4e5 and fs2 == 0 and fe2 == 0x3ed and fm2 == 0x7828756cfe4e5 and rm_val == 0  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x3997828756cfe4e5; op2val:0x3ed7828756cfe4e5; valaddr_reg:x16; val_offset:1040; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x0, 0, x16, 1040, x17, x15, 1040, x18)

inst_66:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x1bfe784e40809 and fs2 == 0 and fe2 == 0x3df and fm2 == 0x1bfe784e40809 and rm_val == 4  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x3991bfe784e40809; op2val:0x3df1bfe784e40809; valaddr_reg:x16; val_offset:1056; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x4, 0, x16, 1056, x17, x15, 1056, x18)

inst_67:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x1bfe784e40809 and fs2 == 0 and fe2 == 0x3df and fm2 == 0x1bfe784e40809 and rm_val == 3  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x3991bfe784e40809; op2val:0x3df1bfe784e40809; valaddr_reg:x16; val_offset:1072; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x3, 0, x16, 1072, x17, x15, 1072, x18)

inst_68:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x1bfe784e40809 and fs2 == 0 and fe2 == 0x3df and fm2 == 0x1bfe784e40809 and rm_val == 2  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x3991bfe784e40809; op2val:0x3df1bfe784e40809; valaddr_reg:x16; val_offset:1088; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x2, 0, x16, 1088, x17, x15, 1088, x18)

inst_69:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x1bfe784e40809 and fs2 == 0 and fe2 == 0x3df and fm2 == 0x1bfe784e40809 and rm_val == 1  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x3991bfe784e40809; op2val:0x3df1bfe784e40809; valaddr_reg:x16; val_offset:1104; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x1, 0, x16, 1104, x17, x15, 1104, x18)

inst_70:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x1bfe784e40809 and fs2 == 0 and fe2 == 0x3df and fm2 == 0x1bfe784e40809 and rm_val == 0  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x3991bfe784e40809; op2val:0x3df1bfe784e40809; valaddr_reg:x16; val_offset:1120; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x0, 0, x16, 1120, x17, x15, 1120, x18)

inst_71:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x2e8f981b456da and fs2 == 0 and fe2 == 0x406 and fm2 == 0x754376699109b and rm_val == 4  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x3992e8f981b456da; op2val:0x406754376699109b; valaddr_reg:x16; val_offset:1136; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x4, 0, x16, 1136, x17, x15, 1136, x18)

inst_72:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x2e8f981b456da and fs2 == 0 and fe2 == 0x406 and fm2 == 0x754376699109b and rm_val == 3  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x3992e8f981b456da; op2val:0x406754376699109b; valaddr_reg:x16; val_offset:1152; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x3, 0, x16, 1152, x17, x15, 1152, x18)

inst_73:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x2e8f981b456da and fs2 == 0 and fe2 == 0x406 and fm2 == 0x754376699109b and rm_val == 2  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x3992e8f981b456da; op2val:0x406754376699109b; valaddr_reg:x16; val_offset:1168; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x2, 0, x16, 1168, x17, x15, 1168, x18)

inst_74:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x2e8f981b456da and fs2 == 0 and fe2 == 0x406 and fm2 == 0x754376699109b and rm_val == 1  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x3992e8f981b456da; op2val:0x406754376699109b; valaddr_reg:x16; val_offset:1184; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x1, 0, x16, 1184, x17, x15, 1184, x18)

inst_75:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x2e8f981b456da and fs2 == 0 and fe2 == 0x406 and fm2 == 0x754376699109b and rm_val == 0  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x3992e8f981b456da; op2val:0x406754376699109b; valaddr_reg:x16; val_offset:1200; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x0, 0, x16, 1200, x17, x15, 1200, x18)

inst_76:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x1c348e5a01e40 and fs2 == 0 and fe2 == 0x404 and fm2 == 0x4417d796e8421 and rm_val == 4  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x39a1c348e5a01e40; op2val:0x4044417d796e8421; valaddr_reg:x16; val_offset:1216; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x4, 0, x16, 1216, x17, x15, 1216, x18)

inst_77:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x1c348e5a01e40 and fs2 == 0 and fe2 == 0x404 and fm2 == 0x4417d796e8421 and rm_val == 3  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x39a1c348e5a01e40; op2val:0x4044417d796e8421; valaddr_reg:x16; val_offset:1232; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x3, 0, x16, 1232, x17, x15, 1232, x18)

inst_78:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x1c348e5a01e40 and fs2 == 0 and fe2 == 0x404 and fm2 == 0x4417d796e8421 and rm_val == 2  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x39a1c348e5a01e40; op2val:0x4044417d796e8421; valaddr_reg:x16; val_offset:1248; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x2, 0, x16, 1248, x17, x15, 1248, x18)

inst_79:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x1c348e5a01e40 and fs2 == 0 and fe2 == 0x404 and fm2 == 0x4417d796e8421 and rm_val == 1  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x39a1c348e5a01e40; op2val:0x4044417d796e8421; valaddr_reg:x16; val_offset:1264; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x1, 0, x16, 1264, x17, x15, 1264, x18)

inst_80:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x1c348e5a01e40 and fs2 == 0 and fe2 == 0x404 and fm2 == 0x4417d796e8421 and rm_val == 0  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x39a1c348e5a01e40; op2val:0x4044417d796e8421; valaddr_reg:x16; val_offset:1280; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x0, 0, x16, 1280, x17, x15, 1280, x18)

inst_81:
// fs1 == 0 and fe1 == 0x396 and fm1 == 0x2d93a7ddcf918 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xac90fe564317d and rm_val == 4  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x3962d93a7ddcf918; op2val:0x3fcac90fe564317d; valaddr_reg:x16; val_offset:1296; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x4, 0, x16, 1296, x17, x15, 1296, x18)

inst_82:
// fs1 == 0 and fe1 == 0x396 and fm1 == 0x2d93a7ddcf918 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xac90fe564317d and rm_val == 3  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x3962d93a7ddcf918; op2val:0x3fcac90fe564317d; valaddr_reg:x16; val_offset:1312; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x3, 0, x16, 1312, x17, x15, 1312, x18)

inst_83:
// fs1 == 0 and fe1 == 0x396 and fm1 == 0x2d93a7ddcf918 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xac90fe564317d and rm_val == 2  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x3962d93a7ddcf918; op2val:0x3fcac90fe564317d; valaddr_reg:x16; val_offset:1328; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x2, 0, x16, 1328, x17, x15, 1328, x18)

inst_84:
// fs1 == 0 and fe1 == 0x396 and fm1 == 0x2d93a7ddcf918 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xac90fe564317d and rm_val == 1  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x3962d93a7ddcf918; op2val:0x3fcac90fe564317d; valaddr_reg:x16; val_offset:1344; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x1, 0, x16, 1344, x17, x15, 1344, x18)

inst_85:
// fs1 == 0 and fe1 == 0x396 and fm1 == 0x2d93a7ddcf918 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0xac90fe564317d and rm_val == 0  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x3962d93a7ddcf918; op2val:0x3fcac90fe564317d; valaddr_reg:x16; val_offset:1360; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x0, 0, x16, 1360, x17, x15, 1360, x18)

inst_86:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x19297ee1df49e and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x19297ee1df49e and rm_val == 4  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x39919297ee1df49e; op2val:0x3fb19297ee1df49e; valaddr_reg:x16; val_offset:1376; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x4, 0, x16, 1376, x17, x15, 1376, x18)

inst_87:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x19297ee1df49e and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x19297ee1df49e and rm_val == 3  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x39919297ee1df49e; op2val:0x3fb19297ee1df49e; valaddr_reg:x16; val_offset:1392; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x3, 0, x16, 1392, x17, x15, 1392, x18)

inst_88:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x19297ee1df49e and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x19297ee1df49e and rm_val == 2  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x39919297ee1df49e; op2val:0x3fb19297ee1df49e; valaddr_reg:x16; val_offset:1408; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x2, 0, x16, 1408, x17, x15, 1408, x18)

inst_89:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x19297ee1df49e and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x19297ee1df49e and rm_val == 1  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x39919297ee1df49e; op2val:0x3fb19297ee1df49e; valaddr_reg:x16; val_offset:1424; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x1, 0, x16, 1424, x17, x15, 1424, x18)

inst_90:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x19297ee1df49e and fs2 == 0 and fe2 == 0x3fb and fm2 == 0x19297ee1df49e and rm_val == 0  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x39919297ee1df49e; op2val:0x3fb19297ee1df49e; valaddr_reg:x16; val_offset:1440; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x0, 0, x16, 1440, x17, x15, 1440, x18)

inst_91:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x30c575c0088ed and fs2 == 0 and fe2 == 0x3f7 and fm2 == 0x5b8bab1729615 and rm_val == 4  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x39b30c575c0088ed; op2val:0x3f75b8bab1729615; valaddr_reg:x16; val_offset:1456; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x4, 0, x16, 1456, x17, x15, 1456, x18)

inst_92:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x30c575c0088ed and fs2 == 0 and fe2 == 0x3f7 and fm2 == 0x5b8bab1729615 and rm_val == 3  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x39b30c575c0088ed; op2val:0x3f75b8bab1729615; valaddr_reg:x16; val_offset:1472; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x3, 0, x16, 1472, x17, x15, 1472, x18)

inst_93:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x30c575c0088ed and fs2 == 0 and fe2 == 0x3f7 and fm2 == 0x5b8bab1729615 and rm_val == 2  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x39b30c575c0088ed; op2val:0x3f75b8bab1729615; valaddr_reg:x16; val_offset:1488; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x2, 0, x16, 1488, x17, x15, 1488, x18)

inst_94:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x30c575c0088ed and fs2 == 0 and fe2 == 0x3f7 and fm2 == 0x5b8bab1729615 and rm_val == 1  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x39b30c575c0088ed; op2val:0x3f75b8bab1729615; valaddr_reg:x16; val_offset:1504; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x1, 0, x16, 1504, x17, x15, 1504, x18)

inst_95:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x30c575c0088ed and fs2 == 0 and fe2 == 0x3f7 and fm2 == 0x5b8bab1729615 and rm_val == 0  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x39b30c575c0088ed; op2val:0x3f75b8bab1729615; valaddr_reg:x16; val_offset:1520; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x0, 0, x16, 1520, x17, x15, 1520, x18)

inst_96:
// fs1 == 0 and fe1 == 0x396 and fm1 == 0x083eb39d48cc2 and fs2 == 0 and fe2 == 0x3ea and fm2 == 0x083eb39d48cc2 and rm_val == 4  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x396083eb39d48cc2; op2val:0x3ea083eb39d48cc2; valaddr_reg:x16; val_offset:1536; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x4, 0, x16, 1536, x17, x15, 1536, x18)

inst_97:
// fs1 == 0 and fe1 == 0x396 and fm1 == 0x083eb39d48cc2 and fs2 == 0 and fe2 == 0x3ea and fm2 == 0x083eb39d48cc2 and rm_val == 3  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x396083eb39d48cc2; op2val:0x3ea083eb39d48cc2; valaddr_reg:x16; val_offset:1552; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x3, 0, x16, 1552, x17, x15, 1552, x18)

inst_98:
// fs1 == 0 and fe1 == 0x396 and fm1 == 0x083eb39d48cc2 and fs2 == 0 and fe2 == 0x3ea and fm2 == 0x083eb39d48cc2 and rm_val == 2  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x396083eb39d48cc2; op2val:0x3ea083eb39d48cc2; valaddr_reg:x16; val_offset:1568; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x2, 0, x16, 1568, x17, x15, 1568, x18)

inst_99:
// fs1 == 0 and fe1 == 0x396 and fm1 == 0x083eb39d48cc2 and fs2 == 0 and fe2 == 0x3ea and fm2 == 0x083eb39d48cc2 and rm_val == 1  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x396083eb39d48cc2; op2val:0x3ea083eb39d48cc2; valaddr_reg:x16; val_offset:1584; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x1, 0, x16, 1584, x17, x15, 1584, x18)

inst_100:
// fs1 == 0 and fe1 == 0x396 and fm1 == 0x083eb39d48cc2 and fs2 == 0 and fe2 == 0x3ea and fm2 == 0x083eb39d48cc2 and rm_val == 0  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x396083eb39d48cc2; op2val:0x3ea083eb39d48cc2; valaddr_reg:x16; val_offset:1600; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x0, 0, x16, 1600, x17, x15, 1600, x18)

inst_101:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x2487a9ce230f6 and fs2 == 0 and fe2 == 0x3e1 and fm2 == 0x2487a9ce230f6 and rm_val == 4  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x39b2487a9ce230f6; op2val:0x3e12487a9ce230f6; valaddr_reg:x16; val_offset:1616; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x4, 0, x16, 1616, x17, x15, 1616, x18)

inst_102:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x2487a9ce230f6 and fs2 == 0 and fe2 == 0x3e1 and fm2 == 0x2487a9ce230f6 and rm_val == 3  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x39b2487a9ce230f6; op2val:0x3e12487a9ce230f6; valaddr_reg:x16; val_offset:1632; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x3, 0, x16, 1632, x17, x15, 1632, x18)

inst_103:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x2487a9ce230f6 and fs2 == 0 and fe2 == 0x3e1 and fm2 == 0x2487a9ce230f6 and rm_val == 2  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x39b2487a9ce230f6; op2val:0x3e12487a9ce230f6; valaddr_reg:x16; val_offset:1648; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x2, 0, x16, 1648, x17, x15, 1648, x18)

inst_104:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x2487a9ce230f6 and fs2 == 0 and fe2 == 0x3e1 and fm2 == 0x2487a9ce230f6 and rm_val == 1  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x39b2487a9ce230f6; op2val:0x3e12487a9ce230f6; valaddr_reg:x16; val_offset:1664; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x1, 0, x16, 1664, x17, x15, 1664, x18)

inst_105:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x2487a9ce230f6 and fs2 == 0 and fe2 == 0x3e1 and fm2 == 0x2487a9ce230f6 and rm_val == 0  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x39b2487a9ce230f6; op2val:0x3e12487a9ce230f6; valaddr_reg:x16; val_offset:1680; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x0, 0, x16, 1680, x17, x15, 1680, x18)

inst_106:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x28f349876c8fd and fs2 == 1 and fe2 == 0x396 and fm2 == 0xe0e4284e5ad21 and rm_val == 4  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x39928f349876c8fd; op2val:0xb96e0e4284e5ad21; valaddr_reg:x16; val_offset:1696; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x4, 0, x16, 1696, x17, x15, 1696, x18)

inst_107:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x28f349876c8fd and fs2 == 1 and fe2 == 0x396 and fm2 == 0xe0e4284e5ad21 and rm_val == 3  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x39928f349876c8fd; op2val:0xb96e0e4284e5ad21; valaddr_reg:x16; val_offset:1712; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x3, 0, x16, 1712, x17, x15, 1712, x18)

inst_108:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x28f349876c8fd and fs2 == 1 and fe2 == 0x396 and fm2 == 0xe0e4284e5ad21 and rm_val == 2  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x39928f349876c8fd; op2val:0xb96e0e4284e5ad21; valaddr_reg:x16; val_offset:1728; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x2, 0, x16, 1728, x17, x15, 1728, x18)

inst_109:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x28f349876c8fd and fs2 == 1 and fe2 == 0x396 and fm2 == 0xe0e4284e5ad21 and rm_val == 1  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x39928f349876c8fd; op2val:0xb96e0e4284e5ad21; valaddr_reg:x16; val_offset:1744; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x1, 0, x16, 1744, x17, x15, 1744, x18)

inst_110:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x28f349876c8fd and fs2 == 1 and fe2 == 0x396 and fm2 == 0xe0e4284e5ad21 and rm_val == 0  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x39928f349876c8fd; op2val:0xb96e0e4284e5ad21; valaddr_reg:x16; val_offset:1760; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x0, 0, x16, 1760, x17, x15, 1760, x18)

inst_111:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x2112a412db148 and fs2 == 1 and fe2 == 0x397 and fm2 == 0xd422555dc2234 and rm_val == 4  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x39a2112a412db148; op2val:0xb97d422555dc2234; valaddr_reg:x16; val_offset:1776; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x4, 0, x16, 1776, x17, x15, 1776, x18)

inst_112:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x2112a412db148 and fs2 == 1 and fe2 == 0x397 and fm2 == 0xd422555dc2234 and rm_val == 3  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x39a2112a412db148; op2val:0xb97d422555dc2234; valaddr_reg:x16; val_offset:1792; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x3, 0, x16, 1792, x17, x15, 1792, x18)

inst_113:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x2112a412db148 and fs2 == 1 and fe2 == 0x397 and fm2 == 0xd422555dc2234 and rm_val == 2  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x39a2112a412db148; op2val:0xb97d422555dc2234; valaddr_reg:x16; val_offset:1808; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x2, 0, x16, 1808, x17, x15, 1808, x18)

inst_114:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x2112a412db148 and fs2 == 1 and fe2 == 0x397 and fm2 == 0xd422555dc2234 and rm_val == 1  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x39a2112a412db148; op2val:0xb97d422555dc2234; valaddr_reg:x16; val_offset:1824; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x1, 0, x16, 1824, x17, x15, 1824, x18)

inst_115:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x2112a412db148 and fs2 == 1 and fe2 == 0x397 and fm2 == 0xd422555dc2234 and rm_val == 0  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x39a2112a412db148; op2val:0xb97d422555dc2234; valaddr_reg:x16; val_offset:1840; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x0, 0, x16, 1840, x17, x15, 1840, x18)

inst_116:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xeebf80d6e52f5 and fs2 == 1 and fe2 == 0x398 and fm2 == 0x909b1039ec5c3 and rm_val == 4  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x39aeebf80d6e52f5; op2val:0xb98909b1039ec5c3; valaddr_reg:x16; val_offset:1856; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x4, 0, x16, 1856, x17, x15, 1856, x18)

inst_117:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xeebf80d6e52f5 and fs2 == 1 and fe2 == 0x398 and fm2 == 0x909b1039ec5c3 and rm_val == 3  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x39aeebf80d6e52f5; op2val:0xb98909b1039ec5c3; valaddr_reg:x16; val_offset:1872; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x3, 0, x16, 1872, x17, x15, 1872, x18)

inst_118:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xeebf80d6e52f5 and fs2 == 1 and fe2 == 0x398 and fm2 == 0x909b1039ec5c3 and rm_val == 2  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x39aeebf80d6e52f5; op2val:0xb98909b1039ec5c3; valaddr_reg:x16; val_offset:1888; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x2, 0, x16, 1888, x17, x15, 1888, x18)

inst_119:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xeebf80d6e52f5 and fs2 == 1 and fe2 == 0x398 and fm2 == 0x909b1039ec5c3 and rm_val == 1  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x39aeebf80d6e52f5; op2val:0xb98909b1039ec5c3; valaddr_reg:x16; val_offset:1904; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x1, 0, x16, 1904, x17, x15, 1904, x18)

inst_120:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xeebf80d6e52f5 and fs2 == 1 and fe2 == 0x398 and fm2 == 0x909b1039ec5c3 and rm_val == 0  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x39aeebf80d6e52f5; op2val:0xb98909b1039ec5c3; valaddr_reg:x16; val_offset:1920; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x0, 0, x16, 1920, x17, x15, 1920, x18)

inst_121:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x0f38a5fc0747c and fs2 == 1 and fe2 == 0x398 and fm2 == 0xb739892c5a8f2 and rm_val == 4  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x39b0f38a5fc0747c; op2val:0xb98b739892c5a8f2; valaddr_reg:x16; val_offset:1936; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x4, 0, x16, 1936, x17, x15, 1936, x18)

inst_122:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x0f38a5fc0747c and fs2 == 1 and fe2 == 0x398 and fm2 == 0xb739892c5a8f2 and rm_val == 3  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x39b0f38a5fc0747c; op2val:0xb98b739892c5a8f2; valaddr_reg:x16; val_offset:1952; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x3, 0, x16, 1952, x17, x15, 1952, x18)

inst_123:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x0f38a5fc0747c and fs2 == 1 and fe2 == 0x398 and fm2 == 0xb739892c5a8f2 and rm_val == 2  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x39b0f38a5fc0747c; op2val:0xb98b739892c5a8f2; valaddr_reg:x16; val_offset:1968; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x2, 0, x16, 1968, x17, x15, 1968, x18)

inst_124:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x0f38a5fc0747c and fs2 == 1 and fe2 == 0x398 and fm2 == 0xb739892c5a8f2 and rm_val == 1  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x39b0f38a5fc0747c; op2val:0xb98b739892c5a8f2; valaddr_reg:x16; val_offset:1984; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x1, 0, x16, 1984, x17, x15, 1984, x18)

inst_125:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x0f38a5fc0747c and fs2 == 1 and fe2 == 0x398 and fm2 == 0xb739892c5a8f2 and rm_val == 0  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x39b0f38a5fc0747c; op2val:0xb98b739892c5a8f2; valaddr_reg:x16; val_offset:2000; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x0, 0, x16, 2000, x17, x15, 2000, x18)

inst_126:
// fs1 == 0 and fe1 == 0x397 and fm1 == 0xe758ca5883966 and fs2 == 1 and fe2 == 0x395 and fm2 == 0x8a9ce20769831 and rm_val == 4  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x397e758ca5883966; op2val:0xb958a9ce20769831; valaddr_reg:x16; val_offset:2016; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x4, 0, x16, 2016, x17, x15, 2016, x18)
addi x16,x16,2032
RVTEST_SIGBASE(x15,signature_x15_2)

inst_127:
// fs1 == 0 and fe1 == 0x397 and fm1 == 0xe758ca5883966 and fs2 == 1 and fe2 == 0x395 and fm2 == 0x8a9ce20769831 and rm_val == 3  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x397e758ca5883966; op2val:0xb958a9ce20769831; valaddr_reg:x16; val_offset:0; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x3, 0, x16, 0, x17, x15, 0, x18)

inst_128:
// fs1 == 0 and fe1 == 0x397 and fm1 == 0xe758ca5883966 and fs2 == 1 and fe2 == 0x395 and fm2 == 0x8a9ce20769831 and rm_val == 2  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x397e758ca5883966; op2val:0xb958a9ce20769831; valaddr_reg:x16; val_offset:16; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x2, 0, x16, 16, x17, x15, 16, x18)

inst_129:
// fs1 == 0 and fe1 == 0x397 and fm1 == 0xe758ca5883966 and fs2 == 1 and fe2 == 0x395 and fm2 == 0x8a9ce20769831 and rm_val == 1  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x397e758ca5883966; op2val:0xb958a9ce20769831; valaddr_reg:x16; val_offset:32; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x1, 0, x16, 32, x17, x15, 32, x18)

inst_130:
// fs1 == 0 and fe1 == 0x397 and fm1 == 0xe758ca5883966 and fs2 == 1 and fe2 == 0x395 and fm2 == 0x8a9ce20769831 and rm_val == 0  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x397e758ca5883966; op2val:0xb958a9ce20769831; valaddr_reg:x16; val_offset:48; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x0, 0, x16, 48, x17, x15, 48, x18)

inst_131:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xa6e873e0de6e8 and fs2 == 1 and fe2 == 0x398 and fm2 == 0x566f863fed1c5 and rm_val == 4  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x39aa6e873e0de6e8; op2val:0xb98566f863fed1c5; valaddr_reg:x16; val_offset:64; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x4, 0, x16, 64, x17, x15, 64, x18)

inst_132:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xa6e873e0de6e8 and fs2 == 1 and fe2 == 0x398 and fm2 == 0x566f863fed1c5 and rm_val == 3  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x39aa6e873e0de6e8; op2val:0xb98566f863fed1c5; valaddr_reg:x16; val_offset:80; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x3, 0, x16, 80, x17, x15, 80, x18)

inst_133:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xa6e873e0de6e8 and fs2 == 1 and fe2 == 0x398 and fm2 == 0x566f863fed1c5 and rm_val == 2  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x39aa6e873e0de6e8; op2val:0xb98566f863fed1c5; valaddr_reg:x16; val_offset:96; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x2, 0, x16, 96, x17, x15, 96, x18)

inst_134:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xa6e873e0de6e8 and fs2 == 1 and fe2 == 0x398 and fm2 == 0x566f863fed1c5 and rm_val == 1  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x39aa6e873e0de6e8; op2val:0xb98566f863fed1c5; valaddr_reg:x16; val_offset:112; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x1, 0, x16, 112, x17, x15, 112, x18)

inst_135:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xa6e873e0de6e8 and fs2 == 1 and fe2 == 0x398 and fm2 == 0x566f863fed1c5 and rm_val == 0  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x39aa6e873e0de6e8; op2val:0xb98566f863fed1c5; valaddr_reg:x16; val_offset:128; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x0, 0, x16, 128, x17, x15, 128, x18)

inst_136:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x418e4602ec269 and fs2 == 1 and fe2 == 0x398 and fm2 == 0x045e78f2d1def and rm_val == 4  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x39a418e4602ec269; op2val:0xb98045e78f2d1def; valaddr_reg:x16; val_offset:144; rmval:0x4; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x4, 0, x16, 144, x17, x15, 144, x18)

inst_137:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x418e4602ec269 and fs2 == 1 and fe2 == 0x398 and fm2 == 0x045e78f2d1def and rm_val == 3  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x39a418e4602ec269; op2val:0xb98045e78f2d1def; valaddr_reg:x16; val_offset:160; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x3, 0, x16, 160, x17, x15, 160, x18)

inst_138:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x418e4602ec269 and fs2 == 1 and fe2 == 0x398 and fm2 == 0x045e78f2d1def and rm_val == 2  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x39a418e4602ec269; op2val:0xb98045e78f2d1def; valaddr_reg:x16; val_offset:176; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x2, 0, x16, 176, x17, x15, 176, x18)

inst_139:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x418e4602ec269 and fs2 == 1 and fe2 == 0x398 and fm2 == 0x045e78f2d1def and rm_val == 1  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x39a418e4602ec269; op2val:0xb98045e78f2d1def; valaddr_reg:x16; val_offset:192; rmval:0x1; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x1, 0, x16, 192, x17, x15, 192, x18)

inst_140:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x02c5c0cc0268b and fs2 == 0 and fe2 == 0x408 and fm2 == 0x3f3e196c11b71 and rm_val == 3  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x39b02c5c0cc0268b; op2val:0x4083f3e196c11b71; valaddr_reg:x16; val_offset:208; rmval:0x3; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x3, 0, x16, 208, x17, x15, 208, x18)

inst_141:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x02c5c0cc0268b and fs2 == 0 and fe2 == 0x408 and fm2 == 0x3f3e196c11b71 and rm_val == 2  
// opcode: fdiv.d ; op1:f10; op2:f11; dest:f12; op1val:0x39b02c5c0cc0268b; op2val:0x4083f3e196c11b71; valaddr_reg:x16; val_offset:224; rmval:0x2; correctval:0; testreg:x18
TEST_FPRR_OP(fdiv.d, f12, f10, f11, 0x2, 0, x16, 224, x17, x15, 224, x18)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_fp:
.dword 0x39a418e4602ec269
.dword 0xb98045e78f2d1def
.dword 0x39b02c5c0cc0268b
.dword 0x4083f3e196c11b71
.dword 0x39b02c5c0cc0268b
.dword 0x39b02c5c0cc0268b
.dword 0x39b02c5c0cc0268b
.dword 0x39b02c5c0cc0268b
.dword 0x39b02c5c0cc0268b
.dword 0x4083f3e196c11b71
.dword 0x39b02c5c0cc0268b
.dword 0x4083f3e196c11b71
.dword 0x3966689666859a12
.dword 0x40098db5beecbb21
.dword 0x3966689666859a12
.dword 0x40098db5beecbb21
.dword 0x3966689666859a12
.dword 0x40098db5beecbb21
.dword 0x3966689666859a12
.dword 0x40098db5beecbb21
.dword 0x3966689666859a12
.dword 0x40098db5beecbb21
.dword 0x39a47f2accde0b78
.dword 0x400d20ac4d8bb72d
.dword 0x39a47f2accde0b78
.dword 0x400d20ac4d8bb72d
.dword 0x39a47f2accde0b78
.dword 0x400d20ac4d8bb72d
.dword 0x39a47f2accde0b78
.dword 0x400d20ac4d8bb72d
.dword 0x39a47f2accde0b78
.dword 0x400d20ac4d8bb72d
.dword 0x39b1e617cb293d27
.dword 0x3fd1e617cb293d27
.dword 0x39b1e617cb293d27
.dword 0x3fd1e617cb293d27
.dword 0x39b1e617cb293d27
.dword 0x3fd1e617cb293d27
.dword 0x39b1e617cb293d27
.dword 0x3fd1e617cb293d27
.dword 0x39b1e617cb293d27
.dword 0x3fd1e617cb293d27
.dword 0x39989cb7abcc5297
.dword 0x3f5c1103c9e6e30c
.dword 0x39989cb7abcc5297
.dword 0x3f5c1103c9e6e30c
.dword 0x39989cb7abcc5297
.dword 0x3f5c1103c9e6e30c
.dword 0x39989cb7abcc5297
.dword 0x3f5c1103c9e6e30c
.dword 0x39989cb7abcc5297
.dword 0x3f5c1103c9e6e30c
.dword 0x39b0d5caae56147d
.dword 0x3ef0d5caae56147d
.dword 0x39b0d5caae56147d
.dword 0x3ef0d5caae56147d
.dword 0x39b0d5caae56147d
.dword 0x3ef0d5caae56147d
.dword 0x39b0d5caae56147d
.dword 0x3ef0d5caae56147d
.dword 0x39b0d5caae56147d
.dword 0x3ef0d5caae56147d
.dword 0x39b2fe470b5b6140
.dword 0x3e12fe470b5b6140
.dword 0x39b2fe470b5b6140
.dword 0x3e12fe470b5b6140
.dword 0x39b2fe470b5b6140
.dword 0x3e12fe470b5b6140
.dword 0x39b2fe470b5b6140
.dword 0x3e12fe470b5b6140
.dword 0x39b2fe470b5b6140
.dword 0x3e12fe470b5b6140
.dword 0x39ad44528bd16692
.dword 0x40820d90fd02e865
.dword 0x39ad44528bd16692
.dword 0x40820d90fd02e865
.dword 0x39ad44528bd16692
.dword 0x40820d90fd02e865
.dword 0x39ad44528bd16692
.dword 0x40820d90fd02e865
.dword 0x39ad44528bd16692
.dword 0x40820d90fd02e865
.dword 0x39839d928d470f2e
.dword 0x40265e57ef9b16de
.dword 0x39839d928d470f2e
.dword 0x40265e57ef9b16de
.dword 0x39839d928d470f2e
.dword 0x40265e57ef9b16de
.dword 0x39839d928d470f2e
.dword 0x40265e57ef9b16de
.dword 0x39839d928d470f2e
.dword 0x40265e57ef9b16de
.dword 0x39b421947d912a96
.dword 0x401c9bad7f3a2b19
.dword 0x39b421947d912a96
.dword 0x401c9bad7f3a2b19
.dword 0x39b421947d912a96
.dword 0x401c9bad7f3a2b19
.dword 0x39b421947d912a96
.dword 0x401c9bad7f3a2b19
.dword 0x39b421947d912a96
.dword 0x401c9bad7f3a2b19
.dword 0x39aa0df74c28420b
.dword 0x3fca0df74c28420b
.dword 0x39aa0df74c28420b
.dword 0x3fca0df74c28420b
.dword 0x39aa0df74c28420b
.dword 0x3fca0df74c28420b
.dword 0x39aa0df74c28420b
.dword 0x3fca0df74c28420b
.dword 0x39aa0df74c28420b
.dword 0x3fca0df74c28420b
.dword 0x39b0fcf4180a101f
.dword 0x3f735f52c697170d
.dword 0x39b0fcf4180a101f
.dword 0x3f735f52c697170d
.dword 0x39b0fcf4180a101f
.dword 0x3f735f52c697170d
.dword 0x39b0fcf4180a101f
.dword 0x3f735f52c697170d
.dword 0x39b0fcf4180a101f
.dword 0x3f735f52c697170d
.dword 0x3997828756cfe4e5
.dword 0x3ed7828756cfe4e5
.dword 0x3997828756cfe4e5
.dword 0x3ed7828756cfe4e5
.dword 0x3997828756cfe4e5
.dword 0x3ed7828756cfe4e5
.dword 0x3997828756cfe4e5
.dword 0x3ed7828756cfe4e5
.dword 0x3997828756cfe4e5
.dword 0x3ed7828756cfe4e5
.dword 0x3991bfe784e40809
.dword 0x3df1bfe784e40809
.dword 0x3991bfe784e40809
.dword 0x3df1bfe784e40809
.dword 0x3991bfe784e40809
.dword 0x3df1bfe784e40809
.dword 0x3991bfe784e40809
.dword 0x3df1bfe784e40809
.dword 0x3991bfe784e40809
.dword 0x3df1bfe784e40809
.dword 0x3992e8f981b456da
.dword 0x406754376699109b
.dword 0x3992e8f981b456da
.dword 0x406754376699109b
.dword 0x3992e8f981b456da
.dword 0x406754376699109b
.dword 0x3992e8f981b456da
.dword 0x406754376699109b
.dword 0x3992e8f981b456da
.dword 0x406754376699109b
.dword 0x39a1c348e5a01e40
.dword 0x4044417d796e8421
.dword 0x39a1c348e5a01e40
.dword 0x4044417d796e8421
.dword 0x39a1c348e5a01e40
.dword 0x4044417d796e8421
.dword 0x39a1c348e5a01e40
.dword 0x4044417d796e8421
.dword 0x39a1c348e5a01e40
.dword 0x4044417d796e8421
.dword 0x3962d93a7ddcf918
.dword 0x3fcac90fe564317d
.dword 0x3962d93a7ddcf918
.dword 0x3fcac90fe564317d
.dword 0x3962d93a7ddcf918
.dword 0x3fcac90fe564317d
.dword 0x3962d93a7ddcf918
.dword 0x3fcac90fe564317d
.dword 0x3962d93a7ddcf918
.dword 0x3fcac90fe564317d
.dword 0x39919297ee1df49e
.dword 0x3fb19297ee1df49e
.dword 0x39919297ee1df49e
.dword 0x3fb19297ee1df49e
.dword 0x39919297ee1df49e
.dword 0x3fb19297ee1df49e
.dword 0x39919297ee1df49e
.dword 0x3fb19297ee1df49e
.dword 0x39919297ee1df49e
.dword 0x3fb19297ee1df49e
.dword 0x39b30c575c0088ed
.dword 0x3f75b8bab1729615
.dword 0x39b30c575c0088ed
.dword 0x3f75b8bab1729615
.dword 0x39b30c575c0088ed
.dword 0x3f75b8bab1729615
.dword 0x39b30c575c0088ed
.dword 0x3f75b8bab1729615
.dword 0x39b30c575c0088ed
.dword 0x3f75b8bab1729615
.dword 0x396083eb39d48cc2
.dword 0x3ea083eb39d48cc2
.dword 0x396083eb39d48cc2
.dword 0x3ea083eb39d48cc2
.dword 0x396083eb39d48cc2
.dword 0x3ea083eb39d48cc2
.dword 0x396083eb39d48cc2
.dword 0x3ea083eb39d48cc2
.dword 0x396083eb39d48cc2
.dword 0x3ea083eb39d48cc2
.dword 0x39b2487a9ce230f6
.dword 0x3e12487a9ce230f6
.dword 0x39b2487a9ce230f6
.dword 0x3e12487a9ce230f6
.dword 0x39b2487a9ce230f6
.dword 0x3e12487a9ce230f6
.dword 0x39b2487a9ce230f6
.dword 0x3e12487a9ce230f6
.dword 0x39b2487a9ce230f6
.dword 0x3e12487a9ce230f6
.dword 0x39928f349876c8fd
.dword 0xb96e0e4284e5ad21
.dword 0x39928f349876c8fd
.dword 0xb96e0e4284e5ad21
.dword 0x39928f349876c8fd
.dword 0xb96e0e4284e5ad21
.dword 0x39928f349876c8fd
.dword 0xb96e0e4284e5ad21
.dword 0x39928f349876c8fd
.dword 0xb96e0e4284e5ad21
.dword 0x39a2112a412db148
.dword 0xb97d422555dc2234
.dword 0x39a2112a412db148
.dword 0xb97d422555dc2234
.dword 0x39a2112a412db148
.dword 0xb97d422555dc2234
.dword 0x39a2112a412db148
.dword 0xb97d422555dc2234
.dword 0x39a2112a412db148
.dword 0xb97d422555dc2234
.dword 0x39aeebf80d6e52f5
.dword 0xb98909b1039ec5c3
.dword 0x39aeebf80d6e52f5
.dword 0xb98909b1039ec5c3
.dword 0x39aeebf80d6e52f5
.dword 0xb98909b1039ec5c3
.dword 0x39aeebf80d6e52f5
.dword 0xb98909b1039ec5c3
.dword 0x39aeebf80d6e52f5
.dword 0xb98909b1039ec5c3
.dword 0x39b0f38a5fc0747c
.dword 0xb98b739892c5a8f2
.dword 0x39b0f38a5fc0747c
.dword 0xb98b739892c5a8f2
.dword 0x39b0f38a5fc0747c
.dword 0xb98b739892c5a8f2
.dword 0x39b0f38a5fc0747c
.dword 0xb98b739892c5a8f2
.dword 0x39b0f38a5fc0747c
.dword 0xb98b739892c5a8f2
.dword 0x397e758ca5883966
.dword 0xb958a9ce20769831
.dword 0x397e758ca5883966
.dword 0xb958a9ce20769831
.dword 0x397e758ca5883966
.dword 0xb958a9ce20769831
.dword 0x397e758ca5883966
.dword 0xb958a9ce20769831
.dword 0x397e758ca5883966
.dword 0xb958a9ce20769831
.dword 0x39aa6e873e0de6e8
.dword 0xb98566f863fed1c5
.dword 0x39aa6e873e0de6e8
.dword 0xb98566f863fed1c5
.dword 0x39aa6e873e0de6e8
.dword 0xb98566f863fed1c5
.dword 0x39aa6e873e0de6e8
.dword 0xb98566f863fed1c5
.dword 0x39aa6e873e0de6e8
.dword 0xb98566f863fed1c5
.dword 0x39a418e4602ec269
.dword 0xb98045e78f2d1def
.dword 0x39a418e4602ec269
.dword 0xb98045e78f2d1def
.dword 0x39a418e4602ec269
.dword 0xb98045e78f2d1def
.dword 0x39a418e4602ec269
.dword 0xb98045e78f2d1def
.dword 0x39b02c5c0cc0268b
.dword 0x4083f3e196c11b71
.dword 0x39b02c5c0cc0268b
.dword 0x4083f3e196c11b71
RVTEST_DATA_END

RVMODEL_DATA_BEGIN


signature_x15_0:
    .fill 0*(XLEN/32),4,0xdeadbeef


signature_x15_1:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_2:
    .fill 30*(XLEN/32),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*(XLEN/32),4,0xdeadbeef

#endif

RVMODEL_DATA_END
