
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.5.6
// timestamp : Mon Sep 20 11:53:35 2021 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/compliance_fd/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /scratch/compliance_fd/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV64D/rv64d_fadd.cgf \
 \
//                  -- xlen 64  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2021. IIT Madras. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fadd.d instruction of the RISC-V FD extension for the fadd_b2 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV64IFD")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*64.*);check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",d_fadd_b2)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x16,test_fp)
RVTEST_SIGBASE(x15,signature_x15_1)

inst_0:
// rs1 == rs2 == rd, rs1==f14, rs2==f14, rd==f14, fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000032 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000031 and rm_val == 0  
// opcode: fadd.d ; op1:f14; op2:f14; dest:f14; op1val:0x32; op2val:0x32; valaddr_reg:x16; val_offset:0; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f14, f14, f14, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_1:
// rs2 == rd != rs1, rs1==f1, rs2==f10, rd==f10, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000031 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fadd.d ; op1:f1; op2:f10; dest:f10; op1val:0x7fe0000000000031; op2val:0xfff0000000000000; valaddr_reg:x16; val_offset:16; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f10, f1, f10, 0x0, 0, x16, 16, x17, x15, 16, x18)

inst_2:
// rs1 == rd != rs2, rs1==f25, rs2==f7, rd==f25, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000004e and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fadd.d ; op1:f25; op2:f7; dest:f25; op1val:0x7fe000000000004e; op2val:0xfff0000000000000; valaddr_reg:x16; val_offset:32; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f25, f25, f7, 0x0, 0, x16, 32, x17, x15, 32, x18)

inst_3:
// rs1 == rs2 != rd, rs1==f29, rs2==f29, rd==f30, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000013 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fadd.d ; op1:f29; op2:f29; dest:f30; op1val:0x7fe0000000000013; op2val:0x7fe0000000000013; valaddr_reg:x16; val_offset:48; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f30, f29, f29, 0x0, 0, x16, 48, x17, x15, 48, x18)

inst_4:
// rs1 != rs2  and rs1 != rd and rs2 != rd, rs1==f30, rs2==f8, rd==f26, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000005 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fadd.d ; op1:f30; op2:f8; dest:f26; op1val:0x7fe0000000000005; op2val:0xfff0000000000000; valaddr_reg:x16; val_offset:64; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f26, f30, f8, 0x0, 0, x16, 64, x17, x15, 64, x18)

inst_5:
// rs1==f28, rs2==f22, rd==f13, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000029 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fadd.d ; op1:f28; op2:f22; dest:f13; op1val:0x7fe0000000000029; op2val:0xfff0000000000000; valaddr_reg:x16; val_offset:80; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f13, f28, f22, 0x0, 0, x16, 80, x17, x15, 80, x18)

inst_6:
// rs1==f12, rs2==f27, rd==f31, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000005b and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fadd.d ; op1:f12; op2:f27; dest:f31; op1val:0x7fe000000000005b; op2val:0xfff0000000000000; valaddr_reg:x16; val_offset:96; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f31, f12, f27, 0x0, 0, x16, 96, x17, x15, 96, x18)

inst_7:
// rs1==f27, rs2==f4, rd==f9, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000002 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fadd.d ; op1:f27; op2:f4; dest:f9; op1val:0x7fe0000000000002; op2val:0xfff0000000000000; valaddr_reg:x16; val_offset:112; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f9, f27, f4, 0x0, 0, x16, 112, x17, x15, 112, x18)

inst_8:
// rs1==f6, rs2==f5, rd==f18, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000004f and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fadd.d ; op1:f6; op2:f5; dest:f18; op1val:0x7fe000000000004f; op2val:0xfff0000000000000; valaddr_reg:x16; val_offset:128; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f18, f6, f5, 0x0, 0, x16, 128, x17, x15, 128, x18)

inst_9:
// rs1==f23, rs2==f30, rd==f11, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000001a and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fadd.d ; op1:f23; op2:f30; dest:f11; op1val:0x7fe000000000001a; op2val:0xfff0000000000000; valaddr_reg:x16; val_offset:144; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f11, f23, f30, 0x0, 0, x16, 144, x17, x15, 144, x18)

inst_10:
// rs1==f19, rs2==f24, rd==f6, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000052 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fadd.d ; op1:f19; op2:f24; dest:f6; op1val:0x7fe0000000000052; op2val:0xfff0000000000000; valaddr_reg:x16; val_offset:160; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f6, f19, f24, 0x0, 0, x16, 160, x17, x15, 160, x18)

inst_11:
// rs1==f10, rs2==f2, rd==f17, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000040 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f2; dest:f17; op1val:0x7fe0000000000040; op2val:0xfff0000000000000; valaddr_reg:x16; val_offset:176; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f17, f10, f2, 0x0, 0, x16, 176, x17, x15, 176, x18)

inst_12:
// rs1==f24, rs2==f12, rd==f2, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000057 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fadd.d ; op1:f24; op2:f12; dest:f2; op1val:0x7fe0000000000057; op2val:0xfff0000000000000; valaddr_reg:x16; val_offset:192; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f2, f24, f12, 0x0, 0, x16, 192, x17, x15, 192, x18)

inst_13:
// rs1==f0, rs2==f1, rd==f28, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000043 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fadd.d ; op1:f0; op2:f1; dest:f28; op1val:0x7fe0000000000043; op2val:0xfff0000000000000; valaddr_reg:x16; val_offset:208; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f28, f0, f1, 0x0, 0, x16, 208, x17, x15, 208, x18)

inst_14:
// rs1==f20, rs2==f16, rd==f5, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000058 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fadd.d ; op1:f20; op2:f16; dest:f5; op1val:0x7fe0000000000058; op2val:0xfff0000000000000; valaddr_reg:x16; val_offset:224; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f5, f20, f16, 0x0, 0, x16, 224, x17, x15, 224, x18)

inst_15:
// rs1==f18, rs2==f17, rd==f15, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000034 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fadd.d ; op1:f18; op2:f17; dest:f15; op1val:0x7fe0000000000034; op2val:0xfff0000000000000; valaddr_reg:x16; val_offset:240; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f15, f18, f17, 0x0, 0, x16, 240, x17, x15, 240, x18)

inst_16:
// rs1==f15, rs2==f19, rd==f27, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000004d and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fadd.d ; op1:f15; op2:f19; dest:f27; op1val:0x7fe000000000004d; op2val:0xfff0000000000000; valaddr_reg:x16; val_offset:256; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f27, f15, f19, 0x0, 0, x16, 256, x17, x15, 256, x18)

inst_17:
// rs1==f4, rs2==f20, rd==f24, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000014 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fadd.d ; op1:f4; op2:f20; dest:f24; op1val:0x7fe0000000000014; op2val:0xfff0000000000000; valaddr_reg:x16; val_offset:272; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f24, f4, f20, 0x0, 0, x16, 272, x17, x15, 272, x18)

inst_18:
// rs1==f17, rs2==f6, rd==f16, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000002f and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fadd.d ; op1:f17; op2:f6; dest:f16; op1val:0x7fe000000000002f; op2val:0xfff0000000000000; valaddr_reg:x16; val_offset:288; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f16, f17, f6, 0x0, 0, x16, 288, x17, x15, 288, x18)

inst_19:
// rs1==f2, rs2==f13, rd==f20, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000003b and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fadd.d ; op1:f2; op2:f13; dest:f20; op1val:0x7fe000000000003b; op2val:0xfff0000000000000; valaddr_reg:x16; val_offset:304; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f20, f2, f13, 0x0, 0, x16, 304, x17, x15, 304, x18)

inst_20:
// rs1==f16, rs2==f31, rd==f3, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000000e and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fadd.d ; op1:f16; op2:f31; dest:f3; op1val:0x7fe000000000000e; op2val:0xfff0000000000000; valaddr_reg:x16; val_offset:320; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f3, f16, f31, 0x0, 0, x16, 320, x17, x15, 320, x18)

inst_21:
// rs1==f7, rs2==f18, rd==f12, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000050 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fadd.d ; op1:f7; op2:f18; dest:f12; op1val:0x7fe0000000000050; op2val:0xfff0000000000000; valaddr_reg:x16; val_offset:336; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f7, f18, 0x0, 0, x16, 336, x17, x15, 336, x18)

inst_22:
// rs1==f3, rs2==f25, rd==f29, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000006 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fadd.d ; op1:f3; op2:f25; dest:f29; op1val:0x7fe0000000000006; op2val:0xfff0000000000000; valaddr_reg:x16; val_offset:352; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f29, f3, f25, 0x0, 0, x16, 352, x17, x15, 352, x18)

inst_23:
// rs1==f31, rs2==f21, rd==f8, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000001b and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xfffffff7fffc8 and rm_val == 0  
// opcode: fadd.d ; op1:f31; op2:f21; dest:f8; op1val:0x7fe000000000001b; op2val:0x7fdfffffff7fffc8; valaddr_reg:x16; val_offset:368; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f8, f31, f21, 0x0, 0, x16, 368, x17, x15, 368, x18)

inst_24:
// rs1==f21, rs2==f9, rd==f0, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000033 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xfffffffbfff98 and rm_val == 0  
// opcode: fadd.d ; op1:f21; op2:f9; dest:f0; op1val:0x7fe0000000000033; op2val:0x7fdfffffffbfff98; valaddr_reg:x16; val_offset:384; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f0, f21, f9, 0x0, 0, x16, 384, x17, x15, 384, x18)

inst_25:
// rs1==f9, rs2==f28, rd==f19, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000010 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xfffffffdfffde and rm_val == 0  
// opcode: fadd.d ; op1:f9; op2:f28; dest:f19; op1val:0x7fe0000000000010; op2val:0x7fdfffffffdfffde; valaddr_reg:x16; val_offset:400; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f19, f9, f28, 0x0, 0, x16, 400, x17, x15, 400, x18)

inst_26:
// rs1==f5, rs2==f11, rd==f4, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000057 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xfffffffefff50 and rm_val == 0  
// opcode: fadd.d ; op1:f5; op2:f11; dest:f4; op1val:0x7fe0000000000057; op2val:0x7fdfffffffefff50; valaddr_reg:x16; val_offset:416; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f4, f5, f11, 0x0, 0, x16, 416, x17, x15, 416, x18)

inst_27:
// rs1==f26, rs2==f23, rd==f7, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000003a and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xffffffff7ff8a and rm_val == 0  
// opcode: fadd.d ; op1:f26; op2:f23; dest:f7; op1val:0x7fe000000000003a; op2val:0x7fdffffffff7ff8a; valaddr_reg:x16; val_offset:432; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f7, f26, f23, 0x0, 0, x16, 432, x17, x15, 432, x18)

inst_28:
// rs1==f11, rs2==f0, rd==f1, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000004 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xffffffffbfff6 and rm_val == 0  
// opcode: fadd.d ; op1:f11; op2:f0; dest:f1; op1val:0x7fe0000000000004; op2val:0x7fdffffffffbfff6; valaddr_reg:x16; val_offset:448; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f1, f11, f0, 0x0, 0, x16, 448, x17, x15, 448, x18)

inst_29:
// rs1==f8, rs2==f3, rd==f23, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000009 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xffffffffdffec and rm_val == 0  
// opcode: fadd.d ; op1:f8; op2:f3; dest:f23; op1val:0x7fe0000000000009; op2val:0x7fdffffffffdffec; valaddr_reg:x16; val_offset:464; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f23, f8, f3, 0x0, 0, x16, 464, x17, x15, 464, x18)

inst_30:
// rs1==f22, rs2==f15, rd==f21, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000002e and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xffffffffeffa2 and rm_val == 0  
// opcode: fadd.d ; op1:f22; op2:f15; dest:f21; op1val:0x7fe000000000002e; op2val:0x7fdffffffffeffa2; valaddr_reg:x16; val_offset:480; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f21, f22, f15, 0x0, 0, x16, 480, x17, x15, 480, x18)

inst_31:
// rs1==f13, rs2==f26, rd==f22, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000038 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xfffffffff7f8e and rm_val == 0  
// opcode: fadd.d ; op1:f13; op2:f26; dest:f22; op1val:0x7fe0000000000038; op2val:0x7fdfffffffff7f8e; valaddr_reg:x16; val_offset:496; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f22, f13, f26, 0x0, 0, x16, 496, x17, x15, 496, x18)

inst_32:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000004b and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xfffffffffbf68 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fe000000000004b; op2val:0x7fdfffffffffbf68; valaddr_reg:x16; val_offset:512; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 512, x17, x15, 512, x18)

inst_33:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000001d and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xfffffffffdfc4 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fe000000000001d; op2val:0x7fdfffffffffdfc4; valaddr_reg:x16; val_offset:528; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 528, x17, x15, 528, x18)

inst_34:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000000b and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xfffffffffefe8 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fe000000000000b; op2val:0x7fdfffffffffefe8; valaddr_reg:x16; val_offset:544; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 544, x17, x15, 544, x18)

inst_35:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000001c and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xffffffffff7c6 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fe000000000001c; op2val:0x7fdffffffffff7c6; valaddr_reg:x16; val_offset:560; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 560, x17, x15, 560, x18)

inst_36:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000005c and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xffffffffffb46 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fe000000000005c; op2val:0x7fdffffffffffb46; valaddr_reg:x16; val_offset:576; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 576, x17, x15, 576, x18)

inst_37:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000003f and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xffffffffffd80 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fe000000000003f; op2val:0x7fdffffffffffd80; valaddr_reg:x16; val_offset:592; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 592, x17, x15, 592, x18)

inst_38:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000026 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xffffffffffeb2 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fe0000000000026; op2val:0x7fdffffffffffeb2; valaddr_reg:x16; val_offset:608; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 608, x17, x15, 608, x18)

inst_39:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000048 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xffffffffffeee and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fe0000000000048; op2val:0x7fdffffffffffeee; valaddr_reg:x16; val_offset:624; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 624, x17, x15, 624, x18)

inst_40:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000000d and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xfffffffffffa4 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fe000000000000d; op2val:0x7fdfffffffffffa4; valaddr_reg:x16; val_offset:640; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 640, x17, x15, 640, x18)

inst_41:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000032 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xfffffffffff7a and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fe0000000000032; op2val:0x7fdfffffffffff7a; valaddr_reg:x16; val_offset:656; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 656, x17, x15, 656, x18)

inst_42:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000001d and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xfffffffffffb4 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fe000000000001d; op2val:0x7fdfffffffffffb4; valaddr_reg:x16; val_offset:672; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 672, x17, x15, 672, x18)

inst_43:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x000000000001a and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xfffffffffffc2 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fe000000000001a; op2val:0x7fdfffffffffffc2; valaddr_reg:x16; val_offset:688; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 688, x17, x15, 688, x18)

inst_44:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000009 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xfffffffffffe8 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fe0000000000009; op2val:0x7fdfffffffffffe8; valaddr_reg:x16; val_offset:704; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 704, x17, x15, 704, x18)

inst_45:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000052 and fs2 == 0 and fe2 == 0x7fd and fm2 == 0xfffffffffff58 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fe0000000000052; op2val:0x7fdfffffffffff58; valaddr_reg:x16; val_offset:720; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 720, x17, x15, 720, x18)

inst_46:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000049 and fs2 == 1 and fe2 == 0x002 and fm2 == 0x0000000200024 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000049; op2val:0x8020000000200024; valaddr_reg:x16; val_offset:736; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 736, x17, x15, 736, x18)

inst_47:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000016 and fs2 == 1 and fe2 == 0x002 and fm2 == 0x000000010000b and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000016; op2val:0x802000000010000b; valaddr_reg:x16; val_offset:752; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 752, x17, x15, 752, x18)

inst_48:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000058 and fs2 == 1 and fe2 == 0x002 and fm2 == 0x000000008002c and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000058; op2val:0x802000000008002c; valaddr_reg:x16; val_offset:768; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 768, x17, x15, 768, x18)

inst_49:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000002b and fs2 == 1 and fe2 == 0x002 and fm2 == 0x0000000040016 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x1000000000002b; op2val:0x8020000000040016; valaddr_reg:x16; val_offset:784; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 784, x17, x15, 784, x18)

inst_50:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000005 and fs2 == 1 and fe2 == 0x002 and fm2 == 0x0000000020002 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000005; op2val:0x8020000000020002; valaddr_reg:x16; val_offset:800; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 800, x17, x15, 800, x18)

inst_51:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000040 and fs2 == 1 and fe2 == 0x002 and fm2 == 0x0000000010020 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000040; op2val:0x8020000000010020; valaddr_reg:x16; val_offset:816; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 816, x17, x15, 816, x18)

inst_52:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000000f and fs2 == 1 and fe2 == 0x002 and fm2 == 0x0000000008008 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x1000000000000f; op2val:0x8020000000008008; valaddr_reg:x16; val_offset:832; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 832, x17, x15, 832, x18)

inst_53:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000010 and fs2 == 1 and fe2 == 0x002 and fm2 == 0x0000000004008 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000010; op2val:0x8020000000004008; valaddr_reg:x16; val_offset:848; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 848, x17, x15, 848, x18)

inst_54:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000002c and fs2 == 1 and fe2 == 0x002 and fm2 == 0x0000000002016 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x1000000000002c; op2val:0x8020000000002016; valaddr_reg:x16; val_offset:864; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 864, x17, x15, 864, x18)

inst_55:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000003e and fs2 == 1 and fe2 == 0x002 and fm2 == 0x000000000101f and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x1000000000003e; op2val:0x802000000000101f; valaddr_reg:x16; val_offset:880; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 880, x17, x15, 880, x18)

inst_56:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000000d and fs2 == 1 and fe2 == 0x002 and fm2 == 0x0000000000806 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x1000000000000d; op2val:0x8020000000000806; valaddr_reg:x16; val_offset:896; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 896, x17, x15, 896, x18)

inst_57:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000036 and fs2 == 1 and fe2 == 0x002 and fm2 == 0x000000000041b and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000036; op2val:0x802000000000041b; valaddr_reg:x16; val_offset:912; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 912, x17, x15, 912, x18)

inst_58:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000002b and fs2 == 1 and fe2 == 0x002 and fm2 == 0x0000000000216 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x1000000000002b; op2val:0x8020000000000216; valaddr_reg:x16; val_offset:928; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 928, x17, x15, 928, x18)

inst_59:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000027 and fs2 == 1 and fe2 == 0x002 and fm2 == 0x0000000000114 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000027; op2val:0x8020000000000114; valaddr_reg:x16; val_offset:944; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 944, x17, x15, 944, x18)

inst_60:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000005e and fs2 == 1 and fe2 == 0x002 and fm2 == 0x00000000000af and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x1000000000005e; op2val:0x80200000000000af; valaddr_reg:x16; val_offset:960; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 960, x17, x15, 960, x18)

inst_61:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000017 and fs2 == 1 and fe2 == 0x002 and fm2 == 0x000000000004c and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000017; op2val:0x802000000000004c; valaddr_reg:x16; val_offset:976; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 976, x17, x15, 976, x18)

inst_62:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000007 and fs2 == 1 and fe2 == 0x002 and fm2 == 0x0000000000024 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000007; op2val:0x8020000000000024; valaddr_reg:x16; val_offset:992; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 992, x17, x15, 992, x18)

inst_63:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000005e and fs2 == 1 and fe2 == 0x002 and fm2 == 0x000000000003f and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x1000000000005e; op2val:0x802000000000003f; valaddr_reg:x16; val_offset:1008; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1008, x17, x15, 1008, x18)

inst_64:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000000f and fs2 == 1 and fe2 == 0x002 and fm2 == 0x0000000000010 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x1000000000000f; op2val:0x8020000000000010; valaddr_reg:x16; val_offset:1024; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1024, x17, x15, 1024, x18)

inst_65:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000011 and fs2 == 1 and fe2 == 0x002 and fm2 == 0x000000000000c and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000011; op2val:0x802000000000000c; valaddr_reg:x16; val_offset:1040; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1040, x17, x15, 1040, x18)

inst_66:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000033 and fs2 == 1 and fe2 == 0x002 and fm2 == 0x000000000001c and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000033; op2val:0x802000000000001c; valaddr_reg:x16; val_offset:1056; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1056, x17, x15, 1056, x18)

inst_67:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000026 and fs2 == 1 and fe2 == 0x002 and fm2 == 0x0000000000014 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000026; op2val:0x8020000000000014; valaddr_reg:x16; val_offset:1072; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1072, x17, x15, 1072, x18)

inst_68:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000014 and fs2 == 1 and fe2 == 0x002 and fm2 == 0x000000000000a and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000014; op2val:0x802000000000000a; valaddr_reg:x16; val_offset:1088; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1088, x17, x15, 1088, x18)

inst_69:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x00000003fffdd and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000023; op2val:0x3fffdd; valaddr_reg:x16; val_offset:1104; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1104, x17, x15, 1104, x18)

inst_70:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000005 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x00000001ffffb and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000005; op2val:0x1ffffb; valaddr_reg:x16; val_offset:1120; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1120, x17, x15, 1120, x18)

inst_71:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000002c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x00000000fffd4 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x1000000000002c; op2val:0xfffd4; valaddr_reg:x16; val_offset:1136; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1136, x17, x15, 1136, x18)

inst_72:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000005c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x000000007ffa4 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x1000000000005c; op2val:0x7ffa4; valaddr_reg:x16; val_offset:1152; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1152, x17, x15, 1152, x18)

inst_73:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000002c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x000000003ffd4 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x1000000000002c; op2val:0x3ffd4; valaddr_reg:x16; val_offset:1168; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1168, x17, x15, 1168, x18)

inst_74:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000023 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x000000001ffdd and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000023; op2val:0x1ffdd; valaddr_reg:x16; val_offset:1184; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1184, x17, x15, 1184, x18)

inst_75:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000012 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x000000000ffee and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000012; op2val:0xffee; valaddr_reg:x16; val_offset:1200; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1200, x17, x15, 1200, x18)

inst_76:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000026 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000007fda and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000026; op2val:0x7fda; valaddr_reg:x16; val_offset:1216; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1216, x17, x15, 1216, x18)

inst_77:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000031 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000003fcf and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000031; op2val:0x3fcf; valaddr_reg:x16; val_offset:1232; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1232, x17, x15, 1232, x18)

inst_78:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000017 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000001fe9 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000017; op2val:0x1fe9; valaddr_reg:x16; val_offset:1248; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1248, x17, x15, 1248, x18)

inst_79:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000030 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000fd0 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000030; op2val:0xfd0; valaddr_reg:x16; val_offset:1264; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1264, x17, x15, 1264, x18)

inst_80:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000052 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x00000000007ae and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000052; op2val:0x7ae; valaddr_reg:x16; val_offset:1280; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1280, x17, x15, 1280, x18)

inst_81:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000053 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x00000000003ad and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000053; op2val:0x3ad; valaddr_reg:x16; val_offset:1296; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1296, x17, x15, 1296, x18)

inst_82:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000040 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x00000000001c0 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000040; op2val:0x1c0; valaddr_reg:x16; val_offset:1312; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1312, x17, x15, 1312, x18)

inst_83:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000004e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x00000000000b2 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x1000000000004e; op2val:0xb2; valaddr_reg:x16; val_offset:1328; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1328, x17, x15, 1328, x18)

inst_84:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000060 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000020 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000060; op2val:0x20; valaddr_reg:x16; val_offset:1344; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1344, x17, x15, 1344, x18)

inst_85:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000049 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000009 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000049; op2val:0x8000000000000009; valaddr_reg:x16; val_offset:1360; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1360, x17, x15, 1360, x18)

inst_86:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000029 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000009 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000029; op2val:0x8000000000000009; valaddr_reg:x16; val_offset:1376; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1376, x17, x15, 1376, x18)

inst_87:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000022 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000012 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000022; op2val:0x8000000000000012; valaddr_reg:x16; val_offset:1392; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1392, x17, x15, 1392, x18)

inst_88:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000001b and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000013 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x1000000000001b; op2val:0x8000000000000013; valaddr_reg:x16; val_offset:1408; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1408, x17, x15, 1408, x18)

inst_89:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000006 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000002 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000006; op2val:0x8000000000000002; valaddr_reg:x16; val_offset:1424; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1424, x17, x15, 1424, x18)

inst_90:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x0000000000024 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000022 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x10000000000024; op2val:0x8000000000000022; valaddr_reg:x16; val_offset:1440; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1440, x17, x15, 1440, x18)

inst_91:
// fs1 == 0 and fe1 == 0x001 and fm1 == 0x000000000000f and fs2 == 1 and fe2 == 0x000 and fm2 == 0x000000000000e and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x1000000000000f; op2val:0x800000000000000e; valaddr_reg:x16; val_offset:1456; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1456, x17, x15, 1456, x18)

inst_92:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000053 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffc00052 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x53; op2val:0x800fffffffc00052; valaddr_reg:x16; val_offset:1472; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1472, x17, x15, 1472, x18)

inst_93:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000043 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffe00042 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x43; op2val:0x800fffffffe00042; valaddr_reg:x16; val_offset:1488; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1488, x17, x15, 1488, x18)

inst_94:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000012 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xffffffff00011 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x12; op2val:0x800ffffffff00011; valaddr_reg:x16; val_offset:1504; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1504, x17, x15, 1504, x18)

inst_95:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000000f and fs2 == 1 and fe2 == 0x000 and fm2 == 0xffffffff8000e and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0xf; op2val:0x800ffffffff8000e; valaddr_reg:x16; val_offset:1520; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1520, x17, x15, 1520, x18)

inst_96:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000024 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xffffffffc0023 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x24; op2val:0x800ffffffffc0023; valaddr_reg:x16; val_offset:1536; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1536, x17, x15, 1536, x18)

inst_97:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000000b and fs2 == 1 and fe2 == 0x000 and fm2 == 0xffffffffe000a and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0xb; op2val:0x800ffffffffe000a; valaddr_reg:x16; val_offset:1552; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1552, x17, x15, 1552, x18)

inst_98:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000033 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffff0032 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x33; op2val:0x800fffffffff0032; valaddr_reg:x16; val_offset:1568; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1568, x17, x15, 1568, x18)

inst_99:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000000d and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffff800c and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0xd; op2val:0x800fffffffff800c; valaddr_reg:x16; val_offset:1584; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1584, x17, x15, 1584, x18)

inst_100:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000059 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffc058 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x59; op2val:0x800fffffffffc058; valaddr_reg:x16; val_offset:1600; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1600, x17, x15, 1600, x18)

inst_101:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000027 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffe026 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x27; op2val:0x800fffffffffe026; valaddr_reg:x16; val_offset:1616; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1616, x17, x15, 1616, x18)

inst_102:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000054 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xffffffffff053 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x54; op2val:0x800ffffffffff053; valaddr_reg:x16; val_offset:1632; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1632, x17, x15, 1632, x18)

inst_103:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000010 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xffffffffff80f and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x10; op2val:0x800ffffffffff80f; valaddr_reg:x16; val_offset:1648; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1648, x17, x15, 1648, x18)

inst_104:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000000d and fs2 == 1 and fe2 == 0x000 and fm2 == 0xffffffffffc0c and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0xd; op2val:0x800ffffffffffc0c; valaddr_reg:x16; val_offset:1664; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1664, x17, x15, 1664, x18)

inst_105:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000044 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xffffffffffe43 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x44; op2val:0x800ffffffffffe43; valaddr_reg:x16; val_offset:1680; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1680, x17, x15, 1680, x18)

inst_106:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffff00 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x800fffffffffff00; valaddr_reg:x16; val_offset:1696; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1696, x17, x15, 1696, x18)

inst_107:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000005c and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffdb and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x5c; op2val:0x800fffffffffffdb; valaddr_reg:x16; val_offset:1712; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1712, x17, x15, 1712, x18)

inst_108:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000001c and fs2 == 1 and fe2 == 0x000 and fm2 == 0xfffffffffffdb and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x1c; op2val:0x800fffffffffffdb; valaddr_reg:x16; val_offset:1728; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1728, x17, x15, 1728, x18)

inst_109:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000029 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000008 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x29; op2val:0x8010000000000008; valaddr_reg:x16; val_offset:1744; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1744, x17, x15, 1744, x18)

inst_110:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000057 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000046 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x57; op2val:0x8010000000000046; valaddr_reg:x16; val_offset:1760; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1760, x17, x15, 1760, x18)

inst_111:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000002 and fs2 == 1 and fe2 == 0x000 and fm2 == 0xffffffffffff9 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x2; op2val:0x800ffffffffffff9; valaddr_reg:x16; val_offset:1776; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1776, x17, x15, 1776, x18)

inst_112:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000005d and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000058 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x5d; op2val:0x8010000000000058; valaddr_reg:x16; val_offset:1792; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1792, x17, x15, 1792, x18)

inst_113:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000052 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x000000000004f and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x52; op2val:0x801000000000004f; valaddr_reg:x16; val_offset:1808; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1808, x17, x15, 1808, x18)

inst_114:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000019 and fs2 == 1 and fe2 == 0x001 and fm2 == 0x0000000000017 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x19; op2val:0x8010000000000017; valaddr_reg:x16; val_offset:1824; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1824, x17, x15, 1824, x18)

inst_115:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000007 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffbffff8 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x7; op2val:0xfffffffbffff8; valaddr_reg:x16; val_offset:1840; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1840, x17, x15, 1840, x18)

inst_116:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000028 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffdfffd7 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x28; op2val:0xfffffffdfffd7; valaddr_reg:x16; val_offset:1856; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1856, x17, x15, 1856, x18)

inst_117:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000040 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffefffbf and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x40; op2val:0xfffffffefffbf; valaddr_reg:x16; val_offset:1872; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1872, x17, x15, 1872, x18)

inst_118:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xffffffff7fffe and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0xffffffff7fffe; valaddr_reg:x16; val_offset:1888; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1888, x17, x15, 1888, x18)

inst_119:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000004e and fs2 == 0 and fe2 == 0x000 and fm2 == 0xffffffffbffb1 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x4e; op2val:0xffffffffbffb1; valaddr_reg:x16; val_offset:1904; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1904, x17, x15, 1904, x18)

inst_120:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000003f and fs2 == 0 and fe2 == 0x000 and fm2 == 0xffffffffdffc0 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x3f; op2val:0xffffffffdffc0; valaddr_reg:x16; val_offset:1920; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1920, x17, x15, 1920, x18)

inst_121:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000003a and fs2 == 0 and fe2 == 0x000 and fm2 == 0xffffffffeffc5 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x3a; op2val:0xffffffffeffc5; valaddr_reg:x16; val_offset:1936; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1936, x17, x15, 1936, x18)

inst_122:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000005a and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffff7fa5 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x5a; op2val:0xfffffffff7fa5; valaddr_reg:x16; val_offset:1952; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1952, x17, x15, 1952, x18)

inst_123:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000009 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffbff6 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x9; op2val:0xfffffffffbff6; valaddr_reg:x16; val_offset:1968; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1968, x17, x15, 1968, x18)

inst_124:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000016 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffdfe9 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x16; op2val:0xfffffffffdfe9; valaddr_reg:x16; val_offset:1984; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1984, x17, x15, 1984, x18)

inst_125:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000005b and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffefa4 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x5b; op2val:0xfffffffffefa4; valaddr_reg:x16; val_offset:2000; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 2000, x17, x15, 2000, x18)

inst_126:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000063 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xffffffffff79c and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x63; op2val:0xffffffffff79c; valaddr_reg:x16; val_offset:2016; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 2016, x17, x15, 2016, x18)
addi x16,x16,2032
RVTEST_SIGBASE(x15,signature_x15_2)

inst_127:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000049 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xffffffffffbb6 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x49; op2val:0xffffffffffbb6; valaddr_reg:x16; val_offset:0; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_128:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000034 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xffffffffffdcb and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x34; op2val:0xffffffffffdcb; valaddr_reg:x16; val_offset:16; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 16, x17, x15, 16, x18)

inst_129:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000036 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xffffffffffec9 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x36; op2val:0xffffffffffec9; valaddr_reg:x16; val_offset:32; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 32, x17, x15, 32, x18)

inst_130:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000057 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffff28 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x57; op2val:0xfffffffffff28; valaddr_reg:x16; val_offset:48; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 48, x17, x15, 48, x18)

inst_131:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000031 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffff8e and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x31; op2val:0xfffffffffff8e; valaddr_reg:x16; val_offset:64; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 64, x17, x15, 64, x18)

inst_132:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000052 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffff8d and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x52; op2val:0xfffffffffff8d; valaddr_reg:x16; val_offset:80; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 80, x17, x15, 80, x18)

inst_133:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000001f and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffd0 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x1f; op2val:0xfffffffffffd0; valaddr_reg:x16; val_offset:96; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 96, x17, x15, 96, x18)

inst_134:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000002b and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffcc and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x2b; op2val:0xfffffffffffcc; valaddr_reg:x16; val_offset:112; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 112, x17, x15, 112, x18)

inst_135:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000019 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffe2 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x19; op2val:0xfffffffffffe2; valaddr_reg:x16; val_offset:128; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 128, x17, x15, 128, x18)

inst_136:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xffffffffffffc and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0xffffffffffffc; valaddr_reg:x16; val_offset:144; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 144, x17, x15, 144, x18)

inst_137:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000054 and fs2 == 0 and fe2 == 0x000 and fm2 == 0xfffffffffffaa and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x54; op2val:0xfffffffffffaa; valaddr_reg:x16; val_offset:160; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 160, x17, x15, 160, x18)

inst_138:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000060 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000400061 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x60; op2val:0x8000000000400061; valaddr_reg:x16; val_offset:176; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 176, x17, x15, 176, x18)

inst_139:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000028 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000200029 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x28; op2val:0x8000000000200029; valaddr_reg:x16; val_offset:192; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 192, x17, x15, 192, x18)

inst_140:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000011 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000100012 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x11; op2val:0x8000000000100012; valaddr_reg:x16; val_offset:208; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 208, x17, x15, 208, x18)

inst_141:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000052 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000080053 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x52; op2val:0x8000000000080053; valaddr_reg:x16; val_offset:224; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 224, x17, x15, 224, x18)

inst_142:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000002e and fs2 == 1 and fe2 == 0x000 and fm2 == 0x000000004002f and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x2e; op2val:0x800000000004002f; valaddr_reg:x16; val_offset:240; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 240, x17, x15, 240, x18)

inst_143:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000025 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000020026 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x25; op2val:0x8000000000020026; valaddr_reg:x16; val_offset:256; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 256, x17, x15, 256, x18)

inst_144:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000002e and fs2 == 1 and fe2 == 0x000 and fm2 == 0x000000001002f and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x2e; op2val:0x800000000001002f; valaddr_reg:x16; val_offset:272; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 272, x17, x15, 272, x18)

inst_145:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000062 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000008063 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x62; op2val:0x8000000000008063; valaddr_reg:x16; val_offset:288; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 288, x17, x15, 288, x18)

inst_146:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000012 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000004013 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x12; op2val:0x8000000000004013; valaddr_reg:x16; val_offset:304; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 304, x17, x15, 304, x18)

inst_147:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000046 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000002047 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x46; op2val:0x8000000000002047; valaddr_reg:x16; val_offset:320; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 320, x17, x15, 320, x18)

inst_148:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000005f and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000001060 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x5f; op2val:0x8000000000001060; valaddr_reg:x16; val_offset:336; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 336, x17, x15, 336, x18)

inst_149:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000000b and fs2 == 1 and fe2 == 0x000 and fm2 == 0x000000000080c and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0xb; op2val:0x800000000000080c; valaddr_reg:x16; val_offset:352; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 352, x17, x15, 352, x18)

inst_150:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000003b and fs2 == 1 and fe2 == 0x000 and fm2 == 0x000000000043c and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x3b; op2val:0x800000000000043c; valaddr_reg:x16; val_offset:368; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 368, x17, x15, 368, x18)

inst_151:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000059 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x000000000025a and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x59; op2val:0x800000000000025a; valaddr_reg:x16; val_offset:384; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 384, x17, x15, 384, x18)

inst_152:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000014 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000115 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x14; op2val:0x8000000000000115; valaddr_reg:x16; val_offset:400; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 400, x17, x15, 400, x18)

inst_153:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000055 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x00000000000d6 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x55; op2val:0x80000000000000d6; valaddr_reg:x16; val_offset:416; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 416, x17, x15, 416, x18)

inst_154:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000002e and fs2 == 1 and fe2 == 0x000 and fm2 == 0x000000000006f and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x2e; op2val:0x800000000000006f; valaddr_reg:x16; val_offset:432; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 432, x17, x15, 432, x18)

inst_155:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000028 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000049 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x28; op2val:0x8000000000000049; valaddr_reg:x16; val_offset:448; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 448, x17, x15, 448, x18)

inst_156:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000049 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x000000000005a and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x49; op2val:0x800000000000005a; valaddr_reg:x16; val_offset:464; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 464, x17, x15, 464, x18)

inst_157:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000058 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000061 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x58; op2val:0x8000000000000061; valaddr_reg:x16; val_offset:480; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 480, x17, x15, 480, x18)

inst_158:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000002 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000007 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x2; op2val:0x8000000000000007; valaddr_reg:x16; val_offset:496; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 496, x17, x15, 496, x18)

inst_159:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000056 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000059 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x56; op2val:0x8000000000000059; valaddr_reg:x16; val_offset:512; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 512, x17, x15, 512, x18)

inst_160:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000004d and fs2 == 1 and fe2 == 0x000 and fm2 == 0x000000000004d and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x4d; op2val:0x800000000000004d; valaddr_reg:x16; val_offset:528; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 528, x17, x15, 528, x18)

inst_161:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000021 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x00000003fffe0 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x21; op2val:0x3fffe0; valaddr_reg:x16; val_offset:544; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 544, x17, x15, 544, x18)

inst_162:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000002c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x00000001fffd5 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x2c; op2val:0x1fffd5; valaddr_reg:x16; val_offset:560; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 560, x17, x15, 560, x18)

inst_163:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x00000000fffec and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x15; op2val:0xfffec; valaddr_reg:x16; val_offset:576; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 576, x17, x15, 576, x18)

inst_164:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000008 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x000000007fff9 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x8; op2val:0x7fff9; valaddr_reg:x16; val_offset:592; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 592, x17, x15, 592, x18)

inst_165:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000001b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x000000003ffe6 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x1b; op2val:0x3ffe6; valaddr_reg:x16; val_offset:608; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 608, x17, x15, 608, x18)

inst_166:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000005a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x000000001ffa7 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x5a; op2val:0x1ffa7; valaddr_reg:x16; val_offset:624; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 624, x17, x15, 624, x18)

inst_167:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000049 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x000000000ffb8 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x49; op2val:0xffb8; valaddr_reg:x16; val_offset:640; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 640, x17, x15, 640, x18)

inst_168:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000005e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000007fa3 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x5e; op2val:0x7fa3; valaddr_reg:x16; val_offset:656; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 656, x17, x15, 656, x18)

inst_169:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000022 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000003fdf and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x22; op2val:0x3fdf; valaddr_reg:x16; val_offset:672; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 672, x17, x15, 672, x18)

inst_170:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000001fce and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x33; op2val:0x1fce; valaddr_reg:x16; val_offset:688; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 688, x17, x15, 688, x18)

inst_171:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000000d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000ff4 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0xd; op2val:0xff4; valaddr_reg:x16; val_offset:704; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 704, x17, x15, 704, x18)

inst_172:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000006 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x00000000007fb and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x6; op2val:0x7fb; valaddr_reg:x16; val_offset:720; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 720, x17, x15, 720, x18)

inst_173:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000041 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x00000000003c0 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x41; op2val:0x3c0; valaddr_reg:x16; val_offset:736; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 736, x17, x15, 736, x18)

inst_174:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000018 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x00000000001e9 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x18; op2val:0x1e9; valaddr_reg:x16; val_offset:752; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 752, x17, x15, 752, x18)

inst_175:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000002d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x00000000000d4 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x2d; op2val:0xd4; valaddr_reg:x16; val_offset:768; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 768, x17, x15, 768, x18)

inst_176:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000053 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x000000000002e and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x53; op2val:0x2e; valaddr_reg:x16; val_offset:784; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 784, x17, x15, 784, x18)

inst_177:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000001d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000024 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x1d; op2val:0x24; valaddr_reg:x16; val_offset:800; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 800, x17, x15, 800, x18)

inst_178:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000022 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000001 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x22; op2val:0x8000000000000001; valaddr_reg:x16; val_offset:816; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 816, x17, x15, 816, x18)

inst_179:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000050 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x000000000003f and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x50; op2val:0x800000000000003f; valaddr_reg:x16; val_offset:832; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 832, x17, x15, 832, x18)

inst_180:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000046 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x000000000003d and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x46; op2val:0x800000000000003d; valaddr_reg:x16; val_offset:848; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 848, x17, x15, 848, x18)

inst_181:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000057 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000052 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x57; op2val:0x8000000000000052; valaddr_reg:x16; val_offset:864; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 864, x17, x15, 864, x18)

inst_182:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000005e and fs2 == 1 and fe2 == 0x000 and fm2 == 0x000000000005b and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x5e; op2val:0x800000000000005b; valaddr_reg:x16; val_offset:880; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 880, x17, x15, 880, x18)

inst_183:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000003e and fs2 == 1 and fe2 == 0x000 and fm2 == 0x000000000003e and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x3e; op2val:0x800000000000003e; valaddr_reg:x16; val_offset:896; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 896, x17, x15, 896, x18)

inst_184:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x000000000005c and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0x000000020002e and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x3f8000000000005c; op2val:0xbf9000000020002e; valaddr_reg:x16; val_offset:912; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 912, x17, x15, 912, x18)

inst_185:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000019 and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0x000000010000c and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x3f80000000000019; op2val:0xbf9000000010000c; valaddr_reg:x16; val_offset:928; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 928, x17, x15, 928, x18)

inst_186:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x000000000004e and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0x0000000080027 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x3f8000000000004e; op2val:0xbf90000000080027; valaddr_reg:x16; val_offset:944; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 944, x17, x15, 944, x18)

inst_187:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x000000000000f and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0x0000000040008 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x3f8000000000000f; op2val:0xbf90000000040008; valaddr_reg:x16; val_offset:960; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 960, x17, x15, 960, x18)

inst_188:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x000000000000c and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0x0000000020006 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x3f8000000000000c; op2val:0xbf90000000020006; valaddr_reg:x16; val_offset:976; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 976, x17, x15, 976, x18)

inst_189:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000010 and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0x0000000010008 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x3f80000000000010; op2val:0xbf90000000010008; valaddr_reg:x16; val_offset:992; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 992, x17, x15, 992, x18)

inst_190:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x000000000004e and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0x0000000008027 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x3f8000000000004e; op2val:0xbf90000000008027; valaddr_reg:x16; val_offset:1008; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1008, x17, x15, 1008, x18)

inst_191:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000052 and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0x0000000004029 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x3f80000000000052; op2val:0xbf90000000004029; valaddr_reg:x16; val_offset:1024; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1024, x17, x15, 1024, x18)

inst_192:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000004 and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0x0000000002002 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x3f80000000000004; op2val:0xbf90000000002002; valaddr_reg:x16; val_offset:1040; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1040, x17, x15, 1040, x18)

inst_193:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000058 and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0x000000000102c and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x3f80000000000058; op2val:0xbf9000000000102c; valaddr_reg:x16; val_offset:1056; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1056, x17, x15, 1056, x18)

inst_194:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000045 and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0x0000000000822 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x3f80000000000045; op2val:0xbf90000000000822; valaddr_reg:x16; val_offset:1072; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1072, x17, x15, 1072, x18)

inst_195:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x000000000004a and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0x0000000000425 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x3f8000000000004a; op2val:0xbf90000000000425; valaddr_reg:x16; val_offset:1088; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1088, x17, x15, 1088, x18)

inst_196:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x000000000001d and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0x000000000020e and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x3f8000000000001d; op2val:0xbf9000000000020e; valaddr_reg:x16; val_offset:1104; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1104, x17, x15, 1104, x18)

inst_197:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000013 and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0x000000000010a and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x3f80000000000013; op2val:0xbf9000000000010a; valaddr_reg:x16; val_offset:1120; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1120, x17, x15, 1120, x18)

inst_198:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000008 and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0x0000000000084 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x3f80000000000008; op2val:0xbf90000000000084; valaddr_reg:x16; val_offset:1136; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1136, x17, x15, 1136, x18)

inst_199:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x000000000002b and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0x0000000000056 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x3f8000000000002b; op2val:0xbf90000000000056; valaddr_reg:x16; val_offset:1152; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1152, x17, x15, 1152, x18)

inst_200:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000030 and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0x0000000000038 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x3f80000000000030; op2val:0xbf90000000000038; valaddr_reg:x16; val_offset:1168; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1168, x17, x15, 1168, x18)

inst_201:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x000000000005b and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0x000000000003e and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x3f8000000000005b; op2val:0xbf9000000000003e; valaddr_reg:x16; val_offset:1184; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1184, x17, x15, 1184, x18)

inst_202:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000023 and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0x000000000001a and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x3f80000000000023; op2val:0xbf9000000000001a; valaddr_reg:x16; val_offset:1200; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1200, x17, x15, 1200, x18)

inst_203:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000003 and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0x0000000000006 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x3f80000000000003; op2val:0xbf90000000000006; valaddr_reg:x16; val_offset:1216; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1216, x17, x15, 1216, x18)

inst_204:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000019 and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0x000000000000e and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x3f80000000000019; op2val:0xbf9000000000000e; valaddr_reg:x16; val_offset:1232; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1232, x17, x15, 1232, x18)

inst_205:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x0000000000051 and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0x000000000002a and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x3f80000000000051; op2val:0xbf9000000000002a; valaddr_reg:x16; val_offset:1248; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1248, x17, x15, 1248, x18)

inst_206:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x000000000003f and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0x0000000000020 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x3f8000000000003f; op2val:0xbf90000000000020; valaddr_reg:x16; val_offset:1264; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1264, x17, x15, 1264, x18)

inst_207:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x000000000004f and fs2 == 0 and fe2 == 0x3e0 and fm2 == 0xfffd880000000 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff000000000004f; op2val:0x3e0fffd880000000; valaddr_reg:x16; val_offset:1280; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1280, x17, x15, 1280, x18)

inst_208:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x000000000000b and fs2 == 0 and fe2 == 0x3df and fm2 == 0xffff500000000 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff000000000000b; op2val:0x3dfffff500000000; valaddr_reg:x16; val_offset:1296; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1296, x17, x15, 1296, x18)

inst_209:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x000000000005a and fs2 == 0 and fe2 == 0x3de and fm2 == 0xfff4c00000000 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff000000000005a; op2val:0x3defff4c00000000; valaddr_reg:x16; val_offset:1312; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1312, x17, x15, 1312, x18)

inst_210:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000055 and fs2 == 0 and fe2 == 0x3dd and fm2 == 0xffeac00000000 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000055; op2val:0x3ddffeac00000000; valaddr_reg:x16; val_offset:1328; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1328, x17, x15, 1328, x18)

inst_211:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x000000000003a and fs2 == 0 and fe2 == 0x3dc and fm2 == 0xffe3000000000 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff000000000003a; op2val:0x3dcffe3000000000; valaddr_reg:x16; val_offset:1344; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1344, x17, x15, 1344, x18)

inst_212:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x000000000004b and fs2 == 0 and fe2 == 0x3db and fm2 == 0xffb5000000000 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff000000000004b; op2val:0x3dbffb5000000000; valaddr_reg:x16; val_offset:1360; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1360, x17, x15, 1360, x18)

inst_213:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x000000000004c and fs2 == 0 and fe2 == 0x3da and fm2 == 0xff68000000000 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff000000000004c; op2val:0x3daff68000000000; valaddr_reg:x16; val_offset:1376; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1376, x17, x15, 1376, x18)

inst_214:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x000000000001c and fs2 == 0 and fe2 == 0x3d9 and fm2 == 0xff90000000000 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff000000000001c; op2val:0x3d9ff90000000000; valaddr_reg:x16; val_offset:1392; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1392, x17, x15, 1392, x18)

inst_215:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000043 and fs2 == 0 and fe2 == 0x3d8 and fm2 == 0xfde8000000000 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000043; op2val:0x3d8fde8000000000; valaddr_reg:x16; val_offset:1408; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1408, x17, x15, 1408, x18)

inst_216:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000044 and fs2 == 0 and fe2 == 0x3d7 and fm2 == 0xfbc0000000000 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000044; op2val:0x3d7fbc0000000000; valaddr_reg:x16; val_offset:1424; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1424, x17, x15, 1424, x18)

inst_217:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000033 and fs2 == 0 and fe2 == 0x3d6 and fm2 == 0xf9a0000000000 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000033; op2val:0x3d6f9a0000000000; valaddr_reg:x16; val_offset:1440; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1440, x17, x15, 1440, x18)

inst_218:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000046 and fs2 == 0 and fe2 == 0x3d5 and fm2 == 0xee80000000000 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000046; op2val:0x3d5ee80000000000; valaddr_reg:x16; val_offset:1456; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1456, x17, x15, 1456, x18)

inst_219:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x000000000000b and fs2 == 0 and fe2 == 0x3d4 and fm2 == 0xfa80000000000 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff000000000000b; op2val:0x3d4fa80000000000; valaddr_reg:x16; val_offset:1472; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1472, x17, x15, 1472, x18)

inst_220:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000014 and fs2 == 0 and fe2 == 0x3d3 and fm2 == 0xec00000000000 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000014; op2val:0x3d3ec00000000000; valaddr_reg:x16; val_offset:1488; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1488, x17, x15, 1488, x18)

inst_221:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000061 and fs2 == 0 and fe2 == 0x3d2 and fm2 == 0x3e00000000000 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000061; op2val:0x3d23e00000000000; valaddr_reg:x16; val_offset:1504; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1504, x17, x15, 1504, x18)

inst_222:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x000000000000c and fs2 == 0 and fe2 == 0x3d1 and fm2 == 0xd000000000000 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff000000000000c; op2val:0x3d1d000000000000; valaddr_reg:x16; val_offset:1520; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1520, x17, x15, 1520, x18)

inst_223:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x000000000003d and fs2 == 0 and fe2 == 0x3cc and fm2 == 0x8000000000000 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff000000000003d; op2val:0x3cc8000000000000; valaddr_reg:x16; val_offset:1536; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1536, x17, x15, 1536, x18)

inst_224:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000055 and fs2 == 1 and fe2 == 0x3d0 and fm2 == 0xa800000000000 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000055; op2val:0xbd0a800000000000; valaddr_reg:x16; val_offset:1552; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1552, x17, x15, 1552, x18)

inst_225:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000005 and fs2 == 0 and fe2 == 0x3ce and fm2 == 0x6000000000000 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000005; op2val:0x3ce6000000000000; valaddr_reg:x16; val_offset:1568; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1568, x17, x15, 1568, x18)

inst_226:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000019 and fs2 == 1 and fe2 == 0x3cf and fm2 == 0x1000000000000 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000019; op2val:0xbcf1000000000000; valaddr_reg:x16; val_offset:1584; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1584, x17, x15, 1584, x18)

inst_227:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000026 and fs2 == 1 and fe2 == 0x3d0 and fm2 == 0x1000000000000 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000026; op2val:0xbd01000000000000; valaddr_reg:x16; val_offset:1600; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1600, x17, x15, 1600, x18)

inst_228:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x000000000004a and fs2 == 1 and fe2 == 0x3d1 and fm2 == 0x2000000000000 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff000000000004a; op2val:0xbd12000000000000; valaddr_reg:x16; val_offset:1616; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1616, x17, x15, 1616, x18)

inst_229:
// fs1 == 0 and fe1 == 0x3ff and fm1 == 0x0000000000032 and fs2 == 1 and fe2 == 0x3d0 and fm2 == 0x8800000000000 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x3ff0000000000032; op2val:0xbd08800000000000; valaddr_reg:x16; val_offset:1632; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1632, x17, x15, 1632, x18)

inst_230:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000000c and fs2 == 1 and fe2 == 0x000 and fm2 == 0x000000040000c and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0xc; op2val:0x800000000040000c; valaddr_reg:x16; val_offset:1648; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1648, x17, x15, 1648, x18)

inst_231:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000025 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000200025 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x25; op2val:0x8000000000200025; valaddr_reg:x16; val_offset:1664; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1664, x17, x15, 1664, x18)

inst_232:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000047 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000100047 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x47; op2val:0x8000000000100047; valaddr_reg:x16; val_offset:1680; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1680, x17, x15, 1680, x18)

inst_233:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000001b and fs2 == 1 and fe2 == 0x000 and fm2 == 0x000000008001b and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x1b; op2val:0x800000000008001b; valaddr_reg:x16; val_offset:1696; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1696, x17, x15, 1696, x18)

inst_234:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000002b and fs2 == 1 and fe2 == 0x000 and fm2 == 0x000000004002b and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x2b; op2val:0x800000000004002b; valaddr_reg:x16; val_offset:1712; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1712, x17, x15, 1712, x18)

inst_235:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000010 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000020010 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x10; op2val:0x8000000000020010; valaddr_reg:x16; val_offset:1728; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1728, x17, x15, 1728, x18)

inst_236:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000026 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000010026 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x26; op2val:0x8000000000010026; valaddr_reg:x16; val_offset:1744; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1744, x17, x15, 1744, x18)

inst_237:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000027 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000008027 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x27; op2val:0x8000000000008027; valaddr_reg:x16; val_offset:1760; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1760, x17, x15, 1760, x18)

inst_238:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000003f and fs2 == 1 and fe2 == 0x000 and fm2 == 0x000000000403f and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x3f; op2val:0x800000000000403f; valaddr_reg:x16; val_offset:1776; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1776, x17, x15, 1776, x18)

inst_239:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000029 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000002029 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x29; op2val:0x8000000000002029; valaddr_reg:x16; val_offset:1792; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1792, x17, x15, 1792, x18)

inst_240:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000000c and fs2 == 1 and fe2 == 0x000 and fm2 == 0x000000000100c and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0xc; op2val:0x800000000000100c; valaddr_reg:x16; val_offset:1808; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1808, x17, x15, 1808, x18)

inst_241:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000046 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000846 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x46; op2val:0x8000000000000846; valaddr_reg:x16; val_offset:1824; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1824, x17, x15, 1824, x18)

inst_242:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000001f and fs2 == 1 and fe2 == 0x000 and fm2 == 0x000000000041f and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x1f; op2val:0x800000000000041f; valaddr_reg:x16; val_offset:1840; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1840, x17, x15, 1840, x18)

inst_243:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000049 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000249 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x49; op2val:0x8000000000000249; valaddr_reg:x16; val_offset:1856; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1856, x17, x15, 1856, x18)

inst_244:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000009 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000109 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x9; op2val:0x8000000000000109; valaddr_reg:x16; val_offset:1872; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1872, x17, x15, 1872, x18)

inst_245:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000002a and fs2 == 1 and fe2 == 0x000 and fm2 == 0x00000000000aa and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x2a; op2val:0x80000000000000aa; valaddr_reg:x16; val_offset:1888; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1888, x17, x15, 1888, x18)

inst_246:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000020 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000060 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x20; op2val:0x8000000000000060; valaddr_reg:x16; val_offset:1904; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1904, x17, x15, 1904, x18)

inst_247:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000040 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000060 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x40; op2val:0x8000000000000060; valaddr_reg:x16; val_offset:1920; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1920, x17, x15, 1920, x18)

inst_248:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000001 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000011 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x1; op2val:0x8000000000000011; valaddr_reg:x16; val_offset:1936; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1936, x17, x15, 1936, x18)

inst_249:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000056 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x000000000005e and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x56; op2val:0x800000000000005e; valaddr_reg:x16; val_offset:1952; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1952, x17, x15, 1952, x18)

inst_250:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000034 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000038 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x34; op2val:0x8000000000000038; valaddr_reg:x16; val_offset:1968; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1968, x17, x15, 1968, x18)

inst_251:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000000c and fs2 == 1 and fe2 == 0x000 and fm2 == 0x000000000000e and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0xc; op2val:0x800000000000000e; valaddr_reg:x16; val_offset:1984; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 1984, x17, x15, 1984, x18)

inst_252:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000047 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000048 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x47; op2val:0x8000000000000048; valaddr_reg:x16; val_offset:2000; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 2000, x17, x15, 2000, x18)

inst_253:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000022 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x00000003fffde and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x22; op2val:0x3fffde; valaddr_reg:x16; val_offset:2016; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 2016, x17, x15, 2016, x18)
addi x16,x16,2032
RVTEST_SIGBASE(x15,signature_x15_3)

inst_254:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000039 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x00000001fffc7 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x39; op2val:0x1fffc7; valaddr_reg:x16; val_offset:0; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_255:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000047 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x00000000fffb9 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x47; op2val:0xfffb9; valaddr_reg:x16; val_offset:16; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 16, x17, x15, 16, x18)

inst_256:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000052 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x000000007ffae and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x52; op2val:0x7ffae; valaddr_reg:x16; val_offset:32; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 32, x17, x15, 32, x18)

inst_257:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000029 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x000000003ffd7 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x29; op2val:0x3ffd7; valaddr_reg:x16; val_offset:48; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 48, x17, x15, 48, x18)

inst_258:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000002e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x000000001ffd2 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x2e; op2val:0x1ffd2; valaddr_reg:x16; val_offset:64; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 64, x17, x15, 64, x18)

inst_259:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000048 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x000000000ffb8 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x48; op2val:0xffb8; valaddr_reg:x16; val_offset:80; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 80, x17, x15, 80, x18)

inst_260:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000002b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000007fd5 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x2b; op2val:0x7fd5; valaddr_reg:x16; val_offset:96; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 96, x17, x15, 96, x18)

inst_261:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000000a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000003ff6 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0xa; op2val:0x3ff6; valaddr_reg:x16; val_offset:112; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 112, x17, x15, 112, x18)

inst_262:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000000d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000001ff3 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0xd; op2val:0x1ff3; valaddr_reg:x16; val_offset:128; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 128, x17, x15, 128, x18)

inst_263:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000013 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000fed and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x13; op2val:0xfed; valaddr_reg:x16; val_offset:144; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 144, x17, x15, 144, x18)

inst_264:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000005b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x00000000007a5 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x5b; op2val:0x7a5; valaddr_reg:x16; val_offset:160; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 160, x17, x15, 160, x18)

inst_265:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000021 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x00000000003df and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x21; op2val:0x3df; valaddr_reg:x16; val_offset:176; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 176, x17, x15, 176, x18)

inst_266:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000000d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x00000000001f3 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0xd; op2val:0x1f3; valaddr_reg:x16; val_offset:192; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 192, x17, x15, 192, x18)

inst_267:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000012 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x00000000000ee and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x12; op2val:0xee; valaddr_reg:x16; val_offset:208; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 208, x17, x15, 208, x18)

inst_268:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000012 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x000000000006e and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x12; op2val:0x6e; valaddr_reg:x16; val_offset:224; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 224, x17, x15, 224, x18)

inst_269:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000001c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000024 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x1c; op2val:0x24; valaddr_reg:x16; val_offset:240; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 240, x17, x15, 240, x18)

inst_270:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000002e and fs2 == 1 and fe2 == 0x000 and fm2 == 0x000000000000e and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x2e; op2val:0x800000000000000e; valaddr_reg:x16; val_offset:256; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 256, x17, x15, 256, x18)

inst_271:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000027 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000017 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x27; op2val:0x8000000000000017; valaddr_reg:x16; val_offset:272; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 272, x17, x15, 272, x18)

inst_272:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x000000000003f and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000037 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x3f; op2val:0x8000000000000037; valaddr_reg:x16; val_offset:288; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 288, x17, x15, 288, x18)

inst_273:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000022 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x000000000001e and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x22; op2val:0x800000000000001e; valaddr_reg:x16; val_offset:304; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 304, x17, x15, 304, x18)

inst_274:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000036 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000034 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x36; op2val:0x8000000000000034; valaddr_reg:x16; val_offset:320; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 320, x17, x15, 320, x18)

inst_275:
// fs1 == 0 and fe1 == 0x000 and fm1 == 0x0000000000032 and fs2 == 1 and fe2 == 0x000 and fm2 == 0x0000000000031 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x32; op2val:0x8000000000000031; valaddr_reg:x16; val_offset:336; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 336, x17, x15, 336, x18)

inst_276:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0000000000013 and fs2 == 1 and fe2 == 0x7ff and fm2 == 0x0000000000000 and rm_val == 0  
// opcode: fadd.d ; op1:f10; op2:f11; dest:f12; op1val:0x7fe0000000000013; op2val:0xfff0000000000000; valaddr_reg:x16; val_offset:352; rmval:0x0; correctval:0; testreg:x18
TEST_FPRR_OP(fadd.d, f12, f10, f11, 0x0, 0, x16, 352, x17, x15, 352, x18)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_fp:
.dword 0x32
.dword 0x32
.dword 0x7fe0000000000031
.dword 0xfff0000000000000
.dword 0x7fe000000000004e
.dword 0xfff0000000000000
.dword 0x7fe0000000000013
.dword 0x7fe0000000000013
.dword 0x7fe0000000000005
.dword 0xfff0000000000000
.dword 0x7fe0000000000029
.dword 0xfff0000000000000
.dword 0x7fe000000000005b
.dword 0xfff0000000000000
.dword 0x7fe0000000000002
.dword 0xfff0000000000000
.dword 0x7fe000000000004f
.dword 0xfff0000000000000
.dword 0x7fe000000000001a
.dword 0xfff0000000000000
.dword 0x7fe0000000000052
.dword 0xfff0000000000000
.dword 0x7fe0000000000040
.dword 0xfff0000000000000
.dword 0x7fe0000000000057
.dword 0xfff0000000000000
.dword 0x7fe0000000000043
.dword 0xfff0000000000000
.dword 0x7fe0000000000058
.dword 0xfff0000000000000
.dword 0x7fe0000000000034
.dword 0xfff0000000000000
.dword 0x7fe000000000004d
.dword 0xfff0000000000000
.dword 0x7fe0000000000014
.dword 0xfff0000000000000
.dword 0x7fe000000000002f
.dword 0xfff0000000000000
.dword 0x7fe000000000003b
.dword 0xfff0000000000000
.dword 0x7fe000000000000e
.dword 0xfff0000000000000
.dword 0x7fe0000000000050
.dword 0xfff0000000000000
.dword 0x7fe0000000000006
.dword 0xfff0000000000000
.dword 0x7fe000000000001b
.dword 0x7fdfffffff7fffc8
.dword 0x7fe0000000000033
.dword 0x7fdfffffffbfff98
.dword 0x7fe0000000000010
.dword 0x7fdfffffffdfffde
.dword 0x7fe0000000000057
.dword 0x7fdfffffffefff50
.dword 0x7fe000000000003a
.dword 0x7fdffffffff7ff8a
.dword 0x7fe0000000000004
.dword 0x7fdffffffffbfff6
.dword 0x7fe0000000000009
.dword 0x7fdffffffffdffec
.dword 0x7fe000000000002e
.dword 0x7fdffffffffeffa2
.dword 0x7fe0000000000038
.dword 0x7fdfffffffff7f8e
.dword 0x7fe000000000004b
.dword 0x7fdfffffffffbf68
.dword 0x7fe000000000001d
.dword 0x7fdfffffffffdfc4
.dword 0x7fe000000000000b
.dword 0x7fdfffffffffefe8
.dword 0x7fe000000000001c
.dword 0x7fdffffffffff7c6
.dword 0x7fe000000000005c
.dword 0x7fdffffffffffb46
.dword 0x7fe000000000003f
.dword 0x7fdffffffffffd80
.dword 0x7fe0000000000026
.dword 0x7fdffffffffffeb2
.dword 0x7fe0000000000048
.dword 0x7fdffffffffffeee
.dword 0x7fe000000000000d
.dword 0x7fdfffffffffffa4
.dword 0x7fe0000000000032
.dword 0x7fdfffffffffff7a
.dword 0x7fe000000000001d
.dword 0x7fdfffffffffffb4
.dword 0x7fe000000000001a
.dword 0x7fdfffffffffffc2
.dword 0x7fe0000000000009
.dword 0x7fdfffffffffffe8
.dword 0x7fe0000000000052
.dword 0x7fdfffffffffff58
.dword 0x10000000000049
.dword 0x8020000000200024
.dword 0x10000000000016
.dword 0x802000000010000b
.dword 0x10000000000058
.dword 0x802000000008002c
.dword 0x1000000000002b
.dword 0x8020000000040016
.dword 0x10000000000005
.dword 0x8020000000020002
.dword 0x10000000000040
.dword 0x8020000000010020
.dword 0x1000000000000f
.dword 0x8020000000008008
.dword 0x10000000000010
.dword 0x8020000000004008
.dword 0x1000000000002c
.dword 0x8020000000002016
.dword 0x1000000000003e
.dword 0x802000000000101f
.dword 0x1000000000000d
.dword 0x8020000000000806
.dword 0x10000000000036
.dword 0x802000000000041b
.dword 0x1000000000002b
.dword 0x8020000000000216
.dword 0x10000000000027
.dword 0x8020000000000114
.dword 0x1000000000005e
.dword 0x80200000000000af
.dword 0x10000000000017
.dword 0x802000000000004c
.dword 0x10000000000007
.dword 0x8020000000000024
.dword 0x1000000000005e
.dword 0x802000000000003f
.dword 0x1000000000000f
.dword 0x8020000000000010
.dword 0x10000000000011
.dword 0x802000000000000c
.dword 0x10000000000033
.dword 0x802000000000001c
.dword 0x10000000000026
.dword 0x8020000000000014
.dword 0x10000000000014
.dword 0x802000000000000a
.dword 0x10000000000023
.dword 0x3fffdd
.dword 0x10000000000005
.dword 0x1ffffb
.dword 0x1000000000002c
.dword 0xfffd4
.dword 0x1000000000005c
.dword 0x7ffa4
.dword 0x1000000000002c
.dword 0x3ffd4
.dword 0x10000000000023
.dword 0x1ffdd
.dword 0x10000000000012
.dword 0xffee
.dword 0x10000000000026
.dword 0x7fda
.dword 0x10000000000031
.dword 0x3fcf
.dword 0x10000000000017
.dword 0x1fe9
.dword 0x10000000000030
.dword 0xfd0
.dword 0x10000000000052
.dword 0x7ae
.dword 0x10000000000053
.dword 0x3ad
.dword 0x10000000000040
.dword 0x1c0
.dword 0x1000000000004e
.dword 0xb2
.dword 0x10000000000060
.dword 0x20
.dword 0x10000000000049
.dword 0x8000000000000009
.dword 0x10000000000029
.dword 0x8000000000000009
.dword 0x10000000000022
.dword 0x8000000000000012
.dword 0x1000000000001b
.dword 0x8000000000000013
.dword 0x10000000000006
.dword 0x8000000000000002
.dword 0x10000000000024
.dword 0x8000000000000022
.dword 0x1000000000000f
.dword 0x800000000000000e
.dword 0x53
.dword 0x800fffffffc00052
.dword 0x43
.dword 0x800fffffffe00042
.dword 0x12
.dword 0x800ffffffff00011
.dword 0xf
.dword 0x800ffffffff8000e
.dword 0x24
.dword 0x800ffffffffc0023
.dword 0xb
.dword 0x800ffffffffe000a
.dword 0x33
.dword 0x800fffffffff0032
.dword 0xd
.dword 0x800fffffffff800c
.dword 0x59
.dword 0x800fffffffffc058
.dword 0x27
.dword 0x800fffffffffe026
.dword 0x54
.dword 0x800ffffffffff053
.dword 0x10
.dword 0x800ffffffffff80f
.dword 0xd
.dword 0x800ffffffffffc0c
.dword 0x44
.dword 0x800ffffffffffe43
.dword 0x1
.dword 0x800fffffffffff00
.dword 0x5c
.dword 0x800fffffffffffdb
.dword 0x1c
.dword 0x800fffffffffffdb
.dword 0x29
.dword 0x8010000000000008
.dword 0x57
.dword 0x8010000000000046
.dword 0x2
.dword 0x800ffffffffffff9
.dword 0x5d
.dword 0x8010000000000058
.dword 0x52
.dword 0x801000000000004f
.dword 0x19
.dword 0x8010000000000017
.dword 0x7
.dword 0xfffffffbffff8
.dword 0x28
.dword 0xfffffffdfffd7
.dword 0x40
.dword 0xfffffffefffbf
.dword 0x1
.dword 0xffffffff7fffe
.dword 0x4e
.dword 0xffffffffbffb1
.dword 0x3f
.dword 0xffffffffdffc0
.dword 0x3a
.dword 0xffffffffeffc5
.dword 0x5a
.dword 0xfffffffff7fa5
.dword 0x9
.dword 0xfffffffffbff6
.dword 0x16
.dword 0xfffffffffdfe9
.dword 0x5b
.dword 0xfffffffffefa4
.dword 0x63
.dword 0xffffffffff79c
.dword 0x49
.dword 0xffffffffffbb6
.dword 0x34
.dword 0xffffffffffdcb
.dword 0x36
.dword 0xffffffffffec9
.dword 0x57
.dword 0xfffffffffff28
.dword 0x31
.dword 0xfffffffffff8e
.dword 0x52
.dword 0xfffffffffff8d
.dword 0x1f
.dword 0xfffffffffffd0
.dword 0x2b
.dword 0xfffffffffffcc
.dword 0x19
.dword 0xfffffffffffe2
.dword 0x1
.dword 0xffffffffffffc
.dword 0x54
.dword 0xfffffffffffaa
.dword 0x60
.dword 0x8000000000400061
.dword 0x28
.dword 0x8000000000200029
.dword 0x11
.dword 0x8000000000100012
.dword 0x52
.dword 0x8000000000080053
.dword 0x2e
.dword 0x800000000004002f
.dword 0x25
.dword 0x8000000000020026
.dword 0x2e
.dword 0x800000000001002f
.dword 0x62
.dword 0x8000000000008063
.dword 0x12
.dword 0x8000000000004013
.dword 0x46
.dword 0x8000000000002047
.dword 0x5f
.dword 0x8000000000001060
.dword 0xb
.dword 0x800000000000080c
.dword 0x3b
.dword 0x800000000000043c
.dword 0x59
.dword 0x800000000000025a
.dword 0x14
.dword 0x8000000000000115
.dword 0x55
.dword 0x80000000000000d6
.dword 0x2e
.dword 0x800000000000006f
.dword 0x28
.dword 0x8000000000000049
.dword 0x49
.dword 0x800000000000005a
.dword 0x58
.dword 0x8000000000000061
.dword 0x2
.dword 0x8000000000000007
.dword 0x56
.dword 0x8000000000000059
.dword 0x4d
.dword 0x800000000000004d
.dword 0x21
.dword 0x3fffe0
.dword 0x2c
.dword 0x1fffd5
.dword 0x15
.dword 0xfffec
.dword 0x8
.dword 0x7fff9
.dword 0x1b
.dword 0x3ffe6
.dword 0x5a
.dword 0x1ffa7
.dword 0x49
.dword 0xffb8
.dword 0x5e
.dword 0x7fa3
.dword 0x22
.dword 0x3fdf
.dword 0x33
.dword 0x1fce
.dword 0xd
.dword 0xff4
.dword 0x6
.dword 0x7fb
.dword 0x41
.dword 0x3c0
.dword 0x18
.dword 0x1e9
.dword 0x2d
.dword 0xd4
.dword 0x53
.dword 0x2e
.dword 0x1d
.dword 0x24
.dword 0x22
.dword 0x8000000000000001
.dword 0x50
.dword 0x800000000000003f
.dword 0x46
.dword 0x800000000000003d
.dword 0x57
.dword 0x8000000000000052
.dword 0x5e
.dword 0x800000000000005b
.dword 0x3e
.dword 0x800000000000003e
.dword 0x3f8000000000005c
.dword 0xbf9000000020002e
.dword 0x3f80000000000019
.dword 0xbf9000000010000c
.dword 0x3f8000000000004e
.dword 0xbf90000000080027
.dword 0x3f8000000000000f
.dword 0xbf90000000040008
.dword 0x3f8000000000000c
.dword 0xbf90000000020006
.dword 0x3f80000000000010
.dword 0xbf90000000010008
.dword 0x3f8000000000004e
.dword 0xbf90000000008027
.dword 0x3f80000000000052
.dword 0xbf90000000004029
.dword 0x3f80000000000004
.dword 0xbf90000000002002
.dword 0x3f80000000000058
.dword 0xbf9000000000102c
.dword 0x3f80000000000045
.dword 0xbf90000000000822
.dword 0x3f8000000000004a
.dword 0xbf90000000000425
.dword 0x3f8000000000001d
.dword 0xbf9000000000020e
.dword 0x3f80000000000013
.dword 0xbf9000000000010a
.dword 0x3f80000000000008
.dword 0xbf90000000000084
.dword 0x3f8000000000002b
.dword 0xbf90000000000056
.dword 0x3f80000000000030
.dword 0xbf90000000000038
.dword 0x3f8000000000005b
.dword 0xbf9000000000003e
.dword 0x3f80000000000023
.dword 0xbf9000000000001a
.dword 0x3f80000000000003
.dword 0xbf90000000000006
.dword 0x3f80000000000019
.dword 0xbf9000000000000e
.dword 0x3f80000000000051
.dword 0xbf9000000000002a
.dword 0x3f8000000000003f
.dword 0xbf90000000000020
.dword 0x3ff000000000004f
.dword 0x3e0fffd880000000
.dword 0x3ff000000000000b
.dword 0x3dfffff500000000
.dword 0x3ff000000000005a
.dword 0x3defff4c00000000
.dword 0x3ff0000000000055
.dword 0x3ddffeac00000000
.dword 0x3ff000000000003a
.dword 0x3dcffe3000000000
.dword 0x3ff000000000004b
.dword 0x3dbffb5000000000
.dword 0x3ff000000000004c
.dword 0x3daff68000000000
.dword 0x3ff000000000001c
.dword 0x3d9ff90000000000
.dword 0x3ff0000000000043
.dword 0x3d8fde8000000000
.dword 0x3ff0000000000044
.dword 0x3d7fbc0000000000
.dword 0x3ff0000000000033
.dword 0x3d6f9a0000000000
.dword 0x3ff0000000000046
.dword 0x3d5ee80000000000
.dword 0x3ff000000000000b
.dword 0x3d4fa80000000000
.dword 0x3ff0000000000014
.dword 0x3d3ec00000000000
.dword 0x3ff0000000000061
.dword 0x3d23e00000000000
.dword 0x3ff000000000000c
.dword 0x3d1d000000000000
.dword 0x3ff000000000003d
.dword 0x3cc8000000000000
.dword 0x3ff0000000000055
.dword 0xbd0a800000000000
.dword 0x3ff0000000000005
.dword 0x3ce6000000000000
.dword 0x3ff0000000000019
.dword 0xbcf1000000000000
.dword 0x3ff0000000000026
.dword 0xbd01000000000000
.dword 0x3ff000000000004a
.dword 0xbd12000000000000
.dword 0x3ff0000000000032
.dword 0xbd08800000000000
.dword 0xc
.dword 0x800000000040000c
.dword 0x25
.dword 0x8000000000200025
.dword 0x47
.dword 0x8000000000100047
.dword 0x1b
.dword 0x800000000008001b
.dword 0x2b
.dword 0x800000000004002b
.dword 0x10
.dword 0x8000000000020010
.dword 0x26
.dword 0x8000000000010026
.dword 0x27
.dword 0x8000000000008027
.dword 0x3f
.dword 0x800000000000403f
.dword 0x29
.dword 0x8000000000002029
.dword 0xc
.dword 0x800000000000100c
.dword 0x46
.dword 0x8000000000000846
.dword 0x1f
.dword 0x800000000000041f
.dword 0x49
.dword 0x8000000000000249
.dword 0x9
.dword 0x8000000000000109
.dword 0x2a
.dword 0x80000000000000aa
.dword 0x20
.dword 0x8000000000000060
.dword 0x40
.dword 0x8000000000000060
.dword 0x1
.dword 0x8000000000000011
.dword 0x56
.dword 0x800000000000005e
.dword 0x34
.dword 0x8000000000000038
.dword 0xc
.dword 0x800000000000000e
.dword 0x47
.dword 0x8000000000000048
.dword 0x22
.dword 0x3fffde
.dword 0x39
.dword 0x1fffc7
.dword 0x47
.dword 0xfffb9
.dword 0x52
.dword 0x7ffae
.dword 0x29
.dword 0x3ffd7
.dword 0x2e
.dword 0x1ffd2
.dword 0x48
.dword 0xffb8
.dword 0x2b
.dword 0x7fd5
.dword 0xa
.dword 0x3ff6
.dword 0xd
.dword 0x1ff3
.dword 0x13
.dword 0xfed
.dword 0x5b
.dword 0x7a5
.dword 0x21
.dword 0x3df
.dword 0xd
.dword 0x1f3
.dword 0x12
.dword 0xee
.dword 0x12
.dword 0x6e
.dword 0x1c
.dword 0x24
.dword 0x2e
.dword 0x800000000000000e
.dword 0x27
.dword 0x8000000000000017
.dword 0x3f
.dword 0x8000000000000037
.dword 0x22
.dword 0x800000000000001e
.dword 0x36
.dword 0x8000000000000034
.dword 0x32
.dword 0x8000000000000031
.dword 0x7fe0000000000013
.dword 0xfff0000000000000
RVTEST_DATA_END

RVMODEL_DATA_BEGIN


signature_x15_0:
    .fill 0*(XLEN/32),4,0xdeadbeef


signature_x15_1:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_2:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_3:
    .fill 46*(XLEN/32),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*(XLEN/32),4,0xdeadbeef

#endif

RVMODEL_DATA_END
