
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.5.6
// timestamp : Mon Sep 20 11:52:58 2021 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/compliance_fd/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /scratch/compliance_fd/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV64D/rv64d_fmadd1.cgf \
 \
//                  -- xlen 64  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2021. IIT Madras. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmadd.d instruction of the RISC-V FD extension for the fmadd_b8 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV64IFD")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*64.*);check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",d_fmadd_b8)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x16,test_fp)
RVTEST_SIGBASE(x15,signature_x15_1)

inst_0:
// rs2 == rs3 != rs1 and rs2 == rs3 != rd and rd != rs1, rs1==f1, rs2==f10, rs3==f10, rd==f9, fs1 == 0 and fe1 == 0x3fd and fm1 == 0x82260edf4d940 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x5e95cba1d1005 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x0868fdd21b824 and rm_val == 0  
// opcode: fmadd.d ; op1:f1; op2:f10; op3:f10; dest:f9; op1val:0x3fd82260edf4d940; op2val:0xbfe5e95cba1d1005; op3val:0xbfe5e95cba1d1005; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f9, f1, f10, f10, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_1:
// rs1 == rs2 == rs3 == rd, rs1==f5, rs2==f5, rs3==f5, rd==f5, fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6dd02a7dd25bd and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x4f8ae07f138cd and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xdf79da9d497c6 and rm_val == 4  
// opcode: fmadd.d ; op1:f5; op2:f5; op3:f5; dest:f5; op1val:0x3fe6dd02a7dd25bd; op2val:0x3fe6dd02a7dd25bd; op3val:0x3fe6dd02a7dd25bd; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f5, f5, f5, f5, 0x4, 0, x16, 24, x17, x15, 16, x18)

inst_2:
// rs1 != rs2 and rs1 != rd and rs1 != rs3 and rs2 != rs3 and rs2 != rd and rs3 != rd, rs1==f3, rs2==f25, rs3==f16, rd==f6, fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6dd02a7dd25bd and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x4f8ae07f138cd and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xdf79da9d497c6 and rm_val == 3  
// opcode: fmadd.d ; op1:f3; op2:f25; op3:f16; dest:f6; op1val:0x3fe6dd02a7dd25bd; op2val:0xbff4f8ae07f138cd; op3val:0x3fedf79da9d497c6; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f6, f3, f25, f16, 0x3, 0, x16, 48, x17, x15, 32, x18)

inst_3:
// rs1 == rs3 != rs2 and rs1 == rs3 != rd and rd != rs2, rs1==f31, rs2==f19, rs3==f31, rd==f30, fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6dd02a7dd25bd and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x4f8ae07f138cd and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xdf79da9d497c6 and rm_val == 2  
// opcode: fmadd.d ; op1:f31; op2:f19; op3:f31; dest:f30; op1val:0x3fe6dd02a7dd25bd; op2val:0xbff4f8ae07f138cd; op3val:0x3fe6dd02a7dd25bd; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f30, f31, f19, f31, 0x2, 0, x16, 72, x17, x15, 48, x18)

inst_4:
// rs1 == rs2 != rs3 and rs1 == rs2 != rd and rd != rs3, rs1==f22, rs2==f22, rs3==f19, rd==f10, fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6dd02a7dd25bd and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x4f8ae07f138cd and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xdf79da9d497c6 and rm_val == 1  
// opcode: fmadd.d ; op1:f22; op2:f22; op3:f19; dest:f10; op1val:0x3fe6dd02a7dd25bd; op2val:0x3fe6dd02a7dd25bd; op3val:0x3fedf79da9d497c6; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f10, f22, f22, f19, 0x1, 0, x16, 96, x17, x15, 64, x18)

inst_5:
// rd == rs2 == rs3 != rs1, rs1==f8, rs2==f23, rs3==f23, rd==f23, fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6dd02a7dd25bd and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x4f8ae07f138cd and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xdf79da9d497c6 and rm_val == 0  
// opcode: fmadd.d ; op1:f8; op2:f23; op3:f23; dest:f23; op1val:0x3fe6dd02a7dd25bd; op2val:0xbff4f8ae07f138cd; op3val:0xbff4f8ae07f138cd; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f23, f8, f23, f23, 0x0, 0, x16, 120, x17, x15, 80, x18)

inst_6:
// rs1 == rs2 == rs3 != rd, rs1==f9, rs2==f9, rs3==f9, rd==f11, fs1 == 0 and fe1 == 0x3fe and fm1 == 0x798d8a20255fa and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xc210c4a7fcf65 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x4be1c3d6a0ee6 and rm_val == 4  
// opcode: fmadd.d ; op1:f9; op2:f9; op3:f9; dest:f11; op1val:0x3fe798d8a20255fa; op2val:0x3fe798d8a20255fa; op3val:0x3fe798d8a20255fa; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f11, f9, f9, f9, 0x4, 0, x16, 144, x17, x15, 96, x18)

inst_7:
// rs1 == rd != rs2 and rs1 == rd != rs3 and rs3 != rs2, rs1==f13, rs2==f20, rs3==f26, rd==f13, fs1 == 0 and fe1 == 0x3fe and fm1 == 0x798d8a20255fa and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xc210c4a7fcf65 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x4be1c3d6a0ee6 and rm_val == 3  
// opcode: fmadd.d ; op1:f13; op2:f20; op3:f26; dest:f13; op1val:0x3fe798d8a20255fa; op2val:0xbfdc210c4a7fcf65; op3val:0x3fd4be1c3d6a0ee6; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f13, f20, f26, 0x3, 0, x16, 168, x17, x15, 112, x18)

inst_8:
// rs3 == rd != rs1 and rs3 == rd != rs2 and rs2 != rs1, rs1==f12, rs2==f18, rs3==f21, rd==f21, fs1 == 0 and fe1 == 0x3fe and fm1 == 0x798d8a20255fa and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xc210c4a7fcf65 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x4be1c3d6a0ee6 and rm_val == 2  
// opcode: fmadd.d ; op1:f12; op2:f18; op3:f21; dest:f21; op1val:0x3fe798d8a20255fa; op2val:0xbfdc210c4a7fcf65; op3val:0x3fd4be1c3d6a0ee6; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f21, f12, f18, f21, 0x2, 0, x16, 192, x17, x15, 128, x18)

inst_9:
// rs1 == rd == rs3 != rs2, rs1==f29, rs2==f1, rs3==f29, rd==f29, fs1 == 0 and fe1 == 0x3fe and fm1 == 0x798d8a20255fa and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xc210c4a7fcf65 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x4be1c3d6a0ee6 and rm_val == 1  
// opcode: fmadd.d ; op1:f29; op2:f1; op3:f29; dest:f29; op1val:0x3fe798d8a20255fa; op2val:0xbfdc210c4a7fcf65; op3val:0x3fe798d8a20255fa; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f29, f29, f1, f29, 0x1, 0, x16, 216, x17, x15, 144, x18)

inst_10:
// rs2 == rd != rs1 and rs2 == rd != rs3 and rs3 != rs1, rs1==f15, rs2==f12, rs3==f18, rd==f12, fs1 == 0 and fe1 == 0x3fe and fm1 == 0x798d8a20255fa and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xc210c4a7fcf65 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x4be1c3d6a0ee6 and rm_val == 0  
// opcode: fmadd.d ; op1:f15; op2:f12; op3:f18; dest:f12; op1val:0x3fe798d8a20255fa; op2val:0xbfdc210c4a7fcf65; op3val:0x3fd4be1c3d6a0ee6; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f12, f15, f12, f18, 0x0, 0, x16, 240, x17, x15, 160, x18)

inst_11:
// rs1 == rs2 == rd != rs3, rs1==f28, rs2==f28, rs3==f20, rd==f28, fs1 == 0 and fe1 == 0x3fe and fm1 == 0xde3e91ec63360 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc74dcf8fe2356 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa94948f735fbb and rm_val == 4  
// opcode: fmadd.d ; op1:f28; op2:f28; op3:f20; dest:f28; op1val:0x3fede3e91ec63360; op2val:0x3fede3e91ec63360; op3val:0x3fea94948f735fbb; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f28, f28, f28, f20, 0x4, 0, x16, 264, x17, x15, 176, x18)

inst_12:
// rs1==f23, rs2==f6, rs3==f28, rd==f26, fs1 == 0 and fe1 == 0x3fe and fm1 == 0xde3e91ec63360 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc74dcf8fe2356 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa94948f735fbb and rm_val == 3  
// opcode: fmadd.d ; op1:f23; op2:f6; op3:f28; dest:f26; op1val:0x3fede3e91ec63360; op2val:0xbfec74dcf8fe2356; op3val:0x3fea94948f735fbb; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f26, f23, f6, f28, 0x3, 0, x16, 288, x17, x15, 192, x18)

inst_13:
// rs1==f11, rs2==f30, rs3==f15, rd==f16, fs1 == 0 and fe1 == 0x3fe and fm1 == 0xde3e91ec63360 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc74dcf8fe2356 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa94948f735fbb and rm_val == 2  
// opcode: fmadd.d ; op1:f11; op2:f30; op3:f15; dest:f16; op1val:0x3fede3e91ec63360; op2val:0xbfec74dcf8fe2356; op3val:0x3fea94948f735fbb; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f16, f11, f30, f15, 0x2, 0, x16, 312, x17, x15, 208, x18)

inst_14:
// rs1==f27, rs2==f4, rs3==f6, rd==f3, fs1 == 0 and fe1 == 0x3fe and fm1 == 0xde3e91ec63360 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc74dcf8fe2356 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa94948f735fbb and rm_val == 1  
// opcode: fmadd.d ; op1:f27; op2:f4; op3:f6; dest:f3; op1val:0x3fede3e91ec63360; op2val:0xbfec74dcf8fe2356; op3val:0x3fea94948f735fbb; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f3, f27, f4, f6, 0x1, 0, x16, 336, x17, x15, 224, x18)

inst_15:
// rs1==f30, rs2==f0, rs3==f8, rd==f18, fs1 == 0 and fe1 == 0x3fe and fm1 == 0xde3e91ec63360 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc74dcf8fe2356 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa94948f735fbb and rm_val == 0  
// opcode: fmadd.d ; op1:f30; op2:f0; op3:f8; dest:f18; op1val:0x3fede3e91ec63360; op2val:0xbfec74dcf8fe2356; op3val:0x3fea94948f735fbb; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f18, f30, f0, f8, 0x0, 0, x16, 360, x17, x15, 240, x18)

inst_16:
// rs1==f20, rs2==f16, rs3==f25, rd==f24, fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3c355f1c09536 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x688604093980e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbd5096ab702e0 and rm_val == 4  
// opcode: fmadd.d ; op1:f20; op2:f16; op3:f25; dest:f24; op1val:0x3fe3c355f1c09536; op2val:0xbff688604093980e; op3val:0x3febd5096ab702e0; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f24, f20, f16, f25, 0x4, 0, x16, 384, x17, x15, 256, x18)

inst_17:
// rs1==f26, rs2==f8, rs3==f27, rd==f31, fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3c355f1c09536 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x688604093980e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbd5096ab702e0 and rm_val == 3  
// opcode: fmadd.d ; op1:f26; op2:f8; op3:f27; dest:f31; op1val:0x3fe3c355f1c09536; op2val:0xbff688604093980e; op3val:0x3febd5096ab702e0; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f31, f26, f8, f27, 0x3, 0, x16, 408, x17, x15, 272, x18)

inst_18:
// rs1==f17, rs2==f26, rs3==f3, rd==f0, fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3c355f1c09536 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x688604093980e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbd5096ab702e0 and rm_val == 2  
// opcode: fmadd.d ; op1:f17; op2:f26; op3:f3; dest:f0; op1val:0x3fe3c355f1c09536; op2val:0xbff688604093980e; op3val:0x3febd5096ab702e0; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f0, f17, f26, f3, 0x2, 0, x16, 432, x17, x15, 288, x18)

inst_19:
// rs1==f2, rs2==f11, rs3==f13, rd==f4, fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3c355f1c09536 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x688604093980e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbd5096ab702e0 and rm_val == 1  
// opcode: fmadd.d ; op1:f2; op2:f11; op3:f13; dest:f4; op1val:0x3fe3c355f1c09536; op2val:0xbff688604093980e; op3val:0x3febd5096ab702e0; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f4, f2, f11, f13, 0x1, 0, x16, 456, x17, x15, 304, x18)

inst_20:
// rs1==f21, rs2==f2, rs3==f11, rd==f8, fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3c355f1c09536 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x688604093980e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbd5096ab702e0 and rm_val == 0  
// opcode: fmadd.d ; op1:f21; op2:f2; op3:f11; dest:f8; op1val:0x3fe3c355f1c09536; op2val:0xbff688604093980e; op3val:0x3febd5096ab702e0; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f8, f21, f2, f11, 0x0, 0, x16, 480, x17, x15, 320, x18)

inst_21:
// rs1==f0, rs2==f21, rs3==f14, rd==f7, fs1 == 0 and fe1 == 0x3fe and fm1 == 0x76f0b2f92e7ea and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x06c756a88ae94 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x80de4b31dad14 and rm_val == 4  
// opcode: fmadd.d ; op1:f0; op2:f21; op3:f14; dest:f7; op1val:0x3fe76f0b2f92e7ea; op2val:0xbfd06c756a88ae94; op3val:0x3fc80de4b31dad14; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f7, f0, f21, f14, 0x4, 0, x16, 504, x17, x15, 336, x18)

inst_22:
// rs1==f14, rs2==f15, rs3==f12, rd==f27, fs1 == 0 and fe1 == 0x3fe and fm1 == 0x76f0b2f92e7ea and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x06c756a88ae94 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x80de4b31dad14 and rm_val == 3  
// opcode: fmadd.d ; op1:f14; op2:f15; op3:f12; dest:f27; op1val:0x3fe76f0b2f92e7ea; op2val:0xbfd06c756a88ae94; op3val:0x3fc80de4b31dad14; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f27, f14, f15, f12, 0x3, 0, x16, 528, x17, x15, 352, x18)

inst_23:
// rs1==f6, rs2==f27, rs3==f7, rd==f1, fs1 == 0 and fe1 == 0x3fe and fm1 == 0x76f0b2f92e7ea and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x06c756a88ae94 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x80de4b31dad14 and rm_val == 2  
// opcode: fmadd.d ; op1:f6; op2:f27; op3:f7; dest:f1; op1val:0x3fe76f0b2f92e7ea; op2val:0xbfd06c756a88ae94; op3val:0x3fc80de4b31dad14; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f1, f6, f27, f7, 0x2, 0, x16, 552, x17, x15, 368, x18)

inst_24:
// rs1==f16, rs2==f17, rs3==f4, rd==f22, fs1 == 0 and fe1 == 0x3fe and fm1 == 0x76f0b2f92e7ea and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x06c756a88ae94 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x80de4b31dad14 and rm_val == 1  
// opcode: fmadd.d ; op1:f16; op2:f17; op3:f4; dest:f22; op1val:0x3fe76f0b2f92e7ea; op2val:0xbfd06c756a88ae94; op3val:0x3fc80de4b31dad14; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f22, f16, f17, f4, 0x1, 0, x16, 576, x17, x15, 384, x18)

inst_25:
// rs1==f10, rs2==f7, rs3==f2, rd==f20, fs1 == 0 and fe1 == 0x3fe and fm1 == 0x76f0b2f92e7ea and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x06c756a88ae94 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x80de4b31dad14 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f7; op3:f2; dest:f20; op1val:0x3fe76f0b2f92e7ea; op2val:0xbfd06c756a88ae94; op3val:0x3fc80de4b31dad14; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f20, f10, f7, f2, 0x0, 0, x16, 600, x17, x15, 400, x18)

inst_26:
// rs1==f7, rs2==f29, rs3==f24, rd==f15, fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1681e079f572c and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x19442c7aaa4ba and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x31feba49448ea and rm_val == 4  
// opcode: fmadd.d ; op1:f7; op2:f29; op3:f24; dest:f15; op1val:0x3fd1681e079f572c; op2val:0xbff19442c7aaa4ba; op3val:0x3fd31feba49448ea; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f15, f7, f29, f24, 0x4, 0, x16, 624, x17, x15, 416, x18)

inst_27:
// rs1==f19, rs2==f31, rs3==f17, rd==f2, fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1681e079f572c and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x19442c7aaa4ba and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x31feba49448ea and rm_val == 3  
// opcode: fmadd.d ; op1:f19; op2:f31; op3:f17; dest:f2; op1val:0x3fd1681e079f572c; op2val:0xbff19442c7aaa4ba; op3val:0x3fd31feba49448ea; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f2, f19, f31, f17, 0x3, 0, x16, 648, x17, x15, 432, x18)

inst_28:
// rs1==f24, rs2==f13, rs3==f0, rd==f17, fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1681e079f572c and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x19442c7aaa4ba and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x31feba49448ea and rm_val == 2  
// opcode: fmadd.d ; op1:f24; op2:f13; op3:f0; dest:f17; op1val:0x3fd1681e079f572c; op2val:0xbff19442c7aaa4ba; op3val:0x3fd31feba49448ea; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f17, f24, f13, f0, 0x2, 0, x16, 672, x17, x15, 448, x18)

inst_29:
// rs1==f18, rs2==f14, rs3==f30, rd==f19, fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1681e079f572c and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x19442c7aaa4ba and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x31feba49448ea and rm_val == 1  
// opcode: fmadd.d ; op1:f18; op2:f14; op3:f30; dest:f19; op1val:0x3fd1681e079f572c; op2val:0xbff19442c7aaa4ba; op3val:0x3fd31feba49448ea; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f19, f18, f14, f30, 0x1, 0, x16, 696, x17, x15, 464, x18)

inst_30:
// rs1==f4, rs2==f3, rs3==f1, rd==f25, fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1681e079f572c and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x19442c7aaa4ba and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x31feba49448ea and rm_val == 0  
// opcode: fmadd.d ; op1:f4; op2:f3; op3:f1; dest:f25; op1val:0x3fd1681e079f572c; op2val:0xbff19442c7aaa4ba; op3val:0x3fd31feba49448ea; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f25, f4, f3, f1, 0x0, 0, x16, 720, x17, x15, 480, x18)

inst_31:
// rs1==f25, rs2==f24, rs3==f22, rd==f14, fs1 == 0 and fe1 == 0x3fd and fm1 == 0x60cf781bfd0ae and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x0ce2a4bba2995 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x72918becd6320 and rm_val == 4  
// opcode: fmadd.d ; op1:f25; op2:f24; op3:f22; dest:f14; op1val:0x3fd60cf781bfd0ae; op2val:0xbfc0ce2a4bba2995; op3val:0x3fa72918becd6320; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f14, f25, f24, f22, 0x4, 0, x16, 744, x17, x15, 496, x18)

inst_32:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x60cf781bfd0ae and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x0ce2a4bba2995 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x72918becd6320 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd60cf781bfd0ae; op2val:0xbfc0ce2a4bba2995; op3val:0x3fa72918becd6320; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 512, x18)

inst_33:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x60cf781bfd0ae and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x0ce2a4bba2995 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x72918becd6320 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd60cf781bfd0ae; op2val:0xbfc0ce2a4bba2995; op3val:0x3fa72918becd6320; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 528, x18)

inst_34:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x60cf781bfd0ae and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x0ce2a4bba2995 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x72918becd6320 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd60cf781bfd0ae; op2val:0xbfc0ce2a4bba2995; op3val:0x3fa72918becd6320; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 544, x18)

inst_35:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x60cf781bfd0ae and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x0ce2a4bba2995 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x72918becd6320 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd60cf781bfd0ae; op2val:0xbfc0ce2a4bba2995; op3val:0x3fa72918becd6320; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 560, x18)

inst_36:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1d9a3df6d15ce and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x504dc3ef3dabe and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x7731334ffb074 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1d9a3df6d15ce; op2val:0xbfd504dc3ef3dabe; op3val:0x3fc7731334ffb074; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 576, x18)

inst_37:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1d9a3df6d15ce and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x504dc3ef3dabe and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x7731334ffb074 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1d9a3df6d15ce; op2val:0xbfd504dc3ef3dabe; op3val:0x3fc7731334ffb074; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 592, x18)

inst_38:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1d9a3df6d15ce and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x504dc3ef3dabe and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x7731334ffb074 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1d9a3df6d15ce; op2val:0xbfd504dc3ef3dabe; op3val:0x3fc7731334ffb074; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 608, x18)

inst_39:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1d9a3df6d15ce and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x504dc3ef3dabe and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x7731334ffb074 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1d9a3df6d15ce; op2val:0xbfd504dc3ef3dabe; op3val:0x3fc7731334ffb074; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 624, x18)

inst_40:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1d9a3df6d15ce and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x504dc3ef3dabe and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x7731334ffb074 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1d9a3df6d15ce; op2val:0xbfd504dc3ef3dabe; op3val:0x3fc7731334ffb074; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 640, x18)

inst_41:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xec1898de532ec and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xc517682d93fff and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xb37a427c600b4 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcec1898de532ec; op2val:0xbffc517682d93fff; op3val:0x3fdb37a427c600b4; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 656, x18)

inst_42:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xec1898de532ec and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xc517682d93fff and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xb37a427c600b4 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcec1898de532ec; op2val:0xbffc517682d93fff; op3val:0x3fdb37a427c600b4; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 672, x18)

inst_43:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xec1898de532ec and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xc517682d93fff and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xb37a427c600b4 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcec1898de532ec; op2val:0xbffc517682d93fff; op3val:0x3fdb37a427c600b4; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 688, x18)

inst_44:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xec1898de532ec and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xc517682d93fff and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xb37a427c600b4 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcec1898de532ec; op2val:0xbffc517682d93fff; op3val:0x3fdb37a427c600b4; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 704, x18)

inst_45:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xec1898de532ec and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xc517682d93fff and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xb37a427c600b4 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcec1898de532ec; op2val:0xbffc517682d93fff; op3val:0x3fdb37a427c600b4; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 720, x18)

inst_46:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xa99d8d6d9d578 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xaa1813d0aa9b3 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x62341a87a3a08 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fba99d8d6d9d578; op2val:0xc00aa1813d0aa9b3; op3val:0x3fd62341a87a3a08; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 736, x18)

inst_47:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xa99d8d6d9d578 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xaa1813d0aa9b3 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x62341a87a3a08 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fba99d8d6d9d578; op2val:0xc00aa1813d0aa9b3; op3val:0x3fd62341a87a3a08; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 752, x18)

inst_48:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xa99d8d6d9d578 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xaa1813d0aa9b3 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x62341a87a3a08 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fba99d8d6d9d578; op2val:0xc00aa1813d0aa9b3; op3val:0x3fd62341a87a3a08; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 768, x18)

inst_49:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xa99d8d6d9d578 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xaa1813d0aa9b3 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x62341a87a3a08 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fba99d8d6d9d578; op2val:0xc00aa1813d0aa9b3; op3val:0x3fd62341a87a3a08; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 784, x18)

inst_50:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xa99d8d6d9d578 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xaa1813d0aa9b3 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x62341a87a3a08 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fba99d8d6d9d578; op2val:0xc00aa1813d0aa9b3; op3val:0x3fd62341a87a3a08; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 800, x18)

inst_51:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xfb411e3b11a54 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xcad2931cd2bbc and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xc691df7ffd886 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcfb411e3b11a54; op2val:0xbffcad2931cd2bbc; op3val:0x3fdc691df7ffd886; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 816, x18)

inst_52:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xfb411e3b11a54 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xcad2931cd2bbc and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xc691df7ffd886 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcfb411e3b11a54; op2val:0xbffcad2931cd2bbc; op3val:0x3fdc691df7ffd886; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 832, x18)

inst_53:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xfb411e3b11a54 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xcad2931cd2bbc and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xc691df7ffd886 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcfb411e3b11a54; op2val:0xbffcad2931cd2bbc; op3val:0x3fdc691df7ffd886; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 848, x18)

inst_54:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xfb411e3b11a54 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xcad2931cd2bbc and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xc691df7ffd886 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcfb411e3b11a54; op2val:0xbffcad2931cd2bbc; op3val:0x3fdc691df7ffd886; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 864, x18)

inst_55:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xfb411e3b11a54 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xcad2931cd2bbc and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xc691df7ffd886 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcfb411e3b11a54; op2val:0xbffcad2931cd2bbc; op3val:0x3fdc691df7ffd886; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 880, x18)

inst_56:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x28aa00cec137b and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x2f1e90c78e30c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x5f44a2a7b04d4 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe28aa00cec137b; op2val:0xbff2f1e90c78e30c; op3val:0x3fe5f44a2a7b04d4; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 896, x18)

inst_57:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x28aa00cec137b and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x2f1e90c78e30c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x5f44a2a7b04d4 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe28aa00cec137b; op2val:0xbff2f1e90c78e30c; op3val:0x3fe5f44a2a7b04d4; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 912, x18)

inst_58:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x28aa00cec137b and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x2f1e90c78e30c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x5f44a2a7b04d4 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe28aa00cec137b; op2val:0xbff2f1e90c78e30c; op3val:0x3fe5f44a2a7b04d4; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 928, x18)

inst_59:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x28aa00cec137b and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x2f1e90c78e30c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x5f44a2a7b04d4 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe28aa00cec137b; op2val:0xbff2f1e90c78e30c; op3val:0x3fe5f44a2a7b04d4; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 944, x18)

inst_60:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x28aa00cec137b and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x2f1e90c78e30c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x5f44a2a7b04d4 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe28aa00cec137b; op2val:0xbff2f1e90c78e30c; op3val:0x3fe5f44a2a7b04d4; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 960, x18)

inst_61:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x40a22dc7537a8 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x70831d1736016 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xcd8d593b66657 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe40a22dc7537a8; op2val:0xbff70831d1736016; op3val:0x3fecd8d593b66657; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 976, x18)

inst_62:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x40a22dc7537a8 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x70831d1736016 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xcd8d593b66657 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe40a22dc7537a8; op2val:0xbff70831d1736016; op3val:0x3fecd8d593b66657; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 992, x18)

inst_63:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x40a22dc7537a8 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x70831d1736016 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xcd8d593b66657 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe40a22dc7537a8; op2val:0xbff70831d1736016; op3val:0x3fecd8d593b66657; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 1008, x18)

inst_64:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x40a22dc7537a8 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x70831d1736016 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xcd8d593b66657 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe40a22dc7537a8; op2val:0xbff70831d1736016; op3val:0x3fecd8d593b66657; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 1024, x18)

inst_65:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x40a22dc7537a8 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x70831d1736016 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xcd8d593b66657 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe40a22dc7537a8; op2val:0xbff70831d1736016; op3val:0x3fecd8d593b66657; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1040, x18)

inst_66:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x99acbe8d0b5e5 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc8dd680d309fe and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6d8f020782810 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe99acbe8d0b5e5; op2val:0xbfec8dd680d309fe; op3val:0x3fe6d8f020782810; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 1056, x18)

inst_67:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x99acbe8d0b5e5 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc8dd680d309fe and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6d8f020782810 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe99acbe8d0b5e5; op2val:0xbfec8dd680d309fe; op3val:0x3fe6d8f020782810; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 1072, x18)

inst_68:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x99acbe8d0b5e5 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc8dd680d309fe and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6d8f020782810 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe99acbe8d0b5e5; op2val:0xbfec8dd680d309fe; op3val:0x3fe6d8f020782810; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 1088, x18)

inst_69:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x99acbe8d0b5e5 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc8dd680d309fe and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6d8f020782810 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe99acbe8d0b5e5; op2val:0xbfec8dd680d309fe; op3val:0x3fe6d8f020782810; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 1104, x18)

inst_70:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x99acbe8d0b5e5 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc8dd680d309fe and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6d8f020782810 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe99acbe8d0b5e5; op2val:0xbfec8dd680d309fe; op3val:0x3fe6d8f020782810; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1120, x18)

inst_71:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3295496028172 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x96fd9927db95e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe7687752f82e2 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd3295496028172; op2val:0xc0096fd9927db95e; op3val:0x3fee7687752f82e2; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 1136, x18)

inst_72:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3295496028172 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x96fd9927db95e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe7687752f82e2 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd3295496028172; op2val:0xc0096fd9927db95e; op3val:0x3fee7687752f82e2; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 1152, x18)

inst_73:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3295496028172 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x96fd9927db95e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe7687752f82e2 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd3295496028172; op2val:0xc0096fd9927db95e; op3val:0x3fee7687752f82e2; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 1168, x18)

inst_74:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3295496028172 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x96fd9927db95e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe7687752f82e2 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd3295496028172; op2val:0xc0096fd9927db95e; op3val:0x3fee7687752f82e2; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 1184, x18)

inst_75:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3295496028172 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x96fd9927db95e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe7687752f82e2 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd3295496028172; op2val:0xc0096fd9927db95e; op3val:0x3fee7687752f82e2; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1200, x18)

inst_76:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x825cb56e58c24 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x3e67031e065e5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe08aa16078411 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe825cb56e58c24; op2val:0xbff3e67031e065e5; op3val:0x3fee08aa16078411; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 1216, x18)

inst_77:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x825cb56e58c24 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x3e67031e065e5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe08aa16078411 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe825cb56e58c24; op2val:0xbff3e67031e065e5; op3val:0x3fee08aa16078411; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 1232, x18)

inst_78:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x825cb56e58c24 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x3e67031e065e5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe08aa16078411 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe825cb56e58c24; op2val:0xbff3e67031e065e5; op3val:0x3fee08aa16078411; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 1248, x18)

inst_79:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x825cb56e58c24 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x3e67031e065e5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe08aa16078411 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe825cb56e58c24; op2val:0xbff3e67031e065e5; op3val:0x3fee08aa16078411; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 1264, x18)

inst_80:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x825cb56e58c24 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x3e67031e065e5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe08aa16078411 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe825cb56e58c24; op2val:0xbff3e67031e065e5; op3val:0x3fee08aa16078411; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1280, x18)

inst_81:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2487f902100ff and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x7b135af2bcc57 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xb12b6baab6b86 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe2487f902100ff; op2val:0xbfe7b135af2bcc57; op3val:0x3fdb12b6baab6b86; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 1296, x18)

inst_82:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2487f902100ff and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x7b135af2bcc57 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xb12b6baab6b86 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe2487f902100ff; op2val:0xbfe7b135af2bcc57; op3val:0x3fdb12b6baab6b86; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 1312, x18)

inst_83:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2487f902100ff and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x7b135af2bcc57 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xb12b6baab6b86 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe2487f902100ff; op2val:0xbfe7b135af2bcc57; op3val:0x3fdb12b6baab6b86; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 1328, x18)

inst_84:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2487f902100ff and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x7b135af2bcc57 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xb12b6baab6b86 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe2487f902100ff; op2val:0xbfe7b135af2bcc57; op3val:0x3fdb12b6baab6b86; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 1344, x18)
addi x16,x16,2040

inst_85:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2487f902100ff and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x7b135af2bcc57 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xb12b6baab6b86 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe2487f902100ff; op2val:0xbfe7b135af2bcc57; op3val:0x3fdb12b6baab6b86; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 1360, x18)

inst_86:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x82a3145361807 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x366b347d54828 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd4d3640ce04fc and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe82a3145361807; op2val:0xbff366b347d54828; op3val:0x3fed4d3640ce04fc; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 1376, x18)

inst_87:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x82a3145361807 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x366b347d54828 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd4d3640ce04fc and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe82a3145361807; op2val:0xbff366b347d54828; op3val:0x3fed4d3640ce04fc; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 1392, x18)

inst_88:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x82a3145361807 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x366b347d54828 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd4d3640ce04fc and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe82a3145361807; op2val:0xbff366b347d54828; op3val:0x3fed4d3640ce04fc; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 1408, x18)

inst_89:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x82a3145361807 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x366b347d54828 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd4d3640ce04fc and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe82a3145361807; op2val:0xbff366b347d54828; op3val:0x3fed4d3640ce04fc; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 1424, x18)

inst_90:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x82a3145361807 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x366b347d54828 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd4d3640ce04fc and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe82a3145361807; op2val:0xbff366b347d54828; op3val:0x3fed4d3640ce04fc; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 1440, x18)

inst_91:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbd8914dda5bbb and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0e1217d67968e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd6061121d1254 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3febd8914dda5bbb; op2val:0xbff0e1217d67968e; op3val:0x3fed6061121d1254; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 1456, x18)

inst_92:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbd8914dda5bbb and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0e1217d67968e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd6061121d1254 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3febd8914dda5bbb; op2val:0xbff0e1217d67968e; op3val:0x3fed6061121d1254; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 1472, x18)

inst_93:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbd8914dda5bbb and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0e1217d67968e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd6061121d1254 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3febd8914dda5bbb; op2val:0xbff0e1217d67968e; op3val:0x3fed6061121d1254; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 1488, x18)

inst_94:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbd8914dda5bbb and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0e1217d67968e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd6061121d1254 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3febd8914dda5bbb; op2val:0xbff0e1217d67968e; op3val:0x3fed6061121d1254; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 1504, x18)

inst_95:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xbd8914dda5bbb and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0e1217d67968e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd6061121d1254 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3febd8914dda5bbb; op2val:0xbff0e1217d67968e; op3val:0x3fed6061121d1254; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 1520, x18)

inst_96:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x71caa898ef5dc and fs2 == 1 and fe2 == 0x400 and fm2 == 0xe7198d2a3a627 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x5fceb7b7825e6 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc71caa898ef5dc; op2val:0xc00e7198d2a3a627; op3val:0x3fe5fceb7b7825e6; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 1536, x18)

inst_97:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x71caa898ef5dc and fs2 == 1 and fe2 == 0x400 and fm2 == 0xe7198d2a3a627 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x5fceb7b7825e6 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc71caa898ef5dc; op2val:0xc00e7198d2a3a627; op3val:0x3fe5fceb7b7825e6; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 1552, x18)

inst_98:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x71caa898ef5dc and fs2 == 1 and fe2 == 0x400 and fm2 == 0xe7198d2a3a627 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x5fceb7b7825e6 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc71caa898ef5dc; op2val:0xc00e7198d2a3a627; op3val:0x3fe5fceb7b7825e6; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 1568, x18)

inst_99:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x71caa898ef5dc and fs2 == 1 and fe2 == 0x400 and fm2 == 0xe7198d2a3a627 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x5fceb7b7825e6 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc71caa898ef5dc; op2val:0xc00e7198d2a3a627; op3val:0x3fe5fceb7b7825e6; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 1584, x18)

inst_100:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x71caa898ef5dc and fs2 == 1 and fe2 == 0x400 and fm2 == 0xe7198d2a3a627 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x5fceb7b7825e6 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc71caa898ef5dc; op2val:0xc00e7198d2a3a627; op3val:0x3fe5fceb7b7825e6; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 1600, x18)

inst_101:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd3218c4e1606f and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xfee2ce3ed8938 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xd21d58bc8c84c and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed3218c4e1606f; op2val:0xbfcfee2ce3ed8938; op3val:0x3fcd21d58bc8c84c; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 1616, x18)

inst_102:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd3218c4e1606f and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xfee2ce3ed8938 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xd21d58bc8c84c and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed3218c4e1606f; op2val:0xbfcfee2ce3ed8938; op3val:0x3fcd21d58bc8c84c; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 1632, x18)

inst_103:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd3218c4e1606f and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xfee2ce3ed8938 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xd21d58bc8c84c and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed3218c4e1606f; op2val:0xbfcfee2ce3ed8938; op3val:0x3fcd21d58bc8c84c; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 1648, x18)

inst_104:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd3218c4e1606f and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xfee2ce3ed8938 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xd21d58bc8c84c and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed3218c4e1606f; op2val:0xbfcfee2ce3ed8938; op3val:0x3fcd21d58bc8c84c; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 1664, x18)

inst_105:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd3218c4e1606f and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xfee2ce3ed8938 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xd21d58bc8c84c and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed3218c4e1606f; op2val:0xbfcfee2ce3ed8938; op3val:0x3fcd21d58bc8c84c; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1680, x18)

inst_106:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc4c4b2771f44c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x8e80868a6395e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x60668ee112e02 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec4c4b2771f44c; op2val:0xbfe8e80868a6395e; op3val:0x3fe60668ee112e02; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 1696, x18)

inst_107:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc4c4b2771f44c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x8e80868a6395e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x60668ee112e02 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec4c4b2771f44c; op2val:0xbfe8e80868a6395e; op3val:0x3fe60668ee112e02; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 1712, x18)

inst_108:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc4c4b2771f44c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x8e80868a6395e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x60668ee112e02 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec4c4b2771f44c; op2val:0xbfe8e80868a6395e; op3val:0x3fe60668ee112e02; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 1728, x18)

inst_109:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc4c4b2771f44c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x8e80868a6395e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x60668ee112e02 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec4c4b2771f44c; op2val:0xbfe8e80868a6395e; op3val:0x3fe60668ee112e02; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 1744, x18)

inst_110:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc4c4b2771f44c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x8e80868a6395e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x60668ee112e02 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec4c4b2771f44c; op2val:0xbfe8e80868a6395e; op3val:0x3fe60668ee112e02; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1760, x18)

inst_111:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x6380270014d38 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x1e1e5dfdb18b3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x8d53571c83a53 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc6380270014d38; op2val:0xc011e1e5dfdb18b3; op3val:0x3fe8d53571c83a53; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 1776, x18)

inst_112:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x6380270014d38 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x1e1e5dfdb18b3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x8d53571c83a53 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc6380270014d38; op2val:0xc011e1e5dfdb18b3; op3val:0x3fe8d53571c83a53; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 1792, x18)

inst_113:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x6380270014d38 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x1e1e5dfdb18b3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x8d53571c83a53 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc6380270014d38; op2val:0xc011e1e5dfdb18b3; op3val:0x3fe8d53571c83a53; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 1808, x18)

inst_114:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x6380270014d38 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x1e1e5dfdb18b3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x8d53571c83a53 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc6380270014d38; op2val:0xc011e1e5dfdb18b3; op3val:0x3fe8d53571c83a53; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 1824, x18)

inst_115:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x6380270014d38 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x1e1e5dfdb18b3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x8d53571c83a53 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc6380270014d38; op2val:0xc011e1e5dfdb18b3; op3val:0x3fe8d53571c83a53; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1840, x18)

inst_116:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6280d093ede42 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x976a8d41fee7b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1a172c46f184a and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe6280d093ede42; op2val:0xbfe976a8d41fee7b; op3val:0x3fe1a172c46f184a; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 1856, x18)

inst_117:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6280d093ede42 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x976a8d41fee7b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1a172c46f184a and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe6280d093ede42; op2val:0xbfe976a8d41fee7b; op3val:0x3fe1a172c46f184a; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 1872, x18)

inst_118:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6280d093ede42 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x976a8d41fee7b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1a172c46f184a and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe6280d093ede42; op2val:0xbfe976a8d41fee7b; op3val:0x3fe1a172c46f184a; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 1888, x18)

inst_119:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6280d093ede42 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x976a8d41fee7b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1a172c46f184a and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe6280d093ede42; op2val:0xbfe976a8d41fee7b; op3val:0x3fe1a172c46f184a; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 1904, x18)

inst_120:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6280d093ede42 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x976a8d41fee7b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1a172c46f184a and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe6280d093ede42; op2val:0xbfe976a8d41fee7b; op3val:0x3fe1a172c46f184a; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1920, x18)

inst_121:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x18f22ffe6b360 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x44b7215e230f8 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x645b7e7cd6268 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd18f22ffe6b360; op2val:0xbfd44b7215e230f8; op3val:0x3fb645b7e7cd6268; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 1936, x18)

inst_122:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x18f22ffe6b360 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x44b7215e230f8 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x645b7e7cd6268 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd18f22ffe6b360; op2val:0xbfd44b7215e230f8; op3val:0x3fb645b7e7cd6268; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 1952, x18)

inst_123:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x18f22ffe6b360 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x44b7215e230f8 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x645b7e7cd6268 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd18f22ffe6b360; op2val:0xbfd44b7215e230f8; op3val:0x3fb645b7e7cd6268; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 1968, x18)

inst_124:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x18f22ffe6b360 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x44b7215e230f8 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x645b7e7cd6268 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd18f22ffe6b360; op2val:0xbfd44b7215e230f8; op3val:0x3fb645b7e7cd6268; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 1984, x18)

inst_125:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x18f22ffe6b360 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x44b7215e230f8 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x645b7e7cd6268 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd18f22ffe6b360; op2val:0xbfd44b7215e230f8; op3val:0x3fb645b7e7cd6268; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 2000, x18)

inst_126:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3f2a875e925ef and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x33ebcb5fefd67 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x7fe5f9ef027c8 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3f2a875e925ef; op2val:0xbfe33ebcb5fefd67; op3val:0x3fd7fe5f9ef027c8; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_2)

inst_127:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3f2a875e925ef and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x33ebcb5fefd67 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x7fe5f9ef027c8 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3f2a875e925ef; op2val:0xbfe33ebcb5fefd67; op3val:0x3fd7fe5f9ef027c8; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 0, x18)

inst_128:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3f2a875e925ef and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x33ebcb5fefd67 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x7fe5f9ef027c8 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3f2a875e925ef; op2val:0xbfe33ebcb5fefd67; op3val:0x3fd7fe5f9ef027c8; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 16, x18)

inst_129:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3f2a875e925ef and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x33ebcb5fefd67 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x7fe5f9ef027c8 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3f2a875e925ef; op2val:0xbfe33ebcb5fefd67; op3val:0x3fd7fe5f9ef027c8; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 32, x18)

inst_130:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3f2a875e925ef and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x33ebcb5fefd67 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x7fe5f9ef027c8 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3f2a875e925ef; op2val:0xbfe33ebcb5fefd67; op3val:0x3fd7fe5f9ef027c8; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 48, x18)

inst_131:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x06e439a4ea9bd and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xab5bfe00a7991 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xb6dd241dae3f0 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe06e439a4ea9bd; op2val:0xbfeab5bfe00a7991; op3val:0x3fdb6dd241dae3f0; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 64, x18)

inst_132:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x06e439a4ea9bd and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xab5bfe00a7991 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xb6dd241dae3f0 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe06e439a4ea9bd; op2val:0xbfeab5bfe00a7991; op3val:0x3fdb6dd241dae3f0; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 80, x18)

inst_133:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x06e439a4ea9bd and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xab5bfe00a7991 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xb6dd241dae3f0 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe06e439a4ea9bd; op2val:0xbfeab5bfe00a7991; op3val:0x3fdb6dd241dae3f0; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 96, x18)

inst_134:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x06e439a4ea9bd and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xab5bfe00a7991 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xb6dd241dae3f0 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe06e439a4ea9bd; op2val:0xbfeab5bfe00a7991; op3val:0x3fdb6dd241dae3f0; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 112, x18)

inst_135:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x06e439a4ea9bd and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xab5bfe00a7991 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xb6dd241dae3f0 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe06e439a4ea9bd; op2val:0xbfeab5bfe00a7991; op3val:0x3fdb6dd241dae3f0; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 128, x18)

inst_136:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf7164363c330a and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xdfc4848f59e17 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xd76a6cd239b52 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef7164363c330a; op2val:0xbfddfc4848f59e17; op3val:0x3fdd76a6cd239b52; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 144, x18)

inst_137:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf7164363c330a and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xdfc4848f59e17 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xd76a6cd239b52 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef7164363c330a; op2val:0xbfddfc4848f59e17; op3val:0x3fdd76a6cd239b52; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 160, x18)

inst_138:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf7164363c330a and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xdfc4848f59e17 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xd76a6cd239b52 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef7164363c330a; op2val:0xbfddfc4848f59e17; op3val:0x3fdd76a6cd239b52; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 176, x18)

inst_139:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf7164363c330a and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xdfc4848f59e17 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xd76a6cd239b52 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef7164363c330a; op2val:0xbfddfc4848f59e17; op3val:0x3fdd76a6cd239b52; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 192, x18)

inst_140:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf7164363c330a and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xdfc4848f59e17 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xd76a6cd239b52 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef7164363c330a; op2val:0xbfddfc4848f59e17; op3val:0x3fdd76a6cd239b52; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 208, x18)

inst_141:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x25576d45156d0 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x5f053f8c2f7df and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x9238e25800d90 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc25576d45156d0; op2val:0xc015f053f8c2f7df; op3val:0x3fe9238e25800d90; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 224, x18)

inst_142:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x25576d45156d0 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x5f053f8c2f7df and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x9238e25800d90 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc25576d45156d0; op2val:0xc015f053f8c2f7df; op3val:0x3fe9238e25800d90; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 240, x18)

inst_143:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x25576d45156d0 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x5f053f8c2f7df and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x9238e25800d90 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc25576d45156d0; op2val:0xc015f053f8c2f7df; op3val:0x3fe9238e25800d90; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 256, x18)

inst_144:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x25576d45156d0 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x5f053f8c2f7df and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x9238e25800d90 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc25576d45156d0; op2val:0xc015f053f8c2f7df; op3val:0x3fe9238e25800d90; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 272, x18)

inst_145:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x25576d45156d0 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x5f053f8c2f7df and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x9238e25800d90 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc25576d45156d0; op2val:0xc015f053f8c2f7df; op3val:0x3fe9238e25800d90; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 288, x18)

inst_146:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x425849ad16b18 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x46b0967398181 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x9b5ac7f65a3ce and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb425849ad16b18; op2val:0xc0146b0967398181; op3val:0x3fd9b5ac7f65a3ce; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 304, x18)

inst_147:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x425849ad16b18 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x46b0967398181 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x9b5ac7f65a3ce and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb425849ad16b18; op2val:0xc0146b0967398181; op3val:0x3fd9b5ac7f65a3ce; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 320, x18)

inst_148:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x425849ad16b18 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x46b0967398181 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x9b5ac7f65a3ce and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb425849ad16b18; op2val:0xc0146b0967398181; op3val:0x3fd9b5ac7f65a3ce; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 336, x18)

inst_149:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x425849ad16b18 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x46b0967398181 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x9b5ac7f65a3ce and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb425849ad16b18; op2val:0xc0146b0967398181; op3val:0x3fd9b5ac7f65a3ce; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 352, x18)

inst_150:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x425849ad16b18 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x46b0967398181 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x9b5ac7f65a3ce and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb425849ad16b18; op2val:0xc0146b0967398181; op3val:0x3fd9b5ac7f65a3ce; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 368, x18)

inst_151:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc8b6ca7a718e0 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x06eb115e7e12c and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xd50e7201e6198 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec8b6ca7a718e0; op2val:0xbfe06eb115e7e12c; op3val:0x3fdd50e7201e6198; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 384, x18)

inst_152:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc8b6ca7a718e0 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x06eb115e7e12c and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xd50e7201e6198 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec8b6ca7a718e0; op2val:0xbfe06eb115e7e12c; op3val:0x3fdd50e7201e6198; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 400, x18)

inst_153:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc8b6ca7a718e0 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x06eb115e7e12c and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xd50e7201e6198 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec8b6ca7a718e0; op2val:0xbfe06eb115e7e12c; op3val:0x3fdd50e7201e6198; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 416, x18)

inst_154:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc8b6ca7a718e0 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x06eb115e7e12c and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xd50e7201e6198 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec8b6ca7a718e0; op2val:0xbfe06eb115e7e12c; op3val:0x3fdd50e7201e6198; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 432, x18)

inst_155:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc8b6ca7a718e0 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x06eb115e7e12c and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xd50e7201e6198 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec8b6ca7a718e0; op2val:0xbfe06eb115e7e12c; op3val:0x3fdd50e7201e6198; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 448, x18)

inst_156:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd4cecc84ad1c0 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x7fa7848ad4370 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x5f4a14cd638c4 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed4cecc84ad1c0; op2val:0xbfe7fa7848ad4370; op3val:0x3fe5f4a14cd638c4; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 464, x18)

inst_157:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd4cecc84ad1c0 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x7fa7848ad4370 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x5f4a14cd638c4 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed4cecc84ad1c0; op2val:0xbfe7fa7848ad4370; op3val:0x3fe5f4a14cd638c4; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 480, x18)

inst_158:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd4cecc84ad1c0 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x7fa7848ad4370 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x5f4a14cd638c4 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed4cecc84ad1c0; op2val:0xbfe7fa7848ad4370; op3val:0x3fe5f4a14cd638c4; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 496, x18)

inst_159:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd4cecc84ad1c0 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x7fa7848ad4370 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x5f4a14cd638c4 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed4cecc84ad1c0; op2val:0xbfe7fa7848ad4370; op3val:0x3fe5f4a14cd638c4; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 512, x18)

inst_160:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd4cecc84ad1c0 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x7fa7848ad4370 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x5f4a14cd638c4 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed4cecc84ad1c0; op2val:0xbfe7fa7848ad4370; op3val:0x3fe5f4a14cd638c4; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 528, x18)

inst_161:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x31fe31f3f6d80 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x9186faa2c411f and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xdff082e2155b8 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe31fe31f3f6d80; op2val:0xbfe9186faa2c411f; op3val:0x3fddff082e2155b8; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 544, x18)

inst_162:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x31fe31f3f6d80 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x9186faa2c411f and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xdff082e2155b8 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe31fe31f3f6d80; op2val:0xbfe9186faa2c411f; op3val:0x3fddff082e2155b8; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 560, x18)

inst_163:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x31fe31f3f6d80 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x9186faa2c411f and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xdff082e2155b8 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe31fe31f3f6d80; op2val:0xbfe9186faa2c411f; op3val:0x3fddff082e2155b8; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 576, x18)

inst_164:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x31fe31f3f6d80 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x9186faa2c411f and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xdff082e2155b8 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe31fe31f3f6d80; op2val:0xbfe9186faa2c411f; op3val:0x3fddff082e2155b8; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 592, x18)

inst_165:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x31fe31f3f6d80 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x9186faa2c411f and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xdff082e2155b8 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe31fe31f3f6d80; op2val:0xbfe9186faa2c411f; op3val:0x3fddff082e2155b8; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 608, x18)

inst_166:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa42775d379294 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x3293e7a519c9a and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xf729e9ae02556 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea42775d379294; op2val:0xbfe3293e7a519c9a; op3val:0x3fdf729e9ae02556; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 624, x18)

inst_167:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa42775d379294 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x3293e7a519c9a and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xf729e9ae02556 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea42775d379294; op2val:0xbfe3293e7a519c9a; op3val:0x3fdf729e9ae02556; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 640, x18)

inst_168:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa42775d379294 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x3293e7a519c9a and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xf729e9ae02556 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea42775d379294; op2val:0xbfe3293e7a519c9a; op3val:0x3fdf729e9ae02556; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 656, x18)

inst_169:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa42775d379294 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x3293e7a519c9a and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xf729e9ae02556 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea42775d379294; op2val:0xbfe3293e7a519c9a; op3val:0x3fdf729e9ae02556; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 672, x18)
addi x16,x16,2040

inst_170:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa42775d379294 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x3293e7a519c9a and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xf729e9ae02556 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea42775d379294; op2val:0xbfe3293e7a519c9a; op3val:0x3fdf729e9ae02556; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 688, x18)

inst_171:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xecbf188330fa1 and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0xe3110cf661ad7 and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0xd0e6ae71ab740 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feecbf188330fa1; op2val:0xbf9e3110cf661ad7; op3val:0x3f9d0e6ae71ab740; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 704, x18)

inst_172:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xecbf188330fa1 and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0xe3110cf661ad7 and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0xd0e6ae71ab740 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feecbf188330fa1; op2val:0xbf9e3110cf661ad7; op3val:0x3f9d0e6ae71ab740; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 720, x18)

inst_173:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xecbf188330fa1 and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0xe3110cf661ad7 and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0xd0e6ae71ab740 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feecbf188330fa1; op2val:0xbf9e3110cf661ad7; op3val:0x3f9d0e6ae71ab740; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 736, x18)

inst_174:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xecbf188330fa1 and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0xe3110cf661ad7 and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0xd0e6ae71ab740 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feecbf188330fa1; op2val:0xbf9e3110cf661ad7; op3val:0x3f9d0e6ae71ab740; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 752, x18)

inst_175:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xecbf188330fa1 and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0xe3110cf661ad7 and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0xd0e6ae71ab740 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feecbf188330fa1; op2val:0xbf9e3110cf661ad7; op3val:0x3f9d0e6ae71ab740; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 768, x18)

inst_176:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x635aaad702276 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x5de9699de9a39 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe5b69b07fe9e3 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe635aaad702276; op2val:0xbff5de9699de9a39; op3val:0x3fee5b69b07fe9e3; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 784, x18)

inst_177:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x635aaad702276 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x5de9699de9a39 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe5b69b07fe9e3 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe635aaad702276; op2val:0xbff5de9699de9a39; op3val:0x3fee5b69b07fe9e3; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 800, x18)

inst_178:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x635aaad702276 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x5de9699de9a39 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe5b69b07fe9e3 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe635aaad702276; op2val:0xbff5de9699de9a39; op3val:0x3fee5b69b07fe9e3; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 816, x18)

inst_179:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x635aaad702276 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x5de9699de9a39 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe5b69b07fe9e3 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe635aaad702276; op2val:0xbff5de9699de9a39; op3val:0x3fee5b69b07fe9e3; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 832, x18)

inst_180:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x635aaad702276 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x5de9699de9a39 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe5b69b07fe9e3 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe635aaad702276; op2val:0xbff5de9699de9a39; op3val:0x3fee5b69b07fe9e3; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 848, x18)

inst_181:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7d3845caa91f6 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x9772f84dfd0f8 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2f5fd5e376c0a and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7d3845caa91f6; op2val:0xbfe9772f84dfd0f8; op3val:0x3fe2f5fd5e376c0a; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 864, x18)

inst_182:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7d3845caa91f6 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x9772f84dfd0f8 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2f5fd5e376c0a and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7d3845caa91f6; op2val:0xbfe9772f84dfd0f8; op3val:0x3fe2f5fd5e376c0a; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 880, x18)

inst_183:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7d3845caa91f6 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x9772f84dfd0f8 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2f5fd5e376c0a and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7d3845caa91f6; op2val:0xbfe9772f84dfd0f8; op3val:0x3fe2f5fd5e376c0a; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 896, x18)

inst_184:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7d3845caa91f6 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x9772f84dfd0f8 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2f5fd5e376c0a and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7d3845caa91f6; op2val:0xbfe9772f84dfd0f8; op3val:0x3fe2f5fd5e376c0a; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 912, x18)

inst_185:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7d3845caa91f6 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x9772f84dfd0f8 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2f5fd5e376c0a and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7d3845caa91f6; op2val:0xbfe9772f84dfd0f8; op3val:0x3fe2f5fd5e376c0a; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 928, x18)

inst_186:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x34929d8dfb1c8 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x8f393a4e458bb and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe1357e7cef306 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe34929d8dfb1c8; op2val:0xbff8f393a4e458bb; op3val:0x3fee1357e7cef306; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 944, x18)

inst_187:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x34929d8dfb1c8 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x8f393a4e458bb and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe1357e7cef306 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe34929d8dfb1c8; op2val:0xbff8f393a4e458bb; op3val:0x3fee1357e7cef306; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 960, x18)

inst_188:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x34929d8dfb1c8 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x8f393a4e458bb and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe1357e7cef306 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe34929d8dfb1c8; op2val:0xbff8f393a4e458bb; op3val:0x3fee1357e7cef306; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 976, x18)

inst_189:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x34929d8dfb1c8 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x8f393a4e458bb and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe1357e7cef306 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe34929d8dfb1c8; op2val:0xbff8f393a4e458bb; op3val:0x3fee1357e7cef306; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 992, x18)

inst_190:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x34929d8dfb1c8 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x8f393a4e458bb and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe1357e7cef306 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe34929d8dfb1c8; op2val:0xbff8f393a4e458bb; op3val:0x3fee1357e7cef306; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1008, x18)

inst_191:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8358bc96c4adb and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x414f65f522ead and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe62a67202a4d9 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8358bc96c4adb; op2val:0xbff414f65f522ead; op3val:0x3fee62a67202a4d9; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 1024, x18)

inst_192:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8358bc96c4adb and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x414f65f522ead and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe62a67202a4d9 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8358bc96c4adb; op2val:0xbff414f65f522ead; op3val:0x3fee62a67202a4d9; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 1040, x18)

inst_193:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8358bc96c4adb and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x414f65f522ead and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe62a67202a4d9 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8358bc96c4adb; op2val:0xbff414f65f522ead; op3val:0x3fee62a67202a4d9; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 1056, x18)

inst_194:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8358bc96c4adb and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x414f65f522ead and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe62a67202a4d9 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8358bc96c4adb; op2val:0xbff414f65f522ead; op3val:0x3fee62a67202a4d9; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 1072, x18)

inst_195:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8358bc96c4adb and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x414f65f522ead and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe62a67202a4d9 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8358bc96c4adb; op2val:0xbff414f65f522ead; op3val:0x3fee62a67202a4d9; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1088, x18)

inst_196:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x0739750eb65a8 and fs2 == 1 and fe2 == 0x402 and fm2 == 0xd72d619b7f54d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe4795fd44d27c and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb0739750eb65a8; op2val:0xc02d72d619b7f54d; op3val:0x3fee4795fd44d27c; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 1104, x18)

inst_197:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x0739750eb65a8 and fs2 == 1 and fe2 == 0x402 and fm2 == 0xd72d619b7f54d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe4795fd44d27c and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb0739750eb65a8; op2val:0xc02d72d619b7f54d; op3val:0x3fee4795fd44d27c; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 1120, x18)

inst_198:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x0739750eb65a8 and fs2 == 1 and fe2 == 0x402 and fm2 == 0xd72d619b7f54d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe4795fd44d27c and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb0739750eb65a8; op2val:0xc02d72d619b7f54d; op3val:0x3fee4795fd44d27c; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 1136, x18)

inst_199:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x0739750eb65a8 and fs2 == 1 and fe2 == 0x402 and fm2 == 0xd72d619b7f54d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe4795fd44d27c and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb0739750eb65a8; op2val:0xc02d72d619b7f54d; op3val:0x3fee4795fd44d27c; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 1152, x18)

inst_200:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x0739750eb65a8 and fs2 == 1 and fe2 == 0x402 and fm2 == 0xd72d619b7f54d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe4795fd44d27c and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb0739750eb65a8; op2val:0xc02d72d619b7f54d; op3val:0x3fee4795fd44d27c; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1168, x18)

inst_201:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x9e8c5264c3ce8 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x41c535d2d80db and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0486a63a1d8bd and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb9e8c5264c3ce8; op2val:0xc0141c535d2d80db; op3val:0x3fe0486a63a1d8bd; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 1184, x18)

inst_202:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x9e8c5264c3ce8 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x41c535d2d80db and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0486a63a1d8bd and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb9e8c5264c3ce8; op2val:0xc0141c535d2d80db; op3val:0x3fe0486a63a1d8bd; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 1200, x18)

inst_203:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x9e8c5264c3ce8 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x41c535d2d80db and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0486a63a1d8bd and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb9e8c5264c3ce8; op2val:0xc0141c535d2d80db; op3val:0x3fe0486a63a1d8bd; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 1216, x18)

inst_204:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x9e8c5264c3ce8 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x41c535d2d80db and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0486a63a1d8bd and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb9e8c5264c3ce8; op2val:0xc0141c535d2d80db; op3val:0x3fe0486a63a1d8bd; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 1232, x18)

inst_205:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x9e8c5264c3ce8 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x41c535d2d80db and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0486a63a1d8bd and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb9e8c5264c3ce8; op2val:0xc0141c535d2d80db; op3val:0x3fe0486a63a1d8bd; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1248, x18)

inst_206:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xcff7865224462 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x06622e5458ea6 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xdb894430d5126 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fecff7865224462; op2val:0xbff06622e5458ea6; op3val:0x3fedb894430d5126; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 1264, x18)

inst_207:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xcff7865224462 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x06622e5458ea6 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xdb894430d5126 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fecff7865224462; op2val:0xbff06622e5458ea6; op3val:0x3fedb894430d5126; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 1280, x18)

inst_208:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xcff7865224462 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x06622e5458ea6 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xdb894430d5126 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fecff7865224462; op2val:0xbff06622e5458ea6; op3val:0x3fedb894430d5126; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 1296, x18)

inst_209:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xcff7865224462 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x06622e5458ea6 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xdb894430d5126 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fecff7865224462; op2val:0xbff06622e5458ea6; op3val:0x3fedb894430d5126; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 1312, x18)

inst_210:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xcff7865224462 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x06622e5458ea6 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xdb894430d5126 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fecff7865224462; op2val:0xbff06622e5458ea6; op3val:0x3fedb894430d5126; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 1328, x18)

inst_211:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xec9b00b7a7816 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x59e54c162121b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4ccb0e83df27d and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdec9b00b7a7816; op2val:0xbff59e54c162121b; op3val:0x3fe4ccb0e83df27d; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 1344, x18)

inst_212:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xec9b00b7a7816 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x59e54c162121b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4ccb0e83df27d and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdec9b00b7a7816; op2val:0xbff59e54c162121b; op3val:0x3fe4ccb0e83df27d; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 1360, x18)

inst_213:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xec9b00b7a7816 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x59e54c162121b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4ccb0e83df27d and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdec9b00b7a7816; op2val:0xbff59e54c162121b; op3val:0x3fe4ccb0e83df27d; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 1376, x18)

inst_214:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xec9b00b7a7816 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x59e54c162121b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4ccb0e83df27d and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdec9b00b7a7816; op2val:0xbff59e54c162121b; op3val:0x3fe4ccb0e83df27d; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 1392, x18)

inst_215:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xec9b00b7a7816 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x59e54c162121b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4ccb0e83df27d and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdec9b00b7a7816; op2val:0xbff59e54c162121b; op3val:0x3fe4ccb0e83df27d; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 1408, x18)

inst_216:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xce6bf6950d14a and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0x791f5d01f3c29 and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x549ad29a8dd00 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdce6bf6950d14a; op2val:0xbf9791f5d01f3c29; op3val:0x3f8549ad29a8dd00; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 1424, x18)

inst_217:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xce6bf6950d14a and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0x791f5d01f3c29 and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x549ad29a8dd00 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdce6bf6950d14a; op2val:0xbf9791f5d01f3c29; op3val:0x3f8549ad29a8dd00; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 1440, x18)

inst_218:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xce6bf6950d14a and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0x791f5d01f3c29 and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x549ad29a8dd00 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdce6bf6950d14a; op2val:0xbf9791f5d01f3c29; op3val:0x3f8549ad29a8dd00; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 1456, x18)

inst_219:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xce6bf6950d14a and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0x791f5d01f3c29 and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x549ad29a8dd00 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdce6bf6950d14a; op2val:0xbf9791f5d01f3c29; op3val:0x3f8549ad29a8dd00; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 1472, x18)

inst_220:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xce6bf6950d14a and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0x791f5d01f3c29 and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x549ad29a8dd00 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdce6bf6950d14a; op2val:0xbf9791f5d01f3c29; op3val:0x3f8549ad29a8dd00; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 1488, x18)

inst_221:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2dfe5ab522b1c and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x9e838ef55b053 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe8fc887ddee90 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe2dfe5ab522b1c; op2val:0xbff9e838ef55b053; op3val:0x3fee8fc887ddee90; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 1504, x18)

inst_222:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2dfe5ab522b1c and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x9e838ef55b053 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe8fc887ddee90 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe2dfe5ab522b1c; op2val:0xbff9e838ef55b053; op3val:0x3fee8fc887ddee90; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 1520, x18)

inst_223:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2dfe5ab522b1c and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x9e838ef55b053 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe8fc887ddee90 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe2dfe5ab522b1c; op2val:0xbff9e838ef55b053; op3val:0x3fee8fc887ddee90; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 1536, x18)

inst_224:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2dfe5ab522b1c and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x9e838ef55b053 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe8fc887ddee90 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe2dfe5ab522b1c; op2val:0xbff9e838ef55b053; op3val:0x3fee8fc887ddee90; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 1552, x18)

inst_225:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2dfe5ab522b1c and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x9e838ef55b053 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe8fc887ddee90 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe2dfe5ab522b1c; op2val:0xbff9e838ef55b053; op3val:0x3fee8fc887ddee90; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 1568, x18)

inst_226:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe0d60f23017e2 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xe15e3b6a36767 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xc41198519489c and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fee0d60f23017e2; op2val:0xbfce15e3b6a36767; op3val:0x3fcc41198519489c; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 1584, x18)

inst_227:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe0d60f23017e2 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xe15e3b6a36767 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xc41198519489c and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fee0d60f23017e2; op2val:0xbfce15e3b6a36767; op3val:0x3fcc41198519489c; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 1600, x18)

inst_228:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe0d60f23017e2 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xe15e3b6a36767 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xc41198519489c and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fee0d60f23017e2; op2val:0xbfce15e3b6a36767; op3val:0x3fcc41198519489c; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 1616, x18)

inst_229:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe0d60f23017e2 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xe15e3b6a36767 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xc41198519489c and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fee0d60f23017e2; op2val:0xbfce15e3b6a36767; op3val:0x3fcc41198519489c; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 1632, x18)

inst_230:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe0d60f23017e2 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xe15e3b6a36767 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xc41198519489c and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fee0d60f23017e2; op2val:0xbfce15e3b6a36767; op3val:0x3fcc41198519489c; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 1648, x18)

inst_231:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x92870dd595560 and fs2 == 1 and fe2 == 0x404 and fm2 == 0x43947472f5ed3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xfcc9d3a26fff0 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f992870dd595560; op2val:0xc0443947472f5ed3; op3val:0x3fefcc9d3a26fff0; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 1664, x18)

inst_232:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x92870dd595560 and fs2 == 1 and fe2 == 0x404 and fm2 == 0x43947472f5ed3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xfcc9d3a26fff0 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f992870dd595560; op2val:0xc0443947472f5ed3; op3val:0x3fefcc9d3a26fff0; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 1680, x18)

inst_233:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x92870dd595560 and fs2 == 1 and fe2 == 0x404 and fm2 == 0x43947472f5ed3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xfcc9d3a26fff0 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f992870dd595560; op2val:0xc0443947472f5ed3; op3val:0x3fefcc9d3a26fff0; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 1696, x18)

inst_234:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x92870dd595560 and fs2 == 1 and fe2 == 0x404 and fm2 == 0x43947472f5ed3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xfcc9d3a26fff0 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f992870dd595560; op2val:0xc0443947472f5ed3; op3val:0x3fefcc9d3a26fff0; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 1712, x18)

inst_235:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x92870dd595560 and fs2 == 1 and fe2 == 0x404 and fm2 == 0x43947472f5ed3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xfcc9d3a26fff0 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f992870dd595560; op2val:0xc0443947472f5ed3; op3val:0x3fefcc9d3a26fff0; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1728, x18)

inst_236:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x6aa01ab216bf6 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x9b967f0cbb108 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x23821c51824c4 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd6aa01ab216bf6; op2val:0xbff9b967f0cbb108; op3val:0x3fe23821c51824c4; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 1744, x18)

inst_237:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x6aa01ab216bf6 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x9b967f0cbb108 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x23821c51824c4 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd6aa01ab216bf6; op2val:0xbff9b967f0cbb108; op3val:0x3fe23821c51824c4; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 1760, x18)

inst_238:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x6aa01ab216bf6 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x9b967f0cbb108 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x23821c51824c4 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd6aa01ab216bf6; op2val:0xbff9b967f0cbb108; op3val:0x3fe23821c51824c4; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 1776, x18)

inst_239:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x6aa01ab216bf6 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x9b967f0cbb108 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x23821c51824c4 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd6aa01ab216bf6; op2val:0xbff9b967f0cbb108; op3val:0x3fe23821c51824c4; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 1792, x18)

inst_240:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x6aa01ab216bf6 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x9b967f0cbb108 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x23821c51824c4 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd6aa01ab216bf6; op2val:0xbff9b967f0cbb108; op3val:0x3fe23821c51824c4; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1808, x18)

inst_241:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x4fae5f65470f8 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x73d652382b79b and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xe792bbd3065a0 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd4fae5f65470f8; op2val:0xbfc73d652382b79b; op3val:0x3fae792bbd3065a0; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 1824, x18)

inst_242:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x4fae5f65470f8 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x73d652382b79b and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xe792bbd3065a0 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd4fae5f65470f8; op2val:0xbfc73d652382b79b; op3val:0x3fae792bbd3065a0; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 1840, x18)

inst_243:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x4fae5f65470f8 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x73d652382b79b and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xe792bbd3065a0 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd4fae5f65470f8; op2val:0xbfc73d652382b79b; op3val:0x3fae792bbd3065a0; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 1856, x18)

inst_244:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x4fae5f65470f8 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x73d652382b79b and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xe792bbd3065a0 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd4fae5f65470f8; op2val:0xbfc73d652382b79b; op3val:0x3fae792bbd3065a0; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 1872, x18)

inst_245:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x4fae5f65470f8 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x73d652382b79b and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xe792bbd3065a0 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd4fae5f65470f8; op2val:0xbfc73d652382b79b; op3val:0x3fae792bbd3065a0; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1888, x18)

inst_246:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xac5cf7ce589af and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd0c4b86af495e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x84d8d674c2398 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feac5cf7ce589af; op2val:0xbfed0c4b86af495e; op3val:0x3fe84d8d674c2398; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 1904, x18)

inst_247:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xac5cf7ce589af and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd0c4b86af495e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x84d8d674c2398 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feac5cf7ce589af; op2val:0xbfed0c4b86af495e; op3val:0x3fe84d8d674c2398; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 1920, x18)

inst_248:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xac5cf7ce589af and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd0c4b86af495e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x84d8d674c2398 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feac5cf7ce589af; op2val:0xbfed0c4b86af495e; op3val:0x3fe84d8d674c2398; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 1936, x18)

inst_249:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xac5cf7ce589af and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd0c4b86af495e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x84d8d674c2398 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feac5cf7ce589af; op2val:0xbfed0c4b86af495e; op3val:0x3fe84d8d674c2398; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 1952, x18)

inst_250:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xac5cf7ce589af and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd0c4b86af495e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x84d8d674c2398 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feac5cf7ce589af; op2val:0xbfed0c4b86af495e; op3val:0x3fe84d8d674c2398; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1968, x18)

inst_251:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x12137180d10f0 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0dcaa39adb8b4 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x20d760c41754c and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd12137180d10f0; op2val:0xbff0dcaa39adb8b4; op3val:0x3fd20d760c41754c; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 1984, x18)

inst_252:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x12137180d10f0 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0dcaa39adb8b4 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x20d760c41754c and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd12137180d10f0; op2val:0xbff0dcaa39adb8b4; op3val:0x3fd20d760c41754c; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 2000, x18)

inst_253:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x12137180d10f0 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0dcaa39adb8b4 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x20d760c41754c and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd12137180d10f0; op2val:0xbff0dcaa39adb8b4; op3val:0x3fd20d760c41754c; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_3)

inst_254:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x12137180d10f0 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0dcaa39adb8b4 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x20d760c41754c and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd12137180d10f0; op2val:0xbff0dcaa39adb8b4; op3val:0x3fd20d760c41754c; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 0, x18)
addi x16,x16,2040

inst_255:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x12137180d10f0 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0dcaa39adb8b4 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x20d760c41754c and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd12137180d10f0; op2val:0xbff0dcaa39adb8b4; op3val:0x3fd20d760c41754c; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 16, x18)

inst_256:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x105d75e8ddd6c and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x58fa44664b60f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6f07da7bb8429 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe105d75e8ddd6c; op2val:0xbff58fa44664b60f; op3val:0x3fe6f07da7bb8429; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 32, x18)

inst_257:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x105d75e8ddd6c and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x58fa44664b60f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6f07da7bb8429 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe105d75e8ddd6c; op2val:0xbff58fa44664b60f; op3val:0x3fe6f07da7bb8429; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 48, x18)

inst_258:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x105d75e8ddd6c and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x58fa44664b60f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6f07da7bb8429 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe105d75e8ddd6c; op2val:0xbff58fa44664b60f; op3val:0x3fe6f07da7bb8429; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 64, x18)

inst_259:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x105d75e8ddd6c and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x58fa44664b60f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6f07da7bb8429 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe105d75e8ddd6c; op2val:0xbff58fa44664b60f; op3val:0x3fe6f07da7bb8429; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 80, x18)

inst_260:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x105d75e8ddd6c and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x58fa44664b60f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6f07da7bb8429 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe105d75e8ddd6c; op2val:0xbff58fa44664b60f; op3val:0x3fe6f07da7bb8429; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 96, x18)

inst_261:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x45809dd472479 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x151b1424ab809 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x605698f4318ab and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe45809dd472479; op2val:0xbff151b1424ab809; op3val:0x3fe605698f4318ab; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 112, x18)

inst_262:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x45809dd472479 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x151b1424ab809 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x605698f4318ab and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe45809dd472479; op2val:0xbff151b1424ab809; op3val:0x3fe605698f4318ab; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 128, x18)

inst_263:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x45809dd472479 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x151b1424ab809 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x605698f4318ab and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe45809dd472479; op2val:0xbff151b1424ab809; op3val:0x3fe605698f4318ab; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 144, x18)

inst_264:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x45809dd472479 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x151b1424ab809 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x605698f4318ab and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe45809dd472479; op2val:0xbff151b1424ab809; op3val:0x3fe605698f4318ab; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 160, x18)

inst_265:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x45809dd472479 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x151b1424ab809 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x605698f4318ab and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe45809dd472479; op2val:0xbff151b1424ab809; op3val:0x3fe605698f4318ab; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 176, x18)

inst_266:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x32a6da45a7263 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0x692c2b4d8bf28 and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0xb0a23258a72a0 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe32a6da45a7263; op2val:0xbfa692c2b4d8bf28; op3val:0x3f9b0a23258a72a0; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 192, x18)

inst_267:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x32a6da45a7263 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0x692c2b4d8bf28 and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0xb0a23258a72a0 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe32a6da45a7263; op2val:0xbfa692c2b4d8bf28; op3val:0x3f9b0a23258a72a0; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 208, x18)

inst_268:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x32a6da45a7263 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0x692c2b4d8bf28 and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0xb0a23258a72a0 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe32a6da45a7263; op2val:0xbfa692c2b4d8bf28; op3val:0x3f9b0a23258a72a0; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 224, x18)

inst_269:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x32a6da45a7263 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0x692c2b4d8bf28 and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0xb0a23258a72a0 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe32a6da45a7263; op2val:0xbfa692c2b4d8bf28; op3val:0x3f9b0a23258a72a0; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 240, x18)

inst_270:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x32a6da45a7263 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0x692c2b4d8bf28 and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0xb0a23258a72a0 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe32a6da45a7263; op2val:0xbfa692c2b4d8bf28; op3val:0x3f9b0a23258a72a0; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 256, x18)

inst_271:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x89ff8315fc687 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x32a7d76038e8f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd7f5bbd8798b8 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe89ff8315fc687; op2val:0xbff32a7d76038e8f; op3val:0x3fed7f5bbd8798b8; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 272, x18)

inst_272:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x89ff8315fc687 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x32a7d76038e8f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd7f5bbd8798b8 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe89ff8315fc687; op2val:0xbff32a7d76038e8f; op3val:0x3fed7f5bbd8798b8; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 288, x18)

inst_273:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x89ff8315fc687 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x32a7d76038e8f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd7f5bbd8798b8 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe89ff8315fc687; op2val:0xbff32a7d76038e8f; op3val:0x3fed7f5bbd8798b8; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 304, x18)

inst_274:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x89ff8315fc687 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x32a7d76038e8f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd7f5bbd8798b8 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe89ff8315fc687; op2val:0xbff32a7d76038e8f; op3val:0x3fed7f5bbd8798b8; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 320, x18)

inst_275:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x89ff8315fc687 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x32a7d76038e8f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xd7f5bbd8798b8 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe89ff8315fc687; op2val:0xbff32a7d76038e8f; op3val:0x3fed7f5bbd8798b8; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 336, x18)

inst_276:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x99139652409a5 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x386bed000191d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf33c551b37c95 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe99139652409a5; op2val:0xbff386bed000191d; op3val:0x3fef33c551b37c95; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 352, x18)

inst_277:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x99139652409a5 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x386bed000191d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf33c551b37c95 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe99139652409a5; op2val:0xbff386bed000191d; op3val:0x3fef33c551b37c95; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 368, x18)

inst_278:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x99139652409a5 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x386bed000191d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf33c551b37c95 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe99139652409a5; op2val:0xbff386bed000191d; op3val:0x3fef33c551b37c95; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 384, x18)

inst_279:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x99139652409a5 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x386bed000191d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf33c551b37c95 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe99139652409a5; op2val:0xbff386bed000191d; op3val:0x3fef33c551b37c95; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 400, x18)

inst_280:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x99139652409a5 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x386bed000191d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf33c551b37c95 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe99139652409a5; op2val:0xbff386bed000191d; op3val:0x3fef33c551b37c95; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 416, x18)

inst_281:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1532e780d1c6a and fs2 == 1 and fe2 == 0x400 and fm2 == 0x8ba9b406e5e2d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xac6d4cbdda9c1 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd1532e780d1c6a; op2val:0xc008ba9b406e5e2d; op3val:0x3feac6d4cbdda9c1; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 432, x18)

inst_282:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1532e780d1c6a and fs2 == 1 and fe2 == 0x400 and fm2 == 0x8ba9b406e5e2d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xac6d4cbdda9c1 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd1532e780d1c6a; op2val:0xc008ba9b406e5e2d; op3val:0x3feac6d4cbdda9c1; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 448, x18)

inst_283:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1532e780d1c6a and fs2 == 1 and fe2 == 0x400 and fm2 == 0x8ba9b406e5e2d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xac6d4cbdda9c1 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd1532e780d1c6a; op2val:0xc008ba9b406e5e2d; op3val:0x3feac6d4cbdda9c1; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 464, x18)

inst_284:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1532e780d1c6a and fs2 == 1 and fe2 == 0x400 and fm2 == 0x8ba9b406e5e2d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xac6d4cbdda9c1 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd1532e780d1c6a; op2val:0xc008ba9b406e5e2d; op3val:0x3feac6d4cbdda9c1; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 480, x18)

inst_285:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x1532e780d1c6a and fs2 == 1 and fe2 == 0x400 and fm2 == 0x8ba9b406e5e2d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xac6d4cbdda9c1 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd1532e780d1c6a; op2val:0xc008ba9b406e5e2d; op3val:0x3feac6d4cbdda9c1; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 496, x18)

inst_286:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6af4da62f3a85 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xd63b7d1cedcb2 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x4d58f061495a0 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe6af4da62f3a85; op2val:0xbfdd63b7d1cedcb2; op3val:0x3fd4d58f061495a0; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 512, x18)

inst_287:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6af4da62f3a85 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xd63b7d1cedcb2 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x4d58f061495a0 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe6af4da62f3a85; op2val:0xbfdd63b7d1cedcb2; op3val:0x3fd4d58f061495a0; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 528, x18)

inst_288:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6af4da62f3a85 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xd63b7d1cedcb2 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x4d58f061495a0 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe6af4da62f3a85; op2val:0xbfdd63b7d1cedcb2; op3val:0x3fd4d58f061495a0; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 544, x18)

inst_289:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6af4da62f3a85 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xd63b7d1cedcb2 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x4d58f061495a0 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe6af4da62f3a85; op2val:0xbfdd63b7d1cedcb2; op3val:0x3fd4d58f061495a0; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 560, x18)

inst_290:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6af4da62f3a85 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xd63b7d1cedcb2 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x4d58f061495a0 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe6af4da62f3a85; op2val:0xbfdd63b7d1cedcb2; op3val:0x3fd4d58f061495a0; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 576, x18)

inst_291:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc3a0de8dbcd32 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x80c1c503492a7 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x536392d67da8c and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec3a0de8dbcd32; op2val:0xbfd80c1c503492a7; op3val:0x3fd536392d67da8c; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 592, x18)

inst_292:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc3a0de8dbcd32 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x80c1c503492a7 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x536392d67da8c and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec3a0de8dbcd32; op2val:0xbfd80c1c503492a7; op3val:0x3fd536392d67da8c; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 608, x18)

inst_293:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc3a0de8dbcd32 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x80c1c503492a7 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x536392d67da8c and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec3a0de8dbcd32; op2val:0xbfd80c1c503492a7; op3val:0x3fd536392d67da8c; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 624, x18)

inst_294:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc3a0de8dbcd32 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x80c1c503492a7 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x536392d67da8c and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec3a0de8dbcd32; op2val:0xbfd80c1c503492a7; op3val:0x3fd536392d67da8c; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 640, x18)

inst_295:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc3a0de8dbcd32 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x80c1c503492a7 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x536392d67da8c and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec3a0de8dbcd32; op2val:0xbfd80c1c503492a7; op3val:0x3fd536392d67da8c; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 656, x18)

inst_296:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0e792d49ad4b8 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xa7508bc662511 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xbf3f5360498e0 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0e792d49ad4b8; op2val:0xbfba7508bc662511; op3val:0x3fabf3f5360498e0; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 672, x18)

inst_297:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0e792d49ad4b8 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xa7508bc662511 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xbf3f5360498e0 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0e792d49ad4b8; op2val:0xbfba7508bc662511; op3val:0x3fabf3f5360498e0; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 688, x18)

inst_298:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0e792d49ad4b8 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xa7508bc662511 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xbf3f5360498e0 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0e792d49ad4b8; op2val:0xbfba7508bc662511; op3val:0x3fabf3f5360498e0; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 704, x18)

inst_299:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0e792d49ad4b8 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xa7508bc662511 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xbf3f5360498e0 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0e792d49ad4b8; op2val:0xbfba7508bc662511; op3val:0x3fabf3f5360498e0; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 720, x18)

inst_300:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0e792d49ad4b8 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xa7508bc662511 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xbf3f5360498e0 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0e792d49ad4b8; op2val:0xbfba7508bc662511; op3val:0x3fabf3f5360498e0; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 736, x18)

inst_301:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3fc7d5fd378ae and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0b6525d2a88b1 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x4e03c5458c38c and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd3fc7d5fd378ae; op2val:0xbff0b6525d2a88b1; op3val:0x3fd4e03c5458c38c; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 752, x18)

inst_302:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3fc7d5fd378ae and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0b6525d2a88b1 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x4e03c5458c38c and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd3fc7d5fd378ae; op2val:0xbff0b6525d2a88b1; op3val:0x3fd4e03c5458c38c; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 768, x18)

inst_303:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3fc7d5fd378ae and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0b6525d2a88b1 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x4e03c5458c38c and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd3fc7d5fd378ae; op2val:0xbff0b6525d2a88b1; op3val:0x3fd4e03c5458c38c; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 784, x18)

inst_304:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3fc7d5fd378ae and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0b6525d2a88b1 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x4e03c5458c38c and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd3fc7d5fd378ae; op2val:0xbff0b6525d2a88b1; op3val:0x3fd4e03c5458c38c; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 800, x18)

inst_305:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3fc7d5fd378ae and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0b6525d2a88b1 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x4e03c5458c38c and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd3fc7d5fd378ae; op2val:0xbff0b6525d2a88b1; op3val:0x3fd4e03c5458c38c; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 816, x18)

inst_306:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x43169f6bc597d and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x92d0ba3c9b9f0 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xfc60f3c3b1620 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe43169f6bc597d; op2val:0xbfb92d0ba3c9b9f0; op3val:0x3fafc60f3c3b1620; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 832, x18)

inst_307:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x43169f6bc597d and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x92d0ba3c9b9f0 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xfc60f3c3b1620 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe43169f6bc597d; op2val:0xbfb92d0ba3c9b9f0; op3val:0x3fafc60f3c3b1620; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 848, x18)

inst_308:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x43169f6bc597d and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x92d0ba3c9b9f0 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xfc60f3c3b1620 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe43169f6bc597d; op2val:0xbfb92d0ba3c9b9f0; op3val:0x3fafc60f3c3b1620; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 864, x18)

inst_309:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x43169f6bc597d and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x92d0ba3c9b9f0 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xfc60f3c3b1620 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe43169f6bc597d; op2val:0xbfb92d0ba3c9b9f0; op3val:0x3fafc60f3c3b1620; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 880, x18)

inst_310:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x43169f6bc597d and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x92d0ba3c9b9f0 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xfc60f3c3b1620 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe43169f6bc597d; op2val:0xbfb92d0ba3c9b9f0; op3val:0x3fafc60f3c3b1620; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 896, x18)

inst_311:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xef912d69f703a and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x3f6b2d50cc6c5 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x352ab07efa158 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feef912d69f703a; op2val:0xbfb3f6b2d50cc6c5; op3val:0x3fb352ab07efa158; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 912, x18)

inst_312:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xef912d69f703a and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x3f6b2d50cc6c5 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x352ab07efa158 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feef912d69f703a; op2val:0xbfb3f6b2d50cc6c5; op3val:0x3fb352ab07efa158; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 928, x18)

inst_313:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xef912d69f703a and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x3f6b2d50cc6c5 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x352ab07efa158 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feef912d69f703a; op2val:0xbfb3f6b2d50cc6c5; op3val:0x3fb352ab07efa158; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 944, x18)

inst_314:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xef912d69f703a and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x3f6b2d50cc6c5 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x352ab07efa158 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feef912d69f703a; op2val:0xbfb3f6b2d50cc6c5; op3val:0x3fb352ab07efa158; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 960, x18)

inst_315:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xef912d69f703a and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x3f6b2d50cc6c5 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x352ab07efa158 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feef912d69f703a; op2val:0xbfb3f6b2d50cc6c5; op3val:0x3fb352ab07efa158; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 976, x18)

inst_316:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8798163de0d20 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x5abd55c68cee5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x09329646a2112 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8798163de0d20; op2val:0xbfe5abd55c68cee5; op3val:0x3fe09329646a2112; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 992, x18)

inst_317:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8798163de0d20 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x5abd55c68cee5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x09329646a2112 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8798163de0d20; op2val:0xbfe5abd55c68cee5; op3val:0x3fe09329646a2112; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 1008, x18)

inst_318:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8798163de0d20 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x5abd55c68cee5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x09329646a2112 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8798163de0d20; op2val:0xbfe5abd55c68cee5; op3val:0x3fe09329646a2112; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 1024, x18)

inst_319:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8798163de0d20 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x5abd55c68cee5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x09329646a2112 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8798163de0d20; op2val:0xbfe5abd55c68cee5; op3val:0x3fe09329646a2112; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 1040, x18)

inst_320:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8798163de0d20 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x5abd55c68cee5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x09329646a2112 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8798163de0d20; op2val:0xbfe5abd55c68cee5; op3val:0x3fe09329646a2112; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1056, x18)

inst_321:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xad4af5cff9f91 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xb35ae39284d82 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6d0764d4fe2e6 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fead4af5cff9f91; op2val:0xbfeb35ae39284d82; op3val:0x3fe6d0764d4fe2e6; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 1072, x18)

inst_322:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xad4af5cff9f91 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xb35ae39284d82 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6d0764d4fe2e6 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fead4af5cff9f91; op2val:0xbfeb35ae39284d82; op3val:0x3fe6d0764d4fe2e6; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 1088, x18)

inst_323:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xad4af5cff9f91 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xb35ae39284d82 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6d0764d4fe2e6 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fead4af5cff9f91; op2val:0xbfeb35ae39284d82; op3val:0x3fe6d0764d4fe2e6; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 1104, x18)

inst_324:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xad4af5cff9f91 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xb35ae39284d82 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6d0764d4fe2e6 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fead4af5cff9f91; op2val:0xbfeb35ae39284d82; op3val:0x3fe6d0764d4fe2e6; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 1120, x18)

inst_325:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xad4af5cff9f91 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xb35ae39284d82 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6d0764d4fe2e6 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fead4af5cff9f91; op2val:0xbfeb35ae39284d82; op3val:0x3fe6d0764d4fe2e6; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1136, x18)

inst_326:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7deaeab8f1e14 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xeff67c003213d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x71f47a4b9ee90 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7deaeab8f1e14; op2val:0xbfeeff67c003213d; op3val:0x3fe71f47a4b9ee90; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 1152, x18)

inst_327:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7deaeab8f1e14 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xeff67c003213d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x71f47a4b9ee90 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7deaeab8f1e14; op2val:0xbfeeff67c003213d; op3val:0x3fe71f47a4b9ee90; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 1168, x18)

inst_328:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7deaeab8f1e14 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xeff67c003213d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x71f47a4b9ee90 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7deaeab8f1e14; op2val:0xbfeeff67c003213d; op3val:0x3fe71f47a4b9ee90; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 1184, x18)

inst_329:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7deaeab8f1e14 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xeff67c003213d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x71f47a4b9ee90 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7deaeab8f1e14; op2val:0xbfeeff67c003213d; op3val:0x3fe71f47a4b9ee90; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 1200, x18)

inst_330:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7deaeab8f1e14 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xeff67c003213d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x71f47a4b9ee90 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7deaeab8f1e14; op2val:0xbfeeff67c003213d; op3val:0x3fe71f47a4b9ee90; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1216, x18)

inst_331:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xea1da30f88b70 and fs2 == 1 and fe2 == 0x401 and fm2 == 0xc58063f45f965 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb21e1fdcaaffb and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbea1da30f88b70; op2val:0xc01c58063f45f965; op3val:0x3feb21e1fdcaaffb; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 1232, x18)

inst_332:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xea1da30f88b70 and fs2 == 1 and fe2 == 0x401 and fm2 == 0xc58063f45f965 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb21e1fdcaaffb and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbea1da30f88b70; op2val:0xc01c58063f45f965; op3val:0x3feb21e1fdcaaffb; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 1248, x18)

inst_333:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xea1da30f88b70 and fs2 == 1 and fe2 == 0x401 and fm2 == 0xc58063f45f965 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb21e1fdcaaffb and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbea1da30f88b70; op2val:0xc01c58063f45f965; op3val:0x3feb21e1fdcaaffb; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 1264, x18)

inst_334:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xea1da30f88b70 and fs2 == 1 and fe2 == 0x401 and fm2 == 0xc58063f45f965 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb21e1fdcaaffb and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbea1da30f88b70; op2val:0xc01c58063f45f965; op3val:0x3feb21e1fdcaaffb; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 1280, x18)

inst_335:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xea1da30f88b70 and fs2 == 1 and fe2 == 0x401 and fm2 == 0xc58063f45f965 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb21e1fdcaaffb and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbea1da30f88b70; op2val:0xc01c58063f45f965; op3val:0x3feb21e1fdcaaffb; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1296, x18)

inst_336:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x402ff5c861340 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xf6f994acbeb42 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x3a8b1a4863ac3 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe402ff5c861340; op2val:0xbfef6f994acbeb42; op3val:0x3fe3a8b1a4863ac3; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 1312, x18)

inst_337:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x402ff5c861340 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xf6f994acbeb42 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x3a8b1a4863ac3 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe402ff5c861340; op2val:0xbfef6f994acbeb42; op3val:0x3fe3a8b1a4863ac3; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 1328, x18)

inst_338:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x402ff5c861340 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xf6f994acbeb42 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x3a8b1a4863ac3 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe402ff5c861340; op2val:0xbfef6f994acbeb42; op3val:0x3fe3a8b1a4863ac3; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 1344, x18)

inst_339:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x402ff5c861340 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xf6f994acbeb42 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x3a8b1a4863ac3 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe402ff5c861340; op2val:0xbfef6f994acbeb42; op3val:0x3fe3a8b1a4863ac3; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 1360, x18)
addi x16,x16,2040

inst_340:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x402ff5c861340 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xf6f994acbeb42 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x3a8b1a4863ac3 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe402ff5c861340; op2val:0xbfef6f994acbeb42; op3val:0x3fe3a8b1a4863ac3; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 1376, x18)

inst_341:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb0ceaa962f523 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xfd5ac1ca9572d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xae922cbb719da and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb0ceaa962f523; op2val:0xbfefd5ac1ca9572d; op3val:0x3feae922cbb719da; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 1392, x18)

inst_342:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb0ceaa962f523 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xfd5ac1ca9572d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xae922cbb719da and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb0ceaa962f523; op2val:0xbfefd5ac1ca9572d; op3val:0x3feae922cbb719da; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 1408, x18)

inst_343:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb0ceaa962f523 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xfd5ac1ca9572d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xae922cbb719da and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb0ceaa962f523; op2val:0xbfefd5ac1ca9572d; op3val:0x3feae922cbb719da; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 1424, x18)

inst_344:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb0ceaa962f523 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xfd5ac1ca9572d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xae922cbb719da and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb0ceaa962f523; op2val:0xbfefd5ac1ca9572d; op3val:0x3feae922cbb719da; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 1440, x18)

inst_345:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb0ceaa962f523 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xfd5ac1ca9572d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xae922cbb719da and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb0ceaa962f523; op2val:0xbfefd5ac1ca9572d; op3val:0x3feae922cbb719da; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 1456, x18)

inst_346:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x11a059e270438 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xaf3ca16d156fd and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xccedc573bccb5 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe11a059e270438; op2val:0xbffaf3ca16d156fd; op3val:0x3feccedc573bccb5; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 1472, x18)

inst_347:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x11a059e270438 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xaf3ca16d156fd and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xccedc573bccb5 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe11a059e270438; op2val:0xbffaf3ca16d156fd; op3val:0x3feccedc573bccb5; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 1488, x18)

inst_348:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x11a059e270438 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xaf3ca16d156fd and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xccedc573bccb5 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe11a059e270438; op2val:0xbffaf3ca16d156fd; op3val:0x3feccedc573bccb5; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 1504, x18)

inst_349:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x11a059e270438 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xaf3ca16d156fd and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xccedc573bccb5 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe11a059e270438; op2val:0xbffaf3ca16d156fd; op3val:0x3feccedc573bccb5; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 1520, x18)

inst_350:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x11a059e270438 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xaf3ca16d156fd and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xccedc573bccb5 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe11a059e270438; op2val:0xbffaf3ca16d156fd; op3val:0x3feccedc573bccb5; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 1536, x18)

inst_351:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x85aade0a05486 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x805f473275832 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2488a9eb4fbbb and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd85aade0a05486; op2val:0xbff805f473275832; op3val:0x3fe2488a9eb4fbbb; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 1552, x18)

inst_352:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x85aade0a05486 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x805f473275832 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2488a9eb4fbbb and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd85aade0a05486; op2val:0xbff805f473275832; op3val:0x3fe2488a9eb4fbbb; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 1568, x18)

inst_353:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x85aade0a05486 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x805f473275832 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2488a9eb4fbbb and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd85aade0a05486; op2val:0xbff805f473275832; op3val:0x3fe2488a9eb4fbbb; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 1584, x18)

inst_354:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x85aade0a05486 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x805f473275832 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2488a9eb4fbbb and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd85aade0a05486; op2val:0xbff805f473275832; op3val:0x3fe2488a9eb4fbbb; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 1600, x18)

inst_355:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x85aade0a05486 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x805f473275832 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2488a9eb4fbbb and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd85aade0a05486; op2val:0xbff805f473275832; op3val:0x3fe2488a9eb4fbbb; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 1616, x18)

inst_356:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0f43b4ecc3d85 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xaa1198790e708 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xc37950217b590 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0f43b4ecc3d85; op2val:0xbfcaa1198790e708; op3val:0x3fbc37950217b590; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 1632, x18)

inst_357:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0f43b4ecc3d85 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xaa1198790e708 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xc37950217b590 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0f43b4ecc3d85; op2val:0xbfcaa1198790e708; op3val:0x3fbc37950217b590; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 1648, x18)

inst_358:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0f43b4ecc3d85 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xaa1198790e708 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xc37950217b590 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0f43b4ecc3d85; op2val:0xbfcaa1198790e708; op3val:0x3fbc37950217b590; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 1664, x18)

inst_359:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0f43b4ecc3d85 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xaa1198790e708 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xc37950217b590 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0f43b4ecc3d85; op2val:0xbfcaa1198790e708; op3val:0x3fbc37950217b590; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 1680, x18)

inst_360:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0f43b4ecc3d85 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xaa1198790e708 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xc37950217b590 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0f43b4ecc3d85; op2val:0xbfcaa1198790e708; op3val:0x3fbc37950217b590; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1696, x18)

inst_361:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xeaceffa6c78d0 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x0aef8fb2f1bae and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xffc66064ac3be and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fceaceffa6c78d0; op2val:0xc010aef8fb2f1bae; op3val:0x3feffc66064ac3be; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 1712, x18)

inst_362:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xeaceffa6c78d0 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x0aef8fb2f1bae and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xffc66064ac3be and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fceaceffa6c78d0; op2val:0xc010aef8fb2f1bae; op3val:0x3feffc66064ac3be; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 1728, x18)

inst_363:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xeaceffa6c78d0 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x0aef8fb2f1bae and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xffc66064ac3be and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fceaceffa6c78d0; op2val:0xc010aef8fb2f1bae; op3val:0x3feffc66064ac3be; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 1744, x18)

inst_364:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xeaceffa6c78d0 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x0aef8fb2f1bae and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xffc66064ac3be and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fceaceffa6c78d0; op2val:0xc010aef8fb2f1bae; op3val:0x3feffc66064ac3be; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 1760, x18)

inst_365:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xeaceffa6c78d0 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x0aef8fb2f1bae and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xffc66064ac3be and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fceaceffa6c78d0; op2val:0xc010aef8fb2f1bae; op3val:0x3feffc66064ac3be; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1776, x18)

inst_366:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xc599fa20321b0 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x2bf1897794fc4 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x09bb6855ae1f9 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbc599fa20321b0; op2val:0xc012bf1897794fc4; op3val:0x3fe09bb6855ae1f9; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 1792, x18)

inst_367:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xc599fa20321b0 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x2bf1897794fc4 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x09bb6855ae1f9 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbc599fa20321b0; op2val:0xc012bf1897794fc4; op3val:0x3fe09bb6855ae1f9; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 1808, x18)

inst_368:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xc599fa20321b0 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x2bf1897794fc4 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x09bb6855ae1f9 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbc599fa20321b0; op2val:0xc012bf1897794fc4; op3val:0x3fe09bb6855ae1f9; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 1824, x18)

inst_369:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xc599fa20321b0 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x2bf1897794fc4 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x09bb6855ae1f9 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbc599fa20321b0; op2val:0xc012bf1897794fc4; op3val:0x3fe09bb6855ae1f9; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 1840, x18)

inst_370:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xc599fa20321b0 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x2bf1897794fc4 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x09bb6855ae1f9 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbc599fa20321b0; op2val:0xc012bf1897794fc4; op3val:0x3fe09bb6855ae1f9; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1856, x18)

inst_371:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x985e0ab37b510 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x344d84e10bcfb and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xebcccd20a35cd and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe985e0ab37b510; op2val:0xbff344d84e10bcfb; op3val:0x3feebcccd20a35cd; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 1872, x18)

inst_372:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x985e0ab37b510 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x344d84e10bcfb and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xebcccd20a35cd and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe985e0ab37b510; op2val:0xbff344d84e10bcfb; op3val:0x3feebcccd20a35cd; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 1888, x18)

inst_373:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x985e0ab37b510 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x344d84e10bcfb and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xebcccd20a35cd and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe985e0ab37b510; op2val:0xbff344d84e10bcfb; op3val:0x3feebcccd20a35cd; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 1904, x18)

inst_374:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x985e0ab37b510 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x344d84e10bcfb and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xebcccd20a35cd and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe985e0ab37b510; op2val:0xbff344d84e10bcfb; op3val:0x3feebcccd20a35cd; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 1920, x18)

inst_375:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x985e0ab37b510 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x344d84e10bcfb and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xebcccd20a35cd and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe985e0ab37b510; op2val:0xbff344d84e10bcfb; op3val:0x3feebcccd20a35cd; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1936, x18)

inst_376:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xce562dfda01e1 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1218bd738c2cd and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xef04eb7412fa2 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fece562dfda01e1; op2val:0xbff1218bd738c2cd; op3val:0x3feef04eb7412fa2; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 1952, x18)

inst_377:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xce562dfda01e1 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1218bd738c2cd and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xef04eb7412fa2 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fece562dfda01e1; op2val:0xbff1218bd738c2cd; op3val:0x3feef04eb7412fa2; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 1968, x18)

inst_378:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xce562dfda01e1 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1218bd738c2cd and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xef04eb7412fa2 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fece562dfda01e1; op2val:0xbff1218bd738c2cd; op3val:0x3feef04eb7412fa2; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 1984, x18)

inst_379:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xce562dfda01e1 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1218bd738c2cd and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xef04eb7412fa2 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fece562dfda01e1; op2val:0xbff1218bd738c2cd; op3val:0x3feef04eb7412fa2; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 2000, x18)

inst_380:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xce562dfda01e1 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1218bd738c2cd and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xef04eb7412fa2 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fece562dfda01e1; op2val:0xbff1218bd738c2cd; op3val:0x3feef04eb7412fa2; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_4)

inst_381:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x0a137d68e4346 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x29c745997aa16 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x357fb9fbf3326 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd0a137d68e4346; op2val:0xc0029c745997aa16; op3val:0x3fe357fb9fbf3326; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 0, x18)

inst_382:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x0a137d68e4346 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x29c745997aa16 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x357fb9fbf3326 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd0a137d68e4346; op2val:0xc0029c745997aa16; op3val:0x3fe357fb9fbf3326; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 16, x18)

inst_383:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x0a137d68e4346 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x29c745997aa16 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x357fb9fbf3326 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd0a137d68e4346; op2val:0xc0029c745997aa16; op3val:0x3fe357fb9fbf3326; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 32, x18)

inst_384:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x0a137d68e4346 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x29c745997aa16 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x357fb9fbf3326 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd0a137d68e4346; op2val:0xc0029c745997aa16; op3val:0x3fe357fb9fbf3326; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 48, x18)

inst_385:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x0a137d68e4346 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x29c745997aa16 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x357fb9fbf3326 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd0a137d68e4346; op2val:0xc0029c745997aa16; op3val:0x3fe357fb9fbf3326; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 64, x18)

inst_386:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xa1267000e30b4 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0c2be06a3e004 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xb4fbbc647ec8c and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fda1267000e30b4; op2val:0xbff0c2be06a3e004; op3val:0x3fdb4fbbc647ec8c; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 80, x18)

inst_387:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xa1267000e30b4 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0c2be06a3e004 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xb4fbbc647ec8c and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fda1267000e30b4; op2val:0xbff0c2be06a3e004; op3val:0x3fdb4fbbc647ec8c; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 96, x18)

inst_388:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xa1267000e30b4 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0c2be06a3e004 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xb4fbbc647ec8c and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fda1267000e30b4; op2val:0xbff0c2be06a3e004; op3val:0x3fdb4fbbc647ec8c; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 112, x18)

inst_389:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xa1267000e30b4 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0c2be06a3e004 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xb4fbbc647ec8c and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fda1267000e30b4; op2val:0xbff0c2be06a3e004; op3val:0x3fdb4fbbc647ec8c; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 128, x18)

inst_390:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xa1267000e30b4 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0c2be06a3e004 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xb4fbbc647ec8c and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fda1267000e30b4; op2val:0xbff0c2be06a3e004; op3val:0x3fdb4fbbc647ec8c; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 144, x18)

inst_391:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x2ff8d9a345a70 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xa01cf8f384df5 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xee16c87b58dd4 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc2ff8d9a345a70; op2val:0xc00a01cf8f384df5; op3val:0x3fdee16c87b58dd4; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 160, x18)

inst_392:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x2ff8d9a345a70 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xa01cf8f384df5 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xee16c87b58dd4 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc2ff8d9a345a70; op2val:0xc00a01cf8f384df5; op3val:0x3fdee16c87b58dd4; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 176, x18)

inst_393:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x2ff8d9a345a70 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xa01cf8f384df5 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xee16c87b58dd4 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc2ff8d9a345a70; op2val:0xc00a01cf8f384df5; op3val:0x3fdee16c87b58dd4; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 192, x18)

inst_394:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x2ff8d9a345a70 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xa01cf8f384df5 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xee16c87b58dd4 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc2ff8d9a345a70; op2val:0xc00a01cf8f384df5; op3val:0x3fdee16c87b58dd4; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 208, x18)

inst_395:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x2ff8d9a345a70 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xa01cf8f384df5 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xee16c87b58dd4 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc2ff8d9a345a70; op2val:0xc00a01cf8f384df5; op3val:0x3fdee16c87b58dd4; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 224, x18)

inst_396:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x9060a25e60734 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x72fb015795e64 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x221a1dc27aec8 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc9060a25e60734; op2val:0xc0072fb015795e64; op3val:0x3fe221a1dc27aec8; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 240, x18)

inst_397:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x9060a25e60734 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x72fb015795e64 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x221a1dc27aec8 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc9060a25e60734; op2val:0xc0072fb015795e64; op3val:0x3fe221a1dc27aec8; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 256, x18)

inst_398:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x9060a25e60734 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x72fb015795e64 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x221a1dc27aec8 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc9060a25e60734; op2val:0xc0072fb015795e64; op3val:0x3fe221a1dc27aec8; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 272, x18)

inst_399:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x9060a25e60734 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x72fb015795e64 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x221a1dc27aec8 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc9060a25e60734; op2val:0xc0072fb015795e64; op3val:0x3fe221a1dc27aec8; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 288, x18)

inst_400:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x9060a25e60734 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x72fb015795e64 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x221a1dc27aec8 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc9060a25e60734; op2val:0xc0072fb015795e64; op3val:0x3fe221a1dc27aec8; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 304, x18)

inst_401:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x59e7f8a445a4c and fs2 == 1 and fe2 == 0x400 and fm2 == 0x0ad886e596e9c and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x688f9a5a1f892 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc59e7f8a445a4c; op2val:0xc000ad886e596e9c; op3val:0x3fd688f9a5a1f892; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 320, x18)

inst_402:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x59e7f8a445a4c and fs2 == 1 and fe2 == 0x400 and fm2 == 0x0ad886e596e9c and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x688f9a5a1f892 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc59e7f8a445a4c; op2val:0xc000ad886e596e9c; op3val:0x3fd688f9a5a1f892; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 336, x18)

inst_403:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x59e7f8a445a4c and fs2 == 1 and fe2 == 0x400 and fm2 == 0x0ad886e596e9c and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x688f9a5a1f892 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc59e7f8a445a4c; op2val:0xc000ad886e596e9c; op3val:0x3fd688f9a5a1f892; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 352, x18)

inst_404:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x59e7f8a445a4c and fs2 == 1 and fe2 == 0x400 and fm2 == 0x0ad886e596e9c and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x688f9a5a1f892 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc59e7f8a445a4c; op2val:0xc000ad886e596e9c; op3val:0x3fd688f9a5a1f892; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 368, x18)

inst_405:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x59e7f8a445a4c and fs2 == 1 and fe2 == 0x400 and fm2 == 0x0ad886e596e9c and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x688f9a5a1f892 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc59e7f8a445a4c; op2val:0xc000ad886e596e9c; op3val:0x3fd688f9a5a1f892; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 384, x18)

inst_406:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3a7f3ea7cc929 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x67e8cf7ab880c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xba267311beea1 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3a7f3ea7cc929; op2val:0xbff67e8cf7ab880c; op3val:0x3feba267311beea1; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 400, x18)

inst_407:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3a7f3ea7cc929 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x67e8cf7ab880c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xba267311beea1 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3a7f3ea7cc929; op2val:0xbff67e8cf7ab880c; op3val:0x3feba267311beea1; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 416, x18)

inst_408:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3a7f3ea7cc929 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x67e8cf7ab880c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xba267311beea1 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3a7f3ea7cc929; op2val:0xbff67e8cf7ab880c; op3val:0x3feba267311beea1; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 432, x18)

inst_409:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3a7f3ea7cc929 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x67e8cf7ab880c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xba267311beea1 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3a7f3ea7cc929; op2val:0xbff67e8cf7ab880c; op3val:0x3feba267311beea1; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 448, x18)

inst_410:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3a7f3ea7cc929 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x67e8cf7ab880c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xba267311beea1 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3a7f3ea7cc929; op2val:0xbff67e8cf7ab880c; op3val:0x3feba267311beea1; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 464, x18)

inst_411:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8b833025b7e80 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xafb298f6c20e9 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4d7ae5cd0da80 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd8b833025b7e80; op2val:0xbffafb298f6c20e9; op3val:0x3fe4d7ae5cd0da80; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 480, x18)

inst_412:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8b833025b7e80 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xafb298f6c20e9 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4d7ae5cd0da80 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd8b833025b7e80; op2val:0xbffafb298f6c20e9; op3val:0x3fe4d7ae5cd0da80; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 496, x18)

inst_413:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8b833025b7e80 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xafb298f6c20e9 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4d7ae5cd0da80 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd8b833025b7e80; op2val:0xbffafb298f6c20e9; op3val:0x3fe4d7ae5cd0da80; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 512, x18)

inst_414:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8b833025b7e80 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xafb298f6c20e9 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4d7ae5cd0da80 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd8b833025b7e80; op2val:0xbffafb298f6c20e9; op3val:0x3fe4d7ae5cd0da80; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 528, x18)

inst_415:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8b833025b7e80 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xafb298f6c20e9 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4d7ae5cd0da80 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd8b833025b7e80; op2val:0xbffafb298f6c20e9; op3val:0x3fe4d7ae5cd0da80; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 544, x18)

inst_416:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x87ab9c2d73e1e and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xbe3e792afc6bf and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x555e478472086 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe87ab9c2d73e1e; op2val:0xbfebe3e792afc6bf; op3val:0x3fe555e478472086; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 560, x18)

inst_417:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x87ab9c2d73e1e and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xbe3e792afc6bf and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x555e478472086 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe87ab9c2d73e1e; op2val:0xbfebe3e792afc6bf; op3val:0x3fe555e478472086; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 576, x18)

inst_418:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x87ab9c2d73e1e and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xbe3e792afc6bf and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x555e478472086 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe87ab9c2d73e1e; op2val:0xbfebe3e792afc6bf; op3val:0x3fe555e478472086; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 592, x18)

inst_419:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x87ab9c2d73e1e and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xbe3e792afc6bf and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x555e478472086 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe87ab9c2d73e1e; op2val:0xbfebe3e792afc6bf; op3val:0x3fe555e478472086; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 608, x18)

inst_420:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x87ab9c2d73e1e and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xbe3e792afc6bf and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x555e478472086 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe87ab9c2d73e1e; op2val:0xbfebe3e792afc6bf; op3val:0x3fe555e478472086; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 624, x18)

inst_421:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8035174fe3838 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xb88fa57b93bfe and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4a996b0a81f8a and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd8035174fe3838; op2val:0xbffb88fa57b93bfe; op3val:0x3fe4a996b0a81f8a; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 640, x18)

inst_422:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8035174fe3838 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xb88fa57b93bfe and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4a996b0a81f8a and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd8035174fe3838; op2val:0xbffb88fa57b93bfe; op3val:0x3fe4a996b0a81f8a; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 656, x18)

inst_423:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8035174fe3838 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xb88fa57b93bfe and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4a996b0a81f8a and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd8035174fe3838; op2val:0xbffb88fa57b93bfe; op3val:0x3fe4a996b0a81f8a; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 672, x18)

inst_424:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8035174fe3838 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xb88fa57b93bfe and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4a996b0a81f8a and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd8035174fe3838; op2val:0xbffb88fa57b93bfe; op3val:0x3fe4a996b0a81f8a; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 688, x18)
addi x16,x16,2040

inst_425:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8035174fe3838 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xb88fa57b93bfe and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4a996b0a81f8a and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd8035174fe3838; op2val:0xbffb88fa57b93bfe; op3val:0x3fe4a996b0a81f8a; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 704, x18)

inst_426:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x6f6b44c9db140 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x32e0af0d738b9 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb870b1531acb9 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc6f6b44c9db140; op2val:0xc0132e0af0d738b9; op3val:0x3feb870b1531acb9; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 720, x18)

inst_427:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x6f6b44c9db140 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x32e0af0d738b9 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb870b1531acb9 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc6f6b44c9db140; op2val:0xc0132e0af0d738b9; op3val:0x3feb870b1531acb9; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 736, x18)

inst_428:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x6f6b44c9db140 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x32e0af0d738b9 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb870b1531acb9 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc6f6b44c9db140; op2val:0xc0132e0af0d738b9; op3val:0x3feb870b1531acb9; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 752, x18)

inst_429:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x6f6b44c9db140 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x32e0af0d738b9 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb870b1531acb9 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc6f6b44c9db140; op2val:0xc0132e0af0d738b9; op3val:0x3feb870b1531acb9; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 768, x18)

inst_430:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x6f6b44c9db140 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x32e0af0d738b9 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb870b1531acb9 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc6f6b44c9db140; op2val:0xc0132e0af0d738b9; op3val:0x3feb870b1531acb9; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 784, x18)

inst_431:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0xbf5320b56f9c0 and fs2 == 1 and fe2 == 0x402 and fm2 == 0x8890623de3f55 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x56f9ca41184ea and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f9bf5320b56f9c0; op2val:0xc028890623de3f55; op3val:0x3fd56f9ca41184ea; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 800, x18)

inst_432:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0xbf5320b56f9c0 and fs2 == 1 and fe2 == 0x402 and fm2 == 0x8890623de3f55 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x56f9ca41184ea and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f9bf5320b56f9c0; op2val:0xc028890623de3f55; op3val:0x3fd56f9ca41184ea; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 816, x18)

inst_433:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0xbf5320b56f9c0 and fs2 == 1 and fe2 == 0x402 and fm2 == 0x8890623de3f55 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x56f9ca41184ea and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f9bf5320b56f9c0; op2val:0xc028890623de3f55; op3val:0x3fd56f9ca41184ea; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 832, x18)

inst_434:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0xbf5320b56f9c0 and fs2 == 1 and fe2 == 0x402 and fm2 == 0x8890623de3f55 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x56f9ca41184ea and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f9bf5320b56f9c0; op2val:0xc028890623de3f55; op3val:0x3fd56f9ca41184ea; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 848, x18)

inst_435:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0xbf5320b56f9c0 and fs2 == 1 and fe2 == 0x402 and fm2 == 0x8890623de3f55 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x56f9ca41184ea and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f9bf5320b56f9c0; op2val:0xc028890623de3f55; op3val:0x3fd56f9ca41184ea; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 864, x18)

inst_436:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8dc76810066e2 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x2342cb110922a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc491743aa3655 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8dc76810066e2; op2val:0xbff2342cb110922a; op3val:0x3fec491743aa3655; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 880, x18)

inst_437:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8dc76810066e2 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x2342cb110922a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc491743aa3655 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8dc76810066e2; op2val:0xbff2342cb110922a; op3val:0x3fec491743aa3655; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 896, x18)

inst_438:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8dc76810066e2 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x2342cb110922a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc491743aa3655 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8dc76810066e2; op2val:0xbff2342cb110922a; op3val:0x3fec491743aa3655; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 912, x18)

inst_439:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8dc76810066e2 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x2342cb110922a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc491743aa3655 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8dc76810066e2; op2val:0xbff2342cb110922a; op3val:0x3fec491743aa3655; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 928, x18)

inst_440:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8dc76810066e2 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x2342cb110922a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc491743aa3655 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8dc76810066e2; op2val:0xbff2342cb110922a; op3val:0x3fec491743aa3655; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 944, x18)

inst_441:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x88e056485c780 and fs2 == 1 and fe2 == 0x401 and fm2 == 0xa98d062065da6 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x468a6e1a50df2 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fa88e056485c780; op2val:0xc01a98d062065da6; op3val:0x3fd468a6e1a50df2; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 960, x18)

inst_442:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x88e056485c780 and fs2 == 1 and fe2 == 0x401 and fm2 == 0xa98d062065da6 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x468a6e1a50df2 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fa88e056485c780; op2val:0xc01a98d062065da6; op3val:0x3fd468a6e1a50df2; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 976, x18)

inst_443:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x88e056485c780 and fs2 == 1 and fe2 == 0x401 and fm2 == 0xa98d062065da6 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x468a6e1a50df2 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fa88e056485c780; op2val:0xc01a98d062065da6; op3val:0x3fd468a6e1a50df2; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 992, x18)

inst_444:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x88e056485c780 and fs2 == 1 and fe2 == 0x401 and fm2 == 0xa98d062065da6 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x468a6e1a50df2 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fa88e056485c780; op2val:0xc01a98d062065da6; op3val:0x3fd468a6e1a50df2; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 1008, x18)

inst_445:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x88e056485c780 and fs2 == 1 and fe2 == 0x401 and fm2 == 0xa98d062065da6 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x468a6e1a50df2 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fa88e056485c780; op2val:0xc01a98d062065da6; op3val:0x3fd468a6e1a50df2; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1024, x18)

inst_446:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe486c849b6622 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xcb71760bd46cb and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb2ca34038b5ab and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fee486c849b6622; op2val:0xbfecb71760bd46cb; op3val:0x3feb2ca34038b5ab; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 1040, x18)

inst_447:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe486c849b6622 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xcb71760bd46cb and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb2ca34038b5ab and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fee486c849b6622; op2val:0xbfecb71760bd46cb; op3val:0x3feb2ca34038b5ab; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 1056, x18)

inst_448:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe486c849b6622 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xcb71760bd46cb and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb2ca34038b5ab and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fee486c849b6622; op2val:0xbfecb71760bd46cb; op3val:0x3feb2ca34038b5ab; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 1072, x18)

inst_449:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe486c849b6622 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xcb71760bd46cb and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb2ca34038b5ab and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fee486c849b6622; op2val:0xbfecb71760bd46cb; op3val:0x3feb2ca34038b5ab; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 1088, x18)

inst_450:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe486c849b6622 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xcb71760bd46cb and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb2ca34038b5ab and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fee486c849b6622; op2val:0xbfecb71760bd46cb; op3val:0x3feb2ca34038b5ab; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1104, x18)

inst_451:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf0ea7d9d4e385 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x222419ef712a9 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x1997dacec4ca4 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef0ea7d9d4e385; op2val:0xbfd222419ef712a9; op3val:0x3fd1997dacec4ca4; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 1120, x18)

inst_452:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf0ea7d9d4e385 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x222419ef712a9 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x1997dacec4ca4 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef0ea7d9d4e385; op2val:0xbfd222419ef712a9; op3val:0x3fd1997dacec4ca4; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 1136, x18)

inst_453:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf0ea7d9d4e385 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x222419ef712a9 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x1997dacec4ca4 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef0ea7d9d4e385; op2val:0xbfd222419ef712a9; op3val:0x3fd1997dacec4ca4; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 1152, x18)

inst_454:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf0ea7d9d4e385 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x222419ef712a9 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x1997dacec4ca4 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef0ea7d9d4e385; op2val:0xbfd222419ef712a9; op3val:0x3fd1997dacec4ca4; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 1168, x18)

inst_455:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf0ea7d9d4e385 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x222419ef712a9 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x1997dacec4ca4 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef0ea7d9d4e385; op2val:0xbfd222419ef712a9; op3val:0x3fd1997dacec4ca4; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1184, x18)

inst_456:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5a7a39f91d82a and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x33fd85d8eeafd and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xa0d7b37823e0c and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe5a7a39f91d82a; op2val:0xbfd33fd85d8eeafd; op3val:0x3fca0d7b37823e0c; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 1200, x18)

inst_457:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5a7a39f91d82a and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x33fd85d8eeafd and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xa0d7b37823e0c and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe5a7a39f91d82a; op2val:0xbfd33fd85d8eeafd; op3val:0x3fca0d7b37823e0c; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 1216, x18)

inst_458:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5a7a39f91d82a and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x33fd85d8eeafd and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xa0d7b37823e0c and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe5a7a39f91d82a; op2val:0xbfd33fd85d8eeafd; op3val:0x3fca0d7b37823e0c; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 1232, x18)

inst_459:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5a7a39f91d82a and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x33fd85d8eeafd and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xa0d7b37823e0c and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe5a7a39f91d82a; op2val:0xbfd33fd85d8eeafd; op3val:0x3fca0d7b37823e0c; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 1248, x18)

inst_460:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5a7a39f91d82a and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x33fd85d8eeafd and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xa0d7b37823e0c and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe5a7a39f91d82a; op2val:0xbfd33fd85d8eeafd; op3val:0x3fca0d7b37823e0c; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1264, x18)

inst_461:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xf81bc313216f8 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x0e2a1dd1ebd60 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0a001b825948b and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbf81bc313216f8; op2val:0xc010e2a1dd1ebd60; op3val:0x3fe0a001b825948b; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 1280, x18)

inst_462:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xf81bc313216f8 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x0e2a1dd1ebd60 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0a001b825948b and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbf81bc313216f8; op2val:0xc010e2a1dd1ebd60; op3val:0x3fe0a001b825948b; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 1296, x18)

inst_463:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xf81bc313216f8 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x0e2a1dd1ebd60 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0a001b825948b and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbf81bc313216f8; op2val:0xc010e2a1dd1ebd60; op3val:0x3fe0a001b825948b; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 1312, x18)

inst_464:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xf81bc313216f8 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x0e2a1dd1ebd60 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0a001b825948b and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbf81bc313216f8; op2val:0xc010e2a1dd1ebd60; op3val:0x3fe0a001b825948b; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 1328, x18)

inst_465:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xf81bc313216f8 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x0e2a1dd1ebd60 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0a001b825948b and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbf81bc313216f8; op2val:0xc010e2a1dd1ebd60; op3val:0x3fe0a001b825948b; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 1344, x18)

inst_466:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x9fc53645f3ab6 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xe012d39c223ee and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x85d82ca70ca9c and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd9fc53645f3ab6; op2val:0xbffe012d39c223ee; op3val:0x3fe85d82ca70ca9c; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 1360, x18)

inst_467:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x9fc53645f3ab6 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xe012d39c223ee and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x85d82ca70ca9c and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd9fc53645f3ab6; op2val:0xbffe012d39c223ee; op3val:0x3fe85d82ca70ca9c; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 1376, x18)

inst_468:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x9fc53645f3ab6 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xe012d39c223ee and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x85d82ca70ca9c and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd9fc53645f3ab6; op2val:0xbffe012d39c223ee; op3val:0x3fe85d82ca70ca9c; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 1392, x18)

inst_469:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x9fc53645f3ab6 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xe012d39c223ee and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x85d82ca70ca9c and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd9fc53645f3ab6; op2val:0xbffe012d39c223ee; op3val:0x3fe85d82ca70ca9c; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 1408, x18)

inst_470:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x9fc53645f3ab6 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xe012d39c223ee and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x85d82ca70ca9c and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd9fc53645f3ab6; op2val:0xbffe012d39c223ee; op3val:0x3fe85d82ca70ca9c; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 1424, x18)

inst_471:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd15114c8be4d5 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xed1037ed0bd8c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc01b4fdf960b5 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed15114c8be4d5; op2val:0xbfeed1037ed0bd8c; op3val:0x3fec01b4fdf960b5; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 1440, x18)

inst_472:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd15114c8be4d5 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xed1037ed0bd8c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc01b4fdf960b5 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed15114c8be4d5; op2val:0xbfeed1037ed0bd8c; op3val:0x3fec01b4fdf960b5; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 1456, x18)

inst_473:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd15114c8be4d5 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xed1037ed0bd8c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc01b4fdf960b5 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed15114c8be4d5; op2val:0xbfeed1037ed0bd8c; op3val:0x3fec01b4fdf960b5; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 1472, x18)

inst_474:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd15114c8be4d5 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xed1037ed0bd8c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc01b4fdf960b5 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed15114c8be4d5; op2val:0xbfeed1037ed0bd8c; op3val:0x3fec01b4fdf960b5; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 1488, x18)

inst_475:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd15114c8be4d5 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xed1037ed0bd8c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc01b4fdf960b5 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed15114c8be4d5; op2val:0xbfeed1037ed0bd8c; op3val:0x3fec01b4fdf960b5; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 1504, x18)

inst_476:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd45afb9b5045e and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x73b370fd10047 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x5404127b661d6 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed45afb9b5045e; op2val:0xbfd73b370fd10047; op3val:0x3fd5404127b661d6; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 1520, x18)

inst_477:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd45afb9b5045e and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x73b370fd10047 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x5404127b661d6 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed45afb9b5045e; op2val:0xbfd73b370fd10047; op3val:0x3fd5404127b661d6; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 1536, x18)

inst_478:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd45afb9b5045e and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x73b370fd10047 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x5404127b661d6 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed45afb9b5045e; op2val:0xbfd73b370fd10047; op3val:0x3fd5404127b661d6; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 1552, x18)

inst_479:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd45afb9b5045e and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x73b370fd10047 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x5404127b661d6 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed45afb9b5045e; op2val:0xbfd73b370fd10047; op3val:0x3fd5404127b661d6; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 1568, x18)

inst_480:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd45afb9b5045e and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x73b370fd10047 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x5404127b661d6 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed45afb9b5045e; op2val:0xbfd73b370fd10047; op3val:0x3fd5404127b661d6; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 1584, x18)

inst_481:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x2595a6fd9b864 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x340a7cc1b4225 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x614413d4464fe and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd2595a6fd9b864; op2val:0xbff340a7cc1b4225; op3val:0x3fd614413d4464fe; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 1600, x18)

inst_482:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x2595a6fd9b864 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x340a7cc1b4225 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x614413d4464fe and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd2595a6fd9b864; op2val:0xbff340a7cc1b4225; op3val:0x3fd614413d4464fe; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 1616, x18)

inst_483:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x2595a6fd9b864 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x340a7cc1b4225 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x614413d4464fe and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd2595a6fd9b864; op2val:0xbff340a7cc1b4225; op3val:0x3fd614413d4464fe; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 1632, x18)

inst_484:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x2595a6fd9b864 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x340a7cc1b4225 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x614413d4464fe and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd2595a6fd9b864; op2val:0xbff340a7cc1b4225; op3val:0x3fd614413d4464fe; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 1648, x18)

inst_485:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x2595a6fd9b864 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x340a7cc1b4225 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x614413d4464fe and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd2595a6fd9b864; op2val:0xbff340a7cc1b4225; op3val:0x3fd614413d4464fe; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 1664, x18)

inst_486:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x0d90a64e38680 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x8f0b14b3b8839 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa4301e379ab37 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd0d90a64e38680; op2val:0xc008f0b14b3b8839; op3val:0x3fea4301e379ab37; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 1680, x18)

inst_487:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x0d90a64e38680 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x8f0b14b3b8839 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa4301e379ab37 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd0d90a64e38680; op2val:0xc008f0b14b3b8839; op3val:0x3fea4301e379ab37; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 1696, x18)

inst_488:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x0d90a64e38680 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x8f0b14b3b8839 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa4301e379ab37 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd0d90a64e38680; op2val:0xc008f0b14b3b8839; op3val:0x3fea4301e379ab37; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 1712, x18)

inst_489:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x0d90a64e38680 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x8f0b14b3b8839 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa4301e379ab37 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd0d90a64e38680; op2val:0xc008f0b14b3b8839; op3val:0x3fea4301e379ab37; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 1728, x18)

inst_490:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x0d90a64e38680 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x8f0b14b3b8839 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa4301e379ab37 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd0d90a64e38680; op2val:0xc008f0b14b3b8839; op3val:0x3fea4301e379ab37; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1744, x18)

inst_491:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x87fa0f88bc5f8 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xa4840ca337320 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x41f038e2fc81b and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe87fa0f88bc5f8; op2val:0xbfea4840ca337320; op3val:0x3fe41f038e2fc81b; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 1760, x18)

inst_492:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x87fa0f88bc5f8 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xa4840ca337320 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x41f038e2fc81b and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe87fa0f88bc5f8; op2val:0xbfea4840ca337320; op3val:0x3fe41f038e2fc81b; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 1776, x18)

inst_493:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x87fa0f88bc5f8 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xa4840ca337320 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x41f038e2fc81b and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe87fa0f88bc5f8; op2val:0xbfea4840ca337320; op3val:0x3fe41f038e2fc81b; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 1792, x18)

inst_494:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x87fa0f88bc5f8 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xa4840ca337320 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x41f038e2fc81b and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe87fa0f88bc5f8; op2val:0xbfea4840ca337320; op3val:0x3fe41f038e2fc81b; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 1808, x18)

inst_495:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x87fa0f88bc5f8 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xa4840ca337320 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x41f038e2fc81b and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe87fa0f88bc5f8; op2val:0xbfea4840ca337320; op3val:0x3fe41f038e2fc81b; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1824, x18)

inst_496:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xee98ad832fd36 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xcb1c290ad512a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbb81138c49418 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdee98ad832fd36; op2val:0xbffcb1c290ad512a; op3val:0x3febb81138c49418; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 1840, x18)

inst_497:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xee98ad832fd36 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xcb1c290ad512a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbb81138c49418 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdee98ad832fd36; op2val:0xbffcb1c290ad512a; op3val:0x3febb81138c49418; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 1856, x18)

inst_498:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xee98ad832fd36 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xcb1c290ad512a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbb81138c49418 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdee98ad832fd36; op2val:0xbffcb1c290ad512a; op3val:0x3febb81138c49418; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 1872, x18)

inst_499:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xee98ad832fd36 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xcb1c290ad512a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbb81138c49418 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdee98ad832fd36; op2val:0xbffcb1c290ad512a; op3val:0x3febb81138c49418; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 1888, x18)

inst_500:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xee98ad832fd36 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xcb1c290ad512a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbb81138c49418 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdee98ad832fd36; op2val:0xbffcb1c290ad512a; op3val:0x3febb81138c49418; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1904, x18)

inst_501:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7ddac64ab68d4 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x5674e6680fcd1 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xfed0a3b77054c and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7ddac64ab68d4; op2val:0xbfd5674e6680fcd1; op3val:0x3fcfed0a3b77054c; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 1920, x18)

inst_502:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7ddac64ab68d4 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x5674e6680fcd1 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xfed0a3b77054c and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7ddac64ab68d4; op2val:0xbfd5674e6680fcd1; op3val:0x3fcfed0a3b77054c; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 1936, x18)

inst_503:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7ddac64ab68d4 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x5674e6680fcd1 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xfed0a3b77054c and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7ddac64ab68d4; op2val:0xbfd5674e6680fcd1; op3val:0x3fcfed0a3b77054c; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 1952, x18)

inst_504:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7ddac64ab68d4 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x5674e6680fcd1 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xfed0a3b77054c and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7ddac64ab68d4; op2val:0xbfd5674e6680fcd1; op3val:0x3fcfed0a3b77054c; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 1968, x18)

inst_505:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7ddac64ab68d4 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x5674e6680fcd1 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xfed0a3b77054c and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7ddac64ab68d4; op2val:0xbfd5674e6680fcd1; op3val:0x3fcfed0a3b77054c; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1984, x18)

inst_506:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7937b9bbf4c23 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x378f266c3b4e5 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xcb15a161d6cd2 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7937b9bbf4c23; op2val:0xbfe378f266c3b4e5; op3val:0x3fdcb15a161d6cd2; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 2000, x18)

inst_507:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7937b9bbf4c23 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x378f266c3b4e5 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xcb15a161d6cd2 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7937b9bbf4c23; op2val:0xbfe378f266c3b4e5; op3val:0x3fdcb15a161d6cd2; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_5)

inst_508:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7937b9bbf4c23 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x378f266c3b4e5 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xcb15a161d6cd2 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7937b9bbf4c23; op2val:0xbfe378f266c3b4e5; op3val:0x3fdcb15a161d6cd2; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 0, x18)

inst_509:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7937b9bbf4c23 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x378f266c3b4e5 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xcb15a161d6cd2 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7937b9bbf4c23; op2val:0xbfe378f266c3b4e5; op3val:0x3fdcb15a161d6cd2; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 16, x18)
addi x16,x16,2040

inst_510:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7937b9bbf4c23 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x378f266c3b4e5 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xcb15a161d6cd2 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7937b9bbf4c23; op2val:0xbfe378f266c3b4e5; op3val:0x3fdcb15a161d6cd2; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 32, x18)

inst_511:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xc7cab0399d69c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xb418b6e6b87fe and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x84389a63c3afc and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdc7cab0399d69c; op2val:0xbfeb418b6e6b87fe; op3val:0x3fd84389a63c3afc; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 48, x18)

inst_512:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xc7cab0399d69c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xb418b6e6b87fe and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x84389a63c3afc and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdc7cab0399d69c; op2val:0xbfeb418b6e6b87fe; op3val:0x3fd84389a63c3afc; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 64, x18)

inst_513:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xc7cab0399d69c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xb418b6e6b87fe and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x84389a63c3afc and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdc7cab0399d69c; op2val:0xbfeb418b6e6b87fe; op3val:0x3fd84389a63c3afc; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 80, x18)

inst_514:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xc7cab0399d69c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xb418b6e6b87fe and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x84389a63c3afc and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdc7cab0399d69c; op2val:0xbfeb418b6e6b87fe; op3val:0x3fd84389a63c3afc; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 96, x18)

inst_515:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xc7cab0399d69c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xb418b6e6b87fe and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x84389a63c3afc and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdc7cab0399d69c; op2val:0xbfeb418b6e6b87fe; op3val:0x3fd84389a63c3afc; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 112, x18)

inst_516:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xfa0400dad9876 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x733f9dd9567c7 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x6ee8c61db5fc8 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdfa0400dad9876; op2val:0xbfc733f9dd9567c7; op3val:0x3fb6ee8c61db5fc8; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 128, x18)

inst_517:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xfa0400dad9876 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x733f9dd9567c7 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x6ee8c61db5fc8 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdfa0400dad9876; op2val:0xbfc733f9dd9567c7; op3val:0x3fb6ee8c61db5fc8; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 144, x18)

inst_518:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xfa0400dad9876 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x733f9dd9567c7 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x6ee8c61db5fc8 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdfa0400dad9876; op2val:0xbfc733f9dd9567c7; op3val:0x3fb6ee8c61db5fc8; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 160, x18)

inst_519:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xfa0400dad9876 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x733f9dd9567c7 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x6ee8c61db5fc8 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdfa0400dad9876; op2val:0xbfc733f9dd9567c7; op3val:0x3fb6ee8c61db5fc8; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 176, x18)

inst_520:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xfa0400dad9876 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x733f9dd9567c7 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x6ee8c61db5fc8 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdfa0400dad9876; op2val:0xbfc733f9dd9567c7; op3val:0x3fb6ee8c61db5fc8; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 192, x18)

inst_521:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb2a1d05b9b44a and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xbcb3357c80847 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x798073a939072 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb2a1d05b9b44a; op2val:0xbfdbcb3357c80847; op3val:0x3fd798073a939072; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 208, x18)

inst_522:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb2a1d05b9b44a and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xbcb3357c80847 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x798073a939072 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb2a1d05b9b44a; op2val:0xbfdbcb3357c80847; op3val:0x3fd798073a939072; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 224, x18)

inst_523:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb2a1d05b9b44a and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xbcb3357c80847 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x798073a939072 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb2a1d05b9b44a; op2val:0xbfdbcb3357c80847; op3val:0x3fd798073a939072; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 240, x18)

inst_524:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb2a1d05b9b44a and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xbcb3357c80847 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x798073a939072 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb2a1d05b9b44a; op2val:0xbfdbcb3357c80847; op3val:0x3fd798073a939072; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 256, x18)

inst_525:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb2a1d05b9b44a and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xbcb3357c80847 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x798073a939072 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb2a1d05b9b44a; op2val:0xbfdbcb3357c80847; op3val:0x3fd798073a939072; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 272, x18)

inst_526:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe374937727337 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x48452321775da and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x35f7f6da4679e and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fee374937727337; op2val:0xbfd48452321775da; op3val:0x3fd35f7f6da4679e; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 288, x18)

inst_527:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe374937727337 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x48452321775da and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x35f7f6da4679e and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fee374937727337; op2val:0xbfd48452321775da; op3val:0x3fd35f7f6da4679e; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 304, x18)

inst_528:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe374937727337 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x48452321775da and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x35f7f6da4679e and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fee374937727337; op2val:0xbfd48452321775da; op3val:0x3fd35f7f6da4679e; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 320, x18)

inst_529:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe374937727337 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x48452321775da and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x35f7f6da4679e and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fee374937727337; op2val:0xbfd48452321775da; op3val:0x3fd35f7f6da4679e; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 336, x18)

inst_530:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe374937727337 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x48452321775da and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x35f7f6da4679e and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fee374937727337; op2val:0xbfd48452321775da; op3val:0x3fd35f7f6da4679e; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 352, x18)

inst_531:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0xf77f216018fa0 and fs2 == 1 and fe2 == 0x402 and fm2 == 0x45d26398b8183 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x406917c574006 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3faf77f216018fa0; op2val:0xc0245d26398b8183; op3val:0x3fe406917c574006; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 368, x18)

inst_532:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0xf77f216018fa0 and fs2 == 1 and fe2 == 0x402 and fm2 == 0x45d26398b8183 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x406917c574006 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3faf77f216018fa0; op2val:0xc0245d26398b8183; op3val:0x3fe406917c574006; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 384, x18)

inst_533:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0xf77f216018fa0 and fs2 == 1 and fe2 == 0x402 and fm2 == 0x45d26398b8183 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x406917c574006 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3faf77f216018fa0; op2val:0xc0245d26398b8183; op3val:0x3fe406917c574006; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 400, x18)

inst_534:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0xf77f216018fa0 and fs2 == 1 and fe2 == 0x402 and fm2 == 0x45d26398b8183 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x406917c574006 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3faf77f216018fa0; op2val:0xc0245d26398b8183; op3val:0x3fe406917c574006; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 416, x18)

inst_535:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0xf77f216018fa0 and fs2 == 1 and fe2 == 0x402 and fm2 == 0x45d26398b8183 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x406917c574006 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3faf77f216018fa0; op2val:0xc0245d26398b8183; op3val:0x3fe406917c574006; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 432, x18)

inst_536:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x99608cc159e82 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x46d8c69e470b5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0555cd2961d8e and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd99608cc159e82; op2val:0xbff46d8c69e470b5; op3val:0x3fe0555cd2961d8e; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 448, x18)

inst_537:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x99608cc159e82 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x46d8c69e470b5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0555cd2961d8e and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd99608cc159e82; op2val:0xbff46d8c69e470b5; op3val:0x3fe0555cd2961d8e; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 464, x18)

inst_538:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x99608cc159e82 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x46d8c69e470b5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0555cd2961d8e and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd99608cc159e82; op2val:0xbff46d8c69e470b5; op3val:0x3fe0555cd2961d8e; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 480, x18)

inst_539:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x99608cc159e82 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x46d8c69e470b5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0555cd2961d8e and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd99608cc159e82; op2val:0xbff46d8c69e470b5; op3val:0x3fe0555cd2961d8e; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 496, x18)

inst_540:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x99608cc159e82 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x46d8c69e470b5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0555cd2961d8e and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd99608cc159e82; op2val:0xbff46d8c69e470b5; op3val:0x3fe0555cd2961d8e; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 512, x18)

inst_541:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x22fc157a25e23 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x34bf4cae7768b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x5ef0bb1421277 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe22fc157a25e23; op2val:0xbff34bf4cae7768b; op3val:0x3fe5ef0bb1421277; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 528, x18)

inst_542:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x22fc157a25e23 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x34bf4cae7768b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x5ef0bb1421277 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe22fc157a25e23; op2val:0xbff34bf4cae7768b; op3val:0x3fe5ef0bb1421277; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 544, x18)

inst_543:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x22fc157a25e23 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x34bf4cae7768b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x5ef0bb1421277 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe22fc157a25e23; op2val:0xbff34bf4cae7768b; op3val:0x3fe5ef0bb1421277; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 560, x18)

inst_544:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x22fc157a25e23 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x34bf4cae7768b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x5ef0bb1421277 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe22fc157a25e23; op2val:0xbff34bf4cae7768b; op3val:0x3fe5ef0bb1421277; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 576, x18)

inst_545:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x22fc157a25e23 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x34bf4cae7768b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x5ef0bb1421277 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe22fc157a25e23; op2val:0xbff34bf4cae7768b; op3val:0x3fe5ef0bb1421277; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 592, x18)

inst_546:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xf1d6f2c0a7cd0 and fs2 == 1 and fe2 == 0x401 and fm2 == 0xc7d411808eef3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbb38b8bf5cab7 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbf1d6f2c0a7cd0; op2val:0xc01c7d411808eef3; op3val:0x3febb38b8bf5cab7; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 608, x18)

inst_547:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xf1d6f2c0a7cd0 and fs2 == 1 and fe2 == 0x401 and fm2 == 0xc7d411808eef3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbb38b8bf5cab7 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbf1d6f2c0a7cd0; op2val:0xc01c7d411808eef3; op3val:0x3febb38b8bf5cab7; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 624, x18)

inst_548:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xf1d6f2c0a7cd0 and fs2 == 1 and fe2 == 0x401 and fm2 == 0xc7d411808eef3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbb38b8bf5cab7 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbf1d6f2c0a7cd0; op2val:0xc01c7d411808eef3; op3val:0x3febb38b8bf5cab7; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 640, x18)

inst_549:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xf1d6f2c0a7cd0 and fs2 == 1 and fe2 == 0x401 and fm2 == 0xc7d411808eef3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbb38b8bf5cab7 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbf1d6f2c0a7cd0; op2val:0xc01c7d411808eef3; op3val:0x3febb38b8bf5cab7; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 656, x18)

inst_550:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xf1d6f2c0a7cd0 and fs2 == 1 and fe2 == 0x401 and fm2 == 0xc7d411808eef3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbb38b8bf5cab7 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbf1d6f2c0a7cd0; op2val:0xc01c7d411808eef3; op3val:0x3febb38b8bf5cab7; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 672, x18)

inst_551:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xb2f02af0d9c62 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x369820f680ec1 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x07d8a54cfcf3e and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdb2f02af0d9c62; op2val:0xbfe369820f680ec1; op3val:0x3fd07d8a54cfcf3e; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 688, x18)

inst_552:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xb2f02af0d9c62 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x369820f680ec1 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x07d8a54cfcf3e and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdb2f02af0d9c62; op2val:0xbfe369820f680ec1; op3val:0x3fd07d8a54cfcf3e; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 704, x18)

inst_553:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xb2f02af0d9c62 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x369820f680ec1 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x07d8a54cfcf3e and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdb2f02af0d9c62; op2val:0xbfe369820f680ec1; op3val:0x3fd07d8a54cfcf3e; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 720, x18)

inst_554:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xb2f02af0d9c62 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x369820f680ec1 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x07d8a54cfcf3e and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdb2f02af0d9c62; op2val:0xbfe369820f680ec1; op3val:0x3fd07d8a54cfcf3e; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 736, x18)

inst_555:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xb2f02af0d9c62 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x369820f680ec1 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x07d8a54cfcf3e and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdb2f02af0d9c62; op2val:0xbfe369820f680ec1; op3val:0x3fd07d8a54cfcf3e; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 752, x18)

inst_556:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xdb224cae169a6 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x03fbf518f4036 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe287551b730b1 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fedb224cae169a6; op2val:0xbff03fbf518f4036; op3val:0x3fee287551b730b1; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 768, x18)

inst_557:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xdb224cae169a6 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x03fbf518f4036 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe287551b730b1 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fedb224cae169a6; op2val:0xbff03fbf518f4036; op3val:0x3fee287551b730b1; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 784, x18)

inst_558:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xdb224cae169a6 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x03fbf518f4036 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe287551b730b1 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fedb224cae169a6; op2val:0xbff03fbf518f4036; op3val:0x3fee287551b730b1; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 800, x18)

inst_559:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xdb224cae169a6 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x03fbf518f4036 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe287551b730b1 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fedb224cae169a6; op2val:0xbff03fbf518f4036; op3val:0x3fee287551b730b1; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 816, x18)

inst_560:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xdb224cae169a6 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x03fbf518f4036 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe287551b730b1 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fedb224cae169a6; op2val:0xbff03fbf518f4036; op3val:0x3fee287551b730b1; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 832, x18)

inst_561:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc8981495bf177 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x646b83296fca5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x3dd99f10494d1 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec8981495bf177; op2val:0xbfe646b83296fca5; op3val:0x3fe3dd99f10494d1; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 848, x18)

inst_562:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc8981495bf177 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x646b83296fca5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x3dd99f10494d1 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec8981495bf177; op2val:0xbfe646b83296fca5; op3val:0x3fe3dd99f10494d1; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 864, x18)

inst_563:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc8981495bf177 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x646b83296fca5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x3dd99f10494d1 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec8981495bf177; op2val:0xbfe646b83296fca5; op3val:0x3fe3dd99f10494d1; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 880, x18)

inst_564:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc8981495bf177 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x646b83296fca5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x3dd99f10494d1 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec8981495bf177; op2val:0xbfe646b83296fca5; op3val:0x3fe3dd99f10494d1; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 896, x18)

inst_565:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc8981495bf177 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x646b83296fca5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x3dd99f10494d1 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec8981495bf177; op2val:0xbfe646b83296fca5; op3val:0x3fe3dd99f10494d1; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 912, x18)

inst_566:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x82a84064b7de2 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x443865d5874fb and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe9b2201c7281c and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd82a84064b7de2; op2val:0xc00443865d5874fb; op3val:0x3fee9b2201c7281c; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 928, x18)

inst_567:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x82a84064b7de2 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x443865d5874fb and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe9b2201c7281c and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd82a84064b7de2; op2val:0xc00443865d5874fb; op3val:0x3fee9b2201c7281c; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 944, x18)

inst_568:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x82a84064b7de2 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x443865d5874fb and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe9b2201c7281c and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd82a84064b7de2; op2val:0xc00443865d5874fb; op3val:0x3fee9b2201c7281c; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 960, x18)

inst_569:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x82a84064b7de2 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x443865d5874fb and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe9b2201c7281c and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd82a84064b7de2; op2val:0xc00443865d5874fb; op3val:0x3fee9b2201c7281c; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 976, x18)

inst_570:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x82a84064b7de2 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x443865d5874fb and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe9b2201c7281c and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd82a84064b7de2; op2val:0xc00443865d5874fb; op3val:0x3fee9b2201c7281c; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 992, x18)

inst_571:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2c108c4cab1fd and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x6e683acde617f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xad79d43bb289a and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe2c108c4cab1fd; op2val:0xbff6e683acde617f; op3val:0x3fead79d43bb289a; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 1008, x18)

inst_572:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2c108c4cab1fd and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x6e683acde617f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xad79d43bb289a and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe2c108c4cab1fd; op2val:0xbff6e683acde617f; op3val:0x3fead79d43bb289a; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 1024, x18)

inst_573:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2c108c4cab1fd and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x6e683acde617f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xad79d43bb289a and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe2c108c4cab1fd; op2val:0xbff6e683acde617f; op3val:0x3fead79d43bb289a; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 1040, x18)

inst_574:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2c108c4cab1fd and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x6e683acde617f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xad79d43bb289a and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe2c108c4cab1fd; op2val:0xbff6e683acde617f; op3val:0x3fead79d43bb289a; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 1056, x18)

inst_575:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2c108c4cab1fd and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x6e683acde617f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xad79d43bb289a and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe2c108c4cab1fd; op2val:0xbff6e683acde617f; op3val:0x3fead79d43bb289a; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1072, x18)

inst_576:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb35696b448525 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xd4f2fa3033307 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x8ebbbe68488be and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb35696b448525; op2val:0xbfdd4f2fa3033307; op3val:0x3fd8ebbbe68488be; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 1088, x18)

inst_577:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb35696b448525 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xd4f2fa3033307 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x8ebbbe68488be and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb35696b448525; op2val:0xbfdd4f2fa3033307; op3val:0x3fd8ebbbe68488be; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 1104, x18)

inst_578:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb35696b448525 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xd4f2fa3033307 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x8ebbbe68488be and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb35696b448525; op2val:0xbfdd4f2fa3033307; op3val:0x3fd8ebbbe68488be; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 1120, x18)

inst_579:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb35696b448525 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xd4f2fa3033307 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x8ebbbe68488be and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb35696b448525; op2val:0xbfdd4f2fa3033307; op3val:0x3fd8ebbbe68488be; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 1136, x18)

inst_580:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb35696b448525 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xd4f2fa3033307 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x8ebbbe68488be and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb35696b448525; op2val:0xbfdd4f2fa3033307; op3val:0x3fd8ebbbe68488be; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1152, x18)

inst_581:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6a3e5e92d499b and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xdabd132599144 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x4fe1831fc2580 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe6a3e5e92d499b; op2val:0xbfbdabd132599144; op3val:0x3fb4fe1831fc2580; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 1168, x18)

inst_582:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6a3e5e92d499b and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xdabd132599144 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x4fe1831fc2580 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe6a3e5e92d499b; op2val:0xbfbdabd132599144; op3val:0x3fb4fe1831fc2580; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 1184, x18)

inst_583:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6a3e5e92d499b and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xdabd132599144 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x4fe1831fc2580 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe6a3e5e92d499b; op2val:0xbfbdabd132599144; op3val:0x3fb4fe1831fc2580; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 1200, x18)

inst_584:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6a3e5e92d499b and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xdabd132599144 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x4fe1831fc2580 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe6a3e5e92d499b; op2val:0xbfbdabd132599144; op3val:0x3fb4fe1831fc2580; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 1216, x18)

inst_585:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6a3e5e92d499b and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xdabd132599144 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x4fe1831fc2580 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe6a3e5e92d499b; op2val:0xbfbdabd132599144; op3val:0x3fb4fe1831fc2580; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1232, x18)

inst_586:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x26753f0d75ab6 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x813427380c977 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbb1250c0616f3 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd26753f0d75ab6; op2val:0xc00813427380c977; op3val:0x3febb1250c0616f3; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 1248, x18)

inst_587:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x26753f0d75ab6 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x813427380c977 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbb1250c0616f3 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd26753f0d75ab6; op2val:0xc00813427380c977; op3val:0x3febb1250c0616f3; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 1264, x18)

inst_588:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x26753f0d75ab6 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x813427380c977 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbb1250c0616f3 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd26753f0d75ab6; op2val:0xc00813427380c977; op3val:0x3febb1250c0616f3; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 1280, x18)

inst_589:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x26753f0d75ab6 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x813427380c977 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbb1250c0616f3 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd26753f0d75ab6; op2val:0xc00813427380c977; op3val:0x3febb1250c0616f3; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 1296, x18)

inst_590:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x26753f0d75ab6 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x813427380c977 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbb1250c0616f3 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd26753f0d75ab6; op2val:0xc00813427380c977; op3val:0x3febb1250c0616f3; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1312, x18)

inst_591:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x6ac3cf167bb80 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x14129a3556d93 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x8735778e2d260 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd6ac3cf167bb80; op2val:0xbfc14129a3556d93; op3val:0x3fa8735778e2d260; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 1328, x18)

inst_592:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x6ac3cf167bb80 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x14129a3556d93 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x8735778e2d260 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd6ac3cf167bb80; op2val:0xbfc14129a3556d93; op3val:0x3fa8735778e2d260; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 1344, x18)

inst_593:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x6ac3cf167bb80 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x14129a3556d93 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x8735778e2d260 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd6ac3cf167bb80; op2val:0xbfc14129a3556d93; op3val:0x3fa8735778e2d260; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 1360, x18)

inst_594:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x6ac3cf167bb80 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x14129a3556d93 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x8735778e2d260 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd6ac3cf167bb80; op2val:0xbfc14129a3556d93; op3val:0x3fa8735778e2d260; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 1376, x18)
addi x16,x16,2040

inst_595:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x6ac3cf167bb80 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x14129a3556d93 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x8735778e2d260 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd6ac3cf167bb80; op2val:0xbfc14129a3556d93; op3val:0x3fa8735778e2d260; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 1392, x18)

inst_596:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x4374a9e0ad3ec and fs2 == 1 and fe2 == 0x401 and fm2 == 0x3c62c6739b7e9 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x8fc0cf18ab1f7 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc4374a9e0ad3ec; op2val:0xc013c62c6739b7e9; op3val:0x3fe8fc0cf18ab1f7; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 1408, x18)

inst_597:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x4374a9e0ad3ec and fs2 == 1 and fe2 == 0x401 and fm2 == 0x3c62c6739b7e9 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x8fc0cf18ab1f7 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc4374a9e0ad3ec; op2val:0xc013c62c6739b7e9; op3val:0x3fe8fc0cf18ab1f7; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 1424, x18)

inst_598:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x4374a9e0ad3ec and fs2 == 1 and fe2 == 0x401 and fm2 == 0x3c62c6739b7e9 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x8fc0cf18ab1f7 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc4374a9e0ad3ec; op2val:0xc013c62c6739b7e9; op3val:0x3fe8fc0cf18ab1f7; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 1440, x18)

inst_599:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x4374a9e0ad3ec and fs2 == 1 and fe2 == 0x401 and fm2 == 0x3c62c6739b7e9 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x8fc0cf18ab1f7 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc4374a9e0ad3ec; op2val:0xc013c62c6739b7e9; op3val:0x3fe8fc0cf18ab1f7; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 1456, x18)

inst_600:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x4374a9e0ad3ec and fs2 == 1 and fe2 == 0x401 and fm2 == 0x3c62c6739b7e9 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x8fc0cf18ab1f7 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc4374a9e0ad3ec; op2val:0xc013c62c6739b7e9; op3val:0x3fe8fc0cf18ab1f7; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 1472, x18)

inst_601:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x31ec0141b41b2 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x978047bb14a90 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe6f781b81a9fb and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd31ec0141b41b2; op2val:0xc00978047bb14a90; op3val:0x3fee6f781b81a9fb; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 1488, x18)

inst_602:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x31ec0141b41b2 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x978047bb14a90 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe6f781b81a9fb and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd31ec0141b41b2; op2val:0xc00978047bb14a90; op3val:0x3fee6f781b81a9fb; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 1504, x18)

inst_603:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x31ec0141b41b2 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x978047bb14a90 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe6f781b81a9fb and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd31ec0141b41b2; op2val:0xc00978047bb14a90; op3val:0x3fee6f781b81a9fb; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 1520, x18)

inst_604:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x31ec0141b41b2 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x978047bb14a90 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe6f781b81a9fb and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd31ec0141b41b2; op2val:0xc00978047bb14a90; op3val:0x3fee6f781b81a9fb; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 1536, x18)

inst_605:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x31ec0141b41b2 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x978047bb14a90 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe6f781b81a9fb and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd31ec0141b41b2; op2val:0xc00978047bb14a90; op3val:0x3fee6f781b81a9fb; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 1552, x18)

inst_606:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x5d356f734b000 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x4011f682f3777 and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0xb49b4c207ec00 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f95d356f734b000; op2val:0xbfb4011f682f3777; op3val:0x3f5b49b4c207ec00; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 1568, x18)

inst_607:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x5d356f734b000 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x4011f682f3777 and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0xb49b4c207ec00 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f95d356f734b000; op2val:0xbfb4011f682f3777; op3val:0x3f5b49b4c207ec00; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 1584, x18)

inst_608:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x5d356f734b000 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x4011f682f3777 and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0xb49b4c207ec00 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f95d356f734b000; op2val:0xbfb4011f682f3777; op3val:0x3f5b49b4c207ec00; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 1600, x18)

inst_609:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x5d356f734b000 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x4011f682f3777 and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0xb49b4c207ec00 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f95d356f734b000; op2val:0xbfb4011f682f3777; op3val:0x3f5b49b4c207ec00; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 1616, x18)

inst_610:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x5d356f734b000 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x4011f682f3777 and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0xb49b4c207ec00 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f95d356f734b000; op2val:0xbfb4011f682f3777; op3val:0x3f5b49b4c207ec00; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 1632, x18)

inst_611:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf2eaac2aaf486 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x23820fc01aafc and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x1c0f1dc90b832 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef2eaac2aaf486; op2val:0xbfd23820fc01aafc; op3val:0x3fd1c0f1dc90b832; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 1648, x18)

inst_612:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf2eaac2aaf486 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x23820fc01aafc and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x1c0f1dc90b832 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef2eaac2aaf486; op2val:0xbfd23820fc01aafc; op3val:0x3fd1c0f1dc90b832; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 1664, x18)

inst_613:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf2eaac2aaf486 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x23820fc01aafc and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x1c0f1dc90b832 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef2eaac2aaf486; op2val:0xbfd23820fc01aafc; op3val:0x3fd1c0f1dc90b832; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 1680, x18)

inst_614:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf2eaac2aaf486 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x23820fc01aafc and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x1c0f1dc90b832 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef2eaac2aaf486; op2val:0xbfd23820fc01aafc; op3val:0x3fd1c0f1dc90b832; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 1696, x18)

inst_615:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf2eaac2aaf486 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x23820fc01aafc and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x1c0f1dc90b832 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef2eaac2aaf486; op2val:0xbfd23820fc01aafc; op3val:0x3fd1c0f1dc90b832; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1712, x18)

inst_616:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xaa7eb5efe4a24 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x9d887361f7ffa and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x5878df8767198 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcaa7eb5efe4a24; op2val:0xbff9d887361f7ffa; op3val:0x3fd5878df8767198; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 1728, x18)

inst_617:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xaa7eb5efe4a24 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x9d887361f7ffa and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x5878df8767198 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcaa7eb5efe4a24; op2val:0xbff9d887361f7ffa; op3val:0x3fd5878df8767198; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 1744, x18)

inst_618:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xaa7eb5efe4a24 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x9d887361f7ffa and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x5878df8767198 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcaa7eb5efe4a24; op2val:0xbff9d887361f7ffa; op3val:0x3fd5878df8767198; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 1760, x18)

inst_619:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xaa7eb5efe4a24 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x9d887361f7ffa and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x5878df8767198 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcaa7eb5efe4a24; op2val:0xbff9d887361f7ffa; op3val:0x3fd5878df8767198; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 1776, x18)

inst_620:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xaa7eb5efe4a24 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x9d887361f7ffa and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x5878df8767198 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcaa7eb5efe4a24; op2val:0xbff9d887361f7ffa; op3val:0x3fd5878df8767198; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1792, x18)

inst_621:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8a3aea6ee61dc and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xdfd886b9df368 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x7178d6ea30954 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8a3aea6ee61dc; op2val:0xbfcdfd886b9df368; op3val:0x3fc7178d6ea30954; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 1808, x18)

inst_622:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8a3aea6ee61dc and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xdfd886b9df368 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x7178d6ea30954 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8a3aea6ee61dc; op2val:0xbfcdfd886b9df368; op3val:0x3fc7178d6ea30954; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 1824, x18)

inst_623:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8a3aea6ee61dc and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xdfd886b9df368 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x7178d6ea30954 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8a3aea6ee61dc; op2val:0xbfcdfd886b9df368; op3val:0x3fc7178d6ea30954; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 1840, x18)

inst_624:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8a3aea6ee61dc and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xdfd886b9df368 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x7178d6ea30954 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8a3aea6ee61dc; op2val:0xbfcdfd886b9df368; op3val:0x3fc7178d6ea30954; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 1856, x18)

inst_625:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8a3aea6ee61dc and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xdfd886b9df368 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x7178d6ea30954 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8a3aea6ee61dc; op2val:0xbfcdfd886b9df368; op3val:0x3fc7178d6ea30954; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1872, x18)

inst_626:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x8162ebf391f5c and fs2 == 1 and fe2 == 0x401 and fm2 == 0x3cd5eb529665d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xdcf824d11c853 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc8162ebf391f5c; op2val:0xc013cd5eb529665d; op3val:0x3fedcf824d11c853; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 1888, x18)

inst_627:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x8162ebf391f5c and fs2 == 1 and fe2 == 0x401 and fm2 == 0x3cd5eb529665d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xdcf824d11c853 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc8162ebf391f5c; op2val:0xc013cd5eb529665d; op3val:0x3fedcf824d11c853; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 1904, x18)

inst_628:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x8162ebf391f5c and fs2 == 1 and fe2 == 0x401 and fm2 == 0x3cd5eb529665d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xdcf824d11c853 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc8162ebf391f5c; op2val:0xc013cd5eb529665d; op3val:0x3fedcf824d11c853; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 1920, x18)

inst_629:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x8162ebf391f5c and fs2 == 1 and fe2 == 0x401 and fm2 == 0x3cd5eb529665d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xdcf824d11c853 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc8162ebf391f5c; op2val:0xc013cd5eb529665d; op3val:0x3fedcf824d11c853; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 1936, x18)

inst_630:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x8162ebf391f5c and fs2 == 1 and fe2 == 0x401 and fm2 == 0x3cd5eb529665d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xdcf824d11c853 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc8162ebf391f5c; op2val:0xc013cd5eb529665d; op3val:0x3fedcf824d11c853; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1952, x18)

inst_631:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb164cfa4c39ce and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xf5016c824fd42 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xa81659bab3338 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb164cfa4c39ce; op2val:0xbfdf5016c824fd42; op3val:0x3fda81659bab3338; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 1968, x18)

inst_632:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb164cfa4c39ce and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xf5016c824fd42 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xa81659bab3338 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb164cfa4c39ce; op2val:0xbfdf5016c824fd42; op3val:0x3fda81659bab3338; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 1984, x18)

inst_633:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb164cfa4c39ce and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xf5016c824fd42 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xa81659bab3338 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb164cfa4c39ce; op2val:0xbfdf5016c824fd42; op3val:0x3fda81659bab3338; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 2000, x18)

inst_634:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb164cfa4c39ce and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xf5016c824fd42 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xa81659bab3338 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb164cfa4c39ce; op2val:0xbfdf5016c824fd42; op3val:0x3fda81659bab3338; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_6)

inst_635:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb164cfa4c39ce and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xf5016c824fd42 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xa81659bab3338 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb164cfa4c39ce; op2val:0xbfdf5016c824fd42; op3val:0x3fda81659bab3338; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 0, x18)

inst_636:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x012fd5c1bba61 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x5514d32b2fc8f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x56a9a39d92502 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe012fd5c1bba61; op2val:0xbff5514d32b2fc8f; op3val:0x3fe56a9a39d92502; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 16, x18)

inst_637:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x012fd5c1bba61 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x5514d32b2fc8f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x56a9a39d92502 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe012fd5c1bba61; op2val:0xbff5514d32b2fc8f; op3val:0x3fe56a9a39d92502; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 32, x18)

inst_638:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x012fd5c1bba61 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x5514d32b2fc8f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x56a9a39d92502 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe012fd5c1bba61; op2val:0xbff5514d32b2fc8f; op3val:0x3fe56a9a39d92502; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 48, x18)

inst_639:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x012fd5c1bba61 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x5514d32b2fc8f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x56a9a39d92502 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe012fd5c1bba61; op2val:0xbff5514d32b2fc8f; op3val:0x3fe56a9a39d92502; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 64, x18)

inst_640:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x012fd5c1bba61 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x5514d32b2fc8f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x56a9a39d92502 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe012fd5c1bba61; op2val:0xbff5514d32b2fc8f; op3val:0x3fe56a9a39d92502; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 80, x18)

inst_641:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0b0d8093814e7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xba9dd329c8e0a and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xcdb9f38e3f67c and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0b0d8093814e7; op2val:0xbfeba9dd329c8e0a; op3val:0x3fdcdb9f38e3f67c; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 96, x18)

inst_642:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0b0d8093814e7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xba9dd329c8e0a and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xcdb9f38e3f67c and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0b0d8093814e7; op2val:0xbfeba9dd329c8e0a; op3val:0x3fdcdb9f38e3f67c; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 112, x18)

inst_643:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0b0d8093814e7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xba9dd329c8e0a and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xcdb9f38e3f67c and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0b0d8093814e7; op2val:0xbfeba9dd329c8e0a; op3val:0x3fdcdb9f38e3f67c; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 128, x18)

inst_644:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0b0d8093814e7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xba9dd329c8e0a and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xcdb9f38e3f67c and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0b0d8093814e7; op2val:0xbfeba9dd329c8e0a; op3val:0x3fdcdb9f38e3f67c; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 144, x18)

inst_645:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0b0d8093814e7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xba9dd329c8e0a and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xcdb9f38e3f67c and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0b0d8093814e7; op2val:0xbfeba9dd329c8e0a; op3val:0x3fdcdb9f38e3f67c; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 160, x18)

inst_646:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x6ddf6760cb138 and fs2 == 1 and fe2 == 0x402 and fm2 == 0x332104ade32d7 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb6f219756946f and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb6ddf6760cb138; op2val:0xc02332104ade32d7; op3val:0x3feb6f219756946f; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 176, x18)

inst_647:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x6ddf6760cb138 and fs2 == 1 and fe2 == 0x402 and fm2 == 0x332104ade32d7 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb6f219756946f and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb6ddf6760cb138; op2val:0xc02332104ade32d7; op3val:0x3feb6f219756946f; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 192, x18)

inst_648:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x6ddf6760cb138 and fs2 == 1 and fe2 == 0x402 and fm2 == 0x332104ade32d7 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb6f219756946f and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb6ddf6760cb138; op2val:0xc02332104ade32d7; op3val:0x3feb6f219756946f; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 208, x18)

inst_649:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x6ddf6760cb138 and fs2 == 1 and fe2 == 0x402 and fm2 == 0x332104ade32d7 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb6f219756946f and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb6ddf6760cb138; op2val:0xc02332104ade32d7; op3val:0x3feb6f219756946f; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 224, x18)

inst_650:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x6ddf6760cb138 and fs2 == 1 and fe2 == 0x402 and fm2 == 0x332104ade32d7 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb6f219756946f and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb6ddf6760cb138; op2val:0xc02332104ade32d7; op3val:0x3feb6f219756946f; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 240, x18)

inst_651:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6d62149680b41 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x3aa1af92c0af3 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xc11112870d8a0 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe6d62149680b41; op2val:0xbfd3aa1af92c0af3; op3val:0x3fcc11112870d8a0; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 256, x18)

inst_652:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6d62149680b41 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x3aa1af92c0af3 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xc11112870d8a0 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe6d62149680b41; op2val:0xbfd3aa1af92c0af3; op3val:0x3fcc11112870d8a0; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 272, x18)

inst_653:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6d62149680b41 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x3aa1af92c0af3 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xc11112870d8a0 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe6d62149680b41; op2val:0xbfd3aa1af92c0af3; op3val:0x3fcc11112870d8a0; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 288, x18)

inst_654:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6d62149680b41 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x3aa1af92c0af3 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xc11112870d8a0 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe6d62149680b41; op2val:0xbfd3aa1af92c0af3; op3val:0x3fcc11112870d8a0; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 304, x18)

inst_655:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6d62149680b41 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x3aa1af92c0af3 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xc11112870d8a0 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe6d62149680b41; op2val:0xbfd3aa1af92c0af3; op3val:0x3fcc11112870d8a0; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 320, x18)

inst_656:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x38b5251c49cd8 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xdb781882ad48b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2265675abeaad and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd38b5251c49cd8; op2val:0xbffdb781882ad48b; op3val:0x3fe2265675abeaad; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 336, x18)

inst_657:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x38b5251c49cd8 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xdb781882ad48b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2265675abeaad and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd38b5251c49cd8; op2val:0xbffdb781882ad48b; op3val:0x3fe2265675abeaad; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 352, x18)

inst_658:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x38b5251c49cd8 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xdb781882ad48b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2265675abeaad and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd38b5251c49cd8; op2val:0xbffdb781882ad48b; op3val:0x3fe2265675abeaad; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 368, x18)

inst_659:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x38b5251c49cd8 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xdb781882ad48b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2265675abeaad and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd38b5251c49cd8; op2val:0xbffdb781882ad48b; op3val:0x3fe2265675abeaad; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 384, x18)

inst_660:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x38b5251c49cd8 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xdb781882ad48b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2265675abeaad and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd38b5251c49cd8; op2val:0xbffdb781882ad48b; op3val:0x3fe2265675abeaad; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 400, x18)

inst_661:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xde2e222c90ff1 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x670411da904a3 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x4f4d25ff2c8d4 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fede2e222c90ff1; op2val:0xbfc670411da904a3; op3val:0x3fc4f4d25ff2c8d4; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 416, x18)

inst_662:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xde2e222c90ff1 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x670411da904a3 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x4f4d25ff2c8d4 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fede2e222c90ff1; op2val:0xbfc670411da904a3; op3val:0x3fc4f4d25ff2c8d4; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 432, x18)

inst_663:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xde2e222c90ff1 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x670411da904a3 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x4f4d25ff2c8d4 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fede2e222c90ff1; op2val:0xbfc670411da904a3; op3val:0x3fc4f4d25ff2c8d4; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 448, x18)

inst_664:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xde2e222c90ff1 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x670411da904a3 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x4f4d25ff2c8d4 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fede2e222c90ff1; op2val:0xbfc670411da904a3; op3val:0x3fc4f4d25ff2c8d4; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 464, x18)

inst_665:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xde2e222c90ff1 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x670411da904a3 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x4f4d25ff2c8d4 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fede2e222c90ff1; op2val:0xbfc670411da904a3; op3val:0x3fc4f4d25ff2c8d4; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 480, x18)

inst_666:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6837e3a23c0d9 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xeecad1bcaeb9c and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x5c1c9e3de6d1c and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe6837e3a23c0d9; op2val:0xbfceecad1bcaeb9c; op3val:0x3fc5c1c9e3de6d1c; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 496, x18)

inst_667:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6837e3a23c0d9 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xeecad1bcaeb9c and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x5c1c9e3de6d1c and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe6837e3a23c0d9; op2val:0xbfceecad1bcaeb9c; op3val:0x3fc5c1c9e3de6d1c; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 512, x18)

inst_668:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6837e3a23c0d9 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xeecad1bcaeb9c and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x5c1c9e3de6d1c and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe6837e3a23c0d9; op2val:0xbfceecad1bcaeb9c; op3val:0x3fc5c1c9e3de6d1c; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 528, x18)

inst_669:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6837e3a23c0d9 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xeecad1bcaeb9c and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x5c1c9e3de6d1c and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe6837e3a23c0d9; op2val:0xbfceecad1bcaeb9c; op3val:0x3fc5c1c9e3de6d1c; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 544, x18)

inst_670:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6837e3a23c0d9 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xeecad1bcaeb9c and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x5c1c9e3de6d1c and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe6837e3a23c0d9; op2val:0xbfceecad1bcaeb9c; op3val:0x3fc5c1c9e3de6d1c; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 560, x18)

inst_671:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x2f4e5347c7ad0 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x5b3dea9f4cc19 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x9b68868678780 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc2f4e5347c7ad0; op2val:0xc015b3dea9f4cc19; op3val:0x3fe9b68868678780; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 576, x18)

inst_672:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x2f4e5347c7ad0 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x5b3dea9f4cc19 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x9b68868678780 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc2f4e5347c7ad0; op2val:0xc015b3dea9f4cc19; op3val:0x3fe9b68868678780; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 592, x18)

inst_673:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x2f4e5347c7ad0 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x5b3dea9f4cc19 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x9b68868678780 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc2f4e5347c7ad0; op2val:0xc015b3dea9f4cc19; op3val:0x3fe9b68868678780; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 608, x18)

inst_674:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x2f4e5347c7ad0 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x5b3dea9f4cc19 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x9b68868678780 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc2f4e5347c7ad0; op2val:0xc015b3dea9f4cc19; op3val:0x3fe9b68868678780; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 624, x18)

inst_675:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x2f4e5347c7ad0 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x5b3dea9f4cc19 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x9b68868678780 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc2f4e5347c7ad0; op2val:0xc015b3dea9f4cc19; op3val:0x3fe9b68868678780; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 640, x18)

inst_676:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3aa343618dcee and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xfaac8a2441607 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x375d615454bc2 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3aa343618dcee; op2val:0xbfefaac8a2441607; op3val:0x3fe375d615454bc2; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 656, x18)

inst_677:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3aa343618dcee and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xfaac8a2441607 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x375d615454bc2 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3aa343618dcee; op2val:0xbfefaac8a2441607; op3val:0x3fe375d615454bc2; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 672, x18)

inst_678:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3aa343618dcee and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xfaac8a2441607 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x375d615454bc2 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3aa343618dcee; op2val:0xbfefaac8a2441607; op3val:0x3fe375d615454bc2; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 688, x18)

inst_679:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3aa343618dcee and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xfaac8a2441607 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x375d615454bc2 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3aa343618dcee; op2val:0xbfefaac8a2441607; op3val:0x3fe375d615454bc2; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 704, x18)
addi x16,x16,2040

inst_680:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3aa343618dcee and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xfaac8a2441607 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x375d615454bc2 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3aa343618dcee; op2val:0xbfefaac8a2441607; op3val:0x3fe375d615454bc2; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 720, x18)

inst_681:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x094725c90b2d1 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x5cf784812ff0f and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x699d34514e2e8 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe094725c90b2d1; op2val:0xbfc5cf784812ff0f; op3val:0x3fb699d34514e2e8; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 736, x18)

inst_682:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x094725c90b2d1 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x5cf784812ff0f and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x699d34514e2e8 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe094725c90b2d1; op2val:0xbfc5cf784812ff0f; op3val:0x3fb699d34514e2e8; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 752, x18)

inst_683:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x094725c90b2d1 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x5cf784812ff0f and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x699d34514e2e8 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe094725c90b2d1; op2val:0xbfc5cf784812ff0f; op3val:0x3fb699d34514e2e8; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 768, x18)

inst_684:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x094725c90b2d1 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x5cf784812ff0f and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x699d34514e2e8 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe094725c90b2d1; op2val:0xbfc5cf784812ff0f; op3val:0x3fb699d34514e2e8; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 784, x18)

inst_685:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x094725c90b2d1 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x5cf784812ff0f and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x699d34514e2e8 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe094725c90b2d1; op2val:0xbfc5cf784812ff0f; op3val:0x3fb699d34514e2e8; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 800, x18)

inst_686:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x2ad28b05fb51e and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x429fc05d8602e and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x78974c2cf202a and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd2ad28b05fb51e; op2val:0xbff429fc05d8602e; op3val:0x3fd78974c2cf202a; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 816, x18)

inst_687:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x2ad28b05fb51e and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x429fc05d8602e and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x78974c2cf202a and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd2ad28b05fb51e; op2val:0xbff429fc05d8602e; op3val:0x3fd78974c2cf202a; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 832, x18)

inst_688:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x2ad28b05fb51e and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x429fc05d8602e and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x78974c2cf202a and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd2ad28b05fb51e; op2val:0xbff429fc05d8602e; op3val:0x3fd78974c2cf202a; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 848, x18)

inst_689:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x2ad28b05fb51e and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x429fc05d8602e and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x78974c2cf202a and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd2ad28b05fb51e; op2val:0xbff429fc05d8602e; op3val:0x3fd78974c2cf202a; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 864, x18)

inst_690:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x2ad28b05fb51e and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x429fc05d8602e and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x78974c2cf202a and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd2ad28b05fb51e; op2val:0xbff429fc05d8602e; op3val:0x3fd78974c2cf202a; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 880, x18)

inst_691:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x25005f59ed49d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x7baabb301fede and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xb28af5a7ce47c and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe25005f59ed49d; op2val:0xbfe7baabb301fede; op3val:0x3fdb28af5a7ce47c; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 896, x18)

inst_692:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x25005f59ed49d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x7baabb301fede and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xb28af5a7ce47c and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe25005f59ed49d; op2val:0xbfe7baabb301fede; op3val:0x3fdb28af5a7ce47c; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 912, x18)

inst_693:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x25005f59ed49d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x7baabb301fede and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xb28af5a7ce47c and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe25005f59ed49d; op2val:0xbfe7baabb301fede; op3val:0x3fdb28af5a7ce47c; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 928, x18)

inst_694:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x25005f59ed49d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x7baabb301fede and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xb28af5a7ce47c and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe25005f59ed49d; op2val:0xbfe7baabb301fede; op3val:0x3fdb28af5a7ce47c; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 944, x18)

inst_695:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x25005f59ed49d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x7baabb301fede and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xb28af5a7ce47c and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe25005f59ed49d; op2val:0xbfe7baabb301fede; op3val:0x3fdb28af5a7ce47c; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 960, x18)

inst_696:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf88b862480473 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xcc941cc2e908c and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xc5df4f3145a50 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef88b862480473; op2val:0xbfccc941cc2e908c; op3val:0x3fcc5df4f3145a50; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 976, x18)

inst_697:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf88b862480473 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xcc941cc2e908c and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xc5df4f3145a50 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef88b862480473; op2val:0xbfccc941cc2e908c; op3val:0x3fcc5df4f3145a50; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 992, x18)

inst_698:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf88b862480473 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xcc941cc2e908c and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xc5df4f3145a50 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef88b862480473; op2val:0xbfccc941cc2e908c; op3val:0x3fcc5df4f3145a50; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 1008, x18)

inst_699:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf88b862480473 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xcc941cc2e908c and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xc5df4f3145a50 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef88b862480473; op2val:0xbfccc941cc2e908c; op3val:0x3fcc5df4f3145a50; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 1024, x18)

inst_700:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf88b862480473 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xcc941cc2e908c and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xc5df4f3145a50 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef88b862480473; op2val:0xbfccc941cc2e908c; op3val:0x3fcc5df4f3145a50; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1040, x18)

inst_701:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xcafed2a00a670 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x03861b49e4d1d and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xd1504167876fc and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbcafed2a00a670; op2val:0xc0103861b49e4d1d; op3val:0x3fdd1504167876fc; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 1056, x18)

inst_702:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xcafed2a00a670 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x03861b49e4d1d and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xd1504167876fc and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbcafed2a00a670; op2val:0xc0103861b49e4d1d; op3val:0x3fdd1504167876fc; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 1072, x18)

inst_703:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xcafed2a00a670 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x03861b49e4d1d and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xd1504167876fc and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbcafed2a00a670; op2val:0xc0103861b49e4d1d; op3val:0x3fdd1504167876fc; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 1088, x18)

inst_704:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xcafed2a00a670 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x03861b49e4d1d and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xd1504167876fc and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbcafed2a00a670; op2val:0xc0103861b49e4d1d; op3val:0x3fdd1504167876fc; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 1104, x18)

inst_705:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xcafed2a00a670 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x03861b49e4d1d and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xd1504167876fc and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbcafed2a00a670; op2val:0xc0103861b49e4d1d; op3val:0x3fdd1504167876fc; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1120, x18)

inst_706:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x16b9cc541cf3e and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x39dabc0c83239 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x55b751c8e8920 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe16b9cc541cf3e; op2val:0xbfc39dabc0c83239; op3val:0x3fb55b751c8e8920; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 1136, x18)

inst_707:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x16b9cc541cf3e and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x39dabc0c83239 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x55b751c8e8920 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe16b9cc541cf3e; op2val:0xbfc39dabc0c83239; op3val:0x3fb55b751c8e8920; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 1152, x18)

inst_708:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x16b9cc541cf3e and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x39dabc0c83239 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x55b751c8e8920 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe16b9cc541cf3e; op2val:0xbfc39dabc0c83239; op3val:0x3fb55b751c8e8920; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 1168, x18)

inst_709:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x16b9cc541cf3e and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x39dabc0c83239 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x55b751c8e8920 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe16b9cc541cf3e; op2val:0xbfc39dabc0c83239; op3val:0x3fb55b751c8e8920; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 1184, x18)

inst_710:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x16b9cc541cf3e and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x39dabc0c83239 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x55b751c8e8920 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe16b9cc541cf3e; op2val:0xbfc39dabc0c83239; op3val:0x3fb55b751c8e8920; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1200, x18)

inst_711:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xed59307fd1886 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x8d3ae8a06b877 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7ec26b5c97e8b and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feed59307fd1886; op2val:0xbfe8d3ae8a06b877; op3val:0x3fe7ec26b5c97e8b; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 1216, x18)

inst_712:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xed59307fd1886 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x8d3ae8a06b877 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7ec26b5c97e8b and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feed59307fd1886; op2val:0xbfe8d3ae8a06b877; op3val:0x3fe7ec26b5c97e8b; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 1232, x18)

inst_713:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xed59307fd1886 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x8d3ae8a06b877 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7ec26b5c97e8b and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feed59307fd1886; op2val:0xbfe8d3ae8a06b877; op3val:0x3fe7ec26b5c97e8b; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 1248, x18)

inst_714:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xed59307fd1886 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x8d3ae8a06b877 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7ec26b5c97e8b and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feed59307fd1886; op2val:0xbfe8d3ae8a06b877; op3val:0x3fe7ec26b5c97e8b; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 1264, x18)

inst_715:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xed59307fd1886 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x8d3ae8a06b877 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7ec26b5c97e8b and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feed59307fd1886; op2val:0xbfe8d3ae8a06b877; op3val:0x3fe7ec26b5c97e8b; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1280, x18)

inst_716:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x051a3717fb7ac and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x9ad3e29325ef4 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xa30417ef0ae88 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd051a3717fb7ac; op2val:0xbff9ad3e29325ef4; op3val:0x3fda30417ef0ae88; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 1296, x18)

inst_717:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x051a3717fb7ac and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x9ad3e29325ef4 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xa30417ef0ae88 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd051a3717fb7ac; op2val:0xbff9ad3e29325ef4; op3val:0x3fda30417ef0ae88; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 1312, x18)

inst_718:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x051a3717fb7ac and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x9ad3e29325ef4 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xa30417ef0ae88 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd051a3717fb7ac; op2val:0xbff9ad3e29325ef4; op3val:0x3fda30417ef0ae88; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 1328, x18)

inst_719:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x051a3717fb7ac and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x9ad3e29325ef4 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xa30417ef0ae88 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd051a3717fb7ac; op2val:0xbff9ad3e29325ef4; op3val:0x3fda30417ef0ae88; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 1344, x18)

inst_720:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x051a3717fb7ac and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x9ad3e29325ef4 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xa30417ef0ae88 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd051a3717fb7ac; op2val:0xbff9ad3e29325ef4; op3val:0x3fda30417ef0ae88; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 1360, x18)

inst_721:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x124274699d746 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x315df80cf1ea5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4725d8945e053 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe124274699d746; op2val:0xbff315df80cf1ea5; op3val:0x3fe4725d8945e053; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 1376, x18)

inst_722:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x124274699d746 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x315df80cf1ea5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4725d8945e053 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe124274699d746; op2val:0xbff315df80cf1ea5; op3val:0x3fe4725d8945e053; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 1392, x18)

inst_723:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x124274699d746 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x315df80cf1ea5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4725d8945e053 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe124274699d746; op2val:0xbff315df80cf1ea5; op3val:0x3fe4725d8945e053; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 1408, x18)

inst_724:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x124274699d746 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x315df80cf1ea5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4725d8945e053 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe124274699d746; op2val:0xbff315df80cf1ea5; op3val:0x3fe4725d8945e053; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 1424, x18)

inst_725:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x124274699d746 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x315df80cf1ea5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4725d8945e053 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe124274699d746; op2val:0xbff315df80cf1ea5; op3val:0x3fe4725d8945e053; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 1440, x18)

inst_726:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6806ecd132c64 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x565076b5f94aa and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xe16a697c97da4 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe6806ecd132c64; op2val:0xbfe565076b5f94aa; op3val:0x3fde16a697c97da4; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 1456, x18)

inst_727:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6806ecd132c64 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x565076b5f94aa and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xe16a697c97da4 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe6806ecd132c64; op2val:0xbfe565076b5f94aa; op3val:0x3fde16a697c97da4; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 1472, x18)

inst_728:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6806ecd132c64 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x565076b5f94aa and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xe16a697c97da4 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe6806ecd132c64; op2val:0xbfe565076b5f94aa; op3val:0x3fde16a697c97da4; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 1488, x18)

inst_729:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6806ecd132c64 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x565076b5f94aa and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xe16a697c97da4 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe6806ecd132c64; op2val:0xbfe565076b5f94aa; op3val:0x3fde16a697c97da4; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 1504, x18)

inst_730:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6806ecd132c64 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x565076b5f94aa and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xe16a697c97da4 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe6806ecd132c64; op2val:0xbfe565076b5f94aa; op3val:0x3fde16a697c97da4; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 1520, x18)

inst_731:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xddb2b8a55f5ca and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x6c502ce887dc1 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x53e7dd18bb3e9 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdddb2b8a55f5ca; op2val:0xbff6c502ce887dc1; op3val:0x3fe53e7dd18bb3e9; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 1536, x18)

inst_732:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xddb2b8a55f5ca and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x6c502ce887dc1 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x53e7dd18bb3e9 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdddb2b8a55f5ca; op2val:0xbff6c502ce887dc1; op3val:0x3fe53e7dd18bb3e9; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 1552, x18)

inst_733:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xddb2b8a55f5ca and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x6c502ce887dc1 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x53e7dd18bb3e9 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdddb2b8a55f5ca; op2val:0xbff6c502ce887dc1; op3val:0x3fe53e7dd18bb3e9; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 1568, x18)

inst_734:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xddb2b8a55f5ca and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x6c502ce887dc1 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x53e7dd18bb3e9 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdddb2b8a55f5ca; op2val:0xbff6c502ce887dc1; op3val:0x3fe53e7dd18bb3e9; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 1584, x18)

inst_735:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xddb2b8a55f5ca and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x6c502ce887dc1 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x53e7dd18bb3e9 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdddb2b8a55f5ca; op2val:0xbff6c502ce887dc1; op3val:0x3fe53e7dd18bb3e9; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 1600, x18)

inst_736:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xeab418dfbc584 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x75960759ecf87 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x660bfdedee050 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fceab418dfbc584; op2val:0xc0075960759ecf87; op3val:0x3fe660bfdedee050; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 1616, x18)

inst_737:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xeab418dfbc584 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x75960759ecf87 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x660bfdedee050 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fceab418dfbc584; op2val:0xc0075960759ecf87; op3val:0x3fe660bfdedee050; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 1632, x18)

inst_738:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xeab418dfbc584 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x75960759ecf87 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x660bfdedee050 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fceab418dfbc584; op2val:0xc0075960759ecf87; op3val:0x3fe660bfdedee050; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 1648, x18)

inst_739:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xeab418dfbc584 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x75960759ecf87 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x660bfdedee050 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fceab418dfbc584; op2val:0xc0075960759ecf87; op3val:0x3fe660bfdedee050; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 1664, x18)

inst_740:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xeab418dfbc584 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x75960759ecf87 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x660bfdedee050 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fceab418dfbc584; op2val:0xc0075960759ecf87; op3val:0x3fe660bfdedee050; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 1680, x18)

inst_741:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x06aef38d708ca and fs2 == 1 and fe2 == 0x400 and fm2 == 0xb8014fa0baa71 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc37e0afef7069 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd06aef38d708ca; op2val:0xc00b8014fa0baa71; op3val:0x3fec37e0afef7069; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 1696, x18)

inst_742:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x06aef38d708ca and fs2 == 1 and fe2 == 0x400 and fm2 == 0xb8014fa0baa71 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc37e0afef7069 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd06aef38d708ca; op2val:0xc00b8014fa0baa71; op3val:0x3fec37e0afef7069; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 1712, x18)

inst_743:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x06aef38d708ca and fs2 == 1 and fe2 == 0x400 and fm2 == 0xb8014fa0baa71 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc37e0afef7069 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd06aef38d708ca; op2val:0xc00b8014fa0baa71; op3val:0x3fec37e0afef7069; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 1728, x18)

inst_744:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x06aef38d708ca and fs2 == 1 and fe2 == 0x400 and fm2 == 0xb8014fa0baa71 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc37e0afef7069 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd06aef38d708ca; op2val:0xc00b8014fa0baa71; op3val:0x3fec37e0afef7069; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 1744, x18)

inst_745:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x06aef38d708ca and fs2 == 1 and fe2 == 0x400 and fm2 == 0xb8014fa0baa71 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc37e0afef7069 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd06aef38d708ca; op2val:0xc00b8014fa0baa71; op3val:0x3fec37e0afef7069; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1760, x18)

inst_746:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x6ba57611796f6 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1d928b36a937e and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x95a75e8f468a4 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd6ba57611796f6; op2val:0xbff1d928b36a937e; op3val:0x3fd95a75e8f468a4; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 1776, x18)

inst_747:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x6ba57611796f6 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1d928b36a937e and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x95a75e8f468a4 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd6ba57611796f6; op2val:0xbff1d928b36a937e; op3val:0x3fd95a75e8f468a4; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 1792, x18)

inst_748:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x6ba57611796f6 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1d928b36a937e and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x95a75e8f468a4 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd6ba57611796f6; op2val:0xbff1d928b36a937e; op3val:0x3fd95a75e8f468a4; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 1808, x18)

inst_749:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x6ba57611796f6 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1d928b36a937e and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x95a75e8f468a4 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd6ba57611796f6; op2val:0xbff1d928b36a937e; op3val:0x3fd95a75e8f468a4; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 1824, x18)

inst_750:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x6ba57611796f6 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1d928b36a937e and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x95a75e8f468a4 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd6ba57611796f6; op2val:0xbff1d928b36a937e; op3val:0x3fd95a75e8f468a4; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1840, x18)

inst_751:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x915e9800f64ec and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x572178cb1bced and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0cfd1c1ed57fc and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd915e9800f64ec; op2val:0xbff572178cb1bced; op3val:0x3fe0cfd1c1ed57fc; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 1856, x18)

inst_752:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x915e9800f64ec and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x572178cb1bced and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0cfd1c1ed57fc and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd915e9800f64ec; op2val:0xbff572178cb1bced; op3val:0x3fe0cfd1c1ed57fc; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 1872, x18)

inst_753:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x915e9800f64ec and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x572178cb1bced and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0cfd1c1ed57fc and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd915e9800f64ec; op2val:0xbff572178cb1bced; op3val:0x3fe0cfd1c1ed57fc; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 1888, x18)

inst_754:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x915e9800f64ec and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x572178cb1bced and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0cfd1c1ed57fc and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd915e9800f64ec; op2val:0xbff572178cb1bced; op3val:0x3fe0cfd1c1ed57fc; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 1904, x18)

inst_755:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x915e9800f64ec and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x572178cb1bced and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0cfd1c1ed57fc and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd915e9800f64ec; op2val:0xbff572178cb1bced; op3val:0x3fe0cfd1c1ed57fc; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1920, x18)

inst_756:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x6e2cfb6da7d40 and fs2 == 1 and fe2 == 0x404 and fm2 == 0xfa01150dafc84 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x69e33aa07ebf5 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f86e2cfb6da7d40; op2val:0xc04fa01150dafc84; op3val:0x3fe69e33aa07ebf5; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 1936, x18)

inst_757:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x6e2cfb6da7d40 and fs2 == 1 and fe2 == 0x404 and fm2 == 0xfa01150dafc84 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x69e33aa07ebf5 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f86e2cfb6da7d40; op2val:0xc04fa01150dafc84; op3val:0x3fe69e33aa07ebf5; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 1952, x18)

inst_758:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x6e2cfb6da7d40 and fs2 == 1 and fe2 == 0x404 and fm2 == 0xfa01150dafc84 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x69e33aa07ebf5 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f86e2cfb6da7d40; op2val:0xc04fa01150dafc84; op3val:0x3fe69e33aa07ebf5; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 1968, x18)

inst_759:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x6e2cfb6da7d40 and fs2 == 1 and fe2 == 0x404 and fm2 == 0xfa01150dafc84 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x69e33aa07ebf5 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f86e2cfb6da7d40; op2val:0xc04fa01150dafc84; op3val:0x3fe69e33aa07ebf5; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 1984, x18)

inst_760:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0x6e2cfb6da7d40 and fs2 == 1 and fe2 == 0x404 and fm2 == 0xfa01150dafc84 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x69e33aa07ebf5 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f86e2cfb6da7d40; op2val:0xc04fa01150dafc84; op3val:0x3fe69e33aa07ebf5; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 2000, x18)

inst_761:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x76f18809fd504 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x2779b06c88f8c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb0c28e51d3a91 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe76f18809fd504; op2val:0xbff2779b06c88f8c; op3val:0x3feb0c28e51d3a91; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_7)

inst_762:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x76f18809fd504 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x2779b06c88f8c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb0c28e51d3a91 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe76f18809fd504; op2val:0xbff2779b06c88f8c; op3val:0x3feb0c28e51d3a91; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 0, x18)

inst_763:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x76f18809fd504 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x2779b06c88f8c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb0c28e51d3a91 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe76f18809fd504; op2val:0xbff2779b06c88f8c; op3val:0x3feb0c28e51d3a91; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 16, x18)

inst_764:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x76f18809fd504 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x2779b06c88f8c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb0c28e51d3a91 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe76f18809fd504; op2val:0xbff2779b06c88f8c; op3val:0x3feb0c28e51d3a91; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 32, x18)
addi x16,x16,2040

inst_765:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x76f18809fd504 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x2779b06c88f8c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb0c28e51d3a91 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe76f18809fd504; op2val:0xbff2779b06c88f8c; op3val:0x3feb0c28e51d3a91; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 48, x18)

inst_766:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xbea76af696b44 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xbaba0b6d3ec94 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x8238d420a1e4c and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcbea76af696b44; op2val:0xc00baba0b6d3ec94; op3val:0x3fe8238d420a1e4c; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 64, x18)

inst_767:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xbea76af696b44 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xbaba0b6d3ec94 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x8238d420a1e4c and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcbea76af696b44; op2val:0xc00baba0b6d3ec94; op3val:0x3fe8238d420a1e4c; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 80, x18)

inst_768:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xbea76af696b44 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xbaba0b6d3ec94 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x8238d420a1e4c and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcbea76af696b44; op2val:0xc00baba0b6d3ec94; op3val:0x3fe8238d420a1e4c; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 96, x18)

inst_769:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xbea76af696b44 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xbaba0b6d3ec94 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x8238d420a1e4c and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcbea76af696b44; op2val:0xc00baba0b6d3ec94; op3val:0x3fe8238d420a1e4c; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 112, x18)

inst_770:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xbea76af696b44 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xbaba0b6d3ec94 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x8238d420a1e4c and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcbea76af696b44; op2val:0xc00baba0b6d3ec94; op3val:0x3fe8238d420a1e4c; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 128, x18)

inst_771:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x73d21bf06af59 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x6d2fd1c847ca5 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x0934030d2b6f0 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe73d21bf06af59; op2val:0xbfb6d2fd1c847ca5; op3val:0x3fb0934030d2b6f0; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 144, x18)

inst_772:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x73d21bf06af59 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x6d2fd1c847ca5 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x0934030d2b6f0 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe73d21bf06af59; op2val:0xbfb6d2fd1c847ca5; op3val:0x3fb0934030d2b6f0; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 160, x18)

inst_773:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x73d21bf06af59 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x6d2fd1c847ca5 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x0934030d2b6f0 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe73d21bf06af59; op2val:0xbfb6d2fd1c847ca5; op3val:0x3fb0934030d2b6f0; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 176, x18)

inst_774:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x73d21bf06af59 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x6d2fd1c847ca5 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x0934030d2b6f0 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe73d21bf06af59; op2val:0xbfb6d2fd1c847ca5; op3val:0x3fb0934030d2b6f0; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 192, x18)

inst_775:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x73d21bf06af59 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x6d2fd1c847ca5 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x0934030d2b6f0 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe73d21bf06af59; op2val:0xbfb6d2fd1c847ca5; op3val:0x3fb0934030d2b6f0; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 208, x18)

inst_776:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf93d6ae142d22 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xe50ee3cdf6e97 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xdea75f384795e and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef93d6ae142d22; op2val:0xbfde50ee3cdf6e97; op3val:0x3fddea75f384795e; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 224, x18)

inst_777:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf93d6ae142d22 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xe50ee3cdf6e97 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xdea75f384795e and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef93d6ae142d22; op2val:0xbfde50ee3cdf6e97; op3val:0x3fddea75f384795e; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 240, x18)

inst_778:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf93d6ae142d22 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xe50ee3cdf6e97 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xdea75f384795e and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef93d6ae142d22; op2val:0xbfde50ee3cdf6e97; op3val:0x3fddea75f384795e; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 256, x18)

inst_779:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf93d6ae142d22 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xe50ee3cdf6e97 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xdea75f384795e and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef93d6ae142d22; op2val:0xbfde50ee3cdf6e97; op3val:0x3fddea75f384795e; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 272, x18)

inst_780:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf93d6ae142d22 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xe50ee3cdf6e97 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xdea75f384795e and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef93d6ae142d22; op2val:0xbfde50ee3cdf6e97; op3val:0x3fddea75f384795e; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 288, x18)

inst_781:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xbf10c4dd12410 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x9638cee872761 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x62b3e69b8c678 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcbf10c4dd12410; op2val:0xbfe9638cee872761; op3val:0x3fc62b3e69b8c678; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 304, x18)

inst_782:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xbf10c4dd12410 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x9638cee872761 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x62b3e69b8c678 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcbf10c4dd12410; op2val:0xbfe9638cee872761; op3val:0x3fc62b3e69b8c678; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 320, x18)

inst_783:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xbf10c4dd12410 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x9638cee872761 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x62b3e69b8c678 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcbf10c4dd12410; op2val:0xbfe9638cee872761; op3val:0x3fc62b3e69b8c678; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 336, x18)

inst_784:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xbf10c4dd12410 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x9638cee872761 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x62b3e69b8c678 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcbf10c4dd12410; op2val:0xbfe9638cee872761; op3val:0x3fc62b3e69b8c678; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 352, x18)

inst_785:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xbf10c4dd12410 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x9638cee872761 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x62b3e69b8c678 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcbf10c4dd12410; op2val:0xbfe9638cee872761; op3val:0x3fc62b3e69b8c678; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 368, x18)

inst_786:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1cf1cf7049b92 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x452a96e7f1ea4 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x69ee63fd71067 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1cf1cf7049b92; op2val:0xbff452a96e7f1ea4; op3val:0x3fe69ee63fd71067; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 384, x18)

inst_787:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1cf1cf7049b92 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x452a96e7f1ea4 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x69ee63fd71067 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1cf1cf7049b92; op2val:0xbff452a96e7f1ea4; op3val:0x3fe69ee63fd71067; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 400, x18)

inst_788:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1cf1cf7049b92 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x452a96e7f1ea4 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x69ee63fd71067 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1cf1cf7049b92; op2val:0xbff452a96e7f1ea4; op3val:0x3fe69ee63fd71067; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 416, x18)

inst_789:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1cf1cf7049b92 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x452a96e7f1ea4 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x69ee63fd71067 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1cf1cf7049b92; op2val:0xbff452a96e7f1ea4; op3val:0x3fe69ee63fd71067; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 432, x18)

inst_790:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1cf1cf7049b92 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x452a96e7f1ea4 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x69ee63fd71067 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1cf1cf7049b92; op2val:0xbff452a96e7f1ea4; op3val:0x3fe69ee63fd71067; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 448, x18)

inst_791:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc1982815c1989 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xb92a2a2627b7c and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x83649505037e0 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec1982815c1989; op2val:0xbfdb92a2a2627b7c; op3val:0x3fd83649505037e0; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 464, x18)

inst_792:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc1982815c1989 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xb92a2a2627b7c and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x83649505037e0 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec1982815c1989; op2val:0xbfdb92a2a2627b7c; op3val:0x3fd83649505037e0; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 480, x18)

inst_793:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc1982815c1989 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xb92a2a2627b7c and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x83649505037e0 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec1982815c1989; op2val:0xbfdb92a2a2627b7c; op3val:0x3fd83649505037e0; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 496, x18)

inst_794:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc1982815c1989 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xb92a2a2627b7c and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x83649505037e0 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec1982815c1989; op2val:0xbfdb92a2a2627b7c; op3val:0x3fd83649505037e0; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 512, x18)

inst_795:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc1982815c1989 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xb92a2a2627b7c and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x83649505037e0 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec1982815c1989; op2val:0xbfdb92a2a2627b7c; op3val:0x3fd83649505037e0; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 528, x18)

inst_796:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6d5d31f6d4504 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x774aba47a229a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0bcf157e7a78c and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe6d5d31f6d4504; op2val:0xbfe774aba47a229a; op3val:0x3fe0bcf157e7a78c; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 544, x18)

inst_797:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6d5d31f6d4504 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x774aba47a229a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0bcf157e7a78c and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe6d5d31f6d4504; op2val:0xbfe774aba47a229a; op3val:0x3fe0bcf157e7a78c; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 560, x18)

inst_798:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6d5d31f6d4504 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x774aba47a229a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0bcf157e7a78c and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe6d5d31f6d4504; op2val:0xbfe774aba47a229a; op3val:0x3fe0bcf157e7a78c; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 576, x18)

inst_799:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6d5d31f6d4504 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x774aba47a229a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0bcf157e7a78c and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe6d5d31f6d4504; op2val:0xbfe774aba47a229a; op3val:0x3fe0bcf157e7a78c; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 592, x18)

inst_800:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6d5d31f6d4504 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x774aba47a229a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0bcf157e7a78c and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe6d5d31f6d4504; op2val:0xbfe774aba47a229a; op3val:0x3fe0bcf157e7a78c; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 608, x18)

inst_801:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x019d158a43820 and fs2 == 1 and fe2 == 0x404 and fm2 == 0x029775a9993e2 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0438b9c48257a and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f9019d158a43820; op2val:0xc04029775a9993e2; op3val:0x3fe0438b9c48257a; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 624, x18)

inst_802:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x019d158a43820 and fs2 == 1 and fe2 == 0x404 and fm2 == 0x029775a9993e2 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0438b9c48257a and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f9019d158a43820; op2val:0xc04029775a9993e2; op3val:0x3fe0438b9c48257a; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 640, x18)

inst_803:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x019d158a43820 and fs2 == 1 and fe2 == 0x404 and fm2 == 0x029775a9993e2 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0438b9c48257a and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f9019d158a43820; op2val:0xc04029775a9993e2; op3val:0x3fe0438b9c48257a; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 656, x18)

inst_804:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x019d158a43820 and fs2 == 1 and fe2 == 0x404 and fm2 == 0x029775a9993e2 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0438b9c48257a and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f9019d158a43820; op2val:0xc04029775a9993e2; op3val:0x3fe0438b9c48257a; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 672, x18)

inst_805:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x019d158a43820 and fs2 == 1 and fe2 == 0x404 and fm2 == 0x029775a9993e2 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0438b9c48257a and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f9019d158a43820; op2val:0xc04029775a9993e2; op3val:0x3fe0438b9c48257a; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 688, x18)

inst_806:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2b44ab7ebdb49 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x2a31b36a2fbbd and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x5c980983823c5 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe2b44ab7ebdb49; op2val:0xbff2a31b36a2fbbd; op3val:0x3fe5c980983823c5; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 704, x18)

inst_807:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2b44ab7ebdb49 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x2a31b36a2fbbd and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x5c980983823c5 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe2b44ab7ebdb49; op2val:0xbff2a31b36a2fbbd; op3val:0x3fe5c980983823c5; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 720, x18)

inst_808:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2b44ab7ebdb49 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x2a31b36a2fbbd and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x5c980983823c5 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe2b44ab7ebdb49; op2val:0xbff2a31b36a2fbbd; op3val:0x3fe5c980983823c5; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 736, x18)

inst_809:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2b44ab7ebdb49 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x2a31b36a2fbbd and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x5c980983823c5 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe2b44ab7ebdb49; op2val:0xbff2a31b36a2fbbd; op3val:0x3fe5c980983823c5; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 752, x18)

inst_810:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x2b44ab7ebdb49 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x2a31b36a2fbbd and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x5c980983823c5 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe2b44ab7ebdb49; op2val:0xbff2a31b36a2fbbd; op3val:0x3fe5c980983823c5; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 768, x18)

inst_811:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x379d4d97f4c20 and fs2 == 1 and fe2 == 0x403 and fm2 == 0xa7baf4b5f257c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x01e43eafee7f5 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f9379d4d97f4c20; op2val:0xc03a7baf4b5f257c; op3val:0x3fe01e43eafee7f5; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 784, x18)

inst_812:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x379d4d97f4c20 and fs2 == 1 and fe2 == 0x403 and fm2 == 0xa7baf4b5f257c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x01e43eafee7f5 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f9379d4d97f4c20; op2val:0xc03a7baf4b5f257c; op3val:0x3fe01e43eafee7f5; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 800, x18)

inst_813:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x379d4d97f4c20 and fs2 == 1 and fe2 == 0x403 and fm2 == 0xa7baf4b5f257c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x01e43eafee7f5 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f9379d4d97f4c20; op2val:0xc03a7baf4b5f257c; op3val:0x3fe01e43eafee7f5; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 816, x18)

inst_814:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x379d4d97f4c20 and fs2 == 1 and fe2 == 0x403 and fm2 == 0xa7baf4b5f257c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x01e43eafee7f5 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f9379d4d97f4c20; op2val:0xc03a7baf4b5f257c; op3val:0x3fe01e43eafee7f5; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 832, x18)

inst_815:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x379d4d97f4c20 and fs2 == 1 and fe2 == 0x403 and fm2 == 0xa7baf4b5f257c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x01e43eafee7f5 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f9379d4d97f4c20; op2val:0xc03a7baf4b5f257c; op3val:0x3fe01e43eafee7f5; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 848, x18)

inst_816:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x9de3fd33f96e2 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xd4cd2f1d63a99 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7af843509306d and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd9de3fd33f96e2; op2val:0xbffd4cd2f1d63a99; op3val:0x3fe7af843509306d; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 864, x18)

inst_817:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x9de3fd33f96e2 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xd4cd2f1d63a99 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7af843509306d and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd9de3fd33f96e2; op2val:0xbffd4cd2f1d63a99; op3val:0x3fe7af843509306d; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 880, x18)

inst_818:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x9de3fd33f96e2 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xd4cd2f1d63a99 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7af843509306d and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd9de3fd33f96e2; op2val:0xbffd4cd2f1d63a99; op3val:0x3fe7af843509306d; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 896, x18)

inst_819:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x9de3fd33f96e2 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xd4cd2f1d63a99 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7af843509306d and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd9de3fd33f96e2; op2val:0xbffd4cd2f1d63a99; op3val:0x3fe7af843509306d; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 912, x18)

inst_820:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x9de3fd33f96e2 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xd4cd2f1d63a99 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7af843509306d and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd9de3fd33f96e2; op2val:0xbffd4cd2f1d63a99; op3val:0x3fe7af843509306d; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 928, x18)

inst_821:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x3e593894842d0 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x1c19624476968 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x614a8bae93f70 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fa3e593894842d0; op2val:0xc001c19624476968; op3val:0x3fb614a8bae93f70; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 944, x18)

inst_822:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x3e593894842d0 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x1c19624476968 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x614a8bae93f70 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fa3e593894842d0; op2val:0xc001c19624476968; op3val:0x3fb614a8bae93f70; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 960, x18)

inst_823:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x3e593894842d0 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x1c19624476968 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x614a8bae93f70 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fa3e593894842d0; op2val:0xc001c19624476968; op3val:0x3fb614a8bae93f70; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 976, x18)

inst_824:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x3e593894842d0 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x1c19624476968 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x614a8bae93f70 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fa3e593894842d0; op2val:0xc001c19624476968; op3val:0x3fb614a8bae93f70; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 992, x18)

inst_825:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x3e593894842d0 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x1c19624476968 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x614a8bae93f70 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fa3e593894842d0; op2val:0xc001c19624476968; op3val:0x3fb614a8bae93f70; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 1008, x18)

inst_826:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0xc34daa5567940 and fs2 == 1 and fe2 == 0x403 and fm2 == 0x6842b48723e01 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x3d8d67e76e523 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f9c34daa5567940; op2val:0xc036842b48723e01; op3val:0x3fe3d8d67e76e523; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 1024, x18)

inst_827:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0xc34daa5567940 and fs2 == 1 and fe2 == 0x403 and fm2 == 0x6842b48723e01 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x3d8d67e76e523 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f9c34daa5567940; op2val:0xc036842b48723e01; op3val:0x3fe3d8d67e76e523; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 1040, x18)

inst_828:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0xc34daa5567940 and fs2 == 1 and fe2 == 0x403 and fm2 == 0x6842b48723e01 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x3d8d67e76e523 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f9c34daa5567940; op2val:0xc036842b48723e01; op3val:0x3fe3d8d67e76e523; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 1056, x18)

inst_829:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0xc34daa5567940 and fs2 == 1 and fe2 == 0x403 and fm2 == 0x6842b48723e01 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x3d8d67e76e523 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f9c34daa5567940; op2val:0xc036842b48723e01; op3val:0x3fe3d8d67e76e523; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 1072, x18)

inst_830:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0xc34daa5567940 and fs2 == 1 and fe2 == 0x403 and fm2 == 0x6842b48723e01 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x3d8d67e76e523 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f9c34daa5567940; op2val:0xc036842b48723e01; op3val:0x3fe3d8d67e76e523; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1088, x18)

inst_831:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8c1db4a06bf7a and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd4e0fe5912194 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6ac138e14ea5a and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8c1db4a06bf7a; op2val:0xbfed4e0fe5912194; op3val:0x3fe6ac138e14ea5a; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 1104, x18)

inst_832:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8c1db4a06bf7a and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd4e0fe5912194 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6ac138e14ea5a and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8c1db4a06bf7a; op2val:0xbfed4e0fe5912194; op3val:0x3fe6ac138e14ea5a; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 1120, x18)

inst_833:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8c1db4a06bf7a and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd4e0fe5912194 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6ac138e14ea5a and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8c1db4a06bf7a; op2val:0xbfed4e0fe5912194; op3val:0x3fe6ac138e14ea5a; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 1136, x18)

inst_834:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8c1db4a06bf7a and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd4e0fe5912194 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6ac138e14ea5a and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8c1db4a06bf7a; op2val:0xbfed4e0fe5912194; op3val:0x3fe6ac138e14ea5a; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 1152, x18)

inst_835:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8c1db4a06bf7a and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd4e0fe5912194 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6ac138e14ea5a and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8c1db4a06bf7a; op2val:0xbfed4e0fe5912194; op3val:0x3fe6ac138e14ea5a; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1168, x18)

inst_836:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3f90cfa487f90 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd23288c9dfe30 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x22fa57817e116 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3f90cfa487f90; op2val:0xbfed23288c9dfe30; op3val:0x3fe22fa57817e116; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 1184, x18)

inst_837:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3f90cfa487f90 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd23288c9dfe30 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x22fa57817e116 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3f90cfa487f90; op2val:0xbfed23288c9dfe30; op3val:0x3fe22fa57817e116; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 1200, x18)

inst_838:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3f90cfa487f90 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd23288c9dfe30 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x22fa57817e116 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3f90cfa487f90; op2val:0xbfed23288c9dfe30; op3val:0x3fe22fa57817e116; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 1216, x18)

inst_839:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3f90cfa487f90 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd23288c9dfe30 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x22fa57817e116 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3f90cfa487f90; op2val:0xbfed23288c9dfe30; op3val:0x3fe22fa57817e116; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 1232, x18)

inst_840:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3f90cfa487f90 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd23288c9dfe30 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x22fa57817e116 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3f90cfa487f90; op2val:0xbfed23288c9dfe30; op3val:0x3fe22fa57817e116; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1248, x18)

inst_841:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x7b6fcf0fcedbc and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x2c718ae550cf2 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xbd4f50df14cc8 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd7b6fcf0fcedbc; op2val:0xbfd2c718ae550cf2; op3val:0x3fbbd4f50df14cc8; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 1264, x18)

inst_842:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x7b6fcf0fcedbc and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x2c718ae550cf2 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xbd4f50df14cc8 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd7b6fcf0fcedbc; op2val:0xbfd2c718ae550cf2; op3val:0x3fbbd4f50df14cc8; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 1280, x18)

inst_843:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x7b6fcf0fcedbc and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x2c718ae550cf2 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xbd4f50df14cc8 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd7b6fcf0fcedbc; op2val:0xbfd2c718ae550cf2; op3val:0x3fbbd4f50df14cc8; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 1296, x18)

inst_844:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x7b6fcf0fcedbc and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x2c718ae550cf2 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xbd4f50df14cc8 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd7b6fcf0fcedbc; op2val:0xbfd2c718ae550cf2; op3val:0x3fbbd4f50df14cc8; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 1312, x18)

inst_845:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x7b6fcf0fcedbc and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x2c718ae550cf2 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xbd4f50df14cc8 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd7b6fcf0fcedbc; op2val:0xbfd2c718ae550cf2; op3val:0x3fbbd4f50df14cc8; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1328, x18)

inst_846:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8a1163baf42ae and fs2 == 1 and fe2 == 0x400 and fm2 == 0x1dd05e3460388 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb7f61b2b2bfe9 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd8a1163baf42ae; op2val:0xc001dd05e3460388; op3val:0x3feb7f61b2b2bfe9; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 1344, x18)

inst_847:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8a1163baf42ae and fs2 == 1 and fe2 == 0x400 and fm2 == 0x1dd05e3460388 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb7f61b2b2bfe9 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd8a1163baf42ae; op2val:0xc001dd05e3460388; op3val:0x3feb7f61b2b2bfe9; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 1360, x18)

inst_848:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8a1163baf42ae and fs2 == 1 and fe2 == 0x400 and fm2 == 0x1dd05e3460388 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb7f61b2b2bfe9 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd8a1163baf42ae; op2val:0xc001dd05e3460388; op3val:0x3feb7f61b2b2bfe9; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 1376, x18)

inst_849:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8a1163baf42ae and fs2 == 1 and fe2 == 0x400 and fm2 == 0x1dd05e3460388 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb7f61b2b2bfe9 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd8a1163baf42ae; op2val:0xc001dd05e3460388; op3val:0x3feb7f61b2b2bfe9; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 1392, x18)
addi x16,x16,2040

inst_850:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8a1163baf42ae and fs2 == 1 and fe2 == 0x400 and fm2 == 0x1dd05e3460388 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb7f61b2b2bfe9 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd8a1163baf42ae; op2val:0xc001dd05e3460388; op3val:0x3feb7f61b2b2bfe9; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 1408, x18)

inst_851:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc8beed6b22201 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xf264f6fa67af6 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xbc9bc68ab0e92 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec8beed6b22201; op2val:0xbfdf264f6fa67af6; op3val:0x3fdbc9bc68ab0e92; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 1424, x18)

inst_852:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc8beed6b22201 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xf264f6fa67af6 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xbc9bc68ab0e92 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec8beed6b22201; op2val:0xbfdf264f6fa67af6; op3val:0x3fdbc9bc68ab0e92; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 1440, x18)

inst_853:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc8beed6b22201 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xf264f6fa67af6 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xbc9bc68ab0e92 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec8beed6b22201; op2val:0xbfdf264f6fa67af6; op3val:0x3fdbc9bc68ab0e92; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 1456, x18)

inst_854:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc8beed6b22201 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xf264f6fa67af6 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xbc9bc68ab0e92 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec8beed6b22201; op2val:0xbfdf264f6fa67af6; op3val:0x3fdbc9bc68ab0e92; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 1472, x18)

inst_855:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc8beed6b22201 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xf264f6fa67af6 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xbc9bc68ab0e92 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec8beed6b22201; op2val:0xbfdf264f6fa67af6; op3val:0x3fdbc9bc68ab0e92; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 1488, x18)

inst_856:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xb45bf2ad3b180 and fs2 == 1 and fe2 == 0x402 and fm2 == 0x2c1780a1cad44 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xff83cfe78fb50 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbb45bf2ad3b180; op2val:0xc022c1780a1cad44; op3val:0x3feff83cfe78fb50; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 1504, x18)

inst_857:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xb45bf2ad3b180 and fs2 == 1 and fe2 == 0x402 and fm2 == 0x2c1780a1cad44 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xff83cfe78fb50 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbb45bf2ad3b180; op2val:0xc022c1780a1cad44; op3val:0x3feff83cfe78fb50; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 1520, x18)

inst_858:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xb45bf2ad3b180 and fs2 == 1 and fe2 == 0x402 and fm2 == 0x2c1780a1cad44 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xff83cfe78fb50 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbb45bf2ad3b180; op2val:0xc022c1780a1cad44; op3val:0x3feff83cfe78fb50; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 1536, x18)

inst_859:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xb45bf2ad3b180 and fs2 == 1 and fe2 == 0x402 and fm2 == 0x2c1780a1cad44 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xff83cfe78fb50 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbb45bf2ad3b180; op2val:0xc022c1780a1cad44; op3val:0x3feff83cfe78fb50; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 1552, x18)

inst_860:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xb45bf2ad3b180 and fs2 == 1 and fe2 == 0x402 and fm2 == 0x2c1780a1cad44 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xff83cfe78fb50 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbb45bf2ad3b180; op2val:0xc022c1780a1cad44; op3val:0x3feff83cfe78fb50; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 1568, x18)

inst_861:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x90c891745fa4c and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xa86bd7ccf8f50 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4c3a834b70e5b and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd90c891745fa4c; op2val:0xbffa86bd7ccf8f50; op3val:0x3fe4c3a834b70e5b; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 1584, x18)

inst_862:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x90c891745fa4c and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xa86bd7ccf8f50 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4c3a834b70e5b and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd90c891745fa4c; op2val:0xbffa86bd7ccf8f50; op3val:0x3fe4c3a834b70e5b; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 1600, x18)

inst_863:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x90c891745fa4c and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xa86bd7ccf8f50 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4c3a834b70e5b and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd90c891745fa4c; op2val:0xbffa86bd7ccf8f50; op3val:0x3fe4c3a834b70e5b; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 1616, x18)

inst_864:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x90c891745fa4c and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xa86bd7ccf8f50 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4c3a834b70e5b and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd90c891745fa4c; op2val:0xbffa86bd7ccf8f50; op3val:0x3fe4c3a834b70e5b; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 1632, x18)

inst_865:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x90c891745fa4c and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xa86bd7ccf8f50 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4c3a834b70e5b and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd90c891745fa4c; op2val:0xbffa86bd7ccf8f50; op3val:0x3fe4c3a834b70e5b; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 1648, x18)

inst_866:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x5e83b33410170 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x7ef408c47f77f and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x062b5377d34c0 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fa5e83b33410170; op2val:0xbfe7ef408c47f77f; op3val:0x3fa062b5377d34c0; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 1664, x18)

inst_867:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x5e83b33410170 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x7ef408c47f77f and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x062b5377d34c0 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fa5e83b33410170; op2val:0xbfe7ef408c47f77f; op3val:0x3fa062b5377d34c0; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 1680, x18)

inst_868:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x5e83b33410170 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x7ef408c47f77f and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x062b5377d34c0 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fa5e83b33410170; op2val:0xbfe7ef408c47f77f; op3val:0x3fa062b5377d34c0; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 1696, x18)

inst_869:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x5e83b33410170 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x7ef408c47f77f and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x062b5377d34c0 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fa5e83b33410170; op2val:0xbfe7ef408c47f77f; op3val:0x3fa062b5377d34c0; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 1712, x18)

inst_870:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x5e83b33410170 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x7ef408c47f77f and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x062b5377d34c0 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fa5e83b33410170; op2val:0xbfe7ef408c47f77f; op3val:0x3fa062b5377d34c0; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1728, x18)

inst_871:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x9dc285cf022ae and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1452e6e63e7f0 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xbe9bb5c2f0a38 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd9dc285cf022ae; op2val:0xbff1452e6e63e7f0; op3val:0x3fdbe9bb5c2f0a38; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 1744, x18)

inst_872:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x9dc285cf022ae and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1452e6e63e7f0 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xbe9bb5c2f0a38 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd9dc285cf022ae; op2val:0xbff1452e6e63e7f0; op3val:0x3fdbe9bb5c2f0a38; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 1760, x18)

inst_873:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x9dc285cf022ae and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1452e6e63e7f0 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xbe9bb5c2f0a38 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd9dc285cf022ae; op2val:0xbff1452e6e63e7f0; op3val:0x3fdbe9bb5c2f0a38; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 1776, x18)

inst_874:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x9dc285cf022ae and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1452e6e63e7f0 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xbe9bb5c2f0a38 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd9dc285cf022ae; op2val:0xbff1452e6e63e7f0; op3val:0x3fdbe9bb5c2f0a38; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 1792, x18)

inst_875:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x9dc285cf022ae and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1452e6e63e7f0 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xbe9bb5c2f0a38 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd9dc285cf022ae; op2val:0xbff1452e6e63e7f0; op3val:0x3fdbe9bb5c2f0a38; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1808, x18)

inst_876:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x42d8676214ef3 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x5c4b37b96f7d8 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb73d0835f7642 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe42d8676214ef3; op2val:0xbff5c4b37b96f7d8; op3val:0x3feb73d0835f7642; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 1824, x18)

inst_877:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x42d8676214ef3 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x5c4b37b96f7d8 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb73d0835f7642 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe42d8676214ef3; op2val:0xbff5c4b37b96f7d8; op3val:0x3feb73d0835f7642; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 1840, x18)

inst_878:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x42d8676214ef3 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x5c4b37b96f7d8 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb73d0835f7642 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe42d8676214ef3; op2val:0xbff5c4b37b96f7d8; op3val:0x3feb73d0835f7642; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 1856, x18)

inst_879:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x42d8676214ef3 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x5c4b37b96f7d8 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb73d0835f7642 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe42d8676214ef3; op2val:0xbff5c4b37b96f7d8; op3val:0x3feb73d0835f7642; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 1872, x18)

inst_880:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x42d8676214ef3 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x5c4b37b96f7d8 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb73d0835f7642 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe42d8676214ef3; op2val:0xbff5c4b37b96f7d8; op3val:0x3feb73d0835f7642; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1888, x18)

inst_881:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x7eff2d6fa2ee4 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xe9a9e96b67389 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x6e49d0bb162dc and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc7eff2d6fa2ee4; op2val:0xbffe9a9e96b67389; op3val:0x3fd6e49d0bb162dc; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 1904, x18)

inst_882:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x7eff2d6fa2ee4 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xe9a9e96b67389 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x6e49d0bb162dc and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc7eff2d6fa2ee4; op2val:0xbffe9a9e96b67389; op3val:0x3fd6e49d0bb162dc; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 1920, x18)

inst_883:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x7eff2d6fa2ee4 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xe9a9e96b67389 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x6e49d0bb162dc and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc7eff2d6fa2ee4; op2val:0xbffe9a9e96b67389; op3val:0x3fd6e49d0bb162dc; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 1936, x18)

inst_884:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x7eff2d6fa2ee4 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xe9a9e96b67389 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x6e49d0bb162dc and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc7eff2d6fa2ee4; op2val:0xbffe9a9e96b67389; op3val:0x3fd6e49d0bb162dc; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 1952, x18)

inst_885:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x7eff2d6fa2ee4 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xe9a9e96b67389 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x6e49d0bb162dc and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc7eff2d6fa2ee4; op2val:0xbffe9a9e96b67389; op3val:0x3fd6e49d0bb162dc; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1968, x18)

inst_886:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x73aabcdeef630 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x99b8050bf4ab1 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x296b78e5cef76 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc73aabcdeef630; op2val:0xc0099b8050bf4ab1; op3val:0x3fe296b78e5cef76; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 1984, x18)

inst_887:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x73aabcdeef630 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x99b8050bf4ab1 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x296b78e5cef76 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc73aabcdeef630; op2val:0xc0099b8050bf4ab1; op3val:0x3fe296b78e5cef76; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 2000, x18)

inst_888:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x73aabcdeef630 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x99b8050bf4ab1 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x296b78e5cef76 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc73aabcdeef630; op2val:0xc0099b8050bf4ab1; op3val:0x3fe296b78e5cef76; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_8)

inst_889:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x73aabcdeef630 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x99b8050bf4ab1 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x296b78e5cef76 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc73aabcdeef630; op2val:0xc0099b8050bf4ab1; op3val:0x3fe296b78e5cef76; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 0, x18)

inst_890:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x73aabcdeef630 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x99b8050bf4ab1 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x296b78e5cef76 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc73aabcdeef630; op2val:0xc0099b8050bf4ab1; op3val:0x3fe296b78e5cef76; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 16, x18)

inst_891:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xad29895a78b0e and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x9789fd457d9c9 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x559a2e97f1680 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdad29895a78b0e; op2val:0xbfb9789fd457d9c9; op3val:0x3fa559a2e97f1680; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 32, x18)

inst_892:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xad29895a78b0e and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x9789fd457d9c9 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x559a2e97f1680 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdad29895a78b0e; op2val:0xbfb9789fd457d9c9; op3val:0x3fa559a2e97f1680; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 48, x18)

inst_893:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xad29895a78b0e and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x9789fd457d9c9 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x559a2e97f1680 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdad29895a78b0e; op2val:0xbfb9789fd457d9c9; op3val:0x3fa559a2e97f1680; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 64, x18)

inst_894:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xad29895a78b0e and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x9789fd457d9c9 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x559a2e97f1680 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdad29895a78b0e; op2val:0xbfb9789fd457d9c9; op3val:0x3fa559a2e97f1680; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 80, x18)

inst_895:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xad29895a78b0e and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x9789fd457d9c9 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x559a2e97f1680 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdad29895a78b0e; op2val:0xbfb9789fd457d9c9; op3val:0x3fa559a2e97f1680; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 96, x18)

inst_896:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xd1b19f3e618f8 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x73dfaf5ef2204 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x523da94321215 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdd1b19f3e618f8; op2val:0xbff73dfaf5ef2204; op3val:0x3fe523da94321215; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 112, x18)

inst_897:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xd1b19f3e618f8 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x73dfaf5ef2204 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x523da94321215 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdd1b19f3e618f8; op2val:0xbff73dfaf5ef2204; op3val:0x3fe523da94321215; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 128, x18)

inst_898:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xd1b19f3e618f8 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x73dfaf5ef2204 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x523da94321215 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdd1b19f3e618f8; op2val:0xbff73dfaf5ef2204; op3val:0x3fe523da94321215; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 144, x18)

inst_899:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xd1b19f3e618f8 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x73dfaf5ef2204 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x523da94321215 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdd1b19f3e618f8; op2val:0xbff73dfaf5ef2204; op3val:0x3fe523da94321215; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 160, x18)

inst_900:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xd1b19f3e618f8 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x73dfaf5ef2204 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x523da94321215 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdd1b19f3e618f8; op2val:0xbff73dfaf5ef2204; op3val:0x3fe523da94321215; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 176, x18)

inst_901:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8bb5dad96c4ce and fs2 == 1 and fe2 == 0x400 and fm2 == 0x2bd2fd0af094b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xcf7388ed1a1c6 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd8bb5dad96c4ce; op2val:0xc002bd2fd0af094b; op3val:0x3fecf7388ed1a1c6; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 192, x18)

inst_902:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8bb5dad96c4ce and fs2 == 1 and fe2 == 0x400 and fm2 == 0x2bd2fd0af094b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xcf7388ed1a1c6 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd8bb5dad96c4ce; op2val:0xc002bd2fd0af094b; op3val:0x3fecf7388ed1a1c6; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 208, x18)

inst_903:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8bb5dad96c4ce and fs2 == 1 and fe2 == 0x400 and fm2 == 0x2bd2fd0af094b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xcf7388ed1a1c6 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd8bb5dad96c4ce; op2val:0xc002bd2fd0af094b; op3val:0x3fecf7388ed1a1c6; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 224, x18)

inst_904:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8bb5dad96c4ce and fs2 == 1 and fe2 == 0x400 and fm2 == 0x2bd2fd0af094b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xcf7388ed1a1c6 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd8bb5dad96c4ce; op2val:0xc002bd2fd0af094b; op3val:0x3fecf7388ed1a1c6; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 240, x18)

inst_905:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8bb5dad96c4ce and fs2 == 1 and fe2 == 0x400 and fm2 == 0x2bd2fd0af094b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xcf7388ed1a1c6 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd8bb5dad96c4ce; op2val:0xc002bd2fd0af094b; op3val:0x3fecf7388ed1a1c6; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 256, x18)

inst_906:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4092d88247c04 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x8a1f5a868521a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xed89445ccde62 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe4092d88247c04; op2val:0xbff8a1f5a868521a; op3val:0x3feed89445ccde62; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 272, x18)

inst_907:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4092d88247c04 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x8a1f5a868521a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xed89445ccde62 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe4092d88247c04; op2val:0xbff8a1f5a868521a; op3val:0x3feed89445ccde62; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 288, x18)

inst_908:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4092d88247c04 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x8a1f5a868521a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xed89445ccde62 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe4092d88247c04; op2val:0xbff8a1f5a868521a; op3val:0x3feed89445ccde62; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 304, x18)

inst_909:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4092d88247c04 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x8a1f5a868521a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xed89445ccde62 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe4092d88247c04; op2val:0xbff8a1f5a868521a; op3val:0x3feed89445ccde62; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 320, x18)

inst_910:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4092d88247c04 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x8a1f5a868521a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xed89445ccde62 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe4092d88247c04; op2val:0xbff8a1f5a868521a; op3val:0x3feed89445ccde62; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 336, x18)

inst_911:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc514f693e9cb5 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x864372921e037 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x595aa773e7e18 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec514f693e9cb5; op2val:0xbfc864372921e037; op3val:0x3fc595aa773e7e18; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 352, x18)

inst_912:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc514f693e9cb5 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x864372921e037 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x595aa773e7e18 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec514f693e9cb5; op2val:0xbfc864372921e037; op3val:0x3fc595aa773e7e18; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 368, x18)

inst_913:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc514f693e9cb5 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x864372921e037 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x595aa773e7e18 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec514f693e9cb5; op2val:0xbfc864372921e037; op3val:0x3fc595aa773e7e18; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 384, x18)

inst_914:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc514f693e9cb5 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x864372921e037 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x595aa773e7e18 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec514f693e9cb5; op2val:0xbfc864372921e037; op3val:0x3fc595aa773e7e18; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 400, x18)

inst_915:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc514f693e9cb5 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x864372921e037 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x595aa773e7e18 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec514f693e9cb5; op2val:0xbfc864372921e037; op3val:0x3fc595aa773e7e18; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 416, x18)

inst_916:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7164c4c939ad2 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xa2ab6842a3099 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2e0eef088ce1d and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7164c4c939ad2; op2val:0xbfea2ab6842a3099; op3val:0x3fe2e0eef088ce1d; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 432, x18)

inst_917:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7164c4c939ad2 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xa2ab6842a3099 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2e0eef088ce1d and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7164c4c939ad2; op2val:0xbfea2ab6842a3099; op3val:0x3fe2e0eef088ce1d; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 448, x18)

inst_918:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7164c4c939ad2 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xa2ab6842a3099 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2e0eef088ce1d and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7164c4c939ad2; op2val:0xbfea2ab6842a3099; op3val:0x3fe2e0eef088ce1d; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 464, x18)

inst_919:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7164c4c939ad2 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xa2ab6842a3099 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2e0eef088ce1d and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7164c4c939ad2; op2val:0xbfea2ab6842a3099; op3val:0x3fe2e0eef088ce1d; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 480, x18)

inst_920:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7164c4c939ad2 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xa2ab6842a3099 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2e0eef088ce1d and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7164c4c939ad2; op2val:0xbfea2ab6842a3099; op3val:0x3fe2e0eef088ce1d; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 496, x18)

inst_921:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xffa9696991130 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x30a61c8407e29 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x3072970310af8 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feffa9696991130; op2val:0xbfe30a61c8407e29; op3val:0x3fe3072970310af8; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 512, x18)

inst_922:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xffa9696991130 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x30a61c8407e29 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x3072970310af8 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feffa9696991130; op2val:0xbfe30a61c8407e29; op3val:0x3fe3072970310af8; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 528, x18)

inst_923:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xffa9696991130 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x30a61c8407e29 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x3072970310af8 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feffa9696991130; op2val:0xbfe30a61c8407e29; op3val:0x3fe3072970310af8; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 544, x18)

inst_924:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xffa9696991130 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x30a61c8407e29 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x3072970310af8 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feffa9696991130; op2val:0xbfe30a61c8407e29; op3val:0x3fe3072970310af8; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 560, x18)

inst_925:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xffa9696991130 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x30a61c8407e29 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x3072970310af8 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feffa9696991130; op2val:0xbfe30a61c8407e29; op3val:0x3fe3072970310af8; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 576, x18)

inst_926:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8638fed20c09e and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x04293409b3c29 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x8c90b14081a40 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8638fed20c09e; op2val:0xbfc04293409b3c29; op3val:0x3fb8c90b14081a40; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 592, x18)

inst_927:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8638fed20c09e and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x04293409b3c29 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x8c90b14081a40 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8638fed20c09e; op2val:0xbfc04293409b3c29; op3val:0x3fb8c90b14081a40; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 608, x18)

inst_928:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8638fed20c09e and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x04293409b3c29 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x8c90b14081a40 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8638fed20c09e; op2val:0xbfc04293409b3c29; op3val:0x3fb8c90b14081a40; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 624, x18)

inst_929:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8638fed20c09e and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x04293409b3c29 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x8c90b14081a40 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8638fed20c09e; op2val:0xbfc04293409b3c29; op3val:0x3fb8c90b14081a40; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 640, x18)

inst_930:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8638fed20c09e and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x04293409b3c29 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x8c90b14081a40 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8638fed20c09e; op2val:0xbfc04293409b3c29; op3val:0x3fb8c90b14081a40; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 656, x18)

inst_931:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8d85e2f6c9756 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0e43729e1f458 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xa3abf165d753a and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd8d85e2f6c9756; op2val:0xbff0e43729e1f458; op3val:0x3fda3abf165d753a; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 672, x18)

inst_932:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8d85e2f6c9756 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0e43729e1f458 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xa3abf165d753a and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd8d85e2f6c9756; op2val:0xbff0e43729e1f458; op3val:0x3fda3abf165d753a; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 688, x18)

inst_933:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8d85e2f6c9756 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0e43729e1f458 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xa3abf165d753a and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd8d85e2f6c9756; op2val:0xbff0e43729e1f458; op3val:0x3fda3abf165d753a; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 704, x18)

inst_934:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8d85e2f6c9756 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0e43729e1f458 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xa3abf165d753a and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd8d85e2f6c9756; op2val:0xbff0e43729e1f458; op3val:0x3fda3abf165d753a; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 720, x18)
addi x16,x16,2040

inst_935:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8d85e2f6c9756 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0e43729e1f458 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xa3abf165d753a and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd8d85e2f6c9756; op2val:0xbff0e43729e1f458; op3val:0x3fda3abf165d753a; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 736, x18)

inst_936:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x11c03ea987949 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x28b6878ec0dd3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x3d49781599350 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe11c03ea987949; op2val:0xbff28b6878ec0dd3; op3val:0x3fe3d49781599350; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 752, x18)

inst_937:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x11c03ea987949 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x28b6878ec0dd3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x3d49781599350 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe11c03ea987949; op2val:0xbff28b6878ec0dd3; op3val:0x3fe3d49781599350; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 768, x18)

inst_938:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x11c03ea987949 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x28b6878ec0dd3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x3d49781599350 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe11c03ea987949; op2val:0xbff28b6878ec0dd3; op3val:0x3fe3d49781599350; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 784, x18)

inst_939:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x11c03ea987949 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x28b6878ec0dd3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x3d49781599350 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe11c03ea987949; op2val:0xbff28b6878ec0dd3; op3val:0x3fe3d49781599350; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 800, x18)

inst_940:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x11c03ea987949 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x28b6878ec0dd3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x3d49781599350 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe11c03ea987949; op2val:0xbff28b6878ec0dd3; op3val:0x3fe3d49781599350; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 816, x18)

inst_941:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9cffe79ce8502 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x320ca64ec245e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xedbe4b25689da and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9cffe79ce8502; op2val:0xbff320ca64ec245e; op3val:0x3feedbe4b25689da; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 832, x18)

inst_942:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9cffe79ce8502 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x320ca64ec245e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xedbe4b25689da and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9cffe79ce8502; op2val:0xbff320ca64ec245e; op3val:0x3feedbe4b25689da; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 848, x18)

inst_943:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9cffe79ce8502 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x320ca64ec245e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xedbe4b25689da and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9cffe79ce8502; op2val:0xbff320ca64ec245e; op3val:0x3feedbe4b25689da; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 864, x18)

inst_944:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9cffe79ce8502 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x320ca64ec245e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xedbe4b25689da and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9cffe79ce8502; op2val:0xbff320ca64ec245e; op3val:0x3feedbe4b25689da; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 880, x18)

inst_945:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9cffe79ce8502 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x320ca64ec245e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xedbe4b25689da and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9cffe79ce8502; op2val:0xbff320ca64ec245e; op3val:0x3feedbe4b25689da; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 896, x18)

inst_946:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5d8430c20c9b8 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x32ed7b9397a0f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa30c3e611c117 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe5d8430c20c9b8; op2val:0xbff32ed7b9397a0f; op3val:0x3fea30c3e611c117; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 912, x18)

inst_947:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5d8430c20c9b8 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x32ed7b9397a0f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa30c3e611c117 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe5d8430c20c9b8; op2val:0xbff32ed7b9397a0f; op3val:0x3fea30c3e611c117; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 928, x18)

inst_948:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5d8430c20c9b8 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x32ed7b9397a0f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa30c3e611c117 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe5d8430c20c9b8; op2val:0xbff32ed7b9397a0f; op3val:0x3fea30c3e611c117; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 944, x18)

inst_949:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5d8430c20c9b8 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x32ed7b9397a0f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa30c3e611c117 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe5d8430c20c9b8; op2val:0xbff32ed7b9397a0f; op3val:0x3fea30c3e611c117; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 960, x18)

inst_950:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5d8430c20c9b8 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x32ed7b9397a0f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa30c3e611c117 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe5d8430c20c9b8; op2val:0xbff32ed7b9397a0f; op3val:0x3fea30c3e611c117; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 976, x18)

inst_951:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe4475e06ec966 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd507640849e38 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbba25d38e82e3 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fee4475e06ec966; op2val:0xbfed507640849e38; op3val:0x3febba25d38e82e3; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 992, x18)

inst_952:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe4475e06ec966 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd507640849e38 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbba25d38e82e3 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fee4475e06ec966; op2val:0xbfed507640849e38; op3val:0x3febba25d38e82e3; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 1008, x18)

inst_953:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe4475e06ec966 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd507640849e38 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbba25d38e82e3 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fee4475e06ec966; op2val:0xbfed507640849e38; op3val:0x3febba25d38e82e3; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 1024, x18)

inst_954:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe4475e06ec966 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd507640849e38 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbba25d38e82e3 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fee4475e06ec966; op2val:0xbfed507640849e38; op3val:0x3febba25d38e82e3; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 1040, x18)

inst_955:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe4475e06ec966 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd507640849e38 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbba25d38e82e3 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fee4475e06ec966; op2val:0xbfed507640849e38; op3val:0x3febba25d38e82e3; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1056, x18)

inst_956:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0e8c58414b9cf and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x76dc5f4069fca and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x8c29ee35646d1 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0e8c58414b9cf; op2val:0xbff76dc5f4069fca; op3val:0x3fe8c29ee35646d1; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 1072, x18)

inst_957:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0e8c58414b9cf and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x76dc5f4069fca and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x8c29ee35646d1 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0e8c58414b9cf; op2val:0xbff76dc5f4069fca; op3val:0x3fe8c29ee35646d1; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 1088, x18)

inst_958:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0e8c58414b9cf and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x76dc5f4069fca and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x8c29ee35646d1 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0e8c58414b9cf; op2val:0xbff76dc5f4069fca; op3val:0x3fe8c29ee35646d1; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 1104, x18)

inst_959:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0e8c58414b9cf and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x76dc5f4069fca and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x8c29ee35646d1 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0e8c58414b9cf; op2val:0xbff76dc5f4069fca; op3val:0x3fe8c29ee35646d1; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 1120, x18)

inst_960:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0e8c58414b9cf and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x76dc5f4069fca and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x8c29ee35646d1 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0e8c58414b9cf; op2val:0xbff76dc5f4069fca; op3val:0x3fe8c29ee35646d1; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1136, x18)

inst_961:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x79fe7ba4096d2 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x4c3dad8f5f478 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xea911a40ddb3b and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd79fe7ba4096d2; op2val:0xc004c3dad8f5f478; op3val:0x3feea911a40ddb3b; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 1152, x18)

inst_962:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x79fe7ba4096d2 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x4c3dad8f5f478 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xea911a40ddb3b and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd79fe7ba4096d2; op2val:0xc004c3dad8f5f478; op3val:0x3feea911a40ddb3b; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 1168, x18)

inst_963:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x79fe7ba4096d2 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x4c3dad8f5f478 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xea911a40ddb3b and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd79fe7ba4096d2; op2val:0xc004c3dad8f5f478; op3val:0x3feea911a40ddb3b; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 1184, x18)

inst_964:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x79fe7ba4096d2 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x4c3dad8f5f478 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xea911a40ddb3b and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd79fe7ba4096d2; op2val:0xc004c3dad8f5f478; op3val:0x3feea911a40ddb3b; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 1200, x18)

inst_965:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x79fe7ba4096d2 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x4c3dad8f5f478 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xea911a40ddb3b and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd79fe7ba4096d2; op2val:0xc004c3dad8f5f478; op3val:0x3feea911a40ddb3b; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1216, x18)

inst_966:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8fda3acf6c974 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x9bc6262ad374c and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x41946d68e44a4 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8fda3acf6c974; op2val:0xbfd9bc6262ad374c; op3val:0x3fd41946d68e44a4; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 1232, x18)

inst_967:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8fda3acf6c974 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x9bc6262ad374c and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x41946d68e44a4 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8fda3acf6c974; op2val:0xbfd9bc6262ad374c; op3val:0x3fd41946d68e44a4; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 1248, x18)

inst_968:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8fda3acf6c974 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x9bc6262ad374c and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x41946d68e44a4 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8fda3acf6c974; op2val:0xbfd9bc6262ad374c; op3val:0x3fd41946d68e44a4; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 1264, x18)

inst_969:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8fda3acf6c974 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x9bc6262ad374c and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x41946d68e44a4 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8fda3acf6c974; op2val:0xbfd9bc6262ad374c; op3val:0x3fd41946d68e44a4; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 1280, x18)

inst_970:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x8fda3acf6c974 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x9bc6262ad374c and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x41946d68e44a4 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe8fda3acf6c974; op2val:0xbfd9bc6262ad374c; op3val:0x3fd41946d68e44a4; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1296, x18)

inst_971:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1e2c47d80f352 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x4081240b0eca3 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x6647b668dd6c0 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1e2c47d80f352; op2val:0xbfe4081240b0eca3; op3val:0x3fd6647b668dd6c0; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 1312, x18)

inst_972:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1e2c47d80f352 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x4081240b0eca3 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x6647b668dd6c0 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1e2c47d80f352; op2val:0xbfe4081240b0eca3; op3val:0x3fd6647b668dd6c0; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 1328, x18)

inst_973:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1e2c47d80f352 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x4081240b0eca3 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x6647b668dd6c0 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1e2c47d80f352; op2val:0xbfe4081240b0eca3; op3val:0x3fd6647b668dd6c0; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 1344, x18)

inst_974:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1e2c47d80f352 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x4081240b0eca3 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x6647b668dd6c0 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1e2c47d80f352; op2val:0xbfe4081240b0eca3; op3val:0x3fd6647b668dd6c0; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 1360, x18)

inst_975:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x1e2c47d80f352 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x4081240b0eca3 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x6647b668dd6c0 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe1e2c47d80f352; op2val:0xbfe4081240b0eca3; op3val:0x3fd6647b668dd6c0; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 1376, x18)

inst_976:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf1db86f37b4ef and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xba48f5418f75c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xae1174da77a1f and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef1db86f37b4ef; op2val:0xbfeba48f5418f75c; op3val:0x3feae1174da77a1f; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 1392, x18)

inst_977:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf1db86f37b4ef and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xba48f5418f75c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xae1174da77a1f and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef1db86f37b4ef; op2val:0xbfeba48f5418f75c; op3val:0x3feae1174da77a1f; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 1408, x18)

inst_978:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf1db86f37b4ef and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xba48f5418f75c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xae1174da77a1f and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef1db86f37b4ef; op2val:0xbfeba48f5418f75c; op3val:0x3feae1174da77a1f; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 1424, x18)

inst_979:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf1db86f37b4ef and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xba48f5418f75c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xae1174da77a1f and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef1db86f37b4ef; op2val:0xbfeba48f5418f75c; op3val:0x3feae1174da77a1f; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 1440, x18)

inst_980:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf1db86f37b4ef and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xba48f5418f75c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xae1174da77a1f and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef1db86f37b4ef; op2val:0xbfeba48f5418f75c; op3val:0x3feae1174da77a1f; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 1456, x18)

inst_981:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x73d9395d59810 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x8a33a4d802853 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x1e4bab0082856 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd73d9395d59810; op2val:0xbfe8a33a4d802853; op3val:0x3fd1e4bab0082856; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 1472, x18)

inst_982:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x73d9395d59810 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x8a33a4d802853 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x1e4bab0082856 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd73d9395d59810; op2val:0xbfe8a33a4d802853; op3val:0x3fd1e4bab0082856; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 1488, x18)

inst_983:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x73d9395d59810 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x8a33a4d802853 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x1e4bab0082856 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd73d9395d59810; op2val:0xbfe8a33a4d802853; op3val:0x3fd1e4bab0082856; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 1504, x18)

inst_984:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x73d9395d59810 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x8a33a4d802853 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x1e4bab0082856 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd73d9395d59810; op2val:0xbfe8a33a4d802853; op3val:0x3fd1e4bab0082856; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 1520, x18)

inst_985:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x73d9395d59810 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x8a33a4d802853 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x1e4bab0082856 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd73d9395d59810; op2val:0xbfe8a33a4d802853; op3val:0x3fd1e4bab0082856; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 1536, x18)

inst_986:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x814b1039307c8 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x3292173597b3e and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xcd67992203e40 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd814b1039307c8; op2val:0xbfe3292173597b3e; op3val:0x3fccd67992203e40; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 1552, x18)

inst_987:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x814b1039307c8 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x3292173597b3e and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xcd67992203e40 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd814b1039307c8; op2val:0xbfe3292173597b3e; op3val:0x3fccd67992203e40; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 1568, x18)

inst_988:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x814b1039307c8 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x3292173597b3e and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xcd67992203e40 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd814b1039307c8; op2val:0xbfe3292173597b3e; op3val:0x3fccd67992203e40; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 1584, x18)

inst_989:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x814b1039307c8 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x3292173597b3e and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xcd67992203e40 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd814b1039307c8; op2val:0xbfe3292173597b3e; op3val:0x3fccd67992203e40; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 1600, x18)

inst_990:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x814b1039307c8 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x3292173597b3e and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xcd67992203e40 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd814b1039307c8; op2val:0xbfe3292173597b3e; op3val:0x3fccd67992203e40; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 1616, x18)

inst_991:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x56786d882306a and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xbb5ad2070374a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x288df26ca11e7 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd56786d882306a; op2val:0xbffbb5ad2070374a; op3val:0x3fe288df26ca11e7; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 1632, x18)

inst_992:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x56786d882306a and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xbb5ad2070374a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x288df26ca11e7 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd56786d882306a; op2val:0xbffbb5ad2070374a; op3val:0x3fe288df26ca11e7; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 1648, x18)

inst_993:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x56786d882306a and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xbb5ad2070374a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x288df26ca11e7 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd56786d882306a; op2val:0xbffbb5ad2070374a; op3val:0x3fe288df26ca11e7; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 1664, x18)

inst_994:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x56786d882306a and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xbb5ad2070374a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x288df26ca11e7 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd56786d882306a; op2val:0xbffbb5ad2070374a; op3val:0x3fe288df26ca11e7; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 1680, x18)

inst_995:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x56786d882306a and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xbb5ad2070374a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x288df26ca11e7 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd56786d882306a; op2val:0xbffbb5ad2070374a; op3val:0x3fe288df26ca11e7; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 1696, x18)

inst_996:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xc1cc851053924 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xe891a6c0c1b77 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xad36e3bde4cc0 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcc1cc851053924; op2val:0xbffe891a6c0c1b77; op3val:0x3fdad36e3bde4cc0; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 1712, x18)

inst_997:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xc1cc851053924 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xe891a6c0c1b77 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xad36e3bde4cc0 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcc1cc851053924; op2val:0xbffe891a6c0c1b77; op3val:0x3fdad36e3bde4cc0; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 1728, x18)

inst_998:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xc1cc851053924 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xe891a6c0c1b77 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xad36e3bde4cc0 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcc1cc851053924; op2val:0xbffe891a6c0c1b77; op3val:0x3fdad36e3bde4cc0; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 1744, x18)

inst_999:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xc1cc851053924 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xe891a6c0c1b77 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xad36e3bde4cc0 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcc1cc851053924; op2val:0xbffe891a6c0c1b77; op3val:0x3fdad36e3bde4cc0; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 1760, x18)

inst_1000:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xc1cc851053924 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xe891a6c0c1b77 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xad36e3bde4cc0 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcc1cc851053924; op2val:0xbffe891a6c0c1b77; op3val:0x3fdad36e3bde4cc0; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1776, x18)

inst_1001:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x141e3b4aabc20 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x89214bf521700 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa80652d886ab5 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd141e3b4aabc20; op2val:0xc0089214bf521700; op3val:0x3fea80652d886ab5; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 1792, x18)

inst_1002:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x141e3b4aabc20 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x89214bf521700 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa80652d886ab5 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd141e3b4aabc20; op2val:0xc0089214bf521700; op3val:0x3fea80652d886ab5; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 1808, x18)

inst_1003:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x141e3b4aabc20 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x89214bf521700 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa80652d886ab5 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd141e3b4aabc20; op2val:0xc0089214bf521700; op3val:0x3fea80652d886ab5; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 1824, x18)

inst_1004:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x141e3b4aabc20 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x89214bf521700 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa80652d886ab5 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd141e3b4aabc20; op2val:0xc0089214bf521700; op3val:0x3fea80652d886ab5; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 1840, x18)

inst_1005:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x141e3b4aabc20 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x89214bf521700 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa80652d886ab5 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd141e3b4aabc20; op2val:0xc0089214bf521700; op3val:0x3fea80652d886ab5; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1856, x18)

inst_1006:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3bfaee75e8ada and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd11bba1daba7f and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x1f0a822a2150c and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd3bfaee75e8ada; op2val:0xbfed11bba1daba7f; op3val:0x3fd1f0a822a2150c; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 1872, x18)

inst_1007:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3bfaee75e8ada and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd11bba1daba7f and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x1f0a822a2150c and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd3bfaee75e8ada; op2val:0xbfed11bba1daba7f; op3val:0x3fd1f0a822a2150c; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 1888, x18)

inst_1008:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3bfaee75e8ada and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd11bba1daba7f and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x1f0a822a2150c and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd3bfaee75e8ada; op2val:0xbfed11bba1daba7f; op3val:0x3fd1f0a822a2150c; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 1904, x18)

inst_1009:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3bfaee75e8ada and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd11bba1daba7f and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x1f0a822a2150c and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd3bfaee75e8ada; op2val:0xbfed11bba1daba7f; op3val:0x3fd1f0a822a2150c; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 1920, x18)

inst_1010:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3bfaee75e8ada and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd11bba1daba7f and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x1f0a822a2150c and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd3bfaee75e8ada; op2val:0xbfed11bba1daba7f; op3val:0x3fd1f0a822a2150c; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1936, x18)

inst_1011:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x007c0e4ad38b8 and fs2 == 1 and fe2 == 0x402 and fm2 == 0x0b25e16a8e013 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0ba756ade5a6c and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb007c0e4ad38b8; op2val:0xc020b25e16a8e013; op3val:0x3fe0ba756ade5a6c; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 1952, x18)

inst_1012:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x007c0e4ad38b8 and fs2 == 1 and fe2 == 0x402 and fm2 == 0x0b25e16a8e013 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0ba756ade5a6c and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb007c0e4ad38b8; op2val:0xc020b25e16a8e013; op3val:0x3fe0ba756ade5a6c; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 1968, x18)

inst_1013:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x007c0e4ad38b8 and fs2 == 1 and fe2 == 0x402 and fm2 == 0x0b25e16a8e013 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0ba756ade5a6c and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb007c0e4ad38b8; op2val:0xc020b25e16a8e013; op3val:0x3fe0ba756ade5a6c; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 1984, x18)

inst_1014:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x007c0e4ad38b8 and fs2 == 1 and fe2 == 0x402 and fm2 == 0x0b25e16a8e013 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0ba756ade5a6c and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb007c0e4ad38b8; op2val:0xc020b25e16a8e013; op3val:0x3fe0ba756ade5a6c; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 2000, x18)

inst_1015:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x007c0e4ad38b8 and fs2 == 1 and fe2 == 0x402 and fm2 == 0x0b25e16a8e013 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0ba756ade5a6c and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb007c0e4ad38b8; op2val:0xc020b25e16a8e013; op3val:0x3fe0ba756ade5a6c; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_9)

inst_1016:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xaaeb6c3349442 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x9148ba3c75a15 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x4e9a06a35212c and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feaaeb6c3349442; op2val:0xbfc9148ba3c75a15; op3val:0x3fc4e9a06a35212c; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 0, x18)

inst_1017:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xaaeb6c3349442 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x9148ba3c75a15 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x4e9a06a35212c and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feaaeb6c3349442; op2val:0xbfc9148ba3c75a15; op3val:0x3fc4e9a06a35212c; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 16, x18)

inst_1018:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xaaeb6c3349442 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x9148ba3c75a15 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x4e9a06a35212c and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feaaeb6c3349442; op2val:0xbfc9148ba3c75a15; op3val:0x3fc4e9a06a35212c; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 32, x18)

inst_1019:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xaaeb6c3349442 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x9148ba3c75a15 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x4e9a06a35212c and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feaaeb6c3349442; op2val:0xbfc9148ba3c75a15; op3val:0x3fc4e9a06a35212c; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 48, x18)
addi x16,x16,2040

inst_1020:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xaaeb6c3349442 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x9148ba3c75a15 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x4e9a06a35212c and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feaaeb6c3349442; op2val:0xbfc9148ba3c75a15; op3val:0x3fc4e9a06a35212c; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 64, x18)

inst_1021:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xed6cdb6dd7972 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xf419490f13ff8 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xe1f4ac8288a60 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fded6cdb6dd7972; op2val:0xbfef419490f13ff8; op3val:0x3fde1f4ac8288a60; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 80, x18)

inst_1022:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xed6cdb6dd7972 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xf419490f13ff8 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xe1f4ac8288a60 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fded6cdb6dd7972; op2val:0xbfef419490f13ff8; op3val:0x3fde1f4ac8288a60; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 96, x18)

inst_1023:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xed6cdb6dd7972 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xf419490f13ff8 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xe1f4ac8288a60 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fded6cdb6dd7972; op2val:0xbfef419490f13ff8; op3val:0x3fde1f4ac8288a60; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 112, x18)

inst_1024:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xed6cdb6dd7972 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xf419490f13ff8 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xe1f4ac8288a60 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fded6cdb6dd7972; op2val:0xbfef419490f13ff8; op3val:0x3fde1f4ac8288a60; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 128, x18)

inst_1025:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xed6cdb6dd7972 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xf419490f13ff8 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xe1f4ac8288a60 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fded6cdb6dd7972; op2val:0xbfef419490f13ff8; op3val:0x3fde1f4ac8288a60; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 144, x18)

inst_1026:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x8736cd15f7280 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xd2329f35c9912 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x64378ea9a2f90 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f98736cd15f7280; op2val:0xbffd2329f35c9912; op3val:0x3fa64378ea9a2f90; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 160, x18)

inst_1027:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x8736cd15f7280 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xd2329f35c9912 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x64378ea9a2f90 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f98736cd15f7280; op2val:0xbffd2329f35c9912; op3val:0x3fa64378ea9a2f90; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 176, x18)

inst_1028:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x8736cd15f7280 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xd2329f35c9912 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x64378ea9a2f90 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f98736cd15f7280; op2val:0xbffd2329f35c9912; op3val:0x3fa64378ea9a2f90; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 192, x18)

inst_1029:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x8736cd15f7280 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xd2329f35c9912 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x64378ea9a2f90 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f98736cd15f7280; op2val:0xbffd2329f35c9912; op3val:0x3fa64378ea9a2f90; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 208, x18)

inst_1030:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x8736cd15f7280 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xd2329f35c9912 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x64378ea9a2f90 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f98736cd15f7280; op2val:0xbffd2329f35c9912; op3val:0x3fa64378ea9a2f90; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 224, x18)

inst_1031:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x0a6bf8220e288 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x32a8ac4f1ee99 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x3f2498c66d79e and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc0a6bf8220e288; op2val:0xc0032a8ac4f1ee99; op3val:0x3fd3f2498c66d79e; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 240, x18)

inst_1032:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x0a6bf8220e288 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x32a8ac4f1ee99 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x3f2498c66d79e and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc0a6bf8220e288; op2val:0xc0032a8ac4f1ee99; op3val:0x3fd3f2498c66d79e; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 256, x18)

inst_1033:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x0a6bf8220e288 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x32a8ac4f1ee99 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x3f2498c66d79e and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc0a6bf8220e288; op2val:0xc0032a8ac4f1ee99; op3val:0x3fd3f2498c66d79e; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 272, x18)

inst_1034:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x0a6bf8220e288 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x32a8ac4f1ee99 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x3f2498c66d79e and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc0a6bf8220e288; op2val:0xc0032a8ac4f1ee99; op3val:0x3fd3f2498c66d79e; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 288, x18)

inst_1035:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x0a6bf8220e288 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x32a8ac4f1ee99 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x3f2498c66d79e and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc0a6bf8220e288; op2val:0xc0032a8ac4f1ee99; op3val:0x3fd3f2498c66d79e; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 304, x18)

inst_1036:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4cc6e1c4f87e1 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xef15a53cdef9a and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x41c858d3d8cf0 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe4cc6e1c4f87e1; op2val:0xbfcef15a53cdef9a; op3val:0x3fc41c858d3d8cf0; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 320, x18)

inst_1037:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4cc6e1c4f87e1 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xef15a53cdef9a and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x41c858d3d8cf0 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe4cc6e1c4f87e1; op2val:0xbfcef15a53cdef9a; op3val:0x3fc41c858d3d8cf0; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 336, x18)

inst_1038:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4cc6e1c4f87e1 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xef15a53cdef9a and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x41c858d3d8cf0 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe4cc6e1c4f87e1; op2val:0xbfcef15a53cdef9a; op3val:0x3fc41c858d3d8cf0; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 352, x18)

inst_1039:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4cc6e1c4f87e1 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xef15a53cdef9a and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x41c858d3d8cf0 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe4cc6e1c4f87e1; op2val:0xbfcef15a53cdef9a; op3val:0x3fc41c858d3d8cf0; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 368, x18)

inst_1040:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4cc6e1c4f87e1 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xef15a53cdef9a and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x41c858d3d8cf0 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe4cc6e1c4f87e1; op2val:0xbfcef15a53cdef9a; op3val:0x3fc41c858d3d8cf0; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 384, x18)

inst_1041:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x0c76fc87ff80c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x4f884770d0b7f and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x5fde9e976e930 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd0c76fc87ff80c; op2val:0xbfe4f884770d0b7f; op3val:0x3fc5fde9e976e930; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 400, x18)

inst_1042:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x0c76fc87ff80c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x4f884770d0b7f and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x5fde9e976e930 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd0c76fc87ff80c; op2val:0xbfe4f884770d0b7f; op3val:0x3fc5fde9e976e930; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 416, x18)

inst_1043:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x0c76fc87ff80c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x4f884770d0b7f and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x5fde9e976e930 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd0c76fc87ff80c; op2val:0xbfe4f884770d0b7f; op3val:0x3fc5fde9e976e930; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 432, x18)

inst_1044:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x0c76fc87ff80c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x4f884770d0b7f and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x5fde9e976e930 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd0c76fc87ff80c; op2val:0xbfe4f884770d0b7f; op3val:0x3fc5fde9e976e930; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 448, x18)

inst_1045:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x0c76fc87ff80c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x4f884770d0b7f and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x5fde9e976e930 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd0c76fc87ff80c; op2val:0xbfe4f884770d0b7f; op3val:0x3fc5fde9e976e930; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 464, x18)

inst_1046:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4de214ee78d25 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x17759170e66fc and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x6c7abad3c3f98 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe4de214ee78d25; op2val:0xbfe17759170e66fc; op3val:0x3fd6c7abad3c3f98; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 480, x18)

inst_1047:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4de214ee78d25 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x17759170e66fc and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x6c7abad3c3f98 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe4de214ee78d25; op2val:0xbfe17759170e66fc; op3val:0x3fd6c7abad3c3f98; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 496, x18)

inst_1048:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4de214ee78d25 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x17759170e66fc and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x6c7abad3c3f98 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe4de214ee78d25; op2val:0xbfe17759170e66fc; op3val:0x3fd6c7abad3c3f98; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 512, x18)

inst_1049:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4de214ee78d25 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x17759170e66fc and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x6c7abad3c3f98 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe4de214ee78d25; op2val:0xbfe17759170e66fc; op3val:0x3fd6c7abad3c3f98; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 528, x18)

inst_1050:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4de214ee78d25 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x17759170e66fc and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x6c7abad3c3f98 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe4de214ee78d25; op2val:0xbfe17759170e66fc; op3val:0x3fd6c7abad3c3f98; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 544, x18)

inst_1051:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x69064a29c639c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x25e4641864161 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x9e7649a4b7c98 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd69064a29c639c; op2val:0xbfe25e4641864161; op3val:0x3fc9e7649a4b7c98; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 560, x18)

inst_1052:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x69064a29c639c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x25e4641864161 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x9e7649a4b7c98 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd69064a29c639c; op2val:0xbfe25e4641864161; op3val:0x3fc9e7649a4b7c98; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 576, x18)

inst_1053:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x69064a29c639c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x25e4641864161 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x9e7649a4b7c98 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd69064a29c639c; op2val:0xbfe25e4641864161; op3val:0x3fc9e7649a4b7c98; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 592, x18)

inst_1054:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x69064a29c639c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x25e4641864161 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x9e7649a4b7c98 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd69064a29c639c; op2val:0xbfe25e4641864161; op3val:0x3fc9e7649a4b7c98; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 608, x18)

inst_1055:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x69064a29c639c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x25e4641864161 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x9e7649a4b7c98 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd69064a29c639c; op2val:0xbfe25e4641864161; op3val:0x3fc9e7649a4b7c98; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 624, x18)

inst_1056:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x12f9a92d83ddd and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x5d88327cf5f73 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x7770a67fe91ec and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe12f9a92d83ddd; op2val:0xbfd5d88327cf5f73; op3val:0x3fc7770a67fe91ec; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 640, x18)

inst_1057:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x12f9a92d83ddd and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x5d88327cf5f73 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x7770a67fe91ec and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe12f9a92d83ddd; op2val:0xbfd5d88327cf5f73; op3val:0x3fc7770a67fe91ec; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 656, x18)

inst_1058:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x12f9a92d83ddd and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x5d88327cf5f73 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x7770a67fe91ec and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe12f9a92d83ddd; op2val:0xbfd5d88327cf5f73; op3val:0x3fc7770a67fe91ec; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 672, x18)

inst_1059:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x12f9a92d83ddd and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x5d88327cf5f73 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x7770a67fe91ec and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe12f9a92d83ddd; op2val:0xbfd5d88327cf5f73; op3val:0x3fc7770a67fe91ec; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 688, x18)

inst_1060:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x12f9a92d83ddd and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x5d88327cf5f73 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x7770a67fe91ec and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe12f9a92d83ddd; op2val:0xbfd5d88327cf5f73; op3val:0x3fc7770a67fe91ec; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 704, x18)

inst_1061:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7fa542ab245fb and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xc0bb26edb0f91 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x503cd65cf7e30 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7fa542ab245fb; op2val:0xbfdc0bb26edb0f91; op3val:0x3fd503cd65cf7e30; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 720, x18)

inst_1062:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7fa542ab245fb and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xc0bb26edb0f91 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x503cd65cf7e30 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7fa542ab245fb; op2val:0xbfdc0bb26edb0f91; op3val:0x3fd503cd65cf7e30; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 736, x18)

inst_1063:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7fa542ab245fb and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xc0bb26edb0f91 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x503cd65cf7e30 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7fa542ab245fb; op2val:0xbfdc0bb26edb0f91; op3val:0x3fd503cd65cf7e30; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 752, x18)

inst_1064:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7fa542ab245fb and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xc0bb26edb0f91 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x503cd65cf7e30 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7fa542ab245fb; op2val:0xbfdc0bb26edb0f91; op3val:0x3fd503cd65cf7e30; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 768, x18)

inst_1065:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x7fa542ab245fb and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xc0bb26edb0f91 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x503cd65cf7e30 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe7fa542ab245fb; op2val:0xbfdc0bb26edb0f91; op3val:0x3fd503cd65cf7e30; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 784, x18)

inst_1066:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xfa1219a1a5018 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xd550fa34280bd and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xcfe19e9cf6d74 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fefa1219a1a5018; op2val:0xbfdd550fa34280bd; op3val:0x3fdcfe19e9cf6d74; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 800, x18)

inst_1067:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xfa1219a1a5018 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xd550fa34280bd and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xcfe19e9cf6d74 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fefa1219a1a5018; op2val:0xbfdd550fa34280bd; op3val:0x3fdcfe19e9cf6d74; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 816, x18)

inst_1068:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xfa1219a1a5018 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xd550fa34280bd and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xcfe19e9cf6d74 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fefa1219a1a5018; op2val:0xbfdd550fa34280bd; op3val:0x3fdcfe19e9cf6d74; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 832, x18)

inst_1069:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xfa1219a1a5018 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xd550fa34280bd and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xcfe19e9cf6d74 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fefa1219a1a5018; op2val:0xbfdd550fa34280bd; op3val:0x3fdcfe19e9cf6d74; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 848, x18)

inst_1070:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xfa1219a1a5018 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xd550fa34280bd and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xcfe19e9cf6d74 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fefa1219a1a5018; op2val:0xbfdd550fa34280bd; op3val:0x3fdcfe19e9cf6d74; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 864, x18)

inst_1071:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x66b719e922046 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x327275cce047b and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xad673f92f77f4 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd66b719e922046; op2val:0xbff327275cce047b; op3val:0x3fdad673f92f77f4; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 880, x18)

inst_1072:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x66b719e922046 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x327275cce047b and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xad673f92f77f4 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd66b719e922046; op2val:0xbff327275cce047b; op3val:0x3fdad673f92f77f4; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 896, x18)

inst_1073:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x66b719e922046 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x327275cce047b and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xad673f92f77f4 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd66b719e922046; op2val:0xbff327275cce047b; op3val:0x3fdad673f92f77f4; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 912, x18)

inst_1074:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x66b719e922046 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x327275cce047b and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xad673f92f77f4 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd66b719e922046; op2val:0xbff327275cce047b; op3val:0x3fdad673f92f77f4; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 928, x18)

inst_1075:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x66b719e922046 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x327275cce047b and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xad673f92f77f4 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd66b719e922046; op2val:0xbff327275cce047b; op3val:0x3fdad673f92f77f4; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 944, x18)

inst_1076:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x698c3982c263b and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x3bd9bdc5438e6 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xbe130ea3c3ce0 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe698c3982c263b; op2val:0xbfb3bd9bdc5438e6; op3val:0x3fabe130ea3c3ce0; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 960, x18)

inst_1077:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x698c3982c263b and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x3bd9bdc5438e6 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xbe130ea3c3ce0 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe698c3982c263b; op2val:0xbfb3bd9bdc5438e6; op3val:0x3fabe130ea3c3ce0; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 976, x18)

inst_1078:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x698c3982c263b and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x3bd9bdc5438e6 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xbe130ea3c3ce0 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe698c3982c263b; op2val:0xbfb3bd9bdc5438e6; op3val:0x3fabe130ea3c3ce0; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 992, x18)

inst_1079:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x698c3982c263b and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x3bd9bdc5438e6 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xbe130ea3c3ce0 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe698c3982c263b; op2val:0xbfb3bd9bdc5438e6; op3val:0x3fabe130ea3c3ce0; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 1008, x18)

inst_1080:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x698c3982c263b and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x3bd9bdc5438e6 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xbe130ea3c3ce0 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe698c3982c263b; op2val:0xbfb3bd9bdc5438e6; op3val:0x3fabe130ea3c3ce0; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 1024, x18)

inst_1081:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xd78ea304e0070 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x57aef0fe6c3ab and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x3c892da45a982 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcd78ea304e0070; op2val:0xbff57aef0fe6c3ab; op3val:0x3fd3c892da45a982; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 1040, x18)

inst_1082:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xd78ea304e0070 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x57aef0fe6c3ab and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x3c892da45a982 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcd78ea304e0070; op2val:0xbff57aef0fe6c3ab; op3val:0x3fd3c892da45a982; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 1056, x18)

inst_1083:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xd78ea304e0070 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x57aef0fe6c3ab and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x3c892da45a982 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcd78ea304e0070; op2val:0xbff57aef0fe6c3ab; op3val:0x3fd3c892da45a982; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 1072, x18)

inst_1084:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xd78ea304e0070 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x57aef0fe6c3ab and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x3c892da45a982 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcd78ea304e0070; op2val:0xbff57aef0fe6c3ab; op3val:0x3fd3c892da45a982; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 1088, x18)

inst_1085:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xd78ea304e0070 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x57aef0fe6c3ab and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x3c892da45a982 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcd78ea304e0070; op2val:0xbff57aef0fe6c3ab; op3val:0x3fd3c892da45a982; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1104, x18)

inst_1086:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x703428ca8b8d1 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x6e2b145ce26a3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0754442f0c8f3 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe703428ca8b8d1; op2val:0xbfe6e2b145ce26a3; op3val:0x3fe0754442f0c8f3; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 1120, x18)

inst_1087:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x703428ca8b8d1 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x6e2b145ce26a3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0754442f0c8f3 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe703428ca8b8d1; op2val:0xbfe6e2b145ce26a3; op3val:0x3fe0754442f0c8f3; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 1136, x18)

inst_1088:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x703428ca8b8d1 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x6e2b145ce26a3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0754442f0c8f3 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe703428ca8b8d1; op2val:0xbfe6e2b145ce26a3; op3val:0x3fe0754442f0c8f3; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 1152, x18)

inst_1089:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x703428ca8b8d1 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x6e2b145ce26a3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0754442f0c8f3 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe703428ca8b8d1; op2val:0xbfe6e2b145ce26a3; op3val:0x3fe0754442f0c8f3; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 1168, x18)

inst_1090:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x703428ca8b8d1 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x6e2b145ce26a3 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x0754442f0c8f3 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe703428ca8b8d1; op2val:0xbfe6e2b145ce26a3; op3val:0x3fe0754442f0c8f3; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1184, x18)

inst_1091:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x45ec459c3431b and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xdb65d7f7913af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x2e9f872a74e60 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe45ec459c3431b; op2val:0xbfddb65d7f7913af; op3val:0x3fd2e9f872a74e60; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 1200, x18)

inst_1092:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x45ec459c3431b and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xdb65d7f7913af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x2e9f872a74e60 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe45ec459c3431b; op2val:0xbfddb65d7f7913af; op3val:0x3fd2e9f872a74e60; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 1216, x18)

inst_1093:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x45ec459c3431b and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xdb65d7f7913af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x2e9f872a74e60 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe45ec459c3431b; op2val:0xbfddb65d7f7913af; op3val:0x3fd2e9f872a74e60; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 1232, x18)

inst_1094:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x45ec459c3431b and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xdb65d7f7913af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x2e9f872a74e60 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe45ec459c3431b; op2val:0xbfddb65d7f7913af; op3val:0x3fd2e9f872a74e60; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 1248, x18)

inst_1095:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x45ec459c3431b and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xdb65d7f7913af and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x2e9f872a74e60 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe45ec459c3431b; op2val:0xbfddb65d7f7913af; op3val:0x3fd2e9f872a74e60; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1264, x18)

inst_1096:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x580b8c7b9b736 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x6e48ee8df3dbf and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xec4286b1bdb48 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd580b8c7b9b736; op2val:0xbfe6e48ee8df3dbf; op3val:0x3fcec4286b1bdb48; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 1280, x18)

inst_1097:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x580b8c7b9b736 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x6e48ee8df3dbf and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xec4286b1bdb48 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd580b8c7b9b736; op2val:0xbfe6e48ee8df3dbf; op3val:0x3fcec4286b1bdb48; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 1296, x18)

inst_1098:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x580b8c7b9b736 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x6e48ee8df3dbf and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xec4286b1bdb48 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd580b8c7b9b736; op2val:0xbfe6e48ee8df3dbf; op3val:0x3fcec4286b1bdb48; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 1312, x18)

inst_1099:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x580b8c7b9b736 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x6e48ee8df3dbf and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xec4286b1bdb48 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd580b8c7b9b736; op2val:0xbfe6e48ee8df3dbf; op3val:0x3fcec4286b1bdb48; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 1328, x18)

inst_1100:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x580b8c7b9b736 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x6e48ee8df3dbf and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xec4286b1bdb48 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd580b8c7b9b736; op2val:0xbfe6e48ee8df3dbf; op3val:0x3fcec4286b1bdb48; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1344, x18)

inst_1101:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xcd023aa4f0ec8 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x5b52df5904a62 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x38bba134cd508 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fccd023aa4f0ec8; op2val:0xbff5b52df5904a62; op3val:0x3fd38bba134cd508; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 1360, x18)

inst_1102:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xcd023aa4f0ec8 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x5b52df5904a62 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x38bba134cd508 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fccd023aa4f0ec8; op2val:0xbff5b52df5904a62; op3val:0x3fd38bba134cd508; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 1376, x18)

inst_1103:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xcd023aa4f0ec8 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x5b52df5904a62 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x38bba134cd508 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fccd023aa4f0ec8; op2val:0xbff5b52df5904a62; op3val:0x3fd38bba134cd508; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 1392, x18)

inst_1104:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xcd023aa4f0ec8 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x5b52df5904a62 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x38bba134cd508 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fccd023aa4f0ec8; op2val:0xbff5b52df5904a62; op3val:0x3fd38bba134cd508; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 1408, x18)
addi x16,x16,2040

inst_1105:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xcd023aa4f0ec8 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x5b52df5904a62 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x38bba134cd508 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fccd023aa4f0ec8; op2val:0xbff5b52df5904a62; op3val:0x3fd38bba134cd508; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 1424, x18)

inst_1106:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x47003f7bf6069 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x57132675e762e and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xb639cb3470ef0 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe47003f7bf6069; op2val:0xbfd57132675e762e; op3val:0x3fcb639cb3470ef0; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 1440, x18)

inst_1107:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x47003f7bf6069 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x57132675e762e and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xb639cb3470ef0 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe47003f7bf6069; op2val:0xbfd57132675e762e; op3val:0x3fcb639cb3470ef0; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 1456, x18)

inst_1108:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x47003f7bf6069 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x57132675e762e and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xb639cb3470ef0 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe47003f7bf6069; op2val:0xbfd57132675e762e; op3val:0x3fcb639cb3470ef0; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 1472, x18)

inst_1109:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x47003f7bf6069 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x57132675e762e and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xb639cb3470ef0 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe47003f7bf6069; op2val:0xbfd57132675e762e; op3val:0x3fcb639cb3470ef0; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 1488, x18)

inst_1110:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x47003f7bf6069 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x57132675e762e and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xb639cb3470ef0 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe47003f7bf6069; op2val:0xbfd57132675e762e; op3val:0x3fcb639cb3470ef0; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 1504, x18)

inst_1111:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xbe6cd673afaf4 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x377c51493abd9 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x0f97817f46e50 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcbe6cd673afaf4; op2val:0xbfe377c51493abd9; op3val:0x3fc0f97817f46e50; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 1520, x18)

inst_1112:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xbe6cd673afaf4 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x377c51493abd9 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x0f97817f46e50 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcbe6cd673afaf4; op2val:0xbfe377c51493abd9; op3val:0x3fc0f97817f46e50; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 1536, x18)

inst_1113:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xbe6cd673afaf4 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x377c51493abd9 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x0f97817f46e50 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcbe6cd673afaf4; op2val:0xbfe377c51493abd9; op3val:0x3fc0f97817f46e50; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 1552, x18)

inst_1114:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xbe6cd673afaf4 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x377c51493abd9 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x0f97817f46e50 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcbe6cd673afaf4; op2val:0xbfe377c51493abd9; op3val:0x3fc0f97817f46e50; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 1568, x18)

inst_1115:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xbe6cd673afaf4 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x377c51493abd9 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x0f97817f46e50 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcbe6cd673afaf4; op2val:0xbfe377c51493abd9; op3val:0x3fc0f97817f46e50; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 1584, x18)

inst_1116:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd25c94a085553 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x9909ac1b8a836 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7493c41f074f4 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed25c94a085553; op2val:0xbfe9909ac1b8a836; op3val:0x3fe7493c41f074f4; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 1600, x18)

inst_1117:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd25c94a085553 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x9909ac1b8a836 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7493c41f074f4 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed25c94a085553; op2val:0xbfe9909ac1b8a836; op3val:0x3fe7493c41f074f4; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 1616, x18)

inst_1118:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd25c94a085553 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x9909ac1b8a836 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7493c41f074f4 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed25c94a085553; op2val:0xbfe9909ac1b8a836; op3val:0x3fe7493c41f074f4; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 1632, x18)

inst_1119:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd25c94a085553 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x9909ac1b8a836 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7493c41f074f4 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed25c94a085553; op2val:0xbfe9909ac1b8a836; op3val:0x3fe7493c41f074f4; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 1648, x18)

inst_1120:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd25c94a085553 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x9909ac1b8a836 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x7493c41f074f4 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed25c94a085553; op2val:0xbfe9909ac1b8a836; op3val:0x3fe7493c41f074f4; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 1664, x18)

inst_1121:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0058cec875fb8 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x523d931381dd1 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x52b2e97478e8c and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0058cec875fb8; op2val:0xbff523d931381dd1; op3val:0x3fe52b2e97478e8c; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 1680, x18)

inst_1122:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0058cec875fb8 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x523d931381dd1 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x52b2e97478e8c and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0058cec875fb8; op2val:0xbff523d931381dd1; op3val:0x3fe52b2e97478e8c; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 1696, x18)

inst_1123:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0058cec875fb8 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x523d931381dd1 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x52b2e97478e8c and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0058cec875fb8; op2val:0xbff523d931381dd1; op3val:0x3fe52b2e97478e8c; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 1712, x18)

inst_1124:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0058cec875fb8 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x523d931381dd1 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x52b2e97478e8c and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0058cec875fb8; op2val:0xbff523d931381dd1; op3val:0x3fe52b2e97478e8c; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 1728, x18)

inst_1125:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0058cec875fb8 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x523d931381dd1 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x52b2e97478e8c and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0058cec875fb8; op2val:0xbff523d931381dd1; op3val:0x3fe52b2e97478e8c; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1744, x18)

inst_1126:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x493033484c5b0 and fs2 == 1 and fe2 == 0x402 and fm2 == 0x290f88a54c9d7 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x7dfce5080ba64 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fa493033484c5b0; op2val:0xc02290f88a54c9d7; op3val:0x3fd7dfce5080ba64; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 1760, x18)

inst_1127:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x493033484c5b0 and fs2 == 1 and fe2 == 0x402 and fm2 == 0x290f88a54c9d7 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x7dfce5080ba64 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fa493033484c5b0; op2val:0xc02290f88a54c9d7; op3val:0x3fd7dfce5080ba64; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 1776, x18)

inst_1128:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x493033484c5b0 and fs2 == 1 and fe2 == 0x402 and fm2 == 0x290f88a54c9d7 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x7dfce5080ba64 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fa493033484c5b0; op2val:0xc02290f88a54c9d7; op3val:0x3fd7dfce5080ba64; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 1792, x18)

inst_1129:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x493033484c5b0 and fs2 == 1 and fe2 == 0x402 and fm2 == 0x290f88a54c9d7 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x7dfce5080ba64 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fa493033484c5b0; op2val:0xc02290f88a54c9d7; op3val:0x3fd7dfce5080ba64; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 1808, x18)

inst_1130:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0x493033484c5b0 and fs2 == 1 and fe2 == 0x402 and fm2 == 0x290f88a54c9d7 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x7dfce5080ba64 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fa493033484c5b0; op2val:0xc02290f88a54c9d7; op3val:0x3fd7dfce5080ba64; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1824, x18)

inst_1131:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3ef9c20b63737 and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0x3163170cc2055 and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x7c83077df1c80 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3ef9c20b63737; op2val:0xbf93163170cc2055; op3val:0x3f87c83077df1c80; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 1840, x18)

inst_1132:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3ef9c20b63737 and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0x3163170cc2055 and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x7c83077df1c80 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3ef9c20b63737; op2val:0xbf93163170cc2055; op3val:0x3f87c83077df1c80; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 1856, x18)

inst_1133:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3ef9c20b63737 and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0x3163170cc2055 and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x7c83077df1c80 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3ef9c20b63737; op2val:0xbf93163170cc2055; op3val:0x3f87c83077df1c80; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 1872, x18)

inst_1134:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3ef9c20b63737 and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0x3163170cc2055 and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x7c83077df1c80 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3ef9c20b63737; op2val:0xbf93163170cc2055; op3val:0x3f87c83077df1c80; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 1888, x18)

inst_1135:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3ef9c20b63737 and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0x3163170cc2055 and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0x7c83077df1c80 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3ef9c20b63737; op2val:0xbf93163170cc2055; op3val:0x3f87c83077df1c80; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1904, x18)

inst_1136:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3142838647eb1 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x6e78c86fb4af7 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb4fd1e38cbcfb and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3142838647eb1; op2val:0xbff6e78c86fb4af7; op3val:0x3feb4fd1e38cbcfb; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 1920, x18)

inst_1137:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3142838647eb1 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x6e78c86fb4af7 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb4fd1e38cbcfb and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3142838647eb1; op2val:0xbff6e78c86fb4af7; op3val:0x3feb4fd1e38cbcfb; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 1936, x18)

inst_1138:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3142838647eb1 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x6e78c86fb4af7 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb4fd1e38cbcfb and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3142838647eb1; op2val:0xbff6e78c86fb4af7; op3val:0x3feb4fd1e38cbcfb; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 1952, x18)

inst_1139:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3142838647eb1 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x6e78c86fb4af7 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb4fd1e38cbcfb and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3142838647eb1; op2val:0xbff6e78c86fb4af7; op3val:0x3feb4fd1e38cbcfb; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 1968, x18)

inst_1140:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x3142838647eb1 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x6e78c86fb4af7 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb4fd1e38cbcfb and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe3142838647eb1; op2val:0xbff6e78c86fb4af7; op3val:0x3feb4fd1e38cbcfb; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1984, x18)

inst_1141:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0abaf2ae7633b and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x5c64baa348f3a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6aff1561ea322 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0abaf2ae7633b; op2val:0xbff5c64baa348f3a; op3val:0x3fe6aff1561ea322; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 2000, x18)

inst_1142:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0abaf2ae7633b and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x5c64baa348f3a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6aff1561ea322 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0abaf2ae7633b; op2val:0xbff5c64baa348f3a; op3val:0x3fe6aff1561ea322; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_10)

inst_1143:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0abaf2ae7633b and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x5c64baa348f3a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6aff1561ea322 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0abaf2ae7633b; op2val:0xbff5c64baa348f3a; op3val:0x3fe6aff1561ea322; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 0, x18)

inst_1144:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0abaf2ae7633b and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x5c64baa348f3a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6aff1561ea322 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0abaf2ae7633b; op2val:0xbff5c64baa348f3a; op3val:0x3fe6aff1561ea322; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 16, x18)

inst_1145:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0abaf2ae7633b and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x5c64baa348f3a and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6aff1561ea322 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0abaf2ae7633b; op2val:0xbff5c64baa348f3a; op3val:0x3fe6aff1561ea322; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 32, x18)

inst_1146:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x06100613ea0fb and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x0e9439cc688f5 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x14fca2d755886 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe06100613ea0fb; op2val:0xbfe0e9439cc688f5; op3val:0x3fd14fca2d755886; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 48, x18)

inst_1147:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x06100613ea0fb and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x0e9439cc688f5 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x14fca2d755886 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe06100613ea0fb; op2val:0xbfe0e9439cc688f5; op3val:0x3fd14fca2d755886; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 64, x18)

inst_1148:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x06100613ea0fb and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x0e9439cc688f5 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x14fca2d755886 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe06100613ea0fb; op2val:0xbfe0e9439cc688f5; op3val:0x3fd14fca2d755886; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 80, x18)

inst_1149:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x06100613ea0fb and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x0e9439cc688f5 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x14fca2d755886 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe06100613ea0fb; op2val:0xbfe0e9439cc688f5; op3val:0x3fd14fca2d755886; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 96, x18)

inst_1150:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x06100613ea0fb and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x0e9439cc688f5 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x14fca2d755886 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe06100613ea0fb; op2val:0xbfe0e9439cc688f5; op3val:0x3fd14fca2d755886; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 112, x18)

inst_1151:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x89178bd28bc60 and fs2 == 1 and fe2 == 0x403 and fm2 == 0x6c6beeec033db and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x17c99b428d355 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f989178bd28bc60; op2val:0xc036c6beeec033db; op3val:0x3fe17c99b428d355; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 128, x18)

inst_1152:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x89178bd28bc60 and fs2 == 1 and fe2 == 0x403 and fm2 == 0x6c6beeec033db and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x17c99b428d355 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f989178bd28bc60; op2val:0xc036c6beeec033db; op3val:0x3fe17c99b428d355; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 144, x18)

inst_1153:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x89178bd28bc60 and fs2 == 1 and fe2 == 0x403 and fm2 == 0x6c6beeec033db and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x17c99b428d355 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f989178bd28bc60; op2val:0xc036c6beeec033db; op3val:0x3fe17c99b428d355; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 160, x18)

inst_1154:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x89178bd28bc60 and fs2 == 1 and fe2 == 0x403 and fm2 == 0x6c6beeec033db and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x17c99b428d355 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f989178bd28bc60; op2val:0xc036c6beeec033db; op3val:0x3fe17c99b428d355; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 176, x18)

inst_1155:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x89178bd28bc60 and fs2 == 1 and fe2 == 0x403 and fm2 == 0x6c6beeec033db and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x17c99b428d355 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f989178bd28bc60; op2val:0xc036c6beeec033db; op3val:0x3fe17c99b428d355; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 192, x18)

inst_1156:
// fs1 == 0 and fe1 == 0x3f4 and fm1 == 0x6f07612d56000 and fs2 == 1 and fe2 == 0x406 and fm2 == 0xa61a99f3a42d2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x2e9626d4a96ac and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f46f07612d56000; op2val:0xc06a61a99f3a42d2; op3val:0x3fc2e9626d4a96ac; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 208, x18)

inst_1157:
// fs1 == 0 and fe1 == 0x3f4 and fm1 == 0x6f07612d56000 and fs2 == 1 and fe2 == 0x406 and fm2 == 0xa61a99f3a42d2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x2e9626d4a96ac and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f46f07612d56000; op2val:0xc06a61a99f3a42d2; op3val:0x3fc2e9626d4a96ac; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 224, x18)

inst_1158:
// fs1 == 0 and fe1 == 0x3f4 and fm1 == 0x6f07612d56000 and fs2 == 1 and fe2 == 0x406 and fm2 == 0xa61a99f3a42d2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x2e9626d4a96ac and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f46f07612d56000; op2val:0xc06a61a99f3a42d2; op3val:0x3fc2e9626d4a96ac; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 240, x18)

inst_1159:
// fs1 == 0 and fe1 == 0x3f4 and fm1 == 0x6f07612d56000 and fs2 == 1 and fe2 == 0x406 and fm2 == 0xa61a99f3a42d2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x2e9626d4a96ac and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f46f07612d56000; op2val:0xc06a61a99f3a42d2; op3val:0x3fc2e9626d4a96ac; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 256, x18)

inst_1160:
// fs1 == 0 and fe1 == 0x3f4 and fm1 == 0x6f07612d56000 and fs2 == 1 and fe2 == 0x406 and fm2 == 0xa61a99f3a42d2 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x2e9626d4a96ac and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f46f07612d56000; op2val:0xc06a61a99f3a42d2; op3val:0x3fc2e9626d4a96ac; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 272, x18)

inst_1161:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x690e47b6f68a3 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x8d093a03e4bf2 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x17fc1444fde5c and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe690e47b6f68a3; op2val:0xbfe8d093a03e4bf2; op3val:0x3fe17fc1444fde5c; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 288, x18)

inst_1162:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x690e47b6f68a3 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x8d093a03e4bf2 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x17fc1444fde5c and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe690e47b6f68a3; op2val:0xbfe8d093a03e4bf2; op3val:0x3fe17fc1444fde5c; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 304, x18)

inst_1163:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x690e47b6f68a3 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x8d093a03e4bf2 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x17fc1444fde5c and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe690e47b6f68a3; op2val:0xbfe8d093a03e4bf2; op3val:0x3fe17fc1444fde5c; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 320, x18)

inst_1164:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x690e47b6f68a3 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x8d093a03e4bf2 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x17fc1444fde5c and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe690e47b6f68a3; op2val:0xbfe8d093a03e4bf2; op3val:0x3fe17fc1444fde5c; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 336, x18)

inst_1165:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x690e47b6f68a3 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x8d093a03e4bf2 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x17fc1444fde5c and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe690e47b6f68a3; op2val:0xbfe8d093a03e4bf2; op3val:0x3fe17fc1444fde5c; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 352, x18)

inst_1166:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb3961d3c3d1a3 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x75c4a457c04fa and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x3dfc2794508e4 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb3961d3c3d1a3; op2val:0xbfc75c4a457c04fa; op3val:0x3fc3dfc2794508e4; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 368, x18)

inst_1167:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb3961d3c3d1a3 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x75c4a457c04fa and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x3dfc2794508e4 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb3961d3c3d1a3; op2val:0xbfc75c4a457c04fa; op3val:0x3fc3dfc2794508e4; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 384, x18)

inst_1168:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb3961d3c3d1a3 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x75c4a457c04fa and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x3dfc2794508e4 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb3961d3c3d1a3; op2val:0xbfc75c4a457c04fa; op3val:0x3fc3dfc2794508e4; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 400, x18)

inst_1169:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb3961d3c3d1a3 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x75c4a457c04fa and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x3dfc2794508e4 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb3961d3c3d1a3; op2val:0xbfc75c4a457c04fa; op3val:0x3fc3dfc2794508e4; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 416, x18)

inst_1170:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb3961d3c3d1a3 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x75c4a457c04fa and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x3dfc2794508e4 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb3961d3c3d1a3; op2val:0xbfc75c4a457c04fa; op3val:0x3fc3dfc2794508e4; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 432, x18)

inst_1171:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc967b675320a0 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x441010758ece0 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2181fb6820ce9 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec967b675320a0; op2val:0xbfe441010758ece0; op3val:0x3fe2181fb6820ce9; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 448, x18)

inst_1172:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc967b675320a0 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x441010758ece0 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2181fb6820ce9 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec967b675320a0; op2val:0xbfe441010758ece0; op3val:0x3fe2181fb6820ce9; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 464, x18)

inst_1173:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc967b675320a0 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x441010758ece0 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2181fb6820ce9 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec967b675320a0; op2val:0xbfe441010758ece0; op3val:0x3fe2181fb6820ce9; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 480, x18)

inst_1174:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc967b675320a0 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x441010758ece0 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2181fb6820ce9 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec967b675320a0; op2val:0xbfe441010758ece0; op3val:0x3fe2181fb6820ce9; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 496, x18)

inst_1175:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc967b675320a0 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x441010758ece0 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x2181fb6820ce9 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec967b675320a0; op2val:0xbfe441010758ece0; op3val:0x3fe2181fb6820ce9; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 512, x18)

inst_1176:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x7a789b8d3f9e6 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x25aa7601b289f and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xb2280c960fbc0 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd7a789b8d3f9e6; op2val:0xbfe25aa7601b289f; op3val:0x3fcb2280c960fbc0; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 528, x18)

inst_1177:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x7a789b8d3f9e6 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x25aa7601b289f and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xb2280c960fbc0 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd7a789b8d3f9e6; op2val:0xbfe25aa7601b289f; op3val:0x3fcb2280c960fbc0; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 544, x18)

inst_1178:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x7a789b8d3f9e6 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x25aa7601b289f and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xb2280c960fbc0 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd7a789b8d3f9e6; op2val:0xbfe25aa7601b289f; op3val:0x3fcb2280c960fbc0; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 560, x18)

inst_1179:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x7a789b8d3f9e6 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x25aa7601b289f and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xb2280c960fbc0 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd7a789b8d3f9e6; op2val:0xbfe25aa7601b289f; op3val:0x3fcb2280c960fbc0; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 576, x18)

inst_1180:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x7a789b8d3f9e6 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x25aa7601b289f and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xb2280c960fbc0 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd7a789b8d3f9e6; op2val:0xbfe25aa7601b289f; op3val:0x3fcb2280c960fbc0; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 592, x18)

inst_1181:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x12c68fb7cd49c and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x7f262da1f0259 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x9b400b7809500 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd12c68fb7cd49c; op2val:0xbfc7f262da1f0259; op3val:0x3fa9b400b7809500; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 608, x18)

inst_1182:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x12c68fb7cd49c and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x7f262da1f0259 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x9b400b7809500 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd12c68fb7cd49c; op2val:0xbfc7f262da1f0259; op3val:0x3fa9b400b7809500; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 624, x18)

inst_1183:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x12c68fb7cd49c and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x7f262da1f0259 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x9b400b7809500 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd12c68fb7cd49c; op2val:0xbfc7f262da1f0259; op3val:0x3fa9b400b7809500; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 640, x18)

inst_1184:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x12c68fb7cd49c and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x7f262da1f0259 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x9b400b7809500 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd12c68fb7cd49c; op2val:0xbfc7f262da1f0259; op3val:0x3fa9b400b7809500; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 656, x18)

inst_1185:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x12c68fb7cd49c and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x7f262da1f0259 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x9b400b7809500 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd12c68fb7cd49c; op2val:0xbfc7f262da1f0259; op3val:0x3fa9b400b7809500; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 672, x18)

inst_1186:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x4ae596cafe1f8 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x5863f0ad32f6b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbd25b081325f8 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc4ae596cafe1f8; op2val:0xc015863f0ad32f6b; op3val:0x3febd25b081325f8; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 688, x18)

inst_1187:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x4ae596cafe1f8 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x5863f0ad32f6b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbd25b081325f8 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc4ae596cafe1f8; op2val:0xc015863f0ad32f6b; op3val:0x3febd25b081325f8; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 704, x18)

inst_1188:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x4ae596cafe1f8 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x5863f0ad32f6b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbd25b081325f8 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc4ae596cafe1f8; op2val:0xc015863f0ad32f6b; op3val:0x3febd25b081325f8; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 720, x18)

inst_1189:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x4ae596cafe1f8 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x5863f0ad32f6b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbd25b081325f8 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc4ae596cafe1f8; op2val:0xc015863f0ad32f6b; op3val:0x3febd25b081325f8; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 736, x18)
addi x16,x16,2040

inst_1190:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x4ae596cafe1f8 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x5863f0ad32f6b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbd25b081325f8 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc4ae596cafe1f8; op2val:0xc015863f0ad32f6b; op3val:0x3febd25b081325f8; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 752, x18)

inst_1191:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xef3f2a0cb187b and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x0c110c7780656 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x034b8daa9cb55 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feef3f2a0cb187b; op2val:0xbfe0c110c7780656; op3val:0x3fe034b8daa9cb55; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 768, x18)

inst_1192:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xef3f2a0cb187b and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x0c110c7780656 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x034b8daa9cb55 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feef3f2a0cb187b; op2val:0xbfe0c110c7780656; op3val:0x3fe034b8daa9cb55; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 784, x18)

inst_1193:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xef3f2a0cb187b and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x0c110c7780656 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x034b8daa9cb55 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feef3f2a0cb187b; op2val:0xbfe0c110c7780656; op3val:0x3fe034b8daa9cb55; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 800, x18)

inst_1194:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xef3f2a0cb187b and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x0c110c7780656 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x034b8daa9cb55 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feef3f2a0cb187b; op2val:0xbfe0c110c7780656; op3val:0x3fe034b8daa9cb55; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 816, x18)

inst_1195:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xef3f2a0cb187b and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x0c110c7780656 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x034b8daa9cb55 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feef3f2a0cb187b; op2val:0xbfe0c110c7780656; op3val:0x3fe034b8daa9cb55; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 832, x18)

inst_1196:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe37a5781573c2 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x6c0f8e5bd8ce2 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x57c7aab92d8c8 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fee37a5781573c2; op2val:0xbfb6c0f8e5bd8ce2; op3val:0x3fb57c7aab92d8c8; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 848, x18)

inst_1197:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe37a5781573c2 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x6c0f8e5bd8ce2 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x57c7aab92d8c8 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fee37a5781573c2; op2val:0xbfb6c0f8e5bd8ce2; op3val:0x3fb57c7aab92d8c8; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 864, x18)

inst_1198:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe37a5781573c2 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x6c0f8e5bd8ce2 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x57c7aab92d8c8 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fee37a5781573c2; op2val:0xbfb6c0f8e5bd8ce2; op3val:0x3fb57c7aab92d8c8; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 880, x18)

inst_1199:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe37a5781573c2 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x6c0f8e5bd8ce2 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x57c7aab92d8c8 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fee37a5781573c2; op2val:0xbfb6c0f8e5bd8ce2; op3val:0x3fb57c7aab92d8c8; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 896, x18)

inst_1200:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xe37a5781573c2 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x6c0f8e5bd8ce2 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x57c7aab92d8c8 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fee37a5781573c2; op2val:0xbfb6c0f8e5bd8ce2; op3val:0x3fb57c7aab92d8c8; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 912, x18)

inst_1201:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x16b310565690e and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0ff261bb603c5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x280f6df6ae03a and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe16b310565690e; op2val:0xbff0ff261bb603c5; op3val:0x3fe280f6df6ae03a; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 928, x18)

inst_1202:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x16b310565690e and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0ff261bb603c5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x280f6df6ae03a and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe16b310565690e; op2val:0xbff0ff261bb603c5; op3val:0x3fe280f6df6ae03a; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 944, x18)

inst_1203:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x16b310565690e and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0ff261bb603c5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x280f6df6ae03a and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe16b310565690e; op2val:0xbff0ff261bb603c5; op3val:0x3fe280f6df6ae03a; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 960, x18)

inst_1204:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x16b310565690e and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0ff261bb603c5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x280f6df6ae03a and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe16b310565690e; op2val:0xbff0ff261bb603c5; op3val:0x3fe280f6df6ae03a; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 976, x18)

inst_1205:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x16b310565690e and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0ff261bb603c5 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x280f6df6ae03a and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe16b310565690e; op2val:0xbff0ff261bb603c5; op3val:0x3fe280f6df6ae03a; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 992, x18)

inst_1206:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x9fc8e453fd48a and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xb611a2db21769 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x63bf2dbff2500 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd9fc8e453fd48a; op2val:0xbfdb611a2db21769; op3val:0x3fc63bf2dbff2500; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 1008, x18)

inst_1207:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x9fc8e453fd48a and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xb611a2db21769 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x63bf2dbff2500 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd9fc8e453fd48a; op2val:0xbfdb611a2db21769; op3val:0x3fc63bf2dbff2500; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 1024, x18)

inst_1208:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x9fc8e453fd48a and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xb611a2db21769 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x63bf2dbff2500 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd9fc8e453fd48a; op2val:0xbfdb611a2db21769; op3val:0x3fc63bf2dbff2500; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 1040, x18)

inst_1209:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x9fc8e453fd48a and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xb611a2db21769 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x63bf2dbff2500 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd9fc8e453fd48a; op2val:0xbfdb611a2db21769; op3val:0x3fc63bf2dbff2500; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 1056, x18)

inst_1210:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x9fc8e453fd48a and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xb611a2db21769 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x63bf2dbff2500 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd9fc8e453fd48a; op2val:0xbfdb611a2db21769; op3val:0x3fc63bf2dbff2500; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1072, x18)

inst_1211:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x302f71fdf68e1 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x48a0c464b0f32 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x867bd1109ab09 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe302f71fdf68e1; op2val:0xbff48a0c464b0f32; op3val:0x3fe867bd1109ab09; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 1088, x18)

inst_1212:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x302f71fdf68e1 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x48a0c464b0f32 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x867bd1109ab09 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe302f71fdf68e1; op2val:0xbff48a0c464b0f32; op3val:0x3fe867bd1109ab09; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 1104, x18)

inst_1213:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x302f71fdf68e1 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x48a0c464b0f32 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x867bd1109ab09 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe302f71fdf68e1; op2val:0xbff48a0c464b0f32; op3val:0x3fe867bd1109ab09; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 1120, x18)

inst_1214:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x302f71fdf68e1 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x48a0c464b0f32 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x867bd1109ab09 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe302f71fdf68e1; op2val:0xbff48a0c464b0f32; op3val:0x3fe867bd1109ab09; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 1136, x18)

inst_1215:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x302f71fdf68e1 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x48a0c464b0f32 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x867bd1109ab09 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe302f71fdf68e1; op2val:0xbff48a0c464b0f32; op3val:0x3fe867bd1109ab09; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1152, x18)

inst_1216:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0xb3d7f663bda80 and fs2 == 1 and fe2 == 0x404 and fm2 == 0x1890703a81cce and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xddaa1e09c7408 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f8b3d7f663bda80; op2val:0xc041890703a81cce; op3val:0x3fdddaa1e09c7408; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 1168, x18)

inst_1217:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0xb3d7f663bda80 and fs2 == 1 and fe2 == 0x404 and fm2 == 0x1890703a81cce and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xddaa1e09c7408 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f8b3d7f663bda80; op2val:0xc041890703a81cce; op3val:0x3fdddaa1e09c7408; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 1184, x18)

inst_1218:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0xb3d7f663bda80 and fs2 == 1 and fe2 == 0x404 and fm2 == 0x1890703a81cce and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xddaa1e09c7408 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f8b3d7f663bda80; op2val:0xc041890703a81cce; op3val:0x3fdddaa1e09c7408; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 1200, x18)

inst_1219:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0xb3d7f663bda80 and fs2 == 1 and fe2 == 0x404 and fm2 == 0x1890703a81cce and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xddaa1e09c7408 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f8b3d7f663bda80; op2val:0xc041890703a81cce; op3val:0x3fdddaa1e09c7408; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 1216, x18)

inst_1220:
// fs1 == 0 and fe1 == 0x3f8 and fm1 == 0xb3d7f663bda80 and fs2 == 1 and fe2 == 0x404 and fm2 == 0x1890703a81cce and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xddaa1e09c7408 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f8b3d7f663bda80; op2val:0xc041890703a81cce; op3val:0x3fdddaa1e09c7408; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1232, x18)

inst_1221:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xad4c0291e968d and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x227e75b7faf5d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe7242bbad194a and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fead4c0291e968d; op2val:0xbff227e75b7faf5d; op3val:0x3fee7242bbad194a; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 1248, x18)

inst_1222:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xad4c0291e968d and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x227e75b7faf5d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe7242bbad194a and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fead4c0291e968d; op2val:0xbff227e75b7faf5d; op3val:0x3fee7242bbad194a; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 1264, x18)

inst_1223:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xad4c0291e968d and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x227e75b7faf5d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe7242bbad194a and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fead4c0291e968d; op2val:0xbff227e75b7faf5d; op3val:0x3fee7242bbad194a; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 1280, x18)

inst_1224:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xad4c0291e968d and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x227e75b7faf5d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe7242bbad194a and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fead4c0291e968d; op2val:0xbff227e75b7faf5d; op3val:0x3fee7242bbad194a; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 1296, x18)

inst_1225:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xad4c0291e968d and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x227e75b7faf5d and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe7242bbad194a and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fead4c0291e968d; op2val:0xbff227e75b7faf5d; op3val:0x3fee7242bbad194a; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1312, x18)

inst_1226:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3e49045868bda and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x5911463e08067 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xad05e10985e00 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd3e49045868bda; op2val:0xbf85911463e08067; op3val:0x3f6ad05e10985e00; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 1328, x18)

inst_1227:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3e49045868bda and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x5911463e08067 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xad05e10985e00 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd3e49045868bda; op2val:0xbf85911463e08067; op3val:0x3f6ad05e10985e00; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 1344, x18)

inst_1228:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3e49045868bda and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x5911463e08067 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xad05e10985e00 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd3e49045868bda; op2val:0xbf85911463e08067; op3val:0x3f6ad05e10985e00; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 1360, x18)

inst_1229:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3e49045868bda and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x5911463e08067 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xad05e10985e00 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd3e49045868bda; op2val:0xbf85911463e08067; op3val:0x3f6ad05e10985e00; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 1376, x18)

inst_1230:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3e49045868bda and fs2 == 1 and fe2 == 0x3f8 and fm2 == 0x5911463e08067 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xad05e10985e00 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd3e49045868bda; op2val:0xbf85911463e08067; op3val:0x3f6ad05e10985e00; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 1392, x18)

inst_1231:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd7f6a9d7e26a1 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd8bf1e9f7ce01 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb3c79151d8ec7 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed7f6a9d7e26a1; op2val:0xbfed8bf1e9f7ce01; op3val:0x3feb3c79151d8ec7; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 1408, x18)

inst_1232:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd7f6a9d7e26a1 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd8bf1e9f7ce01 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb3c79151d8ec7 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed7f6a9d7e26a1; op2val:0xbfed8bf1e9f7ce01; op3val:0x3feb3c79151d8ec7; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 1424, x18)

inst_1233:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd7f6a9d7e26a1 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd8bf1e9f7ce01 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb3c79151d8ec7 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed7f6a9d7e26a1; op2val:0xbfed8bf1e9f7ce01; op3val:0x3feb3c79151d8ec7; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 1440, x18)

inst_1234:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd7f6a9d7e26a1 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd8bf1e9f7ce01 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb3c79151d8ec7 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed7f6a9d7e26a1; op2val:0xbfed8bf1e9f7ce01; op3val:0x3feb3c79151d8ec7; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 1456, x18)

inst_1235:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd7f6a9d7e26a1 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd8bf1e9f7ce01 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb3c79151d8ec7 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed7f6a9d7e26a1; op2val:0xbfed8bf1e9f7ce01; op3val:0x3feb3c79151d8ec7; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 1472, x18)

inst_1236:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5dcc646c67b18 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x34347daab5068 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa521a20ce0e4a and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe5dcc646c67b18; op2val:0xbff34347daab5068; op3val:0x3fea521a20ce0e4a; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 1488, x18)

inst_1237:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5dcc646c67b18 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x34347daab5068 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa521a20ce0e4a and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe5dcc646c67b18; op2val:0xbff34347daab5068; op3val:0x3fea521a20ce0e4a; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 1504, x18)

inst_1238:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5dcc646c67b18 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x34347daab5068 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa521a20ce0e4a and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe5dcc646c67b18; op2val:0xbff34347daab5068; op3val:0x3fea521a20ce0e4a; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 1520, x18)

inst_1239:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5dcc646c67b18 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x34347daab5068 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa521a20ce0e4a and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe5dcc646c67b18; op2val:0xbff34347daab5068; op3val:0x3fea521a20ce0e4a; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 1536, x18)

inst_1240:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5dcc646c67b18 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x34347daab5068 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa521a20ce0e4a and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe5dcc646c67b18; op2val:0xbff34347daab5068; op3val:0x3fea521a20ce0e4a; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 1552, x18)

inst_1241:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xd1c5c2f436f0e and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x82f6af259db09 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x600681541922d and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdd1c5c2f436f0e; op2val:0xbff82f6af259db09; op3val:0x3fe600681541922d; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 1568, x18)

inst_1242:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xd1c5c2f436f0e and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x82f6af259db09 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x600681541922d and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdd1c5c2f436f0e; op2val:0xbff82f6af259db09; op3val:0x3fe600681541922d; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 1584, x18)

inst_1243:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xd1c5c2f436f0e and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x82f6af259db09 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x600681541922d and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdd1c5c2f436f0e; op2val:0xbff82f6af259db09; op3val:0x3fe600681541922d; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 1600, x18)

inst_1244:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xd1c5c2f436f0e and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x82f6af259db09 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x600681541922d and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdd1c5c2f436f0e; op2val:0xbff82f6af259db09; op3val:0x3fe600681541922d; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 1616, x18)

inst_1245:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xd1c5c2f436f0e and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x82f6af259db09 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x600681541922d and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdd1c5c2f436f0e; op2val:0xbff82f6af259db09; op3val:0x3fe600681541922d; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 1632, x18)

inst_1246:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x51f0d32e5b518 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xd667c31fd3c16 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x367c8e9843ee8 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe51f0d32e5b518; op2val:0xbfbd667c31fd3c16; op3val:0x3fb367c8e9843ee8; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 1648, x18)

inst_1247:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x51f0d32e5b518 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xd667c31fd3c16 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x367c8e9843ee8 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe51f0d32e5b518; op2val:0xbfbd667c31fd3c16; op3val:0x3fb367c8e9843ee8; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 1664, x18)

inst_1248:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x51f0d32e5b518 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xd667c31fd3c16 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x367c8e9843ee8 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe51f0d32e5b518; op2val:0xbfbd667c31fd3c16; op3val:0x3fb367c8e9843ee8; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 1680, x18)

inst_1249:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x51f0d32e5b518 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xd667c31fd3c16 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x367c8e9843ee8 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe51f0d32e5b518; op2val:0xbfbd667c31fd3c16; op3val:0x3fb367c8e9843ee8; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 1696, x18)

inst_1250:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x51f0d32e5b518 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xd667c31fd3c16 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x367c8e9843ee8 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe51f0d32e5b518; op2val:0xbfbd667c31fd3c16; op3val:0x3fb367c8e9843ee8; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 1712, x18)

inst_1251:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8e8339d1957d0 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xaf0fdc948ab06 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x4f83cfb41fb40 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd8e8339d1957d0; op2val:0xbfcaf0fdc948ab06; op3val:0x3fb4f83cfb41fb40; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 1728, x18)

inst_1252:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8e8339d1957d0 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xaf0fdc948ab06 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x4f83cfb41fb40 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd8e8339d1957d0; op2val:0xbfcaf0fdc948ab06; op3val:0x3fb4f83cfb41fb40; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 1744, x18)

inst_1253:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8e8339d1957d0 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xaf0fdc948ab06 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x4f83cfb41fb40 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd8e8339d1957d0; op2val:0xbfcaf0fdc948ab06; op3val:0x3fb4f83cfb41fb40; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 1760, x18)

inst_1254:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8e8339d1957d0 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xaf0fdc948ab06 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x4f83cfb41fb40 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd8e8339d1957d0; op2val:0xbfcaf0fdc948ab06; op3val:0x3fb4f83cfb41fb40; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 1776, x18)

inst_1255:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x8e8339d1957d0 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xaf0fdc948ab06 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x4f83cfb41fb40 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd8e8339d1957d0; op2val:0xbfcaf0fdc948ab06; op3val:0x3fb4f83cfb41fb40; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1792, x18)

inst_1256:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd150df72a8355 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x7367d25f25d0f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x518a74df2cf93 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed150df72a8355; op2val:0xbfe7367d25f25d0f; op3val:0x3fe518a74df2cf93; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 1808, x18)

inst_1257:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd150df72a8355 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x7367d25f25d0f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x518a74df2cf93 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed150df72a8355; op2val:0xbfe7367d25f25d0f; op3val:0x3fe518a74df2cf93; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 1824, x18)

inst_1258:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd150df72a8355 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x7367d25f25d0f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x518a74df2cf93 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed150df72a8355; op2val:0xbfe7367d25f25d0f; op3val:0x3fe518a74df2cf93; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 1840, x18)

inst_1259:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd150df72a8355 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x7367d25f25d0f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x518a74df2cf93 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed150df72a8355; op2val:0xbfe7367d25f25d0f; op3val:0x3fe518a74df2cf93; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 1856, x18)

inst_1260:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xd150df72a8355 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x7367d25f25d0f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x518a74df2cf93 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fed150df72a8355; op2val:0xbfe7367d25f25d0f; op3val:0x3fe518a74df2cf93; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1872, x18)

inst_1261:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xed3ea0244a1c3 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0xcce34fde9066f and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xbc0140162da60 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feed3ea0244a1c3; op2val:0xbfacce34fde9066f; op3val:0x3fabc0140162da60; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 1888, x18)

inst_1262:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xed3ea0244a1c3 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0xcce34fde9066f and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xbc0140162da60 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feed3ea0244a1c3; op2val:0xbfacce34fde9066f; op3val:0x3fabc0140162da60; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 1904, x18)

inst_1263:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xed3ea0244a1c3 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0xcce34fde9066f and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xbc0140162da60 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feed3ea0244a1c3; op2val:0xbfacce34fde9066f; op3val:0x3fabc0140162da60; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 1920, x18)

inst_1264:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xed3ea0244a1c3 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0xcce34fde9066f and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xbc0140162da60 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feed3ea0244a1c3; op2val:0xbfacce34fde9066f; op3val:0x3fabc0140162da60; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 1936, x18)

inst_1265:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xed3ea0244a1c3 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0xcce34fde9066f and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xbc0140162da60 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feed3ea0244a1c3; op2val:0xbfacce34fde9066f; op3val:0x3fabc0140162da60; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1952, x18)

inst_1266:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x9f479ea1f8cf8 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x62451fe601661 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x1f5895b442450 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc9f479ea1f8cf8; op2val:0xbfe62451fe601661; op3val:0x3fc1f5895b442450; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 1968, x18)

inst_1267:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x9f479ea1f8cf8 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x62451fe601661 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x1f5895b442450 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc9f479ea1f8cf8; op2val:0xbfe62451fe601661; op3val:0x3fc1f5895b442450; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 1984, x18)

inst_1268:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x9f479ea1f8cf8 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x62451fe601661 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x1f5895b442450 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc9f479ea1f8cf8; op2val:0xbfe62451fe601661; op3val:0x3fc1f5895b442450; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 2000, x18)

inst_1269:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x9f479ea1f8cf8 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x62451fe601661 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x1f5895b442450 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc9f479ea1f8cf8; op2val:0xbfe62451fe601661; op3val:0x3fc1f5895b442450; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_11)

inst_1270:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x9f479ea1f8cf8 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x62451fe601661 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x1f5895b442450 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc9f479ea1f8cf8; op2val:0xbfe62451fe601661; op3val:0x3fc1f5895b442450; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 0, x18)

inst_1271:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc8ad4b5a41513 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x20da04f9d24ce and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x01a3f09c089d0 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec8ad4b5a41513; op2val:0xbfd20da04f9d24ce; op3val:0x3fd01a3f09c089d0; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 16, x18)

inst_1272:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc8ad4b5a41513 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x20da04f9d24ce and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x01a3f09c089d0 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec8ad4b5a41513; op2val:0xbfd20da04f9d24ce; op3val:0x3fd01a3f09c089d0; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 32, x18)

inst_1273:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc8ad4b5a41513 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x20da04f9d24ce and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x01a3f09c089d0 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec8ad4b5a41513; op2val:0xbfd20da04f9d24ce; op3val:0x3fd01a3f09c089d0; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 48, x18)

inst_1274:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc8ad4b5a41513 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x20da04f9d24ce and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x01a3f09c089d0 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec8ad4b5a41513; op2val:0xbfd20da04f9d24ce; op3val:0x3fd01a3f09c089d0; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 64, x18)
addi x16,x16,2040

inst_1275:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xc8ad4b5a41513 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x20da04f9d24ce and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x01a3f09c089d0 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fec8ad4b5a41513; op2val:0xbfd20da04f9d24ce; op3val:0x3fd01a3f09c089d0; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 80, x18)

inst_1276:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xe6b490dfe2b50 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xe372fd2bff52e and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xcb90a58982adc and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fde6b490dfe2b50; op2val:0xbfde372fd2bff52e; op3val:0x3fccb90a58982adc; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 96, x18)

inst_1277:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xe6b490dfe2b50 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xe372fd2bff52e and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xcb90a58982adc and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fde6b490dfe2b50; op2val:0xbfde372fd2bff52e; op3val:0x3fccb90a58982adc; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 112, x18)

inst_1278:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xe6b490dfe2b50 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xe372fd2bff52e and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xcb90a58982adc and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fde6b490dfe2b50; op2val:0xbfde372fd2bff52e; op3val:0x3fccb90a58982adc; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 128, x18)

inst_1279:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xe6b490dfe2b50 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xe372fd2bff52e and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xcb90a58982adc and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fde6b490dfe2b50; op2val:0xbfde372fd2bff52e; op3val:0x3fccb90a58982adc; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 144, x18)

inst_1280:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xe6b490dfe2b50 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xe372fd2bff52e and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xcb90a58982adc and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fde6b490dfe2b50; op2val:0xbfde372fd2bff52e; op3val:0x3fccb90a58982adc; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 160, x18)

inst_1281:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4fad2fdf3343f and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xf7de8aa740800 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4a588b86ddd25 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe4fad2fdf3343f; op2val:0xbfef7de8aa740800; op3val:0x3fe4a588b86ddd25; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 176, x18)

inst_1282:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4fad2fdf3343f and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xf7de8aa740800 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4a588b86ddd25 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe4fad2fdf3343f; op2val:0xbfef7de8aa740800; op3val:0x3fe4a588b86ddd25; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 192, x18)

inst_1283:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4fad2fdf3343f and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xf7de8aa740800 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4a588b86ddd25 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe4fad2fdf3343f; op2val:0xbfef7de8aa740800; op3val:0x3fe4a588b86ddd25; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 208, x18)

inst_1284:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4fad2fdf3343f and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xf7de8aa740800 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4a588b86ddd25 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe4fad2fdf3343f; op2val:0xbfef7de8aa740800; op3val:0x3fe4a588b86ddd25; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 224, x18)

inst_1285:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x4fad2fdf3343f and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xf7de8aa740800 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x4a588b86ddd25 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe4fad2fdf3343f; op2val:0xbfef7de8aa740800; op3val:0x3fe4a588b86ddd25; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 240, x18)

inst_1286:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x2021be5c6b648 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xa5d4b562cfe4a and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xdac6e626b3a40 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb2021be5c6b648; op2val:0xbfea5d4b562cfe4a; op3val:0x3fadac6e626b3a40; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 256, x18)

inst_1287:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x2021be5c6b648 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xa5d4b562cfe4a and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xdac6e626b3a40 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb2021be5c6b648; op2val:0xbfea5d4b562cfe4a; op3val:0x3fadac6e626b3a40; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 272, x18)

inst_1288:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x2021be5c6b648 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xa5d4b562cfe4a and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xdac6e626b3a40 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb2021be5c6b648; op2val:0xbfea5d4b562cfe4a; op3val:0x3fadac6e626b3a40; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 288, x18)

inst_1289:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x2021be5c6b648 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xa5d4b562cfe4a and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xdac6e626b3a40 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb2021be5c6b648; op2val:0xbfea5d4b562cfe4a; op3val:0x3fadac6e626b3a40; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 304, x18)

inst_1290:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x2021be5c6b648 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xa5d4b562cfe4a and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xdac6e626b3a40 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb2021be5c6b648; op2val:0xbfea5d4b562cfe4a; op3val:0x3fadac6e626b3a40; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 320, x18)

inst_1291:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9b6182f861f7a and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x374dca71351c7 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xf44077c100750 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9b6182f861f7a; op2val:0xbfd374dca71351c7; op3val:0x3fcf44077c100750; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 336, x18)

inst_1292:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9b6182f861f7a and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x374dca71351c7 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xf44077c100750 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9b6182f861f7a; op2val:0xbfd374dca71351c7; op3val:0x3fcf44077c100750; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 352, x18)

inst_1293:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9b6182f861f7a and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x374dca71351c7 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xf44077c100750 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9b6182f861f7a; op2val:0xbfd374dca71351c7; op3val:0x3fcf44077c100750; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 368, x18)

inst_1294:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9b6182f861f7a and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x374dca71351c7 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xf44077c100750 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9b6182f861f7a; op2val:0xbfd374dca71351c7; op3val:0x3fcf44077c100750; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 384, x18)

inst_1295:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x9b6182f861f7a and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x374dca71351c7 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xf44077c100750 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe9b6182f861f7a; op2val:0xbfd374dca71351c7; op3val:0x3fcf44077c100750; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 400, x18)

inst_1296:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa35e855815160 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0xc04431ff9e623 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x6f2a902eb3370 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea35e855815160; op2val:0xbfac04431ff9e623; op3val:0x3fa6f2a902eb3370; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 416, x18)

inst_1297:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa35e855815160 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0xc04431ff9e623 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x6f2a902eb3370 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea35e855815160; op2val:0xbfac04431ff9e623; op3val:0x3fa6f2a902eb3370; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 432, x18)

inst_1298:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa35e855815160 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0xc04431ff9e623 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x6f2a902eb3370 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea35e855815160; op2val:0xbfac04431ff9e623; op3val:0x3fa6f2a902eb3370; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 448, x18)

inst_1299:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa35e855815160 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0xc04431ff9e623 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x6f2a902eb3370 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea35e855815160; op2val:0xbfac04431ff9e623; op3val:0x3fa6f2a902eb3370; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 464, x18)

inst_1300:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xa35e855815160 and fs2 == 1 and fe2 == 0x3fa and fm2 == 0xc04431ff9e623 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x6f2a902eb3370 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fea35e855815160; op2val:0xbfac04431ff9e623; op3val:0x3fa6f2a902eb3370; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 480, x18)

inst_1301:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xfb5a13e304f5d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xec8c188e2ec1b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe8136212b416c and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fefb5a13e304f5d; op2val:0xbfeec8c188e2ec1b; op3val:0x3fee8136212b416c; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 496, x18)

inst_1302:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xfb5a13e304f5d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xec8c188e2ec1b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe8136212b416c and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fefb5a13e304f5d; op2val:0xbfeec8c188e2ec1b; op3val:0x3fee8136212b416c; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 512, x18)

inst_1303:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xfb5a13e304f5d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xec8c188e2ec1b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe8136212b416c and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fefb5a13e304f5d; op2val:0xbfeec8c188e2ec1b; op3val:0x3fee8136212b416c; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 528, x18)

inst_1304:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xfb5a13e304f5d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xec8c188e2ec1b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe8136212b416c and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fefb5a13e304f5d; op2val:0xbfeec8c188e2ec1b; op3val:0x3fee8136212b416c; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 544, x18)

inst_1305:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xfb5a13e304f5d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xec8c188e2ec1b and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe8136212b416c and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fefb5a13e304f5d; op2val:0xbfeec8c188e2ec1b; op3val:0x3fee8136212b416c; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 560, x18)

inst_1306:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x448377e7e9a11 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x54799b8ed1102 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xaf98c29452710 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe448377e7e9a11; op2val:0xbfe54799b8ed1102; op3val:0x3fdaf98c29452710; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 576, x18)

inst_1307:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x448377e7e9a11 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x54799b8ed1102 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xaf98c29452710 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe448377e7e9a11; op2val:0xbfe54799b8ed1102; op3val:0x3fdaf98c29452710; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 592, x18)

inst_1308:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x448377e7e9a11 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x54799b8ed1102 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xaf98c29452710 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe448377e7e9a11; op2val:0xbfe54799b8ed1102; op3val:0x3fdaf98c29452710; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 608, x18)

inst_1309:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x448377e7e9a11 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x54799b8ed1102 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xaf98c29452710 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe448377e7e9a11; op2val:0xbfe54799b8ed1102; op3val:0x3fdaf98c29452710; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 624, x18)

inst_1310:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x448377e7e9a11 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x54799b8ed1102 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xaf98c29452710 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe448377e7e9a11; op2val:0xbfe54799b8ed1102; op3val:0x3fdaf98c29452710; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 640, x18)

inst_1311:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf6bfda1cdc1a9 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xbab5ecbe4405a and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xb2b64294c7bd0 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef6bfda1cdc1a9; op2val:0xbfcbab5ecbe4405a; op3val:0x3fcb2b64294c7bd0; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 656, x18)

inst_1312:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf6bfda1cdc1a9 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xbab5ecbe4405a and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xb2b64294c7bd0 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef6bfda1cdc1a9; op2val:0xbfcbab5ecbe4405a; op3val:0x3fcb2b64294c7bd0; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 672, x18)

inst_1313:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf6bfda1cdc1a9 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xbab5ecbe4405a and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xb2b64294c7bd0 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef6bfda1cdc1a9; op2val:0xbfcbab5ecbe4405a; op3val:0x3fcb2b64294c7bd0; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 688, x18)

inst_1314:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf6bfda1cdc1a9 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xbab5ecbe4405a and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xb2b64294c7bd0 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef6bfda1cdc1a9; op2val:0xbfcbab5ecbe4405a; op3val:0x3fcb2b64294c7bd0; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 704, x18)

inst_1315:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf6bfda1cdc1a9 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xbab5ecbe4405a and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xb2b64294c7bd0 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef6bfda1cdc1a9; op2val:0xbfcbab5ecbe4405a; op3val:0x3fcb2b64294c7bd0; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 720, x18)

inst_1316:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x0035bbd238b84 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x3d6c764121046 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x3daf1698802f0 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd0035bbd238b84; op2val:0xbfe3d6c764121046; op3val:0x3fc3daf1698802f0; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 736, x18)

inst_1317:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x0035bbd238b84 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x3d6c764121046 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x3daf1698802f0 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd0035bbd238b84; op2val:0xbfe3d6c764121046; op3val:0x3fc3daf1698802f0; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 752, x18)

inst_1318:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x0035bbd238b84 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x3d6c764121046 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x3daf1698802f0 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd0035bbd238b84; op2val:0xbfe3d6c764121046; op3val:0x3fc3daf1698802f0; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 768, x18)

inst_1319:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x0035bbd238b84 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x3d6c764121046 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x3daf1698802f0 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd0035bbd238b84; op2val:0xbfe3d6c764121046; op3val:0x3fc3daf1698802f0; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 784, x18)

inst_1320:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x0035bbd238b84 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x3d6c764121046 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x3daf1698802f0 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd0035bbd238b84; op2val:0xbfe3d6c764121046; op3val:0x3fc3daf1698802f0; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 800, x18)

inst_1321:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x97f8007ce7620 and fs2 == 1 and fe2 == 0x404 and fm2 == 0x39eeea97793ee and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf44af7033ff8d and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f997f8007ce7620; op2val:0xc0439eeea97793ee; op3val:0x3fef44af7033ff8d; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 816, x18)

inst_1322:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x97f8007ce7620 and fs2 == 1 and fe2 == 0x404 and fm2 == 0x39eeea97793ee and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf44af7033ff8d and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f997f8007ce7620; op2val:0xc0439eeea97793ee; op3val:0x3fef44af7033ff8d; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 832, x18)

inst_1323:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x97f8007ce7620 and fs2 == 1 and fe2 == 0x404 and fm2 == 0x39eeea97793ee and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf44af7033ff8d and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f997f8007ce7620; op2val:0xc0439eeea97793ee; op3val:0x3fef44af7033ff8d; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 848, x18)

inst_1324:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x97f8007ce7620 and fs2 == 1 and fe2 == 0x404 and fm2 == 0x39eeea97793ee and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf44af7033ff8d and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f997f8007ce7620; op2val:0xc0439eeea97793ee; op3val:0x3fef44af7033ff8d; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 864, x18)

inst_1325:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x97f8007ce7620 and fs2 == 1 and fe2 == 0x404 and fm2 == 0x39eeea97793ee and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xf44af7033ff8d and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f997f8007ce7620; op2val:0xc0439eeea97793ee; op3val:0x3fef44af7033ff8d; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 880, x18)

inst_1326:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x2e6b36e974e5c and fs2 == 1 and fe2 == 0x400 and fm2 == 0x98b511a9cccad and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe2d0c62f9ab79 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd2e6b36e974e5c; op2val:0xc0098b511a9cccad; op3val:0x3fee2d0c62f9ab79; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 896, x18)

inst_1327:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x2e6b36e974e5c and fs2 == 1 and fe2 == 0x400 and fm2 == 0x98b511a9cccad and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe2d0c62f9ab79 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd2e6b36e974e5c; op2val:0xc0098b511a9cccad; op3val:0x3fee2d0c62f9ab79; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 912, x18)

inst_1328:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x2e6b36e974e5c and fs2 == 1 and fe2 == 0x400 and fm2 == 0x98b511a9cccad and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe2d0c62f9ab79 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd2e6b36e974e5c; op2val:0xc0098b511a9cccad; op3val:0x3fee2d0c62f9ab79; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 928, x18)

inst_1329:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x2e6b36e974e5c and fs2 == 1 and fe2 == 0x400 and fm2 == 0x98b511a9cccad and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe2d0c62f9ab79 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd2e6b36e974e5c; op2val:0xc0098b511a9cccad; op3val:0x3fee2d0c62f9ab79; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 944, x18)

inst_1330:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x2e6b36e974e5c and fs2 == 1 and fe2 == 0x400 and fm2 == 0x98b511a9cccad and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xe2d0c62f9ab79 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd2e6b36e974e5c; op2val:0xc0098b511a9cccad; op3val:0x3fee2d0c62f9ab79; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 960, x18)

inst_1331:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5e505db42cace and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x8435d862d27ad and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x099dbe61c1ee9 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe5e505db42cace; op2val:0xbfe8435d862d27ad; op3val:0x3fe099dbe61c1ee9; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 976, x18)

inst_1332:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5e505db42cace and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x8435d862d27ad and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x099dbe61c1ee9 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe5e505db42cace; op2val:0xbfe8435d862d27ad; op3val:0x3fe099dbe61c1ee9; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 992, x18)

inst_1333:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5e505db42cace and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x8435d862d27ad and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x099dbe61c1ee9 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe5e505db42cace; op2val:0xbfe8435d862d27ad; op3val:0x3fe099dbe61c1ee9; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 1008, x18)

inst_1334:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5e505db42cace and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x8435d862d27ad and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x099dbe61c1ee9 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe5e505db42cace; op2val:0xbfe8435d862d27ad; op3val:0x3fe099dbe61c1ee9; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 1024, x18)

inst_1335:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x5e505db42cace and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x8435d862d27ad and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x099dbe61c1ee9 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe5e505db42cace; op2val:0xbfe8435d862d27ad; op3val:0x3fe099dbe61c1ee9; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 1040, x18)

inst_1336:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x73accbb1a5c60 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x6e3b927089114 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x09dbc4536ddba and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc73accbb1a5c60; op2val:0xc006e3b927089114; op3val:0x3fe09dbc4536ddba; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 1056, x18)

inst_1337:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x73accbb1a5c60 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x6e3b927089114 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x09dbc4536ddba and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc73accbb1a5c60; op2val:0xc006e3b927089114; op3val:0x3fe09dbc4536ddba; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 1072, x18)

inst_1338:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x73accbb1a5c60 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x6e3b927089114 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x09dbc4536ddba and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc73accbb1a5c60; op2val:0xc006e3b927089114; op3val:0x3fe09dbc4536ddba; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 1088, x18)

inst_1339:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x73accbb1a5c60 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x6e3b927089114 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x09dbc4536ddba and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc73accbb1a5c60; op2val:0xc006e3b927089114; op3val:0x3fe09dbc4536ddba; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 1104, x18)

inst_1340:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x73accbb1a5c60 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x6e3b927089114 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x09dbc4536ddba and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc73accbb1a5c60; op2val:0xc006e3b927089114; op3val:0x3fe09dbc4536ddba; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1120, x18)

inst_1341:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x52ff2ebbc649d and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0acd705626c79 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x614d31a941ec7 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe52ff2ebbc649d; op2val:0xbff0acd705626c79; op3val:0x3fe614d31a941ec7; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 1136, x18)

inst_1342:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x52ff2ebbc649d and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0acd705626c79 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x614d31a941ec7 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe52ff2ebbc649d; op2val:0xbff0acd705626c79; op3val:0x3fe614d31a941ec7; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 1152, x18)

inst_1343:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x52ff2ebbc649d and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0acd705626c79 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x614d31a941ec7 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe52ff2ebbc649d; op2val:0xbff0acd705626c79; op3val:0x3fe614d31a941ec7; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 1168, x18)

inst_1344:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x52ff2ebbc649d and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0acd705626c79 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x614d31a941ec7 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe52ff2ebbc649d; op2val:0xbff0acd705626c79; op3val:0x3fe614d31a941ec7; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 1184, x18)

inst_1345:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x52ff2ebbc649d and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0acd705626c79 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x614d31a941ec7 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe52ff2ebbc649d; op2val:0xbff0acd705626c79; op3val:0x3fe614d31a941ec7; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1200, x18)

inst_1346:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xfe449159db7b2 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x4aea33ccef598 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x49cb9aa56ade4 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fefe449159db7b2; op2val:0xbfd4aea33ccef598; op3val:0x3fd49cb9aa56ade4; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 1216, x18)

inst_1347:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xfe449159db7b2 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x4aea33ccef598 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x49cb9aa56ade4 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fefe449159db7b2; op2val:0xbfd4aea33ccef598; op3val:0x3fd49cb9aa56ade4; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 1232, x18)

inst_1348:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xfe449159db7b2 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x4aea33ccef598 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x49cb9aa56ade4 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fefe449159db7b2; op2val:0xbfd4aea33ccef598; op3val:0x3fd49cb9aa56ade4; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 1248, x18)

inst_1349:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xfe449159db7b2 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x4aea33ccef598 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x49cb9aa56ade4 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fefe449159db7b2; op2val:0xbfd4aea33ccef598; op3val:0x3fd49cb9aa56ade4; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 1264, x18)

inst_1350:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xfe449159db7b2 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x4aea33ccef598 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x49cb9aa56ade4 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fefe449159db7b2; op2val:0xbfd4aea33ccef598; op3val:0x3fd49cb9aa56ade4; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1280, x18)

inst_1351:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x65b4428bafb6a and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x22dc85c4bcaf5 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x966a5534f952c and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe65b4428bafb6a; op2val:0xbfe22dc85c4bcaf5; op3val:0x3fd966a5534f952c; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 1296, x18)

inst_1352:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x65b4428bafb6a and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x22dc85c4bcaf5 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x966a5534f952c and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe65b4428bafb6a; op2val:0xbfe22dc85c4bcaf5; op3val:0x3fd966a5534f952c; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 1312, x18)

inst_1353:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x65b4428bafb6a and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x22dc85c4bcaf5 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x966a5534f952c and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe65b4428bafb6a; op2val:0xbfe22dc85c4bcaf5; op3val:0x3fd966a5534f952c; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 1328, x18)

inst_1354:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x65b4428bafb6a and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x22dc85c4bcaf5 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x966a5534f952c and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe65b4428bafb6a; op2val:0xbfe22dc85c4bcaf5; op3val:0x3fd966a5534f952c; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 1344, x18)

inst_1355:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x65b4428bafb6a and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x22dc85c4bcaf5 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x966a5534f952c and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe65b4428bafb6a; op2val:0xbfe22dc85c4bcaf5; op3val:0x3fd966a5534f952c; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1360, x18)

inst_1356:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb5668f2f1db49 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1824308305883 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xdea601eac2e57 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb5668f2f1db49; op2val:0xbff1824308305883; op3val:0x3fedea601eac2e57; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 1376, x18)

inst_1357:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb5668f2f1db49 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1824308305883 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xdea601eac2e57 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb5668f2f1db49; op2val:0xbff1824308305883; op3val:0x3fedea601eac2e57; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 1392, x18)

inst_1358:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb5668f2f1db49 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1824308305883 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xdea601eac2e57 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb5668f2f1db49; op2val:0xbff1824308305883; op3val:0x3fedea601eac2e57; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 1408, x18)

inst_1359:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb5668f2f1db49 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1824308305883 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xdea601eac2e57 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb5668f2f1db49; op2val:0xbff1824308305883; op3val:0x3fedea601eac2e57; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 1424, x18)
addi x16,x16,2040

inst_1360:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xb5668f2f1db49 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1824308305883 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xdea601eac2e57 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feb5668f2f1db49; op2val:0xbff1824308305883; op3val:0x3fedea601eac2e57; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 1440, x18)

inst_1361:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x47121ce5722b2 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x4e3d3054e6e2e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xab07cec41bf92 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe47121ce5722b2; op2val:0xbff4e3d3054e6e2e; op3val:0x3feab07cec41bf92; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 1456, x18)

inst_1362:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x47121ce5722b2 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x4e3d3054e6e2e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xab07cec41bf92 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe47121ce5722b2; op2val:0xbff4e3d3054e6e2e; op3val:0x3feab07cec41bf92; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 1472, x18)

inst_1363:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x47121ce5722b2 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x4e3d3054e6e2e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xab07cec41bf92 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe47121ce5722b2; op2val:0xbff4e3d3054e6e2e; op3val:0x3feab07cec41bf92; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 1488, x18)

inst_1364:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x47121ce5722b2 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x4e3d3054e6e2e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xab07cec41bf92 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe47121ce5722b2; op2val:0xbff4e3d3054e6e2e; op3val:0x3feab07cec41bf92; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 1504, x18)

inst_1365:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x47121ce5722b2 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x4e3d3054e6e2e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xab07cec41bf92 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe47121ce5722b2; op2val:0xbff4e3d3054e6e2e; op3val:0x3feab07cec41bf92; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 1520, x18)

inst_1366:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xb33bed3bca218 and fs2 == 1 and fe2 == 0x401 and fm2 == 0xa657eed6e43ab and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6705243e9e980 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbb33bed3bca218; op2val:0xc01a657eed6e43ab; op3val:0x3fe6705243e9e980; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 1536, x18)

inst_1367:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xb33bed3bca218 and fs2 == 1 and fe2 == 0x401 and fm2 == 0xa657eed6e43ab and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6705243e9e980 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbb33bed3bca218; op2val:0xc01a657eed6e43ab; op3val:0x3fe6705243e9e980; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 1552, x18)

inst_1368:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xb33bed3bca218 and fs2 == 1 and fe2 == 0x401 and fm2 == 0xa657eed6e43ab and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6705243e9e980 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbb33bed3bca218; op2val:0xc01a657eed6e43ab; op3val:0x3fe6705243e9e980; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 1568, x18)

inst_1369:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xb33bed3bca218 and fs2 == 1 and fe2 == 0x401 and fm2 == 0xa657eed6e43ab and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6705243e9e980 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbb33bed3bca218; op2val:0xc01a657eed6e43ab; op3val:0x3fe6705243e9e980; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 1584, x18)

inst_1370:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0xb33bed3bca218 and fs2 == 1 and fe2 == 0x401 and fm2 == 0xa657eed6e43ab and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x6705243e9e980 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fbb33bed3bca218; op2val:0xc01a657eed6e43ab; op3val:0x3fe6705243e9e980; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 1600, x18)

inst_1371:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3cc85be6ccab0 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xbab301388772c and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x11e7b823bdc60 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd3cc85be6ccab0; op2val:0xbfbbab301388772c; op3val:0x3fa11e7b823bdc60; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 1616, x18)

inst_1372:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3cc85be6ccab0 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xbab301388772c and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x11e7b823bdc60 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd3cc85be6ccab0; op2val:0xbfbbab301388772c; op3val:0x3fa11e7b823bdc60; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 1632, x18)

inst_1373:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3cc85be6ccab0 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xbab301388772c and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x11e7b823bdc60 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd3cc85be6ccab0; op2val:0xbfbbab301388772c; op3val:0x3fa11e7b823bdc60; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 1648, x18)

inst_1374:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3cc85be6ccab0 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xbab301388772c and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x11e7b823bdc60 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd3cc85be6ccab0; op2val:0xbfbbab301388772c; op3val:0x3fa11e7b823bdc60; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 1664, x18)

inst_1375:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x3cc85be6ccab0 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xbab301388772c and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x11e7b823bdc60 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd3cc85be6ccab0; op2val:0xbfbbab301388772c; op3val:0x3fa11e7b823bdc60; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 1680, x18)

inst_1376:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x972723b45f8a7 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x3004ea9935aae and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xe3864c2032a80 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe972723b45f8a7; op2val:0xbfb3004ea9935aae; op3val:0x3fae3864c2032a80; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 1696, x18)

inst_1377:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x972723b45f8a7 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x3004ea9935aae and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xe3864c2032a80 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe972723b45f8a7; op2val:0xbfb3004ea9935aae; op3val:0x3fae3864c2032a80; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 1712, x18)

inst_1378:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x972723b45f8a7 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x3004ea9935aae and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xe3864c2032a80 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe972723b45f8a7; op2val:0xbfb3004ea9935aae; op3val:0x3fae3864c2032a80; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 1728, x18)

inst_1379:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x972723b45f8a7 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x3004ea9935aae and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xe3864c2032a80 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe972723b45f8a7; op2val:0xbfb3004ea9935aae; op3val:0x3fae3864c2032a80; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 1744, x18)

inst_1380:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x972723b45f8a7 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x3004ea9935aae and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xe3864c2032a80 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe972723b45f8a7; op2val:0xbfb3004ea9935aae; op3val:0x3fae3864c2032a80; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1760, x18)

inst_1381:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xd7d5cd8fdb55c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x65fbff97bf2d8 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x49e6ceafe812c and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdd7d5cd8fdb55c; op2val:0xbfe65fbff97bf2d8; op3val:0x3fd49e6ceafe812c; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 1776, x18)

inst_1382:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xd7d5cd8fdb55c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x65fbff97bf2d8 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x49e6ceafe812c and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdd7d5cd8fdb55c; op2val:0xbfe65fbff97bf2d8; op3val:0x3fd49e6ceafe812c; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 1792, x18)

inst_1383:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xd7d5cd8fdb55c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x65fbff97bf2d8 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x49e6ceafe812c and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdd7d5cd8fdb55c; op2val:0xbfe65fbff97bf2d8; op3val:0x3fd49e6ceafe812c; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 1808, x18)

inst_1384:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xd7d5cd8fdb55c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x65fbff97bf2d8 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x49e6ceafe812c and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdd7d5cd8fdb55c; op2val:0xbfe65fbff97bf2d8; op3val:0x3fd49e6ceafe812c; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 1824, x18)

inst_1385:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xd7d5cd8fdb55c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x65fbff97bf2d8 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x49e6ceafe812c and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdd7d5cd8fdb55c; op2val:0xbfe65fbff97bf2d8; op3val:0x3fd49e6ceafe812c; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1840, x18)

inst_1386:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6be0316bed22e and fs2 == 1 and fe2 == 0x3fa and fm2 == 0xbc089385d1cd0 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x3b928334565c0 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe6be0316bed22e; op2val:0xbfabc089385d1cd0; op3val:0x3fa3b928334565c0; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 1856, x18)

inst_1387:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6be0316bed22e and fs2 == 1 and fe2 == 0x3fa and fm2 == 0xbc089385d1cd0 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x3b928334565c0 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe6be0316bed22e; op2val:0xbfabc089385d1cd0; op3val:0x3fa3b928334565c0; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 1872, x18)

inst_1388:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6be0316bed22e and fs2 == 1 and fe2 == 0x3fa and fm2 == 0xbc089385d1cd0 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x3b928334565c0 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe6be0316bed22e; op2val:0xbfabc089385d1cd0; op3val:0x3fa3b928334565c0; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 1888, x18)

inst_1389:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6be0316bed22e and fs2 == 1 and fe2 == 0x3fa and fm2 == 0xbc089385d1cd0 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x3b928334565c0 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe6be0316bed22e; op2val:0xbfabc089385d1cd0; op3val:0x3fa3b928334565c0; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 1904, x18)

inst_1390:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6be0316bed22e and fs2 == 1 and fe2 == 0x3fa and fm2 == 0xbc089385d1cd0 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x3b928334565c0 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe6be0316bed22e; op2val:0xbfabc089385d1cd0; op3val:0x3fa3b928334565c0; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1920, x18)

inst_1391:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x200336ac53760 and fs2 == 1 and fe2 == 0x401 and fm2 == 0xd087661bd3cab and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x054f13d561460 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f9200336ac53760; op2val:0xc01d087661bd3cab; op3val:0x3fc054f13d561460; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 1936, x18)

inst_1392:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x200336ac53760 and fs2 == 1 and fe2 == 0x401 and fm2 == 0xd087661bd3cab and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x054f13d561460 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f9200336ac53760; op2val:0xc01d087661bd3cab; op3val:0x3fc054f13d561460; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 1952, x18)

inst_1393:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x200336ac53760 and fs2 == 1 and fe2 == 0x401 and fm2 == 0xd087661bd3cab and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x054f13d561460 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f9200336ac53760; op2val:0xc01d087661bd3cab; op3val:0x3fc054f13d561460; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 1968, x18)

inst_1394:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x200336ac53760 and fs2 == 1 and fe2 == 0x401 and fm2 == 0xd087661bd3cab and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x054f13d561460 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f9200336ac53760; op2val:0xc01d087661bd3cab; op3val:0x3fc054f13d561460; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 1984, x18)

inst_1395:
// fs1 == 0 and fe1 == 0x3f9 and fm1 == 0x200336ac53760 and fs2 == 1 and fe2 == 0x401 and fm2 == 0xd087661bd3cab and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x054f13d561460 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3f9200336ac53760; op2val:0xc01d087661bd3cab; op3val:0x3fc054f13d561460; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 2000, x18)

inst_1396:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x94c2220e7d70e and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xfc191763aad26 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x91ac73c28d472 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe94c2220e7d70e; op2val:0xbfefc191763aad26; op3val:0x3fe91ac73c28d472; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_12)

inst_1397:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x94c2220e7d70e and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xfc191763aad26 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x91ac73c28d472 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe94c2220e7d70e; op2val:0xbfefc191763aad26; op3val:0x3fe91ac73c28d472; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 0, x18)

inst_1398:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x94c2220e7d70e and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xfc191763aad26 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x91ac73c28d472 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe94c2220e7d70e; op2val:0xbfefc191763aad26; op3val:0x3fe91ac73c28d472; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 16, x18)

inst_1399:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x94c2220e7d70e and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xfc191763aad26 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x91ac73c28d472 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe94c2220e7d70e; op2val:0xbfefc191763aad26; op3val:0x3fe91ac73c28d472; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 32, x18)

inst_1400:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x94c2220e7d70e and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xfc191763aad26 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x91ac73c28d472 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe94c2220e7d70e; op2val:0xbfefc191763aad26; op3val:0x3fe91ac73c28d472; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 48, x18)

inst_1401:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xff175d81c539e and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x07d4d329b52bf and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x075cf2fea3cc8 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feff175d81c539e; op2val:0xbfc07d4d329b52bf; op3val:0x3fc075cf2fea3cc8; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 64, x18)

inst_1402:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xff175d81c539e and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x07d4d329b52bf and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x075cf2fea3cc8 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feff175d81c539e; op2val:0xbfc07d4d329b52bf; op3val:0x3fc075cf2fea3cc8; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 80, x18)

inst_1403:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xff175d81c539e and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x07d4d329b52bf and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x075cf2fea3cc8 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feff175d81c539e; op2val:0xbfc07d4d329b52bf; op3val:0x3fc075cf2fea3cc8; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 96, x18)

inst_1404:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xff175d81c539e and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x07d4d329b52bf and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x075cf2fea3cc8 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feff175d81c539e; op2val:0xbfc07d4d329b52bf; op3val:0x3fc075cf2fea3cc8; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 112, x18)

inst_1405:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xff175d81c539e and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x07d4d329b52bf and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x075cf2fea3cc8 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3feff175d81c539e; op2val:0xbfc07d4d329b52bf; op3val:0x3fc075cf2fea3cc8; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 128, x18)

inst_1406:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x87ba86c70f9fe and fs2 == 1 and fe2 == 0x400 and fm2 == 0x24349f31d5807 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbf214737895db and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd87ba86c70f9fe; op2val:0xc0024349f31d5807; op3val:0x3febf214737895db; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 144, x18)

inst_1407:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x87ba86c70f9fe and fs2 == 1 and fe2 == 0x400 and fm2 == 0x24349f31d5807 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbf214737895db and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd87ba86c70f9fe; op2val:0xc0024349f31d5807; op3val:0x3febf214737895db; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 160, x18)

inst_1408:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x87ba86c70f9fe and fs2 == 1 and fe2 == 0x400 and fm2 == 0x24349f31d5807 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbf214737895db and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd87ba86c70f9fe; op2val:0xc0024349f31d5807; op3val:0x3febf214737895db; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 176, x18)

inst_1409:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x87ba86c70f9fe and fs2 == 1 and fe2 == 0x400 and fm2 == 0x24349f31d5807 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbf214737895db and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd87ba86c70f9fe; op2val:0xc0024349f31d5807; op3val:0x3febf214737895db; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 192, x18)

inst_1410:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x87ba86c70f9fe and fs2 == 1 and fe2 == 0x400 and fm2 == 0x24349f31d5807 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xbf214737895db and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd87ba86c70f9fe; op2val:0xc0024349f31d5807; op3val:0x3febf214737895db; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 208, x18)

inst_1411:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x9f7165ed95e1c and fs2 == 1 and fe2 == 0x401 and fm2 == 0x0fb7e5eda3712 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb8f37a1873e5c and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc9f7165ed95e1c; op2val:0xc010fb7e5eda3712; op3val:0x3feb8f37a1873e5c; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 224, x18)

inst_1412:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x9f7165ed95e1c and fs2 == 1 and fe2 == 0x401 and fm2 == 0x0fb7e5eda3712 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb8f37a1873e5c and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc9f7165ed95e1c; op2val:0xc010fb7e5eda3712; op3val:0x3feb8f37a1873e5c; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 240, x18)

inst_1413:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x9f7165ed95e1c and fs2 == 1 and fe2 == 0x401 and fm2 == 0x0fb7e5eda3712 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb8f37a1873e5c and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc9f7165ed95e1c; op2val:0xc010fb7e5eda3712; op3val:0x3feb8f37a1873e5c; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 256, x18)

inst_1414:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x9f7165ed95e1c and fs2 == 1 and fe2 == 0x401 and fm2 == 0x0fb7e5eda3712 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb8f37a1873e5c and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc9f7165ed95e1c; op2val:0xc010fb7e5eda3712; op3val:0x3feb8f37a1873e5c; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 272, x18)

inst_1415:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0x9f7165ed95e1c and fs2 == 1 and fe2 == 0x401 and fm2 == 0x0fb7e5eda3712 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xb8f37a1873e5c and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fc9f7165ed95e1c; op2val:0xc010fb7e5eda3712; op3val:0x3feb8f37a1873e5c; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 288, x18)

inst_1416:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xdfcb559c4dd64 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xcb2a3a0810275 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xae485b4f3c9d3 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcdfcb559c4dd64; op2val:0xc00cb2a3a0810275; op3val:0x3feae485b4f3c9d3; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 304, x18)

inst_1417:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xdfcb559c4dd64 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xcb2a3a0810275 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xae485b4f3c9d3 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcdfcb559c4dd64; op2val:0xc00cb2a3a0810275; op3val:0x3feae485b4f3c9d3; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 320, x18)

inst_1418:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xdfcb559c4dd64 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xcb2a3a0810275 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xae485b4f3c9d3 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcdfcb559c4dd64; op2val:0xc00cb2a3a0810275; op3val:0x3feae485b4f3c9d3; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 336, x18)

inst_1419:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xdfcb559c4dd64 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xcb2a3a0810275 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xae485b4f3c9d3 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcdfcb559c4dd64; op2val:0xc00cb2a3a0810275; op3val:0x3feae485b4f3c9d3; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 352, x18)

inst_1420:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xdfcb559c4dd64 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xcb2a3a0810275 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xae485b4f3c9d3 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fcdfcb559c4dd64; op2val:0xc00cb2a3a0810275; op3val:0x3feae485b4f3c9d3; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 368, x18)

inst_1421:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x70e7aff458df6 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xdb8f5b589dae8 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x56a63c43dc670 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe70e7aff458df6; op2val:0xbfbdb8f5b589dae8; op3val:0x3fb56a63c43dc670; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 384, x18)

inst_1422:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x70e7aff458df6 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xdb8f5b589dae8 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x56a63c43dc670 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe70e7aff458df6; op2val:0xbfbdb8f5b589dae8; op3val:0x3fb56a63c43dc670; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 400, x18)

inst_1423:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x70e7aff458df6 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xdb8f5b589dae8 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x56a63c43dc670 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe70e7aff458df6; op2val:0xbfbdb8f5b589dae8; op3val:0x3fb56a63c43dc670; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 416, x18)

inst_1424:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x70e7aff458df6 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xdb8f5b589dae8 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x56a63c43dc670 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe70e7aff458df6; op2val:0xbfbdb8f5b589dae8; op3val:0x3fb56a63c43dc670; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 432, x18)

inst_1425:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x70e7aff458df6 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xdb8f5b589dae8 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x56a63c43dc670 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe70e7aff458df6; op2val:0xbfbdb8f5b589dae8; op3val:0x3fb56a63c43dc670; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 448, x18)

inst_1426:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf94918d134494 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x965d0c5a7379c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x9108caa5e0da7 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef94918d134494; op2val:0xbfe965d0c5a7379c; op3val:0x3fe9108caa5e0da7; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 464, x18)

inst_1427:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf94918d134494 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x965d0c5a7379c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x9108caa5e0da7 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef94918d134494; op2val:0xbfe965d0c5a7379c; op3val:0x3fe9108caa5e0da7; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 480, x18)

inst_1428:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf94918d134494 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x965d0c5a7379c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x9108caa5e0da7 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef94918d134494; op2val:0xbfe965d0c5a7379c; op3val:0x3fe9108caa5e0da7; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 496, x18)

inst_1429:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf94918d134494 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x965d0c5a7379c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x9108caa5e0da7 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef94918d134494; op2val:0xbfe965d0c5a7379c; op3val:0x3fe9108caa5e0da7; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 512, x18)

inst_1430:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf94918d134494 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x965d0c5a7379c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x9108caa5e0da7 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef94918d134494; op2val:0xbfe965d0c5a7379c; op3val:0x3fe9108caa5e0da7; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 528, x18)

inst_1431:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xd3305a72f280c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xde218e4487790 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xb448c2e015ee6 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdd3305a72f280c; op2val:0xbfede218e4487790; op3val:0x3fdb448c2e015ee6; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 544, x18)

inst_1432:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xd3305a72f280c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xde218e4487790 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xb448c2e015ee6 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdd3305a72f280c; op2val:0xbfede218e4487790; op3val:0x3fdb448c2e015ee6; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 560, x18)

inst_1433:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xd3305a72f280c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xde218e4487790 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xb448c2e015ee6 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdd3305a72f280c; op2val:0xbfede218e4487790; op3val:0x3fdb448c2e015ee6; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 576, x18)

inst_1434:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xd3305a72f280c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xde218e4487790 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xb448c2e015ee6 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdd3305a72f280c; op2val:0xbfede218e4487790; op3val:0x3fdb448c2e015ee6; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 592, x18)

inst_1435:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0xd3305a72f280c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xde218e4487790 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xb448c2e015ee6 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fdd3305a72f280c; op2val:0xbfede218e4487790; op3val:0x3fdb448c2e015ee6; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 608, x18)

inst_1436:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0fd62e886b63c and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x6b480bb5aa10e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x81c134a7a1a99 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0fd62e886b63c; op2val:0xbff6b480bb5aa10e; op3val:0x3fe81c134a7a1a99; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 624, x18)

inst_1437:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0fd62e886b63c and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x6b480bb5aa10e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x81c134a7a1a99 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0fd62e886b63c; op2val:0xbff6b480bb5aa10e; op3val:0x3fe81c134a7a1a99; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 640, x18)

inst_1438:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0fd62e886b63c and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x6b480bb5aa10e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x81c134a7a1a99 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0fd62e886b63c; op2val:0xbff6b480bb5aa10e; op3val:0x3fe81c134a7a1a99; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 656, x18)

inst_1439:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0fd62e886b63c and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x6b480bb5aa10e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x81c134a7a1a99 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0fd62e886b63c; op2val:0xbff6b480bb5aa10e; op3val:0x3fe81c134a7a1a99; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 672, x18)

inst_1440:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x0fd62e886b63c and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x6b480bb5aa10e and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x81c134a7a1a99 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe0fd62e886b63c; op2val:0xbff6b480bb5aa10e; op3val:0x3fe81c134a7a1a99; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 688, x18)

inst_1441:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x95e95dafb12f0 and fs2 == 1 and fe2 == 0x402 and fm2 == 0x1e5a48cfb762f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc609de283489b and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb95e95dafb12f0; op2val:0xc021e5a48cfb762f; op3val:0x3fec609de283489b; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 704, x18)

inst_1442:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x95e95dafb12f0 and fs2 == 1 and fe2 == 0x402 and fm2 == 0x1e5a48cfb762f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc609de283489b and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb95e95dafb12f0; op2val:0xc021e5a48cfb762f; op3val:0x3fec609de283489b; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 720, x18)

inst_1443:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x95e95dafb12f0 and fs2 == 1 and fe2 == 0x402 and fm2 == 0x1e5a48cfb762f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc609de283489b and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb95e95dafb12f0; op2val:0xc021e5a48cfb762f; op3val:0x3fec609de283489b; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 736, x18)

inst_1444:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x95e95dafb12f0 and fs2 == 1 and fe2 == 0x402 and fm2 == 0x1e5a48cfb762f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc609de283489b and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb95e95dafb12f0; op2val:0xc021e5a48cfb762f; op3val:0x3fec609de283489b; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 752, x18)
addi x16,x16,2040

inst_1445:
// fs1 == 0 and fe1 == 0x3fb and fm1 == 0x95e95dafb12f0 and fs2 == 1 and fe2 == 0x402 and fm2 == 0x1e5a48cfb762f and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc609de283489b and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fb95e95dafb12f0; op2val:0xc021e5a48cfb762f; op3val:0x3fec609de283489b; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 768, x18)

inst_1446:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0xd0059300f8580 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x8c9daddbbe458 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x677336f95cdf8 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fad0059300f8580; op2val:0xc018c9daddbbe458; op3val:0x3fd677336f95cdf8; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 784, x18)

inst_1447:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0xd0059300f8580 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x8c9daddbbe458 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x677336f95cdf8 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fad0059300f8580; op2val:0xc018c9daddbbe458; op3val:0x3fd677336f95cdf8; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 800, x18)

inst_1448:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0xd0059300f8580 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x8c9daddbbe458 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x677336f95cdf8 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fad0059300f8580; op2val:0xc018c9daddbbe458; op3val:0x3fd677336f95cdf8; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 816, x18)

inst_1449:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0xd0059300f8580 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x8c9daddbbe458 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x677336f95cdf8 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fad0059300f8580; op2val:0xc018c9daddbbe458; op3val:0x3fd677336f95cdf8; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 832, x18)

inst_1450:
// fs1 == 0 and fe1 == 0x3fa and fm1 == 0xd0059300f8580 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x8c9daddbbe458 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x677336f95cdf8 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fad0059300f8580; op2val:0xc018c9daddbbe458; op3val:0x3fd677336f95cdf8; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 848, x18)

inst_1451:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf1263a0a37bc9 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x19c62cf93ac7c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1199e84e56b1f and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef1263a0a37bc9; op2val:0xbfe19c62cf93ac7c; op3val:0x3fe1199e84e56b1f; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 864, x18)

inst_1452:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf1263a0a37bc9 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x19c62cf93ac7c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1199e84e56b1f and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef1263a0a37bc9; op2val:0xbfe19c62cf93ac7c; op3val:0x3fe1199e84e56b1f; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 880, x18)

inst_1453:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf1263a0a37bc9 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x19c62cf93ac7c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1199e84e56b1f and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef1263a0a37bc9; op2val:0xbfe19c62cf93ac7c; op3val:0x3fe1199e84e56b1f; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 896, x18)

inst_1454:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf1263a0a37bc9 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x19c62cf93ac7c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1199e84e56b1f and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef1263a0a37bc9; op2val:0xbfe19c62cf93ac7c; op3val:0x3fe1199e84e56b1f; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 912, x18)

inst_1455:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xf1263a0a37bc9 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x19c62cf93ac7c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x1199e84e56b1f and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fef1263a0a37bc9; op2val:0xbfe19c62cf93ac7c; op3val:0x3fe1199e84e56b1f; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 928, x18)

inst_1456:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x0a58072c8a39c and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x31ccfc0f8e772 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x3e2824f09e9e0 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd0a58072c8a39c; op2val:0xbfd31ccfc0f8e772; op3val:0x3fb3e2824f09e9e0; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 944, x18)

inst_1457:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x0a58072c8a39c and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x31ccfc0f8e772 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x3e2824f09e9e0 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd0a58072c8a39c; op2val:0xbfd31ccfc0f8e772; op3val:0x3fb3e2824f09e9e0; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 960, x18)

inst_1458:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x0a58072c8a39c and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x31ccfc0f8e772 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x3e2824f09e9e0 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd0a58072c8a39c; op2val:0xbfd31ccfc0f8e772; op3val:0x3fb3e2824f09e9e0; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 976, x18)

inst_1459:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x0a58072c8a39c and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x31ccfc0f8e772 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x3e2824f09e9e0 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd0a58072c8a39c; op2val:0xbfd31ccfc0f8e772; op3val:0x3fb3e2824f09e9e0; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 992, x18)

inst_1460:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x0a58072c8a39c and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x31ccfc0f8e772 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x3e2824f09e9e0 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd0a58072c8a39c; op2val:0xbfd31ccfc0f8e772; op3val:0x3fb3e2824f09e9e0; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 1008, x18)

inst_1461:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xa3718e4f3ee04 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x1fbd528cfeace and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xd77280a24af40 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fca3718e4f3ee04; op2val:0xbfd1fbd528cfeace; op3val:0x3fad77280a24af40; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 1024, x18)

inst_1462:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xa3718e4f3ee04 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x1fbd528cfeace and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xd77280a24af40 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fca3718e4f3ee04; op2val:0xbfd1fbd528cfeace; op3val:0x3fad77280a24af40; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 1040, x18)

inst_1463:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xa3718e4f3ee04 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x1fbd528cfeace and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xd77280a24af40 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fca3718e4f3ee04; op2val:0xbfd1fbd528cfeace; op3val:0x3fad77280a24af40; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 1056, x18)

inst_1464:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xa3718e4f3ee04 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x1fbd528cfeace and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xd77280a24af40 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fca3718e4f3ee04; op2val:0xbfd1fbd528cfeace; op3val:0x3fad77280a24af40; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 1072, x18)

inst_1465:
// fs1 == 0 and fe1 == 0x3fc and fm1 == 0xa3718e4f3ee04 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x1fbd528cfeace and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xd77280a24af40 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fca3718e4f3ee04; op2val:0xbfd1fbd528cfeace; op3val:0x3fad77280a24af40; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1088, x18)

inst_1466:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x82260edf4d940 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x5e95cba1d1005 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x0868fdd21b824 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd82260edf4d940; op2val:0xbfe5e95cba1d1005; op3val:0x3fd0868fdd21b824; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 1104, x18)

inst_1467:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x82260edf4d940 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x5e95cba1d1005 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x0868fdd21b824 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd82260edf4d940; op2val:0xbfe5e95cba1d1005; op3val:0x3fd0868fdd21b824; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 1120, x18)

inst_1468:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x82260edf4d940 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x5e95cba1d1005 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x0868fdd21b824 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd82260edf4d940; op2val:0xbfe5e95cba1d1005; op3val:0x3fd0868fdd21b824; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 1136, x18)

inst_1469:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x82260edf4d940 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x5e95cba1d1005 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x0868fdd21b824 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd82260edf4d940; op2val:0xbfe5e95cba1d1005; op3val:0x3fd0868fdd21b824; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 1152, x18)

inst_1470:
// fs1 == 0 and fe1 == 0x3fd and fm1 == 0x82260edf4d940 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x5e95cba1d1005 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x0868fdd21b824 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fd82260edf4d940; op2val:0xbfe5e95cba1d1005; op3val:0x3fd0868fdd21b824; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1168, x18)

inst_1471:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6dd02a7dd25bd and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x4f8ae07f138cd and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xdf79da9d497c6 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe6dd02a7dd25bd; op2val:0xbff4f8ae07f138cd; op3val:0x3fedf79da9d497c6; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 1184, x18)

inst_1472:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6dd02a7dd25bd and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x4f8ae07f138cd and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xdf79da9d497c6 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe6dd02a7dd25bd; op2val:0xbff4f8ae07f138cd; op3val:0x3fedf79da9d497c6; valaddr_reg:x16; val_offset:648; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 648, x17, x15, 1200, x18)

inst_1473:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6dd02a7dd25bd and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x4f8ae07f138cd and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xdf79da9d497c6 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe6dd02a7dd25bd; op2val:0xbff4f8ae07f138cd; op3val:0x3fedf79da9d497c6; valaddr_reg:x16; val_offset:672; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 672, x17, x15, 1216, x18)

inst_1474:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x6dd02a7dd25bd and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x4f8ae07f138cd and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xdf79da9d497c6 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe6dd02a7dd25bd; op2val:0xbff4f8ae07f138cd; op3val:0x3fedf79da9d497c6; valaddr_reg:x16; val_offset:696; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 696, x17, x15, 1232, x18)

inst_1475:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x798d8a20255fa and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xc210c4a7fcf65 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x4be1c3d6a0ee6 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe798d8a20255fa; op2val:0xbfdc210c4a7fcf65; op3val:0x3fd4be1c3d6a0ee6; valaddr_reg:x16; val_offset:720; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 720, x17, x15, 1248, x18)

inst_1476:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0x798d8a20255fa and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xc210c4a7fcf65 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x4be1c3d6a0ee6 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fe798d8a20255fa; op2val:0xbfdc210c4a7fcf65; op3val:0x3fd4be1c3d6a0ee6; valaddr_reg:x16; val_offset:744; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 744, x17, x15, 1264, x18)

inst_1477:
// fs1 == 0 and fe1 == 0x3fe and fm1 == 0xde3e91ec63360 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc74dcf8fe2356 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xa94948f735fbb and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x3fede3e91ec63360; op2val:0xbfec74dcf8fe2356; op3val:0x3fea94948f735fbb; valaddr_reg:x16; val_offset:768; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 768, x17, x15, 1280, x18)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_fp:
.dword 0x3fd82260edf4d940
.dword 0xbfe5e95cba1d1005
.dword 0xbfe5e95cba1d1005
.dword 0x3fe6dd02a7dd25bd
.dword 0x3fe6dd02a7dd25bd
.dword 0x3fe6dd02a7dd25bd
.dword 0x3fe6dd02a7dd25bd
.dword 0xbff4f8ae07f138cd
.dword 0x3fedf79da9d497c6
.dword 0x3fe6dd02a7dd25bd
.dword 0xbff4f8ae07f138cd
.dword 0x3fe6dd02a7dd25bd
.dword 0x3fe6dd02a7dd25bd
.dword 0x3fe6dd02a7dd25bd
.dword 0x3fedf79da9d497c6
.dword 0x3fe6dd02a7dd25bd
.dword 0xbff4f8ae07f138cd
.dword 0xbff4f8ae07f138cd
.dword 0x3fe798d8a20255fa
.dword 0x3fe798d8a20255fa
.dword 0x3fe798d8a20255fa
.dword 0x3fe798d8a20255fa
.dword 0xbfdc210c4a7fcf65
.dword 0x3fd4be1c3d6a0ee6
.dword 0x3fe798d8a20255fa
.dword 0xbfdc210c4a7fcf65
.dword 0x3fd4be1c3d6a0ee6
.dword 0x3fe798d8a20255fa
.dword 0xbfdc210c4a7fcf65
.dword 0x3fe798d8a20255fa
.dword 0x3fe798d8a20255fa
.dword 0xbfdc210c4a7fcf65
.dword 0x3fd4be1c3d6a0ee6
.dword 0x3fede3e91ec63360
.dword 0x3fede3e91ec63360
.dword 0x3fea94948f735fbb
.dword 0x3fede3e91ec63360
.dword 0xbfec74dcf8fe2356
.dword 0x3fea94948f735fbb
.dword 0x3fede3e91ec63360
.dword 0xbfec74dcf8fe2356
.dword 0x3fea94948f735fbb
.dword 0x3fede3e91ec63360
.dword 0xbfec74dcf8fe2356
.dword 0x3fea94948f735fbb
.dword 0x3fede3e91ec63360
.dword 0xbfec74dcf8fe2356
.dword 0x3fea94948f735fbb
.dword 0x3fe3c355f1c09536
.dword 0xbff688604093980e
.dword 0x3febd5096ab702e0
.dword 0x3fe3c355f1c09536
.dword 0xbff688604093980e
.dword 0x3febd5096ab702e0
.dword 0x3fe3c355f1c09536
.dword 0xbff688604093980e
.dword 0x3febd5096ab702e0
.dword 0x3fe3c355f1c09536
.dword 0xbff688604093980e
.dword 0x3febd5096ab702e0
.dword 0x3fe3c355f1c09536
.dword 0xbff688604093980e
.dword 0x3febd5096ab702e0
.dword 0x3fe76f0b2f92e7ea
.dword 0xbfd06c756a88ae94
.dword 0x3fc80de4b31dad14
.dword 0x3fe76f0b2f92e7ea
.dword 0xbfd06c756a88ae94
.dword 0x3fc80de4b31dad14
.dword 0x3fe76f0b2f92e7ea
.dword 0xbfd06c756a88ae94
.dword 0x3fc80de4b31dad14
.dword 0x3fe76f0b2f92e7ea
.dword 0xbfd06c756a88ae94
.dword 0x3fc80de4b31dad14
.dword 0x3fe76f0b2f92e7ea
.dword 0xbfd06c756a88ae94
.dword 0x3fc80de4b31dad14
.dword 0x3fd1681e079f572c
.dword 0xbff19442c7aaa4ba
.dword 0x3fd31feba49448ea
.dword 0x3fd1681e079f572c
.dword 0xbff19442c7aaa4ba
.dword 0x3fd31feba49448ea
.dword 0x3fd1681e079f572c
.dword 0xbff19442c7aaa4ba
.dword 0x3fd31feba49448ea
.dword 0x3fd1681e079f572c
.dword 0xbff19442c7aaa4ba
.dword 0x3fd31feba49448ea
.dword 0x3fd1681e079f572c
.dword 0xbff19442c7aaa4ba
.dword 0x3fd31feba49448ea
.dword 0x3fd60cf781bfd0ae
.dword 0xbfc0ce2a4bba2995
.dword 0x3fa72918becd6320
.dword 0x3fd60cf781bfd0ae
.dword 0xbfc0ce2a4bba2995
.dword 0x3fa72918becd6320
.dword 0x3fd60cf781bfd0ae
.dword 0xbfc0ce2a4bba2995
.dword 0x3fa72918becd6320
.dword 0x3fd60cf781bfd0ae
.dword 0xbfc0ce2a4bba2995
.dword 0x3fa72918becd6320
.dword 0x3fd60cf781bfd0ae
.dword 0xbfc0ce2a4bba2995
.dword 0x3fa72918becd6320
.dword 0x3fe1d9a3df6d15ce
.dword 0xbfd504dc3ef3dabe
.dword 0x3fc7731334ffb074
.dword 0x3fe1d9a3df6d15ce
.dword 0xbfd504dc3ef3dabe
.dword 0x3fc7731334ffb074
.dword 0x3fe1d9a3df6d15ce
.dword 0xbfd504dc3ef3dabe
.dword 0x3fc7731334ffb074
.dword 0x3fe1d9a3df6d15ce
.dword 0xbfd504dc3ef3dabe
.dword 0x3fc7731334ffb074
.dword 0x3fe1d9a3df6d15ce
.dword 0xbfd504dc3ef3dabe
.dword 0x3fc7731334ffb074
.dword 0x3fcec1898de532ec
.dword 0xbffc517682d93fff
.dword 0x3fdb37a427c600b4
.dword 0x3fcec1898de532ec
.dword 0xbffc517682d93fff
.dword 0x3fdb37a427c600b4
.dword 0x3fcec1898de532ec
.dword 0xbffc517682d93fff
.dword 0x3fdb37a427c600b4
.dword 0x3fcec1898de532ec
.dword 0xbffc517682d93fff
.dword 0x3fdb37a427c600b4
.dword 0x3fcec1898de532ec
.dword 0xbffc517682d93fff
.dword 0x3fdb37a427c600b4
.dword 0x3fba99d8d6d9d578
.dword 0xc00aa1813d0aa9b3
.dword 0x3fd62341a87a3a08
.dword 0x3fba99d8d6d9d578
.dword 0xc00aa1813d0aa9b3
.dword 0x3fd62341a87a3a08
.dword 0x3fba99d8d6d9d578
.dword 0xc00aa1813d0aa9b3
.dword 0x3fd62341a87a3a08
.dword 0x3fba99d8d6d9d578
.dword 0xc00aa1813d0aa9b3
.dword 0x3fd62341a87a3a08
.dword 0x3fba99d8d6d9d578
.dword 0xc00aa1813d0aa9b3
.dword 0x3fd62341a87a3a08
.dword 0x3fcfb411e3b11a54
.dword 0xbffcad2931cd2bbc
.dword 0x3fdc691df7ffd886
.dword 0x3fcfb411e3b11a54
.dword 0xbffcad2931cd2bbc
.dword 0x3fdc691df7ffd886
.dword 0x3fcfb411e3b11a54
.dword 0xbffcad2931cd2bbc
.dword 0x3fdc691df7ffd886
.dword 0x3fcfb411e3b11a54
.dword 0xbffcad2931cd2bbc
.dword 0x3fdc691df7ffd886
.dword 0x3fcfb411e3b11a54
.dword 0xbffcad2931cd2bbc
.dword 0x3fdc691df7ffd886
.dword 0x3fe28aa00cec137b
.dword 0xbff2f1e90c78e30c
.dword 0x3fe5f44a2a7b04d4
.dword 0x3fe28aa00cec137b
.dword 0xbff2f1e90c78e30c
.dword 0x3fe5f44a2a7b04d4
.dword 0x3fe28aa00cec137b
.dword 0xbff2f1e90c78e30c
.dword 0x3fe5f44a2a7b04d4
.dword 0x3fe28aa00cec137b
.dword 0xbff2f1e90c78e30c
.dword 0x3fe5f44a2a7b04d4
.dword 0x3fe28aa00cec137b
.dword 0xbff2f1e90c78e30c
.dword 0x3fe5f44a2a7b04d4
.dword 0x3fe40a22dc7537a8
.dword 0xbff70831d1736016
.dword 0x3fecd8d593b66657
.dword 0x3fe40a22dc7537a8
.dword 0xbff70831d1736016
.dword 0x3fecd8d593b66657
.dword 0x3fe40a22dc7537a8
.dword 0xbff70831d1736016
.dword 0x3fecd8d593b66657
.dword 0x3fe40a22dc7537a8
.dword 0xbff70831d1736016
.dword 0x3fecd8d593b66657
.dword 0x3fe40a22dc7537a8
.dword 0xbff70831d1736016
.dword 0x3fecd8d593b66657
.dword 0x3fe99acbe8d0b5e5
.dword 0xbfec8dd680d309fe
.dword 0x3fe6d8f020782810
.dword 0x3fe99acbe8d0b5e5
.dword 0xbfec8dd680d309fe
.dword 0x3fe6d8f020782810
.dword 0x3fe99acbe8d0b5e5
.dword 0xbfec8dd680d309fe
.dword 0x3fe6d8f020782810
.dword 0x3fe99acbe8d0b5e5
.dword 0xbfec8dd680d309fe
.dword 0x3fe6d8f020782810
.dword 0x3fe99acbe8d0b5e5
.dword 0xbfec8dd680d309fe
.dword 0x3fe6d8f020782810
.dword 0x3fd3295496028172
.dword 0xc0096fd9927db95e
.dword 0x3fee7687752f82e2
.dword 0x3fd3295496028172
.dword 0xc0096fd9927db95e
.dword 0x3fee7687752f82e2
.dword 0x3fd3295496028172
.dword 0xc0096fd9927db95e
.dword 0x3fee7687752f82e2
.dword 0x3fd3295496028172
.dword 0xc0096fd9927db95e
.dword 0x3fee7687752f82e2
.dword 0x3fd3295496028172
.dword 0xc0096fd9927db95e
.dword 0x3fee7687752f82e2
.dword 0x3fe825cb56e58c24
.dword 0xbff3e67031e065e5
.dword 0x3fee08aa16078411
.dword 0x3fe825cb56e58c24
.dword 0xbff3e67031e065e5
.dword 0x3fee08aa16078411
.dword 0x3fe825cb56e58c24
.dword 0xbff3e67031e065e5
.dword 0x3fee08aa16078411
.dword 0x3fe825cb56e58c24
.dword 0xbff3e67031e065e5
.dword 0x3fee08aa16078411
.dword 0x3fe825cb56e58c24
.dword 0xbff3e67031e065e5
.dword 0x3fee08aa16078411
.dword 0x3fe2487f902100ff
.dword 0xbfe7b135af2bcc57
.dword 0x3fdb12b6baab6b86
.dword 0x3fe2487f902100ff
.dword 0xbfe7b135af2bcc57
.dword 0x3fdb12b6baab6b86
.dword 0x3fe2487f902100ff
.dword 0xbfe7b135af2bcc57
.dword 0x3fdb12b6baab6b86
.dword 0x3fe2487f902100ff
.dword 0xbfe7b135af2bcc57
.dword 0x3fdb12b6baab6b86
.dword 0x3fe2487f902100ff
.dword 0xbfe7b135af2bcc57
.dword 0x3fdb12b6baab6b86
.dword 0x3fe82a3145361807
.dword 0xbff366b347d54828
.dword 0x3fed4d3640ce04fc
.dword 0x3fe82a3145361807
.dword 0xbff366b347d54828
.dword 0x3fed4d3640ce04fc
.dword 0x3fe82a3145361807
.dword 0xbff366b347d54828
.dword 0x3fed4d3640ce04fc
.dword 0x3fe82a3145361807
.dword 0xbff366b347d54828
.dword 0x3fed4d3640ce04fc
.dword 0x3fe82a3145361807
.dword 0xbff366b347d54828
.dword 0x3fed4d3640ce04fc
.dword 0x3febd8914dda5bbb
.dword 0xbff0e1217d67968e
.dword 0x3fed6061121d1254
.dword 0x3febd8914dda5bbb
.dword 0xbff0e1217d67968e
.dword 0x3fed6061121d1254
.dword 0x3febd8914dda5bbb
.dword 0xbff0e1217d67968e
.dword 0x3fed6061121d1254
.dword 0x3febd8914dda5bbb
.dword 0xbff0e1217d67968e
.dword 0x3fed6061121d1254
.dword 0x3febd8914dda5bbb
.dword 0xbff0e1217d67968e
.dword 0x3fed6061121d1254
.dword 0x3fc71caa898ef5dc
.dword 0xc00e7198d2a3a627
.dword 0x3fe5fceb7b7825e6
.dword 0x3fc71caa898ef5dc
.dword 0xc00e7198d2a3a627
.dword 0x3fe5fceb7b7825e6
.dword 0x3fc71caa898ef5dc
.dword 0xc00e7198d2a3a627
.dword 0x3fe5fceb7b7825e6
.dword 0x3fc71caa898ef5dc
.dword 0xc00e7198d2a3a627
.dword 0x3fe5fceb7b7825e6
.dword 0x3fc71caa898ef5dc
.dword 0xc00e7198d2a3a627
.dword 0x3fe5fceb7b7825e6
.dword 0x3fed3218c4e1606f
.dword 0xbfcfee2ce3ed8938
.dword 0x3fcd21d58bc8c84c
.dword 0x3fed3218c4e1606f
.dword 0xbfcfee2ce3ed8938
.dword 0x3fcd21d58bc8c84c
.dword 0x3fed3218c4e1606f
.dword 0xbfcfee2ce3ed8938
.dword 0x3fcd21d58bc8c84c
.dword 0x3fed3218c4e1606f
.dword 0xbfcfee2ce3ed8938
.dword 0x3fcd21d58bc8c84c
.dword 0x3fed3218c4e1606f
.dword 0xbfcfee2ce3ed8938
.dword 0x3fcd21d58bc8c84c
.dword 0x3fec4c4b2771f44c
.dword 0xbfe8e80868a6395e
.dword 0x3fe60668ee112e02
.dword 0x3fec4c4b2771f44c
.dword 0xbfe8e80868a6395e
.dword 0x3fe60668ee112e02
.dword 0x3fec4c4b2771f44c
.dword 0xbfe8e80868a6395e
.dword 0x3fe60668ee112e02
.dword 0x3fec4c4b2771f44c
.dword 0xbfe8e80868a6395e
.dword 0x3fe60668ee112e02
.dword 0x3fec4c4b2771f44c
.dword 0xbfe8e80868a6395e
.dword 0x3fe60668ee112e02
.dword 0x3fc6380270014d38
.dword 0xc011e1e5dfdb18b3
.dword 0x3fe8d53571c83a53
.dword 0x3fc6380270014d38
.dword 0xc011e1e5dfdb18b3
.dword 0x3fe8d53571c83a53
.dword 0x3fc6380270014d38
.dword 0xc011e1e5dfdb18b3
.dword 0x3fe8d53571c83a53
.dword 0x3fc6380270014d38
.dword 0xc011e1e5dfdb18b3
.dword 0x3fe8d53571c83a53
.dword 0x3fc6380270014d38
.dword 0xc011e1e5dfdb18b3
.dword 0x3fe8d53571c83a53
.dword 0x3fe6280d093ede42
.dword 0xbfe976a8d41fee7b
.dword 0x3fe1a172c46f184a
.dword 0x3fe6280d093ede42
.dword 0xbfe976a8d41fee7b
.dword 0x3fe1a172c46f184a
.dword 0x3fe6280d093ede42
.dword 0xbfe976a8d41fee7b
.dword 0x3fe1a172c46f184a
.dword 0x3fe6280d093ede42
.dword 0xbfe976a8d41fee7b
.dword 0x3fe1a172c46f184a
.dword 0x3fe6280d093ede42
.dword 0xbfe976a8d41fee7b
.dword 0x3fe1a172c46f184a
.dword 0x3fd18f22ffe6b360
.dword 0xbfd44b7215e230f8
.dword 0x3fb645b7e7cd6268
.dword 0x3fd18f22ffe6b360
.dword 0xbfd44b7215e230f8
.dword 0x3fb645b7e7cd6268
.dword 0x3fd18f22ffe6b360
.dword 0xbfd44b7215e230f8
.dword 0x3fb645b7e7cd6268
.dword 0x3fd18f22ffe6b360
.dword 0xbfd44b7215e230f8
.dword 0x3fb645b7e7cd6268
.dword 0x3fd18f22ffe6b360
.dword 0xbfd44b7215e230f8
.dword 0x3fb645b7e7cd6268
.dword 0x3fe3f2a875e925ef
.dword 0xbfe33ebcb5fefd67
.dword 0x3fd7fe5f9ef027c8
.dword 0x3fe3f2a875e925ef
.dword 0xbfe33ebcb5fefd67
.dword 0x3fd7fe5f9ef027c8
.dword 0x3fe3f2a875e925ef
.dword 0xbfe33ebcb5fefd67
.dword 0x3fd7fe5f9ef027c8
.dword 0x3fe3f2a875e925ef
.dword 0xbfe33ebcb5fefd67
.dword 0x3fd7fe5f9ef027c8
.dword 0x3fe3f2a875e925ef
.dword 0xbfe33ebcb5fefd67
.dword 0x3fd7fe5f9ef027c8
.dword 0x3fe06e439a4ea9bd
.dword 0xbfeab5bfe00a7991
.dword 0x3fdb6dd241dae3f0
.dword 0x3fe06e439a4ea9bd
.dword 0xbfeab5bfe00a7991
.dword 0x3fdb6dd241dae3f0
.dword 0x3fe06e439a4ea9bd
.dword 0xbfeab5bfe00a7991
.dword 0x3fdb6dd241dae3f0
.dword 0x3fe06e439a4ea9bd
.dword 0xbfeab5bfe00a7991
.dword 0x3fdb6dd241dae3f0
.dword 0x3fe06e439a4ea9bd
.dword 0xbfeab5bfe00a7991
.dword 0x3fdb6dd241dae3f0
.dword 0x3fef7164363c330a
.dword 0xbfddfc4848f59e17
.dword 0x3fdd76a6cd239b52
.dword 0x3fef7164363c330a
.dword 0xbfddfc4848f59e17
.dword 0x3fdd76a6cd239b52
.dword 0x3fef7164363c330a
.dword 0xbfddfc4848f59e17
.dword 0x3fdd76a6cd239b52
.dword 0x3fef7164363c330a
.dword 0xbfddfc4848f59e17
.dword 0x3fdd76a6cd239b52
.dword 0x3fef7164363c330a
.dword 0xbfddfc4848f59e17
.dword 0x3fdd76a6cd239b52
.dword 0x3fc25576d45156d0
.dword 0xc015f053f8c2f7df
.dword 0x3fe9238e25800d90
.dword 0x3fc25576d45156d0
.dword 0xc015f053f8c2f7df
.dword 0x3fe9238e25800d90
.dword 0x3fc25576d45156d0
.dword 0xc015f053f8c2f7df
.dword 0x3fe9238e25800d90
.dword 0x3fc25576d45156d0
.dword 0xc015f053f8c2f7df
.dword 0x3fe9238e25800d90
.dword 0x3fc25576d45156d0
.dword 0xc015f053f8c2f7df
.dword 0x3fe9238e25800d90
.dword 0x3fb425849ad16b18
.dword 0xc0146b0967398181
.dword 0x3fd9b5ac7f65a3ce
.dword 0x3fb425849ad16b18
.dword 0xc0146b0967398181
.dword 0x3fd9b5ac7f65a3ce
.dword 0x3fb425849ad16b18
.dword 0xc0146b0967398181
.dword 0x3fd9b5ac7f65a3ce
.dword 0x3fb425849ad16b18
.dword 0xc0146b0967398181
.dword 0x3fd9b5ac7f65a3ce
.dword 0x3fb425849ad16b18
.dword 0xc0146b0967398181
.dword 0x3fd9b5ac7f65a3ce
.dword 0x3fec8b6ca7a718e0
.dword 0xbfe06eb115e7e12c
.dword 0x3fdd50e7201e6198
.dword 0x3fec8b6ca7a718e0
.dword 0xbfe06eb115e7e12c
.dword 0x3fdd50e7201e6198
.dword 0x3fec8b6ca7a718e0
.dword 0xbfe06eb115e7e12c
.dword 0x3fdd50e7201e6198
.dword 0x3fec8b6ca7a718e0
.dword 0xbfe06eb115e7e12c
.dword 0x3fdd50e7201e6198
.dword 0x3fec8b6ca7a718e0
.dword 0xbfe06eb115e7e12c
.dword 0x3fdd50e7201e6198
.dword 0x3fed4cecc84ad1c0
.dword 0xbfe7fa7848ad4370
.dword 0x3fe5f4a14cd638c4
.dword 0x3fed4cecc84ad1c0
.dword 0xbfe7fa7848ad4370
.dword 0x3fe5f4a14cd638c4
.dword 0x3fed4cecc84ad1c0
.dword 0xbfe7fa7848ad4370
.dword 0x3fe5f4a14cd638c4
.dword 0x3fed4cecc84ad1c0
.dword 0xbfe7fa7848ad4370
.dword 0x3fe5f4a14cd638c4
.dword 0x3fed4cecc84ad1c0
.dword 0xbfe7fa7848ad4370
.dword 0x3fe5f4a14cd638c4
.dword 0x3fe31fe31f3f6d80
.dword 0xbfe9186faa2c411f
.dword 0x3fddff082e2155b8
.dword 0x3fe31fe31f3f6d80
.dword 0xbfe9186faa2c411f
.dword 0x3fddff082e2155b8
.dword 0x3fe31fe31f3f6d80
.dword 0xbfe9186faa2c411f
.dword 0x3fddff082e2155b8
.dword 0x3fe31fe31f3f6d80
.dword 0xbfe9186faa2c411f
.dword 0x3fddff082e2155b8
.dword 0x3fe31fe31f3f6d80
.dword 0xbfe9186faa2c411f
.dword 0x3fddff082e2155b8
.dword 0x3fea42775d379294
.dword 0xbfe3293e7a519c9a
.dword 0x3fdf729e9ae02556
.dword 0x3fea42775d379294
.dword 0xbfe3293e7a519c9a
.dword 0x3fdf729e9ae02556
.dword 0x3fea42775d379294
.dword 0xbfe3293e7a519c9a
.dword 0x3fdf729e9ae02556
.dword 0x3fea42775d379294
.dword 0xbfe3293e7a519c9a
.dword 0x3fdf729e9ae02556
.dword 0x3fea42775d379294
.dword 0xbfe3293e7a519c9a
.dword 0x3fdf729e9ae02556
.dword 0x3feecbf188330fa1
.dword 0xbf9e3110cf661ad7
.dword 0x3f9d0e6ae71ab740
.dword 0x3feecbf188330fa1
.dword 0xbf9e3110cf661ad7
.dword 0x3f9d0e6ae71ab740
.dword 0x3feecbf188330fa1
.dword 0xbf9e3110cf661ad7
.dword 0x3f9d0e6ae71ab740
.dword 0x3feecbf188330fa1
.dword 0xbf9e3110cf661ad7
.dword 0x3f9d0e6ae71ab740
.dword 0x3feecbf188330fa1
.dword 0xbf9e3110cf661ad7
.dword 0x3f9d0e6ae71ab740
.dword 0x3fe635aaad702276
.dword 0xbff5de9699de9a39
.dword 0x3fee5b69b07fe9e3
.dword 0x3fe635aaad702276
.dword 0xbff5de9699de9a39
.dword 0x3fee5b69b07fe9e3
.dword 0x3fe635aaad702276
.dword 0xbff5de9699de9a39
.dword 0x3fee5b69b07fe9e3
.dword 0x3fe635aaad702276
.dword 0xbff5de9699de9a39
.dword 0x3fee5b69b07fe9e3
.dword 0x3fe635aaad702276
.dword 0xbff5de9699de9a39
.dword 0x3fee5b69b07fe9e3
.dword 0x3fe7d3845caa91f6
.dword 0xbfe9772f84dfd0f8
.dword 0x3fe2f5fd5e376c0a
.dword 0x3fe7d3845caa91f6
.dword 0xbfe9772f84dfd0f8
.dword 0x3fe2f5fd5e376c0a
.dword 0x3fe7d3845caa91f6
.dword 0xbfe9772f84dfd0f8
.dword 0x3fe2f5fd5e376c0a
.dword 0x3fe7d3845caa91f6
.dword 0xbfe9772f84dfd0f8
.dword 0x3fe2f5fd5e376c0a
.dword 0x3fe7d3845caa91f6
.dword 0xbfe9772f84dfd0f8
.dword 0x3fe2f5fd5e376c0a
.dword 0x3fe34929d8dfb1c8
.dword 0xbff8f393a4e458bb
.dword 0x3fee1357e7cef306
.dword 0x3fe34929d8dfb1c8
.dword 0xbff8f393a4e458bb
.dword 0x3fee1357e7cef306
.dword 0x3fe34929d8dfb1c8
.dword 0xbff8f393a4e458bb
.dword 0x3fee1357e7cef306
.dword 0x3fe34929d8dfb1c8
.dword 0xbff8f393a4e458bb
.dword 0x3fee1357e7cef306
.dword 0x3fe34929d8dfb1c8
.dword 0xbff8f393a4e458bb
.dword 0x3fee1357e7cef306
.dword 0x3fe8358bc96c4adb
.dword 0xbff414f65f522ead
.dword 0x3fee62a67202a4d9
.dword 0x3fe8358bc96c4adb
.dword 0xbff414f65f522ead
.dword 0x3fee62a67202a4d9
.dword 0x3fe8358bc96c4adb
.dword 0xbff414f65f522ead
.dword 0x3fee62a67202a4d9
.dword 0x3fe8358bc96c4adb
.dword 0xbff414f65f522ead
.dword 0x3fee62a67202a4d9
.dword 0x3fe8358bc96c4adb
.dword 0xbff414f65f522ead
.dword 0x3fee62a67202a4d9
.dword 0x3fb0739750eb65a8
.dword 0xc02d72d619b7f54d
.dword 0x3fee4795fd44d27c
.dword 0x3fb0739750eb65a8
.dword 0xc02d72d619b7f54d
.dword 0x3fee4795fd44d27c
.dword 0x3fb0739750eb65a8
.dword 0xc02d72d619b7f54d
.dword 0x3fee4795fd44d27c
.dword 0x3fb0739750eb65a8
.dword 0xc02d72d619b7f54d
.dword 0x3fee4795fd44d27c
.dword 0x3fb0739750eb65a8
.dword 0xc02d72d619b7f54d
.dword 0x3fee4795fd44d27c
.dword 0x3fb9e8c5264c3ce8
.dword 0xc0141c535d2d80db
.dword 0x3fe0486a63a1d8bd
.dword 0x3fb9e8c5264c3ce8
.dword 0xc0141c535d2d80db
.dword 0x3fe0486a63a1d8bd
.dword 0x3fb9e8c5264c3ce8
.dword 0xc0141c535d2d80db
.dword 0x3fe0486a63a1d8bd
.dword 0x3fb9e8c5264c3ce8
.dword 0xc0141c535d2d80db
.dword 0x3fe0486a63a1d8bd
.dword 0x3fb9e8c5264c3ce8
.dword 0xc0141c535d2d80db
.dword 0x3fe0486a63a1d8bd
.dword 0x3fecff7865224462
.dword 0xbff06622e5458ea6
.dword 0x3fedb894430d5126
.dword 0x3fecff7865224462
.dword 0xbff06622e5458ea6
.dword 0x3fedb894430d5126
.dword 0x3fecff7865224462
.dword 0xbff06622e5458ea6
.dword 0x3fedb894430d5126
.dword 0x3fecff7865224462
.dword 0xbff06622e5458ea6
.dword 0x3fedb894430d5126
.dword 0x3fecff7865224462
.dword 0xbff06622e5458ea6
.dword 0x3fedb894430d5126
.dword 0x3fdec9b00b7a7816
.dword 0xbff59e54c162121b
.dword 0x3fe4ccb0e83df27d
.dword 0x3fdec9b00b7a7816
.dword 0xbff59e54c162121b
.dword 0x3fe4ccb0e83df27d
.dword 0x3fdec9b00b7a7816
.dword 0xbff59e54c162121b
.dword 0x3fe4ccb0e83df27d
.dword 0x3fdec9b00b7a7816
.dword 0xbff59e54c162121b
.dword 0x3fe4ccb0e83df27d
.dword 0x3fdec9b00b7a7816
.dword 0xbff59e54c162121b
.dword 0x3fe4ccb0e83df27d
.dword 0x3fdce6bf6950d14a
.dword 0xbf9791f5d01f3c29
.dword 0x3f8549ad29a8dd00
.dword 0x3fdce6bf6950d14a
.dword 0xbf9791f5d01f3c29
.dword 0x3f8549ad29a8dd00
.dword 0x3fdce6bf6950d14a
.dword 0xbf9791f5d01f3c29
.dword 0x3f8549ad29a8dd00
.dword 0x3fdce6bf6950d14a
.dword 0xbf9791f5d01f3c29
.dword 0x3f8549ad29a8dd00
.dword 0x3fdce6bf6950d14a
.dword 0xbf9791f5d01f3c29
.dword 0x3f8549ad29a8dd00
.dword 0x3fe2dfe5ab522b1c
.dword 0xbff9e838ef55b053
.dword 0x3fee8fc887ddee90
.dword 0x3fe2dfe5ab522b1c
.dword 0xbff9e838ef55b053
.dword 0x3fee8fc887ddee90
.dword 0x3fe2dfe5ab522b1c
.dword 0xbff9e838ef55b053
.dword 0x3fee8fc887ddee90
.dword 0x3fe2dfe5ab522b1c
.dword 0xbff9e838ef55b053
.dword 0x3fee8fc887ddee90
.dword 0x3fe2dfe5ab522b1c
.dword 0xbff9e838ef55b053
.dword 0x3fee8fc887ddee90
.dword 0x3fee0d60f23017e2
.dword 0xbfce15e3b6a36767
.dword 0x3fcc41198519489c
.dword 0x3fee0d60f23017e2
.dword 0xbfce15e3b6a36767
.dword 0x3fcc41198519489c
.dword 0x3fee0d60f23017e2
.dword 0xbfce15e3b6a36767
.dword 0x3fcc41198519489c
.dword 0x3fee0d60f23017e2
.dword 0xbfce15e3b6a36767
.dword 0x3fcc41198519489c
.dword 0x3fee0d60f23017e2
.dword 0xbfce15e3b6a36767
.dword 0x3fcc41198519489c
.dword 0x3f992870dd595560
.dword 0xc0443947472f5ed3
.dword 0x3fefcc9d3a26fff0
.dword 0x3f992870dd595560
.dword 0xc0443947472f5ed3
.dword 0x3fefcc9d3a26fff0
.dword 0x3f992870dd595560
.dword 0xc0443947472f5ed3
.dword 0x3fefcc9d3a26fff0
.dword 0x3f992870dd595560
.dword 0xc0443947472f5ed3
.dword 0x3fefcc9d3a26fff0
.dword 0x3f992870dd595560
.dword 0xc0443947472f5ed3
.dword 0x3fefcc9d3a26fff0
.dword 0x3fd6aa01ab216bf6
.dword 0xbff9b967f0cbb108
.dword 0x3fe23821c51824c4
.dword 0x3fd6aa01ab216bf6
.dword 0xbff9b967f0cbb108
.dword 0x3fe23821c51824c4
.dword 0x3fd6aa01ab216bf6
.dword 0xbff9b967f0cbb108
.dword 0x3fe23821c51824c4
.dword 0x3fd6aa01ab216bf6
.dword 0xbff9b967f0cbb108
.dword 0x3fe23821c51824c4
.dword 0x3fd6aa01ab216bf6
.dword 0xbff9b967f0cbb108
.dword 0x3fe23821c51824c4
.dword 0x3fd4fae5f65470f8
.dword 0xbfc73d652382b79b
.dword 0x3fae792bbd3065a0
.dword 0x3fd4fae5f65470f8
.dword 0xbfc73d652382b79b
.dword 0x3fae792bbd3065a0
.dword 0x3fd4fae5f65470f8
.dword 0xbfc73d652382b79b
.dword 0x3fae792bbd3065a0
.dword 0x3fd4fae5f65470f8
.dword 0xbfc73d652382b79b
.dword 0x3fae792bbd3065a0
.dword 0x3fd4fae5f65470f8
.dword 0xbfc73d652382b79b
.dword 0x3fae792bbd3065a0
.dword 0x3feac5cf7ce589af
.dword 0xbfed0c4b86af495e
.dword 0x3fe84d8d674c2398
.dword 0x3feac5cf7ce589af
.dword 0xbfed0c4b86af495e
.dword 0x3fe84d8d674c2398
.dword 0x3feac5cf7ce589af
.dword 0xbfed0c4b86af495e
.dword 0x3fe84d8d674c2398
.dword 0x3feac5cf7ce589af
.dword 0xbfed0c4b86af495e
.dword 0x3fe84d8d674c2398
.dword 0x3feac5cf7ce589af
.dword 0xbfed0c4b86af495e
.dword 0x3fe84d8d674c2398
.dword 0x3fd12137180d10f0
.dword 0xbff0dcaa39adb8b4
.dword 0x3fd20d760c41754c
.dword 0x3fd12137180d10f0
.dword 0xbff0dcaa39adb8b4
.dword 0x3fd20d760c41754c
.dword 0x3fd12137180d10f0
.dword 0xbff0dcaa39adb8b4
.dword 0x3fd20d760c41754c
.dword 0x3fd12137180d10f0
.dword 0xbff0dcaa39adb8b4
.dword 0x3fd20d760c41754c
.dword 0x3fd12137180d10f0
.dword 0xbff0dcaa39adb8b4
.dword 0x3fd20d760c41754c
.dword 0x3fe105d75e8ddd6c
.dword 0xbff58fa44664b60f
.dword 0x3fe6f07da7bb8429
.dword 0x3fe105d75e8ddd6c
.dword 0xbff58fa44664b60f
.dword 0x3fe6f07da7bb8429
.dword 0x3fe105d75e8ddd6c
.dword 0xbff58fa44664b60f
.dword 0x3fe6f07da7bb8429
.dword 0x3fe105d75e8ddd6c
.dword 0xbff58fa44664b60f
.dword 0x3fe6f07da7bb8429
.dword 0x3fe105d75e8ddd6c
.dword 0xbff58fa44664b60f
.dword 0x3fe6f07da7bb8429
.dword 0x3fe45809dd472479
.dword 0xbff151b1424ab809
.dword 0x3fe605698f4318ab
.dword 0x3fe45809dd472479
.dword 0xbff151b1424ab809
.dword 0x3fe605698f4318ab
.dword 0x3fe45809dd472479
.dword 0xbff151b1424ab809
.dword 0x3fe605698f4318ab
.dword 0x3fe45809dd472479
.dword 0xbff151b1424ab809
.dword 0x3fe605698f4318ab
.dword 0x3fe45809dd472479
.dword 0xbff151b1424ab809
.dword 0x3fe605698f4318ab
.dword 0x3fe32a6da45a7263
.dword 0xbfa692c2b4d8bf28
.dword 0x3f9b0a23258a72a0
.dword 0x3fe32a6da45a7263
.dword 0xbfa692c2b4d8bf28
.dword 0x3f9b0a23258a72a0
.dword 0x3fe32a6da45a7263
.dword 0xbfa692c2b4d8bf28
.dword 0x3f9b0a23258a72a0
.dword 0x3fe32a6da45a7263
.dword 0xbfa692c2b4d8bf28
.dword 0x3f9b0a23258a72a0
.dword 0x3fe32a6da45a7263
.dword 0xbfa692c2b4d8bf28
.dword 0x3f9b0a23258a72a0
.dword 0x3fe89ff8315fc687
.dword 0xbff32a7d76038e8f
.dword 0x3fed7f5bbd8798b8
.dword 0x3fe89ff8315fc687
.dword 0xbff32a7d76038e8f
.dword 0x3fed7f5bbd8798b8
.dword 0x3fe89ff8315fc687
.dword 0xbff32a7d76038e8f
.dword 0x3fed7f5bbd8798b8
.dword 0x3fe89ff8315fc687
.dword 0xbff32a7d76038e8f
.dword 0x3fed7f5bbd8798b8
.dword 0x3fe89ff8315fc687
.dword 0xbff32a7d76038e8f
.dword 0x3fed7f5bbd8798b8
.dword 0x3fe99139652409a5
.dword 0xbff386bed000191d
.dword 0x3fef33c551b37c95
.dword 0x3fe99139652409a5
.dword 0xbff386bed000191d
.dword 0x3fef33c551b37c95
.dword 0x3fe99139652409a5
.dword 0xbff386bed000191d
.dword 0x3fef33c551b37c95
.dword 0x3fe99139652409a5
.dword 0xbff386bed000191d
.dword 0x3fef33c551b37c95
.dword 0x3fe99139652409a5
.dword 0xbff386bed000191d
.dword 0x3fef33c551b37c95
.dword 0x3fd1532e780d1c6a
.dword 0xc008ba9b406e5e2d
.dword 0x3feac6d4cbdda9c1
.dword 0x3fd1532e780d1c6a
.dword 0xc008ba9b406e5e2d
.dword 0x3feac6d4cbdda9c1
.dword 0x3fd1532e780d1c6a
.dword 0xc008ba9b406e5e2d
.dword 0x3feac6d4cbdda9c1
.dword 0x3fd1532e780d1c6a
.dword 0xc008ba9b406e5e2d
.dword 0x3feac6d4cbdda9c1
.dword 0x3fd1532e780d1c6a
.dword 0xc008ba9b406e5e2d
.dword 0x3feac6d4cbdda9c1
.dword 0x3fe6af4da62f3a85
.dword 0xbfdd63b7d1cedcb2
.dword 0x3fd4d58f061495a0
.dword 0x3fe6af4da62f3a85
.dword 0xbfdd63b7d1cedcb2
.dword 0x3fd4d58f061495a0
.dword 0x3fe6af4da62f3a85
.dword 0xbfdd63b7d1cedcb2
.dword 0x3fd4d58f061495a0
.dword 0x3fe6af4da62f3a85
.dword 0xbfdd63b7d1cedcb2
.dword 0x3fd4d58f061495a0
.dword 0x3fe6af4da62f3a85
.dword 0xbfdd63b7d1cedcb2
.dword 0x3fd4d58f061495a0
.dword 0x3fec3a0de8dbcd32
.dword 0xbfd80c1c503492a7
.dword 0x3fd536392d67da8c
.dword 0x3fec3a0de8dbcd32
.dword 0xbfd80c1c503492a7
.dword 0x3fd536392d67da8c
.dword 0x3fec3a0de8dbcd32
.dword 0xbfd80c1c503492a7
.dword 0x3fd536392d67da8c
.dword 0x3fec3a0de8dbcd32
.dword 0xbfd80c1c503492a7
.dword 0x3fd536392d67da8c
.dword 0x3fec3a0de8dbcd32
.dword 0xbfd80c1c503492a7
.dword 0x3fd536392d67da8c
.dword 0x3fe0e792d49ad4b8
.dword 0xbfba7508bc662511
.dword 0x3fabf3f5360498e0
.dword 0x3fe0e792d49ad4b8
.dword 0xbfba7508bc662511
.dword 0x3fabf3f5360498e0
.dword 0x3fe0e792d49ad4b8
.dword 0xbfba7508bc662511
.dword 0x3fabf3f5360498e0
.dword 0x3fe0e792d49ad4b8
.dword 0xbfba7508bc662511
.dword 0x3fabf3f5360498e0
.dword 0x3fe0e792d49ad4b8
.dword 0xbfba7508bc662511
.dword 0x3fabf3f5360498e0
.dword 0x3fd3fc7d5fd378ae
.dword 0xbff0b6525d2a88b1
.dword 0x3fd4e03c5458c38c
.dword 0x3fd3fc7d5fd378ae
.dword 0xbff0b6525d2a88b1
.dword 0x3fd4e03c5458c38c
.dword 0x3fd3fc7d5fd378ae
.dword 0xbff0b6525d2a88b1
.dword 0x3fd4e03c5458c38c
.dword 0x3fd3fc7d5fd378ae
.dword 0xbff0b6525d2a88b1
.dword 0x3fd4e03c5458c38c
.dword 0x3fd3fc7d5fd378ae
.dword 0xbff0b6525d2a88b1
.dword 0x3fd4e03c5458c38c
.dword 0x3fe43169f6bc597d
.dword 0xbfb92d0ba3c9b9f0
.dword 0x3fafc60f3c3b1620
.dword 0x3fe43169f6bc597d
.dword 0xbfb92d0ba3c9b9f0
.dword 0x3fafc60f3c3b1620
.dword 0x3fe43169f6bc597d
.dword 0xbfb92d0ba3c9b9f0
.dword 0x3fafc60f3c3b1620
.dword 0x3fe43169f6bc597d
.dword 0xbfb92d0ba3c9b9f0
.dword 0x3fafc60f3c3b1620
.dword 0x3fe43169f6bc597d
.dword 0xbfb92d0ba3c9b9f0
.dword 0x3fafc60f3c3b1620
.dword 0x3feef912d69f703a
.dword 0xbfb3f6b2d50cc6c5
.dword 0x3fb352ab07efa158
.dword 0x3feef912d69f703a
.dword 0xbfb3f6b2d50cc6c5
.dword 0x3fb352ab07efa158
.dword 0x3feef912d69f703a
.dword 0xbfb3f6b2d50cc6c5
.dword 0x3fb352ab07efa158
.dword 0x3feef912d69f703a
.dword 0xbfb3f6b2d50cc6c5
.dword 0x3fb352ab07efa158
.dword 0x3feef912d69f703a
.dword 0xbfb3f6b2d50cc6c5
.dword 0x3fb352ab07efa158
.dword 0x3fe8798163de0d20
.dword 0xbfe5abd55c68cee5
.dword 0x3fe09329646a2112
.dword 0x3fe8798163de0d20
.dword 0xbfe5abd55c68cee5
.dword 0x3fe09329646a2112
.dword 0x3fe8798163de0d20
.dword 0xbfe5abd55c68cee5
.dword 0x3fe09329646a2112
.dword 0x3fe8798163de0d20
.dword 0xbfe5abd55c68cee5
.dword 0x3fe09329646a2112
.dword 0x3fe8798163de0d20
.dword 0xbfe5abd55c68cee5
.dword 0x3fe09329646a2112
.dword 0x3fead4af5cff9f91
.dword 0xbfeb35ae39284d82
.dword 0x3fe6d0764d4fe2e6
.dword 0x3fead4af5cff9f91
.dword 0xbfeb35ae39284d82
.dword 0x3fe6d0764d4fe2e6
.dword 0x3fead4af5cff9f91
.dword 0xbfeb35ae39284d82
.dword 0x3fe6d0764d4fe2e6
.dword 0x3fead4af5cff9f91
.dword 0xbfeb35ae39284d82
.dword 0x3fe6d0764d4fe2e6
.dword 0x3fead4af5cff9f91
.dword 0xbfeb35ae39284d82
.dword 0x3fe6d0764d4fe2e6
.dword 0x3fe7deaeab8f1e14
.dword 0xbfeeff67c003213d
.dword 0x3fe71f47a4b9ee90
.dword 0x3fe7deaeab8f1e14
.dword 0xbfeeff67c003213d
.dword 0x3fe71f47a4b9ee90
.dword 0x3fe7deaeab8f1e14
.dword 0xbfeeff67c003213d
.dword 0x3fe71f47a4b9ee90
.dword 0x3fe7deaeab8f1e14
.dword 0xbfeeff67c003213d
.dword 0x3fe71f47a4b9ee90
.dword 0x3fe7deaeab8f1e14
.dword 0xbfeeff67c003213d
.dword 0x3fe71f47a4b9ee90
.dword 0x3fbea1da30f88b70
.dword 0xc01c58063f45f965
.dword 0x3feb21e1fdcaaffb
.dword 0x3fbea1da30f88b70
.dword 0xc01c58063f45f965
.dword 0x3feb21e1fdcaaffb
.dword 0x3fbea1da30f88b70
.dword 0xc01c58063f45f965
.dword 0x3feb21e1fdcaaffb
.dword 0x3fbea1da30f88b70
.dword 0xc01c58063f45f965
.dword 0x3feb21e1fdcaaffb
.dword 0x3fbea1da30f88b70
.dword 0xc01c58063f45f965
.dword 0x3feb21e1fdcaaffb
.dword 0x3fe402ff5c861340
.dword 0xbfef6f994acbeb42
.dword 0x3fe3a8b1a4863ac3
.dword 0x3fe402ff5c861340
.dword 0xbfef6f994acbeb42
.dword 0x3fe3a8b1a4863ac3
.dword 0x3fe402ff5c861340
.dword 0xbfef6f994acbeb42
.dword 0x3fe3a8b1a4863ac3
.dword 0x3fe402ff5c861340
.dword 0xbfef6f994acbeb42
.dword 0x3fe3a8b1a4863ac3
.dword 0x3fe402ff5c861340
.dword 0xbfef6f994acbeb42
.dword 0x3fe3a8b1a4863ac3
.dword 0x3feb0ceaa962f523
.dword 0xbfefd5ac1ca9572d
.dword 0x3feae922cbb719da
.dword 0x3feb0ceaa962f523
.dword 0xbfefd5ac1ca9572d
.dword 0x3feae922cbb719da
.dword 0x3feb0ceaa962f523
.dword 0xbfefd5ac1ca9572d
.dword 0x3feae922cbb719da
.dword 0x3feb0ceaa962f523
.dword 0xbfefd5ac1ca9572d
.dword 0x3feae922cbb719da
.dword 0x3feb0ceaa962f523
.dword 0xbfefd5ac1ca9572d
.dword 0x3feae922cbb719da
.dword 0x3fe11a059e270438
.dword 0xbffaf3ca16d156fd
.dword 0x3feccedc573bccb5
.dword 0x3fe11a059e270438
.dword 0xbffaf3ca16d156fd
.dword 0x3feccedc573bccb5
.dword 0x3fe11a059e270438
.dword 0xbffaf3ca16d156fd
.dword 0x3feccedc573bccb5
.dword 0x3fe11a059e270438
.dword 0xbffaf3ca16d156fd
.dword 0x3feccedc573bccb5
.dword 0x3fe11a059e270438
.dword 0xbffaf3ca16d156fd
.dword 0x3feccedc573bccb5
.dword 0x3fd85aade0a05486
.dword 0xbff805f473275832
.dword 0x3fe2488a9eb4fbbb
.dword 0x3fd85aade0a05486
.dword 0xbff805f473275832
.dword 0x3fe2488a9eb4fbbb
.dword 0x3fd85aade0a05486
.dword 0xbff805f473275832
.dword 0x3fe2488a9eb4fbbb
.dword 0x3fd85aade0a05486
.dword 0xbff805f473275832
.dword 0x3fe2488a9eb4fbbb
.dword 0x3fd85aade0a05486
.dword 0xbff805f473275832
.dword 0x3fe2488a9eb4fbbb
.dword 0x3fe0f43b4ecc3d85
.dword 0xbfcaa1198790e708
.dword 0x3fbc37950217b590
.dword 0x3fe0f43b4ecc3d85
.dword 0xbfcaa1198790e708
.dword 0x3fbc37950217b590
.dword 0x3fe0f43b4ecc3d85
.dword 0xbfcaa1198790e708
.dword 0x3fbc37950217b590
.dword 0x3fe0f43b4ecc3d85
.dword 0xbfcaa1198790e708
.dword 0x3fbc37950217b590
.dword 0x3fe0f43b4ecc3d85
.dword 0xbfcaa1198790e708
.dword 0x3fbc37950217b590
.dword 0x3fceaceffa6c78d0
.dword 0xc010aef8fb2f1bae
.dword 0x3feffc66064ac3be
.dword 0x3fceaceffa6c78d0
.dword 0xc010aef8fb2f1bae
.dword 0x3feffc66064ac3be
.dword 0x3fceaceffa6c78d0
.dword 0xc010aef8fb2f1bae
.dword 0x3feffc66064ac3be
.dword 0x3fceaceffa6c78d0
.dword 0xc010aef8fb2f1bae
.dword 0x3feffc66064ac3be
.dword 0x3fceaceffa6c78d0
.dword 0xc010aef8fb2f1bae
.dword 0x3feffc66064ac3be
.dword 0x3fbc599fa20321b0
.dword 0xc012bf1897794fc4
.dword 0x3fe09bb6855ae1f9
.dword 0x3fbc599fa20321b0
.dword 0xc012bf1897794fc4
.dword 0x3fe09bb6855ae1f9
.dword 0x3fbc599fa20321b0
.dword 0xc012bf1897794fc4
.dword 0x3fe09bb6855ae1f9
.dword 0x3fbc599fa20321b0
.dword 0xc012bf1897794fc4
.dword 0x3fe09bb6855ae1f9
.dword 0x3fbc599fa20321b0
.dword 0xc012bf1897794fc4
.dword 0x3fe09bb6855ae1f9
.dword 0x3fe985e0ab37b510
.dword 0xbff344d84e10bcfb
.dword 0x3feebcccd20a35cd
.dword 0x3fe985e0ab37b510
.dword 0xbff344d84e10bcfb
.dword 0x3feebcccd20a35cd
.dword 0x3fe985e0ab37b510
.dword 0xbff344d84e10bcfb
.dword 0x3feebcccd20a35cd
.dword 0x3fe985e0ab37b510
.dword 0xbff344d84e10bcfb
.dword 0x3feebcccd20a35cd
.dword 0x3fe985e0ab37b510
.dword 0xbff344d84e10bcfb
.dword 0x3feebcccd20a35cd
.dword 0x3fece562dfda01e1
.dword 0xbff1218bd738c2cd
.dword 0x3feef04eb7412fa2
.dword 0x3fece562dfda01e1
.dword 0xbff1218bd738c2cd
.dword 0x3feef04eb7412fa2
.dword 0x3fece562dfda01e1
.dword 0xbff1218bd738c2cd
.dword 0x3feef04eb7412fa2
.dword 0x3fece562dfda01e1
.dword 0xbff1218bd738c2cd
.dword 0x3feef04eb7412fa2
.dword 0x3fece562dfda01e1
.dword 0xbff1218bd738c2cd
.dword 0x3feef04eb7412fa2
.dword 0x3fd0a137d68e4346
.dword 0xc0029c745997aa16
.dword 0x3fe357fb9fbf3326
.dword 0x3fd0a137d68e4346
.dword 0xc0029c745997aa16
.dword 0x3fe357fb9fbf3326
.dword 0x3fd0a137d68e4346
.dword 0xc0029c745997aa16
.dword 0x3fe357fb9fbf3326
.dword 0x3fd0a137d68e4346
.dword 0xc0029c745997aa16
.dword 0x3fe357fb9fbf3326
.dword 0x3fd0a137d68e4346
.dword 0xc0029c745997aa16
.dword 0x3fe357fb9fbf3326
.dword 0x3fda1267000e30b4
.dword 0xbff0c2be06a3e004
.dword 0x3fdb4fbbc647ec8c
.dword 0x3fda1267000e30b4
.dword 0xbff0c2be06a3e004
.dword 0x3fdb4fbbc647ec8c
.dword 0x3fda1267000e30b4
.dword 0xbff0c2be06a3e004
.dword 0x3fdb4fbbc647ec8c
.dword 0x3fda1267000e30b4
.dword 0xbff0c2be06a3e004
.dword 0x3fdb4fbbc647ec8c
.dword 0x3fda1267000e30b4
.dword 0xbff0c2be06a3e004
.dword 0x3fdb4fbbc647ec8c
.dword 0x3fc2ff8d9a345a70
.dword 0xc00a01cf8f384df5
.dword 0x3fdee16c87b58dd4
.dword 0x3fc2ff8d9a345a70
.dword 0xc00a01cf8f384df5
.dword 0x3fdee16c87b58dd4
.dword 0x3fc2ff8d9a345a70
.dword 0xc00a01cf8f384df5
.dword 0x3fdee16c87b58dd4
.dword 0x3fc2ff8d9a345a70
.dword 0xc00a01cf8f384df5
.dword 0x3fdee16c87b58dd4
.dword 0x3fc2ff8d9a345a70
.dword 0xc00a01cf8f384df5
.dword 0x3fdee16c87b58dd4
.dword 0x3fc9060a25e60734
.dword 0xc0072fb015795e64
.dword 0x3fe221a1dc27aec8
.dword 0x3fc9060a25e60734
.dword 0xc0072fb015795e64
.dword 0x3fe221a1dc27aec8
.dword 0x3fc9060a25e60734
.dword 0xc0072fb015795e64
.dword 0x3fe221a1dc27aec8
.dword 0x3fc9060a25e60734
.dword 0xc0072fb015795e64
.dword 0x3fe221a1dc27aec8
.dword 0x3fc9060a25e60734
.dword 0xc0072fb015795e64
.dword 0x3fe221a1dc27aec8
.dword 0x3fc59e7f8a445a4c
.dword 0xc000ad886e596e9c
.dword 0x3fd688f9a5a1f892
.dword 0x3fc59e7f8a445a4c
.dword 0xc000ad886e596e9c
.dword 0x3fd688f9a5a1f892
.dword 0x3fc59e7f8a445a4c
.dword 0xc000ad886e596e9c
.dword 0x3fd688f9a5a1f892
.dword 0x3fc59e7f8a445a4c
.dword 0xc000ad886e596e9c
.dword 0x3fd688f9a5a1f892
.dword 0x3fc59e7f8a445a4c
.dword 0xc000ad886e596e9c
.dword 0x3fd688f9a5a1f892
.dword 0x3fe3a7f3ea7cc929
.dword 0xbff67e8cf7ab880c
.dword 0x3feba267311beea1
.dword 0x3fe3a7f3ea7cc929
.dword 0xbff67e8cf7ab880c
.dword 0x3feba267311beea1
.dword 0x3fe3a7f3ea7cc929
.dword 0xbff67e8cf7ab880c
.dword 0x3feba267311beea1
.dword 0x3fe3a7f3ea7cc929
.dword 0xbff67e8cf7ab880c
.dword 0x3feba267311beea1
.dword 0x3fe3a7f3ea7cc929
.dword 0xbff67e8cf7ab880c
.dword 0x3feba267311beea1
.dword 0x3fd8b833025b7e80
.dword 0xbffafb298f6c20e9
.dword 0x3fe4d7ae5cd0da80
.dword 0x3fd8b833025b7e80
.dword 0xbffafb298f6c20e9
.dword 0x3fe4d7ae5cd0da80
.dword 0x3fd8b833025b7e80
.dword 0xbffafb298f6c20e9
.dword 0x3fe4d7ae5cd0da80
.dword 0x3fd8b833025b7e80
.dword 0xbffafb298f6c20e9
.dword 0x3fe4d7ae5cd0da80
.dword 0x3fd8b833025b7e80
.dword 0xbffafb298f6c20e9
.dword 0x3fe4d7ae5cd0da80
.dword 0x3fe87ab9c2d73e1e
.dword 0xbfebe3e792afc6bf
.dword 0x3fe555e478472086
.dword 0x3fe87ab9c2d73e1e
.dword 0xbfebe3e792afc6bf
.dword 0x3fe555e478472086
.dword 0x3fe87ab9c2d73e1e
.dword 0xbfebe3e792afc6bf
.dword 0x3fe555e478472086
.dword 0x3fe87ab9c2d73e1e
.dword 0xbfebe3e792afc6bf
.dword 0x3fe555e478472086
.dword 0x3fe87ab9c2d73e1e
.dword 0xbfebe3e792afc6bf
.dword 0x3fe555e478472086
.dword 0x3fd8035174fe3838
.dword 0xbffb88fa57b93bfe
.dword 0x3fe4a996b0a81f8a
.dword 0x3fd8035174fe3838
.dword 0xbffb88fa57b93bfe
.dword 0x3fe4a996b0a81f8a
.dword 0x3fd8035174fe3838
.dword 0xbffb88fa57b93bfe
.dword 0x3fe4a996b0a81f8a
.dword 0x3fd8035174fe3838
.dword 0xbffb88fa57b93bfe
.dword 0x3fe4a996b0a81f8a
.dword 0x3fd8035174fe3838
.dword 0xbffb88fa57b93bfe
.dword 0x3fe4a996b0a81f8a
.dword 0x3fc6f6b44c9db140
.dword 0xc0132e0af0d738b9
.dword 0x3feb870b1531acb9
.dword 0x3fc6f6b44c9db140
.dword 0xc0132e0af0d738b9
.dword 0x3feb870b1531acb9
.dword 0x3fc6f6b44c9db140
.dword 0xc0132e0af0d738b9
.dword 0x3feb870b1531acb9
.dword 0x3fc6f6b44c9db140
.dword 0xc0132e0af0d738b9
.dword 0x3feb870b1531acb9
.dword 0x3fc6f6b44c9db140
.dword 0xc0132e0af0d738b9
.dword 0x3feb870b1531acb9
.dword 0x3f9bf5320b56f9c0
.dword 0xc028890623de3f55
.dword 0x3fd56f9ca41184ea
.dword 0x3f9bf5320b56f9c0
.dword 0xc028890623de3f55
.dword 0x3fd56f9ca41184ea
.dword 0x3f9bf5320b56f9c0
.dword 0xc028890623de3f55
.dword 0x3fd56f9ca41184ea
.dword 0x3f9bf5320b56f9c0
.dword 0xc028890623de3f55
.dword 0x3fd56f9ca41184ea
.dword 0x3f9bf5320b56f9c0
.dword 0xc028890623de3f55
.dword 0x3fd56f9ca41184ea
.dword 0x3fe8dc76810066e2
.dword 0xbff2342cb110922a
.dword 0x3fec491743aa3655
.dword 0x3fe8dc76810066e2
.dword 0xbff2342cb110922a
.dword 0x3fec491743aa3655
.dword 0x3fe8dc76810066e2
.dword 0xbff2342cb110922a
.dword 0x3fec491743aa3655
.dword 0x3fe8dc76810066e2
.dword 0xbff2342cb110922a
.dword 0x3fec491743aa3655
.dword 0x3fe8dc76810066e2
.dword 0xbff2342cb110922a
.dword 0x3fec491743aa3655
.dword 0x3fa88e056485c780
.dword 0xc01a98d062065da6
.dword 0x3fd468a6e1a50df2
.dword 0x3fa88e056485c780
.dword 0xc01a98d062065da6
.dword 0x3fd468a6e1a50df2
.dword 0x3fa88e056485c780
.dword 0xc01a98d062065da6
.dword 0x3fd468a6e1a50df2
.dword 0x3fa88e056485c780
.dword 0xc01a98d062065da6
.dword 0x3fd468a6e1a50df2
.dword 0x3fa88e056485c780
.dword 0xc01a98d062065da6
.dword 0x3fd468a6e1a50df2
.dword 0x3fee486c849b6622
.dword 0xbfecb71760bd46cb
.dword 0x3feb2ca34038b5ab
.dword 0x3fee486c849b6622
.dword 0xbfecb71760bd46cb
.dword 0x3feb2ca34038b5ab
.dword 0x3fee486c849b6622
.dword 0xbfecb71760bd46cb
.dword 0x3feb2ca34038b5ab
.dword 0x3fee486c849b6622
.dword 0xbfecb71760bd46cb
.dword 0x3feb2ca34038b5ab
.dword 0x3fee486c849b6622
.dword 0xbfecb71760bd46cb
.dword 0x3feb2ca34038b5ab
.dword 0x3fef0ea7d9d4e385
.dword 0xbfd222419ef712a9
.dword 0x3fd1997dacec4ca4
.dword 0x3fef0ea7d9d4e385
.dword 0xbfd222419ef712a9
.dword 0x3fd1997dacec4ca4
.dword 0x3fef0ea7d9d4e385
.dword 0xbfd222419ef712a9
.dword 0x3fd1997dacec4ca4
.dword 0x3fef0ea7d9d4e385
.dword 0xbfd222419ef712a9
.dword 0x3fd1997dacec4ca4
.dword 0x3fef0ea7d9d4e385
.dword 0xbfd222419ef712a9
.dword 0x3fd1997dacec4ca4
.dword 0x3fe5a7a39f91d82a
.dword 0xbfd33fd85d8eeafd
.dword 0x3fca0d7b37823e0c
.dword 0x3fe5a7a39f91d82a
.dword 0xbfd33fd85d8eeafd
.dword 0x3fca0d7b37823e0c
.dword 0x3fe5a7a39f91d82a
.dword 0xbfd33fd85d8eeafd
.dword 0x3fca0d7b37823e0c
.dword 0x3fe5a7a39f91d82a
.dword 0xbfd33fd85d8eeafd
.dword 0x3fca0d7b37823e0c
.dword 0x3fe5a7a39f91d82a
.dword 0xbfd33fd85d8eeafd
.dword 0x3fca0d7b37823e0c
.dword 0x3fbf81bc313216f8
.dword 0xc010e2a1dd1ebd60
.dword 0x3fe0a001b825948b
.dword 0x3fbf81bc313216f8
.dword 0xc010e2a1dd1ebd60
.dword 0x3fe0a001b825948b
.dword 0x3fbf81bc313216f8
.dword 0xc010e2a1dd1ebd60
.dword 0x3fe0a001b825948b
.dword 0x3fbf81bc313216f8
.dword 0xc010e2a1dd1ebd60
.dword 0x3fe0a001b825948b
.dword 0x3fbf81bc313216f8
.dword 0xc010e2a1dd1ebd60
.dword 0x3fe0a001b825948b
.dword 0x3fd9fc53645f3ab6
.dword 0xbffe012d39c223ee
.dword 0x3fe85d82ca70ca9c
.dword 0x3fd9fc53645f3ab6
.dword 0xbffe012d39c223ee
.dword 0x3fe85d82ca70ca9c
.dword 0x3fd9fc53645f3ab6
.dword 0xbffe012d39c223ee
.dword 0x3fe85d82ca70ca9c
.dword 0x3fd9fc53645f3ab6
.dword 0xbffe012d39c223ee
.dword 0x3fe85d82ca70ca9c
.dword 0x3fd9fc53645f3ab6
.dword 0xbffe012d39c223ee
.dword 0x3fe85d82ca70ca9c
.dword 0x3fed15114c8be4d5
.dword 0xbfeed1037ed0bd8c
.dword 0x3fec01b4fdf960b5
.dword 0x3fed15114c8be4d5
.dword 0xbfeed1037ed0bd8c
.dword 0x3fec01b4fdf960b5
.dword 0x3fed15114c8be4d5
.dword 0xbfeed1037ed0bd8c
.dword 0x3fec01b4fdf960b5
.dword 0x3fed15114c8be4d5
.dword 0xbfeed1037ed0bd8c
.dword 0x3fec01b4fdf960b5
.dword 0x3fed15114c8be4d5
.dword 0xbfeed1037ed0bd8c
.dword 0x3fec01b4fdf960b5
.dword 0x3fed45afb9b5045e
.dword 0xbfd73b370fd10047
.dword 0x3fd5404127b661d6
.dword 0x3fed45afb9b5045e
.dword 0xbfd73b370fd10047
.dword 0x3fd5404127b661d6
.dword 0x3fed45afb9b5045e
.dword 0xbfd73b370fd10047
.dword 0x3fd5404127b661d6
.dword 0x3fed45afb9b5045e
.dword 0xbfd73b370fd10047
.dword 0x3fd5404127b661d6
.dword 0x3fed45afb9b5045e
.dword 0xbfd73b370fd10047
.dword 0x3fd5404127b661d6
.dword 0x3fd2595a6fd9b864
.dword 0xbff340a7cc1b4225
.dword 0x3fd614413d4464fe
.dword 0x3fd2595a6fd9b864
.dword 0xbff340a7cc1b4225
.dword 0x3fd614413d4464fe
.dword 0x3fd2595a6fd9b864
.dword 0xbff340a7cc1b4225
.dword 0x3fd614413d4464fe
.dword 0x3fd2595a6fd9b864
.dword 0xbff340a7cc1b4225
.dword 0x3fd614413d4464fe
.dword 0x3fd2595a6fd9b864
.dword 0xbff340a7cc1b4225
.dword 0x3fd614413d4464fe
.dword 0x3fd0d90a64e38680
.dword 0xc008f0b14b3b8839
.dword 0x3fea4301e379ab37
.dword 0x3fd0d90a64e38680
.dword 0xc008f0b14b3b8839
.dword 0x3fea4301e379ab37
.dword 0x3fd0d90a64e38680
.dword 0xc008f0b14b3b8839
.dword 0x3fea4301e379ab37
.dword 0x3fd0d90a64e38680
.dword 0xc008f0b14b3b8839
.dword 0x3fea4301e379ab37
.dword 0x3fd0d90a64e38680
.dword 0xc008f0b14b3b8839
.dword 0x3fea4301e379ab37
.dword 0x3fe87fa0f88bc5f8
.dword 0xbfea4840ca337320
.dword 0x3fe41f038e2fc81b
.dword 0x3fe87fa0f88bc5f8
.dword 0xbfea4840ca337320
.dword 0x3fe41f038e2fc81b
.dword 0x3fe87fa0f88bc5f8
.dword 0xbfea4840ca337320
.dword 0x3fe41f038e2fc81b
.dword 0x3fe87fa0f88bc5f8
.dword 0xbfea4840ca337320
.dword 0x3fe41f038e2fc81b
.dword 0x3fe87fa0f88bc5f8
.dword 0xbfea4840ca337320
.dword 0x3fe41f038e2fc81b
.dword 0x3fdee98ad832fd36
.dword 0xbffcb1c290ad512a
.dword 0x3febb81138c49418
.dword 0x3fdee98ad832fd36
.dword 0xbffcb1c290ad512a
.dword 0x3febb81138c49418
.dword 0x3fdee98ad832fd36
.dword 0xbffcb1c290ad512a
.dword 0x3febb81138c49418
.dword 0x3fdee98ad832fd36
.dword 0xbffcb1c290ad512a
.dword 0x3febb81138c49418
.dword 0x3fdee98ad832fd36
.dword 0xbffcb1c290ad512a
.dword 0x3febb81138c49418
.dword 0x3fe7ddac64ab68d4
.dword 0xbfd5674e6680fcd1
.dword 0x3fcfed0a3b77054c
.dword 0x3fe7ddac64ab68d4
.dword 0xbfd5674e6680fcd1
.dword 0x3fcfed0a3b77054c
.dword 0x3fe7ddac64ab68d4
.dword 0xbfd5674e6680fcd1
.dword 0x3fcfed0a3b77054c
.dword 0x3fe7ddac64ab68d4
.dword 0xbfd5674e6680fcd1
.dword 0x3fcfed0a3b77054c
.dword 0x3fe7ddac64ab68d4
.dword 0xbfd5674e6680fcd1
.dword 0x3fcfed0a3b77054c
.dword 0x3fe7937b9bbf4c23
.dword 0xbfe378f266c3b4e5
.dword 0x3fdcb15a161d6cd2
.dword 0x3fe7937b9bbf4c23
.dword 0xbfe378f266c3b4e5
.dword 0x3fdcb15a161d6cd2
.dword 0x3fe7937b9bbf4c23
.dword 0xbfe378f266c3b4e5
.dword 0x3fdcb15a161d6cd2
.dword 0x3fe7937b9bbf4c23
.dword 0xbfe378f266c3b4e5
.dword 0x3fdcb15a161d6cd2
.dword 0x3fe7937b9bbf4c23
.dword 0xbfe378f266c3b4e5
.dword 0x3fdcb15a161d6cd2
.dword 0x3fdc7cab0399d69c
.dword 0xbfeb418b6e6b87fe
.dword 0x3fd84389a63c3afc
.dword 0x3fdc7cab0399d69c
.dword 0xbfeb418b6e6b87fe
.dword 0x3fd84389a63c3afc
.dword 0x3fdc7cab0399d69c
.dword 0xbfeb418b6e6b87fe
.dword 0x3fd84389a63c3afc
.dword 0x3fdc7cab0399d69c
.dword 0xbfeb418b6e6b87fe
.dword 0x3fd84389a63c3afc
.dword 0x3fdc7cab0399d69c
.dword 0xbfeb418b6e6b87fe
.dword 0x3fd84389a63c3afc
.dword 0x3fdfa0400dad9876
.dword 0xbfc733f9dd9567c7
.dword 0x3fb6ee8c61db5fc8
.dword 0x3fdfa0400dad9876
.dword 0xbfc733f9dd9567c7
.dword 0x3fb6ee8c61db5fc8
.dword 0x3fdfa0400dad9876
.dword 0xbfc733f9dd9567c7
.dword 0x3fb6ee8c61db5fc8
.dword 0x3fdfa0400dad9876
.dword 0xbfc733f9dd9567c7
.dword 0x3fb6ee8c61db5fc8
.dword 0x3fdfa0400dad9876
.dword 0xbfc733f9dd9567c7
.dword 0x3fb6ee8c61db5fc8
.dword 0x3feb2a1d05b9b44a
.dword 0xbfdbcb3357c80847
.dword 0x3fd798073a939072
.dword 0x3feb2a1d05b9b44a
.dword 0xbfdbcb3357c80847
.dword 0x3fd798073a939072
.dword 0x3feb2a1d05b9b44a
.dword 0xbfdbcb3357c80847
.dword 0x3fd798073a939072
.dword 0x3feb2a1d05b9b44a
.dword 0xbfdbcb3357c80847
.dword 0x3fd798073a939072
.dword 0x3feb2a1d05b9b44a
.dword 0xbfdbcb3357c80847
.dword 0x3fd798073a939072
.dword 0x3fee374937727337
.dword 0xbfd48452321775da
.dword 0x3fd35f7f6da4679e
.dword 0x3fee374937727337
.dword 0xbfd48452321775da
.dword 0x3fd35f7f6da4679e
.dword 0x3fee374937727337
.dword 0xbfd48452321775da
.dword 0x3fd35f7f6da4679e
.dword 0x3fee374937727337
.dword 0xbfd48452321775da
.dword 0x3fd35f7f6da4679e
.dword 0x3fee374937727337
.dword 0xbfd48452321775da
.dword 0x3fd35f7f6da4679e
.dword 0x3faf77f216018fa0
.dword 0xc0245d26398b8183
.dword 0x3fe406917c574006
.dword 0x3faf77f216018fa0
.dword 0xc0245d26398b8183
.dword 0x3fe406917c574006
.dword 0x3faf77f216018fa0
.dword 0xc0245d26398b8183
.dword 0x3fe406917c574006
.dword 0x3faf77f216018fa0
.dword 0xc0245d26398b8183
.dword 0x3fe406917c574006
.dword 0x3faf77f216018fa0
.dword 0xc0245d26398b8183
.dword 0x3fe406917c574006
.dword 0x3fd99608cc159e82
.dword 0xbff46d8c69e470b5
.dword 0x3fe0555cd2961d8e
.dword 0x3fd99608cc159e82
.dword 0xbff46d8c69e470b5
.dword 0x3fe0555cd2961d8e
.dword 0x3fd99608cc159e82
.dword 0xbff46d8c69e470b5
.dword 0x3fe0555cd2961d8e
.dword 0x3fd99608cc159e82
.dword 0xbff46d8c69e470b5
.dword 0x3fe0555cd2961d8e
.dword 0x3fd99608cc159e82
.dword 0xbff46d8c69e470b5
.dword 0x3fe0555cd2961d8e
.dword 0x3fe22fc157a25e23
.dword 0xbff34bf4cae7768b
.dword 0x3fe5ef0bb1421277
.dword 0x3fe22fc157a25e23
.dword 0xbff34bf4cae7768b
.dword 0x3fe5ef0bb1421277
.dword 0x3fe22fc157a25e23
.dword 0xbff34bf4cae7768b
.dword 0x3fe5ef0bb1421277
.dword 0x3fe22fc157a25e23
.dword 0xbff34bf4cae7768b
.dword 0x3fe5ef0bb1421277
.dword 0x3fe22fc157a25e23
.dword 0xbff34bf4cae7768b
.dword 0x3fe5ef0bb1421277
.dword 0x3fbf1d6f2c0a7cd0
.dword 0xc01c7d411808eef3
.dword 0x3febb38b8bf5cab7
.dword 0x3fbf1d6f2c0a7cd0
.dword 0xc01c7d411808eef3
.dword 0x3febb38b8bf5cab7
.dword 0x3fbf1d6f2c0a7cd0
.dword 0xc01c7d411808eef3
.dword 0x3febb38b8bf5cab7
.dword 0x3fbf1d6f2c0a7cd0
.dword 0xc01c7d411808eef3
.dword 0x3febb38b8bf5cab7
.dword 0x3fbf1d6f2c0a7cd0
.dword 0xc01c7d411808eef3
.dword 0x3febb38b8bf5cab7
.dword 0x3fdb2f02af0d9c62
.dword 0xbfe369820f680ec1
.dword 0x3fd07d8a54cfcf3e
.dword 0x3fdb2f02af0d9c62
.dword 0xbfe369820f680ec1
.dword 0x3fd07d8a54cfcf3e
.dword 0x3fdb2f02af0d9c62
.dword 0xbfe369820f680ec1
.dword 0x3fd07d8a54cfcf3e
.dword 0x3fdb2f02af0d9c62
.dword 0xbfe369820f680ec1
.dword 0x3fd07d8a54cfcf3e
.dword 0x3fdb2f02af0d9c62
.dword 0xbfe369820f680ec1
.dword 0x3fd07d8a54cfcf3e
.dword 0x3fedb224cae169a6
.dword 0xbff03fbf518f4036
.dword 0x3fee287551b730b1
.dword 0x3fedb224cae169a6
.dword 0xbff03fbf518f4036
.dword 0x3fee287551b730b1
.dword 0x3fedb224cae169a6
.dword 0xbff03fbf518f4036
.dword 0x3fee287551b730b1
.dword 0x3fedb224cae169a6
.dword 0xbff03fbf518f4036
.dword 0x3fee287551b730b1
.dword 0x3fedb224cae169a6
.dword 0xbff03fbf518f4036
.dword 0x3fee287551b730b1
.dword 0x3fec8981495bf177
.dword 0xbfe646b83296fca5
.dword 0x3fe3dd99f10494d1
.dword 0x3fec8981495bf177
.dword 0xbfe646b83296fca5
.dword 0x3fe3dd99f10494d1
.dword 0x3fec8981495bf177
.dword 0xbfe646b83296fca5
.dword 0x3fe3dd99f10494d1
.dword 0x3fec8981495bf177
.dword 0xbfe646b83296fca5
.dword 0x3fe3dd99f10494d1
.dword 0x3fec8981495bf177
.dword 0xbfe646b83296fca5
.dword 0x3fe3dd99f10494d1
.dword 0x3fd82a84064b7de2
.dword 0xc00443865d5874fb
.dword 0x3fee9b2201c7281c
.dword 0x3fd82a84064b7de2
.dword 0xc00443865d5874fb
.dword 0x3fee9b2201c7281c
.dword 0x3fd82a84064b7de2
.dword 0xc00443865d5874fb
.dword 0x3fee9b2201c7281c
.dword 0x3fd82a84064b7de2
.dword 0xc00443865d5874fb
.dword 0x3fee9b2201c7281c
.dword 0x3fd82a84064b7de2
.dword 0xc00443865d5874fb
.dword 0x3fee9b2201c7281c
.dword 0x3fe2c108c4cab1fd
.dword 0xbff6e683acde617f
.dword 0x3fead79d43bb289a
.dword 0x3fe2c108c4cab1fd
.dword 0xbff6e683acde617f
.dword 0x3fead79d43bb289a
.dword 0x3fe2c108c4cab1fd
.dword 0xbff6e683acde617f
.dword 0x3fead79d43bb289a
.dword 0x3fe2c108c4cab1fd
.dword 0xbff6e683acde617f
.dword 0x3fead79d43bb289a
.dword 0x3fe2c108c4cab1fd
.dword 0xbff6e683acde617f
.dword 0x3fead79d43bb289a
.dword 0x3feb35696b448525
.dword 0xbfdd4f2fa3033307
.dword 0x3fd8ebbbe68488be
.dword 0x3feb35696b448525
.dword 0xbfdd4f2fa3033307
.dword 0x3fd8ebbbe68488be
.dword 0x3feb35696b448525
.dword 0xbfdd4f2fa3033307
.dword 0x3fd8ebbbe68488be
.dword 0x3feb35696b448525
.dword 0xbfdd4f2fa3033307
.dword 0x3fd8ebbbe68488be
.dword 0x3feb35696b448525
.dword 0xbfdd4f2fa3033307
.dword 0x3fd8ebbbe68488be
.dword 0x3fe6a3e5e92d499b
.dword 0xbfbdabd132599144
.dword 0x3fb4fe1831fc2580
.dword 0x3fe6a3e5e92d499b
.dword 0xbfbdabd132599144
.dword 0x3fb4fe1831fc2580
.dword 0x3fe6a3e5e92d499b
.dword 0xbfbdabd132599144
.dword 0x3fb4fe1831fc2580
.dword 0x3fe6a3e5e92d499b
.dword 0xbfbdabd132599144
.dword 0x3fb4fe1831fc2580
.dword 0x3fe6a3e5e92d499b
.dword 0xbfbdabd132599144
.dword 0x3fb4fe1831fc2580
.dword 0x3fd26753f0d75ab6
.dword 0xc00813427380c977
.dword 0x3febb1250c0616f3
.dword 0x3fd26753f0d75ab6
.dword 0xc00813427380c977
.dword 0x3febb1250c0616f3
.dword 0x3fd26753f0d75ab6
.dword 0xc00813427380c977
.dword 0x3febb1250c0616f3
.dword 0x3fd26753f0d75ab6
.dword 0xc00813427380c977
.dword 0x3febb1250c0616f3
.dword 0x3fd26753f0d75ab6
.dword 0xc00813427380c977
.dword 0x3febb1250c0616f3
.dword 0x3fd6ac3cf167bb80
.dword 0xbfc14129a3556d93
.dword 0x3fa8735778e2d260
.dword 0x3fd6ac3cf167bb80
.dword 0xbfc14129a3556d93
.dword 0x3fa8735778e2d260
.dword 0x3fd6ac3cf167bb80
.dword 0xbfc14129a3556d93
.dword 0x3fa8735778e2d260
.dword 0x3fd6ac3cf167bb80
.dword 0xbfc14129a3556d93
.dword 0x3fa8735778e2d260
.dword 0x3fd6ac3cf167bb80
.dword 0xbfc14129a3556d93
.dword 0x3fa8735778e2d260
.dword 0x3fc4374a9e0ad3ec
.dword 0xc013c62c6739b7e9
.dword 0x3fe8fc0cf18ab1f7
.dword 0x3fc4374a9e0ad3ec
.dword 0xc013c62c6739b7e9
.dword 0x3fe8fc0cf18ab1f7
.dword 0x3fc4374a9e0ad3ec
.dword 0xc013c62c6739b7e9
.dword 0x3fe8fc0cf18ab1f7
.dword 0x3fc4374a9e0ad3ec
.dword 0xc013c62c6739b7e9
.dword 0x3fe8fc0cf18ab1f7
.dword 0x3fc4374a9e0ad3ec
.dword 0xc013c62c6739b7e9
.dword 0x3fe8fc0cf18ab1f7
.dword 0x3fd31ec0141b41b2
.dword 0xc00978047bb14a90
.dword 0x3fee6f781b81a9fb
.dword 0x3fd31ec0141b41b2
.dword 0xc00978047bb14a90
.dword 0x3fee6f781b81a9fb
.dword 0x3fd31ec0141b41b2
.dword 0xc00978047bb14a90
.dword 0x3fee6f781b81a9fb
.dword 0x3fd31ec0141b41b2
.dword 0xc00978047bb14a90
.dword 0x3fee6f781b81a9fb
.dword 0x3fd31ec0141b41b2
.dword 0xc00978047bb14a90
.dword 0x3fee6f781b81a9fb
.dword 0x3f95d356f734b000
.dword 0xbfb4011f682f3777
.dword 0x3f5b49b4c207ec00
.dword 0x3f95d356f734b000
.dword 0xbfb4011f682f3777
.dword 0x3f5b49b4c207ec00
.dword 0x3f95d356f734b000
.dword 0xbfb4011f682f3777
.dword 0x3f5b49b4c207ec00
.dword 0x3f95d356f734b000
.dword 0xbfb4011f682f3777
.dword 0x3f5b49b4c207ec00
.dword 0x3f95d356f734b000
.dword 0xbfb4011f682f3777
.dword 0x3f5b49b4c207ec00
.dword 0x3fef2eaac2aaf486
.dword 0xbfd23820fc01aafc
.dword 0x3fd1c0f1dc90b832
.dword 0x3fef2eaac2aaf486
.dword 0xbfd23820fc01aafc
.dword 0x3fd1c0f1dc90b832
.dword 0x3fef2eaac2aaf486
.dword 0xbfd23820fc01aafc
.dword 0x3fd1c0f1dc90b832
.dword 0x3fef2eaac2aaf486
.dword 0xbfd23820fc01aafc
.dword 0x3fd1c0f1dc90b832
.dword 0x3fef2eaac2aaf486
.dword 0xbfd23820fc01aafc
.dword 0x3fd1c0f1dc90b832
.dword 0x3fcaa7eb5efe4a24
.dword 0xbff9d887361f7ffa
.dword 0x3fd5878df8767198
.dword 0x3fcaa7eb5efe4a24
.dword 0xbff9d887361f7ffa
.dword 0x3fd5878df8767198
.dword 0x3fcaa7eb5efe4a24
.dword 0xbff9d887361f7ffa
.dword 0x3fd5878df8767198
.dword 0x3fcaa7eb5efe4a24
.dword 0xbff9d887361f7ffa
.dword 0x3fd5878df8767198
.dword 0x3fcaa7eb5efe4a24
.dword 0xbff9d887361f7ffa
.dword 0x3fd5878df8767198
.dword 0x3fe8a3aea6ee61dc
.dword 0xbfcdfd886b9df368
.dword 0x3fc7178d6ea30954
.dword 0x3fe8a3aea6ee61dc
.dword 0xbfcdfd886b9df368
.dword 0x3fc7178d6ea30954
.dword 0x3fe8a3aea6ee61dc
.dword 0xbfcdfd886b9df368
.dword 0x3fc7178d6ea30954
.dword 0x3fe8a3aea6ee61dc
.dword 0xbfcdfd886b9df368
.dword 0x3fc7178d6ea30954
.dword 0x3fe8a3aea6ee61dc
.dword 0xbfcdfd886b9df368
.dword 0x3fc7178d6ea30954
.dword 0x3fc8162ebf391f5c
.dword 0xc013cd5eb529665d
.dword 0x3fedcf824d11c853
.dword 0x3fc8162ebf391f5c
.dword 0xc013cd5eb529665d
.dword 0x3fedcf824d11c853
.dword 0x3fc8162ebf391f5c
.dword 0xc013cd5eb529665d
.dword 0x3fedcf824d11c853
.dword 0x3fc8162ebf391f5c
.dword 0xc013cd5eb529665d
.dword 0x3fedcf824d11c853
.dword 0x3fc8162ebf391f5c
.dword 0xc013cd5eb529665d
.dword 0x3fedcf824d11c853
.dword 0x3feb164cfa4c39ce
.dword 0xbfdf5016c824fd42
.dword 0x3fda81659bab3338
.dword 0x3feb164cfa4c39ce
.dword 0xbfdf5016c824fd42
.dword 0x3fda81659bab3338
.dword 0x3feb164cfa4c39ce
.dword 0xbfdf5016c824fd42
.dword 0x3fda81659bab3338
.dword 0x3feb164cfa4c39ce
.dword 0xbfdf5016c824fd42
.dword 0x3fda81659bab3338
.dword 0x3feb164cfa4c39ce
.dword 0xbfdf5016c824fd42
.dword 0x3fda81659bab3338
.dword 0x3fe012fd5c1bba61
.dword 0xbff5514d32b2fc8f
.dword 0x3fe56a9a39d92502
.dword 0x3fe012fd5c1bba61
.dword 0xbff5514d32b2fc8f
.dword 0x3fe56a9a39d92502
.dword 0x3fe012fd5c1bba61
.dword 0xbff5514d32b2fc8f
.dword 0x3fe56a9a39d92502
.dword 0x3fe012fd5c1bba61
.dword 0xbff5514d32b2fc8f
.dword 0x3fe56a9a39d92502
.dword 0x3fe012fd5c1bba61
.dword 0xbff5514d32b2fc8f
.dword 0x3fe56a9a39d92502
.dword 0x3fe0b0d8093814e7
.dword 0xbfeba9dd329c8e0a
.dword 0x3fdcdb9f38e3f67c
.dword 0x3fe0b0d8093814e7
.dword 0xbfeba9dd329c8e0a
.dword 0x3fdcdb9f38e3f67c
.dword 0x3fe0b0d8093814e7
.dword 0xbfeba9dd329c8e0a
.dword 0x3fdcdb9f38e3f67c
.dword 0x3fe0b0d8093814e7
.dword 0xbfeba9dd329c8e0a
.dword 0x3fdcdb9f38e3f67c
.dword 0x3fe0b0d8093814e7
.dword 0xbfeba9dd329c8e0a
.dword 0x3fdcdb9f38e3f67c
.dword 0x3fb6ddf6760cb138
.dword 0xc02332104ade32d7
.dword 0x3feb6f219756946f
.dword 0x3fb6ddf6760cb138
.dword 0xc02332104ade32d7
.dword 0x3feb6f219756946f
.dword 0x3fb6ddf6760cb138
.dword 0xc02332104ade32d7
.dword 0x3feb6f219756946f
.dword 0x3fb6ddf6760cb138
.dword 0xc02332104ade32d7
.dword 0x3feb6f219756946f
.dword 0x3fb6ddf6760cb138
.dword 0xc02332104ade32d7
.dword 0x3feb6f219756946f
.dword 0x3fe6d62149680b41
.dword 0xbfd3aa1af92c0af3
.dword 0x3fcc11112870d8a0
.dword 0x3fe6d62149680b41
.dword 0xbfd3aa1af92c0af3
.dword 0x3fcc11112870d8a0
.dword 0x3fe6d62149680b41
.dword 0xbfd3aa1af92c0af3
.dword 0x3fcc11112870d8a0
.dword 0x3fe6d62149680b41
.dword 0xbfd3aa1af92c0af3
.dword 0x3fcc11112870d8a0
.dword 0x3fe6d62149680b41
.dword 0xbfd3aa1af92c0af3
.dword 0x3fcc11112870d8a0
.dword 0x3fd38b5251c49cd8
.dword 0xbffdb781882ad48b
.dword 0x3fe2265675abeaad
.dword 0x3fd38b5251c49cd8
.dword 0xbffdb781882ad48b
.dword 0x3fe2265675abeaad
.dword 0x3fd38b5251c49cd8
.dword 0xbffdb781882ad48b
.dword 0x3fe2265675abeaad
.dword 0x3fd38b5251c49cd8
.dword 0xbffdb781882ad48b
.dword 0x3fe2265675abeaad
.dword 0x3fd38b5251c49cd8
.dword 0xbffdb781882ad48b
.dword 0x3fe2265675abeaad
.dword 0x3fede2e222c90ff1
.dword 0xbfc670411da904a3
.dword 0x3fc4f4d25ff2c8d4
.dword 0x3fede2e222c90ff1
.dword 0xbfc670411da904a3
.dword 0x3fc4f4d25ff2c8d4
.dword 0x3fede2e222c90ff1
.dword 0xbfc670411da904a3
.dword 0x3fc4f4d25ff2c8d4
.dword 0x3fede2e222c90ff1
.dword 0xbfc670411da904a3
.dword 0x3fc4f4d25ff2c8d4
.dword 0x3fede2e222c90ff1
.dword 0xbfc670411da904a3
.dword 0x3fc4f4d25ff2c8d4
.dword 0x3fe6837e3a23c0d9
.dword 0xbfceecad1bcaeb9c
.dword 0x3fc5c1c9e3de6d1c
.dword 0x3fe6837e3a23c0d9
.dword 0xbfceecad1bcaeb9c
.dword 0x3fc5c1c9e3de6d1c
.dword 0x3fe6837e3a23c0d9
.dword 0xbfceecad1bcaeb9c
.dword 0x3fc5c1c9e3de6d1c
.dword 0x3fe6837e3a23c0d9
.dword 0xbfceecad1bcaeb9c
.dword 0x3fc5c1c9e3de6d1c
.dword 0x3fe6837e3a23c0d9
.dword 0xbfceecad1bcaeb9c
.dword 0x3fc5c1c9e3de6d1c
.dword 0x3fc2f4e5347c7ad0
.dword 0xc015b3dea9f4cc19
.dword 0x3fe9b68868678780
.dword 0x3fc2f4e5347c7ad0
.dword 0xc015b3dea9f4cc19
.dword 0x3fe9b68868678780
.dword 0x3fc2f4e5347c7ad0
.dword 0xc015b3dea9f4cc19
.dword 0x3fe9b68868678780
.dword 0x3fc2f4e5347c7ad0
.dword 0xc015b3dea9f4cc19
.dword 0x3fe9b68868678780
.dword 0x3fc2f4e5347c7ad0
.dword 0xc015b3dea9f4cc19
.dword 0x3fe9b68868678780
.dword 0x3fe3aa343618dcee
.dword 0xbfefaac8a2441607
.dword 0x3fe375d615454bc2
.dword 0x3fe3aa343618dcee
.dword 0xbfefaac8a2441607
.dword 0x3fe375d615454bc2
.dword 0x3fe3aa343618dcee
.dword 0xbfefaac8a2441607
.dword 0x3fe375d615454bc2
.dword 0x3fe3aa343618dcee
.dword 0xbfefaac8a2441607
.dword 0x3fe375d615454bc2
.dword 0x3fe3aa343618dcee
.dword 0xbfefaac8a2441607
.dword 0x3fe375d615454bc2
.dword 0x3fe094725c90b2d1
.dword 0xbfc5cf784812ff0f
.dword 0x3fb699d34514e2e8
.dword 0x3fe094725c90b2d1
.dword 0xbfc5cf784812ff0f
.dword 0x3fb699d34514e2e8
.dword 0x3fe094725c90b2d1
.dword 0xbfc5cf784812ff0f
.dword 0x3fb699d34514e2e8
.dword 0x3fe094725c90b2d1
.dword 0xbfc5cf784812ff0f
.dword 0x3fb699d34514e2e8
.dword 0x3fe094725c90b2d1
.dword 0xbfc5cf784812ff0f
.dword 0x3fb699d34514e2e8
.dword 0x3fd2ad28b05fb51e
.dword 0xbff429fc05d8602e
.dword 0x3fd78974c2cf202a
.dword 0x3fd2ad28b05fb51e
.dword 0xbff429fc05d8602e
.dword 0x3fd78974c2cf202a
.dword 0x3fd2ad28b05fb51e
.dword 0xbff429fc05d8602e
.dword 0x3fd78974c2cf202a
.dword 0x3fd2ad28b05fb51e
.dword 0xbff429fc05d8602e
.dword 0x3fd78974c2cf202a
.dword 0x3fd2ad28b05fb51e
.dword 0xbff429fc05d8602e
.dword 0x3fd78974c2cf202a
.dword 0x3fe25005f59ed49d
.dword 0xbfe7baabb301fede
.dword 0x3fdb28af5a7ce47c
.dword 0x3fe25005f59ed49d
.dword 0xbfe7baabb301fede
.dword 0x3fdb28af5a7ce47c
.dword 0x3fe25005f59ed49d
.dword 0xbfe7baabb301fede
.dword 0x3fdb28af5a7ce47c
.dword 0x3fe25005f59ed49d
.dword 0xbfe7baabb301fede
.dword 0x3fdb28af5a7ce47c
.dword 0x3fe25005f59ed49d
.dword 0xbfe7baabb301fede
.dword 0x3fdb28af5a7ce47c
.dword 0x3fef88b862480473
.dword 0xbfccc941cc2e908c
.dword 0x3fcc5df4f3145a50
.dword 0x3fef88b862480473
.dword 0xbfccc941cc2e908c
.dword 0x3fcc5df4f3145a50
.dword 0x3fef88b862480473
.dword 0xbfccc941cc2e908c
.dword 0x3fcc5df4f3145a50
.dword 0x3fef88b862480473
.dword 0xbfccc941cc2e908c
.dword 0x3fcc5df4f3145a50
.dword 0x3fef88b862480473
.dword 0xbfccc941cc2e908c
.dword 0x3fcc5df4f3145a50
.dword 0x3fbcafed2a00a670
.dword 0xc0103861b49e4d1d
.dword 0x3fdd1504167876fc
.dword 0x3fbcafed2a00a670
.dword 0xc0103861b49e4d1d
.dword 0x3fdd1504167876fc
.dword 0x3fbcafed2a00a670
.dword 0xc0103861b49e4d1d
.dword 0x3fdd1504167876fc
.dword 0x3fbcafed2a00a670
.dword 0xc0103861b49e4d1d
.dword 0x3fdd1504167876fc
.dword 0x3fbcafed2a00a670
.dword 0xc0103861b49e4d1d
.dword 0x3fdd1504167876fc
.dword 0x3fe16b9cc541cf3e
.dword 0xbfc39dabc0c83239
.dword 0x3fb55b751c8e8920
.dword 0x3fe16b9cc541cf3e
.dword 0xbfc39dabc0c83239
.dword 0x3fb55b751c8e8920
.dword 0x3fe16b9cc541cf3e
.dword 0xbfc39dabc0c83239
.dword 0x3fb55b751c8e8920
.dword 0x3fe16b9cc541cf3e
.dword 0xbfc39dabc0c83239
.dword 0x3fb55b751c8e8920
.dword 0x3fe16b9cc541cf3e
.dword 0xbfc39dabc0c83239
.dword 0x3fb55b751c8e8920
.dword 0x3feed59307fd1886
.dword 0xbfe8d3ae8a06b877
.dword 0x3fe7ec26b5c97e8b
.dword 0x3feed59307fd1886
.dword 0xbfe8d3ae8a06b877
.dword 0x3fe7ec26b5c97e8b
.dword 0x3feed59307fd1886
.dword 0xbfe8d3ae8a06b877
.dword 0x3fe7ec26b5c97e8b
.dword 0x3feed59307fd1886
.dword 0xbfe8d3ae8a06b877
.dword 0x3fe7ec26b5c97e8b
.dword 0x3feed59307fd1886
.dword 0xbfe8d3ae8a06b877
.dword 0x3fe7ec26b5c97e8b
.dword 0x3fd051a3717fb7ac
.dword 0xbff9ad3e29325ef4
.dword 0x3fda30417ef0ae88
.dword 0x3fd051a3717fb7ac
.dword 0xbff9ad3e29325ef4
.dword 0x3fda30417ef0ae88
.dword 0x3fd051a3717fb7ac
.dword 0xbff9ad3e29325ef4
.dword 0x3fda30417ef0ae88
.dword 0x3fd051a3717fb7ac
.dword 0xbff9ad3e29325ef4
.dword 0x3fda30417ef0ae88
.dword 0x3fd051a3717fb7ac
.dword 0xbff9ad3e29325ef4
.dword 0x3fda30417ef0ae88
.dword 0x3fe124274699d746
.dword 0xbff315df80cf1ea5
.dword 0x3fe4725d8945e053
.dword 0x3fe124274699d746
.dword 0xbff315df80cf1ea5
.dword 0x3fe4725d8945e053
.dword 0x3fe124274699d746
.dword 0xbff315df80cf1ea5
.dword 0x3fe4725d8945e053
.dword 0x3fe124274699d746
.dword 0xbff315df80cf1ea5
.dword 0x3fe4725d8945e053
.dword 0x3fe124274699d746
.dword 0xbff315df80cf1ea5
.dword 0x3fe4725d8945e053
.dword 0x3fe6806ecd132c64
.dword 0xbfe565076b5f94aa
.dword 0x3fde16a697c97da4
.dword 0x3fe6806ecd132c64
.dword 0xbfe565076b5f94aa
.dword 0x3fde16a697c97da4
.dword 0x3fe6806ecd132c64
.dword 0xbfe565076b5f94aa
.dword 0x3fde16a697c97da4
.dword 0x3fe6806ecd132c64
.dword 0xbfe565076b5f94aa
.dword 0x3fde16a697c97da4
.dword 0x3fe6806ecd132c64
.dword 0xbfe565076b5f94aa
.dword 0x3fde16a697c97da4
.dword 0x3fdddb2b8a55f5ca
.dword 0xbff6c502ce887dc1
.dword 0x3fe53e7dd18bb3e9
.dword 0x3fdddb2b8a55f5ca
.dword 0xbff6c502ce887dc1
.dword 0x3fe53e7dd18bb3e9
.dword 0x3fdddb2b8a55f5ca
.dword 0xbff6c502ce887dc1
.dword 0x3fe53e7dd18bb3e9
.dword 0x3fdddb2b8a55f5ca
.dword 0xbff6c502ce887dc1
.dword 0x3fe53e7dd18bb3e9
.dword 0x3fdddb2b8a55f5ca
.dword 0xbff6c502ce887dc1
.dword 0x3fe53e7dd18bb3e9
.dword 0x3fceab418dfbc584
.dword 0xc0075960759ecf87
.dword 0x3fe660bfdedee050
.dword 0x3fceab418dfbc584
.dword 0xc0075960759ecf87
.dword 0x3fe660bfdedee050
.dword 0x3fceab418dfbc584
.dword 0xc0075960759ecf87
.dword 0x3fe660bfdedee050
.dword 0x3fceab418dfbc584
.dword 0xc0075960759ecf87
.dword 0x3fe660bfdedee050
.dword 0x3fceab418dfbc584
.dword 0xc0075960759ecf87
.dword 0x3fe660bfdedee050
.dword 0x3fd06aef38d708ca
.dword 0xc00b8014fa0baa71
.dword 0x3fec37e0afef7069
.dword 0x3fd06aef38d708ca
.dword 0xc00b8014fa0baa71
.dword 0x3fec37e0afef7069
.dword 0x3fd06aef38d708ca
.dword 0xc00b8014fa0baa71
.dword 0x3fec37e0afef7069
.dword 0x3fd06aef38d708ca
.dword 0xc00b8014fa0baa71
.dword 0x3fec37e0afef7069
.dword 0x3fd06aef38d708ca
.dword 0xc00b8014fa0baa71
.dword 0x3fec37e0afef7069
.dword 0x3fd6ba57611796f6
.dword 0xbff1d928b36a937e
.dword 0x3fd95a75e8f468a4
.dword 0x3fd6ba57611796f6
.dword 0xbff1d928b36a937e
.dword 0x3fd95a75e8f468a4
.dword 0x3fd6ba57611796f6
.dword 0xbff1d928b36a937e
.dword 0x3fd95a75e8f468a4
.dword 0x3fd6ba57611796f6
.dword 0xbff1d928b36a937e
.dword 0x3fd95a75e8f468a4
.dword 0x3fd6ba57611796f6
.dword 0xbff1d928b36a937e
.dword 0x3fd95a75e8f468a4
.dword 0x3fd915e9800f64ec
.dword 0xbff572178cb1bced
.dword 0x3fe0cfd1c1ed57fc
.dword 0x3fd915e9800f64ec
.dword 0xbff572178cb1bced
.dword 0x3fe0cfd1c1ed57fc
.dword 0x3fd915e9800f64ec
.dword 0xbff572178cb1bced
.dword 0x3fe0cfd1c1ed57fc
.dword 0x3fd915e9800f64ec
.dword 0xbff572178cb1bced
.dword 0x3fe0cfd1c1ed57fc
.dword 0x3fd915e9800f64ec
.dword 0xbff572178cb1bced
.dword 0x3fe0cfd1c1ed57fc
.dword 0x3f86e2cfb6da7d40
.dword 0xc04fa01150dafc84
.dword 0x3fe69e33aa07ebf5
.dword 0x3f86e2cfb6da7d40
.dword 0xc04fa01150dafc84
.dword 0x3fe69e33aa07ebf5
.dword 0x3f86e2cfb6da7d40
.dword 0xc04fa01150dafc84
.dword 0x3fe69e33aa07ebf5
.dword 0x3f86e2cfb6da7d40
.dword 0xc04fa01150dafc84
.dword 0x3fe69e33aa07ebf5
.dword 0x3f86e2cfb6da7d40
.dword 0xc04fa01150dafc84
.dword 0x3fe69e33aa07ebf5
.dword 0x3fe76f18809fd504
.dword 0xbff2779b06c88f8c
.dword 0x3feb0c28e51d3a91
.dword 0x3fe76f18809fd504
.dword 0xbff2779b06c88f8c
.dword 0x3feb0c28e51d3a91
.dword 0x3fe76f18809fd504
.dword 0xbff2779b06c88f8c
.dword 0x3feb0c28e51d3a91
.dword 0x3fe76f18809fd504
.dword 0xbff2779b06c88f8c
.dword 0x3feb0c28e51d3a91
.dword 0x3fe76f18809fd504
.dword 0xbff2779b06c88f8c
.dword 0x3feb0c28e51d3a91
.dword 0x3fcbea76af696b44
.dword 0xc00baba0b6d3ec94
.dword 0x3fe8238d420a1e4c
.dword 0x3fcbea76af696b44
.dword 0xc00baba0b6d3ec94
.dword 0x3fe8238d420a1e4c
.dword 0x3fcbea76af696b44
.dword 0xc00baba0b6d3ec94
.dword 0x3fe8238d420a1e4c
.dword 0x3fcbea76af696b44
.dword 0xc00baba0b6d3ec94
.dword 0x3fe8238d420a1e4c
.dword 0x3fcbea76af696b44
.dword 0xc00baba0b6d3ec94
.dword 0x3fe8238d420a1e4c
.dword 0x3fe73d21bf06af59
.dword 0xbfb6d2fd1c847ca5
.dword 0x3fb0934030d2b6f0
.dword 0x3fe73d21bf06af59
.dword 0xbfb6d2fd1c847ca5
.dword 0x3fb0934030d2b6f0
.dword 0x3fe73d21bf06af59
.dword 0xbfb6d2fd1c847ca5
.dword 0x3fb0934030d2b6f0
.dword 0x3fe73d21bf06af59
.dword 0xbfb6d2fd1c847ca5
.dword 0x3fb0934030d2b6f0
.dword 0x3fe73d21bf06af59
.dword 0xbfb6d2fd1c847ca5
.dword 0x3fb0934030d2b6f0
.dword 0x3fef93d6ae142d22
.dword 0xbfde50ee3cdf6e97
.dword 0x3fddea75f384795e
.dword 0x3fef93d6ae142d22
.dword 0xbfde50ee3cdf6e97
.dword 0x3fddea75f384795e
.dword 0x3fef93d6ae142d22
.dword 0xbfde50ee3cdf6e97
.dword 0x3fddea75f384795e
.dword 0x3fef93d6ae142d22
.dword 0xbfde50ee3cdf6e97
.dword 0x3fddea75f384795e
.dword 0x3fef93d6ae142d22
.dword 0xbfde50ee3cdf6e97
.dword 0x3fddea75f384795e
.dword 0x3fcbf10c4dd12410
.dword 0xbfe9638cee872761
.dword 0x3fc62b3e69b8c678
.dword 0x3fcbf10c4dd12410
.dword 0xbfe9638cee872761
.dword 0x3fc62b3e69b8c678
.dword 0x3fcbf10c4dd12410
.dword 0xbfe9638cee872761
.dword 0x3fc62b3e69b8c678
.dword 0x3fcbf10c4dd12410
.dword 0xbfe9638cee872761
.dword 0x3fc62b3e69b8c678
.dword 0x3fcbf10c4dd12410
.dword 0xbfe9638cee872761
.dword 0x3fc62b3e69b8c678
.dword 0x3fe1cf1cf7049b92
.dword 0xbff452a96e7f1ea4
.dword 0x3fe69ee63fd71067
.dword 0x3fe1cf1cf7049b92
.dword 0xbff452a96e7f1ea4
.dword 0x3fe69ee63fd71067
.dword 0x3fe1cf1cf7049b92
.dword 0xbff452a96e7f1ea4
.dword 0x3fe69ee63fd71067
.dword 0x3fe1cf1cf7049b92
.dword 0xbff452a96e7f1ea4
.dword 0x3fe69ee63fd71067
.dword 0x3fe1cf1cf7049b92
.dword 0xbff452a96e7f1ea4
.dword 0x3fe69ee63fd71067
.dword 0x3fec1982815c1989
.dword 0xbfdb92a2a2627b7c
.dword 0x3fd83649505037e0
.dword 0x3fec1982815c1989
.dword 0xbfdb92a2a2627b7c
.dword 0x3fd83649505037e0
.dword 0x3fec1982815c1989
.dword 0xbfdb92a2a2627b7c
.dword 0x3fd83649505037e0
.dword 0x3fec1982815c1989
.dword 0xbfdb92a2a2627b7c
.dword 0x3fd83649505037e0
.dword 0x3fec1982815c1989
.dword 0xbfdb92a2a2627b7c
.dword 0x3fd83649505037e0
.dword 0x3fe6d5d31f6d4504
.dword 0xbfe774aba47a229a
.dword 0x3fe0bcf157e7a78c
.dword 0x3fe6d5d31f6d4504
.dword 0xbfe774aba47a229a
.dword 0x3fe0bcf157e7a78c
.dword 0x3fe6d5d31f6d4504
.dword 0xbfe774aba47a229a
.dword 0x3fe0bcf157e7a78c
.dword 0x3fe6d5d31f6d4504
.dword 0xbfe774aba47a229a
.dword 0x3fe0bcf157e7a78c
.dword 0x3fe6d5d31f6d4504
.dword 0xbfe774aba47a229a
.dword 0x3fe0bcf157e7a78c
.dword 0x3f9019d158a43820
.dword 0xc04029775a9993e2
.dword 0x3fe0438b9c48257a
.dword 0x3f9019d158a43820
.dword 0xc04029775a9993e2
.dword 0x3fe0438b9c48257a
.dword 0x3f9019d158a43820
.dword 0xc04029775a9993e2
.dword 0x3fe0438b9c48257a
.dword 0x3f9019d158a43820
.dword 0xc04029775a9993e2
.dword 0x3fe0438b9c48257a
.dword 0x3f9019d158a43820
.dword 0xc04029775a9993e2
.dword 0x3fe0438b9c48257a
.dword 0x3fe2b44ab7ebdb49
.dword 0xbff2a31b36a2fbbd
.dword 0x3fe5c980983823c5
.dword 0x3fe2b44ab7ebdb49
.dword 0xbff2a31b36a2fbbd
.dword 0x3fe5c980983823c5
.dword 0x3fe2b44ab7ebdb49
.dword 0xbff2a31b36a2fbbd
.dword 0x3fe5c980983823c5
.dword 0x3fe2b44ab7ebdb49
.dword 0xbff2a31b36a2fbbd
.dword 0x3fe5c980983823c5
.dword 0x3fe2b44ab7ebdb49
.dword 0xbff2a31b36a2fbbd
.dword 0x3fe5c980983823c5
.dword 0x3f9379d4d97f4c20
.dword 0xc03a7baf4b5f257c
.dword 0x3fe01e43eafee7f5
.dword 0x3f9379d4d97f4c20
.dword 0xc03a7baf4b5f257c
.dword 0x3fe01e43eafee7f5
.dword 0x3f9379d4d97f4c20
.dword 0xc03a7baf4b5f257c
.dword 0x3fe01e43eafee7f5
.dword 0x3f9379d4d97f4c20
.dword 0xc03a7baf4b5f257c
.dword 0x3fe01e43eafee7f5
.dword 0x3f9379d4d97f4c20
.dword 0xc03a7baf4b5f257c
.dword 0x3fe01e43eafee7f5
.dword 0x3fd9de3fd33f96e2
.dword 0xbffd4cd2f1d63a99
.dword 0x3fe7af843509306d
.dword 0x3fd9de3fd33f96e2
.dword 0xbffd4cd2f1d63a99
.dword 0x3fe7af843509306d
.dword 0x3fd9de3fd33f96e2
.dword 0xbffd4cd2f1d63a99
.dword 0x3fe7af843509306d
.dword 0x3fd9de3fd33f96e2
.dword 0xbffd4cd2f1d63a99
.dword 0x3fe7af843509306d
.dword 0x3fd9de3fd33f96e2
.dword 0xbffd4cd2f1d63a99
.dword 0x3fe7af843509306d
.dword 0x3fa3e593894842d0
.dword 0xc001c19624476968
.dword 0x3fb614a8bae93f70
.dword 0x3fa3e593894842d0
.dword 0xc001c19624476968
.dword 0x3fb614a8bae93f70
.dword 0x3fa3e593894842d0
.dword 0xc001c19624476968
.dword 0x3fb614a8bae93f70
.dword 0x3fa3e593894842d0
.dword 0xc001c19624476968
.dword 0x3fb614a8bae93f70
.dword 0x3fa3e593894842d0
.dword 0xc001c19624476968
.dword 0x3fb614a8bae93f70
.dword 0x3f9c34daa5567940
.dword 0xc036842b48723e01
.dword 0x3fe3d8d67e76e523
.dword 0x3f9c34daa5567940
.dword 0xc036842b48723e01
.dword 0x3fe3d8d67e76e523
.dword 0x3f9c34daa5567940
.dword 0xc036842b48723e01
.dword 0x3fe3d8d67e76e523
.dword 0x3f9c34daa5567940
.dword 0xc036842b48723e01
.dword 0x3fe3d8d67e76e523
.dword 0x3f9c34daa5567940
.dword 0xc036842b48723e01
.dword 0x3fe3d8d67e76e523
.dword 0x3fe8c1db4a06bf7a
.dword 0xbfed4e0fe5912194
.dword 0x3fe6ac138e14ea5a
.dword 0x3fe8c1db4a06bf7a
.dword 0xbfed4e0fe5912194
.dword 0x3fe6ac138e14ea5a
.dword 0x3fe8c1db4a06bf7a
.dword 0xbfed4e0fe5912194
.dword 0x3fe6ac138e14ea5a
.dword 0x3fe8c1db4a06bf7a
.dword 0xbfed4e0fe5912194
.dword 0x3fe6ac138e14ea5a
.dword 0x3fe8c1db4a06bf7a
.dword 0xbfed4e0fe5912194
.dword 0x3fe6ac138e14ea5a
.dword 0x3fe3f90cfa487f90
.dword 0xbfed23288c9dfe30
.dword 0x3fe22fa57817e116
.dword 0x3fe3f90cfa487f90
.dword 0xbfed23288c9dfe30
.dword 0x3fe22fa57817e116
.dword 0x3fe3f90cfa487f90
.dword 0xbfed23288c9dfe30
.dword 0x3fe22fa57817e116
.dword 0x3fe3f90cfa487f90
.dword 0xbfed23288c9dfe30
.dword 0x3fe22fa57817e116
.dword 0x3fe3f90cfa487f90
.dword 0xbfed23288c9dfe30
.dword 0x3fe22fa57817e116
.dword 0x3fd7b6fcf0fcedbc
.dword 0xbfd2c718ae550cf2
.dword 0x3fbbd4f50df14cc8
.dword 0x3fd7b6fcf0fcedbc
.dword 0xbfd2c718ae550cf2
.dword 0x3fbbd4f50df14cc8
.dword 0x3fd7b6fcf0fcedbc
.dword 0xbfd2c718ae550cf2
.dword 0x3fbbd4f50df14cc8
.dword 0x3fd7b6fcf0fcedbc
.dword 0xbfd2c718ae550cf2
.dword 0x3fbbd4f50df14cc8
.dword 0x3fd7b6fcf0fcedbc
.dword 0xbfd2c718ae550cf2
.dword 0x3fbbd4f50df14cc8
.dword 0x3fd8a1163baf42ae
.dword 0xc001dd05e3460388
.dword 0x3feb7f61b2b2bfe9
.dword 0x3fd8a1163baf42ae
.dword 0xc001dd05e3460388
.dword 0x3feb7f61b2b2bfe9
.dword 0x3fd8a1163baf42ae
.dword 0xc001dd05e3460388
.dword 0x3feb7f61b2b2bfe9
.dword 0x3fd8a1163baf42ae
.dword 0xc001dd05e3460388
.dword 0x3feb7f61b2b2bfe9
.dword 0x3fd8a1163baf42ae
.dword 0xc001dd05e3460388
.dword 0x3feb7f61b2b2bfe9
.dword 0x3fec8beed6b22201
.dword 0xbfdf264f6fa67af6
.dword 0x3fdbc9bc68ab0e92
.dword 0x3fec8beed6b22201
.dword 0xbfdf264f6fa67af6
.dword 0x3fdbc9bc68ab0e92
.dword 0x3fec8beed6b22201
.dword 0xbfdf264f6fa67af6
.dword 0x3fdbc9bc68ab0e92
.dword 0x3fec8beed6b22201
.dword 0xbfdf264f6fa67af6
.dword 0x3fdbc9bc68ab0e92
.dword 0x3fec8beed6b22201
.dword 0xbfdf264f6fa67af6
.dword 0x3fdbc9bc68ab0e92
.dword 0x3fbb45bf2ad3b180
.dword 0xc022c1780a1cad44
.dword 0x3feff83cfe78fb50
.dword 0x3fbb45bf2ad3b180
.dword 0xc022c1780a1cad44
.dword 0x3feff83cfe78fb50
.dword 0x3fbb45bf2ad3b180
.dword 0xc022c1780a1cad44
.dword 0x3feff83cfe78fb50
.dword 0x3fbb45bf2ad3b180
.dword 0xc022c1780a1cad44
.dword 0x3feff83cfe78fb50
.dword 0x3fbb45bf2ad3b180
.dword 0xc022c1780a1cad44
.dword 0x3feff83cfe78fb50
.dword 0x3fd90c891745fa4c
.dword 0xbffa86bd7ccf8f50
.dword 0x3fe4c3a834b70e5b
.dword 0x3fd90c891745fa4c
.dword 0xbffa86bd7ccf8f50
.dword 0x3fe4c3a834b70e5b
.dword 0x3fd90c891745fa4c
.dword 0xbffa86bd7ccf8f50
.dword 0x3fe4c3a834b70e5b
.dword 0x3fd90c891745fa4c
.dword 0xbffa86bd7ccf8f50
.dword 0x3fe4c3a834b70e5b
.dword 0x3fd90c891745fa4c
.dword 0xbffa86bd7ccf8f50
.dword 0x3fe4c3a834b70e5b
.dword 0x3fa5e83b33410170
.dword 0xbfe7ef408c47f77f
.dword 0x3fa062b5377d34c0
.dword 0x3fa5e83b33410170
.dword 0xbfe7ef408c47f77f
.dword 0x3fa062b5377d34c0
.dword 0x3fa5e83b33410170
.dword 0xbfe7ef408c47f77f
.dword 0x3fa062b5377d34c0
.dword 0x3fa5e83b33410170
.dword 0xbfe7ef408c47f77f
.dword 0x3fa062b5377d34c0
.dword 0x3fa5e83b33410170
.dword 0xbfe7ef408c47f77f
.dword 0x3fa062b5377d34c0
.dword 0x3fd9dc285cf022ae
.dword 0xbff1452e6e63e7f0
.dword 0x3fdbe9bb5c2f0a38
.dword 0x3fd9dc285cf022ae
.dword 0xbff1452e6e63e7f0
.dword 0x3fdbe9bb5c2f0a38
.dword 0x3fd9dc285cf022ae
.dword 0xbff1452e6e63e7f0
.dword 0x3fdbe9bb5c2f0a38
.dword 0x3fd9dc285cf022ae
.dword 0xbff1452e6e63e7f0
.dword 0x3fdbe9bb5c2f0a38
.dword 0x3fd9dc285cf022ae
.dword 0xbff1452e6e63e7f0
.dword 0x3fdbe9bb5c2f0a38
.dword 0x3fe42d8676214ef3
.dword 0xbff5c4b37b96f7d8
.dword 0x3feb73d0835f7642
.dword 0x3fe42d8676214ef3
.dword 0xbff5c4b37b96f7d8
.dword 0x3feb73d0835f7642
.dword 0x3fe42d8676214ef3
.dword 0xbff5c4b37b96f7d8
.dword 0x3feb73d0835f7642
.dword 0x3fe42d8676214ef3
.dword 0xbff5c4b37b96f7d8
.dword 0x3feb73d0835f7642
.dword 0x3fe42d8676214ef3
.dword 0xbff5c4b37b96f7d8
.dword 0x3feb73d0835f7642
.dword 0x3fc7eff2d6fa2ee4
.dword 0xbffe9a9e96b67389
.dword 0x3fd6e49d0bb162dc
.dword 0x3fc7eff2d6fa2ee4
.dword 0xbffe9a9e96b67389
.dword 0x3fd6e49d0bb162dc
.dword 0x3fc7eff2d6fa2ee4
.dword 0xbffe9a9e96b67389
.dword 0x3fd6e49d0bb162dc
.dword 0x3fc7eff2d6fa2ee4
.dword 0xbffe9a9e96b67389
.dword 0x3fd6e49d0bb162dc
.dword 0x3fc7eff2d6fa2ee4
.dword 0xbffe9a9e96b67389
.dword 0x3fd6e49d0bb162dc
.dword 0x3fc73aabcdeef630
.dword 0xc0099b8050bf4ab1
.dword 0x3fe296b78e5cef76
.dword 0x3fc73aabcdeef630
.dword 0xc0099b8050bf4ab1
.dword 0x3fe296b78e5cef76
.dword 0x3fc73aabcdeef630
.dword 0xc0099b8050bf4ab1
.dword 0x3fe296b78e5cef76
.dword 0x3fc73aabcdeef630
.dword 0xc0099b8050bf4ab1
.dword 0x3fe296b78e5cef76
.dword 0x3fc73aabcdeef630
.dword 0xc0099b8050bf4ab1
.dword 0x3fe296b78e5cef76
.dword 0x3fdad29895a78b0e
.dword 0xbfb9789fd457d9c9
.dword 0x3fa559a2e97f1680
.dword 0x3fdad29895a78b0e
.dword 0xbfb9789fd457d9c9
.dword 0x3fa559a2e97f1680
.dword 0x3fdad29895a78b0e
.dword 0xbfb9789fd457d9c9
.dword 0x3fa559a2e97f1680
.dword 0x3fdad29895a78b0e
.dword 0xbfb9789fd457d9c9
.dword 0x3fa559a2e97f1680
.dword 0x3fdad29895a78b0e
.dword 0xbfb9789fd457d9c9
.dword 0x3fa559a2e97f1680
.dword 0x3fdd1b19f3e618f8
.dword 0xbff73dfaf5ef2204
.dword 0x3fe523da94321215
.dword 0x3fdd1b19f3e618f8
.dword 0xbff73dfaf5ef2204
.dword 0x3fe523da94321215
.dword 0x3fdd1b19f3e618f8
.dword 0xbff73dfaf5ef2204
.dword 0x3fe523da94321215
.dword 0x3fdd1b19f3e618f8
.dword 0xbff73dfaf5ef2204
.dword 0x3fe523da94321215
.dword 0x3fdd1b19f3e618f8
.dword 0xbff73dfaf5ef2204
.dword 0x3fe523da94321215
.dword 0x3fd8bb5dad96c4ce
.dword 0xc002bd2fd0af094b
.dword 0x3fecf7388ed1a1c6
.dword 0x3fd8bb5dad96c4ce
.dword 0xc002bd2fd0af094b
.dword 0x3fecf7388ed1a1c6
.dword 0x3fd8bb5dad96c4ce
.dword 0xc002bd2fd0af094b
.dword 0x3fecf7388ed1a1c6
.dword 0x3fd8bb5dad96c4ce
.dword 0xc002bd2fd0af094b
.dword 0x3fecf7388ed1a1c6
.dword 0x3fd8bb5dad96c4ce
.dword 0xc002bd2fd0af094b
.dword 0x3fecf7388ed1a1c6
.dword 0x3fe4092d88247c04
.dword 0xbff8a1f5a868521a
.dword 0x3feed89445ccde62
.dword 0x3fe4092d88247c04
.dword 0xbff8a1f5a868521a
.dword 0x3feed89445ccde62
.dword 0x3fe4092d88247c04
.dword 0xbff8a1f5a868521a
.dword 0x3feed89445ccde62
.dword 0x3fe4092d88247c04
.dword 0xbff8a1f5a868521a
.dword 0x3feed89445ccde62
.dword 0x3fe4092d88247c04
.dword 0xbff8a1f5a868521a
.dword 0x3feed89445ccde62
.dword 0x3fec514f693e9cb5
.dword 0xbfc864372921e037
.dword 0x3fc595aa773e7e18
.dword 0x3fec514f693e9cb5
.dword 0xbfc864372921e037
.dword 0x3fc595aa773e7e18
.dword 0x3fec514f693e9cb5
.dword 0xbfc864372921e037
.dword 0x3fc595aa773e7e18
.dword 0x3fec514f693e9cb5
.dword 0xbfc864372921e037
.dword 0x3fc595aa773e7e18
.dword 0x3fec514f693e9cb5
.dword 0xbfc864372921e037
.dword 0x3fc595aa773e7e18
.dword 0x3fe7164c4c939ad2
.dword 0xbfea2ab6842a3099
.dword 0x3fe2e0eef088ce1d
.dword 0x3fe7164c4c939ad2
.dword 0xbfea2ab6842a3099
.dword 0x3fe2e0eef088ce1d
.dword 0x3fe7164c4c939ad2
.dword 0xbfea2ab6842a3099
.dword 0x3fe2e0eef088ce1d
.dword 0x3fe7164c4c939ad2
.dword 0xbfea2ab6842a3099
.dword 0x3fe2e0eef088ce1d
.dword 0x3fe7164c4c939ad2
.dword 0xbfea2ab6842a3099
.dword 0x3fe2e0eef088ce1d
.dword 0x3feffa9696991130
.dword 0xbfe30a61c8407e29
.dword 0x3fe3072970310af8
.dword 0x3feffa9696991130
.dword 0xbfe30a61c8407e29
.dword 0x3fe3072970310af8
.dword 0x3feffa9696991130
.dword 0xbfe30a61c8407e29
.dword 0x3fe3072970310af8
.dword 0x3feffa9696991130
.dword 0xbfe30a61c8407e29
.dword 0x3fe3072970310af8
.dword 0x3feffa9696991130
.dword 0xbfe30a61c8407e29
.dword 0x3fe3072970310af8
.dword 0x3fe8638fed20c09e
.dword 0xbfc04293409b3c29
.dword 0x3fb8c90b14081a40
.dword 0x3fe8638fed20c09e
.dword 0xbfc04293409b3c29
.dword 0x3fb8c90b14081a40
.dword 0x3fe8638fed20c09e
.dword 0xbfc04293409b3c29
.dword 0x3fb8c90b14081a40
.dword 0x3fe8638fed20c09e
.dword 0xbfc04293409b3c29
.dword 0x3fb8c90b14081a40
.dword 0x3fe8638fed20c09e
.dword 0xbfc04293409b3c29
.dword 0x3fb8c90b14081a40
.dword 0x3fd8d85e2f6c9756
.dword 0xbff0e43729e1f458
.dword 0x3fda3abf165d753a
.dword 0x3fd8d85e2f6c9756
.dword 0xbff0e43729e1f458
.dword 0x3fda3abf165d753a
.dword 0x3fd8d85e2f6c9756
.dword 0xbff0e43729e1f458
.dword 0x3fda3abf165d753a
.dword 0x3fd8d85e2f6c9756
.dword 0xbff0e43729e1f458
.dword 0x3fda3abf165d753a
.dword 0x3fd8d85e2f6c9756
.dword 0xbff0e43729e1f458
.dword 0x3fda3abf165d753a
.dword 0x3fe11c03ea987949
.dword 0xbff28b6878ec0dd3
.dword 0x3fe3d49781599350
.dword 0x3fe11c03ea987949
.dword 0xbff28b6878ec0dd3
.dword 0x3fe3d49781599350
.dword 0x3fe11c03ea987949
.dword 0xbff28b6878ec0dd3
.dword 0x3fe3d49781599350
.dword 0x3fe11c03ea987949
.dword 0xbff28b6878ec0dd3
.dword 0x3fe3d49781599350
.dword 0x3fe11c03ea987949
.dword 0xbff28b6878ec0dd3
.dword 0x3fe3d49781599350
.dword 0x3fe9cffe79ce8502
.dword 0xbff320ca64ec245e
.dword 0x3feedbe4b25689da
.dword 0x3fe9cffe79ce8502
.dword 0xbff320ca64ec245e
.dword 0x3feedbe4b25689da
.dword 0x3fe9cffe79ce8502
.dword 0xbff320ca64ec245e
.dword 0x3feedbe4b25689da
.dword 0x3fe9cffe79ce8502
.dword 0xbff320ca64ec245e
.dword 0x3feedbe4b25689da
.dword 0x3fe9cffe79ce8502
.dword 0xbff320ca64ec245e
.dword 0x3feedbe4b25689da
.dword 0x3fe5d8430c20c9b8
.dword 0xbff32ed7b9397a0f
.dword 0x3fea30c3e611c117
.dword 0x3fe5d8430c20c9b8
.dword 0xbff32ed7b9397a0f
.dword 0x3fea30c3e611c117
.dword 0x3fe5d8430c20c9b8
.dword 0xbff32ed7b9397a0f
.dword 0x3fea30c3e611c117
.dword 0x3fe5d8430c20c9b8
.dword 0xbff32ed7b9397a0f
.dword 0x3fea30c3e611c117
.dword 0x3fe5d8430c20c9b8
.dword 0xbff32ed7b9397a0f
.dword 0x3fea30c3e611c117
.dword 0x3fee4475e06ec966
.dword 0xbfed507640849e38
.dword 0x3febba25d38e82e3
.dword 0x3fee4475e06ec966
.dword 0xbfed507640849e38
.dword 0x3febba25d38e82e3
.dword 0x3fee4475e06ec966
.dword 0xbfed507640849e38
.dword 0x3febba25d38e82e3
.dword 0x3fee4475e06ec966
.dword 0xbfed507640849e38
.dword 0x3febba25d38e82e3
.dword 0x3fee4475e06ec966
.dword 0xbfed507640849e38
.dword 0x3febba25d38e82e3
.dword 0x3fe0e8c58414b9cf
.dword 0xbff76dc5f4069fca
.dword 0x3fe8c29ee35646d1
.dword 0x3fe0e8c58414b9cf
.dword 0xbff76dc5f4069fca
.dword 0x3fe8c29ee35646d1
.dword 0x3fe0e8c58414b9cf
.dword 0xbff76dc5f4069fca
.dword 0x3fe8c29ee35646d1
.dword 0x3fe0e8c58414b9cf
.dword 0xbff76dc5f4069fca
.dword 0x3fe8c29ee35646d1
.dword 0x3fe0e8c58414b9cf
.dword 0xbff76dc5f4069fca
.dword 0x3fe8c29ee35646d1
.dword 0x3fd79fe7ba4096d2
.dword 0xc004c3dad8f5f478
.dword 0x3feea911a40ddb3b
.dword 0x3fd79fe7ba4096d2
.dword 0xc004c3dad8f5f478
.dword 0x3feea911a40ddb3b
.dword 0x3fd79fe7ba4096d2
.dword 0xc004c3dad8f5f478
.dword 0x3feea911a40ddb3b
.dword 0x3fd79fe7ba4096d2
.dword 0xc004c3dad8f5f478
.dword 0x3feea911a40ddb3b
.dword 0x3fd79fe7ba4096d2
.dword 0xc004c3dad8f5f478
.dword 0x3feea911a40ddb3b
.dword 0x3fe8fda3acf6c974
.dword 0xbfd9bc6262ad374c
.dword 0x3fd41946d68e44a4
.dword 0x3fe8fda3acf6c974
.dword 0xbfd9bc6262ad374c
.dword 0x3fd41946d68e44a4
.dword 0x3fe8fda3acf6c974
.dword 0xbfd9bc6262ad374c
.dword 0x3fd41946d68e44a4
.dword 0x3fe8fda3acf6c974
.dword 0xbfd9bc6262ad374c
.dword 0x3fd41946d68e44a4
.dword 0x3fe8fda3acf6c974
.dword 0xbfd9bc6262ad374c
.dword 0x3fd41946d68e44a4
.dword 0x3fe1e2c47d80f352
.dword 0xbfe4081240b0eca3
.dword 0x3fd6647b668dd6c0
.dword 0x3fe1e2c47d80f352
.dword 0xbfe4081240b0eca3
.dword 0x3fd6647b668dd6c0
.dword 0x3fe1e2c47d80f352
.dword 0xbfe4081240b0eca3
.dword 0x3fd6647b668dd6c0
.dword 0x3fe1e2c47d80f352
.dword 0xbfe4081240b0eca3
.dword 0x3fd6647b668dd6c0
.dword 0x3fe1e2c47d80f352
.dword 0xbfe4081240b0eca3
.dword 0x3fd6647b668dd6c0
.dword 0x3fef1db86f37b4ef
.dword 0xbfeba48f5418f75c
.dword 0x3feae1174da77a1f
.dword 0x3fef1db86f37b4ef
.dword 0xbfeba48f5418f75c
.dword 0x3feae1174da77a1f
.dword 0x3fef1db86f37b4ef
.dword 0xbfeba48f5418f75c
.dword 0x3feae1174da77a1f
.dword 0x3fef1db86f37b4ef
.dword 0xbfeba48f5418f75c
.dword 0x3feae1174da77a1f
.dword 0x3fef1db86f37b4ef
.dword 0xbfeba48f5418f75c
.dword 0x3feae1174da77a1f
.dword 0x3fd73d9395d59810
.dword 0xbfe8a33a4d802853
.dword 0x3fd1e4bab0082856
.dword 0x3fd73d9395d59810
.dword 0xbfe8a33a4d802853
.dword 0x3fd1e4bab0082856
.dword 0x3fd73d9395d59810
.dword 0xbfe8a33a4d802853
.dword 0x3fd1e4bab0082856
.dword 0x3fd73d9395d59810
.dword 0xbfe8a33a4d802853
.dword 0x3fd1e4bab0082856
.dword 0x3fd73d9395d59810
.dword 0xbfe8a33a4d802853
.dword 0x3fd1e4bab0082856
.dword 0x3fd814b1039307c8
.dword 0xbfe3292173597b3e
.dword 0x3fccd67992203e40
.dword 0x3fd814b1039307c8
.dword 0xbfe3292173597b3e
.dword 0x3fccd67992203e40
.dword 0x3fd814b1039307c8
.dword 0xbfe3292173597b3e
.dword 0x3fccd67992203e40
.dword 0x3fd814b1039307c8
.dword 0xbfe3292173597b3e
.dword 0x3fccd67992203e40
.dword 0x3fd814b1039307c8
.dword 0xbfe3292173597b3e
.dword 0x3fccd67992203e40
.dword 0x3fd56786d882306a
.dword 0xbffbb5ad2070374a
.dword 0x3fe288df26ca11e7
.dword 0x3fd56786d882306a
.dword 0xbffbb5ad2070374a
.dword 0x3fe288df26ca11e7
.dword 0x3fd56786d882306a
.dword 0xbffbb5ad2070374a
.dword 0x3fe288df26ca11e7
.dword 0x3fd56786d882306a
.dword 0xbffbb5ad2070374a
.dword 0x3fe288df26ca11e7
.dword 0x3fd56786d882306a
.dword 0xbffbb5ad2070374a
.dword 0x3fe288df26ca11e7
.dword 0x3fcc1cc851053924
.dword 0xbffe891a6c0c1b77
.dword 0x3fdad36e3bde4cc0
.dword 0x3fcc1cc851053924
.dword 0xbffe891a6c0c1b77
.dword 0x3fdad36e3bde4cc0
.dword 0x3fcc1cc851053924
.dword 0xbffe891a6c0c1b77
.dword 0x3fdad36e3bde4cc0
.dword 0x3fcc1cc851053924
.dword 0xbffe891a6c0c1b77
.dword 0x3fdad36e3bde4cc0
.dword 0x3fcc1cc851053924
.dword 0xbffe891a6c0c1b77
.dword 0x3fdad36e3bde4cc0
.dword 0x3fd141e3b4aabc20
.dword 0xc0089214bf521700
.dword 0x3fea80652d886ab5
.dword 0x3fd141e3b4aabc20
.dword 0xc0089214bf521700
.dword 0x3fea80652d886ab5
.dword 0x3fd141e3b4aabc20
.dword 0xc0089214bf521700
.dword 0x3fea80652d886ab5
.dword 0x3fd141e3b4aabc20
.dword 0xc0089214bf521700
.dword 0x3fea80652d886ab5
.dword 0x3fd141e3b4aabc20
.dword 0xc0089214bf521700
.dword 0x3fea80652d886ab5
.dword 0x3fd3bfaee75e8ada
.dword 0xbfed11bba1daba7f
.dword 0x3fd1f0a822a2150c
.dword 0x3fd3bfaee75e8ada
.dword 0xbfed11bba1daba7f
.dword 0x3fd1f0a822a2150c
.dword 0x3fd3bfaee75e8ada
.dword 0xbfed11bba1daba7f
.dword 0x3fd1f0a822a2150c
.dword 0x3fd3bfaee75e8ada
.dword 0xbfed11bba1daba7f
.dword 0x3fd1f0a822a2150c
.dword 0x3fd3bfaee75e8ada
.dword 0xbfed11bba1daba7f
.dword 0x3fd1f0a822a2150c
.dword 0x3fb007c0e4ad38b8
.dword 0xc020b25e16a8e013
.dword 0x3fe0ba756ade5a6c
.dword 0x3fb007c0e4ad38b8
.dword 0xc020b25e16a8e013
.dword 0x3fe0ba756ade5a6c
.dword 0x3fb007c0e4ad38b8
.dword 0xc020b25e16a8e013
.dword 0x3fe0ba756ade5a6c
.dword 0x3fb007c0e4ad38b8
.dword 0xc020b25e16a8e013
.dword 0x3fe0ba756ade5a6c
.dword 0x3fb007c0e4ad38b8
.dword 0xc020b25e16a8e013
.dword 0x3fe0ba756ade5a6c
.dword 0x3feaaeb6c3349442
.dword 0xbfc9148ba3c75a15
.dword 0x3fc4e9a06a35212c
.dword 0x3feaaeb6c3349442
.dword 0xbfc9148ba3c75a15
.dword 0x3fc4e9a06a35212c
.dword 0x3feaaeb6c3349442
.dword 0xbfc9148ba3c75a15
.dword 0x3fc4e9a06a35212c
.dword 0x3feaaeb6c3349442
.dword 0xbfc9148ba3c75a15
.dword 0x3fc4e9a06a35212c
.dword 0x3feaaeb6c3349442
.dword 0xbfc9148ba3c75a15
.dword 0x3fc4e9a06a35212c
.dword 0x3fded6cdb6dd7972
.dword 0xbfef419490f13ff8
.dword 0x3fde1f4ac8288a60
.dword 0x3fded6cdb6dd7972
.dword 0xbfef419490f13ff8
.dword 0x3fde1f4ac8288a60
.dword 0x3fded6cdb6dd7972
.dword 0xbfef419490f13ff8
.dword 0x3fde1f4ac8288a60
.dword 0x3fded6cdb6dd7972
.dword 0xbfef419490f13ff8
.dword 0x3fde1f4ac8288a60
.dword 0x3fded6cdb6dd7972
.dword 0xbfef419490f13ff8
.dword 0x3fde1f4ac8288a60
.dword 0x3f98736cd15f7280
.dword 0xbffd2329f35c9912
.dword 0x3fa64378ea9a2f90
.dword 0x3f98736cd15f7280
.dword 0xbffd2329f35c9912
.dword 0x3fa64378ea9a2f90
.dword 0x3f98736cd15f7280
.dword 0xbffd2329f35c9912
.dword 0x3fa64378ea9a2f90
.dword 0x3f98736cd15f7280
.dword 0xbffd2329f35c9912
.dword 0x3fa64378ea9a2f90
.dword 0x3f98736cd15f7280
.dword 0xbffd2329f35c9912
.dword 0x3fa64378ea9a2f90
.dword 0x3fc0a6bf8220e288
.dword 0xc0032a8ac4f1ee99
.dword 0x3fd3f2498c66d79e
.dword 0x3fc0a6bf8220e288
.dword 0xc0032a8ac4f1ee99
.dword 0x3fd3f2498c66d79e
.dword 0x3fc0a6bf8220e288
.dword 0xc0032a8ac4f1ee99
.dword 0x3fd3f2498c66d79e
.dword 0x3fc0a6bf8220e288
.dword 0xc0032a8ac4f1ee99
.dword 0x3fd3f2498c66d79e
.dword 0x3fc0a6bf8220e288
.dword 0xc0032a8ac4f1ee99
.dword 0x3fd3f2498c66d79e
.dword 0x3fe4cc6e1c4f87e1
.dword 0xbfcef15a53cdef9a
.dword 0x3fc41c858d3d8cf0
.dword 0x3fe4cc6e1c4f87e1
.dword 0xbfcef15a53cdef9a
.dword 0x3fc41c858d3d8cf0
.dword 0x3fe4cc6e1c4f87e1
.dword 0xbfcef15a53cdef9a
.dword 0x3fc41c858d3d8cf0
.dword 0x3fe4cc6e1c4f87e1
.dword 0xbfcef15a53cdef9a
.dword 0x3fc41c858d3d8cf0
.dword 0x3fe4cc6e1c4f87e1
.dword 0xbfcef15a53cdef9a
.dword 0x3fc41c858d3d8cf0
.dword 0x3fd0c76fc87ff80c
.dword 0xbfe4f884770d0b7f
.dword 0x3fc5fde9e976e930
.dword 0x3fd0c76fc87ff80c
.dword 0xbfe4f884770d0b7f
.dword 0x3fc5fde9e976e930
.dword 0x3fd0c76fc87ff80c
.dword 0xbfe4f884770d0b7f
.dword 0x3fc5fde9e976e930
.dword 0x3fd0c76fc87ff80c
.dword 0xbfe4f884770d0b7f
.dword 0x3fc5fde9e976e930
.dword 0x3fd0c76fc87ff80c
.dword 0xbfe4f884770d0b7f
.dword 0x3fc5fde9e976e930
.dword 0x3fe4de214ee78d25
.dword 0xbfe17759170e66fc
.dword 0x3fd6c7abad3c3f98
.dword 0x3fe4de214ee78d25
.dword 0xbfe17759170e66fc
.dword 0x3fd6c7abad3c3f98
.dword 0x3fe4de214ee78d25
.dword 0xbfe17759170e66fc
.dword 0x3fd6c7abad3c3f98
.dword 0x3fe4de214ee78d25
.dword 0xbfe17759170e66fc
.dword 0x3fd6c7abad3c3f98
.dword 0x3fe4de214ee78d25
.dword 0xbfe17759170e66fc
.dword 0x3fd6c7abad3c3f98
.dword 0x3fd69064a29c639c
.dword 0xbfe25e4641864161
.dword 0x3fc9e7649a4b7c98
.dword 0x3fd69064a29c639c
.dword 0xbfe25e4641864161
.dword 0x3fc9e7649a4b7c98
.dword 0x3fd69064a29c639c
.dword 0xbfe25e4641864161
.dword 0x3fc9e7649a4b7c98
.dword 0x3fd69064a29c639c
.dword 0xbfe25e4641864161
.dword 0x3fc9e7649a4b7c98
.dword 0x3fd69064a29c639c
.dword 0xbfe25e4641864161
.dword 0x3fc9e7649a4b7c98
.dword 0x3fe12f9a92d83ddd
.dword 0xbfd5d88327cf5f73
.dword 0x3fc7770a67fe91ec
.dword 0x3fe12f9a92d83ddd
.dword 0xbfd5d88327cf5f73
.dword 0x3fc7770a67fe91ec
.dword 0x3fe12f9a92d83ddd
.dword 0xbfd5d88327cf5f73
.dword 0x3fc7770a67fe91ec
.dword 0x3fe12f9a92d83ddd
.dword 0xbfd5d88327cf5f73
.dword 0x3fc7770a67fe91ec
.dword 0x3fe12f9a92d83ddd
.dword 0xbfd5d88327cf5f73
.dword 0x3fc7770a67fe91ec
.dword 0x3fe7fa542ab245fb
.dword 0xbfdc0bb26edb0f91
.dword 0x3fd503cd65cf7e30
.dword 0x3fe7fa542ab245fb
.dword 0xbfdc0bb26edb0f91
.dword 0x3fd503cd65cf7e30
.dword 0x3fe7fa542ab245fb
.dword 0xbfdc0bb26edb0f91
.dword 0x3fd503cd65cf7e30
.dword 0x3fe7fa542ab245fb
.dword 0xbfdc0bb26edb0f91
.dword 0x3fd503cd65cf7e30
.dword 0x3fe7fa542ab245fb
.dword 0xbfdc0bb26edb0f91
.dword 0x3fd503cd65cf7e30
.dword 0x3fefa1219a1a5018
.dword 0xbfdd550fa34280bd
.dword 0x3fdcfe19e9cf6d74
.dword 0x3fefa1219a1a5018
.dword 0xbfdd550fa34280bd
.dword 0x3fdcfe19e9cf6d74
.dword 0x3fefa1219a1a5018
.dword 0xbfdd550fa34280bd
.dword 0x3fdcfe19e9cf6d74
.dword 0x3fefa1219a1a5018
.dword 0xbfdd550fa34280bd
.dword 0x3fdcfe19e9cf6d74
.dword 0x3fefa1219a1a5018
.dword 0xbfdd550fa34280bd
.dword 0x3fdcfe19e9cf6d74
.dword 0x3fd66b719e922046
.dword 0xbff327275cce047b
.dword 0x3fdad673f92f77f4
.dword 0x3fd66b719e922046
.dword 0xbff327275cce047b
.dword 0x3fdad673f92f77f4
.dword 0x3fd66b719e922046
.dword 0xbff327275cce047b
.dword 0x3fdad673f92f77f4
.dword 0x3fd66b719e922046
.dword 0xbff327275cce047b
.dword 0x3fdad673f92f77f4
.dword 0x3fd66b719e922046
.dword 0xbff327275cce047b
.dword 0x3fdad673f92f77f4
.dword 0x3fe698c3982c263b
.dword 0xbfb3bd9bdc5438e6
.dword 0x3fabe130ea3c3ce0
.dword 0x3fe698c3982c263b
.dword 0xbfb3bd9bdc5438e6
.dword 0x3fabe130ea3c3ce0
.dword 0x3fe698c3982c263b
.dword 0xbfb3bd9bdc5438e6
.dword 0x3fabe130ea3c3ce0
.dword 0x3fe698c3982c263b
.dword 0xbfb3bd9bdc5438e6
.dword 0x3fabe130ea3c3ce0
.dword 0x3fe698c3982c263b
.dword 0xbfb3bd9bdc5438e6
.dword 0x3fabe130ea3c3ce0
.dword 0x3fcd78ea304e0070
.dword 0xbff57aef0fe6c3ab
.dword 0x3fd3c892da45a982
.dword 0x3fcd78ea304e0070
.dword 0xbff57aef0fe6c3ab
.dword 0x3fd3c892da45a982
.dword 0x3fcd78ea304e0070
.dword 0xbff57aef0fe6c3ab
.dword 0x3fd3c892da45a982
.dword 0x3fcd78ea304e0070
.dword 0xbff57aef0fe6c3ab
.dword 0x3fd3c892da45a982
.dword 0x3fcd78ea304e0070
.dword 0xbff57aef0fe6c3ab
.dword 0x3fd3c892da45a982
.dword 0x3fe703428ca8b8d1
.dword 0xbfe6e2b145ce26a3
.dword 0x3fe0754442f0c8f3
.dword 0x3fe703428ca8b8d1
.dword 0xbfe6e2b145ce26a3
.dword 0x3fe0754442f0c8f3
.dword 0x3fe703428ca8b8d1
.dword 0xbfe6e2b145ce26a3
.dword 0x3fe0754442f0c8f3
.dword 0x3fe703428ca8b8d1
.dword 0xbfe6e2b145ce26a3
.dword 0x3fe0754442f0c8f3
.dword 0x3fe703428ca8b8d1
.dword 0xbfe6e2b145ce26a3
.dword 0x3fe0754442f0c8f3
.dword 0x3fe45ec459c3431b
.dword 0xbfddb65d7f7913af
.dword 0x3fd2e9f872a74e60
.dword 0x3fe45ec459c3431b
.dword 0xbfddb65d7f7913af
.dword 0x3fd2e9f872a74e60
.dword 0x3fe45ec459c3431b
.dword 0xbfddb65d7f7913af
.dword 0x3fd2e9f872a74e60
.dword 0x3fe45ec459c3431b
.dword 0xbfddb65d7f7913af
.dword 0x3fd2e9f872a74e60
.dword 0x3fe45ec459c3431b
.dword 0xbfddb65d7f7913af
.dword 0x3fd2e9f872a74e60
.dword 0x3fd580b8c7b9b736
.dword 0xbfe6e48ee8df3dbf
.dword 0x3fcec4286b1bdb48
.dword 0x3fd580b8c7b9b736
.dword 0xbfe6e48ee8df3dbf
.dword 0x3fcec4286b1bdb48
.dword 0x3fd580b8c7b9b736
.dword 0xbfe6e48ee8df3dbf
.dword 0x3fcec4286b1bdb48
.dword 0x3fd580b8c7b9b736
.dword 0xbfe6e48ee8df3dbf
.dword 0x3fcec4286b1bdb48
.dword 0x3fd580b8c7b9b736
.dword 0xbfe6e48ee8df3dbf
.dword 0x3fcec4286b1bdb48
.dword 0x3fccd023aa4f0ec8
.dword 0xbff5b52df5904a62
.dword 0x3fd38bba134cd508
.dword 0x3fccd023aa4f0ec8
.dword 0xbff5b52df5904a62
.dword 0x3fd38bba134cd508
.dword 0x3fccd023aa4f0ec8
.dword 0xbff5b52df5904a62
.dword 0x3fd38bba134cd508
.dword 0x3fccd023aa4f0ec8
.dword 0xbff5b52df5904a62
.dword 0x3fd38bba134cd508
.dword 0x3fccd023aa4f0ec8
.dword 0xbff5b52df5904a62
.dword 0x3fd38bba134cd508
.dword 0x3fe47003f7bf6069
.dword 0xbfd57132675e762e
.dword 0x3fcb639cb3470ef0
.dword 0x3fe47003f7bf6069
.dword 0xbfd57132675e762e
.dword 0x3fcb639cb3470ef0
.dword 0x3fe47003f7bf6069
.dword 0xbfd57132675e762e
.dword 0x3fcb639cb3470ef0
.dword 0x3fe47003f7bf6069
.dword 0xbfd57132675e762e
.dword 0x3fcb639cb3470ef0
.dword 0x3fe47003f7bf6069
.dword 0xbfd57132675e762e
.dword 0x3fcb639cb3470ef0
.dword 0x3fcbe6cd673afaf4
.dword 0xbfe377c51493abd9
.dword 0x3fc0f97817f46e50
.dword 0x3fcbe6cd673afaf4
.dword 0xbfe377c51493abd9
.dword 0x3fc0f97817f46e50
.dword 0x3fcbe6cd673afaf4
.dword 0xbfe377c51493abd9
.dword 0x3fc0f97817f46e50
.dword 0x3fcbe6cd673afaf4
.dword 0xbfe377c51493abd9
.dword 0x3fc0f97817f46e50
.dword 0x3fcbe6cd673afaf4
.dword 0xbfe377c51493abd9
.dword 0x3fc0f97817f46e50
.dword 0x3fed25c94a085553
.dword 0xbfe9909ac1b8a836
.dword 0x3fe7493c41f074f4
.dword 0x3fed25c94a085553
.dword 0xbfe9909ac1b8a836
.dword 0x3fe7493c41f074f4
.dword 0x3fed25c94a085553
.dword 0xbfe9909ac1b8a836
.dword 0x3fe7493c41f074f4
.dword 0x3fed25c94a085553
.dword 0xbfe9909ac1b8a836
.dword 0x3fe7493c41f074f4
.dword 0x3fed25c94a085553
.dword 0xbfe9909ac1b8a836
.dword 0x3fe7493c41f074f4
.dword 0x3fe0058cec875fb8
.dword 0xbff523d931381dd1
.dword 0x3fe52b2e97478e8c
.dword 0x3fe0058cec875fb8
.dword 0xbff523d931381dd1
.dword 0x3fe52b2e97478e8c
.dword 0x3fe0058cec875fb8
.dword 0xbff523d931381dd1
.dword 0x3fe52b2e97478e8c
.dword 0x3fe0058cec875fb8
.dword 0xbff523d931381dd1
.dword 0x3fe52b2e97478e8c
.dword 0x3fe0058cec875fb8
.dword 0xbff523d931381dd1
.dword 0x3fe52b2e97478e8c
.dword 0x3fa493033484c5b0
.dword 0xc02290f88a54c9d7
.dword 0x3fd7dfce5080ba64
.dword 0x3fa493033484c5b0
.dword 0xc02290f88a54c9d7
.dword 0x3fd7dfce5080ba64
.dword 0x3fa493033484c5b0
.dword 0xc02290f88a54c9d7
.dword 0x3fd7dfce5080ba64
.dword 0x3fa493033484c5b0
.dword 0xc02290f88a54c9d7
.dword 0x3fd7dfce5080ba64
.dword 0x3fa493033484c5b0
.dword 0xc02290f88a54c9d7
.dword 0x3fd7dfce5080ba64
.dword 0x3fe3ef9c20b63737
.dword 0xbf93163170cc2055
.dword 0x3f87c83077df1c80
.dword 0x3fe3ef9c20b63737
.dword 0xbf93163170cc2055
.dword 0x3f87c83077df1c80
.dword 0x3fe3ef9c20b63737
.dword 0xbf93163170cc2055
.dword 0x3f87c83077df1c80
.dword 0x3fe3ef9c20b63737
.dword 0xbf93163170cc2055
.dword 0x3f87c83077df1c80
.dword 0x3fe3ef9c20b63737
.dword 0xbf93163170cc2055
.dword 0x3f87c83077df1c80
.dword 0x3fe3142838647eb1
.dword 0xbff6e78c86fb4af7
.dword 0x3feb4fd1e38cbcfb
.dword 0x3fe3142838647eb1
.dword 0xbff6e78c86fb4af7
.dword 0x3feb4fd1e38cbcfb
.dword 0x3fe3142838647eb1
.dword 0xbff6e78c86fb4af7
.dword 0x3feb4fd1e38cbcfb
.dword 0x3fe3142838647eb1
.dword 0xbff6e78c86fb4af7
.dword 0x3feb4fd1e38cbcfb
.dword 0x3fe3142838647eb1
.dword 0xbff6e78c86fb4af7
.dword 0x3feb4fd1e38cbcfb
.dword 0x3fe0abaf2ae7633b
.dword 0xbff5c64baa348f3a
.dword 0x3fe6aff1561ea322
.dword 0x3fe0abaf2ae7633b
.dword 0xbff5c64baa348f3a
.dword 0x3fe6aff1561ea322
.dword 0x3fe0abaf2ae7633b
.dword 0xbff5c64baa348f3a
.dword 0x3fe6aff1561ea322
.dword 0x3fe0abaf2ae7633b
.dword 0xbff5c64baa348f3a
.dword 0x3fe6aff1561ea322
.dword 0x3fe0abaf2ae7633b
.dword 0xbff5c64baa348f3a
.dword 0x3fe6aff1561ea322
.dword 0x3fe06100613ea0fb
.dword 0xbfe0e9439cc688f5
.dword 0x3fd14fca2d755886
.dword 0x3fe06100613ea0fb
.dword 0xbfe0e9439cc688f5
.dword 0x3fd14fca2d755886
.dword 0x3fe06100613ea0fb
.dword 0xbfe0e9439cc688f5
.dword 0x3fd14fca2d755886
.dword 0x3fe06100613ea0fb
.dword 0xbfe0e9439cc688f5
.dword 0x3fd14fca2d755886
.dword 0x3fe06100613ea0fb
.dword 0xbfe0e9439cc688f5
.dword 0x3fd14fca2d755886
.dword 0x3f989178bd28bc60
.dword 0xc036c6beeec033db
.dword 0x3fe17c99b428d355
.dword 0x3f989178bd28bc60
.dword 0xc036c6beeec033db
.dword 0x3fe17c99b428d355
.dword 0x3f989178bd28bc60
.dword 0xc036c6beeec033db
.dword 0x3fe17c99b428d355
.dword 0x3f989178bd28bc60
.dword 0xc036c6beeec033db
.dword 0x3fe17c99b428d355
.dword 0x3f989178bd28bc60
.dword 0xc036c6beeec033db
.dword 0x3fe17c99b428d355
.dword 0x3f46f07612d56000
.dword 0xc06a61a99f3a42d2
.dword 0x3fc2e9626d4a96ac
.dword 0x3f46f07612d56000
.dword 0xc06a61a99f3a42d2
.dword 0x3fc2e9626d4a96ac
.dword 0x3f46f07612d56000
.dword 0xc06a61a99f3a42d2
.dword 0x3fc2e9626d4a96ac
.dword 0x3f46f07612d56000
.dword 0xc06a61a99f3a42d2
.dword 0x3fc2e9626d4a96ac
.dword 0x3f46f07612d56000
.dword 0xc06a61a99f3a42d2
.dword 0x3fc2e9626d4a96ac
.dword 0x3fe690e47b6f68a3
.dword 0xbfe8d093a03e4bf2
.dword 0x3fe17fc1444fde5c
.dword 0x3fe690e47b6f68a3
.dword 0xbfe8d093a03e4bf2
.dword 0x3fe17fc1444fde5c
.dword 0x3fe690e47b6f68a3
.dword 0xbfe8d093a03e4bf2
.dword 0x3fe17fc1444fde5c
.dword 0x3fe690e47b6f68a3
.dword 0xbfe8d093a03e4bf2
.dword 0x3fe17fc1444fde5c
.dword 0x3fe690e47b6f68a3
.dword 0xbfe8d093a03e4bf2
.dword 0x3fe17fc1444fde5c
.dword 0x3feb3961d3c3d1a3
.dword 0xbfc75c4a457c04fa
.dword 0x3fc3dfc2794508e4
.dword 0x3feb3961d3c3d1a3
.dword 0xbfc75c4a457c04fa
.dword 0x3fc3dfc2794508e4
.dword 0x3feb3961d3c3d1a3
.dword 0xbfc75c4a457c04fa
.dword 0x3fc3dfc2794508e4
.dword 0x3feb3961d3c3d1a3
.dword 0xbfc75c4a457c04fa
.dword 0x3fc3dfc2794508e4
.dword 0x3feb3961d3c3d1a3
.dword 0xbfc75c4a457c04fa
.dword 0x3fc3dfc2794508e4
.dword 0x3fec967b675320a0
.dword 0xbfe441010758ece0
.dword 0x3fe2181fb6820ce9
.dword 0x3fec967b675320a0
.dword 0xbfe441010758ece0
.dword 0x3fe2181fb6820ce9
.dword 0x3fec967b675320a0
.dword 0xbfe441010758ece0
.dword 0x3fe2181fb6820ce9
.dword 0x3fec967b675320a0
.dword 0xbfe441010758ece0
.dword 0x3fe2181fb6820ce9
.dword 0x3fec967b675320a0
.dword 0xbfe441010758ece0
.dword 0x3fe2181fb6820ce9
.dword 0x3fd7a789b8d3f9e6
.dword 0xbfe25aa7601b289f
.dword 0x3fcb2280c960fbc0
.dword 0x3fd7a789b8d3f9e6
.dword 0xbfe25aa7601b289f
.dword 0x3fcb2280c960fbc0
.dword 0x3fd7a789b8d3f9e6
.dword 0xbfe25aa7601b289f
.dword 0x3fcb2280c960fbc0
.dword 0x3fd7a789b8d3f9e6
.dword 0xbfe25aa7601b289f
.dword 0x3fcb2280c960fbc0
.dword 0x3fd7a789b8d3f9e6
.dword 0xbfe25aa7601b289f
.dword 0x3fcb2280c960fbc0
.dword 0x3fd12c68fb7cd49c
.dword 0xbfc7f262da1f0259
.dword 0x3fa9b400b7809500
.dword 0x3fd12c68fb7cd49c
.dword 0xbfc7f262da1f0259
.dword 0x3fa9b400b7809500
.dword 0x3fd12c68fb7cd49c
.dword 0xbfc7f262da1f0259
.dword 0x3fa9b400b7809500
.dword 0x3fd12c68fb7cd49c
.dword 0xbfc7f262da1f0259
.dword 0x3fa9b400b7809500
.dword 0x3fd12c68fb7cd49c
.dword 0xbfc7f262da1f0259
.dword 0x3fa9b400b7809500
.dword 0x3fc4ae596cafe1f8
.dword 0xc015863f0ad32f6b
.dword 0x3febd25b081325f8
.dword 0x3fc4ae596cafe1f8
.dword 0xc015863f0ad32f6b
.dword 0x3febd25b081325f8
.dword 0x3fc4ae596cafe1f8
.dword 0xc015863f0ad32f6b
.dword 0x3febd25b081325f8
.dword 0x3fc4ae596cafe1f8
.dword 0xc015863f0ad32f6b
.dword 0x3febd25b081325f8
.dword 0x3fc4ae596cafe1f8
.dword 0xc015863f0ad32f6b
.dword 0x3febd25b081325f8
.dword 0x3feef3f2a0cb187b
.dword 0xbfe0c110c7780656
.dword 0x3fe034b8daa9cb55
.dword 0x3feef3f2a0cb187b
.dword 0xbfe0c110c7780656
.dword 0x3fe034b8daa9cb55
.dword 0x3feef3f2a0cb187b
.dword 0xbfe0c110c7780656
.dword 0x3fe034b8daa9cb55
.dword 0x3feef3f2a0cb187b
.dword 0xbfe0c110c7780656
.dword 0x3fe034b8daa9cb55
.dword 0x3feef3f2a0cb187b
.dword 0xbfe0c110c7780656
.dword 0x3fe034b8daa9cb55
.dword 0x3fee37a5781573c2
.dword 0xbfb6c0f8e5bd8ce2
.dword 0x3fb57c7aab92d8c8
.dword 0x3fee37a5781573c2
.dword 0xbfb6c0f8e5bd8ce2
.dword 0x3fb57c7aab92d8c8
.dword 0x3fee37a5781573c2
.dword 0xbfb6c0f8e5bd8ce2
.dword 0x3fb57c7aab92d8c8
.dword 0x3fee37a5781573c2
.dword 0xbfb6c0f8e5bd8ce2
.dword 0x3fb57c7aab92d8c8
.dword 0x3fee37a5781573c2
.dword 0xbfb6c0f8e5bd8ce2
.dword 0x3fb57c7aab92d8c8
.dword 0x3fe16b310565690e
.dword 0xbff0ff261bb603c5
.dword 0x3fe280f6df6ae03a
.dword 0x3fe16b310565690e
.dword 0xbff0ff261bb603c5
.dword 0x3fe280f6df6ae03a
.dword 0x3fe16b310565690e
.dword 0xbff0ff261bb603c5
.dword 0x3fe280f6df6ae03a
.dword 0x3fe16b310565690e
.dword 0xbff0ff261bb603c5
.dword 0x3fe280f6df6ae03a
.dword 0x3fe16b310565690e
.dword 0xbff0ff261bb603c5
.dword 0x3fe280f6df6ae03a
.dword 0x3fd9fc8e453fd48a
.dword 0xbfdb611a2db21769
.dword 0x3fc63bf2dbff2500
.dword 0x3fd9fc8e453fd48a
.dword 0xbfdb611a2db21769
.dword 0x3fc63bf2dbff2500
.dword 0x3fd9fc8e453fd48a
.dword 0xbfdb611a2db21769
.dword 0x3fc63bf2dbff2500
.dword 0x3fd9fc8e453fd48a
.dword 0xbfdb611a2db21769
.dword 0x3fc63bf2dbff2500
.dword 0x3fd9fc8e453fd48a
.dword 0xbfdb611a2db21769
.dword 0x3fc63bf2dbff2500
.dword 0x3fe302f71fdf68e1
.dword 0xbff48a0c464b0f32
.dword 0x3fe867bd1109ab09
.dword 0x3fe302f71fdf68e1
.dword 0xbff48a0c464b0f32
.dword 0x3fe867bd1109ab09
.dword 0x3fe302f71fdf68e1
.dword 0xbff48a0c464b0f32
.dword 0x3fe867bd1109ab09
.dword 0x3fe302f71fdf68e1
.dword 0xbff48a0c464b0f32
.dword 0x3fe867bd1109ab09
.dword 0x3fe302f71fdf68e1
.dword 0xbff48a0c464b0f32
.dword 0x3fe867bd1109ab09
.dword 0x3f8b3d7f663bda80
.dword 0xc041890703a81cce
.dword 0x3fdddaa1e09c7408
.dword 0x3f8b3d7f663bda80
.dword 0xc041890703a81cce
.dword 0x3fdddaa1e09c7408
.dword 0x3f8b3d7f663bda80
.dword 0xc041890703a81cce
.dword 0x3fdddaa1e09c7408
.dword 0x3f8b3d7f663bda80
.dword 0xc041890703a81cce
.dword 0x3fdddaa1e09c7408
.dword 0x3f8b3d7f663bda80
.dword 0xc041890703a81cce
.dword 0x3fdddaa1e09c7408
.dword 0x3fead4c0291e968d
.dword 0xbff227e75b7faf5d
.dword 0x3fee7242bbad194a
.dword 0x3fead4c0291e968d
.dword 0xbff227e75b7faf5d
.dword 0x3fee7242bbad194a
.dword 0x3fead4c0291e968d
.dword 0xbff227e75b7faf5d
.dword 0x3fee7242bbad194a
.dword 0x3fead4c0291e968d
.dword 0xbff227e75b7faf5d
.dword 0x3fee7242bbad194a
.dword 0x3fead4c0291e968d
.dword 0xbff227e75b7faf5d
.dword 0x3fee7242bbad194a
.dword 0x3fd3e49045868bda
.dword 0xbf85911463e08067
.dword 0x3f6ad05e10985e00
.dword 0x3fd3e49045868bda
.dword 0xbf85911463e08067
.dword 0x3f6ad05e10985e00
.dword 0x3fd3e49045868bda
.dword 0xbf85911463e08067
.dword 0x3f6ad05e10985e00
.dword 0x3fd3e49045868bda
.dword 0xbf85911463e08067
.dword 0x3f6ad05e10985e00
.dword 0x3fd3e49045868bda
.dword 0xbf85911463e08067
.dword 0x3f6ad05e10985e00
.dword 0x3fed7f6a9d7e26a1
.dword 0xbfed8bf1e9f7ce01
.dword 0x3feb3c79151d8ec7
.dword 0x3fed7f6a9d7e26a1
.dword 0xbfed8bf1e9f7ce01
.dword 0x3feb3c79151d8ec7
.dword 0x3fed7f6a9d7e26a1
.dword 0xbfed8bf1e9f7ce01
.dword 0x3feb3c79151d8ec7
.dword 0x3fed7f6a9d7e26a1
.dword 0xbfed8bf1e9f7ce01
.dword 0x3feb3c79151d8ec7
.dword 0x3fed7f6a9d7e26a1
.dword 0xbfed8bf1e9f7ce01
.dword 0x3feb3c79151d8ec7
.dword 0x3fe5dcc646c67b18
.dword 0xbff34347daab5068
.dword 0x3fea521a20ce0e4a
.dword 0x3fe5dcc646c67b18
.dword 0xbff34347daab5068
.dword 0x3fea521a20ce0e4a
.dword 0x3fe5dcc646c67b18
.dword 0xbff34347daab5068
.dword 0x3fea521a20ce0e4a
.dword 0x3fe5dcc646c67b18
.dword 0xbff34347daab5068
.dword 0x3fea521a20ce0e4a
.dword 0x3fe5dcc646c67b18
.dword 0xbff34347daab5068
.dword 0x3fea521a20ce0e4a
.dword 0x3fdd1c5c2f436f0e
.dword 0xbff82f6af259db09
.dword 0x3fe600681541922d
.dword 0x3fdd1c5c2f436f0e
.dword 0xbff82f6af259db09
.dword 0x3fe600681541922d
.dword 0x3fdd1c5c2f436f0e
.dword 0xbff82f6af259db09
.dword 0x3fe600681541922d
.dword 0x3fdd1c5c2f436f0e
.dword 0xbff82f6af259db09
.dword 0x3fe600681541922d
.dword 0x3fdd1c5c2f436f0e
.dword 0xbff82f6af259db09
.dword 0x3fe600681541922d
.dword 0x3fe51f0d32e5b518
.dword 0xbfbd667c31fd3c16
.dword 0x3fb367c8e9843ee8
.dword 0x3fe51f0d32e5b518
.dword 0xbfbd667c31fd3c16
.dword 0x3fb367c8e9843ee8
.dword 0x3fe51f0d32e5b518
.dword 0xbfbd667c31fd3c16
.dword 0x3fb367c8e9843ee8
.dword 0x3fe51f0d32e5b518
.dword 0xbfbd667c31fd3c16
.dword 0x3fb367c8e9843ee8
.dword 0x3fe51f0d32e5b518
.dword 0xbfbd667c31fd3c16
.dword 0x3fb367c8e9843ee8
.dword 0x3fd8e8339d1957d0
.dword 0xbfcaf0fdc948ab06
.dword 0x3fb4f83cfb41fb40
.dword 0x3fd8e8339d1957d0
.dword 0xbfcaf0fdc948ab06
.dword 0x3fb4f83cfb41fb40
.dword 0x3fd8e8339d1957d0
.dword 0xbfcaf0fdc948ab06
.dword 0x3fb4f83cfb41fb40
.dword 0x3fd8e8339d1957d0
.dword 0xbfcaf0fdc948ab06
.dword 0x3fb4f83cfb41fb40
.dword 0x3fd8e8339d1957d0
.dword 0xbfcaf0fdc948ab06
.dword 0x3fb4f83cfb41fb40
.dword 0x3fed150df72a8355
.dword 0xbfe7367d25f25d0f
.dword 0x3fe518a74df2cf93
.dword 0x3fed150df72a8355
.dword 0xbfe7367d25f25d0f
.dword 0x3fe518a74df2cf93
.dword 0x3fed150df72a8355
.dword 0xbfe7367d25f25d0f
.dword 0x3fe518a74df2cf93
.dword 0x3fed150df72a8355
.dword 0xbfe7367d25f25d0f
.dword 0x3fe518a74df2cf93
.dword 0x3fed150df72a8355
.dword 0xbfe7367d25f25d0f
.dword 0x3fe518a74df2cf93
.dword 0x3feed3ea0244a1c3
.dword 0xbfacce34fde9066f
.dword 0x3fabc0140162da60
.dword 0x3feed3ea0244a1c3
.dword 0xbfacce34fde9066f
.dword 0x3fabc0140162da60
.dword 0x3feed3ea0244a1c3
.dword 0xbfacce34fde9066f
.dword 0x3fabc0140162da60
.dword 0x3feed3ea0244a1c3
.dword 0xbfacce34fde9066f
.dword 0x3fabc0140162da60
.dword 0x3feed3ea0244a1c3
.dword 0xbfacce34fde9066f
.dword 0x3fabc0140162da60
.dword 0x3fc9f479ea1f8cf8
.dword 0xbfe62451fe601661
.dword 0x3fc1f5895b442450
.dword 0x3fc9f479ea1f8cf8
.dword 0xbfe62451fe601661
.dword 0x3fc1f5895b442450
.dword 0x3fc9f479ea1f8cf8
.dword 0xbfe62451fe601661
.dword 0x3fc1f5895b442450
.dword 0x3fc9f479ea1f8cf8
.dword 0xbfe62451fe601661
.dword 0x3fc1f5895b442450
.dword 0x3fc9f479ea1f8cf8
.dword 0xbfe62451fe601661
.dword 0x3fc1f5895b442450
.dword 0x3fec8ad4b5a41513
.dword 0xbfd20da04f9d24ce
.dword 0x3fd01a3f09c089d0
.dword 0x3fec8ad4b5a41513
.dword 0xbfd20da04f9d24ce
.dword 0x3fd01a3f09c089d0
.dword 0x3fec8ad4b5a41513
.dword 0xbfd20da04f9d24ce
.dword 0x3fd01a3f09c089d0
.dword 0x3fec8ad4b5a41513
.dword 0xbfd20da04f9d24ce
.dword 0x3fd01a3f09c089d0
.dword 0x3fec8ad4b5a41513
.dword 0xbfd20da04f9d24ce
.dword 0x3fd01a3f09c089d0
.dword 0x3fde6b490dfe2b50
.dword 0xbfde372fd2bff52e
.dword 0x3fccb90a58982adc
.dword 0x3fde6b490dfe2b50
.dword 0xbfde372fd2bff52e
.dword 0x3fccb90a58982adc
.dword 0x3fde6b490dfe2b50
.dword 0xbfde372fd2bff52e
.dword 0x3fccb90a58982adc
.dword 0x3fde6b490dfe2b50
.dword 0xbfde372fd2bff52e
.dword 0x3fccb90a58982adc
.dword 0x3fde6b490dfe2b50
.dword 0xbfde372fd2bff52e
.dword 0x3fccb90a58982adc
.dword 0x3fe4fad2fdf3343f
.dword 0xbfef7de8aa740800
.dword 0x3fe4a588b86ddd25
.dword 0x3fe4fad2fdf3343f
.dword 0xbfef7de8aa740800
.dword 0x3fe4a588b86ddd25
.dword 0x3fe4fad2fdf3343f
.dword 0xbfef7de8aa740800
.dword 0x3fe4a588b86ddd25
.dword 0x3fe4fad2fdf3343f
.dword 0xbfef7de8aa740800
.dword 0x3fe4a588b86ddd25
.dword 0x3fe4fad2fdf3343f
.dword 0xbfef7de8aa740800
.dword 0x3fe4a588b86ddd25
.dword 0x3fb2021be5c6b648
.dword 0xbfea5d4b562cfe4a
.dword 0x3fadac6e626b3a40
.dword 0x3fb2021be5c6b648
.dword 0xbfea5d4b562cfe4a
.dword 0x3fadac6e626b3a40
.dword 0x3fb2021be5c6b648
.dword 0xbfea5d4b562cfe4a
.dword 0x3fadac6e626b3a40
.dword 0x3fb2021be5c6b648
.dword 0xbfea5d4b562cfe4a
.dword 0x3fadac6e626b3a40
.dword 0x3fb2021be5c6b648
.dword 0xbfea5d4b562cfe4a
.dword 0x3fadac6e626b3a40
.dword 0x3fe9b6182f861f7a
.dword 0xbfd374dca71351c7
.dword 0x3fcf44077c100750
.dword 0x3fe9b6182f861f7a
.dword 0xbfd374dca71351c7
.dword 0x3fcf44077c100750
.dword 0x3fe9b6182f861f7a
.dword 0xbfd374dca71351c7
.dword 0x3fcf44077c100750
.dword 0x3fe9b6182f861f7a
.dword 0xbfd374dca71351c7
.dword 0x3fcf44077c100750
.dword 0x3fe9b6182f861f7a
.dword 0xbfd374dca71351c7
.dword 0x3fcf44077c100750
.dword 0x3fea35e855815160
.dword 0xbfac04431ff9e623
.dword 0x3fa6f2a902eb3370
.dword 0x3fea35e855815160
.dword 0xbfac04431ff9e623
.dword 0x3fa6f2a902eb3370
.dword 0x3fea35e855815160
.dword 0xbfac04431ff9e623
.dword 0x3fa6f2a902eb3370
.dword 0x3fea35e855815160
.dword 0xbfac04431ff9e623
.dword 0x3fa6f2a902eb3370
.dword 0x3fea35e855815160
.dword 0xbfac04431ff9e623
.dword 0x3fa6f2a902eb3370
.dword 0x3fefb5a13e304f5d
.dword 0xbfeec8c188e2ec1b
.dword 0x3fee8136212b416c
.dword 0x3fefb5a13e304f5d
.dword 0xbfeec8c188e2ec1b
.dword 0x3fee8136212b416c
.dword 0x3fefb5a13e304f5d
.dword 0xbfeec8c188e2ec1b
.dword 0x3fee8136212b416c
.dword 0x3fefb5a13e304f5d
.dword 0xbfeec8c188e2ec1b
.dword 0x3fee8136212b416c
.dword 0x3fefb5a13e304f5d
.dword 0xbfeec8c188e2ec1b
.dword 0x3fee8136212b416c
.dword 0x3fe448377e7e9a11
.dword 0xbfe54799b8ed1102
.dword 0x3fdaf98c29452710
.dword 0x3fe448377e7e9a11
.dword 0xbfe54799b8ed1102
.dword 0x3fdaf98c29452710
.dword 0x3fe448377e7e9a11
.dword 0xbfe54799b8ed1102
.dword 0x3fdaf98c29452710
.dword 0x3fe448377e7e9a11
.dword 0xbfe54799b8ed1102
.dword 0x3fdaf98c29452710
.dword 0x3fe448377e7e9a11
.dword 0xbfe54799b8ed1102
.dword 0x3fdaf98c29452710
.dword 0x3fef6bfda1cdc1a9
.dword 0xbfcbab5ecbe4405a
.dword 0x3fcb2b64294c7bd0
.dword 0x3fef6bfda1cdc1a9
.dword 0xbfcbab5ecbe4405a
.dword 0x3fcb2b64294c7bd0
.dword 0x3fef6bfda1cdc1a9
.dword 0xbfcbab5ecbe4405a
.dword 0x3fcb2b64294c7bd0
.dword 0x3fef6bfda1cdc1a9
.dword 0xbfcbab5ecbe4405a
.dword 0x3fcb2b64294c7bd0
.dword 0x3fef6bfda1cdc1a9
.dword 0xbfcbab5ecbe4405a
.dword 0x3fcb2b64294c7bd0
.dword 0x3fd0035bbd238b84
.dword 0xbfe3d6c764121046
.dword 0x3fc3daf1698802f0
.dword 0x3fd0035bbd238b84
.dword 0xbfe3d6c764121046
.dword 0x3fc3daf1698802f0
.dword 0x3fd0035bbd238b84
.dword 0xbfe3d6c764121046
.dword 0x3fc3daf1698802f0
.dword 0x3fd0035bbd238b84
.dword 0xbfe3d6c764121046
.dword 0x3fc3daf1698802f0
.dword 0x3fd0035bbd238b84
.dword 0xbfe3d6c764121046
.dword 0x3fc3daf1698802f0
.dword 0x3f997f8007ce7620
.dword 0xc0439eeea97793ee
.dword 0x3fef44af7033ff8d
.dword 0x3f997f8007ce7620
.dword 0xc0439eeea97793ee
.dword 0x3fef44af7033ff8d
.dword 0x3f997f8007ce7620
.dword 0xc0439eeea97793ee
.dword 0x3fef44af7033ff8d
.dword 0x3f997f8007ce7620
.dword 0xc0439eeea97793ee
.dword 0x3fef44af7033ff8d
.dword 0x3f997f8007ce7620
.dword 0xc0439eeea97793ee
.dword 0x3fef44af7033ff8d
.dword 0x3fd2e6b36e974e5c
.dword 0xc0098b511a9cccad
.dword 0x3fee2d0c62f9ab79
.dword 0x3fd2e6b36e974e5c
.dword 0xc0098b511a9cccad
.dword 0x3fee2d0c62f9ab79
.dword 0x3fd2e6b36e974e5c
.dword 0xc0098b511a9cccad
.dword 0x3fee2d0c62f9ab79
.dword 0x3fd2e6b36e974e5c
.dword 0xc0098b511a9cccad
.dword 0x3fee2d0c62f9ab79
.dword 0x3fd2e6b36e974e5c
.dword 0xc0098b511a9cccad
.dword 0x3fee2d0c62f9ab79
.dword 0x3fe5e505db42cace
.dword 0xbfe8435d862d27ad
.dword 0x3fe099dbe61c1ee9
.dword 0x3fe5e505db42cace
.dword 0xbfe8435d862d27ad
.dword 0x3fe099dbe61c1ee9
.dword 0x3fe5e505db42cace
.dword 0xbfe8435d862d27ad
.dword 0x3fe099dbe61c1ee9
.dword 0x3fe5e505db42cace
.dword 0xbfe8435d862d27ad
.dword 0x3fe099dbe61c1ee9
.dword 0x3fe5e505db42cace
.dword 0xbfe8435d862d27ad
.dword 0x3fe099dbe61c1ee9
.dword 0x3fc73accbb1a5c60
.dword 0xc006e3b927089114
.dword 0x3fe09dbc4536ddba
.dword 0x3fc73accbb1a5c60
.dword 0xc006e3b927089114
.dword 0x3fe09dbc4536ddba
.dword 0x3fc73accbb1a5c60
.dword 0xc006e3b927089114
.dword 0x3fe09dbc4536ddba
.dword 0x3fc73accbb1a5c60
.dword 0xc006e3b927089114
.dword 0x3fe09dbc4536ddba
.dword 0x3fc73accbb1a5c60
.dword 0xc006e3b927089114
.dword 0x3fe09dbc4536ddba
.dword 0x3fe52ff2ebbc649d
.dword 0xbff0acd705626c79
.dword 0x3fe614d31a941ec7
.dword 0x3fe52ff2ebbc649d
.dword 0xbff0acd705626c79
.dword 0x3fe614d31a941ec7
.dword 0x3fe52ff2ebbc649d
.dword 0xbff0acd705626c79
.dword 0x3fe614d31a941ec7
.dword 0x3fe52ff2ebbc649d
.dword 0xbff0acd705626c79
.dword 0x3fe614d31a941ec7
.dword 0x3fe52ff2ebbc649d
.dword 0xbff0acd705626c79
.dword 0x3fe614d31a941ec7
.dword 0x3fefe449159db7b2
.dword 0xbfd4aea33ccef598
.dword 0x3fd49cb9aa56ade4
.dword 0x3fefe449159db7b2
.dword 0xbfd4aea33ccef598
.dword 0x3fd49cb9aa56ade4
.dword 0x3fefe449159db7b2
.dword 0xbfd4aea33ccef598
.dword 0x3fd49cb9aa56ade4
.dword 0x3fefe449159db7b2
.dword 0xbfd4aea33ccef598
.dword 0x3fd49cb9aa56ade4
.dword 0x3fefe449159db7b2
.dword 0xbfd4aea33ccef598
.dword 0x3fd49cb9aa56ade4
.dword 0x3fe65b4428bafb6a
.dword 0xbfe22dc85c4bcaf5
.dword 0x3fd966a5534f952c
.dword 0x3fe65b4428bafb6a
.dword 0xbfe22dc85c4bcaf5
.dword 0x3fd966a5534f952c
.dword 0x3fe65b4428bafb6a
.dword 0xbfe22dc85c4bcaf5
.dword 0x3fd966a5534f952c
.dword 0x3fe65b4428bafb6a
.dword 0xbfe22dc85c4bcaf5
.dword 0x3fd966a5534f952c
.dword 0x3fe65b4428bafb6a
.dword 0xbfe22dc85c4bcaf5
.dword 0x3fd966a5534f952c
.dword 0x3feb5668f2f1db49
.dword 0xbff1824308305883
.dword 0x3fedea601eac2e57
.dword 0x3feb5668f2f1db49
.dword 0xbff1824308305883
.dword 0x3fedea601eac2e57
.dword 0x3feb5668f2f1db49
.dword 0xbff1824308305883
.dword 0x3fedea601eac2e57
.dword 0x3feb5668f2f1db49
.dword 0xbff1824308305883
.dword 0x3fedea601eac2e57
.dword 0x3feb5668f2f1db49
.dword 0xbff1824308305883
.dword 0x3fedea601eac2e57
.dword 0x3fe47121ce5722b2
.dword 0xbff4e3d3054e6e2e
.dword 0x3feab07cec41bf92
.dword 0x3fe47121ce5722b2
.dword 0xbff4e3d3054e6e2e
.dword 0x3feab07cec41bf92
.dword 0x3fe47121ce5722b2
.dword 0xbff4e3d3054e6e2e
.dword 0x3feab07cec41bf92
.dword 0x3fe47121ce5722b2
.dword 0xbff4e3d3054e6e2e
.dword 0x3feab07cec41bf92
.dword 0x3fe47121ce5722b2
.dword 0xbff4e3d3054e6e2e
.dword 0x3feab07cec41bf92
.dword 0x3fbb33bed3bca218
.dword 0xc01a657eed6e43ab
.dword 0x3fe6705243e9e980
.dword 0x3fbb33bed3bca218
.dword 0xc01a657eed6e43ab
.dword 0x3fe6705243e9e980
.dword 0x3fbb33bed3bca218
.dword 0xc01a657eed6e43ab
.dword 0x3fe6705243e9e980
.dword 0x3fbb33bed3bca218
.dword 0xc01a657eed6e43ab
.dword 0x3fe6705243e9e980
.dword 0x3fbb33bed3bca218
.dword 0xc01a657eed6e43ab
.dword 0x3fe6705243e9e980
.dword 0x3fd3cc85be6ccab0
.dword 0xbfbbab301388772c
.dword 0x3fa11e7b823bdc60
.dword 0x3fd3cc85be6ccab0
.dword 0xbfbbab301388772c
.dword 0x3fa11e7b823bdc60
.dword 0x3fd3cc85be6ccab0
.dword 0xbfbbab301388772c
.dword 0x3fa11e7b823bdc60
.dword 0x3fd3cc85be6ccab0
.dword 0xbfbbab301388772c
.dword 0x3fa11e7b823bdc60
.dword 0x3fd3cc85be6ccab0
.dword 0xbfbbab301388772c
.dword 0x3fa11e7b823bdc60
.dword 0x3fe972723b45f8a7
.dword 0xbfb3004ea9935aae
.dword 0x3fae3864c2032a80
.dword 0x3fe972723b45f8a7
.dword 0xbfb3004ea9935aae
.dword 0x3fae3864c2032a80
.dword 0x3fe972723b45f8a7
.dword 0xbfb3004ea9935aae
.dword 0x3fae3864c2032a80
.dword 0x3fe972723b45f8a7
.dword 0xbfb3004ea9935aae
.dword 0x3fae3864c2032a80
.dword 0x3fe972723b45f8a7
.dword 0xbfb3004ea9935aae
.dword 0x3fae3864c2032a80
.dword 0x3fdd7d5cd8fdb55c
.dword 0xbfe65fbff97bf2d8
.dword 0x3fd49e6ceafe812c
.dword 0x3fdd7d5cd8fdb55c
.dword 0xbfe65fbff97bf2d8
.dword 0x3fd49e6ceafe812c
.dword 0x3fdd7d5cd8fdb55c
.dword 0xbfe65fbff97bf2d8
.dword 0x3fd49e6ceafe812c
.dword 0x3fdd7d5cd8fdb55c
.dword 0xbfe65fbff97bf2d8
.dword 0x3fd49e6ceafe812c
.dword 0x3fdd7d5cd8fdb55c
.dword 0xbfe65fbff97bf2d8
.dword 0x3fd49e6ceafe812c
.dword 0x3fe6be0316bed22e
.dword 0xbfabc089385d1cd0
.dword 0x3fa3b928334565c0
.dword 0x3fe6be0316bed22e
.dword 0xbfabc089385d1cd0
.dword 0x3fa3b928334565c0
.dword 0x3fe6be0316bed22e
.dword 0xbfabc089385d1cd0
.dword 0x3fa3b928334565c0
.dword 0x3fe6be0316bed22e
.dword 0xbfabc089385d1cd0
.dword 0x3fa3b928334565c0
.dword 0x3fe6be0316bed22e
.dword 0xbfabc089385d1cd0
.dword 0x3fa3b928334565c0
.dword 0x3f9200336ac53760
.dword 0xc01d087661bd3cab
.dword 0x3fc054f13d561460
.dword 0x3f9200336ac53760
.dword 0xc01d087661bd3cab
.dword 0x3fc054f13d561460
.dword 0x3f9200336ac53760
.dword 0xc01d087661bd3cab
.dword 0x3fc054f13d561460
.dword 0x3f9200336ac53760
.dword 0xc01d087661bd3cab
.dword 0x3fc054f13d561460
.dword 0x3f9200336ac53760
.dword 0xc01d087661bd3cab
.dword 0x3fc054f13d561460
.dword 0x3fe94c2220e7d70e
.dword 0xbfefc191763aad26
.dword 0x3fe91ac73c28d472
.dword 0x3fe94c2220e7d70e
.dword 0xbfefc191763aad26
.dword 0x3fe91ac73c28d472
.dword 0x3fe94c2220e7d70e
.dword 0xbfefc191763aad26
.dword 0x3fe91ac73c28d472
.dword 0x3fe94c2220e7d70e
.dword 0xbfefc191763aad26
.dword 0x3fe91ac73c28d472
.dword 0x3fe94c2220e7d70e
.dword 0xbfefc191763aad26
.dword 0x3fe91ac73c28d472
.dword 0x3feff175d81c539e
.dword 0xbfc07d4d329b52bf
.dword 0x3fc075cf2fea3cc8
.dword 0x3feff175d81c539e
.dword 0xbfc07d4d329b52bf
.dword 0x3fc075cf2fea3cc8
.dword 0x3feff175d81c539e
.dword 0xbfc07d4d329b52bf
.dword 0x3fc075cf2fea3cc8
.dword 0x3feff175d81c539e
.dword 0xbfc07d4d329b52bf
.dword 0x3fc075cf2fea3cc8
.dword 0x3feff175d81c539e
.dword 0xbfc07d4d329b52bf
.dword 0x3fc075cf2fea3cc8
.dword 0x3fd87ba86c70f9fe
.dword 0xc0024349f31d5807
.dword 0x3febf214737895db
.dword 0x3fd87ba86c70f9fe
.dword 0xc0024349f31d5807
.dword 0x3febf214737895db
.dword 0x3fd87ba86c70f9fe
.dword 0xc0024349f31d5807
.dword 0x3febf214737895db
.dword 0x3fd87ba86c70f9fe
.dword 0xc0024349f31d5807
.dword 0x3febf214737895db
.dword 0x3fd87ba86c70f9fe
.dword 0xc0024349f31d5807
.dword 0x3febf214737895db
.dword 0x3fc9f7165ed95e1c
.dword 0xc010fb7e5eda3712
.dword 0x3feb8f37a1873e5c
.dword 0x3fc9f7165ed95e1c
.dword 0xc010fb7e5eda3712
.dword 0x3feb8f37a1873e5c
.dword 0x3fc9f7165ed95e1c
.dword 0xc010fb7e5eda3712
.dword 0x3feb8f37a1873e5c
.dword 0x3fc9f7165ed95e1c
.dword 0xc010fb7e5eda3712
.dword 0x3feb8f37a1873e5c
.dword 0x3fc9f7165ed95e1c
.dword 0xc010fb7e5eda3712
.dword 0x3feb8f37a1873e5c
.dword 0x3fcdfcb559c4dd64
.dword 0xc00cb2a3a0810275
.dword 0x3feae485b4f3c9d3
.dword 0x3fcdfcb559c4dd64
.dword 0xc00cb2a3a0810275
.dword 0x3feae485b4f3c9d3
.dword 0x3fcdfcb559c4dd64
.dword 0xc00cb2a3a0810275
.dword 0x3feae485b4f3c9d3
.dword 0x3fcdfcb559c4dd64
.dword 0xc00cb2a3a0810275
.dword 0x3feae485b4f3c9d3
.dword 0x3fcdfcb559c4dd64
.dword 0xc00cb2a3a0810275
.dword 0x3feae485b4f3c9d3
.dword 0x3fe70e7aff458df6
.dword 0xbfbdb8f5b589dae8
.dword 0x3fb56a63c43dc670
.dword 0x3fe70e7aff458df6
.dword 0xbfbdb8f5b589dae8
.dword 0x3fb56a63c43dc670
.dword 0x3fe70e7aff458df6
.dword 0xbfbdb8f5b589dae8
.dword 0x3fb56a63c43dc670
.dword 0x3fe70e7aff458df6
.dword 0xbfbdb8f5b589dae8
.dword 0x3fb56a63c43dc670
.dword 0x3fe70e7aff458df6
.dword 0xbfbdb8f5b589dae8
.dword 0x3fb56a63c43dc670
.dword 0x3fef94918d134494
.dword 0xbfe965d0c5a7379c
.dword 0x3fe9108caa5e0da7
.dword 0x3fef94918d134494
.dword 0xbfe965d0c5a7379c
.dword 0x3fe9108caa5e0da7
.dword 0x3fef94918d134494
.dword 0xbfe965d0c5a7379c
.dword 0x3fe9108caa5e0da7
.dword 0x3fef94918d134494
.dword 0xbfe965d0c5a7379c
.dword 0x3fe9108caa5e0da7
.dword 0x3fef94918d134494
.dword 0xbfe965d0c5a7379c
.dword 0x3fe9108caa5e0da7
.dword 0x3fdd3305a72f280c
.dword 0xbfede218e4487790
.dword 0x3fdb448c2e015ee6
.dword 0x3fdd3305a72f280c
.dword 0xbfede218e4487790
.dword 0x3fdb448c2e015ee6
.dword 0x3fdd3305a72f280c
.dword 0xbfede218e4487790
.dword 0x3fdb448c2e015ee6
.dword 0x3fdd3305a72f280c
.dword 0xbfede218e4487790
.dword 0x3fdb448c2e015ee6
.dword 0x3fdd3305a72f280c
.dword 0xbfede218e4487790
.dword 0x3fdb448c2e015ee6
.dword 0x3fe0fd62e886b63c
.dword 0xbff6b480bb5aa10e
.dword 0x3fe81c134a7a1a99
.dword 0x3fe0fd62e886b63c
.dword 0xbff6b480bb5aa10e
.dword 0x3fe81c134a7a1a99
.dword 0x3fe0fd62e886b63c
.dword 0xbff6b480bb5aa10e
.dword 0x3fe81c134a7a1a99
.dword 0x3fe0fd62e886b63c
.dword 0xbff6b480bb5aa10e
.dword 0x3fe81c134a7a1a99
.dword 0x3fe0fd62e886b63c
.dword 0xbff6b480bb5aa10e
.dword 0x3fe81c134a7a1a99
.dword 0x3fb95e95dafb12f0
.dword 0xc021e5a48cfb762f
.dword 0x3fec609de283489b
.dword 0x3fb95e95dafb12f0
.dword 0xc021e5a48cfb762f
.dword 0x3fec609de283489b
.dword 0x3fb95e95dafb12f0
.dword 0xc021e5a48cfb762f
.dword 0x3fec609de283489b
.dword 0x3fb95e95dafb12f0
.dword 0xc021e5a48cfb762f
.dword 0x3fec609de283489b
.dword 0x3fb95e95dafb12f0
.dword 0xc021e5a48cfb762f
.dword 0x3fec609de283489b
.dword 0x3fad0059300f8580
.dword 0xc018c9daddbbe458
.dword 0x3fd677336f95cdf8
.dword 0x3fad0059300f8580
.dword 0xc018c9daddbbe458
.dword 0x3fd677336f95cdf8
.dword 0x3fad0059300f8580
.dword 0xc018c9daddbbe458
.dword 0x3fd677336f95cdf8
.dword 0x3fad0059300f8580
.dword 0xc018c9daddbbe458
.dword 0x3fd677336f95cdf8
.dword 0x3fad0059300f8580
.dword 0xc018c9daddbbe458
.dword 0x3fd677336f95cdf8
.dword 0x3fef1263a0a37bc9
.dword 0xbfe19c62cf93ac7c
.dword 0x3fe1199e84e56b1f
.dword 0x3fef1263a0a37bc9
.dword 0xbfe19c62cf93ac7c
.dword 0x3fe1199e84e56b1f
.dword 0x3fef1263a0a37bc9
.dword 0xbfe19c62cf93ac7c
.dword 0x3fe1199e84e56b1f
.dword 0x3fef1263a0a37bc9
.dword 0xbfe19c62cf93ac7c
.dword 0x3fe1199e84e56b1f
.dword 0x3fef1263a0a37bc9
.dword 0xbfe19c62cf93ac7c
.dword 0x3fe1199e84e56b1f
.dword 0x3fd0a58072c8a39c
.dword 0xbfd31ccfc0f8e772
.dword 0x3fb3e2824f09e9e0
.dword 0x3fd0a58072c8a39c
.dword 0xbfd31ccfc0f8e772
.dword 0x3fb3e2824f09e9e0
.dword 0x3fd0a58072c8a39c
.dword 0xbfd31ccfc0f8e772
.dword 0x3fb3e2824f09e9e0
.dword 0x3fd0a58072c8a39c
.dword 0xbfd31ccfc0f8e772
.dword 0x3fb3e2824f09e9e0
.dword 0x3fd0a58072c8a39c
.dword 0xbfd31ccfc0f8e772
.dword 0x3fb3e2824f09e9e0
.dword 0x3fca3718e4f3ee04
.dword 0xbfd1fbd528cfeace
.dword 0x3fad77280a24af40
.dword 0x3fca3718e4f3ee04
.dword 0xbfd1fbd528cfeace
.dword 0x3fad77280a24af40
.dword 0x3fca3718e4f3ee04
.dword 0xbfd1fbd528cfeace
.dword 0x3fad77280a24af40
.dword 0x3fca3718e4f3ee04
.dword 0xbfd1fbd528cfeace
.dword 0x3fad77280a24af40
.dword 0x3fca3718e4f3ee04
.dword 0xbfd1fbd528cfeace
.dword 0x3fad77280a24af40
.dword 0x3fd82260edf4d940
.dword 0xbfe5e95cba1d1005
.dword 0x3fd0868fdd21b824
.dword 0x3fd82260edf4d940
.dword 0xbfe5e95cba1d1005
.dword 0x3fd0868fdd21b824
.dword 0x3fd82260edf4d940
.dword 0xbfe5e95cba1d1005
.dword 0x3fd0868fdd21b824
.dword 0x3fd82260edf4d940
.dword 0xbfe5e95cba1d1005
.dword 0x3fd0868fdd21b824
.dword 0x3fd82260edf4d940
.dword 0xbfe5e95cba1d1005
.dword 0x3fd0868fdd21b824
.dword 0x3fe6dd02a7dd25bd
.dword 0xbff4f8ae07f138cd
.dword 0x3fedf79da9d497c6
.dword 0x3fe6dd02a7dd25bd
.dword 0xbff4f8ae07f138cd
.dword 0x3fedf79da9d497c6
.dword 0x3fe6dd02a7dd25bd
.dword 0xbff4f8ae07f138cd
.dword 0x3fedf79da9d497c6
.dword 0x3fe6dd02a7dd25bd
.dword 0xbff4f8ae07f138cd
.dword 0x3fedf79da9d497c6
.dword 0x3fe798d8a20255fa
.dword 0xbfdc210c4a7fcf65
.dword 0x3fd4be1c3d6a0ee6
.dword 0x3fe798d8a20255fa
.dword 0xbfdc210c4a7fcf65
.dword 0x3fd4be1c3d6a0ee6
.dword 0x3fede3e91ec63360
.dword 0xbfec74dcf8fe2356
.dword 0x3fea94948f735fbb
RVTEST_DATA_END

RVMODEL_DATA_BEGIN


signature_x15_0:
    .fill 0*(XLEN/32),4,0xdeadbeef


signature_x15_1:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_2:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_3:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_4:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_5:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_6:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_7:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_8:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_9:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_10:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_11:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_12:
    .fill 162*(XLEN/32),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*(XLEN/32),4,0xdeadbeef

#endif

RVMODEL_DATA_END
