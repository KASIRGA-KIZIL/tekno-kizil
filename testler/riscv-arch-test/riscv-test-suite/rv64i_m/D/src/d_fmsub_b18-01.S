
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.5.6
// timestamp : Mon Sep 20 11:14:00 2021 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/compliance_fd/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /scratch/compliance_fd/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV64D/rv64d_fmsub1.cgf \
 \
//                  -- xlen 64  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2021. IIT Madras. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.d instruction of the RISC-V FD extension for the fmsub_b18 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV64IFD")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*64.*);check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",d_fmsub_b18)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x16,test_fp)
RVTEST_SIGBASE(x15,signature_x15_1)

inst_0:
// rs1 == rd != rs2 and rs1 == rd != rs3 and rs3 != rs2, rs1==f22, rs2==f23, rs3==f21, rd==f22, fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe97d52f73d2ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f22; op2:f23; op3:f21; dest:f22; op1val:0x7fee97d52f73d2ed; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f22, f22, f23, f21, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_1:
// rs1 == rs3 != rs2 and rs1 == rs3 != rd and rd != rs2, rs1==f24, rs2==f28, rs3==f24, rd==f27, fs1 == 0 and fe1 == 0x7fc and fm1 == 0x0732dff952787 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f24; op2:f28; op3:f24; dest:f27; op1val:0x7fc0732dff952787; op2val:0x8000; op3val:0x7fc0732dff952787; valaddr_reg:x16; val_offset:24; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f27, f24, f28, f24, 0x0, 0, x16, 24, x17, x15, 16, x18)

inst_2:
// rs2 == rs3 != rs1 and rs2 == rs3 != rd and rd != rs1, rs1==f6, rs2==f27, rs3==f27, rd==f10, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4bd16a0267938 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f6; op2:f27; op3:f27; dest:f10; op1val:0x7fe4bd16a0267938; op2val:0x8000; op3val:0x8000; valaddr_reg:x16; val_offset:48; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f10, f6, f27, f27, 0x0, 0, x16, 48, x17, x15, 32, x18)

inst_3:
// rs1 != rs2 and rs1 != rd and rs1 != rs3 and rs2 != rs3 and rs2 != rd and rs3 != rd, rs1==f18, rs2==f26, rs3==f7, rd==f3, fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfa2ea1f3d3ef9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f18; op2:f26; op3:f7; dest:f3; op1val:0x7fefa2ea1f3d3ef9; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:72; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f3, f18, f26, f7, 0x0, 0, x16, 72, x17, x15, 48, x18)

inst_4:
// rs2 == rd != rs1 and rs2 == rd != rs3 and rs3 != rs1, rs1==f29, rs2==f5, rs3==f25, rd==f5, fs1 == 0 and fe1 == 0x7fe and fm1 == 0xca7f05ab9b50e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f29; op2:f5; op3:f25; dest:f5; op1val:0x7feca7f05ab9b50e; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:96; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f5, f29, f5, f25, 0x0, 0, x16, 96, x17, x15, 64, x18)

inst_5:
// rs1 == rs2 != rs3 and rs1 == rs2 != rd and rd != rs3, rs1==f21, rs2==f21, rs3==f3, rd==f19, fs1 == 0 and fe1 == 0x7fb and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f21; op2:f21; op3:f3; dest:f19; op1val:0x7fb60de25d29e92f; op2val:0x7fb60de25d29e92f; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f19, f21, f21, f3, 0x0, 0, x16, 120, x17, x15, 80, x18)

inst_6:
// rs1 == rd == rs3 != rs2, rs1==f12, rs2==f16, rs3==f12, rd==f12, fs1 == 0 and fe1 == 0x7fb and fm1 == 0x11c62f98de3bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f12; op2:f16; op3:f12; dest:f12; op1val:0x7fb11c62f98de3bf; op2val:0x8000; op3val:0x7fb11c62f98de3bf; valaddr_reg:x16; val_offset:144; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f12, f12, f16, f12, 0x0, 0, x16, 144, x17, x15, 96, x18)

inst_7:
// rd == rs2 == rs3 != rs1, rs1==f16, rs2==f6, rs3==f6, rd==f6, fs1 == 0 and fe1 == 0x7fd and fm1 == 0xaac53df2f85fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f16; op2:f6; op3:f6; dest:f6; op1val:0x7fdaac53df2f85fd; op2val:0x8000; op3val:0x8000; valaddr_reg:x16; val_offset:168; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f6, f16, f6, f6, 0x0, 0, x16, 168, x17, x15, 112, x18)

inst_8:
// rs1 == rs2 == rs3 == rd, rs1==f31, rs2==f31, rs3==f31, rd==f31, fs1 == 0 and fe1 == 0x7fc and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f31; op2:f31; op3:f31; dest:f31; op1val:0x7fc2c08bdce69f77; op2val:0x7fc2c08bdce69f77; op3val:0x7fc2c08bdce69f77; valaddr_reg:x16; val_offset:192; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f31, f31, f31, f31, 0x0, 0, x16, 192, x17, x15, 128, x18)

inst_9:
// rs1 == rs2 == rs3 != rd, rs1==f14, rs2==f14, rs3==f14, rd==f13, fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfed8d422e59b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f14; op2:f14; op3:f14; dest:f13; op1val:0x7fefed8d422e59b9; op2val:0x7fefed8d422e59b9; op3val:0x7fefed8d422e59b9; valaddr_reg:x16; val_offset:216; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f14, f14, f14, 0x0, 0, x16, 216, x17, x15, 144, x18)

inst_10:
// rs1 == rs2 == rd != rs3, rs1==f8, rs2==f8, rs3==f28, rd==f8, fs1 == 0 and fe1 == 0x7fd and fm1 == 0x6c9a44168b923 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f8; op2:f8; op3:f28; dest:f8; op1val:0x7fd6c9a44168b923; op2val:0x7fd6c9a44168b923; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f8, f8, f8, f28, 0x0, 0, x16, 240, x17, x15, 160, x18)

inst_11:
// rs3 == rd != rs1 and rs3 == rd != rs2 and rs2 != rs1, rs1==f10, rs2==f13, rs3==f9, rd==f9, fs1 == 0 and fe1 == 0x7fb and fm1 == 0x89000c246f107 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f13; op3:f9; dest:f9; op1val:0x7fb89000c246f107; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:264; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f9, f10, f13, f9, 0x0, 0, x16, 264, x17, x15, 176, x18)

inst_12:
// rs1==f23, rs2==f9, rs3==f18, rd==f7, fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f23; op2:f9; op3:f18; dest:f7; op1val:0x7fea2bda964d91ae; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:288; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f7, f23, f9, f18, 0x0, 0, x16, 288, x17, x15, 192, x18)

inst_13:
// rs1==f20, rs2==f0, rs3==f26, rd==f2, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2bfb292e944a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f20; op2:f0; op3:f26; dest:f2; op1val:0x7fe2bfb292e944a1; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:312; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f2, f20, f0, f26, 0x0, 0, x16, 312, x17, x15, 208, x18)

inst_14:
// rs1==f26, rs2==f25, rs3==f16, rd==f30, fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd65025c565597 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f26; op2:f25; op3:f16; dest:f30; op1val:0x7fed65025c565597; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:336; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f30, f26, f25, f16, 0x0, 0, x16, 336, x17, x15, 224, x18)

inst_15:
// rs1==f27, rs2==f29, rs3==f22, rd==f14, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f27; op2:f29; op3:f22; dest:f14; op1val:0x7fe5bb8442cbfc28; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f14, f27, f29, f22, 0x0, 0, x16, 360, x17, x15, 240, x18)

inst_16:
// rs1==f15, rs2==f12, rs3==f8, rd==f18, fs1 == 0 and fe1 == 0x7fd and fm1 == 0xb5eae2d90a071 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f15; op2:f12; op3:f8; dest:f18; op1val:0x7fdb5eae2d90a071; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:384; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f18, f15, f12, f8, 0x0, 0, x16, 384, x17, x15, 256, x18)

inst_17:
// rs1==f7, rs2==f15, rs3==f11, rd==f1, fs1 == 0 and fe1 == 0x7fd and fm1 == 0x09a18dc6373ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f7; op2:f15; op3:f11; dest:f1; op1val:0x7fd09a18dc6373ff; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:408; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f1, f7, f15, f11, 0x0, 0, x16, 408, x17, x15, 272, x18)

inst_18:
// rs1==f25, rs2==f10, rs3==f1, rd==f29, fs1 == 0 and fe1 == 0x7fd and fm1 == 0xf4853a4c5bef9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f25; op2:f10; op3:f1; dest:f29; op1val:0x7fdf4853a4c5bef9; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:432; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f29, f25, f10, f1, 0x0, 0, x16, 432, x17, x15, 288, x18)

inst_19:
// rs1==f17, rs2==f7, rs3==f19, rd==f28, fs1 == 0 and fe1 == 0x7fc and fm1 == 0xda5f722809cc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f17; op2:f7; op3:f19; dest:f28; op1val:0x7fcda5f722809cc7; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:456; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f28, f17, f7, f19, 0x0, 0, x16, 456, x17, x15, 304, x18)

inst_20:
// rs1==f1, rs2==f17, rs3==f15, rd==f11, fs1 == 0 and fe1 == 0x7fd and fm1 == 0x2fe2d0b2849b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f1; op2:f17; op3:f15; dest:f11; op1val:0x7fd2fe2d0b2849b1; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f11, f1, f17, f15, 0x0, 0, x16, 480, x17, x15, 320, x18)

inst_21:
// rs1==f13, rs2==f1, rs3==f30, rd==f25, fs1 == 0 and fe1 == 0x7fe and fm1 == 0xac08ec2b88c86 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f13; op2:f1; op3:f30; dest:f25; op1val:0x7feac08ec2b88c86; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:504; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f25, f13, f1, f30, 0x0, 0, x16, 504, x17, x15, 336, x18)

inst_22:
// rs1==f2, rs2==f18, rs3==f0, rd==f16, fs1 == 0 and fe1 == 0x7fe and fm1 == 0xdd3629df7eeb5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f2; op2:f18; op3:f0; dest:f16; op1val:0x7fedd3629df7eeb5; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:528; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f16, f2, f18, f0, 0x0, 0, x16, 528, x17, x15, 352, x18)

inst_23:
// rs1==f30, rs2==f4, rs3==f5, rd==f15, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9bd3c29ad0568 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f30; op2:f4; op3:f5; dest:f15; op1val:0x7fe9bd3c29ad0568; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:552; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f15, f30, f4, f5, 0x0, 0, x16, 552, x17, x15, 368, x18)

inst_24:
// rs1==f28, rs2==f11, rs3==f17, rd==f4, fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f28; op2:f11; op3:f17; dest:f4; op1val:0x7fee8ce066e96229; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:576; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f4, f28, f11, f17, 0x0, 0, x16, 576, x17, x15, 384, x18)

inst_25:
// rs1==f19, rs2==f22, rs3==f23, rd==f24, fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe9055e5c1a1c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f19; op2:f22; op3:f23; dest:f24; op1val:0x7fde9055e5c1a1c1; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f24, f19, f22, f23, 0x0, 0, x16, 600, x17, x15, 400, x18)

inst_26:
// rs1==f3, rs2==f30, rs3==f2, rd==f0, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0d77af376928b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f3; op2:f30; op3:f2; dest:f0; op1val:0x7fe0d77af376928b; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:624; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f0, f3, f30, f2, 0x0, 0, x16, 624, x17, x15, 416, x18)

inst_27:
// rs1==f0, rs2==f2, rs3==f13, rd==f23, fs1 == 0 and fe1 == 0x7fd and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f0; op2:f2; op3:f13; dest:f23; op1val:0x7fd1365a93dfa50f; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:648; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f23, f0, f2, f13, 0x0, 0, x16, 648, x17, x15, 432, x18)

inst_28:
// rs1==f4, rs2==f3, rs3==f10, rd==f20, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x98f219d7fe90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f4; op2:f3; op3:f10; dest:f20; op1val:0x7fe98f219d7fe90f; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:672; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f20, f4, f3, f10, 0x0, 0, x16, 672, x17, x15, 448, x18)

inst_29:
// rs1==f5, rs2==f24, rs3==f29, rd==f26, fs1 == 0 and fe1 == 0x7fd and fm1 == 0xd4012b921b92d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f5; op2:f24; op3:f29; dest:f26; op1val:0x7fdd4012b921b92d; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:696; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f26, f5, f24, f29, 0x0, 0, x16, 696, x17, x15, 464, x18)

inst_30:
// rs1==f11, rs2==f20, rs3==f4, rd==f17, fs1 == 0 and fe1 == 0x7fd and fm1 == 0x6e2aa97ad4287 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f11; op2:f20; op3:f4; dest:f17; op1val:0x7fd6e2aa97ad4287; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f17, f11, f20, f4, 0x0, 0, x16, 720, x17, x15, 480, x18)

inst_31:
// rs1==f9, rs2==f19, rs3==f20, rd==f21, fs1 == 0 and fe1 == 0x7fd and fm1 == 0xfde67aa537639 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f9; op2:f19; op3:f20; dest:f21; op1val:0x7fdfde67aa537639; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:744; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f21, f9, f19, f20, 0x0, 0, x16, 744, x17, x15, 496, x18)

inst_32:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7270fced2be29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe7270fced2be29; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:768; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 768, x17, x15, 512, x18)

inst_33:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x4961eaabdb7c7 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xffffffffffffe and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe8deeb902c377e; op2val:0x3ff4961eaabdb7c7; op3val:0x7feffffffffffffe; valaddr_reg:x16; val_offset:792; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 792, x17, x15, 528, x18)

inst_34:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x517d601e1a9d8 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x845f8f359b61a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xfffffffffffff and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe517d601e1a9d8; op2val:0x3ff845f8f359b61a; op3val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:816; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 816, x17, x15, 544, x18)

inst_35:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0x942c54f20963f and fs2 == 0 and fe2 == 0x404 and fm2 == 0x444bf05fc8dc2 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xffffffffffffe and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f9942c54f20963f; op2val:0x404444bf05fc8dc2; op3val:0x7feffffffffffffe; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 560, x18)

inst_36:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x7197fb1078d83 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xfffffffffffff and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe62a35ac6bee41; op2val:0x3ff7197fb1078d83; op3val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:864; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 864, x17, x15, 576, x18)

inst_37:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xeb59ad8d9191d and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x0ac23e5ea5f16 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xffffffffffffe and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feeb59ad8d9191d; op2val:0x3ff0ac23e5ea5f16; op3val:0x7feffffffffffffe; valaddr_reg:x16; val_offset:888; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 888, x17, x15, 592, x18)

inst_38:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x48300cd907da9 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x8f619725da69b and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xfffffffffffff and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe48300cd907da9; op2val:0x3ff8f619725da69b; op3val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:912; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 912, x17, x15, 608, x18)

inst_39:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb33c7d55682c1 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x2d26bf8be5ad6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xffffffffffffe and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feb33c7d55682c1; op2val:0x3ff2d26bf8be5ad6; op3val:0x7feffffffffffffe; valaddr_reg:x16; val_offset:936; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 936, x17, x15, 624, x18)

inst_40:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x49c59b3bab527 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x8d766d9988549 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xfffffffffffff and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb49c59b3bab527; op2val:0x4028d766d9988549; op3val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 640, x18)

inst_41:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xf2c5343ef46b7 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x06ca508af30d6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xffffffffffffe and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbf2c5343ef46b7; op2val:0x40206ca508af30d6; op3val:0x7feffffffffffffe; valaddr_reg:x16; val_offset:984; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 984, x17, x15, 656, x18)

inst_42:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xf29a9c82218e7 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x06e0c3619b0dc and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xfffffffffffff and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbf29a9c82218e7; op2val:0x40206e0c3619b0dc; op3val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:1008; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1008, x17, x15, 672, x18)

inst_43:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x948609719fe17 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x4404064c838b4 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xffffffffffffe and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd948609719fe17; op2val:0x4004404064c838b4; op3val:0x7feffffffffffffe; valaddr_reg:x16; val_offset:1032; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1032, x17, x15, 688, x18)

inst_44:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x81d54dd6137b5 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x53b627ff3cd41 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xfffffffffffff and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe81d54dd6137b5; op2val:0x3ff53b627ff3cd41; op3val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:1056; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1056, x17, x15, 704, x18)

inst_45:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xda577e11e08d7 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x1452efa7a9aec and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xffffffffffffe and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdda577e11e08d7; op2val:0x4001452efa7a9aec; op3val:0x7feffffffffffffe; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 720, x18)

inst_46:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x912f07dba36b5 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x46b691d85ed50 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xfffffffffffff and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd912f07dba36b5; op2val:0x40046b691d85ed50; op3val:0x7fefffffffffffff; valaddr_reg:x16; val_offset:1104; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1104, x17, x15, 736, x18)

inst_47:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x24a28f97e5b1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe24a28f97e5b1f; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1128; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1128, x17, x15, 752, x18)

inst_48:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc89f3951da2feb; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1152; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1152, x17, x15, 768, x18)

inst_49:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x828d471f63750 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe828d471f63750; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1176; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1176, x17, x15, 784, x18)

inst_50:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x398aa070366df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb398aa070366df; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 800, x18)

inst_51:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xdedbc42e4ee38 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fededbc42e4ee38; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1224; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1224, x17, x15, 816, x18)

inst_52:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7dda0ca725279 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd7dda0ca725279; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1248; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1248, x17, x15, 832, x18)

inst_53:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x232f190317157 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd232f190317157; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1272; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1272, x17, x15, 848, x18)

inst_54:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x2e3db402ba61f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb2e3db402ba61f; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1296; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1296, x17, x15, 864, x18)

inst_55:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2d6ffe274482f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe2d6ffe274482f; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 880, x18)

inst_56:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xaa7d58e3b9047 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcaa7d58e3b9047; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1344; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1344, x17, x15, 896, x18)

inst_57:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdf1860e3b4eb81; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1368; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1368, x17, x15, 912, x18)

inst_58:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xa487d2d192e03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fda487d2d192e03; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1392; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1392, x17, x15, 928, x18)

inst_59:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xce41f387adc6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdce41f387adc6f; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1416; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1416, x17, x15, 944, x18)

inst_60:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0x0197267f1985f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f90197267f1985f; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 960, x18)

inst_61:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x585b5334d3411 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe585b5334d3411; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1464; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1464, x17, x15, 976, x18)

inst_62:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xae64a7b19f21e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feae64a7b19f21e; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1488; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1488, x17, x15, 992, x18)

inst_63:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x3943b61964e33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd3943b61964e33; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1512; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1512, x17, x15, 1008, x18)

inst_64:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x9e5bea35c4b97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb9e5bea35c4b97; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1536; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1536, x17, x15, 1024, x18)

inst_65:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5ee10a5a625fc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe5ee10a5a625fc; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1040, x18)

inst_66:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0x3832e6fea9a3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f93832e6fea9a3f; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1584; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1584, x17, x15, 1056, x18)

inst_67:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7d28ffa77589f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd7d28ffa77589f; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1608; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1608, x17, x15, 1072, x18)

inst_68:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf79012fbad378 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef79012fbad378; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1632; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1632, x17, x15, 1088, x18)

inst_69:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x2887dc585eda5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd2887dc585eda5; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1656; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1656, x17, x15, 1104, x18)

inst_70:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3894cf9774745 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3894cf9774745; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1120, x18)

inst_71:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd7c8570796fe8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fed7c8570796fe8; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1704; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1704, x17, x15, 1136, x18)

inst_72:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe09d5da3d7b9db; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1728; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1728, x17, x15, 1152, x18)

inst_73:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x76f8ee027e6a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd76f8ee027e6a3; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1752; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1752, x17, x15, 1168, x18)

inst_74:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9af59f9eb5168 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9af59f9eb5168; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1776; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1776, x17, x15, 1184, x18)

inst_75:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb802693539b05f; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1200, x18)

inst_76:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x73261febad82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc73261febad82f; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1824; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1824, x17, x15, 1216, x18)

inst_77:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0cd5422534b0d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0cd5422534b0d; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1848; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1848, x17, x15, 1232, x18)

inst_78:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xac0c7cf6e58fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdac0c7cf6e58fb; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1872; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1872, x17, x15, 1248, x18)

inst_79:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0xa3b70b86976df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7faa3b70b86976df; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1896; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1896, x17, x15, 1264, x18)

inst_80:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2982d565d88fc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe2982d565d88fc; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1280, x18)

inst_81:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe05e381015d598; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1944; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1944, x17, x15, 1296, x18)

inst_82:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xbc24bb367a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdbc24bb367a06b; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1968; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1968, x17, x15, 1312, x18)

inst_83:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7536733396cf8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe7536733396cf8; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1992; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1992, x17, x15, 1328, x18)

inst_84:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xed1da04d72f12 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feed1da04d72f12; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:2016; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 2016, x17, x15, 1344, x18)
addi x16,x16,2040

inst_85:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd028fbb0ac708 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fed028fbb0ac708; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 1360, x18)

inst_86:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xb318d9af479ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcb318d9af479ef; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:24; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 24, x17, x15, 1376, x18)

inst_87:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x48949a9851f6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe48949a9851f6d; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:48; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 48, x17, x15, 1392, x18)

inst_88:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x3d28d4c48c5b3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd3d28d4c48c5b3; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:72; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 72, x17, x15, 1408, x18)

inst_89:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xdb8c7d3a18027 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fddb8c7d3a18027; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:96; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 96, x17, x15, 1424, x18)

inst_90:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0a9df4ead8eb3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0a9df4ead8eb3; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 1440, x18)

inst_91:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xbd23e70641b4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcbd23e70641b4b; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:144; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 144, x17, x15, 1456, x18)

inst_92:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xda2a011aeffab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcda2a011aeffab; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:168; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 168, x17, x15, 1472, x18)

inst_93:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x743ea0c02659b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc743ea0c02659b; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:192; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 192, x17, x15, 1488, x18)

inst_94:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x98abaa0a23757 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb98abaa0a23757; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:216; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 216, x17, x15, 1504, x18)

inst_95:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xed4ae61a16dab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fced4ae61a16dab; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 1520, x18)

inst_96:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7291f0459edd6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe7291f0459edd6; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:264; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 264, x17, x15, 1536, x18)

inst_97:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xc75f67062f96f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbc75f67062f96f; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:288; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 288, x17, x15, 1552, x18)

inst_98:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xa2892d94829ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fda2892d94829ad; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:312; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 312, x17, x15, 1568, x18)

inst_99:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x22cfa989fca0f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fa22cfa989fca0f; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:336; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 336, x17, x15, 1584, x18)

inst_100:
// fs1 == 0 and fe1 == 0x7f7 and fm1 == 0x3c3264d5f00ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f73c3264d5f00ff; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 1600, x18)

inst_101:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0d68c4b00b1ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0d68c4b00b1ad; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:384; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 384, x17, x15, 1616, x18)

inst_102:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdb12b5923ada87; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:408; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 408, x17, x15, 1632, x18)

inst_103:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x06c495d79fae9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd06c495d79fae9; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:432; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 432, x17, x15, 1648, x18)

inst_104:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6b435c9707703 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe6b435c9707703; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:456; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 456, x17, x15, 1664, x18)

inst_105:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x99b4caa7ee21f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe99b4caa7ee21f; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1680, x18)

inst_106:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3f926e32a94e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3f926e32a94e1; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:504; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 504, x17, x15, 1696, x18)

inst_107:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2eb6a94e9ae19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe2eb6a94e9ae19; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:528; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 528, x17, x15, 1712, x18)

inst_108:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x00ccac0a4b811 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd00ccac0a4b811; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:552; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 552, x17, x15, 1728, x18)

inst_109:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc75ec5096a027 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdc75ec5096a027; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:576; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 576, x17, x15, 1744, x18)

inst_110:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xdc1b3eb6c004b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcdc1b3eb6c004b; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1760, x18)

inst_111:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfd32694fcaecb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fefd32694fcaecb; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:624; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 624, x17, x15, 1776, x18)

inst_112:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xde465442027aa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fede465442027aa; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:648; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 648, x17, x15, 1792, x18)

inst_113:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf788de2d51675 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef788de2d51675; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:672; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 672, x17, x15, 1808, x18)

inst_114:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x043a8c3aa6439 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe043a8c3aa6439; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:696; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 696, x17, x15, 1824, x18)

inst_115:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe4528a44ed36fb; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1840, x18)

inst_116:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x88b104e822b8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb88b104e822b8f; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:744; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 744, x17, x15, 1856, x18)

inst_117:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc4a10e22bb3b33; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:768; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 768, x17, x15, 1872, x18)

inst_118:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x12e48c86dcddf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fa12e48c86dcddf; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:792; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 792, x17, x15, 1888, x18)

inst_119:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0xd126610309c1f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fad126610309c1f; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:816; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 816, x17, x15, 1904, x18)

inst_120:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x1fe2d6aba9e77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc1fe2d6aba9e77; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1920, x18)

inst_121:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1daba37d60414 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe1daba37d60414; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:864; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 864, x17, x15, 1936, x18)

inst_122:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0x2774cd9885b7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f92774cd9885b7f; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:888; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 888, x17, x15, 1952, x18)

inst_123:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdadd465d39fd03; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:912; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 912, x17, x15, 1968, x18)

inst_124:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x364fd8fe1fae1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe364fd8fe1fae1; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:936; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 936, x17, x15, 1984, x18)

inst_125:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x095092a183e33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd095092a183e33; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 2000, x18)

inst_126:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feeb61e2d5d3c7a; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:984; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 984, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_2)

inst_127:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x26900fdfdb837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc26900fdfdb837; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1008; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1008, x17, x15, 0, x18)

inst_128:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x07943814fd4f4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe07943814fd4f4; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1032; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1032, x17, x15, 16, x18)

inst_129:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x9262273e53737 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd9262273e53737; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1056; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1056, x17, x15, 32, x18)

inst_130:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2b7f5031fce17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe2b7f5031fce17; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 48, x18)

inst_131:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x0531d684ae65b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc0531d684ae65b; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1104; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1104, x17, x15, 64, x18)

inst_132:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xbfe0f0fcad936 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7febfe0f0fcad936; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1128; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1128, x17, x15, 80, x18)

inst_133:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xca91d064ea98b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdca91d064ea98b; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1152; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1152, x17, x15, 96, x18)

inst_134:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xa1fe3e0c64717 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fba1fe3e0c64717; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1176; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1176, x17, x15, 112, x18)

inst_135:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x43e5b36b50bcd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd43e5b36b50bcd; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 128, x18)

inst_136:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x52581cebfe497 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe52581cebfe497; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1224; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1224, x17, x15, 144, x18)

inst_137:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xcde16617ec93f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fccde16617ec93f; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1248; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1248, x17, x15, 160, x18)

inst_138:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe4204ffab96f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fde4204ffab96f7; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1272; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1272, x17, x15, 176, x18)

inst_139:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6922ff89d2373 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe6922ff89d2373; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1296; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1296, x17, x15, 192, x18)

inst_140:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb9927e27c836d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feb9927e27c836d; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 208, x18)

inst_141:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x82e62659b7f9b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe82e62659b7f9b; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1344; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1344, x17, x15, 224, x18)

inst_142:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcdd59610e46da and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fecdd59610e46da; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1368; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1368, x17, x15, 240, x18)

inst_143:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7ada4a02edef8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe7ada4a02edef8; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1392; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1392, x17, x15, 256, x18)

inst_144:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x882d3626badfd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe882d3626badfd; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1416; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1416, x17, x15, 272, x18)

inst_145:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xcb6bc2c697a91 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdcb6bc2c697a91; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 288, x18)

inst_146:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xf8ce1a7792dff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f9f8ce1a7792dff; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1464; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1464, x17, x15, 304, x18)

inst_147:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x594e913e8fb89 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd594e913e8fb89; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1488; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1488, x17, x15, 320, x18)

inst_148:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xcf5192927214f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbcf5192927214f; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1512; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1512, x17, x15, 336, x18)

inst_149:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7c23aaefd9f67 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe7c23aaefd9f67; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1536; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1536, x17, x15, 352, x18)

inst_150:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3b00ab682d289 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3b00ab682d289; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 368, x18)

inst_151:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x60763a781f969 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd60763a781f969; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1584; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1584, x17, x15, 384, x18)

inst_152:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x291d98044bfbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fa291d98044bfbf; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1608; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1608, x17, x15, 400, x18)

inst_153:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x361bbef8877ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc361bbef8877ab; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1632; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1632, x17, x15, 416, x18)

inst_154:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfae17b8fdc65b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fefae17b8fdc65b; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1656; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1656, x17, x15, 432, x18)

inst_155:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x61932b2d37baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fa61932b2d37baf; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 448, x18)

inst_156:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x8ad1c84b735e1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd8ad1c84b735e1; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1704; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1704, x17, x15, 464, x18)

inst_157:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x620bb0401fb92 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe620bb0401fb92; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1728; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1728, x17, x15, 480, x18)

inst_158:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x784c0d85e9517 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc784c0d85e9517; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1752; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1752, x17, x15, 496, x18)

inst_159:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x41c73bbc1b00b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc41c73bbc1b00b; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1776; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1776, x17, x15, 512, x18)

inst_160:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa06ffc7be6dae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fea06ffc7be6dae; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 528, x18)

inst_161:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x05d39d105b541 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd05d39d105b541; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1824; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1824, x17, x15, 544, x18)

inst_162:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0x5a7002fc1a6bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f95a7002fc1a6bf; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1848; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1848, x17, x15, 560, x18)

inst_163:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7576ff7acad59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe7576ff7acad59; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1872; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1872, x17, x15, 576, x18)

inst_164:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0x9f3f7053b60bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f99f3f7053b60bf; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1896; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1896, x17, x15, 592, x18)

inst_165:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe8bc5f44515f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fee8bc5f44515f5; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 608, x18)

inst_166:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x5392483afe847 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb5392483afe847; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1944; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1944, x17, x15, 624, x18)

inst_167:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5874b6418015b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe5874b6418015b; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1968; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1968, x17, x15, 640, x18)

inst_168:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x6003243fdf57b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc6003243fdf57b; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1992; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1992, x17, x15, 656, x18)

inst_169:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x730db0ae1ba39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd730db0ae1ba39; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:2016; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 2016, x17, x15, 672, x18)
addi x16,x16,2040

inst_170:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x051aac3a28d5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fa051aac3a28d5f; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 688, x18)

inst_171:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6f1586709a287 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe6f1586709a287; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:24; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 24, x17, x15, 704, x18)

inst_172:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xb11152f2f09c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdb11152f2f09c5; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:48; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 48, x17, x15, 720, x18)

inst_173:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc2db9cc3dd583 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec2db9cc3dd583; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:72; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 72, x17, x15, 736, x18)

inst_174:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xaf0f94f18e857 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcaf0f94f18e857; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:96; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 96, x17, x15, 752, x18)

inst_175:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xf56a77d322a6f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcf56a77d322a6f; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 768, x18)

inst_176:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb5380491038ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feb5380491038ac; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:144; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 144, x17, x15, 784, x18)

inst_177:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0b731e88bc69f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0b731e88bc69f; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:168; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 168, x17, x15, 800, x18)

inst_178:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xb343f5823cc17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbb343f5823cc17; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:192; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 192, x17, x15, 816, x18)

inst_179:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc04060fa9d235 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec04060fa9d235; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:216; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 216, x17, x15, 832, x18)

inst_180:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xd01c53aeb6daf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcd01c53aeb6daf; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 848, x18)

inst_181:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x17a774cbbcd5f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd17a774cbbcd5f; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:264; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 264, x17, x15, 864, x18)

inst_182:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4e4a35c32157e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe4e4a35c32157e; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:288; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 288, x17, x15, 880, x18)

inst_183:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0xe15a564c336ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fae15a564c336ef; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:312; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 312, x17, x15, 896, x18)

inst_184:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7d542946cb465 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe7d542946cb465; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:336; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 336, x17, x15, 912, x18)

inst_185:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x87fe27ff3fe2f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc87fe27ff3fe2f; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 928, x18)

inst_186:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd0b7f9b429ef3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fed0b7f9b429ef3; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:384; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 384, x17, x15, 944, x18)

inst_187:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x73afa00089fb9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe73afa00089fb9; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:408; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 408, x17, x15, 960, x18)

inst_188:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa40b77d5da767 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fea40b77d5da767; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:432; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 432, x17, x15, 976, x18)

inst_189:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x34bccd918d207 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb34bccd918d207; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:456; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 456, x17, x15, 992, x18)

inst_190:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3f1c99f873d3c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3f1c99f873d3c; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1008, x18)

inst_191:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xde497aebca743 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fede497aebca743; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:504; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 504, x17, x15, 1024, x18)

inst_192:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0616a9d776586 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0616a9d776586; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:528; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 528, x17, x15, 1040, x18)

inst_193:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xa99cbb7d28f8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fca99cbb7d28f8f; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:552; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 552, x17, x15, 1056, x18)

inst_194:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x3f541e5d8f1c1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd3f541e5d8f1c1; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:576; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 576, x17, x15, 1072, x18)

inst_195:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2d0716da06e3c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe2d0716da06e3c; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1088, x18)

inst_196:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4d8630276966c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe4d8630276966c; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:624; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 624, x17, x15, 1104, x18)

inst_197:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x09163be078882 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe09163be078882; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:648; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 648, x17, x15, 1120, x18)

inst_198:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x022ce6a3fae64 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe022ce6a3fae64; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:672; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 672, x17, x15, 1136, x18)

inst_199:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6993ceb530371 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe6993ceb530371; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:696; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 696, x17, x15, 1152, x18)

inst_200:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xea2b5073270ea and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feea2b5073270ea; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1168, x18)

inst_201:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x3cfe1da6d26d5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd3cfe1da6d26d5; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:744; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 744, x17, x15, 1184, x18)

inst_202:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd2a01d9eb47d0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fed2a01d9eb47d0; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:768; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 768, x17, x15, 1200, x18)

inst_203:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x1292a3e2f1241 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd1292a3e2f1241; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:792; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 792, x17, x15, 1216, x18)

inst_204:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fed0dd93a77236c; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:816; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 816, x17, x15, 1232, x18)

inst_205:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x541c57e06f28f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc541c57e06f28f; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1248, x18)

inst_206:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x662e40f571128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe662e40f571128; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:864; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 864, x17, x15, 1264, x18)

inst_207:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x4c7591e8478db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd4c7591e8478db; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:888; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 888, x17, x15, 1280, x18)

inst_208:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xc644d9f0caeeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcc644d9f0caeeb; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:912; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 912, x17, x15, 1296, x18)

inst_209:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xf2498354565a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdf2498354565a7; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:936; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 936, x17, x15, 1312, x18)

inst_210:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x72925e5d38221 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe72925e5d38221; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 1328, x18)

inst_211:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd7358d23af6fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fed7358d23af6fe; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:984; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 984, x17, x15, 1344, x18)

inst_212:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x22aa3d2e74e72 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe22aa3d2e74e72; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1008; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1008, x17, x15, 1360, x18)

inst_213:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xd81392ace6303 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdd81392ace6303; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1032; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1032, x17, x15, 1376, x18)

inst_214:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcca58e39cda56 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fecca58e39cda56; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1056; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1056, x17, x15, 1392, x18)

inst_215:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc405091d199ee and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec405091d199ee; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 1408, x18)

inst_216:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x6a6b1b54b21cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd6a6b1b54b21cf; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1104; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1104, x17, x15, 1424, x18)

inst_217:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa9bd93f2f534e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fea9bd93f2f534e; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1128; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1128, x17, x15, 1440, x18)

inst_218:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x006e3d60fc2f8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe006e3d60fc2f8; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1152; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1152, x17, x15, 1456, x18)

inst_219:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd98396dfe04dc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fed98396dfe04dc; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1176; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1176, x17, x15, 1472, x18)

inst_220:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xf5c635a3b99f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdf5c635a3b99f3; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 1488, x18)

inst_221:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0f8ac8cffe63e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0f8ac8cffe63e; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1224; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1224, x17, x15, 1504, x18)

inst_222:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xd87aff53d41f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdd87aff53d41f5; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1248; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1248, x17, x15, 1520, x18)

inst_223:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6e28422f450fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe6e28422f450fd; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1272; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1272, x17, x15, 1536, x18)

inst_224:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x820cd259975cf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe820cd259975cf; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1296; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1296, x17, x15, 1552, x18)

inst_225:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc4a1b2df4767ef; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 1568, x18)

inst_226:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xec7e479c877a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feec7e479c877a7; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1344; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1344, x17, x15, 1584, x18)

inst_227:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf6428fb6f94fe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef6428fb6f94fe; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1368; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1368, x17, x15, 1600, x18)

inst_228:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x6a47222e524ad and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd6a47222e524ad; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1392; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1392, x17, x15, 1616, x18)

inst_229:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9459cd65fbaac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9459cd65fbaac; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1416; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1416, x17, x15, 1632, x18)

inst_230:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x8698ed174ff65 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe8698ed174ff65; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 1648, x18)

inst_231:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fed02d0afa24812; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1464; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1464, x17, x15, 1664, x18)

inst_232:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x78037fa19f977 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe78037fa19f977; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1488; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1488, x17, x15, 1680, x18)

inst_233:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x97f0ea9a89f82 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe97f0ea9a89f82; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1512; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1512, x17, x15, 1696, x18)

inst_234:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec982355c85538; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1536; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1536, x17, x15, 1712, x18)

inst_235:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x746a5cfec3f67 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc746a5cfec3f67; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1728, x18)

inst_236:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x59556723d53e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe59556723d53e2; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1584; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1584, x17, x15, 1744, x18)

inst_237:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xff5373e0e112c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feff5373e0e112c; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1608; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1608, x17, x15, 1760, x18)

inst_238:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x053c0f57052f0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe053c0f57052f0; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1632; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1632, x17, x15, 1776, x18)

inst_239:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x17f4cd829a48b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc17f4cd829a48b; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1656; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1656, x17, x15, 1792, x18)

inst_240:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x4cf244963827f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd4cf244963827f; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1808, x18)

inst_241:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0x86e40969ec29f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f986e40969ec29f; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1704; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1704, x17, x15, 1824, x18)

inst_242:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xe394ab3b08c6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fce394ab3b08c6b; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1728; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1728, x17, x15, 1840, x18)

inst_243:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe1efb36cb5b1e4; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1752; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1752, x17, x15, 1856, x18)

inst_244:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0d2f778a86fa6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0d2f778a86fa6; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1776; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1776, x17, x15, 1872, x18)

inst_245:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc898a0b894837 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec898a0b894837; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1888, x18)

inst_246:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x8522a1b638e23 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd8522a1b638e23; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1824; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1824, x17, x15, 1904, x18)

inst_247:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x461bb8f43127b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd461bb8f43127b; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1848; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1848, x17, x15, 1920, x18)

inst_248:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xdc0d22f746bf5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fddc0d22f746bf5; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1872; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1872, x17, x15, 1936, x18)

inst_249:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f9c1a812e98063f; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1896; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1896, x17, x15, 1952, x18)

inst_250:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x264ac77bf010f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fa264ac77bf010f; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1968, x18)

inst_251:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x12adb3735ac6d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd12adb3735ac6d; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1944; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1944, x17, x15, 1984, x18)

inst_252:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc787db4043bd9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdc787db4043bd9; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1968; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1968, x17, x15, 2000, x18)

inst_253:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x169e5fbbe2b33 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe169e5fbbe2b33; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:1992; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 1992, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_3)

inst_254:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe61729d7cfd5e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fee61729d7cfd5e; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:2016; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 2016, x17, x15, 0, x18)
addi x16,x16,2040

inst_255:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfd58fd60948f9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fefd58fd60948f9; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 16, x18)

inst_256:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x722ea3b70e3d3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe722ea3b70e3d3; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:24; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 24, x17, x15, 32, x18)

inst_257:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x92fa0166dea3d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd92fa0166dea3d; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:48; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 48, x17, x15, 48, x18)

inst_258:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdb9017651b96db; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:72; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 72, x17, x15, 64, x18)

inst_259:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x445e3cffed91f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc445e3cffed91f; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:96; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 96, x17, x15, 80, x18)

inst_260:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x299392ab99898 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe299392ab99898; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 96, x18)

inst_261:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe36aeb78249790; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:144; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 144, x17, x15, 112, x18)

inst_262:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x363e504d94fe2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe363e504d94fe2; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:168; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 168, x17, x15, 128, x18)

inst_263:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x3b881fa033e19 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd3b881fa033e19; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:192; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 192, x17, x15, 144, x18)

inst_264:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x56e6e736a538e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe56e6e736a538e; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:216; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 216, x17, x15, 160, x18)

inst_265:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x78d10ef3c608a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe78d10ef3c608a; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 176, x18)

inst_266:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xabc6824ad2440 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feabc6824ad2440; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:264; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 264, x17, x15, 192, x18)

inst_267:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb5ba2bcb8dc85f; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:288; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 288, x17, x15, 208, x18)

inst_268:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0xcf44d05dc866f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7facf44d05dc866f; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:312; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 312, x17, x15, 224, x18)

inst_269:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe549a4f656ebe and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fee549a4f656ebe; op2val:0x0; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:336; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 336, x17, x15, 240, x18)

inst_270:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x0732dff952787 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc0732dff952787; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 256, x18)

inst_271:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4bd16a0267938 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe4bd16a0267938; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:384; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 384, x17, x15, 272, x18)

inst_272:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x60de25d29e92f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb60de25d29e92f; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:408; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 408, x17, x15, 288, x18)

inst_273:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x11c62f98de3bf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb11c62f98de3bf; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:432; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 432, x17, x15, 304, x18)

inst_274:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xaac53df2f85fd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdaac53df2f85fd; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:456; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 456, x17, x15, 320, x18)

inst_275:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x2c08bdce69f77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc2c08bdce69f77; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 336, x18)

inst_276:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfed8d422e59b9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fefed8d422e59b9; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:504; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 504, x17, x15, 352, x18)

inst_277:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x6c9a44168b923 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x463 and fm3 == 0x7ffff00000000 and rm_val == 0  
// opcode: fmsub.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd6c9a44168b923; op2val:0x8000; op3val:0xc637ffff00000000; valaddr_reg:x16; val_offset:528; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmsub.d, f13, f10, f11, f12, 0x0, 0, x16, 528, x17, x15, 368, x18)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_fp:
.dword 0x7fee97d52f73d2ed
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fc0732dff952787
.dword 0x8000
.dword 0x7fc0732dff952787
.dword 0x7fe4bd16a0267938
.dword 0x8000
.dword 0x8000
.dword 0x7fefa2ea1f3d3ef9
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7feca7f05ab9b50e
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fb60de25d29e92f
.dword 0x7fb60de25d29e92f
.dword 0xc637ffff00000000
.dword 0x7fb11c62f98de3bf
.dword 0x8000
.dword 0x7fb11c62f98de3bf
.dword 0x7fdaac53df2f85fd
.dword 0x8000
.dword 0x8000
.dword 0x7fc2c08bdce69f77
.dword 0x7fc2c08bdce69f77
.dword 0x7fc2c08bdce69f77
.dword 0x7fefed8d422e59b9
.dword 0x7fefed8d422e59b9
.dword 0x7fefed8d422e59b9
.dword 0x7fd6c9a44168b923
.dword 0x7fd6c9a44168b923
.dword 0xc637ffff00000000
.dword 0x7fb89000c246f107
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fea2bda964d91ae
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fe2bfb292e944a1
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fed65025c565597
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fe5bb8442cbfc28
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fdb5eae2d90a071
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fd09a18dc6373ff
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fdf4853a4c5bef9
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fcda5f722809cc7
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fd2fe2d0b2849b1
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7feac08ec2b88c86
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fedd3629df7eeb5
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fe9bd3c29ad0568
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fee8ce066e96229
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fde9055e5c1a1c1
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fe0d77af376928b
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fd1365a93dfa50f
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fe98f219d7fe90f
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fdd4012b921b92d
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fd6e2aa97ad4287
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fdfde67aa537639
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fe7270fced2be29
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fe8deeb902c377e
.dword 0x3ff4961eaabdb7c7
.dword 0x7feffffffffffffe
.dword 0x7fe517d601e1a9d8
.dword 0x3ff845f8f359b61a
.dword 0x7fefffffffffffff
.dword 0x7f9942c54f20963f
.dword 0x404444bf05fc8dc2
.dword 0x7feffffffffffffe
.dword 0x7fe62a35ac6bee41
.dword 0x3ff7197fb1078d83
.dword 0x7fefffffffffffff
.dword 0x7feeb59ad8d9191d
.dword 0x3ff0ac23e5ea5f16
.dword 0x7feffffffffffffe
.dword 0x7fe48300cd907da9
.dword 0x3ff8f619725da69b
.dword 0x7fefffffffffffff
.dword 0x7feb33c7d55682c1
.dword 0x3ff2d26bf8be5ad6
.dword 0x7feffffffffffffe
.dword 0x7fb49c59b3bab527
.dword 0x4028d766d9988549
.dword 0x7fefffffffffffff
.dword 0x7fbf2c5343ef46b7
.dword 0x40206ca508af30d6
.dword 0x7feffffffffffffe
.dword 0x7fbf29a9c82218e7
.dword 0x40206e0c3619b0dc
.dword 0x7fefffffffffffff
.dword 0x7fd948609719fe17
.dword 0x4004404064c838b4
.dword 0x7feffffffffffffe
.dword 0x7fe81d54dd6137b5
.dword 0x3ff53b627ff3cd41
.dword 0x7fefffffffffffff
.dword 0x7fdda577e11e08d7
.dword 0x4001452efa7a9aec
.dword 0x7feffffffffffffe
.dword 0x7fd912f07dba36b5
.dword 0x40046b691d85ed50
.dword 0x7fefffffffffffff
.dword 0x7fe24a28f97e5b1f
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fc89f3951da2feb
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fe828d471f63750
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fb398aa070366df
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fededbc42e4ee38
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fd7dda0ca725279
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fd232f190317157
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fb2e3db402ba61f
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fe2d6ffe274482f
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fcaa7d58e3b9047
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fdf1860e3b4eb81
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fda487d2d192e03
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fdce41f387adc6f
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7f90197267f1985f
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fe585b5334d3411
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7feae64a7b19f21e
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fd3943b61964e33
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fb9e5bea35c4b97
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fe5ee10a5a625fc
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7f93832e6fea9a3f
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fd7d28ffa77589f
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fef79012fbad378
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fd2887dc585eda5
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fe3894cf9774745
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fed7c8570796fe8
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fe09d5da3d7b9db
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fd76f8ee027e6a3
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fe9af59f9eb5168
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fb802693539b05f
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fc73261febad82f
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fe0cd5422534b0d
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fdac0c7cf6e58fb
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7faa3b70b86976df
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fe2982d565d88fc
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fe05e381015d598
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fdbc24bb367a06b
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fe7536733396cf8
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7feed1da04d72f12
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fed028fbb0ac708
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fcb318d9af479ef
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fe48949a9851f6d
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fd3d28d4c48c5b3
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fddb8c7d3a18027
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fe0a9df4ead8eb3
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fcbd23e70641b4b
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fcda2a011aeffab
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fc743ea0c02659b
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fb98abaa0a23757
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fced4ae61a16dab
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fe7291f0459edd6
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fbc75f67062f96f
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fda2892d94829ad
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fa22cfa989fca0f
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7f73c3264d5f00ff
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fe0d68c4b00b1ad
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fdb12b5923ada87
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fd06c495d79fae9
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fe6b435c9707703
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fe99b4caa7ee21f
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fe3f926e32a94e1
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fe2eb6a94e9ae19
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fd00ccac0a4b811
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fdc75ec5096a027
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fcdc1b3eb6c004b
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fefd32694fcaecb
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fede465442027aa
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fef788de2d51675
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fe043a8c3aa6439
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fe4528a44ed36fb
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fb88b104e822b8f
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fc4a10e22bb3b33
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fa12e48c86dcddf
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fad126610309c1f
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fc1fe2d6aba9e77
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fe1daba37d60414
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7f92774cd9885b7f
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fdadd465d39fd03
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fe364fd8fe1fae1
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fd095092a183e33
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7feeb61e2d5d3c7a
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fc26900fdfdb837
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fe07943814fd4f4
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fd9262273e53737
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fe2b7f5031fce17
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fc0531d684ae65b
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7febfe0f0fcad936
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fdca91d064ea98b
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fba1fe3e0c64717
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fd43e5b36b50bcd
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fe52581cebfe497
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fccde16617ec93f
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fde4204ffab96f7
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fe6922ff89d2373
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7feb9927e27c836d
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fe82e62659b7f9b
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fecdd59610e46da
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fe7ada4a02edef8
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fe882d3626badfd
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fdcb6bc2c697a91
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7f9f8ce1a7792dff
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fd594e913e8fb89
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fbcf5192927214f
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fe7c23aaefd9f67
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fe3b00ab682d289
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fd60763a781f969
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fa291d98044bfbf
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fc361bbef8877ab
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fefae17b8fdc65b
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fa61932b2d37baf
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fd8ad1c84b735e1
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fe620bb0401fb92
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fc784c0d85e9517
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fc41c73bbc1b00b
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fea06ffc7be6dae
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fd05d39d105b541
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7f95a7002fc1a6bf
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fe7576ff7acad59
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7f99f3f7053b60bf
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fee8bc5f44515f5
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fb5392483afe847
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fe5874b6418015b
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fc6003243fdf57b
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fd730db0ae1ba39
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fa051aac3a28d5f
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fe6f1586709a287
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fdb11152f2f09c5
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fec2db9cc3dd583
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fcaf0f94f18e857
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fcf56a77d322a6f
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7feb5380491038ac
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fe0b731e88bc69f
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fbb343f5823cc17
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fec04060fa9d235
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fcd01c53aeb6daf
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fd17a774cbbcd5f
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fe4e4a35c32157e
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fae15a564c336ef
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fe7d542946cb465
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fc87fe27ff3fe2f
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fed0b7f9b429ef3
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fe73afa00089fb9
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fea40b77d5da767
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fb34bccd918d207
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fe3f1c99f873d3c
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fede497aebca743
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fe0616a9d776586
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fca99cbb7d28f8f
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fd3f541e5d8f1c1
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fe2d0716da06e3c
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fe4d8630276966c
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fe09163be078882
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fe022ce6a3fae64
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fe6993ceb530371
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7feea2b5073270ea
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fd3cfe1da6d26d5
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fed2a01d9eb47d0
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fd1292a3e2f1241
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fed0dd93a77236c
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fc541c57e06f28f
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fe662e40f571128
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fd4c7591e8478db
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fcc644d9f0caeeb
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fdf2498354565a7
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fe72925e5d38221
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fed7358d23af6fe
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fe22aa3d2e74e72
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fdd81392ace6303
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fecca58e39cda56
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fec405091d199ee
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fd6a6b1b54b21cf
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fea9bd93f2f534e
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fe006e3d60fc2f8
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fed98396dfe04dc
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fdf5c635a3b99f3
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fe0f8ac8cffe63e
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fdd87aff53d41f5
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fe6e28422f450fd
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fe820cd259975cf
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fc4a1b2df4767ef
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7feec7e479c877a7
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fef6428fb6f94fe
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fd6a47222e524ad
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fe9459cd65fbaac
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fe8698ed174ff65
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fed02d0afa24812
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fe78037fa19f977
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fe97f0ea9a89f82
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fec982355c85538
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fc746a5cfec3f67
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fe59556723d53e2
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7feff5373e0e112c
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fe053c0f57052f0
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fc17f4cd829a48b
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fd4cf244963827f
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7f986e40969ec29f
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fce394ab3b08c6b
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fe1efb36cb5b1e4
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fe0d2f778a86fa6
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fec898a0b894837
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fd8522a1b638e23
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fd461bb8f43127b
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fddc0d22f746bf5
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7f9c1a812e98063f
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fa264ac77bf010f
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fd12adb3735ac6d
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fdc787db4043bd9
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fe169e5fbbe2b33
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fee61729d7cfd5e
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fefd58fd60948f9
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fe722ea3b70e3d3
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fd92fa0166dea3d
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fdb9017651b96db
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fc445e3cffed91f
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fe299392ab99898
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fe36aeb78249790
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fe363e504d94fe2
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fd3b881fa033e19
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fe56e6e736a538e
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fe78d10ef3c608a
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7feabc6824ad2440
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fb5ba2bcb8dc85f
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7facf44d05dc866f
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fee549a4f656ebe
.dword 0x0
.dword 0xc637ffff00000000
.dword 0x7fc0732dff952787
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fe4bd16a0267938
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fb60de25d29e92f
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fb11c62f98de3bf
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fdaac53df2f85fd
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fc2c08bdce69f77
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fefed8d422e59b9
.dword 0x8000
.dword 0xc637ffff00000000
.dword 0x7fd6c9a44168b923
.dword 0x8000
.dword 0xc637ffff00000000
RVTEST_DATA_END

RVMODEL_DATA_BEGIN


signature_x15_0:
    .fill 0*(XLEN/32),4,0xdeadbeef


signature_x15_1:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_2:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_3:
    .fill 48*(XLEN/32),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*(XLEN/32),4,0xdeadbeef

#endif

RVMODEL_DATA_END
