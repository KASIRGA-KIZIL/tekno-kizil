
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.5.6
// timestamp : Mon Sep 20 11:52:58 2021 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/compliance_fd/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /scratch/compliance_fd/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV64D/rv64d_fmadd1.cgf \
 \
//                  -- xlen 64  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2021. IIT Madras. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmadd.d instruction of the RISC-V FD extension for the fmadd_b3 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV64IFD")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*64.*);check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",d_fmadd_b3)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x16,test_fp)
RVTEST_SIGBASE(x15,signature_x15_1)

inst_0:
// rs2 == rs3 != rs1 and rs2 == rs3 != rd and rd != rs1, rs1==f23, rs2==f19, rs3==f19, rd==f16, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3eecf8905935f and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x30dc050910ea3 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x7bcb8116f23ed and rm_val == 0  
// opcode: fmadd.d ; op1:f23; op2:f19; op3:f19; dest:f16; op1val:0x7fe3eecf8905935f; op2val:0xbff30dc050910ea3; op3val:0xbff30dc050910ea3; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f16, f23, f19, f19, 0x0, 0, x16, 0, x17, x15, 0, x18)

inst_1:
// rs1 == rs2 == rs3 == rd, rs1==f24, rs2==f24, rs3==f24, rd==f24, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3d2a90fafd5bc and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x62487dae23696 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xb6eeac2960889 and rm_val == 4  
// opcode: fmadd.d ; op1:f24; op2:f24; op3:f24; dest:f24; op1val:0x7fe3d2a90fafd5bc; op2val:0x7fe3d2a90fafd5bc; op3val:0x7fe3d2a90fafd5bc; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f24, f24, f24, f24, 0x4, 0, x16, 24, x17, x15, 16, x18)

inst_2:
// rs1 != rs2 and rs1 != rd and rs1 != rs3 and rs2 != rs3 and rs2 != rd and rs3 != rd, rs1==f4, rs2==f10, rs3==f17, rd==f27, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3d2a90fafd5bc and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x62487dae23696 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xb6eeac2960889 and rm_val == 3  
// opcode: fmadd.d ; op1:f4; op2:f10; op3:f17; dest:f27; op1val:0x7fe3d2a90fafd5bc; op2val:0xbfe62487dae23696; op3val:0x7fdb6eeac2960889; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f27, f4, f10, f17, 0x3, 0, x16, 48, x17, x15, 32, x18)

inst_3:
// rs1 == rs3 != rs2 and rs1 == rs3 != rd and rd != rs2, rs1==f8, rs2==f1, rs3==f8, rd==f6, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3d2a90fafd5bc and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x62487dae23696 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xb6eeac2960889 and rm_val == 2  
// opcode: fmadd.d ; op1:f8; op2:f1; op3:f8; dest:f6; op1val:0x7fe3d2a90fafd5bc; op2val:0xbfe62487dae23696; op3val:0x7fe3d2a90fafd5bc; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f6, f8, f1, f8, 0x2, 0, x16, 72, x17, x15, 48, x18)

inst_4:
// rs1 == rs2 != rs3 and rs1 == rs2 != rd and rd != rs3, rs1==f30, rs2==f30, rs3==f10, rd==f3, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3d2a90fafd5bc and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x62487dae23696 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xb6eeac2960889 and rm_val == 1  
// opcode: fmadd.d ; op1:f30; op2:f30; op3:f10; dest:f3; op1val:0x7fe3d2a90fafd5bc; op2val:0x7fe3d2a90fafd5bc; op3val:0x7fdb6eeac2960889; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f3, f30, f30, f10, 0x1, 0, x16, 96, x17, x15, 64, x18)

inst_5:
// rd == rs2 == rs3 != rs1, rs1==f13, rs2==f28, rs3==f28, rd==f28, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3d2a90fafd5bc and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x62487dae23696 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xb6eeac2960889 and rm_val == 0  
// opcode: fmadd.d ; op1:f13; op2:f28; op3:f28; dest:f28; op1val:0x7fe3d2a90fafd5bc; op2val:0xbfe62487dae23696; op3val:0xbfe62487dae23696; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f28, f13, f28, f28, 0x0, 0, x16, 120, x17, x15, 80, x18)

inst_6:
// rs1 == rs2 == rs3 != rd, rs1==f21, rs2==f21, rs3==f21, rd==f18, fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe1789626784f5 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xe473bed6c803f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc790d5fbd094d and rm_val == 4  
// opcode: fmadd.d ; op1:f21; op2:f21; op3:f21; dest:f18; op1val:0x7fde1789626784f5; op2val:0x7fde1789626784f5; op3val:0x7fde1789626784f5; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f18, f21, f21, f21, 0x4, 0, x16, 144, x17, x15, 96, x18)

inst_7:
// rs1 == rd != rs2 and rs1 == rd != rs3 and rs3 != rs2, rs1==f2, rs2==f4, rs3==f7, rd==f2, fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe1789626784f5 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xe473bed6c803f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc790d5fbd094d and rm_val == 3  
// opcode: fmadd.d ; op1:f2; op2:f4; op3:f7; dest:f2; op1val:0x7fde1789626784f5; op2val:0xbffe473bed6c803f; op3val:0x7fec790d5fbd094d; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f2, f2, f4, f7, 0x3, 0, x16, 168, x17, x15, 112, x18)

inst_8:
// rs3 == rd != rs1 and rs3 == rd != rs2 and rs2 != rs1, rs1==f25, rs2==f18, rs3==f22, rd==f22, fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe1789626784f5 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xe473bed6c803f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc790d5fbd094d and rm_val == 2  
// opcode: fmadd.d ; op1:f25; op2:f18; op3:f22; dest:f22; op1val:0x7fde1789626784f5; op2val:0xbffe473bed6c803f; op3val:0x7fec790d5fbd094d; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f22, f25, f18, f22, 0x2, 0, x16, 192, x17, x15, 128, x18)

inst_9:
// rs1 == rd == rs3 != rs2, rs1==f14, rs2==f0, rs3==f14, rd==f14, fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe1789626784f5 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xe473bed6c803f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc790d5fbd094d and rm_val == 1  
// opcode: fmadd.d ; op1:f14; op2:f0; op3:f14; dest:f14; op1val:0x7fde1789626784f5; op2val:0xbffe473bed6c803f; op3val:0x7fde1789626784f5; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f14, f14, f0, f14, 0x1, 0, x16, 216, x17, x15, 144, x18)

inst_10:
// rs2 == rd != rs1 and rs2 == rd != rs3 and rs3 != rs1, rs1==f12, rs2==f20, rs3==f9, rd==f20, fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe1789626784f5 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xe473bed6c803f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc790d5fbd094d and rm_val == 0  
// opcode: fmadd.d ; op1:f12; op2:f20; op3:f9; dest:f20; op1val:0x7fde1789626784f5; op2val:0xbffe473bed6c803f; op3val:0x7fec790d5fbd094d; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f20, f12, f20, f9, 0x0, 0, x16, 240, x17, x15, 160, x18)

inst_11:
// rs1 == rs2 == rd != rs3, rs1==f11, rs2==f11, rs3==f29, rd==f11, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x854c40164e1cb and fs2 == 1 and fe2 == 0x3f4 and fm2 == 0x2f2490b2c03e4 and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0xccfcda9e20fff and rm_val == 4  
// opcode: fmadd.d ; op1:f11; op2:f11; op3:f29; dest:f11; op1val:0x7fe854c40164e1cb; op2val:0x7fe854c40164e1cb; op3val:0x7f3ccfcda9e20fff; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f11, f11, f11, f29, 0x4, 0, x16, 264, x17, x15, 176, x18)

inst_12:
// rs1==f7, rs2==f9, rs3==f11, rd==f30, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x854c40164e1cb and fs2 == 1 and fe2 == 0x3f4 and fm2 == 0x2f2490b2c03e4 and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0xccfcda9e20fff and rm_val == 3  
// opcode: fmadd.d ; op1:f7; op2:f9; op3:f11; dest:f30; op1val:0x7fe854c40164e1cb; op2val:0xbf42f2490b2c03e4; op3val:0x7f3ccfcda9e20fff; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f30, f7, f9, f11, 0x3, 0, x16, 288, x17, x15, 192, x18)

inst_13:
// rs1==f16, rs2==f26, rs3==f15, rd==f0, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x854c40164e1cb and fs2 == 1 and fe2 == 0x3f4 and fm2 == 0x2f2490b2c03e4 and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0xccfcda9e20fff and rm_val == 2  
// opcode: fmadd.d ; op1:f16; op2:f26; op3:f15; dest:f0; op1val:0x7fe854c40164e1cb; op2val:0xbf42f2490b2c03e4; op3val:0x7f3ccfcda9e20fff; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f0, f16, f26, f15, 0x2, 0, x16, 312, x17, x15, 208, x18)

inst_14:
// rs1==f15, rs2==f31, rs3==f2, rd==f12, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x854c40164e1cb and fs2 == 1 and fe2 == 0x3f4 and fm2 == 0x2f2490b2c03e4 and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0xccfcda9e20fff and rm_val == 1  
// opcode: fmadd.d ; op1:f15; op2:f31; op3:f2; dest:f12; op1val:0x7fe854c40164e1cb; op2val:0xbf42f2490b2c03e4; op3val:0x7f3ccfcda9e20fff; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f12, f15, f31, f2, 0x1, 0, x16, 336, x17, x15, 224, x18)

inst_15:
// rs1==f19, rs2==f22, rs3==f20, rd==f23, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x854c40164e1cb and fs2 == 1 and fe2 == 0x3f4 and fm2 == 0x2f2490b2c03e4 and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0xccfcda9e20fff and rm_val == 0  
// opcode: fmadd.d ; op1:f19; op2:f22; op3:f20; dest:f23; op1val:0x7fe854c40164e1cb; op2val:0xbf42f2490b2c03e4; op3val:0x7f3ccfcda9e20fff; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f23, f19, f22, f20, 0x0, 0, x16, 360, x17, x15, 240, x18)

inst_16:
// rs1==f22, rs2==f15, rs3==f4, rd==f19, fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc74cc0bbf9bc9 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x14efc54a35241 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xec892f54a3c0d and rm_val == 4  
// opcode: fmadd.d ; op1:f22; op2:f15; op3:f4; dest:f19; op1val:0x7fec74cc0bbf9bc9; op2val:0xbfe14efc54a35241; op3val:0x7fdec892f54a3c0d; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f19, f22, f15, f4, 0x4, 0, x16, 384, x17, x15, 256, x18)

inst_17:
// rs1==f29, rs2==f8, rs3==f18, rd==f15, fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc74cc0bbf9bc9 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x14efc54a35241 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xec892f54a3c0d and rm_val == 3  
// opcode: fmadd.d ; op1:f29; op2:f8; op3:f18; dest:f15; op1val:0x7fec74cc0bbf9bc9; op2val:0xbfe14efc54a35241; op3val:0x7fdec892f54a3c0d; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f15, f29, f8, f18, 0x3, 0, x16, 408, x17, x15, 272, x18)

inst_18:
// rs1==f1, rs2==f23, rs3==f6, rd==f31, fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc74cc0bbf9bc9 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x14efc54a35241 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xec892f54a3c0d and rm_val == 2  
// opcode: fmadd.d ; op1:f1; op2:f23; op3:f6; dest:f31; op1val:0x7fec74cc0bbf9bc9; op2val:0xbfe14efc54a35241; op3val:0x7fdec892f54a3c0d; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f31, f1, f23, f6, 0x2, 0, x16, 432, x17, x15, 288, x18)

inst_19:
// rs1==f17, rs2==f7, rs3==f0, rd==f21, fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc74cc0bbf9bc9 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x14efc54a35241 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xec892f54a3c0d and rm_val == 1  
// opcode: fmadd.d ; op1:f17; op2:f7; op3:f0; dest:f21; op1val:0x7fec74cc0bbf9bc9; op2val:0xbfe14efc54a35241; op3val:0x7fdec892f54a3c0d; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f21, f17, f7, f0, 0x1, 0, x16, 456, x17, x15, 304, x18)

inst_20:
// rs1==f27, rs2==f2, rs3==f16, rd==f9, fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc74cc0bbf9bc9 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x14efc54a35241 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xec892f54a3c0d and rm_val == 0  
// opcode: fmadd.d ; op1:f27; op2:f2; op3:f16; dest:f9; op1val:0x7fec74cc0bbf9bc9; op2val:0xbfe14efc54a35241; op3val:0x7fdec892f54a3c0d; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f9, f27, f2, f16, 0x0, 0, x16, 480, x17, x15, 320, x18)

inst_21:
// rs1==f6, rs2==f29, rs3==f30, rd==f13, fs1 == 0 and fe1 == 0x7fc and fm1 == 0x9e87d53212bbf and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x8f31cea8dbcda and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x43332df5ca32f and rm_val == 4  
// opcode: fmadd.d ; op1:f6; op2:f29; op3:f30; dest:f13; op1val:0x7fc9e87d53212bbf; op2val:0xbfc8f31cea8dbcda; op3val:0x7fa43332df5ca32f; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f6, f29, f30, 0x4, 0, x16, 504, x17, x15, 336, x18)

inst_22:
// rs1==f31, rs2==f3, rs3==f26, rd==f4, fs1 == 0 and fe1 == 0x7fc and fm1 == 0x9e87d53212bbf and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x8f31cea8dbcda and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x43332df5ca32f and rm_val == 3  
// opcode: fmadd.d ; op1:f31; op2:f3; op3:f26; dest:f4; op1val:0x7fc9e87d53212bbf; op2val:0xbfc8f31cea8dbcda; op3val:0x7fa43332df5ca32f; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f4, f31, f3, f26, 0x3, 0, x16, 528, x17, x15, 352, x18)

inst_23:
// rs1==f10, rs2==f14, rs3==f3, rd==f17, fs1 == 0 and fe1 == 0x7fc and fm1 == 0x9e87d53212bbf and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x8f31cea8dbcda and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x43332df5ca32f and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f14; op3:f3; dest:f17; op1val:0x7fc9e87d53212bbf; op2val:0xbfc8f31cea8dbcda; op3val:0x7fa43332df5ca32f; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f17, f10, f14, f3, 0x2, 0, x16, 552, x17, x15, 368, x18)

inst_24:
// rs1==f20, rs2==f13, rs3==f5, rd==f7, fs1 == 0 and fe1 == 0x7fc and fm1 == 0x9e87d53212bbf and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x8f31cea8dbcda and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x43332df5ca32f and rm_val == 1  
// opcode: fmadd.d ; op1:f20; op2:f13; op3:f5; dest:f7; op1val:0x7fc9e87d53212bbf; op2val:0xbfc8f31cea8dbcda; op3val:0x7fa43332df5ca32f; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f7, f20, f13, f5, 0x1, 0, x16, 576, x17, x15, 384, x18)

inst_25:
// rs1==f0, rs2==f27, rs3==f23, rd==f8, fs1 == 0 and fe1 == 0x7fc and fm1 == 0x9e87d53212bbf and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x8f31cea8dbcda and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x43332df5ca32f and rm_val == 0  
// opcode: fmadd.d ; op1:f0; op2:f27; op3:f23; dest:f8; op1val:0x7fc9e87d53212bbf; op2val:0xbfc8f31cea8dbcda; op3val:0x7fa43332df5ca32f; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f8, f0, f27, f23, 0x0, 0, x16, 600, x17, x15, 400, x18)

inst_26:
// rs1==f9, rs2==f17, rs3==f1, rd==f10, fs1 == 0 and fe1 == 0x7fb and fm1 == 0x8d4e9012ff0f7 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x5e1facaee3c96 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x0fb148bed05df and rm_val == 4  
// opcode: fmadd.d ; op1:f9; op2:f17; op3:f1; dest:f10; op1val:0x7fb8d4e9012ff0f7; op2val:0xbfd5e1facaee3c96; op3val:0x7fa0fb148bed05df; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f10, f9, f17, f1, 0x4, 0, x16, 624, x17, x15, 416, x18)

inst_27:
// rs1==f28, rs2==f6, rs3==f27, rd==f5, fs1 == 0 and fe1 == 0x7fb and fm1 == 0x8d4e9012ff0f7 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x5e1facaee3c96 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x0fb148bed05df and rm_val == 3  
// opcode: fmadd.d ; op1:f28; op2:f6; op3:f27; dest:f5; op1val:0x7fb8d4e9012ff0f7; op2val:0xbfd5e1facaee3c96; op3val:0x7fa0fb148bed05df; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f5, f28, f6, f27, 0x3, 0, x16, 648, x17, x15, 432, x18)

inst_28:
// rs1==f18, rs2==f12, rs3==f13, rd==f26, fs1 == 0 and fe1 == 0x7fb and fm1 == 0x8d4e9012ff0f7 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x5e1facaee3c96 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x0fb148bed05df and rm_val == 2  
// opcode: fmadd.d ; op1:f18; op2:f12; op3:f13; dest:f26; op1val:0x7fb8d4e9012ff0f7; op2val:0xbfd5e1facaee3c96; op3val:0x7fa0fb148bed05df; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f26, f18, f12, f13, 0x2, 0, x16, 672, x17, x15, 448, x18)

inst_29:
// rs1==f3, rs2==f25, rs3==f12, rd==f1, fs1 == 0 and fe1 == 0x7fb and fm1 == 0x8d4e9012ff0f7 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x5e1facaee3c96 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x0fb148bed05df and rm_val == 1  
// opcode: fmadd.d ; op1:f3; op2:f25; op3:f12; dest:f1; op1val:0x7fb8d4e9012ff0f7; op2val:0xbfd5e1facaee3c96; op3val:0x7fa0fb148bed05df; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f1, f3, f25, f12, 0x1, 0, x16, 696, x17, x15, 464, x18)

inst_30:
// rs1==f5, rs2==f16, rs3==f31, rd==f29, fs1 == 0 and fe1 == 0x7fb and fm1 == 0x8d4e9012ff0f7 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x5e1facaee3c96 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x0fb148bed05df and rm_val == 0  
// opcode: fmadd.d ; op1:f5; op2:f16; op3:f31; dest:f29; op1val:0x7fb8d4e9012ff0f7; op2val:0xbfd5e1facaee3c96; op3val:0x7fa0fb148bed05df; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f29, f5, f16, f31, 0x0, 0, x16, 720, x17, x15, 480, x18)

inst_31:
// rs1==f26, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7af6414b8de5c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x11974707ea538 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x95008c08199b3 and rm_val == 4  
// opcode: fmadd.d ; op1:f26; op2:f5; op3:f15; dest:f4; op1val:0x7fe7af6414b8de5c; op2val:0xbfe11974707ea538; op3val:0x7fd95008c08199b3; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f4, f26, f5, f15, 0x4, 0, x16, 744, x17, x15, 496, x18)

inst_32:
// rs3==f25, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7af6414b8de5c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x11974707ea538 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x95008c08199b3 and rm_val == 3  
// opcode: fmadd.d ; op1:f29; op2:f13; op3:f25; dest:f9; op1val:0x7fe7af6414b8de5c; op2val:0xbfe11974707ea538; op3val:0x7fd95008c08199b3; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f9, f29, f13, f25, 0x3, 0, x16, 768, x17, x15, 512, x18)

inst_33:
// rd==f25, fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7af6414b8de5c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x11974707ea538 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x95008c08199b3 and rm_val == 2  
// opcode: fmadd.d ; op1:f17; op2:f4; op3:f27; dest:f25; op1val:0x7fe7af6414b8de5c; op2val:0xbfe11974707ea538; op3val:0x7fd95008c08199b3; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f25, f17, f4, f27, 0x2, 0, x16, 792, x17, x15, 528, x18)

inst_34:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7af6414b8de5c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x11974707ea538 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x95008c08199b3 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe7af6414b8de5c; op2val:0xbfe11974707ea538; op3val:0x7fd95008c08199b3; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 544, x18)

inst_35:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7af6414b8de5c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x11974707ea538 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x95008c08199b3 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe7af6414b8de5c; op2val:0xbfe11974707ea538; op3val:0x7fd95008c08199b3; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 560, x18)

inst_36:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2f6cc7ff8e7a5 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xef4446de4f279 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x258221cdc09b9 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe2f6cc7ff8e7a5; op2val:0xbfeef4446de4f279; op3val:0x7fe258221cdc09b9; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 576, x18)

inst_37:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2f6cc7ff8e7a5 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xef4446de4f279 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x258221cdc09b9 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe2f6cc7ff8e7a5; op2val:0xbfeef4446de4f279; op3val:0x7fe258221cdc09b9; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 592, x18)

inst_38:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2f6cc7ff8e7a5 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xef4446de4f279 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x258221cdc09b9 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe2f6cc7ff8e7a5; op2val:0xbfeef4446de4f279; op3val:0x7fe258221cdc09b9; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 608, x18)

inst_39:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2f6cc7ff8e7a5 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xef4446de4f279 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x258221cdc09b9 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe2f6cc7ff8e7a5; op2val:0xbfeef4446de4f279; op3val:0x7fe258221cdc09b9; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 624, x18)

inst_40:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2f6cc7ff8e7a5 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xef4446de4f279 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x258221cdc09b9 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe2f6cc7ff8e7a5; op2val:0xbfeef4446de4f279; op3val:0x7fe258221cdc09b9; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 640, x18)

inst_41:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb401c9972e963 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x3722ab15268d0 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x08f49bc253915 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feb401c9972e963; op2val:0xbfe3722ab15268d0; op3val:0x7fe08f49bc253915; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 656, x18)

inst_42:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb401c9972e963 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x3722ab15268d0 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x08f49bc253915 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feb401c9972e963; op2val:0xbfe3722ab15268d0; op3val:0x7fe08f49bc253915; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 672, x18)

inst_43:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb401c9972e963 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x3722ab15268d0 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x08f49bc253915 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feb401c9972e963; op2val:0xbfe3722ab15268d0; op3val:0x7fe08f49bc253915; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 688, x18)

inst_44:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb401c9972e963 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x3722ab15268d0 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x08f49bc253915 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feb401c9972e963; op2val:0xbfe3722ab15268d0; op3val:0x7fe08f49bc253915; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 704, x18)

inst_45:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb401c9972e963 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x3722ab15268d0 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x08f49bc253915 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feb401c9972e963; op2val:0xbfe3722ab15268d0; op3val:0x7fe08f49bc253915; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 720, x18)

inst_46:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9be7d76867e32 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x13d1e497fb88a and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xbbcbc47b0a26f and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9be7d76867e32; op2val:0xbfe13d1e497fb88a; op3val:0x7fdbbcbc47b0a26f; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 736, x18)

inst_47:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9be7d76867e32 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x13d1e497fb88a and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xbbcbc47b0a26f and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9be7d76867e32; op2val:0xbfe13d1e497fb88a; op3val:0x7fdbbcbc47b0a26f; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 752, x18)

inst_48:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9be7d76867e32 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x13d1e497fb88a and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xbbcbc47b0a26f and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9be7d76867e32; op2val:0xbfe13d1e497fb88a; op3val:0x7fdbbcbc47b0a26f; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 768, x18)

inst_49:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9be7d76867e32 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x13d1e497fb88a and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xbbcbc47b0a26f and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9be7d76867e32; op2val:0xbfe13d1e497fb88a; op3val:0x7fdbbcbc47b0a26f; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 784, x18)

inst_50:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9be7d76867e32 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x13d1e497fb88a and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xbbcbc47b0a26f and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9be7d76867e32; op2val:0xbfe13d1e497fb88a; op3val:0x7fdbbcbc47b0a26f; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 800, x18)

inst_51:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa98601d6ee96c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x8f2202ff70d62 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x4bb832d2f03b6 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fea98601d6ee96c; op2val:0xbfe8f2202ff70d62; op3val:0x7fe4bb832d2f03b6; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 816, x18)

inst_52:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa98601d6ee96c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x8f2202ff70d62 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x4bb832d2f03b6 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fea98601d6ee96c; op2val:0xbfe8f2202ff70d62; op3val:0x7fe4bb832d2f03b6; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 832, x18)

inst_53:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa98601d6ee96c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x8f2202ff70d62 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x4bb832d2f03b6 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fea98601d6ee96c; op2val:0xbfe8f2202ff70d62; op3val:0x7fe4bb832d2f03b6; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 848, x18)

inst_54:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa98601d6ee96c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x8f2202ff70d62 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x4bb832d2f03b6 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fea98601d6ee96c; op2val:0xbfe8f2202ff70d62; op3val:0x7fe4bb832d2f03b6; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 864, x18)

inst_55:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa98601d6ee96c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x8f2202ff70d62 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x4bb832d2f03b6 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fea98601d6ee96c; op2val:0xbfe8f2202ff70d62; op3val:0x7fe4bb832d2f03b6; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 880, x18)

inst_56:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x8b0182b066dad and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x6a270f2c744d0 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x176633b90457b and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd8b0182b066dad; op2val:0xbfd6a270f2c744d0; op3val:0x7fc176633b90457b; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 896, x18)

inst_57:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x8b0182b066dad and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x6a270f2c744d0 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x176633b90457b and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd8b0182b066dad; op2val:0xbfd6a270f2c744d0; op3val:0x7fc176633b90457b; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 912, x18)

inst_58:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x8b0182b066dad and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x6a270f2c744d0 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x176633b90457b and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd8b0182b066dad; op2val:0xbfd6a270f2c744d0; op3val:0x7fc176633b90457b; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 928, x18)

inst_59:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x8b0182b066dad and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x6a270f2c744d0 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x176633b90457b and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd8b0182b066dad; op2val:0xbfd6a270f2c744d0; op3val:0x7fc176633b90457b; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 944, x18)

inst_60:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x8b0182b066dad and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x6a270f2c744d0 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x176633b90457b and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd8b0182b066dad; op2val:0xbfd6a270f2c744d0; op3val:0x7fc176633b90457b; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 960, x18)

inst_61:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3a3e67ed240bf and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x22dd2fe5ccaa5 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x650a3465e4aff and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3a3e67ed240bf; op2val:0xbfe22dd2fe5ccaa5; op3val:0x7fd650a3465e4aff; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 976, x18)

inst_62:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3a3e67ed240bf and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x22dd2fe5ccaa5 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x650a3465e4aff and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3a3e67ed240bf; op2val:0xbfe22dd2fe5ccaa5; op3val:0x7fd650a3465e4aff; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 992, x18)

inst_63:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3a3e67ed240bf and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x22dd2fe5ccaa5 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x650a3465e4aff and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3a3e67ed240bf; op2val:0xbfe22dd2fe5ccaa5; op3val:0x7fd650a3465e4aff; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 1008, x18)

inst_64:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3a3e67ed240bf and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x22dd2fe5ccaa5 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x650a3465e4aff and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3a3e67ed240bf; op2val:0xbfe22dd2fe5ccaa5; op3val:0x7fd650a3465e4aff; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 1024, x18)

inst_65:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3a3e67ed240bf and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x22dd2fe5ccaa5 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x650a3465e4aff and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3a3e67ed240bf; op2val:0xbfe22dd2fe5ccaa5; op3val:0x7fd650a3465e4aff; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1040, x18)

inst_66:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xe1518f4a30787 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x6b04610dc37ca and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x554370f71bef3 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fce1518f4a30787; op2val:0xbff6b04610dc37ca; op3val:0x7fd554370f71bef3; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 1056, x18)

inst_67:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xe1518f4a30787 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x6b04610dc37ca and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x554370f71bef3 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fce1518f4a30787; op2val:0xbff6b04610dc37ca; op3val:0x7fd554370f71bef3; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 1072, x18)

inst_68:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xe1518f4a30787 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x6b04610dc37ca and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x554370f71bef3 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fce1518f4a30787; op2val:0xbff6b04610dc37ca; op3val:0x7fd554370f71bef3; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 1088, x18)

inst_69:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xe1518f4a30787 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x6b04610dc37ca and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x554370f71bef3 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fce1518f4a30787; op2val:0xbff6b04610dc37ca; op3val:0x7fd554370f71bef3; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 1104, x18)

inst_70:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xe1518f4a30787 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x6b04610dc37ca and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x554370f71bef3 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fce1518f4a30787; op2val:0xbff6b04610dc37ca; op3val:0x7fd554370f71bef3; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1120, x18)

inst_71:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3fe574580e3e3 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x2255d0d101768 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x6acd29eafc0eb and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3fe574580e3e3; op2val:0xbfe2255d0d101768; op3val:0x7fd6acd29eafc0eb; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 1136, x18)

inst_72:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3fe574580e3e3 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x2255d0d101768 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x6acd29eafc0eb and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3fe574580e3e3; op2val:0xbfe2255d0d101768; op3val:0x7fd6acd29eafc0eb; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 1152, x18)

inst_73:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3fe574580e3e3 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x2255d0d101768 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x6acd29eafc0eb and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3fe574580e3e3; op2val:0xbfe2255d0d101768; op3val:0x7fd6acd29eafc0eb; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 1168, x18)

inst_74:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3fe574580e3e3 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x2255d0d101768 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x6acd29eafc0eb and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3fe574580e3e3; op2val:0xbfe2255d0d101768; op3val:0x7fd6acd29eafc0eb; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 1184, x18)

inst_75:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3fe574580e3e3 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x2255d0d101768 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x6acd29eafc0eb and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3fe574580e3e3; op2val:0xbfe2255d0d101768; op3val:0x7fd6acd29eafc0eb; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1200, x18)

inst_76:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa4252ecd893af and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x5cd18d027b375 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x1e3d3ab394d1b and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fea4252ecd893af; op2val:0xbfc5cd18d027b375; op3val:0x7fc1e3d3ab394d1b; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 1216, x18)

inst_77:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa4252ecd893af and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x5cd18d027b375 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x1e3d3ab394d1b and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fea4252ecd893af; op2val:0xbfc5cd18d027b375; op3val:0x7fc1e3d3ab394d1b; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 1232, x18)

inst_78:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa4252ecd893af and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x5cd18d027b375 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x1e3d3ab394d1b and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fea4252ecd893af; op2val:0xbfc5cd18d027b375; op3val:0x7fc1e3d3ab394d1b; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 1248, x18)

inst_79:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa4252ecd893af and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x5cd18d027b375 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x1e3d3ab394d1b and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fea4252ecd893af; op2val:0xbfc5cd18d027b375; op3val:0x7fc1e3d3ab394d1b; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 1264, x18)

inst_80:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa4252ecd893af and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x5cd18d027b375 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x1e3d3ab394d1b and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fea4252ecd893af; op2val:0xbfc5cd18d027b375; op3val:0x7fc1e3d3ab394d1b; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1280, x18)

inst_81:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf20566fa54831 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x5e11e69822d9d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x54831adf73d8a and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef20566fa54831; op2val:0xbfe5e11e69822d9d; op3val:0x7fe54831adf73d8a; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 1296, x18)

inst_82:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf20566fa54831 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x5e11e69822d9d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x54831adf73d8a and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef20566fa54831; op2val:0xbfe5e11e69822d9d; op3val:0x7fe54831adf73d8a; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 1312, x18)

inst_83:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf20566fa54831 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x5e11e69822d9d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x54831adf73d8a and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef20566fa54831; op2val:0xbfe5e11e69822d9d; op3val:0x7fe54831adf73d8a; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 1328, x18)

inst_84:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf20566fa54831 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x5e11e69822d9d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x54831adf73d8a and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef20566fa54831; op2val:0xbfe5e11e69822d9d; op3val:0x7fe54831adf73d8a; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 1344, x18)
addi x16,x16,2040

inst_85:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf20566fa54831 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x5e11e69822d9d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x54831adf73d8a and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef20566fa54831; op2val:0xbfe5e11e69822d9d; op3val:0x7fe54831adf73d8a; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 1360, x18)

inst_86:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xc8e25fbfe6477 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x0a67be484276b and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xdb745e2ae4d57 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcc8e25fbfe6477; op2val:0xbfe0a67be484276b; op3val:0x7fbdb745e2ae4d57; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 1376, x18)

inst_87:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xc8e25fbfe6477 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x0a67be484276b and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xdb745e2ae4d57 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcc8e25fbfe6477; op2val:0xbfe0a67be484276b; op3val:0x7fbdb745e2ae4d57; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 1392, x18)

inst_88:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xc8e25fbfe6477 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x0a67be484276b and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xdb745e2ae4d57 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcc8e25fbfe6477; op2val:0xbfe0a67be484276b; op3val:0x7fbdb745e2ae4d57; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 1408, x18)

inst_89:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xc8e25fbfe6477 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x0a67be484276b and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xdb745e2ae4d57 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcc8e25fbfe6477; op2val:0xbfe0a67be484276b; op3val:0x7fbdb745e2ae4d57; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 1424, x18)

inst_90:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xc8e25fbfe6477 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x0a67be484276b and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xdb745e2ae4d57 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcc8e25fbfe6477; op2val:0xbfe0a67be484276b; op3val:0x7fbdb745e2ae4d57; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 1440, x18)

inst_91:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe771fa9b7a387 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x6e4bf34643a40 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5cbac8f2d7906 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fee771fa9b7a387; op2val:0xbfe6e4bf34643a40; op3val:0x7fe5cbac8f2d7906; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 1456, x18)

inst_92:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe771fa9b7a387 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x6e4bf34643a40 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5cbac8f2d7906 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fee771fa9b7a387; op2val:0xbfe6e4bf34643a40; op3val:0x7fe5cbac8f2d7906; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 1472, x18)

inst_93:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe771fa9b7a387 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x6e4bf34643a40 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5cbac8f2d7906 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fee771fa9b7a387; op2val:0xbfe6e4bf34643a40; op3val:0x7fe5cbac8f2d7906; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 1488, x18)

inst_94:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe771fa9b7a387 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x6e4bf34643a40 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5cbac8f2d7906 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fee771fa9b7a387; op2val:0xbfe6e4bf34643a40; op3val:0x7fe5cbac8f2d7906; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 1504, x18)

inst_95:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe771fa9b7a387 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x6e4bf34643a40 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5cbac8f2d7906 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fee771fa9b7a387; op2val:0xbfe6e4bf34643a40; op3val:0x7fe5cbac8f2d7906; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 1520, x18)

inst_96:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0xb7937b6499ddf and fs2 == 1 and fe2 == 0x400 and fm2 == 0x67b984f0ba3f1 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x34d72ff1d2953 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fab7937b6499ddf; op2val:0xc0067b984f0ba3f1; op3val:0x7fc34d72ff1d2953; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 1536, x18)

inst_97:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0xb7937b6499ddf and fs2 == 1 and fe2 == 0x400 and fm2 == 0x67b984f0ba3f1 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x34d72ff1d2953 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fab7937b6499ddf; op2val:0xc0067b984f0ba3f1; op3val:0x7fc34d72ff1d2953; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 1552, x18)

inst_98:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0xb7937b6499ddf and fs2 == 1 and fe2 == 0x400 and fm2 == 0x67b984f0ba3f1 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x34d72ff1d2953 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fab7937b6499ddf; op2val:0xc0067b984f0ba3f1; op3val:0x7fc34d72ff1d2953; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 1568, x18)

inst_99:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0xb7937b6499ddf and fs2 == 1 and fe2 == 0x400 and fm2 == 0x67b984f0ba3f1 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x34d72ff1d2953 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fab7937b6499ddf; op2val:0xc0067b984f0ba3f1; op3val:0x7fc34d72ff1d2953; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 1584, x18)

inst_100:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0xb7937b6499ddf and fs2 == 1 and fe2 == 0x400 and fm2 == 0x67b984f0ba3f1 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x34d72ff1d2953 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fab7937b6499ddf; op2val:0xc0067b984f0ba3f1; op3val:0x7fc34d72ff1d2953; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 1600, x18)

inst_101:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xe2b04c5638f5f and fs2 == 1 and fe2 == 0x403 and fm2 == 0x89beaa54667bb and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x733412989d9ad and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f9e2b04c5638f5f; op2val:0xc0389beaa54667bb; op3val:0x7fe733412989d9ad; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 1616, x18)

inst_102:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xe2b04c5638f5f and fs2 == 1 and fe2 == 0x403 and fm2 == 0x89beaa54667bb and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x733412989d9ad and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f9e2b04c5638f5f; op2val:0xc0389beaa54667bb; op3val:0x7fe733412989d9ad; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 1632, x18)

inst_103:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xe2b04c5638f5f and fs2 == 1 and fe2 == 0x403 and fm2 == 0x89beaa54667bb and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x733412989d9ad and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f9e2b04c5638f5f; op2val:0xc0389beaa54667bb; op3val:0x7fe733412989d9ad; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 1648, x18)

inst_104:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xe2b04c5638f5f and fs2 == 1 and fe2 == 0x403 and fm2 == 0x89beaa54667bb and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x733412989d9ad and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f9e2b04c5638f5f; op2val:0xc0389beaa54667bb; op3val:0x7fe733412989d9ad; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 1664, x18)

inst_105:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xe2b04c5638f5f and fs2 == 1 and fe2 == 0x403 and fm2 == 0x89beaa54667bb and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x733412989d9ad and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f9e2b04c5638f5f; op2val:0xc0389beaa54667bb; op3val:0x7fe733412989d9ad; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1680, x18)

inst_106:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x4b0b8c0dc4fab and fs2 == 1 and fe2 == 0x400 and fm2 == 0x3b58d3c19b43c and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x97ca1321f707c and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd4b0b8c0dc4fab; op2val:0xc003b58d3c19b43c; op3val:0x7fe97ca1321f707c; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 1696, x18)

inst_107:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x4b0b8c0dc4fab and fs2 == 1 and fe2 == 0x400 and fm2 == 0x3b58d3c19b43c and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x97ca1321f707c and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd4b0b8c0dc4fab; op2val:0xc003b58d3c19b43c; op3val:0x7fe97ca1321f707c; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 1712, x18)

inst_108:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x4b0b8c0dc4fab and fs2 == 1 and fe2 == 0x400 and fm2 == 0x3b58d3c19b43c and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x97ca1321f707c and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd4b0b8c0dc4fab; op2val:0xc003b58d3c19b43c; op3val:0x7fe97ca1321f707c; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 1728, x18)

inst_109:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x4b0b8c0dc4fab and fs2 == 1 and fe2 == 0x400 and fm2 == 0x3b58d3c19b43c and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x97ca1321f707c and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd4b0b8c0dc4fab; op2val:0xc003b58d3c19b43c; op3val:0x7fe97ca1321f707c; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 1744, x18)

inst_110:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x4b0b8c0dc4fab and fs2 == 1 and fe2 == 0x400 and fm2 == 0x3b58d3c19b43c and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x97ca1321f707c and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd4b0b8c0dc4fab; op2val:0xc003b58d3c19b43c; op3val:0x7fe97ca1321f707c; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1760, x18)

inst_111:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc0fc879d9bd20 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x1886525f3e59b and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xebffc8fb4d6e9 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec0fc879d9bd20; op2val:0xbfe1886525f3e59b; op3val:0x7fdebffc8fb4d6e9; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 1776, x18)

inst_112:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc0fc879d9bd20 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x1886525f3e59b and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xebffc8fb4d6e9 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec0fc879d9bd20; op2val:0xbfe1886525f3e59b; op3val:0x7fdebffc8fb4d6e9; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 1792, x18)

inst_113:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc0fc879d9bd20 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x1886525f3e59b and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xebffc8fb4d6e9 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec0fc879d9bd20; op2val:0xbfe1886525f3e59b; op3val:0x7fdebffc8fb4d6e9; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 1808, x18)

inst_114:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc0fc879d9bd20 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x1886525f3e59b and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xebffc8fb4d6e9 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec0fc879d9bd20; op2val:0xbfe1886525f3e59b; op3val:0x7fdebffc8fb4d6e9; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 1824, x18)

inst_115:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc0fc879d9bd20 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x1886525f3e59b and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xebffc8fb4d6e9 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec0fc879d9bd20; op2val:0xbfe1886525f3e59b; op3val:0x7fdebffc8fb4d6e9; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1840, x18)

inst_116:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x301d64dd062a4 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x9b50e7b846e96 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xe89f4d63cd58f and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe301d64dd062a4; op2val:0xbfd9b50e7b846e96; op3val:0x7fce89f4d63cd58f; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 1856, x18)

inst_117:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x301d64dd062a4 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x9b50e7b846e96 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xe89f4d63cd58f and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe301d64dd062a4; op2val:0xbfd9b50e7b846e96; op3val:0x7fce89f4d63cd58f; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 1872, x18)

inst_118:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x301d64dd062a4 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x9b50e7b846e96 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xe89f4d63cd58f and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe301d64dd062a4; op2val:0xbfd9b50e7b846e96; op3val:0x7fce89f4d63cd58f; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 1888, x18)

inst_119:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x301d64dd062a4 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x9b50e7b846e96 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xe89f4d63cd58f and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe301d64dd062a4; op2val:0xbfd9b50e7b846e96; op3val:0x7fce89f4d63cd58f; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 1904, x18)

inst_120:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x301d64dd062a4 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x9b50e7b846e96 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xe89f4d63cd58f and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe301d64dd062a4; op2val:0xbfd9b50e7b846e96; op3val:0x7fce89f4d63cd58f; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1920, x18)

inst_121:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x757759ba0d957 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x5e60311171edb and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xff2581034fa57 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb757759ba0d957; op2val:0xbff5e60311171edb; op3val:0x7fbff2581034fa57; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 1936, x18)

inst_122:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x757759ba0d957 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x5e60311171edb and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xff2581034fa57 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb757759ba0d957; op2val:0xbff5e60311171edb; op3val:0x7fbff2581034fa57; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 1952, x18)

inst_123:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x757759ba0d957 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x5e60311171edb and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xff2581034fa57 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb757759ba0d957; op2val:0xbff5e60311171edb; op3val:0x7fbff2581034fa57; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 1968, x18)

inst_124:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x757759ba0d957 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x5e60311171edb and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xff2581034fa57 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb757759ba0d957; op2val:0xbff5e60311171edb; op3val:0x7fbff2581034fa57; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 1984, x18)

inst_125:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x757759ba0d957 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x5e60311171edb and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xff2581034fa57 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb757759ba0d957; op2val:0xbff5e60311171edb; op3val:0x7fbff2581034fa57; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 2000, x18)

inst_126:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x5d2823257dd0f and fs2 == 1 and fe2 == 0x401 and fm2 == 0xf57e62f78053d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x55fdf6c24cf14 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb5d2823257dd0f; op2val:0xc01f57e62f78053d; op3val:0x7fe55fdf6c24cf14; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_2)

inst_127:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x5d2823257dd0f and fs2 == 1 and fe2 == 0x401 and fm2 == 0xf57e62f78053d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x55fdf6c24cf14 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb5d2823257dd0f; op2val:0xc01f57e62f78053d; op3val:0x7fe55fdf6c24cf14; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 0, x18)

inst_128:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x5d2823257dd0f and fs2 == 1 and fe2 == 0x401 and fm2 == 0xf57e62f78053d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x55fdf6c24cf14 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb5d2823257dd0f; op2val:0xc01f57e62f78053d; op3val:0x7fe55fdf6c24cf14; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 16, x18)

inst_129:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x5d2823257dd0f and fs2 == 1 and fe2 == 0x401 and fm2 == 0xf57e62f78053d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x55fdf6c24cf14 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb5d2823257dd0f; op2val:0xc01f57e62f78053d; op3val:0x7fe55fdf6c24cf14; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 32, x18)

inst_130:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x5d2823257dd0f and fs2 == 1 and fe2 == 0x401 and fm2 == 0xf57e62f78053d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x55fdf6c24cf14 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb5d2823257dd0f; op2val:0xc01f57e62f78053d; op3val:0x7fe55fdf6c24cf14; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 48, x18)

inst_131:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6d352c81323cd and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd62a44832769d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x4f5df615dcd80 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe6d352c81323cd; op2val:0xbfed62a44832769d; op3val:0x7fe4f5df615dcd80; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 64, x18)

inst_132:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6d352c81323cd and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd62a44832769d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x4f5df615dcd80 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe6d352c81323cd; op2val:0xbfed62a44832769d; op3val:0x7fe4f5df615dcd80; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 80, x18)

inst_133:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6d352c81323cd and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd62a44832769d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x4f5df615dcd80 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe6d352c81323cd; op2val:0xbfed62a44832769d; op3val:0x7fe4f5df615dcd80; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 96, x18)

inst_134:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6d352c81323cd and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd62a44832769d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x4f5df615dcd80 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe6d352c81323cd; op2val:0xbfed62a44832769d; op3val:0x7fe4f5df615dcd80; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 112, x18)

inst_135:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6d352c81323cd and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd62a44832769d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x4f5df615dcd80 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe6d352c81323cd; op2val:0xbfed62a44832769d; op3val:0x7fe4f5df615dcd80; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 128, x18)

inst_136:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7937acd8e3cbf and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xf277f3bb58051 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x6f3f872195323 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe7937acd8e3cbf; op2val:0xbfcf277f3bb58051; op3val:0x7fc6f3f872195323; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 144, x18)

inst_137:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7937acd8e3cbf and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xf277f3bb58051 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x6f3f872195323 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe7937acd8e3cbf; op2val:0xbfcf277f3bb58051; op3val:0x7fc6f3f872195323; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 160, x18)

inst_138:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7937acd8e3cbf and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xf277f3bb58051 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x6f3f872195323 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe7937acd8e3cbf; op2val:0xbfcf277f3bb58051; op3val:0x7fc6f3f872195323; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 176, x18)

inst_139:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7937acd8e3cbf and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xf277f3bb58051 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x6f3f872195323 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe7937acd8e3cbf; op2val:0xbfcf277f3bb58051; op3val:0x7fc6f3f872195323; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 192, x18)

inst_140:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7937acd8e3cbf and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xf277f3bb58051 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x6f3f872195323 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe7937acd8e3cbf; op2val:0xbfcf277f3bb58051; op3val:0x7fc6f3f872195323; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 208, x18)

inst_141:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xe017c1dd0e81f and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x9562eda3c52fd and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x7c1f8e3a06fc9 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fce017c1dd0e81f; op2val:0xbff9562eda3c52fd; op3val:0x7fd7c1f8e3a06fc9; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 224, x18)

inst_142:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xe017c1dd0e81f and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x9562eda3c52fd and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x7c1f8e3a06fc9 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fce017c1dd0e81f; op2val:0xbff9562eda3c52fd; op3val:0x7fd7c1f8e3a06fc9; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 240, x18)

inst_143:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xe017c1dd0e81f and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x9562eda3c52fd and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x7c1f8e3a06fc9 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fce017c1dd0e81f; op2val:0xbff9562eda3c52fd; op3val:0x7fd7c1f8e3a06fc9; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 256, x18)

inst_144:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xe017c1dd0e81f and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x9562eda3c52fd and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x7c1f8e3a06fc9 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fce017c1dd0e81f; op2val:0xbff9562eda3c52fd; op3val:0x7fd7c1f8e3a06fc9; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 272, x18)

inst_145:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xe017c1dd0e81f and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x9562eda3c52fd and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x7c1f8e3a06fc9 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fce017c1dd0e81f; op2val:0xbff9562eda3c52fd; op3val:0x7fd7c1f8e3a06fc9; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 288, x18)

inst_146:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x08b3a93e68164 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x08f9ec7d021e2 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x11fbb1cedaf9f and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe08b3a93e68164; op2val:0xbfd08f9ec7d021e2; op3val:0x7fc11fbb1cedaf9f; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 304, x18)

inst_147:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x08b3a93e68164 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x08f9ec7d021e2 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x11fbb1cedaf9f and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe08b3a93e68164; op2val:0xbfd08f9ec7d021e2; op3val:0x7fc11fbb1cedaf9f; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 320, x18)

inst_148:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x08b3a93e68164 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x08f9ec7d021e2 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x11fbb1cedaf9f and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe08b3a93e68164; op2val:0xbfd08f9ec7d021e2; op3val:0x7fc11fbb1cedaf9f; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 336, x18)

inst_149:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x08b3a93e68164 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x08f9ec7d021e2 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x11fbb1cedaf9f and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe08b3a93e68164; op2val:0xbfd08f9ec7d021e2; op3val:0x7fc11fbb1cedaf9f; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 352, x18)

inst_150:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x08b3a93e68164 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x08f9ec7d021e2 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x11fbb1cedaf9f and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe08b3a93e68164; op2val:0xbfd08f9ec7d021e2; op3val:0x7fc11fbb1cedaf9f; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 368, x18)

inst_151:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x044a736a92e57 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x79f6133cbdfa9 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x804bd71223eac and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd044a736a92e57; op2val:0xc0079f6133cbdfa9; op3val:0x7fe804bd71223eac; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 384, x18)

inst_152:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x044a736a92e57 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x79f6133cbdfa9 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x804bd71223eac and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd044a736a92e57; op2val:0xc0079f6133cbdfa9; op3val:0x7fe804bd71223eac; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 400, x18)

inst_153:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x044a736a92e57 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x79f6133cbdfa9 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x804bd71223eac and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd044a736a92e57; op2val:0xc0079f6133cbdfa9; op3val:0x7fe804bd71223eac; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 416, x18)

inst_154:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x044a736a92e57 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x79f6133cbdfa9 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x804bd71223eac and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd044a736a92e57; op2val:0xc0079f6133cbdfa9; op3val:0x7fe804bd71223eac; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 432, x18)

inst_155:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x044a736a92e57 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x79f6133cbdfa9 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x804bd71223eac and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd044a736a92e57; op2val:0xc0079f6133cbdfa9; op3val:0x7fe804bd71223eac; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 448, x18)

inst_156:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x0d908c88167b9 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x0c3e8bc692402 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x1a752f4f14996 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd0d908c88167b9; op2val:0xc000c3e8bc692402; op3val:0x7fe1a752f4f14996; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 464, x18)

inst_157:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x0d908c88167b9 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x0c3e8bc692402 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x1a752f4f14996 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd0d908c88167b9; op2val:0xc000c3e8bc692402; op3val:0x7fe1a752f4f14996; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 480, x18)

inst_158:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x0d908c88167b9 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x0c3e8bc692402 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x1a752f4f14996 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd0d908c88167b9; op2val:0xc000c3e8bc692402; op3val:0x7fe1a752f4f14996; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 496, x18)

inst_159:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x0d908c88167b9 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x0c3e8bc692402 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x1a752f4f14996 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd0d908c88167b9; op2val:0xc000c3e8bc692402; op3val:0x7fe1a752f4f14996; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 512, x18)

inst_160:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x0d908c88167b9 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x0c3e8bc692402 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x1a752f4f14996 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd0d908c88167b9; op2val:0xc000c3e8bc692402; op3val:0x7fe1a752f4f14996; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 528, x18)

inst_161:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1c1aa7e3314b1 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1e717678a9551 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x3de3b2ce1e281 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe1c1aa7e3314b1; op2val:0xbff1e717678a9551; op3val:0x7fe3de3b2ce1e281; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 544, x18)

inst_162:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1c1aa7e3314b1 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1e717678a9551 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x3de3b2ce1e281 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe1c1aa7e3314b1; op2val:0xbff1e717678a9551; op3val:0x7fe3de3b2ce1e281; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 560, x18)

inst_163:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1c1aa7e3314b1 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1e717678a9551 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x3de3b2ce1e281 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe1c1aa7e3314b1; op2val:0xbff1e717678a9551; op3val:0x7fe3de3b2ce1e281; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 576, x18)

inst_164:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1c1aa7e3314b1 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1e717678a9551 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x3de3b2ce1e281 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe1c1aa7e3314b1; op2val:0xbff1e717678a9551; op3val:0x7fe3de3b2ce1e281; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 592, x18)

inst_165:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1c1aa7e3314b1 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1e717678a9551 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x3de3b2ce1e281 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe1c1aa7e3314b1; op2val:0xbff1e717678a9551; op3val:0x7fe3de3b2ce1e281; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 608, x18)

inst_166:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x02fdff92933c4 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xccc040bf7de2b and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd222e73c49406 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe02fdff92933c4; op2val:0xbffccc040bf7de2b; op3val:0x7fed222e73c49406; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 624, x18)

inst_167:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x02fdff92933c4 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xccc040bf7de2b and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd222e73c49406 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe02fdff92933c4; op2val:0xbffccc040bf7de2b; op3val:0x7fed222e73c49406; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 640, x18)

inst_168:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x02fdff92933c4 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xccc040bf7de2b and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd222e73c49406 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe02fdff92933c4; op2val:0xbffccc040bf7de2b; op3val:0x7fed222e73c49406; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 656, x18)

inst_169:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x02fdff92933c4 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xccc040bf7de2b and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd222e73c49406 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe02fdff92933c4; op2val:0xbffccc040bf7de2b; op3val:0x7fed222e73c49406; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 672, x18)
addi x16,x16,2040

inst_170:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x02fdff92933c4 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xccc040bf7de2b and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd222e73c49406 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe02fdff92933c4; op2val:0xbffccc040bf7de2b; op3val:0x7fed222e73c49406; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 688, x18)

inst_171:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x3578be9192ed7 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x0b659dcfe6383 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x433fc62b637c6 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc3578be9192ed7; op2val:0xc010b659dcfe6383; op3val:0x7fe433fc62b637c6; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 704, x18)

inst_172:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x3578be9192ed7 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x0b659dcfe6383 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x433fc62b637c6 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc3578be9192ed7; op2val:0xc010b659dcfe6383; op3val:0x7fe433fc62b637c6; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 720, x18)

inst_173:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x3578be9192ed7 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x0b659dcfe6383 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x433fc62b637c6 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc3578be9192ed7; op2val:0xc010b659dcfe6383; op3val:0x7fe433fc62b637c6; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 736, x18)

inst_174:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x3578be9192ed7 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x0b659dcfe6383 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x433fc62b637c6 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc3578be9192ed7; op2val:0xc010b659dcfe6383; op3val:0x7fe433fc62b637c6; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 752, x18)

inst_175:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x3578be9192ed7 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x0b659dcfe6383 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x433fc62b637c6 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc3578be9192ed7; op2val:0xc010b659dcfe6383; op3val:0x7fe433fc62b637c6; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 768, x18)

inst_176:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0xc8b6c88d8cc8f and fs2 == 1 and fe2 == 0x402 and fm2 == 0x903ba9163be01 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x65040492dcc30 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fac8b6c88d8cc8f; op2val:0xc02903ba9163be01; op3val:0x7fe65040492dcc30; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 784, x18)

inst_177:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0xc8b6c88d8cc8f and fs2 == 1 and fe2 == 0x402 and fm2 == 0x903ba9163be01 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x65040492dcc30 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fac8b6c88d8cc8f; op2val:0xc02903ba9163be01; op3val:0x7fe65040492dcc30; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 800, x18)

inst_178:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0xc8b6c88d8cc8f and fs2 == 1 and fe2 == 0x402 and fm2 == 0x903ba9163be01 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x65040492dcc30 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fac8b6c88d8cc8f; op2val:0xc02903ba9163be01; op3val:0x7fe65040492dcc30; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 816, x18)

inst_179:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0xc8b6c88d8cc8f and fs2 == 1 and fe2 == 0x402 and fm2 == 0x903ba9163be01 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x65040492dcc30 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fac8b6c88d8cc8f; op2val:0xc02903ba9163be01; op3val:0x7fe65040492dcc30; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 832, x18)

inst_180:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0xc8b6c88d8cc8f and fs2 == 1 and fe2 == 0x402 and fm2 == 0x903ba9163be01 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x65040492dcc30 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fac8b6c88d8cc8f; op2val:0xc02903ba9163be01; op3val:0x7fe65040492dcc30; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 848, x18)

inst_181:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe0880de9fe705 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x9845adb5f7a0a and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x7f2dd07517ff3 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fee0880de9fe705; op2val:0xbfd9845adb5f7a0a; op3val:0x7fd7f2dd07517ff3; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 864, x18)

inst_182:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe0880de9fe705 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x9845adb5f7a0a and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x7f2dd07517ff3 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fee0880de9fe705; op2val:0xbfd9845adb5f7a0a; op3val:0x7fd7f2dd07517ff3; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 880, x18)

inst_183:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe0880de9fe705 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x9845adb5f7a0a and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x7f2dd07517ff3 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fee0880de9fe705; op2val:0xbfd9845adb5f7a0a; op3val:0x7fd7f2dd07517ff3; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 896, x18)

inst_184:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe0880de9fe705 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x9845adb5f7a0a and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x7f2dd07517ff3 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fee0880de9fe705; op2val:0xbfd9845adb5f7a0a; op3val:0x7fd7f2dd07517ff3; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 912, x18)

inst_185:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe0880de9fe705 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x9845adb5f7a0a and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x7f2dd07517ff3 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fee0880de9fe705; op2val:0xbfd9845adb5f7a0a; op3val:0x7fd7f2dd07517ff3; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 928, x18)

inst_186:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x334fb99f530be and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xa19f8d728d0fc and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xf55465ad3c4e3 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe334fb99f530be; op2val:0xbfea19f8d728d0fc; op3val:0x7fdf55465ad3c4e3; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 944, x18)

inst_187:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x334fb99f530be and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xa19f8d728d0fc and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xf55465ad3c4e3 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe334fb99f530be; op2val:0xbfea19f8d728d0fc; op3val:0x7fdf55465ad3c4e3; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 960, x18)

inst_188:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x334fb99f530be and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xa19f8d728d0fc and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xf55465ad3c4e3 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe334fb99f530be; op2val:0xbfea19f8d728d0fc; op3val:0x7fdf55465ad3c4e3; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 976, x18)

inst_189:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x334fb99f530be and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xa19f8d728d0fc and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xf55465ad3c4e3 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe334fb99f530be; op2val:0xbfea19f8d728d0fc; op3val:0x7fdf55465ad3c4e3; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 992, x18)

inst_190:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x334fb99f530be and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xa19f8d728d0fc and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xf55465ad3c4e3 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe334fb99f530be; op2val:0xbfea19f8d728d0fc; op3val:0x7fdf55465ad3c4e3; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1008, x18)

inst_191:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xba07d50bb43b9 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x751b9ae3bf5f5 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x421e89d7bdb11 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdba07d50bb43b9; op2val:0xbfe751b9ae3bf5f5; op3val:0x7fd421e89d7bdb11; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 1024, x18)

inst_192:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xba07d50bb43b9 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x751b9ae3bf5f5 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x421e89d7bdb11 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdba07d50bb43b9; op2val:0xbfe751b9ae3bf5f5; op3val:0x7fd421e89d7bdb11; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 1040, x18)

inst_193:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xba07d50bb43b9 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x751b9ae3bf5f5 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x421e89d7bdb11 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdba07d50bb43b9; op2val:0xbfe751b9ae3bf5f5; op3val:0x7fd421e89d7bdb11; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 1056, x18)

inst_194:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xba07d50bb43b9 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x751b9ae3bf5f5 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x421e89d7bdb11 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdba07d50bb43b9; op2val:0xbfe751b9ae3bf5f5; op3val:0x7fd421e89d7bdb11; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 1072, x18)

inst_195:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xba07d50bb43b9 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x751b9ae3bf5f5 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x421e89d7bdb11 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdba07d50bb43b9; op2val:0xbfe751b9ae3bf5f5; op3val:0x7fd421e89d7bdb11; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1088, x18)

inst_196:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc1c521a7eb065 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x392da6532199c and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x131d1d028d523 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec1c521a7eb065; op2val:0xbfc392da6532199c; op3val:0x7fc131d1d028d523; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 1104, x18)

inst_197:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc1c521a7eb065 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x392da6532199c and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x131d1d028d523 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec1c521a7eb065; op2val:0xbfc392da6532199c; op3val:0x7fc131d1d028d523; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 1120, x18)

inst_198:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc1c521a7eb065 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x392da6532199c and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x131d1d028d523 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec1c521a7eb065; op2val:0xbfc392da6532199c; op3val:0x7fc131d1d028d523; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 1136, x18)

inst_199:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc1c521a7eb065 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x392da6532199c and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x131d1d028d523 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec1c521a7eb065; op2val:0xbfc392da6532199c; op3val:0x7fc131d1d028d523; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 1152, x18)

inst_200:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc1c521a7eb065 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x392da6532199c and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x131d1d028d523 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec1c521a7eb065; op2val:0xbfc392da6532199c; op3val:0x7fc131d1d028d523; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1168, x18)

inst_201:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2687ea87931ce and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x4a5ace34f346b and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x7c13ad5981860 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe2687ea87931ce; op2val:0xbff4a5ace34f346b; op3val:0x7fe7c13ad5981860; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 1184, x18)

inst_202:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2687ea87931ce and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x4a5ace34f346b and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x7c13ad5981860 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe2687ea87931ce; op2val:0xbff4a5ace34f346b; op3val:0x7fe7c13ad5981860; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 1200, x18)

inst_203:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2687ea87931ce and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x4a5ace34f346b and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x7c13ad5981860 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe2687ea87931ce; op2val:0xbff4a5ace34f346b; op3val:0x7fe7c13ad5981860; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 1216, x18)

inst_204:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2687ea87931ce and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x4a5ace34f346b and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x7c13ad5981860 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe2687ea87931ce; op2val:0xbff4a5ace34f346b; op3val:0x7fe7c13ad5981860; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 1232, x18)

inst_205:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2687ea87931ce and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x4a5ace34f346b and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x7c13ad5981860 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe2687ea87931ce; op2val:0xbff4a5ace34f346b; op3val:0x7fe7c13ad5981860; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1248, x18)

inst_206:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x26ed9a8f4b2cf and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x994d509fd4dc7 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0xd78aae48cf4ef and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb26ed9a8f4b2cf; op2val:0xbfe994d509fd4dc7; op3val:0x7fad78aae48cf4ef; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 1264, x18)

inst_207:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x26ed9a8f4b2cf and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x994d509fd4dc7 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0xd78aae48cf4ef and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb26ed9a8f4b2cf; op2val:0xbfe994d509fd4dc7; op3val:0x7fad78aae48cf4ef; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 1280, x18)

inst_208:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x26ed9a8f4b2cf and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x994d509fd4dc7 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0xd78aae48cf4ef and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb26ed9a8f4b2cf; op2val:0xbfe994d509fd4dc7; op3val:0x7fad78aae48cf4ef; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 1296, x18)

inst_209:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x26ed9a8f4b2cf and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x994d509fd4dc7 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0xd78aae48cf4ef and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb26ed9a8f4b2cf; op2val:0xbfe994d509fd4dc7; op3val:0x7fad78aae48cf4ef; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 1312, x18)

inst_210:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x26ed9a8f4b2cf and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x994d509fd4dc7 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0xd78aae48cf4ef and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb26ed9a8f4b2cf; op2val:0xbfe994d509fd4dc7; op3val:0x7fad78aae48cf4ef; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 1328, x18)

inst_211:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xbb3f5b5207447 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xc087849016946 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x844cc1df6d65d and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbbb3f5b5207447; op2val:0xc00c087849016946; op3val:0x7fd844cc1df6d65d; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 1344, x18)

inst_212:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xbb3f5b5207447 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xc087849016946 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x844cc1df6d65d and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbbb3f5b5207447; op2val:0xc00c087849016946; op3val:0x7fd844cc1df6d65d; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 1360, x18)

inst_213:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xbb3f5b5207447 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xc087849016946 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x844cc1df6d65d and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbbb3f5b5207447; op2val:0xc00c087849016946; op3val:0x7fd844cc1df6d65d; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 1376, x18)

inst_214:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xbb3f5b5207447 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xc087849016946 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x844cc1df6d65d and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbbb3f5b5207447; op2val:0xc00c087849016946; op3val:0x7fd844cc1df6d65d; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 1392, x18)

inst_215:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xbb3f5b5207447 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xc087849016946 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x844cc1df6d65d and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbbb3f5b5207447; op2val:0xc00c087849016946; op3val:0x7fd844cc1df6d65d; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 1408, x18)

inst_216:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3eabdfcda410e and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x1eaf1be01e8cd and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x64ddfe38d7e3f and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3eabdfcda410e; op2val:0xbfb1eaf1be01e8cd; op3val:0x7fa64ddfe38d7e3f; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 1424, x18)

inst_217:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3eabdfcda410e and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x1eaf1be01e8cd and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x64ddfe38d7e3f and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3eabdfcda410e; op2val:0xbfb1eaf1be01e8cd; op3val:0x7fa64ddfe38d7e3f; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 1440, x18)

inst_218:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3eabdfcda410e and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x1eaf1be01e8cd and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x64ddfe38d7e3f and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3eabdfcda410e; op2val:0xbfb1eaf1be01e8cd; op3val:0x7fa64ddfe38d7e3f; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 1456, x18)

inst_219:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3eabdfcda410e and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x1eaf1be01e8cd and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x64ddfe38d7e3f and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3eabdfcda410e; op2val:0xbfb1eaf1be01e8cd; op3val:0x7fa64ddfe38d7e3f; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 1472, x18)

inst_220:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3eabdfcda410e and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x1eaf1be01e8cd and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x64ddfe38d7e3f and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3eabdfcda410e; op2val:0xbfb1eaf1be01e8cd; op3val:0x7fa64ddfe38d7e3f; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 1488, x18)

inst_221:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xa7dee766a9c05 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x8eba83eb506d5 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x4a18af1135d97 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fda7dee766a9c05; op2val:0xbfd8eba83eb506d5; op3val:0x7fc4a18af1135d97; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 1504, x18)

inst_222:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xa7dee766a9c05 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x8eba83eb506d5 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x4a18af1135d97 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fda7dee766a9c05; op2val:0xbfd8eba83eb506d5; op3val:0x7fc4a18af1135d97; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 1520, x18)

inst_223:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xa7dee766a9c05 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x8eba83eb506d5 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x4a18af1135d97 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fda7dee766a9c05; op2val:0xbfd8eba83eb506d5; op3val:0x7fc4a18af1135d97; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 1536, x18)

inst_224:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xa7dee766a9c05 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x8eba83eb506d5 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x4a18af1135d97 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fda7dee766a9c05; op2val:0xbfd8eba83eb506d5; op3val:0x7fc4a18af1135d97; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 1552, x18)

inst_225:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xa7dee766a9c05 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x8eba83eb506d5 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x4a18af1135d97 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fda7dee766a9c05; op2val:0xbfd8eba83eb506d5; op3val:0x7fc4a18af1135d97; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 1568, x18)

inst_226:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x32a5a52edeb6b and fs2 == 1 and fe2 == 0x401 and fm2 == 0x04ff5f3321d9e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x38a220cbdbba0 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc32a5a52edeb6b; op2val:0xc0104ff5f3321d9e; op3val:0x7fe38a220cbdbba0; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 1584, x18)

inst_227:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x32a5a52edeb6b and fs2 == 1 and fe2 == 0x401 and fm2 == 0x04ff5f3321d9e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x38a220cbdbba0 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc32a5a52edeb6b; op2val:0xc0104ff5f3321d9e; op3val:0x7fe38a220cbdbba0; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 1600, x18)

inst_228:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x32a5a52edeb6b and fs2 == 1 and fe2 == 0x401 and fm2 == 0x04ff5f3321d9e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x38a220cbdbba0 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc32a5a52edeb6b; op2val:0xc0104ff5f3321d9e; op3val:0x7fe38a220cbdbba0; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 1616, x18)

inst_229:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x32a5a52edeb6b and fs2 == 1 and fe2 == 0x401 and fm2 == 0x04ff5f3321d9e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x38a220cbdbba0 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc32a5a52edeb6b; op2val:0xc0104ff5f3321d9e; op3val:0x7fe38a220cbdbba0; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 1632, x18)

inst_230:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x32a5a52edeb6b and fs2 == 1 and fe2 == 0x401 and fm2 == 0x04ff5f3321d9e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x38a220cbdbba0 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc32a5a52edeb6b; op2val:0xc0104ff5f3321d9e; op3val:0x7fe38a220cbdbba0; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 1648, x18)

inst_231:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x2b8342da56cc9 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x91bb5b7667690 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd603cf9c07b4f and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd2b8342da56cc9; op2val:0xc0091bb5b7667690; op3val:0x7fed603cf9c07b4f; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 1664, x18)

inst_232:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x2b8342da56cc9 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x91bb5b7667690 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd603cf9c07b4f and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd2b8342da56cc9; op2val:0xc0091bb5b7667690; op3val:0x7fed603cf9c07b4f; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 1680, x18)

inst_233:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x2b8342da56cc9 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x91bb5b7667690 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd603cf9c07b4f and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd2b8342da56cc9; op2val:0xc0091bb5b7667690; op3val:0x7fed603cf9c07b4f; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 1696, x18)

inst_234:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x2b8342da56cc9 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x91bb5b7667690 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd603cf9c07b4f and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd2b8342da56cc9; op2val:0xc0091bb5b7667690; op3val:0x7fed603cf9c07b4f; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 1712, x18)

inst_235:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x2b8342da56cc9 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x91bb5b7667690 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd603cf9c07b4f and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd2b8342da56cc9; op2val:0xc0091bb5b7667690; op3val:0x7fed603cf9c07b4f; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1728, x18)

inst_236:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6cc56079452a4 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x82ff5dfc297a3 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x13b6bcfe7a433 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe6cc56079452a4; op2val:0xbfc82ff5dfc297a3; op3val:0x7fc13b6bcfe7a433; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 1744, x18)

inst_237:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6cc56079452a4 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x82ff5dfc297a3 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x13b6bcfe7a433 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe6cc56079452a4; op2val:0xbfc82ff5dfc297a3; op3val:0x7fc13b6bcfe7a433; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 1760, x18)

inst_238:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6cc56079452a4 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x82ff5dfc297a3 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x13b6bcfe7a433 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe6cc56079452a4; op2val:0xbfc82ff5dfc297a3; op3val:0x7fc13b6bcfe7a433; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 1776, x18)

inst_239:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6cc56079452a4 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x82ff5dfc297a3 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x13b6bcfe7a433 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe6cc56079452a4; op2val:0xbfc82ff5dfc297a3; op3val:0x7fc13b6bcfe7a433; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 1792, x18)

inst_240:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6cc56079452a4 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x82ff5dfc297a3 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x13b6bcfe7a433 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe6cc56079452a4; op2val:0xbfc82ff5dfc297a3; op3val:0x7fc13b6bcfe7a433; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1808, x18)

inst_241:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4a9e1874c223f and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x798381c88996d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe78ca8871d2d9 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe4a9e1874c223f; op2val:0xbff798381c88996d; op3val:0x7fee78ca8871d2d9; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 1824, x18)

inst_242:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4a9e1874c223f and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x798381c88996d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe78ca8871d2d9 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe4a9e1874c223f; op2val:0xbff798381c88996d; op3val:0x7fee78ca8871d2d9; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 1840, x18)

inst_243:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4a9e1874c223f and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x798381c88996d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe78ca8871d2d9 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe4a9e1874c223f; op2val:0xbff798381c88996d; op3val:0x7fee78ca8871d2d9; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 1856, x18)

inst_244:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4a9e1874c223f and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x798381c88996d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe78ca8871d2d9 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe4a9e1874c223f; op2val:0xbff798381c88996d; op3val:0x7fee78ca8871d2d9; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 1872, x18)

inst_245:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4a9e1874c223f and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x798381c88996d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe78ca8871d2d9 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe4a9e1874c223f; op2val:0xbff798381c88996d; op3val:0x7fee78ca8871d2d9; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1888, x18)

inst_246:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xaf22d587d4b04 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x0a9988863bc52 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xc0fcc39d53823 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feaf22d587d4b04; op2val:0xbfd0a9988863bc52; op3val:0x7fcc0fcc39d53823; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 1904, x18)

inst_247:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xaf22d587d4b04 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x0a9988863bc52 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xc0fcc39d53823 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feaf22d587d4b04; op2val:0xbfd0a9988863bc52; op3val:0x7fcc0fcc39d53823; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 1920, x18)

inst_248:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xaf22d587d4b04 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x0a9988863bc52 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xc0fcc39d53823 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feaf22d587d4b04; op2val:0xbfd0a9988863bc52; op3val:0x7fcc0fcc39d53823; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 1936, x18)

inst_249:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xaf22d587d4b04 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x0a9988863bc52 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xc0fcc39d53823 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feaf22d587d4b04; op2val:0xbfd0a9988863bc52; op3val:0x7fcc0fcc39d53823; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 1952, x18)

inst_250:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xaf22d587d4b04 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x0a9988863bc52 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xc0fcc39d53823 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feaf22d587d4b04; op2val:0xbfd0a9988863bc52; op3val:0x7fcc0fcc39d53823; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1968, x18)

inst_251:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6709ff5f25f26 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x1d95904baffc5 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x9087e47e5604f and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe6709ff5f25f26; op2val:0xbfb1d95904baffc5; op3val:0x7fa9087e47e5604f; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 1984, x18)

inst_252:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6709ff5f25f26 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x1d95904baffc5 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x9087e47e5604f and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe6709ff5f25f26; op2val:0xbfb1d95904baffc5; op3val:0x7fa9087e47e5604f; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 2000, x18)

inst_253:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6709ff5f25f26 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x1d95904baffc5 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x9087e47e5604f and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe6709ff5f25f26; op2val:0xbfb1d95904baffc5; op3val:0x7fa9087e47e5604f; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_3)

inst_254:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6709ff5f25f26 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x1d95904baffc5 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x9087e47e5604f and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe6709ff5f25f26; op2val:0xbfb1d95904baffc5; op3val:0x7fa9087e47e5604f; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 0, x18)
addi x16,x16,2040

inst_255:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6709ff5f25f26 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x1d95904baffc5 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x9087e47e5604f and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe6709ff5f25f26; op2val:0xbfb1d95904baffc5; op3val:0x7fa9087e47e5604f; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 16, x18)

inst_256:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf516548465a7f and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0523ba07c099e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xff25b259efc09 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef516548465a7f; op2val:0xbff0523ba07c099e; op3val:0x7feff25b259efc09; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 32, x18)

inst_257:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf516548465a7f and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0523ba07c099e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xff25b259efc09 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef516548465a7f; op2val:0xbff0523ba07c099e; op3val:0x7feff25b259efc09; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 48, x18)

inst_258:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf516548465a7f and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0523ba07c099e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xff25b259efc09 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef516548465a7f; op2val:0xbff0523ba07c099e; op3val:0x7feff25b259efc09; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 64, x18)

inst_259:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf516548465a7f and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0523ba07c099e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xff25b259efc09 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef516548465a7f; op2val:0xbff0523ba07c099e; op3val:0x7feff25b259efc09; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 80, x18)

inst_260:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf516548465a7f and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0523ba07c099e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xff25b259efc09 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef516548465a7f; op2val:0xbff0523ba07c099e; op3val:0x7feff25b259efc09; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 96, x18)

inst_261:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xa2aa7aaa16f3f and fs2 == 1 and fe2 == 0x403 and fm2 == 0xc472e2120c319 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x71f8711b7a3e6 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f9a2aa7aaa16f3f; op2val:0xc03c472e2120c319; op3val:0x7fe71f8711b7a3e6; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 112, x18)

inst_262:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xa2aa7aaa16f3f and fs2 == 1 and fe2 == 0x403 and fm2 == 0xc472e2120c319 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x71f8711b7a3e6 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f9a2aa7aaa16f3f; op2val:0xc03c472e2120c319; op3val:0x7fe71f8711b7a3e6; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 128, x18)

inst_263:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xa2aa7aaa16f3f and fs2 == 1 and fe2 == 0x403 and fm2 == 0xc472e2120c319 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x71f8711b7a3e6 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f9a2aa7aaa16f3f; op2val:0xc03c472e2120c319; op3val:0x7fe71f8711b7a3e6; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 144, x18)

inst_264:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xa2aa7aaa16f3f and fs2 == 1 and fe2 == 0x403 and fm2 == 0xc472e2120c319 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x71f8711b7a3e6 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f9a2aa7aaa16f3f; op2val:0xc03c472e2120c319; op3val:0x7fe71f8711b7a3e6; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 160, x18)

inst_265:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xa2aa7aaa16f3f and fs2 == 1 and fe2 == 0x403 and fm2 == 0xc472e2120c319 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x71f8711b7a3e6 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f9a2aa7aaa16f3f; op2val:0xc03c472e2120c319; op3val:0x7fe71f8711b7a3e6; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 176, x18)

inst_266:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9560528406d76 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xad2149bedf2cb and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x53c3903c4c733 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9560528406d76; op2val:0xbfead2149bedf2cb; op3val:0x7fe53c3903c4c733; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 192, x18)

inst_267:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9560528406d76 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xad2149bedf2cb and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x53c3903c4c733 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9560528406d76; op2val:0xbfead2149bedf2cb; op3val:0x7fe53c3903c4c733; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 208, x18)

inst_268:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9560528406d76 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xad2149bedf2cb and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x53c3903c4c733 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9560528406d76; op2val:0xbfead2149bedf2cb; op3val:0x7fe53c3903c4c733; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 224, x18)

inst_269:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9560528406d76 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xad2149bedf2cb and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x53c3903c4c733 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9560528406d76; op2val:0xbfead2149bedf2cb; op3val:0x7fe53c3903c4c733; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 240, x18)

inst_270:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9560528406d76 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xad2149bedf2cb and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x53c3903c4c733 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9560528406d76; op2val:0xbfead2149bedf2cb; op3val:0x7fe53c3903c4c733; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 256, x18)

inst_271:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xd71456446788f and fs2 == 1 and fe2 == 0x400 and fm2 == 0xc8156304f48af and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa3a1ca4573daa and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcd71456446788f; op2val:0xc00c8156304f48af; op3val:0x7fea3a1ca4573daa; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 272, x18)

inst_272:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xd71456446788f and fs2 == 1 and fe2 == 0x400 and fm2 == 0xc8156304f48af and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa3a1ca4573daa and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcd71456446788f; op2val:0xc00c8156304f48af; op3val:0x7fea3a1ca4573daa; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 288, x18)

inst_273:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xd71456446788f and fs2 == 1 and fe2 == 0x400 and fm2 == 0xc8156304f48af and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa3a1ca4573daa and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcd71456446788f; op2val:0xc00c8156304f48af; op3val:0x7fea3a1ca4573daa; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 304, x18)

inst_274:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xd71456446788f and fs2 == 1 and fe2 == 0x400 and fm2 == 0xc8156304f48af and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa3a1ca4573daa and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcd71456446788f; op2val:0xc00c8156304f48af; op3val:0x7fea3a1ca4573daa; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 320, x18)

inst_275:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xd71456446788f and fs2 == 1 and fe2 == 0x400 and fm2 == 0xc8156304f48af and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa3a1ca4573daa and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcd71456446788f; op2val:0xc00c8156304f48af; op3val:0x7fea3a1ca4573daa; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 336, x18)

inst_276:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9fa745031b828 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x5934859e5a768 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x183ed9771bd67 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9fa745031b828; op2val:0xbfb5934859e5a768; op3val:0x7fb183ed9771bd67; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 352, x18)

inst_277:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9fa745031b828 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x5934859e5a768 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x183ed9771bd67 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9fa745031b828; op2val:0xbfb5934859e5a768; op3val:0x7fb183ed9771bd67; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 368, x18)

inst_278:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9fa745031b828 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x5934859e5a768 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x183ed9771bd67 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9fa745031b828; op2val:0xbfb5934859e5a768; op3val:0x7fb183ed9771bd67; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 384, x18)

inst_279:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9fa745031b828 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x5934859e5a768 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x183ed9771bd67 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9fa745031b828; op2val:0xbfb5934859e5a768; op3val:0x7fb183ed9771bd67; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 400, x18)

inst_280:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9fa745031b828 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x5934859e5a768 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x183ed9771bd67 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9fa745031b828; op2val:0xbfb5934859e5a768; op3val:0x7fb183ed9771bd67; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 416, x18)

inst_281:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x3a6cc16cf18c7 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xe870a12fb73fb and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x2bf4d322a6663 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc3a6cc16cf18c7; op2val:0xc00e870a12fb73fb; op3val:0x7fe2bf4d322a6663; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 432, x18)

inst_282:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x3a6cc16cf18c7 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xe870a12fb73fb and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x2bf4d322a6663 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc3a6cc16cf18c7; op2val:0xc00e870a12fb73fb; op3val:0x7fe2bf4d322a6663; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 448, x18)

inst_283:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x3a6cc16cf18c7 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xe870a12fb73fb and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x2bf4d322a6663 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc3a6cc16cf18c7; op2val:0xc00e870a12fb73fb; op3val:0x7fe2bf4d322a6663; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 464, x18)

inst_284:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x3a6cc16cf18c7 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xe870a12fb73fb and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x2bf4d322a6663 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc3a6cc16cf18c7; op2val:0xc00e870a12fb73fb; op3val:0x7fe2bf4d322a6663; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 480, x18)

inst_285:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x3a6cc16cf18c7 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xe870a12fb73fb and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x2bf4d322a6663 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc3a6cc16cf18c7; op2val:0xc00e870a12fb73fb; op3val:0x7fe2bf4d322a6663; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 496, x18)

inst_286:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xfda0547c88b3d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x54408d47465ab and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x52acb8c4db5fb and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdfda0547c88b3d; op2val:0xbfe54408d47465ab; op3val:0x7fd52acb8c4db5fb; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 512, x18)

inst_287:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xfda0547c88b3d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x54408d47465ab and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x52acb8c4db5fb and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdfda0547c88b3d; op2val:0xbfe54408d47465ab; op3val:0x7fd52acb8c4db5fb; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 528, x18)

inst_288:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xfda0547c88b3d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x54408d47465ab and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x52acb8c4db5fb and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdfda0547c88b3d; op2val:0xbfe54408d47465ab; op3val:0x7fd52acb8c4db5fb; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 544, x18)

inst_289:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xfda0547c88b3d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x54408d47465ab and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x52acb8c4db5fb and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdfda0547c88b3d; op2val:0xbfe54408d47465ab; op3val:0x7fd52acb8c4db5fb; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 560, x18)

inst_290:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xfda0547c88b3d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x54408d47465ab and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x52acb8c4db5fb and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdfda0547c88b3d; op2val:0xbfe54408d47465ab; op3val:0x7fd52acb8c4db5fb; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 576, x18)

inst_291:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe9e4fed8fd631 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x25d291c01d853 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x19230638e04c1 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fde9e4fed8fd631; op2val:0xbff25d291c01d853; op3val:0x7fe19230638e04c1; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 592, x18)

inst_292:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe9e4fed8fd631 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x25d291c01d853 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x19230638e04c1 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fde9e4fed8fd631; op2val:0xbff25d291c01d853; op3val:0x7fe19230638e04c1; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 608, x18)

inst_293:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe9e4fed8fd631 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x25d291c01d853 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x19230638e04c1 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fde9e4fed8fd631; op2val:0xbff25d291c01d853; op3val:0x7fe19230638e04c1; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 624, x18)

inst_294:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe9e4fed8fd631 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x25d291c01d853 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x19230638e04c1 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fde9e4fed8fd631; op2val:0xbff25d291c01d853; op3val:0x7fe19230638e04c1; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 640, x18)

inst_295:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe9e4fed8fd631 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x25d291c01d853 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x19230638e04c1 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fde9e4fed8fd631; op2val:0xbff25d291c01d853; op3val:0x7fe19230638e04c1; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 656, x18)

inst_296:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd2441313e69d8 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x40e12b2f0404e and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x24379a2a5ae43 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fed2441313e69d8; op2val:0xbfc40e12b2f0404e; op3val:0x7fc24379a2a5ae43; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 672, x18)

inst_297:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd2441313e69d8 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x40e12b2f0404e and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x24379a2a5ae43 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fed2441313e69d8; op2val:0xbfc40e12b2f0404e; op3val:0x7fc24379a2a5ae43; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 688, x18)

inst_298:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd2441313e69d8 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x40e12b2f0404e and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x24379a2a5ae43 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fed2441313e69d8; op2val:0xbfc40e12b2f0404e; op3val:0x7fc24379a2a5ae43; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 704, x18)

inst_299:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd2441313e69d8 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x40e12b2f0404e and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x24379a2a5ae43 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fed2441313e69d8; op2val:0xbfc40e12b2f0404e; op3val:0x7fc24379a2a5ae43; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 720, x18)

inst_300:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd2441313e69d8 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x40e12b2f0404e and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x24379a2a5ae43 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fed2441313e69d8; op2val:0xbfc40e12b2f0404e; op3val:0x7fc24379a2a5ae43; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 736, x18)

inst_301:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x253bd6d2fe97d and fs2 == 1 and fe2 == 0x400 and fm2 == 0x5cfa06072e1a1 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8fbbbb5e3c9d7 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd253bd6d2fe97d; op2val:0xc005cfa06072e1a1; op3val:0x7fe8fbbbb5e3c9d7; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 752, x18)

inst_302:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x253bd6d2fe97d and fs2 == 1 and fe2 == 0x400 and fm2 == 0x5cfa06072e1a1 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8fbbbb5e3c9d7 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd253bd6d2fe97d; op2val:0xc005cfa06072e1a1; op3val:0x7fe8fbbbb5e3c9d7; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 768, x18)

inst_303:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x253bd6d2fe97d and fs2 == 1 and fe2 == 0x400 and fm2 == 0x5cfa06072e1a1 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8fbbbb5e3c9d7 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd253bd6d2fe97d; op2val:0xc005cfa06072e1a1; op3val:0x7fe8fbbbb5e3c9d7; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 784, x18)

inst_304:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x253bd6d2fe97d and fs2 == 1 and fe2 == 0x400 and fm2 == 0x5cfa06072e1a1 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8fbbbb5e3c9d7 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd253bd6d2fe97d; op2val:0xc005cfa06072e1a1; op3val:0x7fe8fbbbb5e3c9d7; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 800, x18)

inst_305:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x253bd6d2fe97d and fs2 == 1 and fe2 == 0x400 and fm2 == 0x5cfa06072e1a1 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8fbbbb5e3c9d7 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd253bd6d2fe97d; op2val:0xc005cfa06072e1a1; op3val:0x7fe8fbbbb5e3c9d7; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 816, x18)

inst_306:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x63a56d71db193 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x3f073cbea8835 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xbb35314a82aa5 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe63a56d71db193; op2val:0xbfe3f073cbea8835; op3val:0x7fdbb35314a82aa5; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 832, x18)

inst_307:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x63a56d71db193 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x3f073cbea8835 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xbb35314a82aa5 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe63a56d71db193; op2val:0xbfe3f073cbea8835; op3val:0x7fdbb35314a82aa5; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 848, x18)

inst_308:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x63a56d71db193 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x3f073cbea8835 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xbb35314a82aa5 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe63a56d71db193; op2val:0xbfe3f073cbea8835; op3val:0x7fdbb35314a82aa5; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 864, x18)

inst_309:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x63a56d71db193 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x3f073cbea8835 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xbb35314a82aa5 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe63a56d71db193; op2val:0xbfe3f073cbea8835; op3val:0x7fdbb35314a82aa5; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 880, x18)

inst_310:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x63a56d71db193 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x3f073cbea8835 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xbb35314a82aa5 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe63a56d71db193; op2val:0xbfe3f073cbea8835; op3val:0x7fdbb35314a82aa5; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 896, x18)

inst_311:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x0e8eee9b78077 and fs2 == 1 and fe2 == 0x402 and fm2 == 0x95229efde7a10 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xac2cb68034dca and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb0e8eee9b78077; op2val:0xc0295229efde7a10; op3val:0x7feac2cb68034dca; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 912, x18)

inst_312:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x0e8eee9b78077 and fs2 == 1 and fe2 == 0x402 and fm2 == 0x95229efde7a10 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xac2cb68034dca and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb0e8eee9b78077; op2val:0xc0295229efde7a10; op3val:0x7feac2cb68034dca; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 928, x18)

inst_313:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x0e8eee9b78077 and fs2 == 1 and fe2 == 0x402 and fm2 == 0x95229efde7a10 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xac2cb68034dca and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb0e8eee9b78077; op2val:0xc0295229efde7a10; op3val:0x7feac2cb68034dca; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 944, x18)

inst_314:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x0e8eee9b78077 and fs2 == 1 and fe2 == 0x402 and fm2 == 0x95229efde7a10 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xac2cb68034dca and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb0e8eee9b78077; op2val:0xc0295229efde7a10; op3val:0x7feac2cb68034dca; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 960, x18)

inst_315:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x0e8eee9b78077 and fs2 == 1 and fe2 == 0x402 and fm2 == 0x95229efde7a10 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xac2cb68034dca and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb0e8eee9b78077; op2val:0xc0295229efde7a10; op3val:0x7feac2cb68034dca; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 976, x18)

inst_316:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x2f9038bb87e4d and fs2 == 1 and fe2 == 0x400 and fm2 == 0x6662cdadc781c and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa8f8d870864b8 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd2f9038bb87e4d; op2val:0xc006662cdadc781c; op3val:0x7fea8f8d870864b8; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 992, x18)

inst_317:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x2f9038bb87e4d and fs2 == 1 and fe2 == 0x400 and fm2 == 0x6662cdadc781c and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa8f8d870864b8 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd2f9038bb87e4d; op2val:0xc006662cdadc781c; op3val:0x7fea8f8d870864b8; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 1008, x18)

inst_318:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x2f9038bb87e4d and fs2 == 1 and fe2 == 0x400 and fm2 == 0x6662cdadc781c and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa8f8d870864b8 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd2f9038bb87e4d; op2val:0xc006662cdadc781c; op3val:0x7fea8f8d870864b8; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 1024, x18)

inst_319:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x2f9038bb87e4d and fs2 == 1 and fe2 == 0x400 and fm2 == 0x6662cdadc781c and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa8f8d870864b8 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd2f9038bb87e4d; op2val:0xc006662cdadc781c; op3val:0x7fea8f8d870864b8; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 1040, x18)

inst_320:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x2f9038bb87e4d and fs2 == 1 and fe2 == 0x400 and fm2 == 0x6662cdadc781c and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa8f8d870864b8 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd2f9038bb87e4d; op2val:0xc006662cdadc781c; op3val:0x7fea8f8d870864b8; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1056, x18)

inst_321:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb42c6b2e0e14b and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xd850efa48c7f0 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x925de5e61e1ff and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feb42c6b2e0e14b; op2val:0xbfcd850efa48c7f0; op3val:0x7fc925de5e61e1ff; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 1072, x18)

inst_322:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb42c6b2e0e14b and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xd850efa48c7f0 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x925de5e61e1ff and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feb42c6b2e0e14b; op2val:0xbfcd850efa48c7f0; op3val:0x7fc925de5e61e1ff; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 1088, x18)

inst_323:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb42c6b2e0e14b and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xd850efa48c7f0 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x925de5e61e1ff and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feb42c6b2e0e14b; op2val:0xbfcd850efa48c7f0; op3val:0x7fc925de5e61e1ff; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 1104, x18)

inst_324:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb42c6b2e0e14b and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xd850efa48c7f0 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x925de5e61e1ff and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feb42c6b2e0e14b; op2val:0xbfcd850efa48c7f0; op3val:0x7fc925de5e61e1ff; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 1120, x18)

inst_325:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb42c6b2e0e14b and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xd850efa48c7f0 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x925de5e61e1ff and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feb42c6b2e0e14b; op2val:0xbfcd850efa48c7f0; op3val:0x7fc925de5e61e1ff; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1136, x18)

inst_326:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x8ab9793ce4623 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x043ed2f7bd013 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x91453d575687b and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd8ab9793ce4623; op2val:0xbff043ed2f7bd013; op3val:0x7fd91453d575687b; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 1152, x18)

inst_327:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x8ab9793ce4623 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x043ed2f7bd013 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x91453d575687b and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd8ab9793ce4623; op2val:0xbff043ed2f7bd013; op3val:0x7fd91453d575687b; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 1168, x18)

inst_328:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x8ab9793ce4623 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x043ed2f7bd013 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x91453d575687b and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd8ab9793ce4623; op2val:0xbff043ed2f7bd013; op3val:0x7fd91453d575687b; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 1184, x18)

inst_329:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x8ab9793ce4623 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x043ed2f7bd013 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x91453d575687b and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd8ab9793ce4623; op2val:0xbff043ed2f7bd013; op3val:0x7fd91453d575687b; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 1200, x18)

inst_330:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x8ab9793ce4623 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x043ed2f7bd013 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x91453d575687b and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd8ab9793ce4623; op2val:0xbff043ed2f7bd013; op3val:0x7fd91453d575687b; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1216, x18)

inst_331:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xed71b46de9a5d and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xe45a211c6b969 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd2cc5975d63a2 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fded71b46de9a5d; op2val:0xbffe45a211c6b969; op3val:0x7fed2cc5975d63a2; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 1232, x18)

inst_332:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xed71b46de9a5d and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xe45a211c6b969 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd2cc5975d63a2 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fded71b46de9a5d; op2val:0xbffe45a211c6b969; op3val:0x7fed2cc5975d63a2; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 1248, x18)

inst_333:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xed71b46de9a5d and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xe45a211c6b969 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd2cc5975d63a2 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fded71b46de9a5d; op2val:0xbffe45a211c6b969; op3val:0x7fed2cc5975d63a2; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 1264, x18)

inst_334:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xed71b46de9a5d and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xe45a211c6b969 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd2cc5975d63a2 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fded71b46de9a5d; op2val:0xbffe45a211c6b969; op3val:0x7fed2cc5975d63a2; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 1280, x18)

inst_335:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xed71b46de9a5d and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xe45a211c6b969 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd2cc5975d63a2 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fded71b46de9a5d; op2val:0xbffe45a211c6b969; op3val:0x7fed2cc5975d63a2; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1296, x18)

inst_336:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6a96ba7d02570 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc917be2f7ebb8 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x43b459e986fea and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe6a96ba7d02570; op2val:0xbfec917be2f7ebb8; op3val:0x7fe43b459e986fea; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 1312, x18)

inst_337:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6a96ba7d02570 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc917be2f7ebb8 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x43b459e986fea and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe6a96ba7d02570; op2val:0xbfec917be2f7ebb8; op3val:0x7fe43b459e986fea; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 1328, x18)

inst_338:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6a96ba7d02570 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc917be2f7ebb8 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x43b459e986fea and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe6a96ba7d02570; op2val:0xbfec917be2f7ebb8; op3val:0x7fe43b459e986fea; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 1344, x18)

inst_339:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6a96ba7d02570 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc917be2f7ebb8 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x43b459e986fea and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe6a96ba7d02570; op2val:0xbfec917be2f7ebb8; op3val:0x7fe43b459e986fea; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 1360, x18)
addi x16,x16,2040

inst_340:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6a96ba7d02570 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc917be2f7ebb8 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x43b459e986fea and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe6a96ba7d02570; op2val:0xbfec917be2f7ebb8; op3val:0x7fe43b459e986fea; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 1376, x18)

inst_341:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xb5ff414c256c5 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x5886744e56a0a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x26ba852c18dc1 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdb5ff414c256c5; op2val:0xbff5886744e56a0a; op3val:0x7fe26ba852c18dc1; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 1392, x18)

inst_342:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xb5ff414c256c5 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x5886744e56a0a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x26ba852c18dc1 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdb5ff414c256c5; op2val:0xbff5886744e56a0a; op3val:0x7fe26ba852c18dc1; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 1408, x18)

inst_343:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xb5ff414c256c5 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x5886744e56a0a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x26ba852c18dc1 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdb5ff414c256c5; op2val:0xbff5886744e56a0a; op3val:0x7fe26ba852c18dc1; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 1424, x18)

inst_344:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xb5ff414c256c5 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x5886744e56a0a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x26ba852c18dc1 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdb5ff414c256c5; op2val:0xbff5886744e56a0a; op3val:0x7fe26ba852c18dc1; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 1440, x18)

inst_345:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xb5ff414c256c5 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x5886744e56a0a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x26ba852c18dc1 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdb5ff414c256c5; op2val:0xbff5886744e56a0a; op3val:0x7fe26ba852c18dc1; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 1456, x18)

inst_346:
// fs1 == 0 and fe1 == 0x7f8 and fm1 == 0xdd1e76dfee33f and fs2 == 1 and fe2 == 0x404 and fm2 == 0xabaae8cebcd22 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8e882c33ae96b and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f8dd1e76dfee33f; op2val:0xc04abaae8cebcd22; op3val:0x7fe8e882c33ae96b; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 1472, x18)

inst_347:
// fs1 == 0 and fe1 == 0x7f8 and fm1 == 0xdd1e76dfee33f and fs2 == 1 and fe2 == 0x404 and fm2 == 0xabaae8cebcd22 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8e882c33ae96b and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f8dd1e76dfee33f; op2val:0xc04abaae8cebcd22; op3val:0x7fe8e882c33ae96b; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 1488, x18)

inst_348:
// fs1 == 0 and fe1 == 0x7f8 and fm1 == 0xdd1e76dfee33f and fs2 == 1 and fe2 == 0x404 and fm2 == 0xabaae8cebcd22 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8e882c33ae96b and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f8dd1e76dfee33f; op2val:0xc04abaae8cebcd22; op3val:0x7fe8e882c33ae96b; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 1504, x18)

inst_349:
// fs1 == 0 and fe1 == 0x7f8 and fm1 == 0xdd1e76dfee33f and fs2 == 1 and fe2 == 0x404 and fm2 == 0xabaae8cebcd22 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8e882c33ae96b and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f8dd1e76dfee33f; op2val:0xc04abaae8cebcd22; op3val:0x7fe8e882c33ae96b; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 1520, x18)

inst_350:
// fs1 == 0 and fe1 == 0x7f8 and fm1 == 0xdd1e76dfee33f and fs2 == 1 and fe2 == 0x404 and fm2 == 0xabaae8cebcd22 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8e882c33ae96b and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f8dd1e76dfee33f; op2val:0xc04abaae8cebcd22; op3val:0x7fe8e882c33ae96b; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 1536, x18)

inst_351:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc6a025abfeb31 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x3a98c6f1b9e65 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x1757df4c3c481 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec6a025abfeb31; op2val:0xbfe3a98c6f1b9e65; op3val:0x7fe1757df4c3c481; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 1552, x18)

inst_352:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc6a025abfeb31 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x3a98c6f1b9e65 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x1757df4c3c481 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec6a025abfeb31; op2val:0xbfe3a98c6f1b9e65; op3val:0x7fe1757df4c3c481; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 1568, x18)

inst_353:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc6a025abfeb31 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x3a98c6f1b9e65 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x1757df4c3c481 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec6a025abfeb31; op2val:0xbfe3a98c6f1b9e65; op3val:0x7fe1757df4c3c481; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 1584, x18)

inst_354:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc6a025abfeb31 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x3a98c6f1b9e65 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x1757df4c3c481 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec6a025abfeb31; op2val:0xbfe3a98c6f1b9e65; op3val:0x7fe1757df4c3c481; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 1600, x18)

inst_355:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc6a025abfeb31 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x3a98c6f1b9e65 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x1757df4c3c481 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec6a025abfeb31; op2val:0xbfe3a98c6f1b9e65; op3val:0x7fe1757df4c3c481; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 1616, x18)

inst_356:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xd28c6757c6183 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x0180789f482ba and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd54915c6e2edb and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdd28c6757c6183; op2val:0xc000180789f482ba; op3val:0x7fed54915c6e2edb; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 1632, x18)

inst_357:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xd28c6757c6183 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x0180789f482ba and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd54915c6e2edb and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdd28c6757c6183; op2val:0xc000180789f482ba; op3val:0x7fed54915c6e2edb; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 1648, x18)

inst_358:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xd28c6757c6183 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x0180789f482ba and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd54915c6e2edb and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdd28c6757c6183; op2val:0xc000180789f482ba; op3val:0x7fed54915c6e2edb; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 1664, x18)

inst_359:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xd28c6757c6183 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x0180789f482ba and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd54915c6e2edb and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdd28c6757c6183; op2val:0xc000180789f482ba; op3val:0x7fed54915c6e2edb; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 1680, x18)

inst_360:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xd28c6757c6183 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x0180789f482ba and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd54915c6e2edb and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdd28c6757c6183; op2val:0xc000180789f482ba; op3val:0x7fed54915c6e2edb; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1696, x18)

inst_361:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x2a6cf802e779f and fs2 == 1 and fe2 == 0x401 and fm2 == 0xbb77e316e5303 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x027b2946d02e9 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fa2a6cf802e779f; op2val:0xc01bb77e316e5303; op3val:0x7fd027b2946d02e9; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 1712, x18)

inst_362:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x2a6cf802e779f and fs2 == 1 and fe2 == 0x401 and fm2 == 0xbb77e316e5303 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x027b2946d02e9 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fa2a6cf802e779f; op2val:0xc01bb77e316e5303; op3val:0x7fd027b2946d02e9; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 1728, x18)

inst_363:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x2a6cf802e779f and fs2 == 1 and fe2 == 0x401 and fm2 == 0xbb77e316e5303 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x027b2946d02e9 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fa2a6cf802e779f; op2val:0xc01bb77e316e5303; op3val:0x7fd027b2946d02e9; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 1744, x18)

inst_364:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x2a6cf802e779f and fs2 == 1 and fe2 == 0x401 and fm2 == 0xbb77e316e5303 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x027b2946d02e9 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fa2a6cf802e779f; op2val:0xc01bb77e316e5303; op3val:0x7fd027b2946d02e9; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 1760, x18)

inst_365:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x2a6cf802e779f and fs2 == 1 and fe2 == 0x401 and fm2 == 0xbb77e316e5303 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x027b2946d02e9 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fa2a6cf802e779f; op2val:0xc01bb77e316e5303; op3val:0x7fd027b2946d02e9; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1776, x18)

inst_366:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7d72e47402429 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x960529f3b1939 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x2e7df4087a8bb and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe7d72e47402429; op2val:0xbfe960529f3b1939; op3val:0x7fe2e7df4087a8bb; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 1792, x18)

inst_367:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7d72e47402429 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x960529f3b1939 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x2e7df4087a8bb and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe7d72e47402429; op2val:0xbfe960529f3b1939; op3val:0x7fe2e7df4087a8bb; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 1808, x18)

inst_368:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7d72e47402429 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x960529f3b1939 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x2e7df4087a8bb and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe7d72e47402429; op2val:0xbfe960529f3b1939; op3val:0x7fe2e7df4087a8bb; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 1824, x18)

inst_369:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7d72e47402429 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x960529f3b1939 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x2e7df4087a8bb and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe7d72e47402429; op2val:0xbfe960529f3b1939; op3val:0x7fe2e7df4087a8bb; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 1840, x18)

inst_370:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7d72e47402429 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x960529f3b1939 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x2e7df4087a8bb and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe7d72e47402429; op2val:0xbfe960529f3b1939; op3val:0x7fe2e7df4087a8bb; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1856, x18)

inst_371:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xdb7b172cc5173 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x8e197053e3ca3 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x71b44ed743f59 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fddb7b172cc5173; op2val:0xbfe8e197053e3ca3; op3val:0x7fd71b44ed743f59; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 1872, x18)

inst_372:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xdb7b172cc5173 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x8e197053e3ca3 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x71b44ed743f59 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fddb7b172cc5173; op2val:0xbfe8e197053e3ca3; op3val:0x7fd71b44ed743f59; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 1888, x18)

inst_373:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xdb7b172cc5173 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x8e197053e3ca3 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x71b44ed743f59 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fddb7b172cc5173; op2val:0xbfe8e197053e3ca3; op3val:0x7fd71b44ed743f59; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 1904, x18)

inst_374:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xdb7b172cc5173 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x8e197053e3ca3 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x71b44ed743f59 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fddb7b172cc5173; op2val:0xbfe8e197053e3ca3; op3val:0x7fd71b44ed743f59; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 1920, x18)

inst_375:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xdb7b172cc5173 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x8e197053e3ca3 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x71b44ed743f59 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fddb7b172cc5173; op2val:0xbfe8e197053e3ca3; op3val:0x7fd71b44ed743f59; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1936, x18)

inst_376:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x2ff2265d9a737 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xc8fe942aa1ecc and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0f4acb41b412d and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd2ff2265d9a737; op2val:0xbffc8fe942aa1ecc; op3val:0x7fe0f4acb41b412d; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 1952, x18)

inst_377:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x2ff2265d9a737 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xc8fe942aa1ecc and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0f4acb41b412d and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd2ff2265d9a737; op2val:0xbffc8fe942aa1ecc; op3val:0x7fe0f4acb41b412d; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 1968, x18)

inst_378:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x2ff2265d9a737 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xc8fe942aa1ecc and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0f4acb41b412d and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd2ff2265d9a737; op2val:0xbffc8fe942aa1ecc; op3val:0x7fe0f4acb41b412d; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 1984, x18)

inst_379:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x2ff2265d9a737 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xc8fe942aa1ecc and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0f4acb41b412d and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd2ff2265d9a737; op2val:0xbffc8fe942aa1ecc; op3val:0x7fe0f4acb41b412d; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 2000, x18)

inst_380:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x2ff2265d9a737 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xc8fe942aa1ecc and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0f4acb41b412d and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd2ff2265d9a737; op2val:0xbffc8fe942aa1ecc; op3val:0x7fe0f4acb41b412d; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_4)

inst_381:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1126a3ad5051a and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x4293c5830a884 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x583045ce8982d and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe1126a3ad5051a; op2val:0xbfe4293c5830a884; op3val:0x7fd583045ce8982d; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 0, x18)

inst_382:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1126a3ad5051a and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x4293c5830a884 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x583045ce8982d and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe1126a3ad5051a; op2val:0xbfe4293c5830a884; op3val:0x7fd583045ce8982d; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 16, x18)

inst_383:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1126a3ad5051a and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x4293c5830a884 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x583045ce8982d and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe1126a3ad5051a; op2val:0xbfe4293c5830a884; op3val:0x7fd583045ce8982d; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 32, x18)

inst_384:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1126a3ad5051a and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x4293c5830a884 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x583045ce8982d and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe1126a3ad5051a; op2val:0xbfe4293c5830a884; op3val:0x7fd583045ce8982d; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 48, x18)

inst_385:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1126a3ad5051a and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x4293c5830a884 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x583045ce8982d and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe1126a3ad5051a; op2val:0xbfe4293c5830a884; op3val:0x7fd583045ce8982d; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 64, x18)

inst_386:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x8552f9c810e9e and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x94ed6ea6ca724 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x33e8042423f5f and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe8552f9c810e9e; op2val:0xbfd94ed6ea6ca724; op3val:0x7fd33e8042423f5f; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 80, x18)

inst_387:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x8552f9c810e9e and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x94ed6ea6ca724 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x33e8042423f5f and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe8552f9c810e9e; op2val:0xbfd94ed6ea6ca724; op3val:0x7fd33e8042423f5f; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 96, x18)

inst_388:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x8552f9c810e9e and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x94ed6ea6ca724 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x33e8042423f5f and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe8552f9c810e9e; op2val:0xbfd94ed6ea6ca724; op3val:0x7fd33e8042423f5f; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 112, x18)

inst_389:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x8552f9c810e9e and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x94ed6ea6ca724 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x33e8042423f5f and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe8552f9c810e9e; op2val:0xbfd94ed6ea6ca724; op3val:0x7fd33e8042423f5f; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 128, x18)

inst_390:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x8552f9c810e9e and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x94ed6ea6ca724 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x33e8042423f5f and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe8552f9c810e9e; op2val:0xbfd94ed6ea6ca724; op3val:0x7fd33e8042423f5f; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 144, x18)

inst_391:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7ca8863947b9a and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x458a57f4c0c1e and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xe40fa80847cb7 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe7ca8863947b9a; op2val:0xbfc458a57f4c0c1e; op3val:0x7fbe40fa80847cb7; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 160, x18)

inst_392:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7ca8863947b9a and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x458a57f4c0c1e and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xe40fa80847cb7 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe7ca8863947b9a; op2val:0xbfc458a57f4c0c1e; op3val:0x7fbe40fa80847cb7; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 176, x18)

inst_393:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7ca8863947b9a and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x458a57f4c0c1e and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xe40fa80847cb7 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe7ca8863947b9a; op2val:0xbfc458a57f4c0c1e; op3val:0x7fbe40fa80847cb7; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 192, x18)

inst_394:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7ca8863947b9a and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x458a57f4c0c1e and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xe40fa80847cb7 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe7ca8863947b9a; op2val:0xbfc458a57f4c0c1e; op3val:0x7fbe40fa80847cb7; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 208, x18)

inst_395:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7ca8863947b9a and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x458a57f4c0c1e and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xe40fa80847cb7 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe7ca8863947b9a; op2val:0xbfc458a57f4c0c1e; op3val:0x7fbe40fa80847cb7; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 224, x18)

inst_396:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4a2d44f743484 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xdf6e0ad04fbde and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x352c50b85cbad and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe4a2d44f743484; op2val:0xbfedf6e0ad04fbde; op3val:0x7fe352c50b85cbad; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 240, x18)

inst_397:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4a2d44f743484 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xdf6e0ad04fbde and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x352c50b85cbad and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe4a2d44f743484; op2val:0xbfedf6e0ad04fbde; op3val:0x7fe352c50b85cbad; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 256, x18)

inst_398:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4a2d44f743484 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xdf6e0ad04fbde and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x352c50b85cbad and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe4a2d44f743484; op2val:0xbfedf6e0ad04fbde; op3val:0x7fe352c50b85cbad; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 272, x18)

inst_399:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4a2d44f743484 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xdf6e0ad04fbde and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x352c50b85cbad and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe4a2d44f743484; op2val:0xbfedf6e0ad04fbde; op3val:0x7fe352c50b85cbad; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 288, x18)

inst_400:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4a2d44f743484 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xdf6e0ad04fbde and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x352c50b85cbad and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe4a2d44f743484; op2val:0xbfedf6e0ad04fbde; op3val:0x7fe352c50b85cbad; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 304, x18)

inst_401:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3750b3ff84d89 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x8faa379b97e8e and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xe605c7c255007 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3750b3ff84d89; op2val:0xbfe8faa379b97e8e; op3val:0x7fde605c7c255007; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 320, x18)

inst_402:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3750b3ff84d89 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x8faa379b97e8e and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xe605c7c255007 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3750b3ff84d89; op2val:0xbfe8faa379b97e8e; op3val:0x7fde605c7c255007; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 336, x18)

inst_403:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3750b3ff84d89 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x8faa379b97e8e and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xe605c7c255007 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3750b3ff84d89; op2val:0xbfe8faa379b97e8e; op3val:0x7fde605c7c255007; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 352, x18)

inst_404:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3750b3ff84d89 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x8faa379b97e8e and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xe605c7c255007 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3750b3ff84d89; op2val:0xbfe8faa379b97e8e; op3val:0x7fde605c7c255007; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 368, x18)

inst_405:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3750b3ff84d89 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x8faa379b97e8e and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xe605c7c255007 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3750b3ff84d89; op2val:0xbfe8faa379b97e8e; op3val:0x7fde605c7c255007; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 384, x18)

inst_406:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfa474c124960a and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x2f9e1d8e439c4 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x2c398abf02815 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fefa474c124960a; op2val:0xbfd2f9e1d8e439c4; op3val:0x7fd2c398abf02815; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 400, x18)

inst_407:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfa474c124960a and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x2f9e1d8e439c4 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x2c398abf02815 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fefa474c124960a; op2val:0xbfd2f9e1d8e439c4; op3val:0x7fd2c398abf02815; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 416, x18)

inst_408:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfa474c124960a and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x2f9e1d8e439c4 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x2c398abf02815 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fefa474c124960a; op2val:0xbfd2f9e1d8e439c4; op3val:0x7fd2c398abf02815; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 432, x18)

inst_409:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfa474c124960a and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x2f9e1d8e439c4 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x2c398abf02815 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fefa474c124960a; op2val:0xbfd2f9e1d8e439c4; op3val:0x7fd2c398abf02815; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 448, x18)

inst_410:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfa474c124960a and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x2f9e1d8e439c4 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x2c398abf02815 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fefa474c124960a; op2val:0xbfd2f9e1d8e439c4; op3val:0x7fd2c398abf02815; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 464, x18)

inst_411:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x121cefec055f7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x280408462cdf8 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x3cf5c6b8b15bb and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd121cefec055f7; op2val:0xbfe280408462cdf8; op3val:0x7fc3cf5c6b8b15bb; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 480, x18)

inst_412:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x121cefec055f7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x280408462cdf8 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x3cf5c6b8b15bb and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd121cefec055f7; op2val:0xbfe280408462cdf8; op3val:0x7fc3cf5c6b8b15bb; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 496, x18)

inst_413:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x121cefec055f7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x280408462cdf8 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x3cf5c6b8b15bb and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd121cefec055f7; op2val:0xbfe280408462cdf8; op3val:0x7fc3cf5c6b8b15bb; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 512, x18)

inst_414:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x121cefec055f7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x280408462cdf8 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x3cf5c6b8b15bb and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd121cefec055f7; op2val:0xbfe280408462cdf8; op3val:0x7fc3cf5c6b8b15bb; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 528, x18)

inst_415:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x121cefec055f7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x280408462cdf8 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x3cf5c6b8b15bb and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd121cefec055f7; op2val:0xbfe280408462cdf8; op3val:0x7fc3cf5c6b8b15bb; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 544, x18)

inst_416:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x905625425a52e and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x41b897757476e and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xf71caf7d786cf and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe905625425a52e; op2val:0xbfd41b897757476e; op3val:0x7fcf71caf7d786cf; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 560, x18)

inst_417:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x905625425a52e and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x41b897757476e and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xf71caf7d786cf and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe905625425a52e; op2val:0xbfd41b897757476e; op3val:0x7fcf71caf7d786cf; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 576, x18)

inst_418:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x905625425a52e and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x41b897757476e and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xf71caf7d786cf and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe905625425a52e; op2val:0xbfd41b897757476e; op3val:0x7fcf71caf7d786cf; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 592, x18)

inst_419:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x905625425a52e and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x41b897757476e and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xf71caf7d786cf and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe905625425a52e; op2val:0xbfd41b897757476e; op3val:0x7fcf71caf7d786cf; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 608, x18)

inst_420:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x905625425a52e and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x41b897757476e and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xf71caf7d786cf and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe905625425a52e; op2val:0xbfd41b897757476e; op3val:0x7fcf71caf7d786cf; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 624, x18)

inst_421:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x185bc81f2a14d and fs2 == 1 and fe2 == 0x400 and fm2 == 0xb53ed83446079 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xded97f9e5a921 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd185bc81f2a14d; op2val:0xc00b53ed83446079; op3val:0x7feded97f9e5a921; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 640, x18)

inst_422:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x185bc81f2a14d and fs2 == 1 and fe2 == 0x400 and fm2 == 0xb53ed83446079 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xded97f9e5a921 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd185bc81f2a14d; op2val:0xc00b53ed83446079; op3val:0x7feded97f9e5a921; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 656, x18)

inst_423:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x185bc81f2a14d and fs2 == 1 and fe2 == 0x400 and fm2 == 0xb53ed83446079 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xded97f9e5a921 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd185bc81f2a14d; op2val:0xc00b53ed83446079; op3val:0x7feded97f9e5a921; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 672, x18)

inst_424:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x185bc81f2a14d and fs2 == 1 and fe2 == 0x400 and fm2 == 0xb53ed83446079 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xded97f9e5a921 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd185bc81f2a14d; op2val:0xc00b53ed83446079; op3val:0x7feded97f9e5a921; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 688, x18)
addi x16,x16,2040

inst_425:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x185bc81f2a14d and fs2 == 1 and fe2 == 0x400 and fm2 == 0xb53ed83446079 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xded97f9e5a921 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd185bc81f2a14d; op2val:0xc00b53ed83446079; op3val:0x7feded97f9e5a921; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 704, x18)

inst_426:
// fs1 == 0 and fe1 == 0x7f8 and fm1 == 0xb0a547af4b77f and fs2 == 1 and fe2 == 0x404 and fm2 == 0x42af94e43542f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x10ac5063dc350 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f8b0a547af4b77f; op2val:0xc0442af94e43542f; op3val:0x7fe10ac5063dc350; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 720, x18)

inst_427:
// fs1 == 0 and fe1 == 0x7f8 and fm1 == 0xb0a547af4b77f and fs2 == 1 and fe2 == 0x404 and fm2 == 0x42af94e43542f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x10ac5063dc350 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f8b0a547af4b77f; op2val:0xc0442af94e43542f; op3val:0x7fe10ac5063dc350; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 736, x18)

inst_428:
// fs1 == 0 and fe1 == 0x7f8 and fm1 == 0xb0a547af4b77f and fs2 == 1 and fe2 == 0x404 and fm2 == 0x42af94e43542f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x10ac5063dc350 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f8b0a547af4b77f; op2val:0xc0442af94e43542f; op3val:0x7fe10ac5063dc350; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 752, x18)

inst_429:
// fs1 == 0 and fe1 == 0x7f8 and fm1 == 0xb0a547af4b77f and fs2 == 1 and fe2 == 0x404 and fm2 == 0x42af94e43542f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x10ac5063dc350 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f8b0a547af4b77f; op2val:0xc0442af94e43542f; op3val:0x7fe10ac5063dc350; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 768, x18)

inst_430:
// fs1 == 0 and fe1 == 0x7f8 and fm1 == 0xb0a547af4b77f and fs2 == 1 and fe2 == 0x404 and fm2 == 0x42af94e43542f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x10ac5063dc350 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f8b0a547af4b77f; op2val:0xc0442af94e43542f; op3val:0x7fe10ac5063dc350; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 784, x18)

inst_431:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x903bcec8bb6fb and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0ec4f878fb7b4 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa75306591ce61 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe903bcec8bb6fb; op2val:0xbff0ec4f878fb7b4; op3val:0x7fea75306591ce61; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 800, x18)

inst_432:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x903bcec8bb6fb and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0ec4f878fb7b4 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa75306591ce61 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe903bcec8bb6fb; op2val:0xbff0ec4f878fb7b4; op3val:0x7fea75306591ce61; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 816, x18)

inst_433:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x903bcec8bb6fb and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0ec4f878fb7b4 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa75306591ce61 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe903bcec8bb6fb; op2val:0xbff0ec4f878fb7b4; op3val:0x7fea75306591ce61; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 832, x18)

inst_434:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x903bcec8bb6fb and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0ec4f878fb7b4 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa75306591ce61 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe903bcec8bb6fb; op2val:0xbff0ec4f878fb7b4; op3val:0x7fea75306591ce61; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 848, x18)

inst_435:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x903bcec8bb6fb and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0ec4f878fb7b4 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa75306591ce61 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe903bcec8bb6fb; op2val:0xbff0ec4f878fb7b4; op3val:0x7fea75306591ce61; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 864, x18)

inst_436:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc61c611f6c8db and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x526604cab8fcb and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x2c2338051df31 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdc61c611f6c8db; op2val:0xbfe526604cab8fcb; op3val:0x7fd2c2338051df31; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 880, x18)

inst_437:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc61c611f6c8db and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x526604cab8fcb and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x2c2338051df31 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdc61c611f6c8db; op2val:0xbfe526604cab8fcb; op3val:0x7fd2c2338051df31; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 896, x18)

inst_438:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc61c611f6c8db and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x526604cab8fcb and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x2c2338051df31 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdc61c611f6c8db; op2val:0xbfe526604cab8fcb; op3val:0x7fd2c2338051df31; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 912, x18)

inst_439:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc61c611f6c8db and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x526604cab8fcb and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x2c2338051df31 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdc61c611f6c8db; op2val:0xbfe526604cab8fcb; op3val:0x7fd2c2338051df31; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 928, x18)

inst_440:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc61c611f6c8db and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x526604cab8fcb and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x2c2338051df31 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdc61c611f6c8db; op2val:0xbfe526604cab8fcb; op3val:0x7fd2c2338051df31; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 944, x18)

inst_441:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xf33ebf51f33b7 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x466f88fb6ecbe and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x3e4db57d7e40f and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbf33ebf51f33b7; op2val:0xc01466f88fb6ecbe; op3val:0x7fe3e4db57d7e40f; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 960, x18)

inst_442:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xf33ebf51f33b7 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x466f88fb6ecbe and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x3e4db57d7e40f and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbf33ebf51f33b7; op2val:0xc01466f88fb6ecbe; op3val:0x7fe3e4db57d7e40f; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 976, x18)

inst_443:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xf33ebf51f33b7 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x466f88fb6ecbe and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x3e4db57d7e40f and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbf33ebf51f33b7; op2val:0xc01466f88fb6ecbe; op3val:0x7fe3e4db57d7e40f; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 992, x18)

inst_444:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xf33ebf51f33b7 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x466f88fb6ecbe and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x3e4db57d7e40f and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbf33ebf51f33b7; op2val:0xc01466f88fb6ecbe; op3val:0x7fe3e4db57d7e40f; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 1008, x18)

inst_445:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xf33ebf51f33b7 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x466f88fb6ecbe and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x3e4db57d7e40f and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbf33ebf51f33b7; op2val:0xc01466f88fb6ecbe; op3val:0x7fe3e4db57d7e40f; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1024, x18)

inst_446:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x25459c12575f7 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xaa504e2a5f1c3 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xe861d5030b0e7 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd25459c12575f7; op2val:0xbffaa504e2a5f1c3; op3val:0x7fde861d5030b0e7; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 1040, x18)

inst_447:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x25459c12575f7 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xaa504e2a5f1c3 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xe861d5030b0e7 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd25459c12575f7; op2val:0xbffaa504e2a5f1c3; op3val:0x7fde861d5030b0e7; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 1056, x18)

inst_448:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x25459c12575f7 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xaa504e2a5f1c3 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xe861d5030b0e7 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd25459c12575f7; op2val:0xbffaa504e2a5f1c3; op3val:0x7fde861d5030b0e7; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 1072, x18)

inst_449:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x25459c12575f7 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xaa504e2a5f1c3 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xe861d5030b0e7 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd25459c12575f7; op2val:0xbffaa504e2a5f1c3; op3val:0x7fde861d5030b0e7; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 1088, x18)

inst_450:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x25459c12575f7 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xaa504e2a5f1c3 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xe861d5030b0e7 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd25459c12575f7; op2val:0xbffaa504e2a5f1c3; op3val:0x7fde861d5030b0e7; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1104, x18)

inst_451:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf7f31753ade3e and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xff99d9f7dd137 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xf78e8c76fb50b and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef7f31753ade3e; op2val:0xbfdff99d9f7dd137; op3val:0x7fdf78e8c76fb50b; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 1120, x18)

inst_452:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf7f31753ade3e and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xff99d9f7dd137 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xf78e8c76fb50b and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef7f31753ade3e; op2val:0xbfdff99d9f7dd137; op3val:0x7fdf78e8c76fb50b; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 1136, x18)

inst_453:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf7f31753ade3e and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xff99d9f7dd137 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xf78e8c76fb50b and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef7f31753ade3e; op2val:0xbfdff99d9f7dd137; op3val:0x7fdf78e8c76fb50b; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 1152, x18)

inst_454:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf7f31753ade3e and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xff99d9f7dd137 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xf78e8c76fb50b and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef7f31753ade3e; op2val:0xbfdff99d9f7dd137; op3val:0x7fdf78e8c76fb50b; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 1168, x18)

inst_455:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf7f31753ade3e and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xff99d9f7dd137 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xf78e8c76fb50b and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef7f31753ade3e; op2val:0xbfdff99d9f7dd137; op3val:0x7fdf78e8c76fb50b; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1184, x18)

inst_456:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xa976a9028496d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x89489e50d3718 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x46cfecf8fb875 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fda976a9028496d; op2val:0xbfe89489e50d3718; op3val:0x7fd46cfecf8fb875; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 1200, x18)

inst_457:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xa976a9028496d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x89489e50d3718 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x46cfecf8fb875 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fda976a9028496d; op2val:0xbfe89489e50d3718; op3val:0x7fd46cfecf8fb875; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 1216, x18)

inst_458:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xa976a9028496d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x89489e50d3718 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x46cfecf8fb875 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fda976a9028496d; op2val:0xbfe89489e50d3718; op3val:0x7fd46cfecf8fb875; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 1232, x18)

inst_459:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xa976a9028496d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x89489e50d3718 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x46cfecf8fb875 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fda976a9028496d; op2val:0xbfe89489e50d3718; op3val:0x7fd46cfecf8fb875; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 1248, x18)

inst_460:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xa976a9028496d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x89489e50d3718 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x46cfecf8fb875 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fda976a9028496d; op2val:0xbfe89489e50d3718; op3val:0x7fd46cfecf8fb875; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1264, x18)

inst_461:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf64315934059e and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x0308fdace1bed and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xfc3782a023015 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef64315934059e; op2val:0xbfe0308fdace1bed; op3val:0x7fdfc3782a023015; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 1280, x18)

inst_462:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf64315934059e and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x0308fdace1bed and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xfc3782a023015 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef64315934059e; op2val:0xbfe0308fdace1bed; op3val:0x7fdfc3782a023015; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 1296, x18)

inst_463:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf64315934059e and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x0308fdace1bed and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xfc3782a023015 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef64315934059e; op2val:0xbfe0308fdace1bed; op3val:0x7fdfc3782a023015; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 1312, x18)

inst_464:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf64315934059e and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x0308fdace1bed and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xfc3782a023015 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef64315934059e; op2val:0xbfe0308fdace1bed; op3val:0x7fdfc3782a023015; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 1328, x18)

inst_465:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf64315934059e and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x0308fdace1bed and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xfc3782a023015 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef64315934059e; op2val:0xbfe0308fdace1bed; op3val:0x7fdfc3782a023015; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 1344, x18)

inst_466:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x310e01660348e and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xbe8d71c96d67e and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x0a0f795ed9f25 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe310e01660348e; op2val:0xbfdbe8d71c96d67e; op3val:0x7fd0a0f795ed9f25; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 1360, x18)

inst_467:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x310e01660348e and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xbe8d71c96d67e and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x0a0f795ed9f25 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe310e01660348e; op2val:0xbfdbe8d71c96d67e; op3val:0x7fd0a0f795ed9f25; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 1376, x18)

inst_468:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x310e01660348e and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xbe8d71c96d67e and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x0a0f795ed9f25 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe310e01660348e; op2val:0xbfdbe8d71c96d67e; op3val:0x7fd0a0f795ed9f25; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 1392, x18)

inst_469:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x310e01660348e and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xbe8d71c96d67e and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x0a0f795ed9f25 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe310e01660348e; op2val:0xbfdbe8d71c96d67e; op3val:0x7fd0a0f795ed9f25; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 1408, x18)

inst_470:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x310e01660348e and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xbe8d71c96d67e and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x0a0f795ed9f25 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe310e01660348e; op2val:0xbfdbe8d71c96d67e; op3val:0x7fd0a0f795ed9f25; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 1424, x18)

inst_471:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xec1a6c76b7bd2 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xe6c11aa8d2573 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd3d6ae8a2d811 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feec1a6c76b7bd2; op2val:0xbfee6c11aa8d2573; op3val:0x7fed3d6ae8a2d811; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 1440, x18)

inst_472:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xec1a6c76b7bd2 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xe6c11aa8d2573 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd3d6ae8a2d811 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feec1a6c76b7bd2; op2val:0xbfee6c11aa8d2573; op3val:0x7fed3d6ae8a2d811; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 1456, x18)

inst_473:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xec1a6c76b7bd2 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xe6c11aa8d2573 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd3d6ae8a2d811 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feec1a6c76b7bd2; op2val:0xbfee6c11aa8d2573; op3val:0x7fed3d6ae8a2d811; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 1472, x18)

inst_474:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xec1a6c76b7bd2 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xe6c11aa8d2573 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd3d6ae8a2d811 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feec1a6c76b7bd2; op2val:0xbfee6c11aa8d2573; op3val:0x7fed3d6ae8a2d811; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 1488, x18)

inst_475:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xec1a6c76b7bd2 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xe6c11aa8d2573 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd3d6ae8a2d811 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feec1a6c76b7bd2; op2val:0xbfee6c11aa8d2573; op3val:0x7fed3d6ae8a2d811; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 1504, x18)

inst_476:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf1e592ad54c35 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x8fe934dea0ead and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x84e53031235b9 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef1e592ad54c35; op2val:0xbfd8fe934dea0ead; op3val:0x7fd84e53031235b9; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 1520, x18)

inst_477:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf1e592ad54c35 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x8fe934dea0ead and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x84e53031235b9 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef1e592ad54c35; op2val:0xbfd8fe934dea0ead; op3val:0x7fd84e53031235b9; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 1536, x18)

inst_478:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf1e592ad54c35 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x8fe934dea0ead and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x84e53031235b9 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef1e592ad54c35; op2val:0xbfd8fe934dea0ead; op3val:0x7fd84e53031235b9; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 1552, x18)

inst_479:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf1e592ad54c35 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x8fe934dea0ead and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x84e53031235b9 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef1e592ad54c35; op2val:0xbfd8fe934dea0ead; op3val:0x7fd84e53031235b9; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 1568, x18)

inst_480:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf1e592ad54c35 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x8fe934dea0ead and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x84e53031235b9 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef1e592ad54c35; op2val:0xbfd8fe934dea0ead; op3val:0x7fd84e53031235b9; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 1584, x18)

inst_481:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xcf892d7e50217 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x49b2d61482423 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x2a7d8e3d62b4b and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fccf892d7e50217; op2val:0xbff49b2d61482423; op3val:0x7fd2a7d8e3d62b4b; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 1600, x18)

inst_482:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xcf892d7e50217 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x49b2d61482423 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x2a7d8e3d62b4b and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fccf892d7e50217; op2val:0xbff49b2d61482423; op3val:0x7fd2a7d8e3d62b4b; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 1616, x18)

inst_483:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xcf892d7e50217 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x49b2d61482423 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x2a7d8e3d62b4b and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fccf892d7e50217; op2val:0xbff49b2d61482423; op3val:0x7fd2a7d8e3d62b4b; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 1632, x18)

inst_484:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xcf892d7e50217 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x49b2d61482423 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x2a7d8e3d62b4b and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fccf892d7e50217; op2val:0xbff49b2d61482423; op3val:0x7fd2a7d8e3d62b4b; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 1648, x18)

inst_485:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xcf892d7e50217 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x49b2d61482423 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x2a7d8e3d62b4b and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fccf892d7e50217; op2val:0xbff49b2d61482423; op3val:0x7fd2a7d8e3d62b4b; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 1664, x18)

inst_486:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x80de60b6f00df and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x2607ef5993617 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xba0b50fd03dd3 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd80de60b6f00df; op2val:0xbff2607ef5993617; op3val:0x7fdba0b50fd03dd3; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 1680, x18)

inst_487:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x80de60b6f00df and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x2607ef5993617 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xba0b50fd03dd3 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd80de60b6f00df; op2val:0xbff2607ef5993617; op3val:0x7fdba0b50fd03dd3; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 1696, x18)

inst_488:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x80de60b6f00df and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x2607ef5993617 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xba0b50fd03dd3 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd80de60b6f00df; op2val:0xbff2607ef5993617; op3val:0x7fdba0b50fd03dd3; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 1712, x18)

inst_489:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x80de60b6f00df and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x2607ef5993617 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xba0b50fd03dd3 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd80de60b6f00df; op2val:0xbff2607ef5993617; op3val:0x7fdba0b50fd03dd3; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 1728, x18)

inst_490:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x80de60b6f00df and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x2607ef5993617 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xba0b50fd03dd3 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd80de60b6f00df; op2val:0xbff2607ef5993617; op3val:0x7fdba0b50fd03dd3; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1744, x18)

inst_491:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4248187818921 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x6a7c06a5d1432 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc85615e41d666 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe4248187818921; op2val:0xbff6a7c06a5d1432; op3val:0x7fec85615e41d666; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 1760, x18)

inst_492:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4248187818921 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x6a7c06a5d1432 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc85615e41d666 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe4248187818921; op2val:0xbff6a7c06a5d1432; op3val:0x7fec85615e41d666; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 1776, x18)

inst_493:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4248187818921 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x6a7c06a5d1432 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc85615e41d666 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe4248187818921; op2val:0xbff6a7c06a5d1432; op3val:0x7fec85615e41d666; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 1792, x18)

inst_494:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4248187818921 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x6a7c06a5d1432 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc85615e41d666 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe4248187818921; op2val:0xbff6a7c06a5d1432; op3val:0x7fec85615e41d666; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 1808, x18)

inst_495:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4248187818921 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x6a7c06a5d1432 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc85615e41d666 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe4248187818921; op2val:0xbff6a7c06a5d1432; op3val:0x7fec85615e41d666; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1824, x18)

inst_496:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3af74e2285ea8 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xd46a833143262 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x202793535005b and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3af74e2285ea8; op2val:0xbfcd46a833143262; op3val:0x7fc202793535005b; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 1840, x18)

inst_497:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3af74e2285ea8 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xd46a833143262 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x202793535005b and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3af74e2285ea8; op2val:0xbfcd46a833143262; op3val:0x7fc202793535005b; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 1856, x18)

inst_498:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3af74e2285ea8 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xd46a833143262 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x202793535005b and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3af74e2285ea8; op2val:0xbfcd46a833143262; op3val:0x7fc202793535005b; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 1872, x18)

inst_499:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3af74e2285ea8 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xd46a833143262 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x202793535005b and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3af74e2285ea8; op2val:0xbfcd46a833143262; op3val:0x7fc202793535005b; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 1888, x18)

inst_500:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3af74e2285ea8 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xd46a833143262 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x202793535005b and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3af74e2285ea8; op2val:0xbfcd46a833143262; op3val:0x7fc202793535005b; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1904, x18)

inst_501:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xba0894a6eeff7 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x4f8cba9f74d1d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x21b21cbaa78b6 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbba0894a6eeff7; op2val:0xc014f8cba9f74d1d; op3val:0x7fe21b21cbaa78b6; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 1920, x18)

inst_502:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xba0894a6eeff7 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x4f8cba9f74d1d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x21b21cbaa78b6 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbba0894a6eeff7; op2val:0xc014f8cba9f74d1d; op3val:0x7fe21b21cbaa78b6; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 1936, x18)

inst_503:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xba0894a6eeff7 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x4f8cba9f74d1d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x21b21cbaa78b6 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbba0894a6eeff7; op2val:0xc014f8cba9f74d1d; op3val:0x7fe21b21cbaa78b6; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 1952, x18)

inst_504:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xba0894a6eeff7 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x4f8cba9f74d1d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x21b21cbaa78b6 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbba0894a6eeff7; op2val:0xc014f8cba9f74d1d; op3val:0x7fe21b21cbaa78b6; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 1968, x18)

inst_505:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xba0894a6eeff7 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x4f8cba9f74d1d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x21b21cbaa78b6 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbba0894a6eeff7; op2val:0xc014f8cba9f74d1d; op3val:0x7fe21b21cbaa78b6; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1984, x18)

inst_506:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc97481aa589cf and fs2 == 1 and fe2 == 0x3f5 and fm2 == 0x15fdaf55a8228 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0xf0c061c12bfff and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec97481aa589cf; op2val:0xbf515fdaf55a8228; op3val:0x7f4f0c061c12bfff; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 2000, x18)

inst_507:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc97481aa589cf and fs2 == 1 and fe2 == 0x3f5 and fm2 == 0x15fdaf55a8228 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0xf0c061c12bfff and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec97481aa589cf; op2val:0xbf515fdaf55a8228; op3val:0x7f4f0c061c12bfff; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_5)

inst_508:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc97481aa589cf and fs2 == 1 and fe2 == 0x3f5 and fm2 == 0x15fdaf55a8228 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0xf0c061c12bfff and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec97481aa589cf; op2val:0xbf515fdaf55a8228; op3val:0x7f4f0c061c12bfff; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 0, x18)

inst_509:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc97481aa589cf and fs2 == 1 and fe2 == 0x3f5 and fm2 == 0x15fdaf55a8228 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0xf0c061c12bfff and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec97481aa589cf; op2val:0xbf515fdaf55a8228; op3val:0x7f4f0c061c12bfff; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 16, x18)
addi x16,x16,2040

inst_510:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc97481aa589cf and fs2 == 1 and fe2 == 0x3f5 and fm2 == 0x15fdaf55a8228 and fs3 == 0 and fe3 == 0x7f4 and fm3 == 0xf0c061c12bfff and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec97481aa589cf; op2val:0xbf515fdaf55a8228; op3val:0x7f4f0c061c12bfff; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 32, x18)

inst_511:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x379bb745d02d9 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x276161f0e5912 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x678af9691e349 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe379bb745d02d9; op2val:0xbfe276161f0e5912; op3val:0x7fd678af9691e349; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 48, x18)

inst_512:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x379bb745d02d9 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x276161f0e5912 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x678af9691e349 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe379bb745d02d9; op2val:0xbfe276161f0e5912; op3val:0x7fd678af9691e349; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 64, x18)

inst_513:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x379bb745d02d9 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x276161f0e5912 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x678af9691e349 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe379bb745d02d9; op2val:0xbfe276161f0e5912; op3val:0x7fd678af9691e349; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 80, x18)

inst_514:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x379bb745d02d9 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x276161f0e5912 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x678af9691e349 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe379bb745d02d9; op2val:0xbfe276161f0e5912; op3val:0x7fd678af9691e349; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 96, x18)

inst_515:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x379bb745d02d9 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x276161f0e5912 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x678af9691e349 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe379bb745d02d9; op2val:0xbfe276161f0e5912; op3val:0x7fd678af9691e349; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 112, x18)

inst_516:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xea17c4ccbefe8 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x02e25a9bb2a1a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xef9d4ac882cb3 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feea17c4ccbefe8; op2val:0xbff02e25a9bb2a1a; op3val:0x7feef9d4ac882cb3; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 128, x18)

inst_517:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xea17c4ccbefe8 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x02e25a9bb2a1a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xef9d4ac882cb3 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feea17c4ccbefe8; op2val:0xbff02e25a9bb2a1a; op3val:0x7feef9d4ac882cb3; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 144, x18)

inst_518:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xea17c4ccbefe8 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x02e25a9bb2a1a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xef9d4ac882cb3 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feea17c4ccbefe8; op2val:0xbff02e25a9bb2a1a; op3val:0x7feef9d4ac882cb3; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 160, x18)

inst_519:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xea17c4ccbefe8 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x02e25a9bb2a1a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xef9d4ac882cb3 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feea17c4ccbefe8; op2val:0xbff02e25a9bb2a1a; op3val:0x7feef9d4ac882cb3; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 176, x18)

inst_520:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xea17c4ccbefe8 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x02e25a9bb2a1a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xef9d4ac882cb3 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feea17c4ccbefe8; op2val:0xbff02e25a9bb2a1a; op3val:0x7feef9d4ac882cb3; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 192, x18)

inst_521:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x311ebd187eea8 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xe47093103feca and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x20b2251e87ae3 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe311ebd187eea8; op2val:0xbfee47093103feca; op3val:0x7fe20b2251e87ae3; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 208, x18)

inst_522:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x311ebd187eea8 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xe47093103feca and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x20b2251e87ae3 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe311ebd187eea8; op2val:0xbfee47093103feca; op3val:0x7fe20b2251e87ae3; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 224, x18)

inst_523:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x311ebd187eea8 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xe47093103feca and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x20b2251e87ae3 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe311ebd187eea8; op2val:0xbfee47093103feca; op3val:0x7fe20b2251e87ae3; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 240, x18)

inst_524:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x311ebd187eea8 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xe47093103feca and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x20b2251e87ae3 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe311ebd187eea8; op2val:0xbfee47093103feca; op3val:0x7fe20b2251e87ae3; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 256, x18)

inst_525:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x311ebd187eea8 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xe47093103feca and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x20b2251e87ae3 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe311ebd187eea8; op2val:0xbfee47093103feca; op3val:0x7fe20b2251e87ae3; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 272, x18)

inst_526:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7a4f313bd6219 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x89e6311dc9a65 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x230bdf28226f7 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd7a4f313bd6219; op2val:0xbfd89e6311dc9a65; op3val:0x7fc230bdf28226f7; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 288, x18)

inst_527:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7a4f313bd6219 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x89e6311dc9a65 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x230bdf28226f7 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd7a4f313bd6219; op2val:0xbfd89e6311dc9a65; op3val:0x7fc230bdf28226f7; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 304, x18)

inst_528:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7a4f313bd6219 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x89e6311dc9a65 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x230bdf28226f7 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd7a4f313bd6219; op2val:0xbfd89e6311dc9a65; op3val:0x7fc230bdf28226f7; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 320, x18)

inst_529:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7a4f313bd6219 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x89e6311dc9a65 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x230bdf28226f7 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd7a4f313bd6219; op2val:0xbfd89e6311dc9a65; op3val:0x7fc230bdf28226f7; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 336, x18)

inst_530:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7a4f313bd6219 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x89e6311dc9a65 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x230bdf28226f7 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd7a4f313bd6219; op2val:0xbfd89e6311dc9a65; op3val:0x7fc230bdf28226f7; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 352, x18)

inst_531:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa04034a417446 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x948073adec2d9 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x48db17a274e91 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fea04034a417446; op2val:0xbfe948073adec2d9; op3val:0x7fe48db17a274e91; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 368, x18)

inst_532:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa04034a417446 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x948073adec2d9 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x48db17a274e91 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fea04034a417446; op2val:0xbfe948073adec2d9; op3val:0x7fe48db17a274e91; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 384, x18)

inst_533:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa04034a417446 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x948073adec2d9 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x48db17a274e91 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fea04034a417446; op2val:0xbfe948073adec2d9; op3val:0x7fe48db17a274e91; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 400, x18)

inst_534:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa04034a417446 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x948073adec2d9 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x48db17a274e91 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fea04034a417446; op2val:0xbfe948073adec2d9; op3val:0x7fe48db17a274e91; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 416, x18)

inst_535:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa04034a417446 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x948073adec2d9 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x48db17a274e91 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fea04034a417446; op2val:0xbfe948073adec2d9; op3val:0x7fe48db17a274e91; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 432, x18)

inst_536:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa31550c844273 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x0627da3f81f8f and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xad290e3462113 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fea31550c844273; op2val:0xbfe0627da3f81f8f; op3val:0x7fdad290e3462113; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 448, x18)

inst_537:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa31550c844273 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x0627da3f81f8f and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xad290e3462113 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fea31550c844273; op2val:0xbfe0627da3f81f8f; op3val:0x7fdad290e3462113; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 464, x18)

inst_538:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa31550c844273 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x0627da3f81f8f and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xad290e3462113 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fea31550c844273; op2val:0xbfe0627da3f81f8f; op3val:0x7fdad290e3462113; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 480, x18)

inst_539:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa31550c844273 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x0627da3f81f8f and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xad290e3462113 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fea31550c844273; op2val:0xbfe0627da3f81f8f; op3val:0x7fdad290e3462113; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 496, x18)

inst_540:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa31550c844273 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x0627da3f81f8f and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xad290e3462113 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fea31550c844273; op2val:0xbfe0627da3f81f8f; op3val:0x7fdad290e3462113; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 512, x18)

inst_541:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x296b3b52c3a78 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xa652491e8ca3f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xeaa65d1680e97 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe296b3b52c3a78; op2val:0xbffa652491e8ca3f; op3val:0x7feeaa65d1680e97; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 528, x18)

inst_542:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x296b3b52c3a78 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xa652491e8ca3f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xeaa65d1680e97 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe296b3b52c3a78; op2val:0xbffa652491e8ca3f; op3val:0x7feeaa65d1680e97; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 544, x18)

inst_543:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x296b3b52c3a78 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xa652491e8ca3f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xeaa65d1680e97 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe296b3b52c3a78; op2val:0xbffa652491e8ca3f; op3val:0x7feeaa65d1680e97; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 560, x18)

inst_544:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x296b3b52c3a78 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xa652491e8ca3f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xeaa65d1680e97 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe296b3b52c3a78; op2val:0xbffa652491e8ca3f; op3val:0x7feeaa65d1680e97; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 576, x18)

inst_545:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x296b3b52c3a78 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xa652491e8ca3f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xeaa65d1680e97 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe296b3b52c3a78; op2val:0xbffa652491e8ca3f; op3val:0x7feeaa65d1680e97; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 592, x18)

inst_546:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x17273060cf383 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x3eb1e847178eb and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x5b84ad79bdbd5 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe17273060cf383; op2val:0xbfe3eb1e847178eb; op3val:0x7fd5b84ad79bdbd5; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 608, x18)

inst_547:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x17273060cf383 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x3eb1e847178eb and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x5b84ad79bdbd5 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe17273060cf383; op2val:0xbfe3eb1e847178eb; op3val:0x7fd5b84ad79bdbd5; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 624, x18)

inst_548:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x17273060cf383 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x3eb1e847178eb and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x5b84ad79bdbd5 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe17273060cf383; op2val:0xbfe3eb1e847178eb; op3val:0x7fd5b84ad79bdbd5; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 640, x18)

inst_549:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x17273060cf383 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x3eb1e847178eb and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x5b84ad79bdbd5 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe17273060cf383; op2val:0xbfe3eb1e847178eb; op3val:0x7fd5b84ad79bdbd5; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 656, x18)

inst_550:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x17273060cf383 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x3eb1e847178eb and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x5b84ad79bdbd5 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe17273060cf383; op2val:0xbfe3eb1e847178eb; op3val:0x7fd5b84ad79bdbd5; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 672, x18)

inst_551:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3a25129349d98 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x3c80b9163e813 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x8463b8972f1cf and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3a25129349d98; op2val:0xbfc3c80b9163e813; op3val:0x7fb8463b8972f1cf; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 688, x18)

inst_552:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3a25129349d98 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x3c80b9163e813 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x8463b8972f1cf and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3a25129349d98; op2val:0xbfc3c80b9163e813; op3val:0x7fb8463b8972f1cf; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 704, x18)

inst_553:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3a25129349d98 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x3c80b9163e813 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x8463b8972f1cf and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3a25129349d98; op2val:0xbfc3c80b9163e813; op3val:0x7fb8463b8972f1cf; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 720, x18)

inst_554:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3a25129349d98 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x3c80b9163e813 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x8463b8972f1cf and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3a25129349d98; op2val:0xbfc3c80b9163e813; op3val:0x7fb8463b8972f1cf; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 736, x18)

inst_555:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3a25129349d98 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x3c80b9163e813 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x8463b8972f1cf and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3a25129349d98; op2val:0xbfc3c80b9163e813; op3val:0x7fb8463b8972f1cf; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 752, x18)

inst_556:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7eda4efb707f7 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x8b1321a75d35f and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x276bba33219df and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd7eda4efb707f7; op2val:0xbfb8b1321a75d35f; op3val:0x7fa276bba33219df; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 768, x18)

inst_557:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7eda4efb707f7 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x8b1321a75d35f and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x276bba33219df and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd7eda4efb707f7; op2val:0xbfb8b1321a75d35f; op3val:0x7fa276bba33219df; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 784, x18)

inst_558:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7eda4efb707f7 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x8b1321a75d35f and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x276bba33219df and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd7eda4efb707f7; op2val:0xbfb8b1321a75d35f; op3val:0x7fa276bba33219df; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 800, x18)

inst_559:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7eda4efb707f7 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x8b1321a75d35f and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x276bba33219df and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd7eda4efb707f7; op2val:0xbfb8b1321a75d35f; op3val:0x7fa276bba33219df; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 816, x18)

inst_560:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7eda4efb707f7 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x8b1321a75d35f and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x276bba33219df and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd7eda4efb707f7; op2val:0xbfb8b1321a75d35f; op3val:0x7fa276bba33219df; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 832, x18)

inst_561:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xd7584b60b1a57 and fs2 == 1 and fe2 == 0x401 and fm2 == 0xce604fe904a90 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa9a9562306079 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbd7584b60b1a57; op2val:0xc01ce604fe904a90; op3val:0x7fea9a9562306079; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 848, x18)

inst_562:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xd7584b60b1a57 and fs2 == 1 and fe2 == 0x401 and fm2 == 0xce604fe904a90 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa9a9562306079 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbd7584b60b1a57; op2val:0xc01ce604fe904a90; op3val:0x7fea9a9562306079; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 864, x18)

inst_563:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xd7584b60b1a57 and fs2 == 1 and fe2 == 0x401 and fm2 == 0xce604fe904a90 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa9a9562306079 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbd7584b60b1a57; op2val:0xc01ce604fe904a90; op3val:0x7fea9a9562306079; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 880, x18)

inst_564:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xd7584b60b1a57 and fs2 == 1 and fe2 == 0x401 and fm2 == 0xce604fe904a90 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa9a9562306079 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbd7584b60b1a57; op2val:0xc01ce604fe904a90; op3val:0x7fea9a9562306079; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 896, x18)

inst_565:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xd7584b60b1a57 and fs2 == 1 and fe2 == 0x401 and fm2 == 0xce604fe904a90 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa9a9562306079 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbd7584b60b1a57; op2val:0xc01ce604fe904a90; op3val:0x7fea9a9562306079; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 912, x18)

inst_566:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x1d36766d8ca5b and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x78e08524df276 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xa3e221eee63c5 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd1d36766d8ca5b; op2val:0xbff78e08524df276; op3val:0x7fda3e221eee63c5; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 928, x18)

inst_567:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x1d36766d8ca5b and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x78e08524df276 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xa3e221eee63c5 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd1d36766d8ca5b; op2val:0xbff78e08524df276; op3val:0x7fda3e221eee63c5; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 944, x18)

inst_568:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x1d36766d8ca5b and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x78e08524df276 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xa3e221eee63c5 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd1d36766d8ca5b; op2val:0xbff78e08524df276; op3val:0x7fda3e221eee63c5; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 960, x18)

inst_569:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x1d36766d8ca5b and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x78e08524df276 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xa3e221eee63c5 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd1d36766d8ca5b; op2val:0xbff78e08524df276; op3val:0x7fda3e221eee63c5; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 976, x18)

inst_570:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x1d36766d8ca5b and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x78e08524df276 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xa3e221eee63c5 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd1d36766d8ca5b; op2val:0xbff78e08524df276; op3val:0x7fda3e221eee63c5; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 992, x18)

inst_571:
// fs1 == 0 and fe1 == 0x7f4 and fm1 == 0x5a5a59bbb3fff and fs2 == 1 and fe2 == 0x408 and fm2 == 0x32d10b0d92edf and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x9f1ad1f9dea0f and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f45a5a59bbb3fff; op2val:0xc0832d10b0d92edf; op3val:0x7fd9f1ad1f9dea0f; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 1008, x18)

inst_572:
// fs1 == 0 and fe1 == 0x7f4 and fm1 == 0x5a5a59bbb3fff and fs2 == 1 and fe2 == 0x408 and fm2 == 0x32d10b0d92edf and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x9f1ad1f9dea0f and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f45a5a59bbb3fff; op2val:0xc0832d10b0d92edf; op3val:0x7fd9f1ad1f9dea0f; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 1024, x18)

inst_573:
// fs1 == 0 and fe1 == 0x7f4 and fm1 == 0x5a5a59bbb3fff and fs2 == 1 and fe2 == 0x408 and fm2 == 0x32d10b0d92edf and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x9f1ad1f9dea0f and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f45a5a59bbb3fff; op2val:0xc0832d10b0d92edf; op3val:0x7fd9f1ad1f9dea0f; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 1040, x18)

inst_574:
// fs1 == 0 and fe1 == 0x7f4 and fm1 == 0x5a5a59bbb3fff and fs2 == 1 and fe2 == 0x408 and fm2 == 0x32d10b0d92edf and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x9f1ad1f9dea0f and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f45a5a59bbb3fff; op2val:0xc0832d10b0d92edf; op3val:0x7fd9f1ad1f9dea0f; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 1056, x18)

inst_575:
// fs1 == 0 and fe1 == 0x7f4 and fm1 == 0x5a5a59bbb3fff and fs2 == 1 and fe2 == 0x408 and fm2 == 0x32d10b0d92edf and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x9f1ad1f9dea0f and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f45a5a59bbb3fff; op2val:0xc0832d10b0d92edf; op3val:0x7fd9f1ad1f9dea0f; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1072, x18)

inst_576:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xe71c04b7cfd87 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xe60f0ca8dfb07 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xce6de9d7efcb7 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fce71c04b7cfd87; op2val:0xc00e60f0ca8dfb07; op3val:0x7fece6de9d7efcb7; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 1088, x18)

inst_577:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xe71c04b7cfd87 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xe60f0ca8dfb07 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xce6de9d7efcb7 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fce71c04b7cfd87; op2val:0xc00e60f0ca8dfb07; op3val:0x7fece6de9d7efcb7; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 1104, x18)

inst_578:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xe71c04b7cfd87 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xe60f0ca8dfb07 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xce6de9d7efcb7 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fce71c04b7cfd87; op2val:0xc00e60f0ca8dfb07; op3val:0x7fece6de9d7efcb7; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 1120, x18)

inst_579:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xe71c04b7cfd87 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xe60f0ca8dfb07 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xce6de9d7efcb7 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fce71c04b7cfd87; op2val:0xc00e60f0ca8dfb07; op3val:0x7fece6de9d7efcb7; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 1136, x18)

inst_580:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xe71c04b7cfd87 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xe60f0ca8dfb07 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xce6de9d7efcb7 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fce71c04b7cfd87; op2val:0xc00e60f0ca8dfb07; op3val:0x7fece6de9d7efcb7; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1152, x18)

inst_581:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x393d0e849b454 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xede60a738746b and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x2e2a074d14562 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe393d0e849b454; op2val:0xbfeede60a738746b; op3val:0x7fe2e2a074d14562; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 1168, x18)

inst_582:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x393d0e849b454 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xede60a738746b and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x2e2a074d14562 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe393d0e849b454; op2val:0xbfeede60a738746b; op3val:0x7fe2e2a074d14562; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 1184, x18)

inst_583:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x393d0e849b454 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xede60a738746b and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x2e2a074d14562 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe393d0e849b454; op2val:0xbfeede60a738746b; op3val:0x7fe2e2a074d14562; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 1200, x18)

inst_584:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x393d0e849b454 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xede60a738746b and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x2e2a074d14562 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe393d0e849b454; op2val:0xbfeede60a738746b; op3val:0x7fe2e2a074d14562; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 1216, x18)

inst_585:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x393d0e849b454 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xede60a738746b and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x2e2a074d14562 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe393d0e849b454; op2val:0xbfeede60a738746b; op3val:0x7fe2e2a074d14562; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1232, x18)

inst_586:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xdc7f82acf0d6d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xa270c8218b8b7 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x856d0fd4cd95f and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fddc7f82acf0d6d; op2val:0xbfea270c8218b8b7; op3val:0x7fd856d0fd4cd95f; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 1248, x18)

inst_587:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xdc7f82acf0d6d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xa270c8218b8b7 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x856d0fd4cd95f and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fddc7f82acf0d6d; op2val:0xbfea270c8218b8b7; op3val:0x7fd856d0fd4cd95f; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 1264, x18)

inst_588:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xdc7f82acf0d6d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xa270c8218b8b7 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x856d0fd4cd95f and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fddc7f82acf0d6d; op2val:0xbfea270c8218b8b7; op3val:0x7fd856d0fd4cd95f; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 1280, x18)

inst_589:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xdc7f82acf0d6d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xa270c8218b8b7 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x856d0fd4cd95f and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fddc7f82acf0d6d; op2val:0xbfea270c8218b8b7; op3val:0x7fd856d0fd4cd95f; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 1296, x18)

inst_590:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xdc7f82acf0d6d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xa270c8218b8b7 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x856d0fd4cd95f and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fddc7f82acf0d6d; op2val:0xbfea270c8218b8b7; op3val:0x7fd856d0fd4cd95f; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1312, x18)

inst_591:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x8c00618c5ebf7 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x79abfd08d65b8 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x241b4da97625f and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc8c00618c5ebf7; op2val:0xbfc79abfd08d65b8; op3val:0x7fa241b4da97625f; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 1328, x18)

inst_592:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x8c00618c5ebf7 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x79abfd08d65b8 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x241b4da97625f and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc8c00618c5ebf7; op2val:0xbfc79abfd08d65b8; op3val:0x7fa241b4da97625f; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 1344, x18)

inst_593:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x8c00618c5ebf7 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x79abfd08d65b8 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x241b4da97625f and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc8c00618c5ebf7; op2val:0xbfc79abfd08d65b8; op3val:0x7fa241b4da97625f; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 1360, x18)

inst_594:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x8c00618c5ebf7 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x79abfd08d65b8 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x241b4da97625f and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc8c00618c5ebf7; op2val:0xbfc79abfd08d65b8; op3val:0x7fa241b4da97625f; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 1376, x18)
addi x16,x16,2040

inst_595:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x8c00618c5ebf7 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x79abfd08d65b8 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x241b4da97625f and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc8c00618c5ebf7; op2val:0xbfc79abfd08d65b8; op3val:0x7fa241b4da97625f; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 1392, x18)

inst_596:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x44f79e7be6c8f and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x24e67d722e194 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x73cf067b8fba3 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd44f79e7be6c8f; op2val:0xbfe24e67d722e194; op3val:0x7fc73cf067b8fba3; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 1408, x18)

inst_597:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x44f79e7be6c8f and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x24e67d722e194 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x73cf067b8fba3 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd44f79e7be6c8f; op2val:0xbfe24e67d722e194; op3val:0x7fc73cf067b8fba3; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 1424, x18)

inst_598:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x44f79e7be6c8f and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x24e67d722e194 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x73cf067b8fba3 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd44f79e7be6c8f; op2val:0xbfe24e67d722e194; op3val:0x7fc73cf067b8fba3; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 1440, x18)

inst_599:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x44f79e7be6c8f and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x24e67d722e194 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x73cf067b8fba3 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd44f79e7be6c8f; op2val:0xbfe24e67d722e194; op3val:0x7fc73cf067b8fba3; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 1456, x18)

inst_600:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x44f79e7be6c8f and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x24e67d722e194 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x73cf067b8fba3 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd44f79e7be6c8f; op2val:0xbfe24e67d722e194; op3val:0x7fc73cf067b8fba3; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 1472, x18)

inst_601:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0xbb8a1f913699f and fs2 == 1 and fe2 == 0x400 and fm2 == 0x3bac12cd8e8cf and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x11768b1c5f473 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fabb8a1f913699f; op2val:0xc003bac12cd8e8cf; op3val:0x7fc11768b1c5f473; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 1488, x18)

inst_602:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0xbb8a1f913699f and fs2 == 1 and fe2 == 0x400 and fm2 == 0x3bac12cd8e8cf and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x11768b1c5f473 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fabb8a1f913699f; op2val:0xc003bac12cd8e8cf; op3val:0x7fc11768b1c5f473; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 1504, x18)

inst_603:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0xbb8a1f913699f and fs2 == 1 and fe2 == 0x400 and fm2 == 0x3bac12cd8e8cf and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x11768b1c5f473 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fabb8a1f913699f; op2val:0xc003bac12cd8e8cf; op3val:0x7fc11768b1c5f473; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 1520, x18)

inst_604:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0xbb8a1f913699f and fs2 == 1 and fe2 == 0x400 and fm2 == 0x3bac12cd8e8cf and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x11768b1c5f473 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fabb8a1f913699f; op2val:0xc003bac12cd8e8cf; op3val:0x7fc11768b1c5f473; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 1536, x18)

inst_605:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0xbb8a1f913699f and fs2 == 1 and fe2 == 0x400 and fm2 == 0x3bac12cd8e8cf and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x11768b1c5f473 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fabb8a1f913699f; op2val:0xc003bac12cd8e8cf; op3val:0x7fc11768b1c5f473; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 1552, x18)

inst_606:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe2e74f7d68c61 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xeb434736cd25d and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xcf58472a6e4bb and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fde2e74f7d68c61; op2val:0xbfdeb434736cd25d; op3val:0x7fccf58472a6e4bb; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 1568, x18)

inst_607:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe2e74f7d68c61 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xeb434736cd25d and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xcf58472a6e4bb and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fde2e74f7d68c61; op2val:0xbfdeb434736cd25d; op3val:0x7fccf58472a6e4bb; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 1584, x18)

inst_608:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe2e74f7d68c61 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xeb434736cd25d and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xcf58472a6e4bb and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fde2e74f7d68c61; op2val:0xbfdeb434736cd25d; op3val:0x7fccf58472a6e4bb; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 1600, x18)

inst_609:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe2e74f7d68c61 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xeb434736cd25d and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xcf58472a6e4bb and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fde2e74f7d68c61; op2val:0xbfdeb434736cd25d; op3val:0x7fccf58472a6e4bb; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 1616, x18)

inst_610:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe2e74f7d68c61 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xeb434736cd25d and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xcf58472a6e4bb and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fde2e74f7d68c61; op2val:0xbfdeb434736cd25d; op3val:0x7fccf58472a6e4bb; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 1632, x18)

inst_611:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4300c22dfb496 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x0fcb563875381 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x56ee5bf224c4f and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe4300c22dfb496; op2val:0xbfb0fcb563875381; op3val:0x7fa56ee5bf224c4f; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 1648, x18)

inst_612:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4300c22dfb496 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x0fcb563875381 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x56ee5bf224c4f and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe4300c22dfb496; op2val:0xbfb0fcb563875381; op3val:0x7fa56ee5bf224c4f; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 1664, x18)

inst_613:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4300c22dfb496 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x0fcb563875381 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x56ee5bf224c4f and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe4300c22dfb496; op2val:0xbfb0fcb563875381; op3val:0x7fa56ee5bf224c4f; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 1680, x18)

inst_614:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4300c22dfb496 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x0fcb563875381 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x56ee5bf224c4f and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe4300c22dfb496; op2val:0xbfb0fcb563875381; op3val:0x7fa56ee5bf224c4f; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 1696, x18)

inst_615:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4300c22dfb496 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x0fcb563875381 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x56ee5bf224c4f and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe4300c22dfb496; op2val:0xbfb0fcb563875381; op3val:0x7fa56ee5bf224c4f; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1712, x18)

inst_616:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xc09714c24da2f and fs2 == 1 and fe2 == 0x400 and fm2 == 0x90dadbfedb4cf and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5f35c94b8ddad and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcc09714c24da2f; op2val:0xc0090dadbfedb4cf; op3val:0x7fe5f35c94b8ddad; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 1728, x18)

inst_617:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xc09714c24da2f and fs2 == 1 and fe2 == 0x400 and fm2 == 0x90dadbfedb4cf and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5f35c94b8ddad and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcc09714c24da2f; op2val:0xc0090dadbfedb4cf; op3val:0x7fe5f35c94b8ddad; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 1744, x18)

inst_618:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xc09714c24da2f and fs2 == 1 and fe2 == 0x400 and fm2 == 0x90dadbfedb4cf and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5f35c94b8ddad and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcc09714c24da2f; op2val:0xc0090dadbfedb4cf; op3val:0x7fe5f35c94b8ddad; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 1760, x18)

inst_619:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xc09714c24da2f and fs2 == 1 and fe2 == 0x400 and fm2 == 0x90dadbfedb4cf and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5f35c94b8ddad and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcc09714c24da2f; op2val:0xc0090dadbfedb4cf; op3val:0x7fe5f35c94b8ddad; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 1776, x18)

inst_620:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xc09714c24da2f and fs2 == 1 and fe2 == 0x400 and fm2 == 0x90dadbfedb4cf and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5f35c94b8ddad and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcc09714c24da2f; op2val:0xc0090dadbfedb4cf; op3val:0x7fe5f35c94b8ddad; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1792, x18)

inst_621:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc3a7704fe195b and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x79556c0841e18 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x4cdc24cb9149f and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdc3a7704fe195b; op2val:0xbff79556c0841e18; op3val:0x7fe4cdc24cb9149f; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 1808, x18)

inst_622:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc3a7704fe195b and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x79556c0841e18 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x4cdc24cb9149f and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdc3a7704fe195b; op2val:0xbff79556c0841e18; op3val:0x7fe4cdc24cb9149f; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 1824, x18)

inst_623:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc3a7704fe195b and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x79556c0841e18 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x4cdc24cb9149f and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdc3a7704fe195b; op2val:0xbff79556c0841e18; op3val:0x7fe4cdc24cb9149f; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 1840, x18)

inst_624:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc3a7704fe195b and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x79556c0841e18 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x4cdc24cb9149f and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdc3a7704fe195b; op2val:0xbff79556c0841e18; op3val:0x7fe4cdc24cb9149f; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 1856, x18)

inst_625:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc3a7704fe195b and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x79556c0841e18 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x4cdc24cb9149f and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdc3a7704fe195b; op2val:0xbff79556c0841e18; op3val:0x7fe4cdc24cb9149f; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1872, x18)

inst_626:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xc48f21909621f and fs2 == 1 and fe2 == 0x401 and fm2 == 0x72c5b0c847b8b and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x47ba2c9621783 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f9c48f21909621f; op2val:0xc0172c5b0c847b8b; op3val:0x7fc47ba2c9621783; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 1888, x18)

inst_627:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xc48f21909621f and fs2 == 1 and fe2 == 0x401 and fm2 == 0x72c5b0c847b8b and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x47ba2c9621783 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f9c48f21909621f; op2val:0xc0172c5b0c847b8b; op3val:0x7fc47ba2c9621783; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 1904, x18)

inst_628:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xc48f21909621f and fs2 == 1 and fe2 == 0x401 and fm2 == 0x72c5b0c847b8b and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x47ba2c9621783 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f9c48f21909621f; op2val:0xc0172c5b0c847b8b; op3val:0x7fc47ba2c9621783; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 1920, x18)

inst_629:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xc48f21909621f and fs2 == 1 and fe2 == 0x401 and fm2 == 0x72c5b0c847b8b and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x47ba2c9621783 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f9c48f21909621f; op2val:0xc0172c5b0c847b8b; op3val:0x7fc47ba2c9621783; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 1936, x18)

inst_630:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xc48f21909621f and fs2 == 1 and fe2 == 0x401 and fm2 == 0x72c5b0c847b8b and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x47ba2c9621783 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f9c48f21909621f; op2val:0xc0172c5b0c847b8b; op3val:0x7fc47ba2c9621783; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1952, x18)

inst_631:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x46136351533f7 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x219562feed3b5 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x70da2a7fbebd4 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe46136351533f7; op2val:0xbff219562feed3b5; op3val:0x7fe70da2a7fbebd4; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 1968, x18)

inst_632:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x46136351533f7 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x219562feed3b5 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x70da2a7fbebd4 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe46136351533f7; op2val:0xbff219562feed3b5; op3val:0x7fe70da2a7fbebd4; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 1984, x18)

inst_633:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x46136351533f7 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x219562feed3b5 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x70da2a7fbebd4 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe46136351533f7; op2val:0xbff219562feed3b5; op3val:0x7fe70da2a7fbebd4; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 2000, x18)

inst_634:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x46136351533f7 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x219562feed3b5 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x70da2a7fbebd4 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe46136351533f7; op2val:0xbff219562feed3b5; op3val:0x7fe70da2a7fbebd4; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_6)

inst_635:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x46136351533f7 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x219562feed3b5 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x70da2a7fbebd4 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe46136351533f7; op2val:0xbff219562feed3b5; op3val:0x7fe70da2a7fbebd4; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 0, x18)

inst_636:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3f5a77e367c1b and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x3df62857d4110 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8ca619b77f06f and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3f5a77e367c1b; op2val:0xbff3df62857d4110; op3val:0x7fe8ca619b77f06f; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 16, x18)

inst_637:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3f5a77e367c1b and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x3df62857d4110 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8ca619b77f06f and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3f5a77e367c1b; op2val:0xbff3df62857d4110; op3val:0x7fe8ca619b77f06f; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 32, x18)

inst_638:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3f5a77e367c1b and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x3df62857d4110 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8ca619b77f06f and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3f5a77e367c1b; op2val:0xbff3df62857d4110; op3val:0x7fe8ca619b77f06f; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 48, x18)

inst_639:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3f5a77e367c1b and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x3df62857d4110 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8ca619b77f06f and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3f5a77e367c1b; op2val:0xbff3df62857d4110; op3val:0x7fe8ca619b77f06f; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 64, x18)

inst_640:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3f5a77e367c1b and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x3df62857d4110 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8ca619b77f06f and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3f5a77e367c1b; op2val:0xbff3df62857d4110; op3val:0x7fe8ca619b77f06f; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 80, x18)

inst_641:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x54c3c93bee7ca and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x43b51c6a4029a and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xaee41b26bdc31 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe54c3c93bee7ca; op2val:0xbfe43b51c6a4029a; op3val:0x7fdaee41b26bdc31; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 96, x18)

inst_642:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x54c3c93bee7ca and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x43b51c6a4029a and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xaee41b26bdc31 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe54c3c93bee7ca; op2val:0xbfe43b51c6a4029a; op3val:0x7fdaee41b26bdc31; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 112, x18)

inst_643:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x54c3c93bee7ca and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x43b51c6a4029a and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xaee41b26bdc31 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe54c3c93bee7ca; op2val:0xbfe43b51c6a4029a; op3val:0x7fdaee41b26bdc31; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 128, x18)

inst_644:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x54c3c93bee7ca and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x43b51c6a4029a and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xaee41b26bdc31 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe54c3c93bee7ca; op2val:0xbfe43b51c6a4029a; op3val:0x7fdaee41b26bdc31; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 144, x18)

inst_645:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x54c3c93bee7ca and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x43b51c6a4029a and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xaee41b26bdc31 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe54c3c93bee7ca; op2val:0xbfe43b51c6a4029a; op3val:0x7fdaee41b26bdc31; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 160, x18)

inst_646:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x8f8cdebbeb1b6 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x7d175bb1b34cb and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x29648e210d99f and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe8f8cdebbeb1b6; op2val:0xbfe7d175bb1b34cb; op3val:0x7fe29648e210d99f; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 176, x18)

inst_647:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x8f8cdebbeb1b6 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x7d175bb1b34cb and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x29648e210d99f and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe8f8cdebbeb1b6; op2val:0xbfe7d175bb1b34cb; op3val:0x7fe29648e210d99f; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 192, x18)

inst_648:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x8f8cdebbeb1b6 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x7d175bb1b34cb and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x29648e210d99f and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe8f8cdebbeb1b6; op2val:0xbfe7d175bb1b34cb; op3val:0x7fe29648e210d99f; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 208, x18)

inst_649:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x8f8cdebbeb1b6 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x7d175bb1b34cb and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x29648e210d99f and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe8f8cdebbeb1b6; op2val:0xbfe7d175bb1b34cb; op3val:0x7fe29648e210d99f; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 224, x18)

inst_650:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x8f8cdebbeb1b6 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x7d175bb1b34cb and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x29648e210d99f and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe8f8cdebbeb1b6; op2val:0xbfe7d175bb1b34cb; op3val:0x7fe29648e210d99f; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 240, x18)

inst_651:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x75f0e25aaa1ef and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xe1d2ba70c870b and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x5fe6b49de552b and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe75f0e25aaa1ef; op2val:0xbfce1d2ba70c870b; op3val:0x7fc5fe6b49de552b; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 256, x18)

inst_652:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x75f0e25aaa1ef and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xe1d2ba70c870b and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x5fe6b49de552b and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe75f0e25aaa1ef; op2val:0xbfce1d2ba70c870b; op3val:0x7fc5fe6b49de552b; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 272, x18)

inst_653:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x75f0e25aaa1ef and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xe1d2ba70c870b and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x5fe6b49de552b and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe75f0e25aaa1ef; op2val:0xbfce1d2ba70c870b; op3val:0x7fc5fe6b49de552b; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 288, x18)

inst_654:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x75f0e25aaa1ef and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xe1d2ba70c870b and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x5fe6b49de552b and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe75f0e25aaa1ef; op2val:0xbfce1d2ba70c870b; op3val:0x7fc5fe6b49de552b; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 304, x18)

inst_655:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x75f0e25aaa1ef and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xe1d2ba70c870b and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x5fe6b49de552b and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe75f0e25aaa1ef; op2val:0xbfce1d2ba70c870b; op3val:0x7fc5fe6b49de552b; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 320, x18)

inst_656:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x620288c50ba92 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0a76ad4accd30 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x707abeeaef579 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe620288c50ba92; op2val:0xbff0a76ad4accd30; op3val:0x7fe707abeeaef579; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 336, x18)

inst_657:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x620288c50ba92 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0a76ad4accd30 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x707abeeaef579 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe620288c50ba92; op2val:0xbff0a76ad4accd30; op3val:0x7fe707abeeaef579; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 352, x18)

inst_658:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x620288c50ba92 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0a76ad4accd30 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x707abeeaef579 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe620288c50ba92; op2val:0xbff0a76ad4accd30; op3val:0x7fe707abeeaef579; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 368, x18)

inst_659:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x620288c50ba92 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0a76ad4accd30 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x707abeeaef579 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe620288c50ba92; op2val:0xbff0a76ad4accd30; op3val:0x7fe707abeeaef579; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 384, x18)

inst_660:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x620288c50ba92 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0a76ad4accd30 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x707abeeaef579 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe620288c50ba92; op2val:0xbff0a76ad4accd30; op3val:0x7fe707abeeaef579; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 400, x18)

inst_661:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xdff07e36a58e8 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x04ab42936e1a4 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xe8b152a434b27 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fedff07e36a58e8; op2val:0xbfe04ab42936e1a4; op3val:0x7fde8b152a434b27; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 416, x18)

inst_662:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xdff07e36a58e8 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x04ab42936e1a4 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xe8b152a434b27 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fedff07e36a58e8; op2val:0xbfe04ab42936e1a4; op3val:0x7fde8b152a434b27; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 432, x18)

inst_663:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xdff07e36a58e8 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x04ab42936e1a4 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xe8b152a434b27 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fedff07e36a58e8; op2val:0xbfe04ab42936e1a4; op3val:0x7fde8b152a434b27; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 448, x18)

inst_664:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xdff07e36a58e8 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x04ab42936e1a4 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xe8b152a434b27 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fedff07e36a58e8; op2val:0xbfe04ab42936e1a4; op3val:0x7fde8b152a434b27; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 464, x18)

inst_665:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xdff07e36a58e8 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x04ab42936e1a4 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xe8b152a434b27 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fedff07e36a58e8; op2val:0xbfe04ab42936e1a4; op3val:0x7fde8b152a434b27; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 480, x18)

inst_666:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x54524f32daef7 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x4237a343890fb and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xac597e572b7b4 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc54524f32daef7; op2val:0xc014237a343890fb; op3val:0x7feac597e572b7b4; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 496, x18)

inst_667:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x54524f32daef7 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x4237a343890fb and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xac597e572b7b4 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc54524f32daef7; op2val:0xc014237a343890fb; op3val:0x7feac597e572b7b4; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 512, x18)

inst_668:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x54524f32daef7 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x4237a343890fb and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xac597e572b7b4 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc54524f32daef7; op2val:0xc014237a343890fb; op3val:0x7feac597e572b7b4; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 528, x18)

inst_669:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x54524f32daef7 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x4237a343890fb and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xac597e572b7b4 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc54524f32daef7; op2val:0xc014237a343890fb; op3val:0x7feac597e572b7b4; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 544, x18)

inst_670:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x54524f32daef7 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x4237a343890fb and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xac597e572b7b4 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc54524f32daef7; op2val:0xc014237a343890fb; op3val:0x7feac597e572b7b4; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 560, x18)

inst_671:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0949924914346 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0588b20ed1e69 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0f05a9bebbacf and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0949924914346; op2val:0xbff0588b20ed1e69; op3val:0x7fe0f05a9bebbacf; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 576, x18)

inst_672:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0949924914346 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0588b20ed1e69 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0f05a9bebbacf and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0949924914346; op2val:0xbff0588b20ed1e69; op3val:0x7fe0f05a9bebbacf; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 592, x18)

inst_673:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0949924914346 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0588b20ed1e69 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0f05a9bebbacf and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0949924914346; op2val:0xbff0588b20ed1e69; op3val:0x7fe0f05a9bebbacf; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 608, x18)

inst_674:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0949924914346 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0588b20ed1e69 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0f05a9bebbacf and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0949924914346; op2val:0xbff0588b20ed1e69; op3val:0x7fe0f05a9bebbacf; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 624, x18)

inst_675:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0949924914346 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0588b20ed1e69 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0f05a9bebbacf and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0949924914346; op2val:0xbff0588b20ed1e69; op3val:0x7fe0f05a9bebbacf; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 640, x18)

inst_676:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf3c649975046b and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xf5b7610493341 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe9bc871565d06 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef3c649975046b; op2val:0xbfef5b7610493341; op3val:0x7fee9bc871565d06; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 656, x18)

inst_677:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf3c649975046b and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xf5b7610493341 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe9bc871565d06 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef3c649975046b; op2val:0xbfef5b7610493341; op3val:0x7fee9bc871565d06; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 672, x18)

inst_678:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf3c649975046b and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xf5b7610493341 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe9bc871565d06 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef3c649975046b; op2val:0xbfef5b7610493341; op3val:0x7fee9bc871565d06; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 688, x18)

inst_679:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf3c649975046b and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xf5b7610493341 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe9bc871565d06 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef3c649975046b; op2val:0xbfef5b7610493341; op3val:0x7fee9bc871565d06; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 704, x18)
addi x16,x16,2040

inst_680:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf3c649975046b and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xf5b7610493341 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe9bc871565d06 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef3c649975046b; op2val:0xbfef5b7610493341; op3val:0x7fee9bc871565d06; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 720, x18)

inst_681:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xbd6501f77c75d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x9521af5bd0569 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x606db39cc9430 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7febd6501f77c75d; op2val:0xbfe9521af5bd0569; op3val:0x7fe606db39cc9430; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 736, x18)

inst_682:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xbd6501f77c75d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x9521af5bd0569 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x606db39cc9430 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7febd6501f77c75d; op2val:0xbfe9521af5bd0569; op3val:0x7fe606db39cc9430; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 752, x18)

inst_683:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xbd6501f77c75d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x9521af5bd0569 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x606db39cc9430 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7febd6501f77c75d; op2val:0xbfe9521af5bd0569; op3val:0x7fe606db39cc9430; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 768, x18)

inst_684:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xbd6501f77c75d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x9521af5bd0569 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x606db39cc9430 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7febd6501f77c75d; op2val:0xbfe9521af5bd0569; op3val:0x7fe606db39cc9430; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 784, x18)

inst_685:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xbd6501f77c75d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x9521af5bd0569 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x606db39cc9430 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7febd6501f77c75d; op2val:0xbfe9521af5bd0569; op3val:0x7fe606db39cc9430; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 800, x18)

inst_686:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x66723c760f03d and fs2 == 1 and fe2 == 0x400 and fm2 == 0x34369dcdd22ad and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xaf8de9cb09cc3 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd66723c760f03d; op2val:0xc0034369dcdd22ad; op3val:0x7feaf8de9cb09cc3; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 816, x18)

inst_687:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x66723c760f03d and fs2 == 1 and fe2 == 0x400 and fm2 == 0x34369dcdd22ad and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xaf8de9cb09cc3 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd66723c760f03d; op2val:0xc0034369dcdd22ad; op3val:0x7feaf8de9cb09cc3; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 832, x18)

inst_688:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x66723c760f03d and fs2 == 1 and fe2 == 0x400 and fm2 == 0x34369dcdd22ad and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xaf8de9cb09cc3 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd66723c760f03d; op2val:0xc0034369dcdd22ad; op3val:0x7feaf8de9cb09cc3; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 848, x18)

inst_689:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x66723c760f03d and fs2 == 1 and fe2 == 0x400 and fm2 == 0x34369dcdd22ad and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xaf8de9cb09cc3 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd66723c760f03d; op2val:0xc0034369dcdd22ad; op3val:0x7feaf8de9cb09cc3; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 864, x18)

inst_690:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x66723c760f03d and fs2 == 1 and fe2 == 0x400 and fm2 == 0x34369dcdd22ad and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xaf8de9cb09cc3 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd66723c760f03d; op2val:0xc0034369dcdd22ad; op3val:0x7feaf8de9cb09cc3; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 880, x18)

inst_691:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x79c481bc003f9 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1f5a288a490a8 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa808585a245b3 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe79c481bc003f9; op2val:0xbff1f5a288a490a8; op3val:0x7fea808585a245b3; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 896, x18)

inst_692:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x79c481bc003f9 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1f5a288a490a8 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa808585a245b3 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe79c481bc003f9; op2val:0xbff1f5a288a490a8; op3val:0x7fea808585a245b3; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 912, x18)

inst_693:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x79c481bc003f9 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1f5a288a490a8 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa808585a245b3 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe79c481bc003f9; op2val:0xbff1f5a288a490a8; op3val:0x7fea808585a245b3; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 928, x18)

inst_694:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x79c481bc003f9 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1f5a288a490a8 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa808585a245b3 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe79c481bc003f9; op2val:0xbff1f5a288a490a8; op3val:0x7fea808585a245b3; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 944, x18)

inst_695:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x79c481bc003f9 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1f5a288a490a8 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa808585a245b3 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe79c481bc003f9; op2val:0xbff1f5a288a490a8; op3val:0x7fea808585a245b3; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 960, x18)

inst_696:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x643bd6230e5b5 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xd9f368b89c1a3 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x49c2a2961e033 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd643bd6230e5b5; op2val:0xbffd9f368b89c1a3; op3val:0x7fe49c2a2961e033; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 976, x18)

inst_697:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x643bd6230e5b5 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xd9f368b89c1a3 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x49c2a2961e033 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd643bd6230e5b5; op2val:0xbffd9f368b89c1a3; op3val:0x7fe49c2a2961e033; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 992, x18)

inst_698:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x643bd6230e5b5 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xd9f368b89c1a3 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x49c2a2961e033 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd643bd6230e5b5; op2val:0xbffd9f368b89c1a3; op3val:0x7fe49c2a2961e033; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 1008, x18)

inst_699:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x643bd6230e5b5 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xd9f368b89c1a3 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x49c2a2961e033 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd643bd6230e5b5; op2val:0xbffd9f368b89c1a3; op3val:0x7fe49c2a2961e033; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 1024, x18)

inst_700:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x643bd6230e5b5 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xd9f368b89c1a3 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x49c2a2961e033 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd643bd6230e5b5; op2val:0xbffd9f368b89c1a3; op3val:0x7fe49c2a2961e033; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1040, x18)

inst_701:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4b7cdaeb1ce31 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x3b62b1f2cbf86 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x98626d96d20d9 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe4b7cdaeb1ce31; op2val:0xbff3b62b1f2cbf86; op3val:0x7fe98626d96d20d9; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 1056, x18)

inst_702:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4b7cdaeb1ce31 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x3b62b1f2cbf86 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x98626d96d20d9 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe4b7cdaeb1ce31; op2val:0xbff3b62b1f2cbf86; op3val:0x7fe98626d96d20d9; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 1072, x18)

inst_703:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4b7cdaeb1ce31 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x3b62b1f2cbf86 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x98626d96d20d9 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe4b7cdaeb1ce31; op2val:0xbff3b62b1f2cbf86; op3val:0x7fe98626d96d20d9; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 1088, x18)

inst_704:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4b7cdaeb1ce31 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x3b62b1f2cbf86 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x98626d96d20d9 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe4b7cdaeb1ce31; op2val:0xbff3b62b1f2cbf86; op3val:0x7fe98626d96d20d9; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 1104, x18)

inst_705:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4b7cdaeb1ce31 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x3b62b1f2cbf86 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x98626d96d20d9 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe4b7cdaeb1ce31; op2val:0xbff3b62b1f2cbf86; op3val:0x7fe98626d96d20d9; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1120, x18)

inst_706:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xda0cada4f8445 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xc39d54d166e8c and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa223d66005b84 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdda0cada4f8445; op2val:0xbffc39d54d166e8c; op3val:0x7fea223d66005b84; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 1136, x18)

inst_707:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xda0cada4f8445 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xc39d54d166e8c and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa223d66005b84 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdda0cada4f8445; op2val:0xbffc39d54d166e8c; op3val:0x7fea223d66005b84; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 1152, x18)

inst_708:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xda0cada4f8445 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xc39d54d166e8c and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa223d66005b84 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdda0cada4f8445; op2val:0xbffc39d54d166e8c; op3val:0x7fea223d66005b84; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 1168, x18)

inst_709:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xda0cada4f8445 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xc39d54d166e8c and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa223d66005b84 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdda0cada4f8445; op2val:0xbffc39d54d166e8c; op3val:0x7fea223d66005b84; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 1184, x18)

inst_710:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xda0cada4f8445 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xc39d54d166e8c and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa223d66005b84 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdda0cada4f8445; op2val:0xbffc39d54d166e8c; op3val:0x7fea223d66005b84; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1200, x18)

inst_711:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x00b57aa9b7409 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x56ee79e4569cf and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x57e194d1840e7 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd00b57aa9b7409; op2val:0xc0056ee79e4569cf; op3val:0x7fe57e194d1840e7; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 1216, x18)

inst_712:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x00b57aa9b7409 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x56ee79e4569cf and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x57e194d1840e7 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd00b57aa9b7409; op2val:0xc0056ee79e4569cf; op3val:0x7fe57e194d1840e7; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 1232, x18)

inst_713:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x00b57aa9b7409 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x56ee79e4569cf and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x57e194d1840e7 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd00b57aa9b7409; op2val:0xc0056ee79e4569cf; op3val:0x7fe57e194d1840e7; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 1248, x18)

inst_714:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x00b57aa9b7409 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x56ee79e4569cf and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x57e194d1840e7 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd00b57aa9b7409; op2val:0xc0056ee79e4569cf; op3val:0x7fe57e194d1840e7; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 1264, x18)

inst_715:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x00b57aa9b7409 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x56ee79e4569cf and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x57e194d1840e7 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd00b57aa9b7409; op2val:0xc0056ee79e4569cf; op3val:0x7fe57e194d1840e7; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1280, x18)

inst_716:
// fs1 == 0 and fe1 == 0x7f8 and fm1 == 0x7b799796bf9ff and fs2 == 1 and fe2 == 0x404 and fm2 == 0x79dd7cecf9d03 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x180f30b184945 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f87b799796bf9ff; op2val:0xc0479dd7cecf9d03; op3val:0x7fe180f30b184945; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 1296, x18)

inst_717:
// fs1 == 0 and fe1 == 0x7f8 and fm1 == 0x7b799796bf9ff and fs2 == 1 and fe2 == 0x404 and fm2 == 0x79dd7cecf9d03 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x180f30b184945 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f87b799796bf9ff; op2val:0xc0479dd7cecf9d03; op3val:0x7fe180f30b184945; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 1312, x18)

inst_718:
// fs1 == 0 and fe1 == 0x7f8 and fm1 == 0x7b799796bf9ff and fs2 == 1 and fe2 == 0x404 and fm2 == 0x79dd7cecf9d03 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x180f30b184945 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f87b799796bf9ff; op2val:0xc0479dd7cecf9d03; op3val:0x7fe180f30b184945; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 1328, x18)

inst_719:
// fs1 == 0 and fe1 == 0x7f8 and fm1 == 0x7b799796bf9ff and fs2 == 1 and fe2 == 0x404 and fm2 == 0x79dd7cecf9d03 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x180f30b184945 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f87b799796bf9ff; op2val:0xc0479dd7cecf9d03; op3val:0x7fe180f30b184945; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 1344, x18)

inst_720:
// fs1 == 0 and fe1 == 0x7f8 and fm1 == 0x7b799796bf9ff and fs2 == 1 and fe2 == 0x404 and fm2 == 0x79dd7cecf9d03 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x180f30b184945 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f87b799796bf9ff; op2val:0xc0479dd7cecf9d03; op3val:0x7fe180f30b184945; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 1360, x18)

inst_721:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4ca4730b6efdc and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc9994a79146ea and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x294c603684405 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe4ca4730b6efdc; op2val:0xbfec9994a79146ea; op3val:0x7fe294c603684405; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 1376, x18)

inst_722:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4ca4730b6efdc and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc9994a79146ea and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x294c603684405 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe4ca4730b6efdc; op2val:0xbfec9994a79146ea; op3val:0x7fe294c603684405; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 1392, x18)

inst_723:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4ca4730b6efdc and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc9994a79146ea and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x294c603684405 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe4ca4730b6efdc; op2val:0xbfec9994a79146ea; op3val:0x7fe294c603684405; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 1408, x18)

inst_724:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4ca4730b6efdc and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc9994a79146ea and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x294c603684405 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe4ca4730b6efdc; op2val:0xbfec9994a79146ea; op3val:0x7fe294c603684405; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 1424, x18)

inst_725:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4ca4730b6efdc and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc9994a79146ea and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x294c603684405 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe4ca4730b6efdc; op2val:0xbfec9994a79146ea; op3val:0x7fe294c603684405; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 1440, x18)

inst_726:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x2ce78cfa7b389 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x9bdfcdecda208 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe41ecf15c3c31 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd2ce78cfa7b389; op2val:0xc009bdfcdecda208; op3val:0x7fee41ecf15c3c31; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 1456, x18)

inst_727:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x2ce78cfa7b389 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x9bdfcdecda208 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe41ecf15c3c31 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd2ce78cfa7b389; op2val:0xc009bdfcdecda208; op3val:0x7fee41ecf15c3c31; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 1472, x18)

inst_728:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x2ce78cfa7b389 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x9bdfcdecda208 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe41ecf15c3c31 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd2ce78cfa7b389; op2val:0xc009bdfcdecda208; op3val:0x7fee41ecf15c3c31; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 1488, x18)

inst_729:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x2ce78cfa7b389 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x9bdfcdecda208 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe41ecf15c3c31 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd2ce78cfa7b389; op2val:0xc009bdfcdecda208; op3val:0x7fee41ecf15c3c31; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 1504, x18)

inst_730:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x2ce78cfa7b389 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x9bdfcdecda208 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe41ecf15c3c31 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd2ce78cfa7b389; op2val:0xc009bdfcdecda208; op3val:0x7fee41ecf15c3c31; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 1520, x18)

inst_731:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x8a1c573ec7fe3 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xcb8b02f3410e4 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x61bb692dd2b3e and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe8a1c573ec7fe3; op2val:0xbfecb8b02f3410e4; op3val:0x7fe61bb692dd2b3e; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 1536, x18)

inst_732:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x8a1c573ec7fe3 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xcb8b02f3410e4 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x61bb692dd2b3e and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe8a1c573ec7fe3; op2val:0xbfecb8b02f3410e4; op3val:0x7fe61bb692dd2b3e; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 1552, x18)

inst_733:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x8a1c573ec7fe3 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xcb8b02f3410e4 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x61bb692dd2b3e and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe8a1c573ec7fe3; op2val:0xbfecb8b02f3410e4; op3val:0x7fe61bb692dd2b3e; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 1568, x18)

inst_734:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x8a1c573ec7fe3 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xcb8b02f3410e4 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x61bb692dd2b3e and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe8a1c573ec7fe3; op2val:0xbfecb8b02f3410e4; op3val:0x7fe61bb692dd2b3e; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 1584, x18)

inst_735:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x8a1c573ec7fe3 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xcb8b02f3410e4 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x61bb692dd2b3e and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe8a1c573ec7fe3; op2val:0xbfecb8b02f3410e4; op3val:0x7fe61bb692dd2b3e; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 1600, x18)

inst_736:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x1f97ae6ae8e5d and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xbab5376882ede and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xf15777a1e6e19 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd1f97ae6ae8e5d; op2val:0xbffbab5376882ede; op3val:0x7fdf15777a1e6e19; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 1616, x18)

inst_737:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x1f97ae6ae8e5d and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xbab5376882ede and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xf15777a1e6e19 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd1f97ae6ae8e5d; op2val:0xbffbab5376882ede; op3val:0x7fdf15777a1e6e19; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 1632, x18)

inst_738:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x1f97ae6ae8e5d and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xbab5376882ede and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xf15777a1e6e19 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd1f97ae6ae8e5d; op2val:0xbffbab5376882ede; op3val:0x7fdf15777a1e6e19; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 1648, x18)

inst_739:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x1f97ae6ae8e5d and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xbab5376882ede and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xf15777a1e6e19 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd1f97ae6ae8e5d; op2val:0xbffbab5376882ede; op3val:0x7fdf15777a1e6e19; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 1664, x18)

inst_740:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x1f97ae6ae8e5d and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xbab5376882ede and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xf15777a1e6e19 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd1f97ae6ae8e5d; op2val:0xbffbab5376882ede; op3val:0x7fdf15777a1e6e19; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 1680, x18)

inst_741:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x742774c7979c9 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xf039ccd843cce and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x68b03c6ac58cf and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd742774c7979c9; op2val:0xbfff039ccd843cce; op3val:0x7fe68b03c6ac58cf; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 1696, x18)

inst_742:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x742774c7979c9 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xf039ccd843cce and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x68b03c6ac58cf and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd742774c7979c9; op2val:0xbfff039ccd843cce; op3val:0x7fe68b03c6ac58cf; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 1712, x18)

inst_743:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x742774c7979c9 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xf039ccd843cce and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x68b03c6ac58cf and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd742774c7979c9; op2val:0xbfff039ccd843cce; op3val:0x7fe68b03c6ac58cf; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 1728, x18)

inst_744:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x742774c7979c9 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xf039ccd843cce and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x68b03c6ac58cf and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd742774c7979c9; op2val:0xbfff039ccd843cce; op3val:0x7fe68b03c6ac58cf; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 1744, x18)

inst_745:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x742774c7979c9 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xf039ccd843cce and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x68b03c6ac58cf and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd742774c7979c9; op2val:0xbfff039ccd843cce; op3val:0x7fe68b03c6ac58cf; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1760, x18)

inst_746:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x53fa39c232464 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x24dd586c91739 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x84ef5e539092d and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe53fa39c232464; op2val:0xbff24dd586c91739; op3val:0x7fe84ef5e539092d; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 1776, x18)

inst_747:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x53fa39c232464 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x24dd586c91739 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x84ef5e539092d and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe53fa39c232464; op2val:0xbff24dd586c91739; op3val:0x7fe84ef5e539092d; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 1792, x18)

inst_748:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x53fa39c232464 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x24dd586c91739 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x84ef5e539092d and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe53fa39c232464; op2val:0xbff24dd586c91739; op3val:0x7fe84ef5e539092d; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 1808, x18)

inst_749:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x53fa39c232464 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x24dd586c91739 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x84ef5e539092d and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe53fa39c232464; op2val:0xbff24dd586c91739; op3val:0x7fe84ef5e539092d; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 1824, x18)

inst_750:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x53fa39c232464 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x24dd586c91739 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x84ef5e539092d and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe53fa39c232464; op2val:0xbff24dd586c91739; op3val:0x7fe84ef5e539092d; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1840, x18)

inst_751:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x8cbf7156c3c4d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xcaf13c85d378a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x63a22f659957b and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe8cbf7156c3c4d; op2val:0xbfecaf13c85d378a; op3val:0x7fe63a22f659957b; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 1856, x18)

inst_752:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x8cbf7156c3c4d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xcaf13c85d378a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x63a22f659957b and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe8cbf7156c3c4d; op2val:0xbfecaf13c85d378a; op3val:0x7fe63a22f659957b; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 1872, x18)

inst_753:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x8cbf7156c3c4d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xcaf13c85d378a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x63a22f659957b and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe8cbf7156c3c4d; op2val:0xbfecaf13c85d378a; op3val:0x7fe63a22f659957b; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 1888, x18)

inst_754:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x8cbf7156c3c4d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xcaf13c85d378a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x63a22f659957b and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe8cbf7156c3c4d; op2val:0xbfecaf13c85d378a; op3val:0x7fe63a22f659957b; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 1904, x18)

inst_755:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x8cbf7156c3c4d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xcaf13c85d378a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x63a22f659957b and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe8cbf7156c3c4d; op2val:0xbfecaf13c85d378a; op3val:0x7fe63a22f659957b; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1920, x18)

inst_756:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x71ff810813f2d and fs2 == 1 and fe2 == 0x400 and fm2 == 0x1672eac27ff57 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x92718d32e3c43 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd71ff810813f2d; op2val:0xc001672eac27ff57; op3val:0x7fe92718d32e3c43; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 1936, x18)

inst_757:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x71ff810813f2d and fs2 == 1 and fe2 == 0x400 and fm2 == 0x1672eac27ff57 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x92718d32e3c43 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd71ff810813f2d; op2val:0xc001672eac27ff57; op3val:0x7fe92718d32e3c43; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 1952, x18)

inst_758:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x71ff810813f2d and fs2 == 1 and fe2 == 0x400 and fm2 == 0x1672eac27ff57 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x92718d32e3c43 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd71ff810813f2d; op2val:0xc001672eac27ff57; op3val:0x7fe92718d32e3c43; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 1968, x18)

inst_759:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x71ff810813f2d and fs2 == 1 and fe2 == 0x400 and fm2 == 0x1672eac27ff57 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x92718d32e3c43 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd71ff810813f2d; op2val:0xc001672eac27ff57; op3val:0x7fe92718d32e3c43; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 1984, x18)

inst_760:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x71ff810813f2d and fs2 == 1 and fe2 == 0x400 and fm2 == 0x1672eac27ff57 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x92718d32e3c43 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd71ff810813f2d; op2val:0xc001672eac27ff57; op3val:0x7fe92718d32e3c43; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 2000, x18)

inst_761:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9064ca6314142 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1bf221a3e5a23 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xbc1a1fa02e46b and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9064ca6314142; op2val:0xbff1bf221a3e5a23; op3val:0x7febc1a1fa02e46b; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_7)

inst_762:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9064ca6314142 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1bf221a3e5a23 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xbc1a1fa02e46b and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9064ca6314142; op2val:0xbff1bf221a3e5a23; op3val:0x7febc1a1fa02e46b; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 0, x18)

inst_763:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9064ca6314142 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1bf221a3e5a23 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xbc1a1fa02e46b and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9064ca6314142; op2val:0xbff1bf221a3e5a23; op3val:0x7febc1a1fa02e46b; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 16, x18)

inst_764:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9064ca6314142 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1bf221a3e5a23 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xbc1a1fa02e46b and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9064ca6314142; op2val:0xbff1bf221a3e5a23; op3val:0x7febc1a1fa02e46b; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 32, x18)
addi x16,x16,2040

inst_765:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9064ca6314142 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1bf221a3e5a23 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xbc1a1fa02e46b and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9064ca6314142; op2val:0xbff1bf221a3e5a23; op3val:0x7febc1a1fa02e46b; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 48, x18)

inst_766:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x6d1b5afbd5567 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x870885b5bcec4 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x16d877c1f1617 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb6d1b5afbd5567; op2val:0xc00870885b5bcec4; op3val:0x7fd16d877c1f1617; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 64, x18)

inst_767:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x6d1b5afbd5567 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x870885b5bcec4 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x16d877c1f1617 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb6d1b5afbd5567; op2val:0xc00870885b5bcec4; op3val:0x7fd16d877c1f1617; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 80, x18)

inst_768:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x6d1b5afbd5567 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x870885b5bcec4 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x16d877c1f1617 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb6d1b5afbd5567; op2val:0xc00870885b5bcec4; op3val:0x7fd16d877c1f1617; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 96, x18)

inst_769:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x6d1b5afbd5567 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x870885b5bcec4 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x16d877c1f1617 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb6d1b5afbd5567; op2val:0xc00870885b5bcec4; op3val:0x7fd16d877c1f1617; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 112, x18)

inst_770:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x6d1b5afbd5567 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x870885b5bcec4 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x16d877c1f1617 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb6d1b5afbd5567; op2val:0xc00870885b5bcec4; op3val:0x7fd16d877c1f1617; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 128, x18)

inst_771:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xff4e626f1408f and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x5b1293d297fe2 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x5a9a2d170e2e7 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdff4e626f1408f; op2val:0xbfe5b1293d297fe2; op3val:0x7fd5a9a2d170e2e7; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 144, x18)

inst_772:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xff4e626f1408f and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x5b1293d297fe2 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x5a9a2d170e2e7 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdff4e626f1408f; op2val:0xbfe5b1293d297fe2; op3val:0x7fd5a9a2d170e2e7; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 160, x18)

inst_773:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xff4e626f1408f and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x5b1293d297fe2 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x5a9a2d170e2e7 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdff4e626f1408f; op2val:0xbfe5b1293d297fe2; op3val:0x7fd5a9a2d170e2e7; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 176, x18)

inst_774:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xff4e626f1408f and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x5b1293d297fe2 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x5a9a2d170e2e7 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdff4e626f1408f; op2val:0xbfe5b1293d297fe2; op3val:0x7fd5a9a2d170e2e7; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 192, x18)

inst_775:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xff4e626f1408f and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x5b1293d297fe2 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x5a9a2d170e2e7 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdff4e626f1408f; op2val:0xbfe5b1293d297fe2; op3val:0x7fd5a9a2d170e2e7; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 208, x18)

inst_776:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xeb6cfccb7b3a4 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x4e7209b2b785d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x41018d7bfa2cd and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feeb6cfccb7b3a4; op2val:0xbfe4e7209b2b785d; op3val:0x7fe41018d7bfa2cd; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 224, x18)

inst_777:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xeb6cfccb7b3a4 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x4e7209b2b785d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x41018d7bfa2cd and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feeb6cfccb7b3a4; op2val:0xbfe4e7209b2b785d; op3val:0x7fe41018d7bfa2cd; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 240, x18)

inst_778:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xeb6cfccb7b3a4 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x4e7209b2b785d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x41018d7bfa2cd and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feeb6cfccb7b3a4; op2val:0xbfe4e7209b2b785d; op3val:0x7fe41018d7bfa2cd; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 256, x18)

inst_779:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xeb6cfccb7b3a4 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x4e7209b2b785d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x41018d7bfa2cd and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feeb6cfccb7b3a4; op2val:0xbfe4e7209b2b785d; op3val:0x7fe41018d7bfa2cd; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 272, x18)

inst_780:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xeb6cfccb7b3a4 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x4e7209b2b785d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x41018d7bfa2cd and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feeb6cfccb7b3a4; op2val:0xbfe4e7209b2b785d; op3val:0x7fe41018d7bfa2cd; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 288, x18)

inst_781:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x820c7be939191 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x4f9449495eae2 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xfa0df3e20838d and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd820c7be939191; op2val:0xc004f9449495eae2; op3val:0x7fefa0df3e20838d; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 304, x18)

inst_782:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x820c7be939191 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x4f9449495eae2 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xfa0df3e20838d and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd820c7be939191; op2val:0xc004f9449495eae2; op3val:0x7fefa0df3e20838d; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 320, x18)

inst_783:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x820c7be939191 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x4f9449495eae2 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xfa0df3e20838d and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd820c7be939191; op2val:0xc004f9449495eae2; op3val:0x7fefa0df3e20838d; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 336, x18)

inst_784:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x820c7be939191 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x4f9449495eae2 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xfa0df3e20838d and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd820c7be939191; op2val:0xc004f9449495eae2; op3val:0x7fefa0df3e20838d; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 352, x18)

inst_785:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x820c7be939191 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x4f9449495eae2 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xfa0df3e20838d and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd820c7be939191; op2val:0xc004f9449495eae2; op3val:0x7fefa0df3e20838d; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 368, x18)

inst_786:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x9d7af8f37029d and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x7389598bd5d38 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x2c0b871cd0c13 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd9d7af8f37029d; op2val:0xbfd7389598bd5d38; op3val:0x7fc2c0b871cd0c13; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 384, x18)

inst_787:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x9d7af8f37029d and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x7389598bd5d38 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x2c0b871cd0c13 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd9d7af8f37029d; op2val:0xbfd7389598bd5d38; op3val:0x7fc2c0b871cd0c13; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 400, x18)

inst_788:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x9d7af8f37029d and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x7389598bd5d38 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x2c0b871cd0c13 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd9d7af8f37029d; op2val:0xbfd7389598bd5d38; op3val:0x7fc2c0b871cd0c13; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 416, x18)

inst_789:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x9d7af8f37029d and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x7389598bd5d38 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x2c0b871cd0c13 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd9d7af8f37029d; op2val:0xbfd7389598bd5d38; op3val:0x7fc2c0b871cd0c13; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 432, x18)

inst_790:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x9d7af8f37029d and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x7389598bd5d38 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x2c0b871cd0c13 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd9d7af8f37029d; op2val:0xbfd7389598bd5d38; op3val:0x7fc2c0b871cd0c13; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 448, x18)

inst_791:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xea8a1aa313989 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x370b6ca44c088 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x2a01d53c2b9bb and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdea8a1aa313989; op2val:0xbfe370b6ca44c088; op3val:0x7fd2a01d53c2b9bb; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 464, x18)

inst_792:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xea8a1aa313989 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x370b6ca44c088 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x2a01d53c2b9bb and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdea8a1aa313989; op2val:0xbfe370b6ca44c088; op3val:0x7fd2a01d53c2b9bb; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 480, x18)

inst_793:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xea8a1aa313989 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x370b6ca44c088 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x2a01d53c2b9bb and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdea8a1aa313989; op2val:0xbfe370b6ca44c088; op3val:0x7fd2a01d53c2b9bb; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 496, x18)

inst_794:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xea8a1aa313989 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x370b6ca44c088 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x2a01d53c2b9bb and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdea8a1aa313989; op2val:0xbfe370b6ca44c088; op3val:0x7fd2a01d53c2b9bb; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 512, x18)

inst_795:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xea8a1aa313989 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x370b6ca44c088 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x2a01d53c2b9bb and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdea8a1aa313989; op2val:0xbfe370b6ca44c088; op3val:0x7fd2a01d53c2b9bb; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 528, x18)

inst_796:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xf3dff3d82be09 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x7e9106e33fa27 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x7581ae94553bc and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdf3dff3d82be09; op2val:0xbff7e9106e33fa27; op3val:0x7fe7581ae94553bc; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 544, x18)

inst_797:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xf3dff3d82be09 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x7e9106e33fa27 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x7581ae94553bc and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdf3dff3d82be09; op2val:0xbff7e9106e33fa27; op3val:0x7fe7581ae94553bc; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 560, x18)

inst_798:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xf3dff3d82be09 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x7e9106e33fa27 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x7581ae94553bc and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdf3dff3d82be09; op2val:0xbff7e9106e33fa27; op3val:0x7fe7581ae94553bc; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 576, x18)

inst_799:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xf3dff3d82be09 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x7e9106e33fa27 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x7581ae94553bc and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdf3dff3d82be09; op2val:0xbff7e9106e33fa27; op3val:0x7fe7581ae94553bc; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 592, x18)

inst_800:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xf3dff3d82be09 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x7e9106e33fa27 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x7581ae94553bc and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdf3dff3d82be09; op2val:0xbff7e9106e33fa27; op3val:0x7fe7581ae94553bc; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 608, x18)

inst_801:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf3b743a16ba1c and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xdbd76f744d1ce and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xd06cc97ae5955 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef3b743a16ba1c; op2val:0xbfddbd76f744d1ce; op3val:0x7fdd06cc97ae5955; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 624, x18)

inst_802:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf3b743a16ba1c and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xdbd76f744d1ce and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xd06cc97ae5955 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef3b743a16ba1c; op2val:0xbfddbd76f744d1ce; op3val:0x7fdd06cc97ae5955; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 640, x18)

inst_803:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf3b743a16ba1c and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xdbd76f744d1ce and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xd06cc97ae5955 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef3b743a16ba1c; op2val:0xbfddbd76f744d1ce; op3val:0x7fdd06cc97ae5955; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 656, x18)

inst_804:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf3b743a16ba1c and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xdbd76f744d1ce and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xd06cc97ae5955 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef3b743a16ba1c; op2val:0xbfddbd76f744d1ce; op3val:0x7fdd06cc97ae5955; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 672, x18)

inst_805:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf3b743a16ba1c and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xdbd76f744d1ce and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xd06cc97ae5955 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef3b743a16ba1c; op2val:0xbfddbd76f744d1ce; op3val:0x7fdd06cc97ae5955; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 688, x18)

inst_806:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xffa43e27b4aa7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xb4a8b79988117 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xb45a764ad5a54 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feffa43e27b4aa7; op2val:0xbfeb4a8b79988117; op3val:0x7feb45a764ad5a54; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 704, x18)

inst_807:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xffa43e27b4aa7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xb4a8b79988117 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xb45a764ad5a54 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feffa43e27b4aa7; op2val:0xbfeb4a8b79988117; op3val:0x7feb45a764ad5a54; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 720, x18)

inst_808:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xffa43e27b4aa7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xb4a8b79988117 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xb45a764ad5a54 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feffa43e27b4aa7; op2val:0xbfeb4a8b79988117; op3val:0x7feb45a764ad5a54; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 736, x18)

inst_809:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xffa43e27b4aa7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xb4a8b79988117 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xb45a764ad5a54 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feffa43e27b4aa7; op2val:0xbfeb4a8b79988117; op3val:0x7feb45a764ad5a54; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 752, x18)

inst_810:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xffa43e27b4aa7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xb4a8b79988117 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xb45a764ad5a54 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7feffa43e27b4aa7; op2val:0xbfeb4a8b79988117; op3val:0x7feb45a764ad5a54; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 768, x18)

inst_811:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x2de3709212eb9 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x897eeee2580a5 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xd007d77604347 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd2de3709212eb9; op2val:0xbff897eeee2580a5; op3val:0x7fdd007d77604347; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 784, x18)

inst_812:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x2de3709212eb9 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x897eeee2580a5 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xd007d77604347 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd2de3709212eb9; op2val:0xbff897eeee2580a5; op3val:0x7fdd007d77604347; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 800, x18)

inst_813:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x2de3709212eb9 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x897eeee2580a5 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xd007d77604347 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd2de3709212eb9; op2val:0xbff897eeee2580a5; op3val:0x7fdd007d77604347; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 816, x18)

inst_814:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x2de3709212eb9 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x897eeee2580a5 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xd007d77604347 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd2de3709212eb9; op2val:0xbff897eeee2580a5; op3val:0x7fdd007d77604347; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 832, x18)

inst_815:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x2de3709212eb9 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x897eeee2580a5 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xd007d77604347 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd2de3709212eb9; op2val:0xbff897eeee2580a5; op3val:0x7fdd007d77604347; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 848, x18)

inst_816:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x31a78b0f0b973 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x6a3e0418950a1 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xb080f61aebdc6 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc31a78b0f0b973; op2val:0xc016a3e0418950a1; op3val:0x7feb080f61aebdc6; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 864, x18)

inst_817:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x31a78b0f0b973 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x6a3e0418950a1 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xb080f61aebdc6 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc31a78b0f0b973; op2val:0xc016a3e0418950a1; op3val:0x7feb080f61aebdc6; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 880, x18)

inst_818:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x31a78b0f0b973 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x6a3e0418950a1 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xb080f61aebdc6 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc31a78b0f0b973; op2val:0xc016a3e0418950a1; op3val:0x7feb080f61aebdc6; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 896, x18)

inst_819:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x31a78b0f0b973 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x6a3e0418950a1 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xb080f61aebdc6 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc31a78b0f0b973; op2val:0xc016a3e0418950a1; op3val:0x7feb080f61aebdc6; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 912, x18)

inst_820:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x31a78b0f0b973 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x6a3e0418950a1 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xb080f61aebdc6 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc31a78b0f0b973; op2val:0xc016a3e0418950a1; op3val:0x7feb080f61aebdc6; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 928, x18)

inst_821:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xb4c24c566faff and fs2 == 1 and fe2 == 0x401 and fm2 == 0x04d23f761e4e2 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xbcfc092fbe62d and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbb4c24c566faff; op2val:0xc0104d23f761e4e2; op3val:0x7fdbcfc092fbe62d; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 944, x18)

inst_822:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xb4c24c566faff and fs2 == 1 and fe2 == 0x401 and fm2 == 0x04d23f761e4e2 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xbcfc092fbe62d and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbb4c24c566faff; op2val:0xc0104d23f761e4e2; op3val:0x7fdbcfc092fbe62d; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 960, x18)

inst_823:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xb4c24c566faff and fs2 == 1 and fe2 == 0x401 and fm2 == 0x04d23f761e4e2 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xbcfc092fbe62d and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbb4c24c566faff; op2val:0xc0104d23f761e4e2; op3val:0x7fdbcfc092fbe62d; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 976, x18)

inst_824:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xb4c24c566faff and fs2 == 1 and fe2 == 0x401 and fm2 == 0x04d23f761e4e2 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xbcfc092fbe62d and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbb4c24c566faff; op2val:0xc0104d23f761e4e2; op3val:0x7fdbcfc092fbe62d; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 992, x18)

inst_825:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xb4c24c566faff and fs2 == 1 and fe2 == 0x401 and fm2 == 0x04d23f761e4e2 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xbcfc092fbe62d and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbb4c24c566faff; op2val:0xc0104d23f761e4e2; op3val:0x7fdbcfc092fbe62d; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 1008, x18)

inst_826:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x42c3b2396030c and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x400115a8f3f08 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x9375fcda7c10f and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe42c3b2396030c; op2val:0xbff400115a8f3f08; op3val:0x7fe9375fcda7c10f; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 1024, x18)

inst_827:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x42c3b2396030c and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x400115a8f3f08 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x9375fcda7c10f and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe42c3b2396030c; op2val:0xbff400115a8f3f08; op3val:0x7fe9375fcda7c10f; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 1040, x18)

inst_828:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x42c3b2396030c and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x400115a8f3f08 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x9375fcda7c10f and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe42c3b2396030c; op2val:0xbff400115a8f3f08; op3val:0x7fe9375fcda7c10f; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 1056, x18)

inst_829:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x42c3b2396030c and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x400115a8f3f08 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x9375fcda7c10f and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe42c3b2396030c; op2val:0xbff400115a8f3f08; op3val:0x7fe9375fcda7c10f; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 1072, x18)

inst_830:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x42c3b2396030c and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x400115a8f3f08 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x9375fcda7c10f and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe42c3b2396030c; op2val:0xbff400115a8f3f08; op3val:0x7fe9375fcda7c10f; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1088, x18)

inst_831:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x769cb824195b1 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x4c5284c35ebf9 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe64bff487f6af and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe769cb824195b1; op2val:0xbff4c5284c35ebf9; op3val:0x7fee64bff487f6af; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 1104, x18)

inst_832:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x769cb824195b1 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x4c5284c35ebf9 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe64bff487f6af and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe769cb824195b1; op2val:0xbff4c5284c35ebf9; op3val:0x7fee64bff487f6af; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 1120, x18)

inst_833:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x769cb824195b1 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x4c5284c35ebf9 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe64bff487f6af and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe769cb824195b1; op2val:0xbff4c5284c35ebf9; op3val:0x7fee64bff487f6af; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 1136, x18)

inst_834:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x769cb824195b1 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x4c5284c35ebf9 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe64bff487f6af and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe769cb824195b1; op2val:0xbff4c5284c35ebf9; op3val:0x7fee64bff487f6af; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 1152, x18)

inst_835:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x769cb824195b1 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x4c5284c35ebf9 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe64bff487f6af and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe769cb824195b1; op2val:0xbff4c5284c35ebf9; op3val:0x7fee64bff487f6af; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1168, x18)

inst_836:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xad469a4d40781 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x3ef164ade94e5 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x0b693dfb3681f and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fead469a4d40781; op2val:0xbfc3ef164ade94e5; op3val:0x7fc0b693dfb3681f; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 1184, x18)

inst_837:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xad469a4d40781 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x3ef164ade94e5 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x0b693dfb3681f and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fead469a4d40781; op2val:0xbfc3ef164ade94e5; op3val:0x7fc0b693dfb3681f; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 1200, x18)

inst_838:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xad469a4d40781 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x3ef164ade94e5 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x0b693dfb3681f and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fead469a4d40781; op2val:0xbfc3ef164ade94e5; op3val:0x7fc0b693dfb3681f; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 1216, x18)

inst_839:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xad469a4d40781 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x3ef164ade94e5 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x0b693dfb3681f and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fead469a4d40781; op2val:0xbfc3ef164ade94e5; op3val:0x7fc0b693dfb3681f; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 1232, x18)

inst_840:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xad469a4d40781 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x3ef164ade94e5 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x0b693dfb3681f and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fead469a4d40781; op2val:0xbfc3ef164ade94e5; op3val:0x7fc0b693dfb3681f; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1248, x18)

inst_841:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x0c0d5f34e784f and fs2 == 1 and fe2 == 0x402 and fm2 == 0xe2af74c5b771a and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xf968e4aac6955 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fa0c0d5f34e784f; op2val:0xc02e2af74c5b771a; op3val:0x7fdf968e4aac6955; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 1264, x18)

inst_842:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x0c0d5f34e784f and fs2 == 1 and fe2 == 0x402 and fm2 == 0xe2af74c5b771a and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xf968e4aac6955 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fa0c0d5f34e784f; op2val:0xc02e2af74c5b771a; op3val:0x7fdf968e4aac6955; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 1280, x18)

inst_843:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x0c0d5f34e784f and fs2 == 1 and fe2 == 0x402 and fm2 == 0xe2af74c5b771a and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xf968e4aac6955 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fa0c0d5f34e784f; op2val:0xc02e2af74c5b771a; op3val:0x7fdf968e4aac6955; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 1296, x18)

inst_844:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x0c0d5f34e784f and fs2 == 1 and fe2 == 0x402 and fm2 == 0xe2af74c5b771a and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xf968e4aac6955 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fa0c0d5f34e784f; op2val:0xc02e2af74c5b771a; op3val:0x7fdf968e4aac6955; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 1312, x18)

inst_845:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x0c0d5f34e784f and fs2 == 1 and fe2 == 0x402 and fm2 == 0xe2af74c5b771a and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xf968e4aac6955 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fa0c0d5f34e784f; op2val:0xc02e2af74c5b771a; op3val:0x7fdf968e4aac6955; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1328, x18)

inst_846:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0xc85a87ea8c3df and fs2 == 1 and fe2 == 0x403 and fm2 == 0x071c1175cfa80 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd5070aa8da4e6 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fac85a87ea8c3df; op2val:0xc03071c1175cfa80; op3val:0x7fed5070aa8da4e6; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 1344, x18)

inst_847:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0xc85a87ea8c3df and fs2 == 1 and fe2 == 0x403 and fm2 == 0x071c1175cfa80 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd5070aa8da4e6 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fac85a87ea8c3df; op2val:0xc03071c1175cfa80; op3val:0x7fed5070aa8da4e6; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 1360, x18)

inst_848:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0xc85a87ea8c3df and fs2 == 1 and fe2 == 0x403 and fm2 == 0x071c1175cfa80 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd5070aa8da4e6 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fac85a87ea8c3df; op2val:0xc03071c1175cfa80; op3val:0x7fed5070aa8da4e6; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 1376, x18)

inst_849:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0xc85a87ea8c3df and fs2 == 1 and fe2 == 0x403 and fm2 == 0x071c1175cfa80 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd5070aa8da4e6 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fac85a87ea8c3df; op2val:0xc03071c1175cfa80; op3val:0x7fed5070aa8da4e6; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 1392, x18)
addi x16,x16,2040

inst_850:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0xc85a87ea8c3df and fs2 == 1 and fe2 == 0x403 and fm2 == 0x071c1175cfa80 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd5070aa8da4e6 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fac85a87ea8c3df; op2val:0xc03071c1175cfa80; op3val:0x7fed5070aa8da4e6; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 1408, x18)

inst_851:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xd299df5352de3 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd9e66baf38c0b and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xafe12412a3f8b and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdd299df5352de3; op2val:0xbfed9e66baf38c0b; op3val:0x7fdafe12412a3f8b; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 1424, x18)

inst_852:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xd299df5352de3 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd9e66baf38c0b and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xafe12412a3f8b and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdd299df5352de3; op2val:0xbfed9e66baf38c0b; op3val:0x7fdafe12412a3f8b; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 1440, x18)

inst_853:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xd299df5352de3 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd9e66baf38c0b and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xafe12412a3f8b and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdd299df5352de3; op2val:0xbfed9e66baf38c0b; op3val:0x7fdafe12412a3f8b; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 1456, x18)

inst_854:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xd299df5352de3 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd9e66baf38c0b and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xafe12412a3f8b and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdd299df5352de3; op2val:0xbfed9e66baf38c0b; op3val:0x7fdafe12412a3f8b; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 1472, x18)

inst_855:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xd299df5352de3 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd9e66baf38c0b and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xafe12412a3f8b and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fdd299df5352de3; op2val:0xbfed9e66baf38c0b; op3val:0x7fdafe12412a3f8b; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 1488, x18)

inst_856:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x301b8dd6015ba and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x642342f8435b6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa7103490036bf and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe301b8dd6015ba; op2val:0xbff642342f8435b6; op3val:0x7fea7103490036bf; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 1504, x18)

inst_857:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x301b8dd6015ba and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x642342f8435b6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa7103490036bf and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe301b8dd6015ba; op2val:0xbff642342f8435b6; op3val:0x7fea7103490036bf; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 1520, x18)

inst_858:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x301b8dd6015ba and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x642342f8435b6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa7103490036bf and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe301b8dd6015ba; op2val:0xbff642342f8435b6; op3val:0x7fea7103490036bf; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 1536, x18)

inst_859:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x301b8dd6015ba and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x642342f8435b6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa7103490036bf and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe301b8dd6015ba; op2val:0xbff642342f8435b6; op3val:0x7fea7103490036bf; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 1552, x18)

inst_860:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x301b8dd6015ba and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x642342f8435b6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa7103490036bf and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe301b8dd6015ba; op2val:0xbff642342f8435b6; op3val:0x7fea7103490036bf; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 1568, x18)

inst_861:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x9fa11c0412e3d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x2b6247a905d89 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xe610bbbd953db and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd9fa11c0412e3d; op2val:0xbfe2b6247a905d89; op3val:0x7fce610bbbd953db; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 1584, x18)

inst_862:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x9fa11c0412e3d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x2b6247a905d89 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xe610bbbd953db and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd9fa11c0412e3d; op2val:0xbfe2b6247a905d89; op3val:0x7fce610bbbd953db; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 1600, x18)

inst_863:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x9fa11c0412e3d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x2b6247a905d89 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xe610bbbd953db and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd9fa11c0412e3d; op2val:0xbfe2b6247a905d89; op3val:0x7fce610bbbd953db; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 1616, x18)

inst_864:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x9fa11c0412e3d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x2b6247a905d89 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xe610bbbd953db and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd9fa11c0412e3d; op2val:0xbfe2b6247a905d89; op3val:0x7fce610bbbd953db; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 1632, x18)

inst_865:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x9fa11c0412e3d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x2b6247a905d89 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xe610bbbd953db and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd9fa11c0412e3d; op2val:0xbfe2b6247a905d89; op3val:0x7fce610bbbd953db; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 1648, x18)

inst_866:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf930a02671095 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x14d99faa2cdd7 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x112af0fb1c5fb and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef930a02671095; op2val:0xbfe14d99faa2cdd7; op3val:0x7fe112af0fb1c5fb; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 1664, x18)

inst_867:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf930a02671095 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x14d99faa2cdd7 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x112af0fb1c5fb and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef930a02671095; op2val:0xbfe14d99faa2cdd7; op3val:0x7fe112af0fb1c5fb; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 1680, x18)

inst_868:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf930a02671095 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x14d99faa2cdd7 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x112af0fb1c5fb and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef930a02671095; op2val:0xbfe14d99faa2cdd7; op3val:0x7fe112af0fb1c5fb; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 1696, x18)

inst_869:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf930a02671095 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x14d99faa2cdd7 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x112af0fb1c5fb and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef930a02671095; op2val:0xbfe14d99faa2cdd7; op3val:0x7fe112af0fb1c5fb; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 1712, x18)

inst_870:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf930a02671095 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x14d99faa2cdd7 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x112af0fb1c5fb and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef930a02671095; op2val:0xbfe14d99faa2cdd7; op3val:0x7fe112af0fb1c5fb; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1728, x18)

inst_871:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x4acff5b85a5cb and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x33caa795905c4 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x8dbd4452e6b5f and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc4acff5b85a5cb; op2val:0xbfd33caa795905c4; op3val:0x7fa8dbd4452e6b5f; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 1744, x18)

inst_872:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x4acff5b85a5cb and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x33caa795905c4 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x8dbd4452e6b5f and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc4acff5b85a5cb; op2val:0xbfd33caa795905c4; op3val:0x7fa8dbd4452e6b5f; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 1760, x18)

inst_873:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x4acff5b85a5cb and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x33caa795905c4 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x8dbd4452e6b5f and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc4acff5b85a5cb; op2val:0xbfd33caa795905c4; op3val:0x7fa8dbd4452e6b5f; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 1776, x18)

inst_874:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x4acff5b85a5cb and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x33caa795905c4 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x8dbd4452e6b5f and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc4acff5b85a5cb; op2val:0xbfd33caa795905c4; op3val:0x7fa8dbd4452e6b5f; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 1792, x18)

inst_875:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x4acff5b85a5cb and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x33caa795905c4 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x8dbd4452e6b5f and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc4acff5b85a5cb; op2val:0xbfd33caa795905c4; op3val:0x7fa8dbd4452e6b5f; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1808, x18)

inst_876:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x60db7dd3cba12 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x723e350962bf4 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xfe52fa1ef67a1 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe60db7dd3cba12; op2val:0xbff723e350962bf4; op3val:0x7fefe52fa1ef67a1; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 1824, x18)

inst_877:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x60db7dd3cba12 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x723e350962bf4 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xfe52fa1ef67a1 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe60db7dd3cba12; op2val:0xbff723e350962bf4; op3val:0x7fefe52fa1ef67a1; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 1840, x18)

inst_878:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x60db7dd3cba12 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x723e350962bf4 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xfe52fa1ef67a1 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe60db7dd3cba12; op2val:0xbff723e350962bf4; op3val:0x7fefe52fa1ef67a1; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 1856, x18)

inst_879:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x60db7dd3cba12 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x723e350962bf4 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xfe52fa1ef67a1 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe60db7dd3cba12; op2val:0xbff723e350962bf4; op3val:0x7fefe52fa1ef67a1; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 1872, x18)

inst_880:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x60db7dd3cba12 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x723e350962bf4 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xfe52fa1ef67a1 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe60db7dd3cba12; op2val:0xbff723e350962bf4; op3val:0x7fefe52fa1ef67a1; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1888, x18)

inst_881:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x404ab140ecaf7 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xe75dcf1983ff7 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x30e1bab89c4e3 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb404ab140ecaf7; op2val:0xbffe75dcf1983ff7; op3val:0x7fc30e1bab89c4e3; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 1904, x18)

inst_882:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x404ab140ecaf7 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xe75dcf1983ff7 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x30e1bab89c4e3 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb404ab140ecaf7; op2val:0xbffe75dcf1983ff7; op3val:0x7fc30e1bab89c4e3; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 1920, x18)

inst_883:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x404ab140ecaf7 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xe75dcf1983ff7 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x30e1bab89c4e3 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb404ab140ecaf7; op2val:0xbffe75dcf1983ff7; op3val:0x7fc30e1bab89c4e3; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 1936, x18)

inst_884:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x404ab140ecaf7 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xe75dcf1983ff7 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x30e1bab89c4e3 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb404ab140ecaf7; op2val:0xbffe75dcf1983ff7; op3val:0x7fc30e1bab89c4e3; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 1952, x18)

inst_885:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x404ab140ecaf7 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xe75dcf1983ff7 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x30e1bab89c4e3 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb404ab140ecaf7; op2val:0xbffe75dcf1983ff7; op3val:0x7fc30e1bab89c4e3; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1968, x18)

inst_886:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x44673727309cf and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x1ed5312aa8e46 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x6b7977cc7c6d7 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd44673727309cf; op2val:0xbfe1ed5312aa8e46; op3val:0x7fc6b7977cc7c6d7; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 1984, x18)

inst_887:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x44673727309cf and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x1ed5312aa8e46 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x6b7977cc7c6d7 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd44673727309cf; op2val:0xbfe1ed5312aa8e46; op3val:0x7fc6b7977cc7c6d7; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 2000, x18)

inst_888:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x44673727309cf and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x1ed5312aa8e46 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x6b7977cc7c6d7 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd44673727309cf; op2val:0xbfe1ed5312aa8e46; op3val:0x7fc6b7977cc7c6d7; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_8)

inst_889:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x44673727309cf and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x1ed5312aa8e46 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x6b7977cc7c6d7 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd44673727309cf; op2val:0xbfe1ed5312aa8e46; op3val:0x7fc6b7977cc7c6d7; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 0, x18)

inst_890:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x44673727309cf and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x1ed5312aa8e46 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x6b7977cc7c6d7 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd44673727309cf; op2val:0xbfe1ed5312aa8e46; op3val:0x7fc6b7977cc7c6d7; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 16, x18)

inst_891:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x171d1e85e4878 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x25742c389cbb5 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x3ff2fd57cdba5 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe171d1e85e4878; op2val:0xbfe25742c389cbb5; op3val:0x7fd3ff2fd57cdba5; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 32, x18)

inst_892:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x171d1e85e4878 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x25742c389cbb5 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x3ff2fd57cdba5 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe171d1e85e4878; op2val:0xbfe25742c389cbb5; op3val:0x7fd3ff2fd57cdba5; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 48, x18)

inst_893:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x171d1e85e4878 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x25742c389cbb5 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x3ff2fd57cdba5 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe171d1e85e4878; op2val:0xbfe25742c389cbb5; op3val:0x7fd3ff2fd57cdba5; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 64, x18)

inst_894:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x171d1e85e4878 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x25742c389cbb5 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x3ff2fd57cdba5 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe171d1e85e4878; op2val:0xbfe25742c389cbb5; op3val:0x7fd3ff2fd57cdba5; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 80, x18)

inst_895:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x171d1e85e4878 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x25742c389cbb5 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x3ff2fd57cdba5 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe171d1e85e4878; op2val:0xbfe25742c389cbb5; op3val:0x7fd3ff2fd57cdba5; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 96, x18)

inst_896:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x5c1e59a3495cf and fs2 == 1 and fe2 == 0x400 and fm2 == 0x5bf982469fe46 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd9306e2cf7822 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd5c1e59a3495cf; op2val:0xc005bf982469fe46; op3val:0x7fed9306e2cf7822; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 112, x18)

inst_897:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x5c1e59a3495cf and fs2 == 1 and fe2 == 0x400 and fm2 == 0x5bf982469fe46 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd9306e2cf7822 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd5c1e59a3495cf; op2val:0xc005bf982469fe46; op3val:0x7fed9306e2cf7822; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 128, x18)

inst_898:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x5c1e59a3495cf and fs2 == 1 and fe2 == 0x400 and fm2 == 0x5bf982469fe46 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd9306e2cf7822 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd5c1e59a3495cf; op2val:0xc005bf982469fe46; op3val:0x7fed9306e2cf7822; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 144, x18)

inst_899:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x5c1e59a3495cf and fs2 == 1 and fe2 == 0x400 and fm2 == 0x5bf982469fe46 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd9306e2cf7822 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd5c1e59a3495cf; op2val:0xc005bf982469fe46; op3val:0x7fed9306e2cf7822; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 160, x18)

inst_900:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x5c1e59a3495cf and fs2 == 1 and fe2 == 0x400 and fm2 == 0x5bf982469fe46 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd9306e2cf7822 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd5c1e59a3495cf; op2val:0xc005bf982469fe46; op3val:0x7fed9306e2cf7822; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 176, x18)

inst_901:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x38be631735417 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x80c60b94db466 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd60f86097c097 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe38be631735417; op2val:0xbff80c60b94db466; op3val:0x7fed60f86097c097; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 192, x18)

inst_902:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x38be631735417 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x80c60b94db466 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd60f86097c097 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe38be631735417; op2val:0xbff80c60b94db466; op3val:0x7fed60f86097c097; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 208, x18)

inst_903:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x38be631735417 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x80c60b94db466 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd60f86097c097 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe38be631735417; op2val:0xbff80c60b94db466; op3val:0x7fed60f86097c097; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 224, x18)

inst_904:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x38be631735417 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x80c60b94db466 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd60f86097c097 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe38be631735417; op2val:0xbff80c60b94db466; op3val:0x7fed60f86097c097; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 240, x18)

inst_905:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x38be631735417 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x80c60b94db466 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd60f86097c097 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe38be631735417; op2val:0xbff80c60b94db466; op3val:0x7fed60f86097c097; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 256, x18)

inst_906:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x7579046abe557 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xde56835772cb5 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x5ceb1641a60d9 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb7579046abe557; op2val:0xc00de56835772cb5; op3val:0x7fd5ceb1641a60d9; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 272, x18)

inst_907:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x7579046abe557 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xde56835772cb5 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x5ceb1641a60d9 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb7579046abe557; op2val:0xc00de56835772cb5; op3val:0x7fd5ceb1641a60d9; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 288, x18)

inst_908:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x7579046abe557 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xde56835772cb5 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x5ceb1641a60d9 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb7579046abe557; op2val:0xc00de56835772cb5; op3val:0x7fd5ceb1641a60d9; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 304, x18)

inst_909:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x7579046abe557 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xde56835772cb5 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x5ceb1641a60d9 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb7579046abe557; op2val:0xc00de56835772cb5; op3val:0x7fd5ceb1641a60d9; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 320, x18)

inst_910:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x7579046abe557 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xde56835772cb5 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x5ceb1641a60d9 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fb7579046abe557; op2val:0xc00de56835772cb5; op3val:0x7fd5ceb1641a60d9; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 336, x18)

inst_911:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x2c15fdbb5e3cf and fs2 == 1 and fe2 == 0x403 and fm2 == 0x9d1bad7655f2a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe43febfe9d259 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fa2c15fdbb5e3cf; op2val:0xc039d1bad7655f2a; op3val:0x7fee43febfe9d259; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 352, x18)

inst_912:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x2c15fdbb5e3cf and fs2 == 1 and fe2 == 0x403 and fm2 == 0x9d1bad7655f2a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe43febfe9d259 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fa2c15fdbb5e3cf; op2val:0xc039d1bad7655f2a; op3val:0x7fee43febfe9d259; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 368, x18)

inst_913:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x2c15fdbb5e3cf and fs2 == 1 and fe2 == 0x403 and fm2 == 0x9d1bad7655f2a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe43febfe9d259 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fa2c15fdbb5e3cf; op2val:0xc039d1bad7655f2a; op3val:0x7fee43febfe9d259; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 384, x18)

inst_914:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x2c15fdbb5e3cf and fs2 == 1 and fe2 == 0x403 and fm2 == 0x9d1bad7655f2a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe43febfe9d259 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fa2c15fdbb5e3cf; op2val:0xc039d1bad7655f2a; op3val:0x7fee43febfe9d259; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 400, x18)

inst_915:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x2c15fdbb5e3cf and fs2 == 1 and fe2 == 0x403 and fm2 == 0x9d1bad7655f2a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe43febfe9d259 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fa2c15fdbb5e3cf; op2val:0xc039d1bad7655f2a; op3val:0x7fee43febfe9d259; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 416, x18)

inst_916:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x982e185781cc1 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x140f26a707f49 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xb829da92ef6eb and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe982e185781cc1; op2val:0xbff140f26a707f49; op3val:0x7feb829da92ef6eb; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 432, x18)

inst_917:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x982e185781cc1 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x140f26a707f49 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xb829da92ef6eb and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe982e185781cc1; op2val:0xbff140f26a707f49; op3val:0x7feb829da92ef6eb; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 448, x18)

inst_918:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x982e185781cc1 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x140f26a707f49 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xb829da92ef6eb and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe982e185781cc1; op2val:0xbff140f26a707f49; op3val:0x7feb829da92ef6eb; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 464, x18)

inst_919:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x982e185781cc1 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x140f26a707f49 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xb829da92ef6eb and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe982e185781cc1; op2val:0xbff140f26a707f49; op3val:0x7feb829da92ef6eb; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 480, x18)

inst_920:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x982e185781cc1 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x140f26a707f49 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xb829da92ef6eb and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe982e185781cc1; op2val:0xbff140f26a707f49; op3val:0x7feb829da92ef6eb; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 496, x18)

inst_921:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xba95a52df5767 and fs2 == 1 and fe2 == 0x401 and fm2 == 0xbb4734aa2ffab and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x7f2e07b1fbb17 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbba95a52df5767; op2val:0xc01bb4734aa2ffab; op3val:0x7fe7f2e07b1fbb17; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 512, x18)

inst_922:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xba95a52df5767 and fs2 == 1 and fe2 == 0x401 and fm2 == 0xbb4734aa2ffab and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x7f2e07b1fbb17 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbba95a52df5767; op2val:0xc01bb4734aa2ffab; op3val:0x7fe7f2e07b1fbb17; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 528, x18)

inst_923:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xba95a52df5767 and fs2 == 1 and fe2 == 0x401 and fm2 == 0xbb4734aa2ffab and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x7f2e07b1fbb17 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbba95a52df5767; op2val:0xc01bb4734aa2ffab; op3val:0x7fe7f2e07b1fbb17; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 544, x18)

inst_924:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xba95a52df5767 and fs2 == 1 and fe2 == 0x401 and fm2 == 0xbb4734aa2ffab and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x7f2e07b1fbb17 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbba95a52df5767; op2val:0xc01bb4734aa2ffab; op3val:0x7fe7f2e07b1fbb17; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 560, x18)

inst_925:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xba95a52df5767 and fs2 == 1 and fe2 == 0x401 and fm2 == 0xbb4734aa2ffab and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x7f2e07b1fbb17 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fbba95a52df5767; op2val:0xc01bb4734aa2ffab; op3val:0x7fe7f2e07b1fbb17; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 576, x18)

inst_926:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0ca5b7900ea57 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x7a69ea0a9f7a6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8d1bd69d9f548 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0ca5b7900ea57; op2val:0xbff7a69ea0a9f7a6; op3val:0x7fe8d1bd69d9f548; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 592, x18)

inst_927:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0ca5b7900ea57 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x7a69ea0a9f7a6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8d1bd69d9f548 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0ca5b7900ea57; op2val:0xbff7a69ea0a9f7a6; op3val:0x7fe8d1bd69d9f548; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 608, x18)

inst_928:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0ca5b7900ea57 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x7a69ea0a9f7a6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8d1bd69d9f548 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0ca5b7900ea57; op2val:0xbff7a69ea0a9f7a6; op3val:0x7fe8d1bd69d9f548; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 624, x18)

inst_929:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0ca5b7900ea57 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x7a69ea0a9f7a6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8d1bd69d9f548 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0ca5b7900ea57; op2val:0xbff7a69ea0a9f7a6; op3val:0x7fe8d1bd69d9f548; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 640, x18)

inst_930:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0ca5b7900ea57 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x7a69ea0a9f7a6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8d1bd69d9f548 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe0ca5b7900ea57; op2val:0xbff7a69ea0a9f7a6; op3val:0x7fe8d1bd69d9f548; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 656, x18)

inst_931:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x60a5a04199781 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x07bd4acb086bc and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x6b4ee8f2445b5 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd60a5a04199781; op2val:0xbff07bd4acb086bc; op3val:0x7fd6b4ee8f2445b5; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 672, x18)

inst_932:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x60a5a04199781 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x07bd4acb086bc and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x6b4ee8f2445b5 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd60a5a04199781; op2val:0xbff07bd4acb086bc; op3val:0x7fd6b4ee8f2445b5; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 688, x18)

inst_933:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x60a5a04199781 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x07bd4acb086bc and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x6b4ee8f2445b5 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd60a5a04199781; op2val:0xbff07bd4acb086bc; op3val:0x7fd6b4ee8f2445b5; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 704, x18)

inst_934:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x60a5a04199781 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x07bd4acb086bc and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x6b4ee8f2445b5 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd60a5a04199781; op2val:0xbff07bd4acb086bc; op3val:0x7fd6b4ee8f2445b5; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 720, x18)
addi x16,x16,2040

inst_935:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x60a5a04199781 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x07bd4acb086bc and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x6b4ee8f2445b5 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd60a5a04199781; op2val:0xbff07bd4acb086bc; op3val:0x7fd6b4ee8f2445b5; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 736, x18)

inst_936:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xdbfbc83472936 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x036953caa3e91 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe253919d94c5b and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fedbfbc83472936; op2val:0xbff036953caa3e91; op3val:0x7fee253919d94c5b; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 752, x18)

inst_937:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xdbfbc83472936 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x036953caa3e91 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe253919d94c5b and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fedbfbc83472936; op2val:0xbff036953caa3e91; op3val:0x7fee253919d94c5b; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 768, x18)

inst_938:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xdbfbc83472936 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x036953caa3e91 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe253919d94c5b and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fedbfbc83472936; op2val:0xbff036953caa3e91; op3val:0x7fee253919d94c5b; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 784, x18)

inst_939:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xdbfbc83472936 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x036953caa3e91 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe253919d94c5b and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fedbfbc83472936; op2val:0xbff036953caa3e91; op3val:0x7fee253919d94c5b; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 800, x18)

inst_940:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xdbfbc83472936 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x036953caa3e91 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe253919d94c5b and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fedbfbc83472936; op2val:0xbff036953caa3e91; op3val:0x7fee253919d94c5b; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 816, x18)

inst_941:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x9279f41e78217 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xec3b664f905e6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x82efe20fbfe2b and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc9279f41e78217; op2val:0xc00ec3b664f905e6; op3val:0x7fe82efe20fbfe2b; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 832, x18)

inst_942:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x9279f41e78217 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xec3b664f905e6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x82efe20fbfe2b and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc9279f41e78217; op2val:0xc00ec3b664f905e6; op3val:0x7fe82efe20fbfe2b; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 848, x18)

inst_943:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x9279f41e78217 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xec3b664f905e6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x82efe20fbfe2b and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc9279f41e78217; op2val:0xc00ec3b664f905e6; op3val:0x7fe82efe20fbfe2b; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 864, x18)

inst_944:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x9279f41e78217 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xec3b664f905e6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x82efe20fbfe2b and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc9279f41e78217; op2val:0xc00ec3b664f905e6; op3val:0x7fe82efe20fbfe2b; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 880, x18)

inst_945:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x9279f41e78217 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xec3b664f905e6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x82efe20fbfe2b and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc9279f41e78217; op2val:0xc00ec3b664f905e6; op3val:0x7fe82efe20fbfe2b; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 896, x18)

inst_946:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x7285ea9faba7f and fs2 == 1 and fe2 == 0x401 and fm2 == 0x51e4ba7320788 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe90d56fd14cc8 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc7285ea9faba7f; op2val:0xc0151e4ba7320788; op3val:0x7fee90d56fd14cc8; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 912, x18)

inst_947:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x7285ea9faba7f and fs2 == 1 and fe2 == 0x401 and fm2 == 0x51e4ba7320788 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe90d56fd14cc8 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc7285ea9faba7f; op2val:0xc0151e4ba7320788; op3val:0x7fee90d56fd14cc8; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 928, x18)

inst_948:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x7285ea9faba7f and fs2 == 1 and fe2 == 0x401 and fm2 == 0x51e4ba7320788 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe90d56fd14cc8 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc7285ea9faba7f; op2val:0xc0151e4ba7320788; op3val:0x7fee90d56fd14cc8; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 944, x18)

inst_949:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x7285ea9faba7f and fs2 == 1 and fe2 == 0x401 and fm2 == 0x51e4ba7320788 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe90d56fd14cc8 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc7285ea9faba7f; op2val:0xc0151e4ba7320788; op3val:0x7fee90d56fd14cc8; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 960, x18)

inst_950:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x7285ea9faba7f and fs2 == 1 and fe2 == 0x401 and fm2 == 0x51e4ba7320788 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe90d56fd14cc8 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc7285ea9faba7f; op2val:0xc0151e4ba7320788; op3val:0x7fee90d56fd14cc8; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 976, x18)

inst_951:
// fs1 == 0 and fe1 == 0x7f8 and fm1 == 0x297b073ec28bf and fs2 == 1 and fe2 == 0x401 and fm2 == 0x4969a46af80a4 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x7ec9ded4be93f and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f8297b073ec28bf; op2val:0xc014969a46af80a4; op3val:0x7fa7ec9ded4be93f; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 992, x18)

inst_952:
// fs1 == 0 and fe1 == 0x7f8 and fm1 == 0x297b073ec28bf and fs2 == 1 and fe2 == 0x401 and fm2 == 0x4969a46af80a4 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x7ec9ded4be93f and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f8297b073ec28bf; op2val:0xc014969a46af80a4; op3val:0x7fa7ec9ded4be93f; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 1008, x18)

inst_953:
// fs1 == 0 and fe1 == 0x7f8 and fm1 == 0x297b073ec28bf and fs2 == 1 and fe2 == 0x401 and fm2 == 0x4969a46af80a4 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x7ec9ded4be93f and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f8297b073ec28bf; op2val:0xc014969a46af80a4; op3val:0x7fa7ec9ded4be93f; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 1024, x18)

inst_954:
// fs1 == 0 and fe1 == 0x7f8 and fm1 == 0x297b073ec28bf and fs2 == 1 and fe2 == 0x401 and fm2 == 0x4969a46af80a4 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x7ec9ded4be93f and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f8297b073ec28bf; op2val:0xc014969a46af80a4; op3val:0x7fa7ec9ded4be93f; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 1040, x18)

inst_955:
// fs1 == 0 and fe1 == 0x7f8 and fm1 == 0x297b073ec28bf and fs2 == 1 and fe2 == 0x401 and fm2 == 0x4969a46af80a4 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x7ec9ded4be93f and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f8297b073ec28bf; op2val:0xc014969a46af80a4; op3val:0x7fa7ec9ded4be93f; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 1056, x18)

inst_956:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x76f910302cbdd and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x94717562172c6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x28339eb5d6c77 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd76f910302cbdd; op2val:0xbff94717562172c6; op3val:0x7fe28339eb5d6c77; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 1072, x18)

inst_957:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x76f910302cbdd and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x94717562172c6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x28339eb5d6c77 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd76f910302cbdd; op2val:0xbff94717562172c6; op3val:0x7fe28339eb5d6c77; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 1088, x18)

inst_958:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x76f910302cbdd and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x94717562172c6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x28339eb5d6c77 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd76f910302cbdd; op2val:0xbff94717562172c6; op3val:0x7fe28339eb5d6c77; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 1104, x18)

inst_959:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x76f910302cbdd and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x94717562172c6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x28339eb5d6c77 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd76f910302cbdd; op2val:0xbff94717562172c6; op3val:0x7fe28339eb5d6c77; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 1120, x18)

inst_960:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x76f910302cbdd and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x94717562172c6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x28339eb5d6c77 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd76f910302cbdd; op2val:0xbff94717562172c6; op3val:0x7fe28339eb5d6c77; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 1136, x18)

inst_961:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0x2804bc647cadf and fs2 == 1 and fe2 == 0x404 and fm2 == 0x5ccc17c4e0cf2 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x93526f5ace10b and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f92804bc647cadf; op2val:0xc045ccc17c4e0cf2; op3val:0x7fe93526f5ace10b; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 1152, x18)

inst_962:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0x2804bc647cadf and fs2 == 1 and fe2 == 0x404 and fm2 == 0x5ccc17c4e0cf2 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x93526f5ace10b and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f92804bc647cadf; op2val:0xc045ccc17c4e0cf2; op3val:0x7fe93526f5ace10b; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 1168, x18)

inst_963:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0x2804bc647cadf and fs2 == 1 and fe2 == 0x404 and fm2 == 0x5ccc17c4e0cf2 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x93526f5ace10b and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f92804bc647cadf; op2val:0xc045ccc17c4e0cf2; op3val:0x7fe93526f5ace10b; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 1184, x18)

inst_964:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0x2804bc647cadf and fs2 == 1 and fe2 == 0x404 and fm2 == 0x5ccc17c4e0cf2 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x93526f5ace10b and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f92804bc647cadf; op2val:0xc045ccc17c4e0cf2; op3val:0x7fe93526f5ace10b; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 1200, x18)

inst_965:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0x2804bc647cadf and fs2 == 1 and fe2 == 0x404 and fm2 == 0x5ccc17c4e0cf2 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x93526f5ace10b and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f92804bc647cadf; op2val:0xc045ccc17c4e0cf2; op3val:0x7fe93526f5ace10b; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 1216, x18)

inst_966:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7fe52216e3a3d and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x207700538aa86 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xb0943a59dff43 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe7fe52216e3a3d; op2val:0xbff207700538aa86; op3val:0x7feb0943a59dff43; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 1232, x18)

inst_967:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7fe52216e3a3d and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x207700538aa86 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xb0943a59dff43 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe7fe52216e3a3d; op2val:0xbff207700538aa86; op3val:0x7feb0943a59dff43; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 1248, x18)

inst_968:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7fe52216e3a3d and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x207700538aa86 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xb0943a59dff43 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe7fe52216e3a3d; op2val:0xbff207700538aa86; op3val:0x7feb0943a59dff43; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 1264, x18)

inst_969:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7fe52216e3a3d and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x207700538aa86 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xb0943a59dff43 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe7fe52216e3a3d; op2val:0xbff207700538aa86; op3val:0x7feb0943a59dff43; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 1280, x18)

inst_970:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7fe52216e3a3d and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x207700538aa86 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xb0943a59dff43 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe7fe52216e3a3d; op2val:0xbff207700538aa86; op3val:0x7feb0943a59dff43; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 1296, x18)

inst_971:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf3403ffc18c4e and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0x80322f838f766 and fs3 == 0 and fe3 == 0x7f9 and fm3 == 0x76a11f9800e5f and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef3403ffc18c4e; op2val:0xbf980322f838f766; op3val:0x7f976a11f9800e5f; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 1312, x18)

inst_972:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf3403ffc18c4e and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0x80322f838f766 and fs3 == 0 and fe3 == 0x7f9 and fm3 == 0x76a11f9800e5f and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef3403ffc18c4e; op2val:0xbf980322f838f766; op3val:0x7f976a11f9800e5f; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 1328, x18)

inst_973:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf3403ffc18c4e and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0x80322f838f766 and fs3 == 0 and fe3 == 0x7f9 and fm3 == 0x76a11f9800e5f and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef3403ffc18c4e; op2val:0xbf980322f838f766; op3val:0x7f976a11f9800e5f; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 1344, x18)

inst_974:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf3403ffc18c4e and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0x80322f838f766 and fs3 == 0 and fe3 == 0x7f9 and fm3 == 0x76a11f9800e5f and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef3403ffc18c4e; op2val:0xbf980322f838f766; op3val:0x7f976a11f9800e5f; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 1360, x18)

inst_975:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf3403ffc18c4e and fs2 == 1 and fe2 == 0x3f9 and fm2 == 0x80322f838f766 and fs3 == 0 and fe3 == 0x7f9 and fm3 == 0x76a11f9800e5f and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef3403ffc18c4e; op2val:0xbf980322f838f766; op3val:0x7f976a11f9800e5f; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 1376, x18)

inst_976:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x68ca648b458d1 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x4b53acb56a497 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0xd2f39d065486f and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe68ca648b458d1; op2val:0xbfb4b53acb56a497; op3val:0x7fad2f39d065486f; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 1392, x18)

inst_977:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x68ca648b458d1 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x4b53acb56a497 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0xd2f39d065486f and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe68ca648b458d1; op2val:0xbfb4b53acb56a497; op3val:0x7fad2f39d065486f; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 1408, x18)

inst_978:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x68ca648b458d1 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x4b53acb56a497 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0xd2f39d065486f and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe68ca648b458d1; op2val:0xbfb4b53acb56a497; op3val:0x7fad2f39d065486f; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 1424, x18)

inst_979:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x68ca648b458d1 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x4b53acb56a497 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0xd2f39d065486f and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe68ca648b458d1; op2val:0xbfb4b53acb56a497; op3val:0x7fad2f39d065486f; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 1440, x18)

inst_980:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x68ca648b458d1 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x4b53acb56a497 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0xd2f39d065486f and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe68ca648b458d1; op2val:0xbfb4b53acb56a497; op3val:0x7fad2f39d065486f; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 1456, x18)

inst_981:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x435f4497a6a63 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x861a6c82110d2 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xecc4833c7c22d and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd435f4497a6a63; op2val:0xbff861a6c82110d2; op3val:0x7fdecc4833c7c22d; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 1472, x18)

inst_982:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x435f4497a6a63 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x861a6c82110d2 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xecc4833c7c22d and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd435f4497a6a63; op2val:0xbff861a6c82110d2; op3val:0x7fdecc4833c7c22d; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 1488, x18)

inst_983:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x435f4497a6a63 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x861a6c82110d2 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xecc4833c7c22d and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd435f4497a6a63; op2val:0xbff861a6c82110d2; op3val:0x7fdecc4833c7c22d; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 1504, x18)

inst_984:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x435f4497a6a63 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x861a6c82110d2 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xecc4833c7c22d and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd435f4497a6a63; op2val:0xbff861a6c82110d2; op3val:0x7fdecc4833c7c22d; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 1520, x18)

inst_985:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x435f4497a6a63 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x861a6c82110d2 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xecc4833c7c22d and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd435f4497a6a63; op2val:0xbff861a6c82110d2; op3val:0x7fdecc4833c7c22d; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 1536, x18)

inst_986:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa314cd13968e7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x2cb7501dfc887 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xec4877592448b and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fea314cd13968e7; op2val:0xbfe2cb7501dfc887; op3val:0x7fdec4877592448b; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 1552, x18)

inst_987:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa314cd13968e7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x2cb7501dfc887 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xec4877592448b and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fea314cd13968e7; op2val:0xbfe2cb7501dfc887; op3val:0x7fdec4877592448b; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 1568, x18)

inst_988:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa314cd13968e7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x2cb7501dfc887 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xec4877592448b and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fea314cd13968e7; op2val:0xbfe2cb7501dfc887; op3val:0x7fdec4877592448b; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 1584, x18)

inst_989:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa314cd13968e7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x2cb7501dfc887 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xec4877592448b and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fea314cd13968e7; op2val:0xbfe2cb7501dfc887; op3val:0x7fdec4877592448b; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 1600, x18)

inst_990:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa314cd13968e7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x2cb7501dfc887 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xec4877592448b and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fea314cd13968e7; op2val:0xbfe2cb7501dfc887; op3val:0x7fdec4877592448b; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 1616, x18)

inst_991:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x5a01a288736c5 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd5aa56f017c02 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x3d659cad7c271 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd5a01a288736c5; op2val:0xbfed5aa56f017c02; op3val:0x7fd3d659cad7c271; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 1632, x18)

inst_992:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x5a01a288736c5 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd5aa56f017c02 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x3d659cad7c271 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd5a01a288736c5; op2val:0xbfed5aa56f017c02; op3val:0x7fd3d659cad7c271; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 1648, x18)

inst_993:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x5a01a288736c5 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd5aa56f017c02 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x3d659cad7c271 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd5a01a288736c5; op2val:0xbfed5aa56f017c02; op3val:0x7fd3d659cad7c271; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 1664, x18)

inst_994:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x5a01a288736c5 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd5aa56f017c02 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x3d659cad7c271 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd5a01a288736c5; op2val:0xbfed5aa56f017c02; op3val:0x7fd3d659cad7c271; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 1680, x18)

inst_995:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x5a01a288736c5 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd5aa56f017c02 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x3d659cad7c271 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd5a01a288736c5; op2val:0xbfed5aa56f017c02; op3val:0x7fd3d659cad7c271; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 1696, x18)

inst_996:
// fs1 == 0 and fe1 == 0x7f6 and fm1 == 0xbb6ea62484dff and fs2 == 1 and fe2 == 0x406 and fm2 == 0x90c64fc55e97f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5b1a32ad4a90d and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f6bb6ea62484dff; op2val:0xc0690c64fc55e97f; op3val:0x7fe5b1a32ad4a90d; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 1712, x18)

inst_997:
// fs1 == 0 and fe1 == 0x7f6 and fm1 == 0xbb6ea62484dff and fs2 == 1 and fe2 == 0x406 and fm2 == 0x90c64fc55e97f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5b1a32ad4a90d and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f6bb6ea62484dff; op2val:0xc0690c64fc55e97f; op3val:0x7fe5b1a32ad4a90d; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 1728, x18)

inst_998:
// fs1 == 0 and fe1 == 0x7f6 and fm1 == 0xbb6ea62484dff and fs2 == 1 and fe2 == 0x406 and fm2 == 0x90c64fc55e97f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5b1a32ad4a90d and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f6bb6ea62484dff; op2val:0xc0690c64fc55e97f; op3val:0x7fe5b1a32ad4a90d; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 1744, x18)

inst_999:
// fs1 == 0 and fe1 == 0x7f6 and fm1 == 0xbb6ea62484dff and fs2 == 1 and fe2 == 0x406 and fm2 == 0x90c64fc55e97f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5b1a32ad4a90d and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f6bb6ea62484dff; op2val:0xc0690c64fc55e97f; op3val:0x7fe5b1a32ad4a90d; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 1760, x18)

inst_1000:
// fs1 == 0 and fe1 == 0x7f6 and fm1 == 0xbb6ea62484dff and fs2 == 1 and fe2 == 0x406 and fm2 == 0x90c64fc55e97f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5b1a32ad4a90d and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f6bb6ea62484dff; op2val:0xc0690c64fc55e97f; op3val:0x7fe5b1a32ad4a90d; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1776, x18)

inst_1001:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x34977ae8a092b and fs2 == 1 and fe2 == 0x400 and fm2 == 0x002a99ffaa461 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x34cad56583569 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd34977ae8a092b; op2val:0xc00002a99ffaa461; op3val:0x7fe34cad56583569; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 1792, x18)

inst_1002:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x34977ae8a092b and fs2 == 1 and fe2 == 0x400 and fm2 == 0x002a99ffaa461 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x34cad56583569 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd34977ae8a092b; op2val:0xc00002a99ffaa461; op3val:0x7fe34cad56583569; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 1808, x18)

inst_1003:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x34977ae8a092b and fs2 == 1 and fe2 == 0x400 and fm2 == 0x002a99ffaa461 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x34cad56583569 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd34977ae8a092b; op2val:0xc00002a99ffaa461; op3val:0x7fe34cad56583569; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 1824, x18)

inst_1004:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x34977ae8a092b and fs2 == 1 and fe2 == 0x400 and fm2 == 0x002a99ffaa461 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x34cad56583569 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd34977ae8a092b; op2val:0xc00002a99ffaa461; op3val:0x7fe34cad56583569; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 1840, x18)

inst_1005:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x34977ae8a092b and fs2 == 1 and fe2 == 0x400 and fm2 == 0x002a99ffaa461 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x34cad56583569 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd34977ae8a092b; op2val:0xc00002a99ffaa461; op3val:0x7fe34cad56583569; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1856, x18)

inst_1006:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x2a65c343892db and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xc9ce16305fb76 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x0acff0a9e8d47 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc2a65c343892db; op2val:0xbfdc9ce16305fb76; op3val:0x7fb0acff0a9e8d47; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 1872, x18)

inst_1007:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x2a65c343892db and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xc9ce16305fb76 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x0acff0a9e8d47 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc2a65c343892db; op2val:0xbfdc9ce16305fb76; op3val:0x7fb0acff0a9e8d47; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 1888, x18)

inst_1008:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x2a65c343892db and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xc9ce16305fb76 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x0acff0a9e8d47 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc2a65c343892db; op2val:0xbfdc9ce16305fb76; op3val:0x7fb0acff0a9e8d47; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 1904, x18)

inst_1009:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x2a65c343892db and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xc9ce16305fb76 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x0acff0a9e8d47 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc2a65c343892db; op2val:0xbfdc9ce16305fb76; op3val:0x7fb0acff0a9e8d47; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 1920, x18)

inst_1010:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x2a65c343892db and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xc9ce16305fb76 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x0acff0a9e8d47 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fc2a65c343892db; op2val:0xbfdc9ce16305fb76; op3val:0x7fb0acff0a9e8d47; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1936, x18)

inst_1011:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x71dbc6351ba9b and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xd67f63a22c8b1 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x53e0c4ef901b7 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd71dbc6351ba9b; op2val:0xbfdd67f63a22c8b1; op3val:0x7fc53e0c4ef901b7; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 1952, x18)

inst_1012:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x71dbc6351ba9b and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xd67f63a22c8b1 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x53e0c4ef901b7 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd71dbc6351ba9b; op2val:0xbfdd67f63a22c8b1; op3val:0x7fc53e0c4ef901b7; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 1968, x18)

inst_1013:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x71dbc6351ba9b and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xd67f63a22c8b1 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x53e0c4ef901b7 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd71dbc6351ba9b; op2val:0xbfdd67f63a22c8b1; op3val:0x7fc53e0c4ef901b7; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 1984, x18)

inst_1014:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x71dbc6351ba9b and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xd67f63a22c8b1 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x53e0c4ef901b7 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd71dbc6351ba9b; op2val:0xbfdd67f63a22c8b1; op3val:0x7fc53e0c4ef901b7; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 2000, x18)

inst_1015:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x71dbc6351ba9b and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xd67f63a22c8b1 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x53e0c4ef901b7 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd71dbc6351ba9b; op2val:0xbfdd67f63a22c8b1; op3val:0x7fc53e0c4ef901b7; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 2016, x18)
RVTEST_SIGBASE(x15,signature_x15_9)

inst_1016:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc998825886bbc and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x5655fb54b9f4c and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x31f5b782c2cff and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec998825886bbc; op2val:0xbfd5655fb54b9f4c; op3val:0x7fd31f5b782c2cff; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 0, x18)

inst_1017:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc998825886bbc and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x5655fb54b9f4c and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x31f5b782c2cff and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec998825886bbc; op2val:0xbfd5655fb54b9f4c; op3val:0x7fd31f5b782c2cff; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 16, x18)

inst_1018:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc998825886bbc and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x5655fb54b9f4c and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x31f5b782c2cff and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec998825886bbc; op2val:0xbfd5655fb54b9f4c; op3val:0x7fd31f5b782c2cff; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 32, x18)

inst_1019:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc998825886bbc and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x5655fb54b9f4c and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x31f5b782c2cff and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec998825886bbc; op2val:0xbfd5655fb54b9f4c; op3val:0x7fd31f5b782c2cff; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 48, x18)
addi x16,x16,2040

inst_1020:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc998825886bbc and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x5655fb54b9f4c and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x31f5b782c2cff and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fec998825886bbc; op2val:0xbfd5655fb54b9f4c; op3val:0x7fd31f5b782c2cff; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 64, x18)

inst_1021:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x619bd20c99aa7 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x6646aaf5982ba and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xeee1847dc4239 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe619bd20c99aa7; op2val:0xbff6646aaf5982ba; op3val:0x7feeee1847dc4239; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 80, x18)

inst_1022:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x619bd20c99aa7 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x6646aaf5982ba and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xeee1847dc4239 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe619bd20c99aa7; op2val:0xbff6646aaf5982ba; op3val:0x7feeee1847dc4239; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 96, x18)

inst_1023:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x619bd20c99aa7 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x6646aaf5982ba and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xeee1847dc4239 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe619bd20c99aa7; op2val:0xbff6646aaf5982ba; op3val:0x7feeee1847dc4239; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 112, x18)

inst_1024:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x619bd20c99aa7 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x6646aaf5982ba and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xeee1847dc4239 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe619bd20c99aa7; op2val:0xbff6646aaf5982ba; op3val:0x7feeee1847dc4239; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 128, x18)

inst_1025:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x619bd20c99aa7 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x6646aaf5982ba and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xeee1847dc4239 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe619bd20c99aa7; op2val:0xbff6646aaf5982ba; op3val:0x7feeee1847dc4239; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 144, x18)

inst_1026:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xa363712e81d63 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x26159c540d020 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe1c79b3dfcd57 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fca363712e81d63; op2val:0xc0126159c540d020; op3val:0x7fee1c79b3dfcd57; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 160, x18)

inst_1027:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xa363712e81d63 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x26159c540d020 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe1c79b3dfcd57 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fca363712e81d63; op2val:0xc0126159c540d020; op3val:0x7fee1c79b3dfcd57; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 176, x18)

inst_1028:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xa363712e81d63 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x26159c540d020 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe1c79b3dfcd57 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fca363712e81d63; op2val:0xc0126159c540d020; op3val:0x7fee1c79b3dfcd57; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 192, x18)

inst_1029:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xa363712e81d63 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x26159c540d020 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe1c79b3dfcd57 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fca363712e81d63; op2val:0xc0126159c540d020; op3val:0x7fee1c79b3dfcd57; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 208, x18)

inst_1030:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xa363712e81d63 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x26159c540d020 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe1c79b3dfcd57 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fca363712e81d63; op2val:0xc0126159c540d020; op3val:0x7fee1c79b3dfcd57; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 224, x18)

inst_1031:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1415193812551 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x41cdfb6a8087a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5b0c98a80bf69 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe1415193812551; op2val:0xbff41cdfb6a8087a; op3val:0x7fe5b0c98a80bf69; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 240, x18)

inst_1032:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1415193812551 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x41cdfb6a8087a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5b0c98a80bf69 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe1415193812551; op2val:0xbff41cdfb6a8087a; op3val:0x7fe5b0c98a80bf69; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 256, x18)

inst_1033:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1415193812551 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x41cdfb6a8087a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5b0c98a80bf69 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe1415193812551; op2val:0xbff41cdfb6a8087a; op3val:0x7fe5b0c98a80bf69; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 272, x18)

inst_1034:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1415193812551 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x41cdfb6a8087a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5b0c98a80bf69 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe1415193812551; op2val:0xbff41cdfb6a8087a; op3val:0x7fe5b0c98a80bf69; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 288, x18)

inst_1035:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1415193812551 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x41cdfb6a8087a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5b0c98a80bf69 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe1415193812551; op2val:0xbff41cdfb6a8087a; op3val:0x7fe5b0c98a80bf69; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 304, x18)

inst_1036:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x283f9d2825ba3 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xa9654e761f0b1 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xec46d7ccba9a3 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd283f9d2825ba3; op2val:0xc00a9654e761f0b1; op3val:0x7feec46d7ccba9a3; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 320, x18)

inst_1037:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x283f9d2825ba3 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xa9654e761f0b1 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xec46d7ccba9a3 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd283f9d2825ba3; op2val:0xc00a9654e761f0b1; op3val:0x7feec46d7ccba9a3; valaddr_reg:x16; val_offset:408; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 408, x17, x15, 336, x18)

inst_1038:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x283f9d2825ba3 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xa9654e761f0b1 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xec46d7ccba9a3 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd283f9d2825ba3; op2val:0xc00a9654e761f0b1; op3val:0x7feec46d7ccba9a3; valaddr_reg:x16; val_offset:432; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 432, x17, x15, 352, x18)

inst_1039:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x283f9d2825ba3 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xa9654e761f0b1 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xec46d7ccba9a3 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd283f9d2825ba3; op2val:0xc00a9654e761f0b1; op3val:0x7feec46d7ccba9a3; valaddr_reg:x16; val_offset:456; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 456, x17, x15, 368, x18)

inst_1040:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x283f9d2825ba3 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xa9654e761f0b1 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xec46d7ccba9a3 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd283f9d2825ba3; op2val:0xc00a9654e761f0b1; op3val:0x7feec46d7ccba9a3; valaddr_reg:x16; val_offset:480; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 480, x17, x15, 384, x18)

inst_1041:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf6ffe64a9d644 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc6aa504850cbd and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xbeac3b0aa7ae7 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef6ffe64a9d644; op2val:0xbfec6aa504850cbd; op3val:0x7febeac3b0aa7ae7; valaddr_reg:x16; val_offset:504; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 504, x17, x15, 400, x18)

inst_1042:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf6ffe64a9d644 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc6aa504850cbd and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xbeac3b0aa7ae7 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef6ffe64a9d644; op2val:0xbfec6aa504850cbd; op3val:0x7febeac3b0aa7ae7; valaddr_reg:x16; val_offset:528; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 528, x17, x15, 416, x18)

inst_1043:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf6ffe64a9d644 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc6aa504850cbd and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xbeac3b0aa7ae7 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef6ffe64a9d644; op2val:0xbfec6aa504850cbd; op3val:0x7febeac3b0aa7ae7; valaddr_reg:x16; val_offset:552; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 552, x17, x15, 432, x18)

inst_1044:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf6ffe64a9d644 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc6aa504850cbd and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xbeac3b0aa7ae7 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef6ffe64a9d644; op2val:0xbfec6aa504850cbd; op3val:0x7febeac3b0aa7ae7; valaddr_reg:x16; val_offset:576; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 576, x17, x15, 448, x18)

inst_1045:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf6ffe64a9d644 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc6aa504850cbd and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xbeac3b0aa7ae7 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fef6ffe64a9d644; op2val:0xbfec6aa504850cbd; op3val:0x7febeac3b0aa7ae7; valaddr_reg:x16; val_offset:600; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 600, x17, x15, 464, x18)

inst_1046:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xacf777c60a3c7 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x075d1281c18a5 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xb94e30f5cae37 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcacf777c60a3c7; op2val:0xbff075d1281c18a5; op3val:0x7fcb94e30f5cae37; valaddr_reg:x16; val_offset:624; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 624, x17, x15, 480, x18)

inst_1047:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xacf777c60a3c7 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x075d1281c18a5 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xb94e30f5cae37 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcacf777c60a3c7; op2val:0xbff075d1281c18a5; op3val:0x7fcb94e30f5cae37; valaddr_reg:x16; val_offset:648; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 648, x17, x15, 496, x18)

inst_1048:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xacf777c60a3c7 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x075d1281c18a5 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xb94e30f5cae37 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcacf777c60a3c7; op2val:0xbff075d1281c18a5; op3val:0x7fcb94e30f5cae37; valaddr_reg:x16; val_offset:672; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 672, x17, x15, 512, x18)

inst_1049:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xacf777c60a3c7 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x075d1281c18a5 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xb94e30f5cae37 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcacf777c60a3c7; op2val:0xbff075d1281c18a5; op3val:0x7fcb94e30f5cae37; valaddr_reg:x16; val_offset:696; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 696, x17, x15, 528, x18)

inst_1050:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xacf777c60a3c7 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x075d1281c18a5 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xb94e30f5cae37 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fcacf777c60a3c7; op2val:0xbff075d1281c18a5; op3val:0x7fcb94e30f5cae37; valaddr_reg:x16; val_offset:720; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 720, x17, x15, 544, x18)

inst_1051:
// fs1 == 0 and fe1 == 0x7f5 and fm1 == 0xd144fc758c3ff and fs2 == 1 and fe2 == 0x407 and fm2 == 0xeaf869e3b1341 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xbe28c340570cd and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f5d144fc758c3ff; op2val:0xc07eaf869e3b1341; op3val:0x7febe28c340570cd; valaddr_reg:x16; val_offset:744; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 744, x17, x15, 560, x18)

inst_1052:
// fs1 == 0 and fe1 == 0x7f5 and fm1 == 0xd144fc758c3ff and fs2 == 1 and fe2 == 0x407 and fm2 == 0xeaf869e3b1341 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xbe28c340570cd and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f5d144fc758c3ff; op2val:0xc07eaf869e3b1341; op3val:0x7febe28c340570cd; valaddr_reg:x16; val_offset:768; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 768, x17, x15, 576, x18)

inst_1053:
// fs1 == 0 and fe1 == 0x7f5 and fm1 == 0xd144fc758c3ff and fs2 == 1 and fe2 == 0x407 and fm2 == 0xeaf869e3b1341 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xbe28c340570cd and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f5d144fc758c3ff; op2val:0xc07eaf869e3b1341; op3val:0x7febe28c340570cd; valaddr_reg:x16; val_offset:792; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 792, x17, x15, 592, x18)

inst_1054:
// fs1 == 0 and fe1 == 0x7f5 and fm1 == 0xd144fc758c3ff and fs2 == 1 and fe2 == 0x407 and fm2 == 0xeaf869e3b1341 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xbe28c340570cd and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f5d144fc758c3ff; op2val:0xc07eaf869e3b1341; op3val:0x7febe28c340570cd; valaddr_reg:x16; val_offset:816; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 816, x17, x15, 608, x18)

inst_1055:
// fs1 == 0 and fe1 == 0x7f5 and fm1 == 0xd144fc758c3ff and fs2 == 1 and fe2 == 0x407 and fm2 == 0xeaf869e3b1341 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xbe28c340570cd and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f5d144fc758c3ff; op2val:0xc07eaf869e3b1341; op3val:0x7febe28c340570cd; valaddr_reg:x16; val_offset:840; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 840, x17, x15, 624, x18)

inst_1056:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3c22bc9c78300 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xa43e2dae46a30 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x037ae321da893 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3c22bc9c78300; op2val:0xbfca43e2dae46a30; op3val:0x7fc037ae321da893; valaddr_reg:x16; val_offset:864; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 864, x17, x15, 640, x18)

inst_1057:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3c22bc9c78300 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xa43e2dae46a30 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x037ae321da893 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3c22bc9c78300; op2val:0xbfca43e2dae46a30; op3val:0x7fc037ae321da893; valaddr_reg:x16; val_offset:888; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 888, x17, x15, 656, x18)

inst_1058:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3c22bc9c78300 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xa43e2dae46a30 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x037ae321da893 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3c22bc9c78300; op2val:0xbfca43e2dae46a30; op3val:0x7fc037ae321da893; valaddr_reg:x16; val_offset:912; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 912, x17, x15, 672, x18)

inst_1059:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3c22bc9c78300 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xa43e2dae46a30 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x037ae321da893 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3c22bc9c78300; op2val:0xbfca43e2dae46a30; op3val:0x7fc037ae321da893; valaddr_reg:x16; val_offset:936; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 936, x17, x15, 688, x18)

inst_1060:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3c22bc9c78300 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xa43e2dae46a30 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x037ae321da893 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3c22bc9c78300; op2val:0xbfca43e2dae46a30; op3val:0x7fc037ae321da893; valaddr_reg:x16; val_offset:960; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 960, x17, x15, 704, x18)

inst_1061:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9823a6849a878 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x648419e5f7622 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x1c32179e3068f and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9823a6849a878; op2val:0xbfc648419e5f7622; op3val:0x7fc1c32179e3068f; valaddr_reg:x16; val_offset:984; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 984, x17, x15, 720, x18)

inst_1062:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9823a6849a878 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x648419e5f7622 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x1c32179e3068f and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9823a6849a878; op2val:0xbfc648419e5f7622; op3val:0x7fc1c32179e3068f; valaddr_reg:x16; val_offset:1008; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1008, x17, x15, 736, x18)

inst_1063:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9823a6849a878 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x648419e5f7622 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x1c32179e3068f and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9823a6849a878; op2val:0xbfc648419e5f7622; op3val:0x7fc1c32179e3068f; valaddr_reg:x16; val_offset:1032; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1032, x17, x15, 752, x18)

inst_1064:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9823a6849a878 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x648419e5f7622 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x1c32179e3068f and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9823a6849a878; op2val:0xbfc648419e5f7622; op3val:0x7fc1c32179e3068f; valaddr_reg:x16; val_offset:1056; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1056, x17, x15, 768, x18)

inst_1065:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9823a6849a878 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x648419e5f7622 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x1c32179e3068f and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe9823a6849a878; op2val:0xbfc648419e5f7622; op3val:0x7fc1c32179e3068f; valaddr_reg:x16; val_offset:1080; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1080, x17, x15, 784, x18)

inst_1066:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x880d2a98ec8a6 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xaae02012bf970 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x46de92c30d8b3 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe880d2a98ec8a6; op2val:0xbfcaae02012bf970; op3val:0x7fc46de92c30d8b3; valaddr_reg:x16; val_offset:1104; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1104, x17, x15, 800, x18)

inst_1067:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x880d2a98ec8a6 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xaae02012bf970 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x46de92c30d8b3 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe880d2a98ec8a6; op2val:0xbfcaae02012bf970; op3val:0x7fc46de92c30d8b3; valaddr_reg:x16; val_offset:1128; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1128, x17, x15, 816, x18)

inst_1068:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x880d2a98ec8a6 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xaae02012bf970 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x46de92c30d8b3 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe880d2a98ec8a6; op2val:0xbfcaae02012bf970; op3val:0x7fc46de92c30d8b3; valaddr_reg:x16; val_offset:1152; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1152, x17, x15, 832, x18)

inst_1069:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x880d2a98ec8a6 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xaae02012bf970 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x46de92c30d8b3 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe880d2a98ec8a6; op2val:0xbfcaae02012bf970; op3val:0x7fc46de92c30d8b3; valaddr_reg:x16; val_offset:1176; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1176, x17, x15, 848, x18)

inst_1070:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x880d2a98ec8a6 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xaae02012bf970 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x46de92c30d8b3 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe880d2a98ec8a6; op2val:0xbfcaae02012bf970; op3val:0x7fc46de92c30d8b3; valaddr_reg:x16; val_offset:1200; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1200, x17, x15, 864, x18)

inst_1071:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x1e30a0174e413 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xa3ad354c23d0e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd52b387784731 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd1e30a0174e413; op2val:0xc00a3ad354c23d0e; op3val:0x7fed52b387784731; valaddr_reg:x16; val_offset:1224; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1224, x17, x15, 880, x18)

inst_1072:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x1e30a0174e413 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xa3ad354c23d0e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd52b387784731 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd1e30a0174e413; op2val:0xc00a3ad354c23d0e; op3val:0x7fed52b387784731; valaddr_reg:x16; val_offset:1248; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1248, x17, x15, 896, x18)

inst_1073:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x1e30a0174e413 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xa3ad354c23d0e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd52b387784731 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd1e30a0174e413; op2val:0xc00a3ad354c23d0e; op3val:0x7fed52b387784731; valaddr_reg:x16; val_offset:1272; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1272, x17, x15, 912, x18)

inst_1074:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x1e30a0174e413 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xa3ad354c23d0e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd52b387784731 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd1e30a0174e413; op2val:0xc00a3ad354c23d0e; op3val:0x7fed52b387784731; valaddr_reg:x16; val_offset:1296; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1296, x17, x15, 928, x18)

inst_1075:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x1e30a0174e413 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xa3ad354c23d0e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd52b387784731 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fd1e30a0174e413; op2val:0xc00a3ad354c23d0e; op3val:0x7fed52b387784731; valaddr_reg:x16; val_offset:1320; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1320, x17, x15, 944, x18)

inst_1076:
// fs1 == 0 and fe1 == 0x7f8 and fm1 == 0xadb9cbb2edaff and fs2 == 1 and fe2 == 0x403 and fm2 == 0x086bf70a767c0 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xbbdcd5687c963 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f8adb9cbb2edaff; op2val:0xc03086bf70a767c0; op3val:0x7fcbbdcd5687c963; valaddr_reg:x16; val_offset:1344; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1344, x17, x15, 960, x18)

inst_1077:
// fs1 == 0 and fe1 == 0x7f8 and fm1 == 0xadb9cbb2edaff and fs2 == 1 and fe2 == 0x403 and fm2 == 0x086bf70a767c0 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xbbdcd5687c963 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f8adb9cbb2edaff; op2val:0xc03086bf70a767c0; op3val:0x7fcbbdcd5687c963; valaddr_reg:x16; val_offset:1368; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1368, x17, x15, 976, x18)

inst_1078:
// fs1 == 0 and fe1 == 0x7f8 and fm1 == 0xadb9cbb2edaff and fs2 == 1 and fe2 == 0x403 and fm2 == 0x086bf70a767c0 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xbbdcd5687c963 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f8adb9cbb2edaff; op2val:0xc03086bf70a767c0; op3val:0x7fcbbdcd5687c963; valaddr_reg:x16; val_offset:1392; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1392, x17, x15, 992, x18)

inst_1079:
// fs1 == 0 and fe1 == 0x7f8 and fm1 == 0xadb9cbb2edaff and fs2 == 1 and fe2 == 0x403 and fm2 == 0x086bf70a767c0 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xbbdcd5687c963 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f8adb9cbb2edaff; op2val:0xc03086bf70a767c0; op3val:0x7fcbbdcd5687c963; valaddr_reg:x16; val_offset:1416; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1416, x17, x15, 1008, x18)

inst_1080:
// fs1 == 0 and fe1 == 0x7f8 and fm1 == 0xadb9cbb2edaff and fs2 == 1 and fe2 == 0x403 and fm2 == 0x086bf70a767c0 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xbbdcd5687c963 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f8adb9cbb2edaff; op2val:0xc03086bf70a767c0; op3val:0x7fcbbdcd5687c963; valaddr_reg:x16; val_offset:1440; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1440, x17, x15, 1024, x18)

inst_1081:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1667d2c686bf9 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0e3570e2acd1c and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x25db9e8ff508c and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe1667d2c686bf9; op2val:0xbff0e3570e2acd1c; op3val:0x7fe25db9e8ff508c; valaddr_reg:x16; val_offset:1464; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1464, x17, x15, 1040, x18)

inst_1082:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1667d2c686bf9 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0e3570e2acd1c and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x25db9e8ff508c and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe1667d2c686bf9; op2val:0xbff0e3570e2acd1c; op3val:0x7fe25db9e8ff508c; valaddr_reg:x16; val_offset:1488; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1488, x17, x15, 1056, x18)

inst_1083:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1667d2c686bf9 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0e3570e2acd1c and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x25db9e8ff508c and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe1667d2c686bf9; op2val:0xbff0e3570e2acd1c; op3val:0x7fe25db9e8ff508c; valaddr_reg:x16; val_offset:1512; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1512, x17, x15, 1072, x18)

inst_1084:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1667d2c686bf9 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0e3570e2acd1c and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x25db9e8ff508c and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe1667d2c686bf9; op2val:0xbff0e3570e2acd1c; op3val:0x7fe25db9e8ff508c; valaddr_reg:x16; val_offset:1536; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1536, x17, x15, 1088, x18)

inst_1085:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1667d2c686bf9 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0e3570e2acd1c and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x25db9e8ff508c and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe1667d2c686bf9; op2val:0xbff0e3570e2acd1c; op3val:0x7fe25db9e8ff508c; valaddr_reg:x16; val_offset:1560; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1560, x17, x15, 1104, x18)

inst_1086:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe053a2ef29387 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x0d23dd9377bc1 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xf8fb2d617959b and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fde053a2ef29387; op2val:0xbfe0d23dd9377bc1; op3val:0x7fcf8fb2d617959b; valaddr_reg:x16; val_offset:1584; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1584, x17, x15, 1120, x18)

inst_1087:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe053a2ef29387 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x0d23dd9377bc1 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xf8fb2d617959b and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fde053a2ef29387; op2val:0xbfe0d23dd9377bc1; op3val:0x7fcf8fb2d617959b; valaddr_reg:x16; val_offset:1608; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1608, x17, x15, 1136, x18)

inst_1088:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe053a2ef29387 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x0d23dd9377bc1 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xf8fb2d617959b and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fde053a2ef29387; op2val:0xbfe0d23dd9377bc1; op3val:0x7fcf8fb2d617959b; valaddr_reg:x16; val_offset:1632; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1632, x17, x15, 1152, x18)

inst_1089:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe053a2ef29387 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x0d23dd9377bc1 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xf8fb2d617959b and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fde053a2ef29387; op2val:0xbfe0d23dd9377bc1; op3val:0x7fcf8fb2d617959b; valaddr_reg:x16; val_offset:1656; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1656, x17, x15, 1168, x18)

inst_1090:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe053a2ef29387 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x0d23dd9377bc1 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xf8fb2d617959b and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fde053a2ef29387; op2val:0xbfe0d23dd9377bc1; op3val:0x7fcf8fb2d617959b; valaddr_reg:x16; val_offset:1680; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1680, x17, x15, 1184, x18)

inst_1091:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcd42d44a09da1 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x0159563e0931a and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xcfb10ebe5bb27 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fecd42d44a09da1; op2val:0xbfc0159563e0931a; op3val:0x7fbcfb10ebe5bb27; valaddr_reg:x16; val_offset:1704; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1704, x17, x15, 1200, x18)

inst_1092:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcd42d44a09da1 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x0159563e0931a and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xcfb10ebe5bb27 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fecd42d44a09da1; op2val:0xbfc0159563e0931a; op3val:0x7fbcfb10ebe5bb27; valaddr_reg:x16; val_offset:1728; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1728, x17, x15, 1216, x18)

inst_1093:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcd42d44a09da1 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x0159563e0931a and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xcfb10ebe5bb27 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fecd42d44a09da1; op2val:0xbfc0159563e0931a; op3val:0x7fbcfb10ebe5bb27; valaddr_reg:x16; val_offset:1752; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1752, x17, x15, 1232, x18)

inst_1094:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcd42d44a09da1 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x0159563e0931a and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xcfb10ebe5bb27 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fecd42d44a09da1; op2val:0xbfc0159563e0931a; op3val:0x7fbcfb10ebe5bb27; valaddr_reg:x16; val_offset:1776; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1776, x17, x15, 1248, x18)

inst_1095:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcd42d44a09da1 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x0159563e0931a and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xcfb10ebe5bb27 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fecd42d44a09da1; op2val:0xbfc0159563e0931a; op3val:0x7fbcfb10ebe5bb27; valaddr_reg:x16; val_offset:1800; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1800, x17, x15, 1264, x18)

inst_1096:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe2ffa6cff07a7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x6039e999a6b85 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x4c46648351903 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fee2ffa6cff07a7; op2val:0xbfe6039e999a6b85; op3val:0x7fe4c46648351903; valaddr_reg:x16; val_offset:1824; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1824, x17, x15, 1280, x18)

inst_1097:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe2ffa6cff07a7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x6039e999a6b85 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x4c46648351903 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fee2ffa6cff07a7; op2val:0xbfe6039e999a6b85; op3val:0x7fe4c46648351903; valaddr_reg:x16; val_offset:1848; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1848, x17, x15, 1296, x18)

inst_1098:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe2ffa6cff07a7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x6039e999a6b85 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x4c46648351903 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fee2ffa6cff07a7; op2val:0xbfe6039e999a6b85; op3val:0x7fe4c46648351903; valaddr_reg:x16; val_offset:1872; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1872, x17, x15, 1312, x18)

inst_1099:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe2ffa6cff07a7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x6039e999a6b85 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x4c46648351903 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fee2ffa6cff07a7; op2val:0xbfe6039e999a6b85; op3val:0x7fe4c46648351903; valaddr_reg:x16; val_offset:1896; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 1896, x17, x15, 1328, x18)

inst_1100:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe2ffa6cff07a7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x6039e999a6b85 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x4c46648351903 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fee2ffa6cff07a7; op2val:0xbfe6039e999a6b85; op3val:0x7fe4c46648351903; valaddr_reg:x16; val_offset:1920; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 1920, x17, x15, 1344, x18)

inst_1101:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xdb38beb9086df and fs2 == 1 and fe2 == 0x403 and fm2 == 0x00d954e12d2fc and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xdccc2f63529c1 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f9db38beb9086df; op2val:0xc0300d954e12d2fc; op3val:0x7fddccc2f63529c1; valaddr_reg:x16; val_offset:1944; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 1944, x17, x15, 1360, x18)

inst_1102:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xdb38beb9086df and fs2 == 1 and fe2 == 0x403 and fm2 == 0x00d954e12d2fc and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xdccc2f63529c1 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f9db38beb9086df; op2val:0xc0300d954e12d2fc; op3val:0x7fddccc2f63529c1; valaddr_reg:x16; val_offset:1968; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 1968, x17, x15, 1376, x18)

inst_1103:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xdb38beb9086df and fs2 == 1 and fe2 == 0x403 and fm2 == 0x00d954e12d2fc and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xdccc2f63529c1 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f9db38beb9086df; op2val:0xc0300d954e12d2fc; op3val:0x7fddccc2f63529c1; valaddr_reg:x16; val_offset:1992; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 1992, x17, x15, 1392, x18)

inst_1104:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xdb38beb9086df and fs2 == 1 and fe2 == 0x403 and fm2 == 0x00d954e12d2fc and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xdccc2f63529c1 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f9db38beb9086df; op2val:0xc0300d954e12d2fc; op3val:0x7fddccc2f63529c1; valaddr_reg:x16; val_offset:2016; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 2016, x17, x15, 1408, x18)
addi x16,x16,2040

inst_1105:
// fs1 == 0 and fe1 == 0x7f9 and fm1 == 0xdb38beb9086df and fs2 == 1 and fe2 == 0x403 and fm2 == 0x00d954e12d2fc and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xdccc2f63529c1 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7f9db38beb9086df; op2val:0xc0300d954e12d2fc; op3val:0x7fddccc2f63529c1; valaddr_reg:x16; val_offset:0; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 0, x17, x15, 1424, x18)

inst_1106:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7ad3fc69bae31 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x3f1e4b04626ba and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd83afb61ec2c3 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe7ad3fc69bae31; op2val:0xbff3f1e4b04626ba; op3val:0x7fed83afb61ec2c3; valaddr_reg:x16; val_offset:24; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 24, x17, x15, 1440, x18)

inst_1107:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7ad3fc69bae31 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x3f1e4b04626ba and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd83afb61ec2c3 and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe7ad3fc69bae31; op2val:0xbff3f1e4b04626ba; op3val:0x7fed83afb61ec2c3; valaddr_reg:x16; val_offset:48; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 48, x17, x15, 1456, x18)

inst_1108:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7ad3fc69bae31 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x3f1e4b04626ba and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd83afb61ec2c3 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe7ad3fc69bae31; op2val:0xbff3f1e4b04626ba; op3val:0x7fed83afb61ec2c3; valaddr_reg:x16; val_offset:72; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 72, x17, x15, 1472, x18)

inst_1109:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7ad3fc69bae31 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x3f1e4b04626ba and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd83afb61ec2c3 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe7ad3fc69bae31; op2val:0xbff3f1e4b04626ba; op3val:0x7fed83afb61ec2c3; valaddr_reg:x16; val_offset:96; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 96, x17, x15, 1488, x18)

inst_1110:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7ad3fc69bae31 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x3f1e4b04626ba and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd83afb61ec2c3 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe7ad3fc69bae31; op2val:0xbff3f1e4b04626ba; op3val:0x7fed83afb61ec2c3; valaddr_reg:x16; val_offset:120; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 120, x17, x15, 1504, x18)

inst_1111:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x97239c6c3047e and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x2f682f6148f16 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe288d7f5db50b and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe97239c6c3047e; op2val:0xbff2f682f6148f16; op3val:0x7fee288d7f5db50b; valaddr_reg:x16; val_offset:144; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 144, x17, x15, 1520, x18)

inst_1112:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x97239c6c3047e and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x2f682f6148f16 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe288d7f5db50b and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe97239c6c3047e; op2val:0xbff2f682f6148f16; op3val:0x7fee288d7f5db50b; valaddr_reg:x16; val_offset:168; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 168, x17, x15, 1536, x18)

inst_1113:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x97239c6c3047e and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x2f682f6148f16 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe288d7f5db50b and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe97239c6c3047e; op2val:0xbff2f682f6148f16; op3val:0x7fee288d7f5db50b; valaddr_reg:x16; val_offset:192; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 192, x17, x15, 1552, x18)

inst_1114:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x97239c6c3047e and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x2f682f6148f16 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe288d7f5db50b and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe97239c6c3047e; op2val:0xbff2f682f6148f16; op3val:0x7fee288d7f5db50b; valaddr_reg:x16; val_offset:216; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 216, x17, x15, 1568, x18)

inst_1115:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x97239c6c3047e and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x2f682f6148f16 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe288d7f5db50b and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe97239c6c3047e; op2val:0xbff2f682f6148f16; op3val:0x7fee288d7f5db50b; valaddr_reg:x16; val_offset:240; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 240, x17, x15, 1584, x18)

inst_1116:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3eecf8905935f and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x30dc050910ea3 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x7bcb8116f23ed and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3eecf8905935f; op2val:0xbff30dc050910ea3; op3val:0x7fe7bcb8116f23ed; valaddr_reg:x16; val_offset:264; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 264, x17, x15, 1600, x18)

inst_1117:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3eecf8905935f and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x30dc050910ea3 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x7bcb8116f23ed and rm_val == 3  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3eecf8905935f; op2val:0xbff30dc050910ea3; op3val:0x7fe7bcb8116f23ed; valaddr_reg:x16; val_offset:288; rmval:0x3; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x3, 0, x16, 288, x17, x15, 1616, x18)

inst_1118:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3eecf8905935f and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x30dc050910ea3 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x7bcb8116f23ed and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3eecf8905935f; op2val:0xbff30dc050910ea3; op3val:0x7fe7bcb8116f23ed; valaddr_reg:x16; val_offset:312; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 312, x17, x15, 1632, x18)

inst_1119:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3eecf8905935f and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x30dc050910ea3 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x7bcb8116f23ed and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3eecf8905935f; op2val:0xbff30dc050910ea3; op3val:0x7fe7bcb8116f23ed; valaddr_reg:x16; val_offset:336; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 336, x17, x15, 1648, x18)

inst_1120:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3eecf8905935f and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x30dc050910ea3 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x7bcb8116f23ed and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3eecf8905935f; op2val:0xbff30dc050910ea3; op3val:0x7fe7bcb8116f23ed; valaddr_reg:x16; val_offset:360; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 360, x17, x15, 1664, x18)

inst_1121:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3d2a90fafd5bc and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x62487dae23696 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xb6eeac2960889 and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3d2a90fafd5bc; op2val:0xbfe62487dae23696; op3val:0x7fdb6eeac2960889; valaddr_reg:x16; val_offset:384; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 384, x17, x15, 1680, x18)

inst_1122:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3d2a90fafd5bc and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x62487dae23696 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xb6eeac2960889 and rm_val == 2  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3d2a90fafd5bc; op2val:0xbfe62487dae23696; op3val:0x7fdb6eeac2960889; valaddr_reg:x16; val_offset:408; rmval:0x2; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x2, 0, x16, 408, x17, x15, 1696, x18)

inst_1123:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3d2a90fafd5bc and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x62487dae23696 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xb6eeac2960889 and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3d2a90fafd5bc; op2val:0xbfe62487dae23696; op3val:0x7fdb6eeac2960889; valaddr_reg:x16; val_offset:432; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 432, x17, x15, 1712, x18)

inst_1124:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3d2a90fafd5bc and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x62487dae23696 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xb6eeac2960889 and rm_val == 0  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe3d2a90fafd5bc; op2val:0xbfe62487dae23696; op3val:0x7fdb6eeac2960889; valaddr_reg:x16; val_offset:456; rmval:0x0; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x0, 0, x16, 456, x17, x15, 1728, x18)

inst_1125:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe1789626784f5 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xe473bed6c803f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc790d5fbd094d and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fde1789626784f5; op2val:0xbffe473bed6c803f; op3val:0x7fec790d5fbd094d; valaddr_reg:x16; val_offset:480; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 480, x17, x15, 1744, x18)

inst_1126:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe1789626784f5 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xe473bed6c803f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc790d5fbd094d and rm_val == 1  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fde1789626784f5; op2val:0xbffe473bed6c803f; op3val:0x7fec790d5fbd094d; valaddr_reg:x16; val_offset:504; rmval:0x1; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x1, 0, x16, 504, x17, x15, 1760, x18)

inst_1127:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x854c40164e1cb and fs2 == 1 and fe2 == 0x3f4 and fm2 == 0x2f2490b2c03e4 and fs3 == 0 and fe3 == 0x7f3 and fm3 == 0xccfcda9e20fff and rm_val == 4  
// opcode: fmadd.d ; op1:f10; op2:f11; op3:f12; dest:f13; op1val:0x7fe854c40164e1cb; op2val:0xbf42f2490b2c03e4; op3val:0x7f3ccfcda9e20fff; valaddr_reg:x16; val_offset:528; rmval:0x4; testreg:x18
TEST_FPR4_OP(fmadd.d, f13, f10, f11, f12, 0x4, 0, x16, 528, x17, x15, 1776, x18)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_fp:
.dword 0x7fe3eecf8905935f
.dword 0xbff30dc050910ea3
.dword 0xbff30dc050910ea3
.dword 0x7fe3d2a90fafd5bc
.dword 0x7fe3d2a90fafd5bc
.dword 0x7fe3d2a90fafd5bc
.dword 0x7fe3d2a90fafd5bc
.dword 0xbfe62487dae23696
.dword 0x7fdb6eeac2960889
.dword 0x7fe3d2a90fafd5bc
.dword 0xbfe62487dae23696
.dword 0x7fe3d2a90fafd5bc
.dword 0x7fe3d2a90fafd5bc
.dword 0x7fe3d2a90fafd5bc
.dword 0x7fdb6eeac2960889
.dword 0x7fe3d2a90fafd5bc
.dword 0xbfe62487dae23696
.dword 0xbfe62487dae23696
.dword 0x7fde1789626784f5
.dword 0x7fde1789626784f5
.dword 0x7fde1789626784f5
.dword 0x7fde1789626784f5
.dword 0xbffe473bed6c803f
.dword 0x7fec790d5fbd094d
.dword 0x7fde1789626784f5
.dword 0xbffe473bed6c803f
.dword 0x7fec790d5fbd094d
.dword 0x7fde1789626784f5
.dword 0xbffe473bed6c803f
.dword 0x7fde1789626784f5
.dword 0x7fde1789626784f5
.dword 0xbffe473bed6c803f
.dword 0x7fec790d5fbd094d
.dword 0x7fe854c40164e1cb
.dword 0x7fe854c40164e1cb
.dword 0x7f3ccfcda9e20fff
.dword 0x7fe854c40164e1cb
.dword 0xbf42f2490b2c03e4
.dword 0x7f3ccfcda9e20fff
.dword 0x7fe854c40164e1cb
.dword 0xbf42f2490b2c03e4
.dword 0x7f3ccfcda9e20fff
.dword 0x7fe854c40164e1cb
.dword 0xbf42f2490b2c03e4
.dword 0x7f3ccfcda9e20fff
.dword 0x7fe854c40164e1cb
.dword 0xbf42f2490b2c03e4
.dword 0x7f3ccfcda9e20fff
.dword 0x7fec74cc0bbf9bc9
.dword 0xbfe14efc54a35241
.dword 0x7fdec892f54a3c0d
.dword 0x7fec74cc0bbf9bc9
.dword 0xbfe14efc54a35241
.dword 0x7fdec892f54a3c0d
.dword 0x7fec74cc0bbf9bc9
.dword 0xbfe14efc54a35241
.dword 0x7fdec892f54a3c0d
.dword 0x7fec74cc0bbf9bc9
.dword 0xbfe14efc54a35241
.dword 0x7fdec892f54a3c0d
.dword 0x7fec74cc0bbf9bc9
.dword 0xbfe14efc54a35241
.dword 0x7fdec892f54a3c0d
.dword 0x7fc9e87d53212bbf
.dword 0xbfc8f31cea8dbcda
.dword 0x7fa43332df5ca32f
.dword 0x7fc9e87d53212bbf
.dword 0xbfc8f31cea8dbcda
.dword 0x7fa43332df5ca32f
.dword 0x7fc9e87d53212bbf
.dword 0xbfc8f31cea8dbcda
.dword 0x7fa43332df5ca32f
.dword 0x7fc9e87d53212bbf
.dword 0xbfc8f31cea8dbcda
.dword 0x7fa43332df5ca32f
.dword 0x7fc9e87d53212bbf
.dword 0xbfc8f31cea8dbcda
.dword 0x7fa43332df5ca32f
.dword 0x7fb8d4e9012ff0f7
.dword 0xbfd5e1facaee3c96
.dword 0x7fa0fb148bed05df
.dword 0x7fb8d4e9012ff0f7
.dword 0xbfd5e1facaee3c96
.dword 0x7fa0fb148bed05df
.dword 0x7fb8d4e9012ff0f7
.dword 0xbfd5e1facaee3c96
.dword 0x7fa0fb148bed05df
.dword 0x7fb8d4e9012ff0f7
.dword 0xbfd5e1facaee3c96
.dword 0x7fa0fb148bed05df
.dword 0x7fb8d4e9012ff0f7
.dword 0xbfd5e1facaee3c96
.dword 0x7fa0fb148bed05df
.dword 0x7fe7af6414b8de5c
.dword 0xbfe11974707ea538
.dword 0x7fd95008c08199b3
.dword 0x7fe7af6414b8de5c
.dword 0xbfe11974707ea538
.dword 0x7fd95008c08199b3
.dword 0x7fe7af6414b8de5c
.dword 0xbfe11974707ea538
.dword 0x7fd95008c08199b3
.dword 0x7fe7af6414b8de5c
.dword 0xbfe11974707ea538
.dword 0x7fd95008c08199b3
.dword 0x7fe7af6414b8de5c
.dword 0xbfe11974707ea538
.dword 0x7fd95008c08199b3
.dword 0x7fe2f6cc7ff8e7a5
.dword 0xbfeef4446de4f279
.dword 0x7fe258221cdc09b9
.dword 0x7fe2f6cc7ff8e7a5
.dword 0xbfeef4446de4f279
.dword 0x7fe258221cdc09b9
.dword 0x7fe2f6cc7ff8e7a5
.dword 0xbfeef4446de4f279
.dword 0x7fe258221cdc09b9
.dword 0x7fe2f6cc7ff8e7a5
.dword 0xbfeef4446de4f279
.dword 0x7fe258221cdc09b9
.dword 0x7fe2f6cc7ff8e7a5
.dword 0xbfeef4446de4f279
.dword 0x7fe258221cdc09b9
.dword 0x7feb401c9972e963
.dword 0xbfe3722ab15268d0
.dword 0x7fe08f49bc253915
.dword 0x7feb401c9972e963
.dword 0xbfe3722ab15268d0
.dword 0x7fe08f49bc253915
.dword 0x7feb401c9972e963
.dword 0xbfe3722ab15268d0
.dword 0x7fe08f49bc253915
.dword 0x7feb401c9972e963
.dword 0xbfe3722ab15268d0
.dword 0x7fe08f49bc253915
.dword 0x7feb401c9972e963
.dword 0xbfe3722ab15268d0
.dword 0x7fe08f49bc253915
.dword 0x7fe9be7d76867e32
.dword 0xbfe13d1e497fb88a
.dword 0x7fdbbcbc47b0a26f
.dword 0x7fe9be7d76867e32
.dword 0xbfe13d1e497fb88a
.dword 0x7fdbbcbc47b0a26f
.dword 0x7fe9be7d76867e32
.dword 0xbfe13d1e497fb88a
.dword 0x7fdbbcbc47b0a26f
.dword 0x7fe9be7d76867e32
.dword 0xbfe13d1e497fb88a
.dword 0x7fdbbcbc47b0a26f
.dword 0x7fe9be7d76867e32
.dword 0xbfe13d1e497fb88a
.dword 0x7fdbbcbc47b0a26f
.dword 0x7fea98601d6ee96c
.dword 0xbfe8f2202ff70d62
.dword 0x7fe4bb832d2f03b6
.dword 0x7fea98601d6ee96c
.dword 0xbfe8f2202ff70d62
.dword 0x7fe4bb832d2f03b6
.dword 0x7fea98601d6ee96c
.dword 0xbfe8f2202ff70d62
.dword 0x7fe4bb832d2f03b6
.dword 0x7fea98601d6ee96c
.dword 0xbfe8f2202ff70d62
.dword 0x7fe4bb832d2f03b6
.dword 0x7fea98601d6ee96c
.dword 0xbfe8f2202ff70d62
.dword 0x7fe4bb832d2f03b6
.dword 0x7fd8b0182b066dad
.dword 0xbfd6a270f2c744d0
.dword 0x7fc176633b90457b
.dword 0x7fd8b0182b066dad
.dword 0xbfd6a270f2c744d0
.dword 0x7fc176633b90457b
.dword 0x7fd8b0182b066dad
.dword 0xbfd6a270f2c744d0
.dword 0x7fc176633b90457b
.dword 0x7fd8b0182b066dad
.dword 0xbfd6a270f2c744d0
.dword 0x7fc176633b90457b
.dword 0x7fd8b0182b066dad
.dword 0xbfd6a270f2c744d0
.dword 0x7fc176633b90457b
.dword 0x7fe3a3e67ed240bf
.dword 0xbfe22dd2fe5ccaa5
.dword 0x7fd650a3465e4aff
.dword 0x7fe3a3e67ed240bf
.dword 0xbfe22dd2fe5ccaa5
.dword 0x7fd650a3465e4aff
.dword 0x7fe3a3e67ed240bf
.dword 0xbfe22dd2fe5ccaa5
.dword 0x7fd650a3465e4aff
.dword 0x7fe3a3e67ed240bf
.dword 0xbfe22dd2fe5ccaa5
.dword 0x7fd650a3465e4aff
.dword 0x7fe3a3e67ed240bf
.dword 0xbfe22dd2fe5ccaa5
.dword 0x7fd650a3465e4aff
.dword 0x7fce1518f4a30787
.dword 0xbff6b04610dc37ca
.dword 0x7fd554370f71bef3
.dword 0x7fce1518f4a30787
.dword 0xbff6b04610dc37ca
.dword 0x7fd554370f71bef3
.dword 0x7fce1518f4a30787
.dword 0xbff6b04610dc37ca
.dword 0x7fd554370f71bef3
.dword 0x7fce1518f4a30787
.dword 0xbff6b04610dc37ca
.dword 0x7fd554370f71bef3
.dword 0x7fce1518f4a30787
.dword 0xbff6b04610dc37ca
.dword 0x7fd554370f71bef3
.dword 0x7fe3fe574580e3e3
.dword 0xbfe2255d0d101768
.dword 0x7fd6acd29eafc0eb
.dword 0x7fe3fe574580e3e3
.dword 0xbfe2255d0d101768
.dword 0x7fd6acd29eafc0eb
.dword 0x7fe3fe574580e3e3
.dword 0xbfe2255d0d101768
.dword 0x7fd6acd29eafc0eb
.dword 0x7fe3fe574580e3e3
.dword 0xbfe2255d0d101768
.dword 0x7fd6acd29eafc0eb
.dword 0x7fe3fe574580e3e3
.dword 0xbfe2255d0d101768
.dword 0x7fd6acd29eafc0eb
.dword 0x7fea4252ecd893af
.dword 0xbfc5cd18d027b375
.dword 0x7fc1e3d3ab394d1b
.dword 0x7fea4252ecd893af
.dword 0xbfc5cd18d027b375
.dword 0x7fc1e3d3ab394d1b
.dword 0x7fea4252ecd893af
.dword 0xbfc5cd18d027b375
.dword 0x7fc1e3d3ab394d1b
.dword 0x7fea4252ecd893af
.dword 0xbfc5cd18d027b375
.dword 0x7fc1e3d3ab394d1b
.dword 0x7fea4252ecd893af
.dword 0xbfc5cd18d027b375
.dword 0x7fc1e3d3ab394d1b
.dword 0x7fef20566fa54831
.dword 0xbfe5e11e69822d9d
.dword 0x7fe54831adf73d8a
.dword 0x7fef20566fa54831
.dword 0xbfe5e11e69822d9d
.dword 0x7fe54831adf73d8a
.dword 0x7fef20566fa54831
.dword 0xbfe5e11e69822d9d
.dword 0x7fe54831adf73d8a
.dword 0x7fef20566fa54831
.dword 0xbfe5e11e69822d9d
.dword 0x7fe54831adf73d8a
.dword 0x7fef20566fa54831
.dword 0xbfe5e11e69822d9d
.dword 0x7fe54831adf73d8a
.dword 0x7fcc8e25fbfe6477
.dword 0xbfe0a67be484276b
.dword 0x7fbdb745e2ae4d57
.dword 0x7fcc8e25fbfe6477
.dword 0xbfe0a67be484276b
.dword 0x7fbdb745e2ae4d57
.dword 0x7fcc8e25fbfe6477
.dword 0xbfe0a67be484276b
.dword 0x7fbdb745e2ae4d57
.dword 0x7fcc8e25fbfe6477
.dword 0xbfe0a67be484276b
.dword 0x7fbdb745e2ae4d57
.dword 0x7fcc8e25fbfe6477
.dword 0xbfe0a67be484276b
.dword 0x7fbdb745e2ae4d57
.dword 0x7fee771fa9b7a387
.dword 0xbfe6e4bf34643a40
.dword 0x7fe5cbac8f2d7906
.dword 0x7fee771fa9b7a387
.dword 0xbfe6e4bf34643a40
.dword 0x7fe5cbac8f2d7906
.dword 0x7fee771fa9b7a387
.dword 0xbfe6e4bf34643a40
.dword 0x7fe5cbac8f2d7906
.dword 0x7fee771fa9b7a387
.dword 0xbfe6e4bf34643a40
.dword 0x7fe5cbac8f2d7906
.dword 0x7fee771fa9b7a387
.dword 0xbfe6e4bf34643a40
.dword 0x7fe5cbac8f2d7906
.dword 0x7fab7937b6499ddf
.dword 0xc0067b984f0ba3f1
.dword 0x7fc34d72ff1d2953
.dword 0x7fab7937b6499ddf
.dword 0xc0067b984f0ba3f1
.dword 0x7fc34d72ff1d2953
.dword 0x7fab7937b6499ddf
.dword 0xc0067b984f0ba3f1
.dword 0x7fc34d72ff1d2953
.dword 0x7fab7937b6499ddf
.dword 0xc0067b984f0ba3f1
.dword 0x7fc34d72ff1d2953
.dword 0x7fab7937b6499ddf
.dword 0xc0067b984f0ba3f1
.dword 0x7fc34d72ff1d2953
.dword 0x7f9e2b04c5638f5f
.dword 0xc0389beaa54667bb
.dword 0x7fe733412989d9ad
.dword 0x7f9e2b04c5638f5f
.dword 0xc0389beaa54667bb
.dword 0x7fe733412989d9ad
.dword 0x7f9e2b04c5638f5f
.dword 0xc0389beaa54667bb
.dword 0x7fe733412989d9ad
.dword 0x7f9e2b04c5638f5f
.dword 0xc0389beaa54667bb
.dword 0x7fe733412989d9ad
.dword 0x7f9e2b04c5638f5f
.dword 0xc0389beaa54667bb
.dword 0x7fe733412989d9ad
.dword 0x7fd4b0b8c0dc4fab
.dword 0xc003b58d3c19b43c
.dword 0x7fe97ca1321f707c
.dword 0x7fd4b0b8c0dc4fab
.dword 0xc003b58d3c19b43c
.dword 0x7fe97ca1321f707c
.dword 0x7fd4b0b8c0dc4fab
.dword 0xc003b58d3c19b43c
.dword 0x7fe97ca1321f707c
.dword 0x7fd4b0b8c0dc4fab
.dword 0xc003b58d3c19b43c
.dword 0x7fe97ca1321f707c
.dword 0x7fd4b0b8c0dc4fab
.dword 0xc003b58d3c19b43c
.dword 0x7fe97ca1321f707c
.dword 0x7fec0fc879d9bd20
.dword 0xbfe1886525f3e59b
.dword 0x7fdebffc8fb4d6e9
.dword 0x7fec0fc879d9bd20
.dword 0xbfe1886525f3e59b
.dword 0x7fdebffc8fb4d6e9
.dword 0x7fec0fc879d9bd20
.dword 0xbfe1886525f3e59b
.dword 0x7fdebffc8fb4d6e9
.dword 0x7fec0fc879d9bd20
.dword 0xbfe1886525f3e59b
.dword 0x7fdebffc8fb4d6e9
.dword 0x7fec0fc879d9bd20
.dword 0xbfe1886525f3e59b
.dword 0x7fdebffc8fb4d6e9
.dword 0x7fe301d64dd062a4
.dword 0xbfd9b50e7b846e96
.dword 0x7fce89f4d63cd58f
.dword 0x7fe301d64dd062a4
.dword 0xbfd9b50e7b846e96
.dword 0x7fce89f4d63cd58f
.dword 0x7fe301d64dd062a4
.dword 0xbfd9b50e7b846e96
.dword 0x7fce89f4d63cd58f
.dword 0x7fe301d64dd062a4
.dword 0xbfd9b50e7b846e96
.dword 0x7fce89f4d63cd58f
.dword 0x7fe301d64dd062a4
.dword 0xbfd9b50e7b846e96
.dword 0x7fce89f4d63cd58f
.dword 0x7fb757759ba0d957
.dword 0xbff5e60311171edb
.dword 0x7fbff2581034fa57
.dword 0x7fb757759ba0d957
.dword 0xbff5e60311171edb
.dword 0x7fbff2581034fa57
.dword 0x7fb757759ba0d957
.dword 0xbff5e60311171edb
.dword 0x7fbff2581034fa57
.dword 0x7fb757759ba0d957
.dword 0xbff5e60311171edb
.dword 0x7fbff2581034fa57
.dword 0x7fb757759ba0d957
.dword 0xbff5e60311171edb
.dword 0x7fbff2581034fa57
.dword 0x7fb5d2823257dd0f
.dword 0xc01f57e62f78053d
.dword 0x7fe55fdf6c24cf14
.dword 0x7fb5d2823257dd0f
.dword 0xc01f57e62f78053d
.dword 0x7fe55fdf6c24cf14
.dword 0x7fb5d2823257dd0f
.dword 0xc01f57e62f78053d
.dword 0x7fe55fdf6c24cf14
.dword 0x7fb5d2823257dd0f
.dword 0xc01f57e62f78053d
.dword 0x7fe55fdf6c24cf14
.dword 0x7fb5d2823257dd0f
.dword 0xc01f57e62f78053d
.dword 0x7fe55fdf6c24cf14
.dword 0x7fe6d352c81323cd
.dword 0xbfed62a44832769d
.dword 0x7fe4f5df615dcd80
.dword 0x7fe6d352c81323cd
.dword 0xbfed62a44832769d
.dword 0x7fe4f5df615dcd80
.dword 0x7fe6d352c81323cd
.dword 0xbfed62a44832769d
.dword 0x7fe4f5df615dcd80
.dword 0x7fe6d352c81323cd
.dword 0xbfed62a44832769d
.dword 0x7fe4f5df615dcd80
.dword 0x7fe6d352c81323cd
.dword 0xbfed62a44832769d
.dword 0x7fe4f5df615dcd80
.dword 0x7fe7937acd8e3cbf
.dword 0xbfcf277f3bb58051
.dword 0x7fc6f3f872195323
.dword 0x7fe7937acd8e3cbf
.dword 0xbfcf277f3bb58051
.dword 0x7fc6f3f872195323
.dword 0x7fe7937acd8e3cbf
.dword 0xbfcf277f3bb58051
.dword 0x7fc6f3f872195323
.dword 0x7fe7937acd8e3cbf
.dword 0xbfcf277f3bb58051
.dword 0x7fc6f3f872195323
.dword 0x7fe7937acd8e3cbf
.dword 0xbfcf277f3bb58051
.dword 0x7fc6f3f872195323
.dword 0x7fce017c1dd0e81f
.dword 0xbff9562eda3c52fd
.dword 0x7fd7c1f8e3a06fc9
.dword 0x7fce017c1dd0e81f
.dword 0xbff9562eda3c52fd
.dword 0x7fd7c1f8e3a06fc9
.dword 0x7fce017c1dd0e81f
.dword 0xbff9562eda3c52fd
.dword 0x7fd7c1f8e3a06fc9
.dword 0x7fce017c1dd0e81f
.dword 0xbff9562eda3c52fd
.dword 0x7fd7c1f8e3a06fc9
.dword 0x7fce017c1dd0e81f
.dword 0xbff9562eda3c52fd
.dword 0x7fd7c1f8e3a06fc9
.dword 0x7fe08b3a93e68164
.dword 0xbfd08f9ec7d021e2
.dword 0x7fc11fbb1cedaf9f
.dword 0x7fe08b3a93e68164
.dword 0xbfd08f9ec7d021e2
.dword 0x7fc11fbb1cedaf9f
.dword 0x7fe08b3a93e68164
.dword 0xbfd08f9ec7d021e2
.dword 0x7fc11fbb1cedaf9f
.dword 0x7fe08b3a93e68164
.dword 0xbfd08f9ec7d021e2
.dword 0x7fc11fbb1cedaf9f
.dword 0x7fe08b3a93e68164
.dword 0xbfd08f9ec7d021e2
.dword 0x7fc11fbb1cedaf9f
.dword 0x7fd044a736a92e57
.dword 0xc0079f6133cbdfa9
.dword 0x7fe804bd71223eac
.dword 0x7fd044a736a92e57
.dword 0xc0079f6133cbdfa9
.dword 0x7fe804bd71223eac
.dword 0x7fd044a736a92e57
.dword 0xc0079f6133cbdfa9
.dword 0x7fe804bd71223eac
.dword 0x7fd044a736a92e57
.dword 0xc0079f6133cbdfa9
.dword 0x7fe804bd71223eac
.dword 0x7fd044a736a92e57
.dword 0xc0079f6133cbdfa9
.dword 0x7fe804bd71223eac
.dword 0x7fd0d908c88167b9
.dword 0xc000c3e8bc692402
.dword 0x7fe1a752f4f14996
.dword 0x7fd0d908c88167b9
.dword 0xc000c3e8bc692402
.dword 0x7fe1a752f4f14996
.dword 0x7fd0d908c88167b9
.dword 0xc000c3e8bc692402
.dword 0x7fe1a752f4f14996
.dword 0x7fd0d908c88167b9
.dword 0xc000c3e8bc692402
.dword 0x7fe1a752f4f14996
.dword 0x7fd0d908c88167b9
.dword 0xc000c3e8bc692402
.dword 0x7fe1a752f4f14996
.dword 0x7fe1c1aa7e3314b1
.dword 0xbff1e717678a9551
.dword 0x7fe3de3b2ce1e281
.dword 0x7fe1c1aa7e3314b1
.dword 0xbff1e717678a9551
.dword 0x7fe3de3b2ce1e281
.dword 0x7fe1c1aa7e3314b1
.dword 0xbff1e717678a9551
.dword 0x7fe3de3b2ce1e281
.dword 0x7fe1c1aa7e3314b1
.dword 0xbff1e717678a9551
.dword 0x7fe3de3b2ce1e281
.dword 0x7fe1c1aa7e3314b1
.dword 0xbff1e717678a9551
.dword 0x7fe3de3b2ce1e281
.dword 0x7fe02fdff92933c4
.dword 0xbffccc040bf7de2b
.dword 0x7fed222e73c49406
.dword 0x7fe02fdff92933c4
.dword 0xbffccc040bf7de2b
.dword 0x7fed222e73c49406
.dword 0x7fe02fdff92933c4
.dword 0xbffccc040bf7de2b
.dword 0x7fed222e73c49406
.dword 0x7fe02fdff92933c4
.dword 0xbffccc040bf7de2b
.dword 0x7fed222e73c49406
.dword 0x7fe02fdff92933c4
.dword 0xbffccc040bf7de2b
.dword 0x7fed222e73c49406
.dword 0x7fc3578be9192ed7
.dword 0xc010b659dcfe6383
.dword 0x7fe433fc62b637c6
.dword 0x7fc3578be9192ed7
.dword 0xc010b659dcfe6383
.dword 0x7fe433fc62b637c6
.dword 0x7fc3578be9192ed7
.dword 0xc010b659dcfe6383
.dword 0x7fe433fc62b637c6
.dword 0x7fc3578be9192ed7
.dword 0xc010b659dcfe6383
.dword 0x7fe433fc62b637c6
.dword 0x7fc3578be9192ed7
.dword 0xc010b659dcfe6383
.dword 0x7fe433fc62b637c6
.dword 0x7fac8b6c88d8cc8f
.dword 0xc02903ba9163be01
.dword 0x7fe65040492dcc30
.dword 0x7fac8b6c88d8cc8f
.dword 0xc02903ba9163be01
.dword 0x7fe65040492dcc30
.dword 0x7fac8b6c88d8cc8f
.dword 0xc02903ba9163be01
.dword 0x7fe65040492dcc30
.dword 0x7fac8b6c88d8cc8f
.dword 0xc02903ba9163be01
.dword 0x7fe65040492dcc30
.dword 0x7fac8b6c88d8cc8f
.dword 0xc02903ba9163be01
.dword 0x7fe65040492dcc30
.dword 0x7fee0880de9fe705
.dword 0xbfd9845adb5f7a0a
.dword 0x7fd7f2dd07517ff3
.dword 0x7fee0880de9fe705
.dword 0xbfd9845adb5f7a0a
.dword 0x7fd7f2dd07517ff3
.dword 0x7fee0880de9fe705
.dword 0xbfd9845adb5f7a0a
.dword 0x7fd7f2dd07517ff3
.dword 0x7fee0880de9fe705
.dword 0xbfd9845adb5f7a0a
.dword 0x7fd7f2dd07517ff3
.dword 0x7fee0880de9fe705
.dword 0xbfd9845adb5f7a0a
.dword 0x7fd7f2dd07517ff3
.dword 0x7fe334fb99f530be
.dword 0xbfea19f8d728d0fc
.dword 0x7fdf55465ad3c4e3
.dword 0x7fe334fb99f530be
.dword 0xbfea19f8d728d0fc
.dword 0x7fdf55465ad3c4e3
.dword 0x7fe334fb99f530be
.dword 0xbfea19f8d728d0fc
.dword 0x7fdf55465ad3c4e3
.dword 0x7fe334fb99f530be
.dword 0xbfea19f8d728d0fc
.dword 0x7fdf55465ad3c4e3
.dword 0x7fe334fb99f530be
.dword 0xbfea19f8d728d0fc
.dword 0x7fdf55465ad3c4e3
.dword 0x7fdba07d50bb43b9
.dword 0xbfe751b9ae3bf5f5
.dword 0x7fd421e89d7bdb11
.dword 0x7fdba07d50bb43b9
.dword 0xbfe751b9ae3bf5f5
.dword 0x7fd421e89d7bdb11
.dword 0x7fdba07d50bb43b9
.dword 0xbfe751b9ae3bf5f5
.dword 0x7fd421e89d7bdb11
.dword 0x7fdba07d50bb43b9
.dword 0xbfe751b9ae3bf5f5
.dword 0x7fd421e89d7bdb11
.dword 0x7fdba07d50bb43b9
.dword 0xbfe751b9ae3bf5f5
.dword 0x7fd421e89d7bdb11
.dword 0x7fec1c521a7eb065
.dword 0xbfc392da6532199c
.dword 0x7fc131d1d028d523
.dword 0x7fec1c521a7eb065
.dword 0xbfc392da6532199c
.dword 0x7fc131d1d028d523
.dword 0x7fec1c521a7eb065
.dword 0xbfc392da6532199c
.dword 0x7fc131d1d028d523
.dword 0x7fec1c521a7eb065
.dword 0xbfc392da6532199c
.dword 0x7fc131d1d028d523
.dword 0x7fec1c521a7eb065
.dword 0xbfc392da6532199c
.dword 0x7fc131d1d028d523
.dword 0x7fe2687ea87931ce
.dword 0xbff4a5ace34f346b
.dword 0x7fe7c13ad5981860
.dword 0x7fe2687ea87931ce
.dword 0xbff4a5ace34f346b
.dword 0x7fe7c13ad5981860
.dword 0x7fe2687ea87931ce
.dword 0xbff4a5ace34f346b
.dword 0x7fe7c13ad5981860
.dword 0x7fe2687ea87931ce
.dword 0xbff4a5ace34f346b
.dword 0x7fe7c13ad5981860
.dword 0x7fe2687ea87931ce
.dword 0xbff4a5ace34f346b
.dword 0x7fe7c13ad5981860
.dword 0x7fb26ed9a8f4b2cf
.dword 0xbfe994d509fd4dc7
.dword 0x7fad78aae48cf4ef
.dword 0x7fb26ed9a8f4b2cf
.dword 0xbfe994d509fd4dc7
.dword 0x7fad78aae48cf4ef
.dword 0x7fb26ed9a8f4b2cf
.dword 0xbfe994d509fd4dc7
.dword 0x7fad78aae48cf4ef
.dword 0x7fb26ed9a8f4b2cf
.dword 0xbfe994d509fd4dc7
.dword 0x7fad78aae48cf4ef
.dword 0x7fb26ed9a8f4b2cf
.dword 0xbfe994d509fd4dc7
.dword 0x7fad78aae48cf4ef
.dword 0x7fbbb3f5b5207447
.dword 0xc00c087849016946
.dword 0x7fd844cc1df6d65d
.dword 0x7fbbb3f5b5207447
.dword 0xc00c087849016946
.dword 0x7fd844cc1df6d65d
.dword 0x7fbbb3f5b5207447
.dword 0xc00c087849016946
.dword 0x7fd844cc1df6d65d
.dword 0x7fbbb3f5b5207447
.dword 0xc00c087849016946
.dword 0x7fd844cc1df6d65d
.dword 0x7fbbb3f5b5207447
.dword 0xc00c087849016946
.dword 0x7fd844cc1df6d65d
.dword 0x7fe3eabdfcda410e
.dword 0xbfb1eaf1be01e8cd
.dword 0x7fa64ddfe38d7e3f
.dword 0x7fe3eabdfcda410e
.dword 0xbfb1eaf1be01e8cd
.dword 0x7fa64ddfe38d7e3f
.dword 0x7fe3eabdfcda410e
.dword 0xbfb1eaf1be01e8cd
.dword 0x7fa64ddfe38d7e3f
.dword 0x7fe3eabdfcda410e
.dword 0xbfb1eaf1be01e8cd
.dword 0x7fa64ddfe38d7e3f
.dword 0x7fe3eabdfcda410e
.dword 0xbfb1eaf1be01e8cd
.dword 0x7fa64ddfe38d7e3f
.dword 0x7fda7dee766a9c05
.dword 0xbfd8eba83eb506d5
.dword 0x7fc4a18af1135d97
.dword 0x7fda7dee766a9c05
.dword 0xbfd8eba83eb506d5
.dword 0x7fc4a18af1135d97
.dword 0x7fda7dee766a9c05
.dword 0xbfd8eba83eb506d5
.dword 0x7fc4a18af1135d97
.dword 0x7fda7dee766a9c05
.dword 0xbfd8eba83eb506d5
.dword 0x7fc4a18af1135d97
.dword 0x7fda7dee766a9c05
.dword 0xbfd8eba83eb506d5
.dword 0x7fc4a18af1135d97
.dword 0x7fc32a5a52edeb6b
.dword 0xc0104ff5f3321d9e
.dword 0x7fe38a220cbdbba0
.dword 0x7fc32a5a52edeb6b
.dword 0xc0104ff5f3321d9e
.dword 0x7fe38a220cbdbba0
.dword 0x7fc32a5a52edeb6b
.dword 0xc0104ff5f3321d9e
.dword 0x7fe38a220cbdbba0
.dword 0x7fc32a5a52edeb6b
.dword 0xc0104ff5f3321d9e
.dword 0x7fe38a220cbdbba0
.dword 0x7fc32a5a52edeb6b
.dword 0xc0104ff5f3321d9e
.dword 0x7fe38a220cbdbba0
.dword 0x7fd2b8342da56cc9
.dword 0xc0091bb5b7667690
.dword 0x7fed603cf9c07b4f
.dword 0x7fd2b8342da56cc9
.dword 0xc0091bb5b7667690
.dword 0x7fed603cf9c07b4f
.dword 0x7fd2b8342da56cc9
.dword 0xc0091bb5b7667690
.dword 0x7fed603cf9c07b4f
.dword 0x7fd2b8342da56cc9
.dword 0xc0091bb5b7667690
.dword 0x7fed603cf9c07b4f
.dword 0x7fd2b8342da56cc9
.dword 0xc0091bb5b7667690
.dword 0x7fed603cf9c07b4f
.dword 0x7fe6cc56079452a4
.dword 0xbfc82ff5dfc297a3
.dword 0x7fc13b6bcfe7a433
.dword 0x7fe6cc56079452a4
.dword 0xbfc82ff5dfc297a3
.dword 0x7fc13b6bcfe7a433
.dword 0x7fe6cc56079452a4
.dword 0xbfc82ff5dfc297a3
.dword 0x7fc13b6bcfe7a433
.dword 0x7fe6cc56079452a4
.dword 0xbfc82ff5dfc297a3
.dword 0x7fc13b6bcfe7a433
.dword 0x7fe6cc56079452a4
.dword 0xbfc82ff5dfc297a3
.dword 0x7fc13b6bcfe7a433
.dword 0x7fe4a9e1874c223f
.dword 0xbff798381c88996d
.dword 0x7fee78ca8871d2d9
.dword 0x7fe4a9e1874c223f
.dword 0xbff798381c88996d
.dword 0x7fee78ca8871d2d9
.dword 0x7fe4a9e1874c223f
.dword 0xbff798381c88996d
.dword 0x7fee78ca8871d2d9
.dword 0x7fe4a9e1874c223f
.dword 0xbff798381c88996d
.dword 0x7fee78ca8871d2d9
.dword 0x7fe4a9e1874c223f
.dword 0xbff798381c88996d
.dword 0x7fee78ca8871d2d9
.dword 0x7feaf22d587d4b04
.dword 0xbfd0a9988863bc52
.dword 0x7fcc0fcc39d53823
.dword 0x7feaf22d587d4b04
.dword 0xbfd0a9988863bc52
.dword 0x7fcc0fcc39d53823
.dword 0x7feaf22d587d4b04
.dword 0xbfd0a9988863bc52
.dword 0x7fcc0fcc39d53823
.dword 0x7feaf22d587d4b04
.dword 0xbfd0a9988863bc52
.dword 0x7fcc0fcc39d53823
.dword 0x7feaf22d587d4b04
.dword 0xbfd0a9988863bc52
.dword 0x7fcc0fcc39d53823
.dword 0x7fe6709ff5f25f26
.dword 0xbfb1d95904baffc5
.dword 0x7fa9087e47e5604f
.dword 0x7fe6709ff5f25f26
.dword 0xbfb1d95904baffc5
.dword 0x7fa9087e47e5604f
.dword 0x7fe6709ff5f25f26
.dword 0xbfb1d95904baffc5
.dword 0x7fa9087e47e5604f
.dword 0x7fe6709ff5f25f26
.dword 0xbfb1d95904baffc5
.dword 0x7fa9087e47e5604f
.dword 0x7fe6709ff5f25f26
.dword 0xbfb1d95904baffc5
.dword 0x7fa9087e47e5604f
.dword 0x7fef516548465a7f
.dword 0xbff0523ba07c099e
.dword 0x7feff25b259efc09
.dword 0x7fef516548465a7f
.dword 0xbff0523ba07c099e
.dword 0x7feff25b259efc09
.dword 0x7fef516548465a7f
.dword 0xbff0523ba07c099e
.dword 0x7feff25b259efc09
.dword 0x7fef516548465a7f
.dword 0xbff0523ba07c099e
.dword 0x7feff25b259efc09
.dword 0x7fef516548465a7f
.dword 0xbff0523ba07c099e
.dword 0x7feff25b259efc09
.dword 0x7f9a2aa7aaa16f3f
.dword 0xc03c472e2120c319
.dword 0x7fe71f8711b7a3e6
.dword 0x7f9a2aa7aaa16f3f
.dword 0xc03c472e2120c319
.dword 0x7fe71f8711b7a3e6
.dword 0x7f9a2aa7aaa16f3f
.dword 0xc03c472e2120c319
.dword 0x7fe71f8711b7a3e6
.dword 0x7f9a2aa7aaa16f3f
.dword 0xc03c472e2120c319
.dword 0x7fe71f8711b7a3e6
.dword 0x7f9a2aa7aaa16f3f
.dword 0xc03c472e2120c319
.dword 0x7fe71f8711b7a3e6
.dword 0x7fe9560528406d76
.dword 0xbfead2149bedf2cb
.dword 0x7fe53c3903c4c733
.dword 0x7fe9560528406d76
.dword 0xbfead2149bedf2cb
.dword 0x7fe53c3903c4c733
.dword 0x7fe9560528406d76
.dword 0xbfead2149bedf2cb
.dword 0x7fe53c3903c4c733
.dword 0x7fe9560528406d76
.dword 0xbfead2149bedf2cb
.dword 0x7fe53c3903c4c733
.dword 0x7fe9560528406d76
.dword 0xbfead2149bedf2cb
.dword 0x7fe53c3903c4c733
.dword 0x7fcd71456446788f
.dword 0xc00c8156304f48af
.dword 0x7fea3a1ca4573daa
.dword 0x7fcd71456446788f
.dword 0xc00c8156304f48af
.dword 0x7fea3a1ca4573daa
.dword 0x7fcd71456446788f
.dword 0xc00c8156304f48af
.dword 0x7fea3a1ca4573daa
.dword 0x7fcd71456446788f
.dword 0xc00c8156304f48af
.dword 0x7fea3a1ca4573daa
.dword 0x7fcd71456446788f
.dword 0xc00c8156304f48af
.dword 0x7fea3a1ca4573daa
.dword 0x7fe9fa745031b828
.dword 0xbfb5934859e5a768
.dword 0x7fb183ed9771bd67
.dword 0x7fe9fa745031b828
.dword 0xbfb5934859e5a768
.dword 0x7fb183ed9771bd67
.dword 0x7fe9fa745031b828
.dword 0xbfb5934859e5a768
.dword 0x7fb183ed9771bd67
.dword 0x7fe9fa745031b828
.dword 0xbfb5934859e5a768
.dword 0x7fb183ed9771bd67
.dword 0x7fe9fa745031b828
.dword 0xbfb5934859e5a768
.dword 0x7fb183ed9771bd67
.dword 0x7fc3a6cc16cf18c7
.dword 0xc00e870a12fb73fb
.dword 0x7fe2bf4d322a6663
.dword 0x7fc3a6cc16cf18c7
.dword 0xc00e870a12fb73fb
.dword 0x7fe2bf4d322a6663
.dword 0x7fc3a6cc16cf18c7
.dword 0xc00e870a12fb73fb
.dword 0x7fe2bf4d322a6663
.dword 0x7fc3a6cc16cf18c7
.dword 0xc00e870a12fb73fb
.dword 0x7fe2bf4d322a6663
.dword 0x7fc3a6cc16cf18c7
.dword 0xc00e870a12fb73fb
.dword 0x7fe2bf4d322a6663
.dword 0x7fdfda0547c88b3d
.dword 0xbfe54408d47465ab
.dword 0x7fd52acb8c4db5fb
.dword 0x7fdfda0547c88b3d
.dword 0xbfe54408d47465ab
.dword 0x7fd52acb8c4db5fb
.dword 0x7fdfda0547c88b3d
.dword 0xbfe54408d47465ab
.dword 0x7fd52acb8c4db5fb
.dword 0x7fdfda0547c88b3d
.dword 0xbfe54408d47465ab
.dword 0x7fd52acb8c4db5fb
.dword 0x7fdfda0547c88b3d
.dword 0xbfe54408d47465ab
.dword 0x7fd52acb8c4db5fb
.dword 0x7fde9e4fed8fd631
.dword 0xbff25d291c01d853
.dword 0x7fe19230638e04c1
.dword 0x7fde9e4fed8fd631
.dword 0xbff25d291c01d853
.dword 0x7fe19230638e04c1
.dword 0x7fde9e4fed8fd631
.dword 0xbff25d291c01d853
.dword 0x7fe19230638e04c1
.dword 0x7fde9e4fed8fd631
.dword 0xbff25d291c01d853
.dword 0x7fe19230638e04c1
.dword 0x7fde9e4fed8fd631
.dword 0xbff25d291c01d853
.dword 0x7fe19230638e04c1
.dword 0x7fed2441313e69d8
.dword 0xbfc40e12b2f0404e
.dword 0x7fc24379a2a5ae43
.dword 0x7fed2441313e69d8
.dword 0xbfc40e12b2f0404e
.dword 0x7fc24379a2a5ae43
.dword 0x7fed2441313e69d8
.dword 0xbfc40e12b2f0404e
.dword 0x7fc24379a2a5ae43
.dword 0x7fed2441313e69d8
.dword 0xbfc40e12b2f0404e
.dword 0x7fc24379a2a5ae43
.dword 0x7fed2441313e69d8
.dword 0xbfc40e12b2f0404e
.dword 0x7fc24379a2a5ae43
.dword 0x7fd253bd6d2fe97d
.dword 0xc005cfa06072e1a1
.dword 0x7fe8fbbbb5e3c9d7
.dword 0x7fd253bd6d2fe97d
.dword 0xc005cfa06072e1a1
.dword 0x7fe8fbbbb5e3c9d7
.dword 0x7fd253bd6d2fe97d
.dword 0xc005cfa06072e1a1
.dword 0x7fe8fbbbb5e3c9d7
.dword 0x7fd253bd6d2fe97d
.dword 0xc005cfa06072e1a1
.dword 0x7fe8fbbbb5e3c9d7
.dword 0x7fd253bd6d2fe97d
.dword 0xc005cfa06072e1a1
.dword 0x7fe8fbbbb5e3c9d7
.dword 0x7fe63a56d71db193
.dword 0xbfe3f073cbea8835
.dword 0x7fdbb35314a82aa5
.dword 0x7fe63a56d71db193
.dword 0xbfe3f073cbea8835
.dword 0x7fdbb35314a82aa5
.dword 0x7fe63a56d71db193
.dword 0xbfe3f073cbea8835
.dword 0x7fdbb35314a82aa5
.dword 0x7fe63a56d71db193
.dword 0xbfe3f073cbea8835
.dword 0x7fdbb35314a82aa5
.dword 0x7fe63a56d71db193
.dword 0xbfe3f073cbea8835
.dword 0x7fdbb35314a82aa5
.dword 0x7fb0e8eee9b78077
.dword 0xc0295229efde7a10
.dword 0x7feac2cb68034dca
.dword 0x7fb0e8eee9b78077
.dword 0xc0295229efde7a10
.dword 0x7feac2cb68034dca
.dword 0x7fb0e8eee9b78077
.dword 0xc0295229efde7a10
.dword 0x7feac2cb68034dca
.dword 0x7fb0e8eee9b78077
.dword 0xc0295229efde7a10
.dword 0x7feac2cb68034dca
.dword 0x7fb0e8eee9b78077
.dword 0xc0295229efde7a10
.dword 0x7feac2cb68034dca
.dword 0x7fd2f9038bb87e4d
.dword 0xc006662cdadc781c
.dword 0x7fea8f8d870864b8
.dword 0x7fd2f9038bb87e4d
.dword 0xc006662cdadc781c
.dword 0x7fea8f8d870864b8
.dword 0x7fd2f9038bb87e4d
.dword 0xc006662cdadc781c
.dword 0x7fea8f8d870864b8
.dword 0x7fd2f9038bb87e4d
.dword 0xc006662cdadc781c
.dword 0x7fea8f8d870864b8
.dword 0x7fd2f9038bb87e4d
.dword 0xc006662cdadc781c
.dword 0x7fea8f8d870864b8
.dword 0x7feb42c6b2e0e14b
.dword 0xbfcd850efa48c7f0
.dword 0x7fc925de5e61e1ff
.dword 0x7feb42c6b2e0e14b
.dword 0xbfcd850efa48c7f0
.dword 0x7fc925de5e61e1ff
.dword 0x7feb42c6b2e0e14b
.dword 0xbfcd850efa48c7f0
.dword 0x7fc925de5e61e1ff
.dword 0x7feb42c6b2e0e14b
.dword 0xbfcd850efa48c7f0
.dword 0x7fc925de5e61e1ff
.dword 0x7feb42c6b2e0e14b
.dword 0xbfcd850efa48c7f0
.dword 0x7fc925de5e61e1ff
.dword 0x7fd8ab9793ce4623
.dword 0xbff043ed2f7bd013
.dword 0x7fd91453d575687b
.dword 0x7fd8ab9793ce4623
.dword 0xbff043ed2f7bd013
.dword 0x7fd91453d575687b
.dword 0x7fd8ab9793ce4623
.dword 0xbff043ed2f7bd013
.dword 0x7fd91453d575687b
.dword 0x7fd8ab9793ce4623
.dword 0xbff043ed2f7bd013
.dword 0x7fd91453d575687b
.dword 0x7fd8ab9793ce4623
.dword 0xbff043ed2f7bd013
.dword 0x7fd91453d575687b
.dword 0x7fded71b46de9a5d
.dword 0xbffe45a211c6b969
.dword 0x7fed2cc5975d63a2
.dword 0x7fded71b46de9a5d
.dword 0xbffe45a211c6b969
.dword 0x7fed2cc5975d63a2
.dword 0x7fded71b46de9a5d
.dword 0xbffe45a211c6b969
.dword 0x7fed2cc5975d63a2
.dword 0x7fded71b46de9a5d
.dword 0xbffe45a211c6b969
.dword 0x7fed2cc5975d63a2
.dword 0x7fded71b46de9a5d
.dword 0xbffe45a211c6b969
.dword 0x7fed2cc5975d63a2
.dword 0x7fe6a96ba7d02570
.dword 0xbfec917be2f7ebb8
.dword 0x7fe43b459e986fea
.dword 0x7fe6a96ba7d02570
.dword 0xbfec917be2f7ebb8
.dword 0x7fe43b459e986fea
.dword 0x7fe6a96ba7d02570
.dword 0xbfec917be2f7ebb8
.dword 0x7fe43b459e986fea
.dword 0x7fe6a96ba7d02570
.dword 0xbfec917be2f7ebb8
.dword 0x7fe43b459e986fea
.dword 0x7fe6a96ba7d02570
.dword 0xbfec917be2f7ebb8
.dword 0x7fe43b459e986fea
.dword 0x7fdb5ff414c256c5
.dword 0xbff5886744e56a0a
.dword 0x7fe26ba852c18dc1
.dword 0x7fdb5ff414c256c5
.dword 0xbff5886744e56a0a
.dword 0x7fe26ba852c18dc1
.dword 0x7fdb5ff414c256c5
.dword 0xbff5886744e56a0a
.dword 0x7fe26ba852c18dc1
.dword 0x7fdb5ff414c256c5
.dword 0xbff5886744e56a0a
.dword 0x7fe26ba852c18dc1
.dword 0x7fdb5ff414c256c5
.dword 0xbff5886744e56a0a
.dword 0x7fe26ba852c18dc1
.dword 0x7f8dd1e76dfee33f
.dword 0xc04abaae8cebcd22
.dword 0x7fe8e882c33ae96b
.dword 0x7f8dd1e76dfee33f
.dword 0xc04abaae8cebcd22
.dword 0x7fe8e882c33ae96b
.dword 0x7f8dd1e76dfee33f
.dword 0xc04abaae8cebcd22
.dword 0x7fe8e882c33ae96b
.dword 0x7f8dd1e76dfee33f
.dword 0xc04abaae8cebcd22
.dword 0x7fe8e882c33ae96b
.dword 0x7f8dd1e76dfee33f
.dword 0xc04abaae8cebcd22
.dword 0x7fe8e882c33ae96b
.dword 0x7fec6a025abfeb31
.dword 0xbfe3a98c6f1b9e65
.dword 0x7fe1757df4c3c481
.dword 0x7fec6a025abfeb31
.dword 0xbfe3a98c6f1b9e65
.dword 0x7fe1757df4c3c481
.dword 0x7fec6a025abfeb31
.dword 0xbfe3a98c6f1b9e65
.dword 0x7fe1757df4c3c481
.dword 0x7fec6a025abfeb31
.dword 0xbfe3a98c6f1b9e65
.dword 0x7fe1757df4c3c481
.dword 0x7fec6a025abfeb31
.dword 0xbfe3a98c6f1b9e65
.dword 0x7fe1757df4c3c481
.dword 0x7fdd28c6757c6183
.dword 0xc000180789f482ba
.dword 0x7fed54915c6e2edb
.dword 0x7fdd28c6757c6183
.dword 0xc000180789f482ba
.dword 0x7fed54915c6e2edb
.dword 0x7fdd28c6757c6183
.dword 0xc000180789f482ba
.dword 0x7fed54915c6e2edb
.dword 0x7fdd28c6757c6183
.dword 0xc000180789f482ba
.dword 0x7fed54915c6e2edb
.dword 0x7fdd28c6757c6183
.dword 0xc000180789f482ba
.dword 0x7fed54915c6e2edb
.dword 0x7fa2a6cf802e779f
.dword 0xc01bb77e316e5303
.dword 0x7fd027b2946d02e9
.dword 0x7fa2a6cf802e779f
.dword 0xc01bb77e316e5303
.dword 0x7fd027b2946d02e9
.dword 0x7fa2a6cf802e779f
.dword 0xc01bb77e316e5303
.dword 0x7fd027b2946d02e9
.dword 0x7fa2a6cf802e779f
.dword 0xc01bb77e316e5303
.dword 0x7fd027b2946d02e9
.dword 0x7fa2a6cf802e779f
.dword 0xc01bb77e316e5303
.dword 0x7fd027b2946d02e9
.dword 0x7fe7d72e47402429
.dword 0xbfe960529f3b1939
.dword 0x7fe2e7df4087a8bb
.dword 0x7fe7d72e47402429
.dword 0xbfe960529f3b1939
.dword 0x7fe2e7df4087a8bb
.dword 0x7fe7d72e47402429
.dword 0xbfe960529f3b1939
.dword 0x7fe2e7df4087a8bb
.dword 0x7fe7d72e47402429
.dword 0xbfe960529f3b1939
.dword 0x7fe2e7df4087a8bb
.dword 0x7fe7d72e47402429
.dword 0xbfe960529f3b1939
.dword 0x7fe2e7df4087a8bb
.dword 0x7fddb7b172cc5173
.dword 0xbfe8e197053e3ca3
.dword 0x7fd71b44ed743f59
.dword 0x7fddb7b172cc5173
.dword 0xbfe8e197053e3ca3
.dword 0x7fd71b44ed743f59
.dword 0x7fddb7b172cc5173
.dword 0xbfe8e197053e3ca3
.dword 0x7fd71b44ed743f59
.dword 0x7fddb7b172cc5173
.dword 0xbfe8e197053e3ca3
.dword 0x7fd71b44ed743f59
.dword 0x7fddb7b172cc5173
.dword 0xbfe8e197053e3ca3
.dword 0x7fd71b44ed743f59
.dword 0x7fd2ff2265d9a737
.dword 0xbffc8fe942aa1ecc
.dword 0x7fe0f4acb41b412d
.dword 0x7fd2ff2265d9a737
.dword 0xbffc8fe942aa1ecc
.dword 0x7fe0f4acb41b412d
.dword 0x7fd2ff2265d9a737
.dword 0xbffc8fe942aa1ecc
.dword 0x7fe0f4acb41b412d
.dword 0x7fd2ff2265d9a737
.dword 0xbffc8fe942aa1ecc
.dword 0x7fe0f4acb41b412d
.dword 0x7fd2ff2265d9a737
.dword 0xbffc8fe942aa1ecc
.dword 0x7fe0f4acb41b412d
.dword 0x7fe1126a3ad5051a
.dword 0xbfe4293c5830a884
.dword 0x7fd583045ce8982d
.dword 0x7fe1126a3ad5051a
.dword 0xbfe4293c5830a884
.dword 0x7fd583045ce8982d
.dword 0x7fe1126a3ad5051a
.dword 0xbfe4293c5830a884
.dword 0x7fd583045ce8982d
.dword 0x7fe1126a3ad5051a
.dword 0xbfe4293c5830a884
.dword 0x7fd583045ce8982d
.dword 0x7fe1126a3ad5051a
.dword 0xbfe4293c5830a884
.dword 0x7fd583045ce8982d
.dword 0x7fe8552f9c810e9e
.dword 0xbfd94ed6ea6ca724
.dword 0x7fd33e8042423f5f
.dword 0x7fe8552f9c810e9e
.dword 0xbfd94ed6ea6ca724
.dword 0x7fd33e8042423f5f
.dword 0x7fe8552f9c810e9e
.dword 0xbfd94ed6ea6ca724
.dword 0x7fd33e8042423f5f
.dword 0x7fe8552f9c810e9e
.dword 0xbfd94ed6ea6ca724
.dword 0x7fd33e8042423f5f
.dword 0x7fe8552f9c810e9e
.dword 0xbfd94ed6ea6ca724
.dword 0x7fd33e8042423f5f
.dword 0x7fe7ca8863947b9a
.dword 0xbfc458a57f4c0c1e
.dword 0x7fbe40fa80847cb7
.dword 0x7fe7ca8863947b9a
.dword 0xbfc458a57f4c0c1e
.dword 0x7fbe40fa80847cb7
.dword 0x7fe7ca8863947b9a
.dword 0xbfc458a57f4c0c1e
.dword 0x7fbe40fa80847cb7
.dword 0x7fe7ca8863947b9a
.dword 0xbfc458a57f4c0c1e
.dword 0x7fbe40fa80847cb7
.dword 0x7fe7ca8863947b9a
.dword 0xbfc458a57f4c0c1e
.dword 0x7fbe40fa80847cb7
.dword 0x7fe4a2d44f743484
.dword 0xbfedf6e0ad04fbde
.dword 0x7fe352c50b85cbad
.dword 0x7fe4a2d44f743484
.dword 0xbfedf6e0ad04fbde
.dword 0x7fe352c50b85cbad
.dword 0x7fe4a2d44f743484
.dword 0xbfedf6e0ad04fbde
.dword 0x7fe352c50b85cbad
.dword 0x7fe4a2d44f743484
.dword 0xbfedf6e0ad04fbde
.dword 0x7fe352c50b85cbad
.dword 0x7fe4a2d44f743484
.dword 0xbfedf6e0ad04fbde
.dword 0x7fe352c50b85cbad
.dword 0x7fe3750b3ff84d89
.dword 0xbfe8faa379b97e8e
.dword 0x7fde605c7c255007
.dword 0x7fe3750b3ff84d89
.dword 0xbfe8faa379b97e8e
.dword 0x7fde605c7c255007
.dword 0x7fe3750b3ff84d89
.dword 0xbfe8faa379b97e8e
.dword 0x7fde605c7c255007
.dword 0x7fe3750b3ff84d89
.dword 0xbfe8faa379b97e8e
.dword 0x7fde605c7c255007
.dword 0x7fe3750b3ff84d89
.dword 0xbfe8faa379b97e8e
.dword 0x7fde605c7c255007
.dword 0x7fefa474c124960a
.dword 0xbfd2f9e1d8e439c4
.dword 0x7fd2c398abf02815
.dword 0x7fefa474c124960a
.dword 0xbfd2f9e1d8e439c4
.dword 0x7fd2c398abf02815
.dword 0x7fefa474c124960a
.dword 0xbfd2f9e1d8e439c4
.dword 0x7fd2c398abf02815
.dword 0x7fefa474c124960a
.dword 0xbfd2f9e1d8e439c4
.dword 0x7fd2c398abf02815
.dword 0x7fefa474c124960a
.dword 0xbfd2f9e1d8e439c4
.dword 0x7fd2c398abf02815
.dword 0x7fd121cefec055f7
.dword 0xbfe280408462cdf8
.dword 0x7fc3cf5c6b8b15bb
.dword 0x7fd121cefec055f7
.dword 0xbfe280408462cdf8
.dword 0x7fc3cf5c6b8b15bb
.dword 0x7fd121cefec055f7
.dword 0xbfe280408462cdf8
.dword 0x7fc3cf5c6b8b15bb
.dword 0x7fd121cefec055f7
.dword 0xbfe280408462cdf8
.dword 0x7fc3cf5c6b8b15bb
.dword 0x7fd121cefec055f7
.dword 0xbfe280408462cdf8
.dword 0x7fc3cf5c6b8b15bb
.dword 0x7fe905625425a52e
.dword 0xbfd41b897757476e
.dword 0x7fcf71caf7d786cf
.dword 0x7fe905625425a52e
.dword 0xbfd41b897757476e
.dword 0x7fcf71caf7d786cf
.dword 0x7fe905625425a52e
.dword 0xbfd41b897757476e
.dword 0x7fcf71caf7d786cf
.dword 0x7fe905625425a52e
.dword 0xbfd41b897757476e
.dword 0x7fcf71caf7d786cf
.dword 0x7fe905625425a52e
.dword 0xbfd41b897757476e
.dword 0x7fcf71caf7d786cf
.dword 0x7fd185bc81f2a14d
.dword 0xc00b53ed83446079
.dword 0x7feded97f9e5a921
.dword 0x7fd185bc81f2a14d
.dword 0xc00b53ed83446079
.dword 0x7feded97f9e5a921
.dword 0x7fd185bc81f2a14d
.dword 0xc00b53ed83446079
.dword 0x7feded97f9e5a921
.dword 0x7fd185bc81f2a14d
.dword 0xc00b53ed83446079
.dword 0x7feded97f9e5a921
.dword 0x7fd185bc81f2a14d
.dword 0xc00b53ed83446079
.dword 0x7feded97f9e5a921
.dword 0x7f8b0a547af4b77f
.dword 0xc0442af94e43542f
.dword 0x7fe10ac5063dc350
.dword 0x7f8b0a547af4b77f
.dword 0xc0442af94e43542f
.dword 0x7fe10ac5063dc350
.dword 0x7f8b0a547af4b77f
.dword 0xc0442af94e43542f
.dword 0x7fe10ac5063dc350
.dword 0x7f8b0a547af4b77f
.dword 0xc0442af94e43542f
.dword 0x7fe10ac5063dc350
.dword 0x7f8b0a547af4b77f
.dword 0xc0442af94e43542f
.dword 0x7fe10ac5063dc350
.dword 0x7fe903bcec8bb6fb
.dword 0xbff0ec4f878fb7b4
.dword 0x7fea75306591ce61
.dword 0x7fe903bcec8bb6fb
.dword 0xbff0ec4f878fb7b4
.dword 0x7fea75306591ce61
.dword 0x7fe903bcec8bb6fb
.dword 0xbff0ec4f878fb7b4
.dword 0x7fea75306591ce61
.dword 0x7fe903bcec8bb6fb
.dword 0xbff0ec4f878fb7b4
.dword 0x7fea75306591ce61
.dword 0x7fe903bcec8bb6fb
.dword 0xbff0ec4f878fb7b4
.dword 0x7fea75306591ce61
.dword 0x7fdc61c611f6c8db
.dword 0xbfe526604cab8fcb
.dword 0x7fd2c2338051df31
.dword 0x7fdc61c611f6c8db
.dword 0xbfe526604cab8fcb
.dword 0x7fd2c2338051df31
.dword 0x7fdc61c611f6c8db
.dword 0xbfe526604cab8fcb
.dword 0x7fd2c2338051df31
.dword 0x7fdc61c611f6c8db
.dword 0xbfe526604cab8fcb
.dword 0x7fd2c2338051df31
.dword 0x7fdc61c611f6c8db
.dword 0xbfe526604cab8fcb
.dword 0x7fd2c2338051df31
.dword 0x7fbf33ebf51f33b7
.dword 0xc01466f88fb6ecbe
.dword 0x7fe3e4db57d7e40f
.dword 0x7fbf33ebf51f33b7
.dword 0xc01466f88fb6ecbe
.dword 0x7fe3e4db57d7e40f
.dword 0x7fbf33ebf51f33b7
.dword 0xc01466f88fb6ecbe
.dword 0x7fe3e4db57d7e40f
.dword 0x7fbf33ebf51f33b7
.dword 0xc01466f88fb6ecbe
.dword 0x7fe3e4db57d7e40f
.dword 0x7fbf33ebf51f33b7
.dword 0xc01466f88fb6ecbe
.dword 0x7fe3e4db57d7e40f
.dword 0x7fd25459c12575f7
.dword 0xbffaa504e2a5f1c3
.dword 0x7fde861d5030b0e7
.dword 0x7fd25459c12575f7
.dword 0xbffaa504e2a5f1c3
.dword 0x7fde861d5030b0e7
.dword 0x7fd25459c12575f7
.dword 0xbffaa504e2a5f1c3
.dword 0x7fde861d5030b0e7
.dword 0x7fd25459c12575f7
.dword 0xbffaa504e2a5f1c3
.dword 0x7fde861d5030b0e7
.dword 0x7fd25459c12575f7
.dword 0xbffaa504e2a5f1c3
.dword 0x7fde861d5030b0e7
.dword 0x7fef7f31753ade3e
.dword 0xbfdff99d9f7dd137
.dword 0x7fdf78e8c76fb50b
.dword 0x7fef7f31753ade3e
.dword 0xbfdff99d9f7dd137
.dword 0x7fdf78e8c76fb50b
.dword 0x7fef7f31753ade3e
.dword 0xbfdff99d9f7dd137
.dword 0x7fdf78e8c76fb50b
.dword 0x7fef7f31753ade3e
.dword 0xbfdff99d9f7dd137
.dword 0x7fdf78e8c76fb50b
.dword 0x7fef7f31753ade3e
.dword 0xbfdff99d9f7dd137
.dword 0x7fdf78e8c76fb50b
.dword 0x7fda976a9028496d
.dword 0xbfe89489e50d3718
.dword 0x7fd46cfecf8fb875
.dword 0x7fda976a9028496d
.dword 0xbfe89489e50d3718
.dword 0x7fd46cfecf8fb875
.dword 0x7fda976a9028496d
.dword 0xbfe89489e50d3718
.dword 0x7fd46cfecf8fb875
.dword 0x7fda976a9028496d
.dword 0xbfe89489e50d3718
.dword 0x7fd46cfecf8fb875
.dword 0x7fda976a9028496d
.dword 0xbfe89489e50d3718
.dword 0x7fd46cfecf8fb875
.dword 0x7fef64315934059e
.dword 0xbfe0308fdace1bed
.dword 0x7fdfc3782a023015
.dword 0x7fef64315934059e
.dword 0xbfe0308fdace1bed
.dword 0x7fdfc3782a023015
.dword 0x7fef64315934059e
.dword 0xbfe0308fdace1bed
.dword 0x7fdfc3782a023015
.dword 0x7fef64315934059e
.dword 0xbfe0308fdace1bed
.dword 0x7fdfc3782a023015
.dword 0x7fef64315934059e
.dword 0xbfe0308fdace1bed
.dword 0x7fdfc3782a023015
.dword 0x7fe310e01660348e
.dword 0xbfdbe8d71c96d67e
.dword 0x7fd0a0f795ed9f25
.dword 0x7fe310e01660348e
.dword 0xbfdbe8d71c96d67e
.dword 0x7fd0a0f795ed9f25
.dword 0x7fe310e01660348e
.dword 0xbfdbe8d71c96d67e
.dword 0x7fd0a0f795ed9f25
.dword 0x7fe310e01660348e
.dword 0xbfdbe8d71c96d67e
.dword 0x7fd0a0f795ed9f25
.dword 0x7fe310e01660348e
.dword 0xbfdbe8d71c96d67e
.dword 0x7fd0a0f795ed9f25
.dword 0x7feec1a6c76b7bd2
.dword 0xbfee6c11aa8d2573
.dword 0x7fed3d6ae8a2d811
.dword 0x7feec1a6c76b7bd2
.dword 0xbfee6c11aa8d2573
.dword 0x7fed3d6ae8a2d811
.dword 0x7feec1a6c76b7bd2
.dword 0xbfee6c11aa8d2573
.dword 0x7fed3d6ae8a2d811
.dword 0x7feec1a6c76b7bd2
.dword 0xbfee6c11aa8d2573
.dword 0x7fed3d6ae8a2d811
.dword 0x7feec1a6c76b7bd2
.dword 0xbfee6c11aa8d2573
.dword 0x7fed3d6ae8a2d811
.dword 0x7fef1e592ad54c35
.dword 0xbfd8fe934dea0ead
.dword 0x7fd84e53031235b9
.dword 0x7fef1e592ad54c35
.dword 0xbfd8fe934dea0ead
.dword 0x7fd84e53031235b9
.dword 0x7fef1e592ad54c35
.dword 0xbfd8fe934dea0ead
.dword 0x7fd84e53031235b9
.dword 0x7fef1e592ad54c35
.dword 0xbfd8fe934dea0ead
.dword 0x7fd84e53031235b9
.dword 0x7fef1e592ad54c35
.dword 0xbfd8fe934dea0ead
.dword 0x7fd84e53031235b9
.dword 0x7fccf892d7e50217
.dword 0xbff49b2d61482423
.dword 0x7fd2a7d8e3d62b4b
.dword 0x7fccf892d7e50217
.dword 0xbff49b2d61482423
.dword 0x7fd2a7d8e3d62b4b
.dword 0x7fccf892d7e50217
.dword 0xbff49b2d61482423
.dword 0x7fd2a7d8e3d62b4b
.dword 0x7fccf892d7e50217
.dword 0xbff49b2d61482423
.dword 0x7fd2a7d8e3d62b4b
.dword 0x7fccf892d7e50217
.dword 0xbff49b2d61482423
.dword 0x7fd2a7d8e3d62b4b
.dword 0x7fd80de60b6f00df
.dword 0xbff2607ef5993617
.dword 0x7fdba0b50fd03dd3
.dword 0x7fd80de60b6f00df
.dword 0xbff2607ef5993617
.dword 0x7fdba0b50fd03dd3
.dword 0x7fd80de60b6f00df
.dword 0xbff2607ef5993617
.dword 0x7fdba0b50fd03dd3
.dword 0x7fd80de60b6f00df
.dword 0xbff2607ef5993617
.dword 0x7fdba0b50fd03dd3
.dword 0x7fd80de60b6f00df
.dword 0xbff2607ef5993617
.dword 0x7fdba0b50fd03dd3
.dword 0x7fe4248187818921
.dword 0xbff6a7c06a5d1432
.dword 0x7fec85615e41d666
.dword 0x7fe4248187818921
.dword 0xbff6a7c06a5d1432
.dword 0x7fec85615e41d666
.dword 0x7fe4248187818921
.dword 0xbff6a7c06a5d1432
.dword 0x7fec85615e41d666
.dword 0x7fe4248187818921
.dword 0xbff6a7c06a5d1432
.dword 0x7fec85615e41d666
.dword 0x7fe4248187818921
.dword 0xbff6a7c06a5d1432
.dword 0x7fec85615e41d666
.dword 0x7fe3af74e2285ea8
.dword 0xbfcd46a833143262
.dword 0x7fc202793535005b
.dword 0x7fe3af74e2285ea8
.dword 0xbfcd46a833143262
.dword 0x7fc202793535005b
.dword 0x7fe3af74e2285ea8
.dword 0xbfcd46a833143262
.dword 0x7fc202793535005b
.dword 0x7fe3af74e2285ea8
.dword 0xbfcd46a833143262
.dword 0x7fc202793535005b
.dword 0x7fe3af74e2285ea8
.dword 0xbfcd46a833143262
.dword 0x7fc202793535005b
.dword 0x7fbba0894a6eeff7
.dword 0xc014f8cba9f74d1d
.dword 0x7fe21b21cbaa78b6
.dword 0x7fbba0894a6eeff7
.dword 0xc014f8cba9f74d1d
.dword 0x7fe21b21cbaa78b6
.dword 0x7fbba0894a6eeff7
.dword 0xc014f8cba9f74d1d
.dword 0x7fe21b21cbaa78b6
.dword 0x7fbba0894a6eeff7
.dword 0xc014f8cba9f74d1d
.dword 0x7fe21b21cbaa78b6
.dword 0x7fbba0894a6eeff7
.dword 0xc014f8cba9f74d1d
.dword 0x7fe21b21cbaa78b6
.dword 0x7fec97481aa589cf
.dword 0xbf515fdaf55a8228
.dword 0x7f4f0c061c12bfff
.dword 0x7fec97481aa589cf
.dword 0xbf515fdaf55a8228
.dword 0x7f4f0c061c12bfff
.dword 0x7fec97481aa589cf
.dword 0xbf515fdaf55a8228
.dword 0x7f4f0c061c12bfff
.dword 0x7fec97481aa589cf
.dword 0xbf515fdaf55a8228
.dword 0x7f4f0c061c12bfff
.dword 0x7fec97481aa589cf
.dword 0xbf515fdaf55a8228
.dword 0x7f4f0c061c12bfff
.dword 0x7fe379bb745d02d9
.dword 0xbfe276161f0e5912
.dword 0x7fd678af9691e349
.dword 0x7fe379bb745d02d9
.dword 0xbfe276161f0e5912
.dword 0x7fd678af9691e349
.dword 0x7fe379bb745d02d9
.dword 0xbfe276161f0e5912
.dword 0x7fd678af9691e349
.dword 0x7fe379bb745d02d9
.dword 0xbfe276161f0e5912
.dword 0x7fd678af9691e349
.dword 0x7fe379bb745d02d9
.dword 0xbfe276161f0e5912
.dword 0x7fd678af9691e349
.dword 0x7feea17c4ccbefe8
.dword 0xbff02e25a9bb2a1a
.dword 0x7feef9d4ac882cb3
.dword 0x7feea17c4ccbefe8
.dword 0xbff02e25a9bb2a1a
.dword 0x7feef9d4ac882cb3
.dword 0x7feea17c4ccbefe8
.dword 0xbff02e25a9bb2a1a
.dword 0x7feef9d4ac882cb3
.dword 0x7feea17c4ccbefe8
.dword 0xbff02e25a9bb2a1a
.dword 0x7feef9d4ac882cb3
.dword 0x7feea17c4ccbefe8
.dword 0xbff02e25a9bb2a1a
.dword 0x7feef9d4ac882cb3
.dword 0x7fe311ebd187eea8
.dword 0xbfee47093103feca
.dword 0x7fe20b2251e87ae3
.dword 0x7fe311ebd187eea8
.dword 0xbfee47093103feca
.dword 0x7fe20b2251e87ae3
.dword 0x7fe311ebd187eea8
.dword 0xbfee47093103feca
.dword 0x7fe20b2251e87ae3
.dword 0x7fe311ebd187eea8
.dword 0xbfee47093103feca
.dword 0x7fe20b2251e87ae3
.dword 0x7fe311ebd187eea8
.dword 0xbfee47093103feca
.dword 0x7fe20b2251e87ae3
.dword 0x7fd7a4f313bd6219
.dword 0xbfd89e6311dc9a65
.dword 0x7fc230bdf28226f7
.dword 0x7fd7a4f313bd6219
.dword 0xbfd89e6311dc9a65
.dword 0x7fc230bdf28226f7
.dword 0x7fd7a4f313bd6219
.dword 0xbfd89e6311dc9a65
.dword 0x7fc230bdf28226f7
.dword 0x7fd7a4f313bd6219
.dword 0xbfd89e6311dc9a65
.dword 0x7fc230bdf28226f7
.dword 0x7fd7a4f313bd6219
.dword 0xbfd89e6311dc9a65
.dword 0x7fc230bdf28226f7
.dword 0x7fea04034a417446
.dword 0xbfe948073adec2d9
.dword 0x7fe48db17a274e91
.dword 0x7fea04034a417446
.dword 0xbfe948073adec2d9
.dword 0x7fe48db17a274e91
.dword 0x7fea04034a417446
.dword 0xbfe948073adec2d9
.dword 0x7fe48db17a274e91
.dword 0x7fea04034a417446
.dword 0xbfe948073adec2d9
.dword 0x7fe48db17a274e91
.dword 0x7fea04034a417446
.dword 0xbfe948073adec2d9
.dword 0x7fe48db17a274e91
.dword 0x7fea31550c844273
.dword 0xbfe0627da3f81f8f
.dword 0x7fdad290e3462113
.dword 0x7fea31550c844273
.dword 0xbfe0627da3f81f8f
.dword 0x7fdad290e3462113
.dword 0x7fea31550c844273
.dword 0xbfe0627da3f81f8f
.dword 0x7fdad290e3462113
.dword 0x7fea31550c844273
.dword 0xbfe0627da3f81f8f
.dword 0x7fdad290e3462113
.dword 0x7fea31550c844273
.dword 0xbfe0627da3f81f8f
.dword 0x7fdad290e3462113
.dword 0x7fe296b3b52c3a78
.dword 0xbffa652491e8ca3f
.dword 0x7feeaa65d1680e97
.dword 0x7fe296b3b52c3a78
.dword 0xbffa652491e8ca3f
.dword 0x7feeaa65d1680e97
.dword 0x7fe296b3b52c3a78
.dword 0xbffa652491e8ca3f
.dword 0x7feeaa65d1680e97
.dword 0x7fe296b3b52c3a78
.dword 0xbffa652491e8ca3f
.dword 0x7feeaa65d1680e97
.dword 0x7fe296b3b52c3a78
.dword 0xbffa652491e8ca3f
.dword 0x7feeaa65d1680e97
.dword 0x7fe17273060cf383
.dword 0xbfe3eb1e847178eb
.dword 0x7fd5b84ad79bdbd5
.dword 0x7fe17273060cf383
.dword 0xbfe3eb1e847178eb
.dword 0x7fd5b84ad79bdbd5
.dword 0x7fe17273060cf383
.dword 0xbfe3eb1e847178eb
.dword 0x7fd5b84ad79bdbd5
.dword 0x7fe17273060cf383
.dword 0xbfe3eb1e847178eb
.dword 0x7fd5b84ad79bdbd5
.dword 0x7fe17273060cf383
.dword 0xbfe3eb1e847178eb
.dword 0x7fd5b84ad79bdbd5
.dword 0x7fe3a25129349d98
.dword 0xbfc3c80b9163e813
.dword 0x7fb8463b8972f1cf
.dword 0x7fe3a25129349d98
.dword 0xbfc3c80b9163e813
.dword 0x7fb8463b8972f1cf
.dword 0x7fe3a25129349d98
.dword 0xbfc3c80b9163e813
.dword 0x7fb8463b8972f1cf
.dword 0x7fe3a25129349d98
.dword 0xbfc3c80b9163e813
.dword 0x7fb8463b8972f1cf
.dword 0x7fe3a25129349d98
.dword 0xbfc3c80b9163e813
.dword 0x7fb8463b8972f1cf
.dword 0x7fd7eda4efb707f7
.dword 0xbfb8b1321a75d35f
.dword 0x7fa276bba33219df
.dword 0x7fd7eda4efb707f7
.dword 0xbfb8b1321a75d35f
.dword 0x7fa276bba33219df
.dword 0x7fd7eda4efb707f7
.dword 0xbfb8b1321a75d35f
.dword 0x7fa276bba33219df
.dword 0x7fd7eda4efb707f7
.dword 0xbfb8b1321a75d35f
.dword 0x7fa276bba33219df
.dword 0x7fd7eda4efb707f7
.dword 0xbfb8b1321a75d35f
.dword 0x7fa276bba33219df
.dword 0x7fbd7584b60b1a57
.dword 0xc01ce604fe904a90
.dword 0x7fea9a9562306079
.dword 0x7fbd7584b60b1a57
.dword 0xc01ce604fe904a90
.dword 0x7fea9a9562306079
.dword 0x7fbd7584b60b1a57
.dword 0xc01ce604fe904a90
.dword 0x7fea9a9562306079
.dword 0x7fbd7584b60b1a57
.dword 0xc01ce604fe904a90
.dword 0x7fea9a9562306079
.dword 0x7fbd7584b60b1a57
.dword 0xc01ce604fe904a90
.dword 0x7fea9a9562306079
.dword 0x7fd1d36766d8ca5b
.dword 0xbff78e08524df276
.dword 0x7fda3e221eee63c5
.dword 0x7fd1d36766d8ca5b
.dword 0xbff78e08524df276
.dword 0x7fda3e221eee63c5
.dword 0x7fd1d36766d8ca5b
.dword 0xbff78e08524df276
.dword 0x7fda3e221eee63c5
.dword 0x7fd1d36766d8ca5b
.dword 0xbff78e08524df276
.dword 0x7fda3e221eee63c5
.dword 0x7fd1d36766d8ca5b
.dword 0xbff78e08524df276
.dword 0x7fda3e221eee63c5
.dword 0x7f45a5a59bbb3fff
.dword 0xc0832d10b0d92edf
.dword 0x7fd9f1ad1f9dea0f
.dword 0x7f45a5a59bbb3fff
.dword 0xc0832d10b0d92edf
.dword 0x7fd9f1ad1f9dea0f
.dword 0x7f45a5a59bbb3fff
.dword 0xc0832d10b0d92edf
.dword 0x7fd9f1ad1f9dea0f
.dword 0x7f45a5a59bbb3fff
.dword 0xc0832d10b0d92edf
.dword 0x7fd9f1ad1f9dea0f
.dword 0x7f45a5a59bbb3fff
.dword 0xc0832d10b0d92edf
.dword 0x7fd9f1ad1f9dea0f
.dword 0x7fce71c04b7cfd87
.dword 0xc00e60f0ca8dfb07
.dword 0x7fece6de9d7efcb7
.dword 0x7fce71c04b7cfd87
.dword 0xc00e60f0ca8dfb07
.dword 0x7fece6de9d7efcb7
.dword 0x7fce71c04b7cfd87
.dword 0xc00e60f0ca8dfb07
.dword 0x7fece6de9d7efcb7
.dword 0x7fce71c04b7cfd87
.dword 0xc00e60f0ca8dfb07
.dword 0x7fece6de9d7efcb7
.dword 0x7fce71c04b7cfd87
.dword 0xc00e60f0ca8dfb07
.dword 0x7fece6de9d7efcb7
.dword 0x7fe393d0e849b454
.dword 0xbfeede60a738746b
.dword 0x7fe2e2a074d14562
.dword 0x7fe393d0e849b454
.dword 0xbfeede60a738746b
.dword 0x7fe2e2a074d14562
.dword 0x7fe393d0e849b454
.dword 0xbfeede60a738746b
.dword 0x7fe2e2a074d14562
.dword 0x7fe393d0e849b454
.dword 0xbfeede60a738746b
.dword 0x7fe2e2a074d14562
.dword 0x7fe393d0e849b454
.dword 0xbfeede60a738746b
.dword 0x7fe2e2a074d14562
.dword 0x7fddc7f82acf0d6d
.dword 0xbfea270c8218b8b7
.dword 0x7fd856d0fd4cd95f
.dword 0x7fddc7f82acf0d6d
.dword 0xbfea270c8218b8b7
.dword 0x7fd856d0fd4cd95f
.dword 0x7fddc7f82acf0d6d
.dword 0xbfea270c8218b8b7
.dword 0x7fd856d0fd4cd95f
.dword 0x7fddc7f82acf0d6d
.dword 0xbfea270c8218b8b7
.dword 0x7fd856d0fd4cd95f
.dword 0x7fddc7f82acf0d6d
.dword 0xbfea270c8218b8b7
.dword 0x7fd856d0fd4cd95f
.dword 0x7fc8c00618c5ebf7
.dword 0xbfc79abfd08d65b8
.dword 0x7fa241b4da97625f
.dword 0x7fc8c00618c5ebf7
.dword 0xbfc79abfd08d65b8
.dword 0x7fa241b4da97625f
.dword 0x7fc8c00618c5ebf7
.dword 0xbfc79abfd08d65b8
.dword 0x7fa241b4da97625f
.dword 0x7fc8c00618c5ebf7
.dword 0xbfc79abfd08d65b8
.dword 0x7fa241b4da97625f
.dword 0x7fc8c00618c5ebf7
.dword 0xbfc79abfd08d65b8
.dword 0x7fa241b4da97625f
.dword 0x7fd44f79e7be6c8f
.dword 0xbfe24e67d722e194
.dword 0x7fc73cf067b8fba3
.dword 0x7fd44f79e7be6c8f
.dword 0xbfe24e67d722e194
.dword 0x7fc73cf067b8fba3
.dword 0x7fd44f79e7be6c8f
.dword 0xbfe24e67d722e194
.dword 0x7fc73cf067b8fba3
.dword 0x7fd44f79e7be6c8f
.dword 0xbfe24e67d722e194
.dword 0x7fc73cf067b8fba3
.dword 0x7fd44f79e7be6c8f
.dword 0xbfe24e67d722e194
.dword 0x7fc73cf067b8fba3
.dword 0x7fabb8a1f913699f
.dword 0xc003bac12cd8e8cf
.dword 0x7fc11768b1c5f473
.dword 0x7fabb8a1f913699f
.dword 0xc003bac12cd8e8cf
.dword 0x7fc11768b1c5f473
.dword 0x7fabb8a1f913699f
.dword 0xc003bac12cd8e8cf
.dword 0x7fc11768b1c5f473
.dword 0x7fabb8a1f913699f
.dword 0xc003bac12cd8e8cf
.dword 0x7fc11768b1c5f473
.dword 0x7fabb8a1f913699f
.dword 0xc003bac12cd8e8cf
.dword 0x7fc11768b1c5f473
.dword 0x7fde2e74f7d68c61
.dword 0xbfdeb434736cd25d
.dword 0x7fccf58472a6e4bb
.dword 0x7fde2e74f7d68c61
.dword 0xbfdeb434736cd25d
.dword 0x7fccf58472a6e4bb
.dword 0x7fde2e74f7d68c61
.dword 0xbfdeb434736cd25d
.dword 0x7fccf58472a6e4bb
.dword 0x7fde2e74f7d68c61
.dword 0xbfdeb434736cd25d
.dword 0x7fccf58472a6e4bb
.dword 0x7fde2e74f7d68c61
.dword 0xbfdeb434736cd25d
.dword 0x7fccf58472a6e4bb
.dword 0x7fe4300c22dfb496
.dword 0xbfb0fcb563875381
.dword 0x7fa56ee5bf224c4f
.dword 0x7fe4300c22dfb496
.dword 0xbfb0fcb563875381
.dword 0x7fa56ee5bf224c4f
.dword 0x7fe4300c22dfb496
.dword 0xbfb0fcb563875381
.dword 0x7fa56ee5bf224c4f
.dword 0x7fe4300c22dfb496
.dword 0xbfb0fcb563875381
.dword 0x7fa56ee5bf224c4f
.dword 0x7fe4300c22dfb496
.dword 0xbfb0fcb563875381
.dword 0x7fa56ee5bf224c4f
.dword 0x7fcc09714c24da2f
.dword 0xc0090dadbfedb4cf
.dword 0x7fe5f35c94b8ddad
.dword 0x7fcc09714c24da2f
.dword 0xc0090dadbfedb4cf
.dword 0x7fe5f35c94b8ddad
.dword 0x7fcc09714c24da2f
.dword 0xc0090dadbfedb4cf
.dword 0x7fe5f35c94b8ddad
.dword 0x7fcc09714c24da2f
.dword 0xc0090dadbfedb4cf
.dword 0x7fe5f35c94b8ddad
.dword 0x7fcc09714c24da2f
.dword 0xc0090dadbfedb4cf
.dword 0x7fe5f35c94b8ddad
.dword 0x7fdc3a7704fe195b
.dword 0xbff79556c0841e18
.dword 0x7fe4cdc24cb9149f
.dword 0x7fdc3a7704fe195b
.dword 0xbff79556c0841e18
.dword 0x7fe4cdc24cb9149f
.dword 0x7fdc3a7704fe195b
.dword 0xbff79556c0841e18
.dword 0x7fe4cdc24cb9149f
.dword 0x7fdc3a7704fe195b
.dword 0xbff79556c0841e18
.dword 0x7fe4cdc24cb9149f
.dword 0x7fdc3a7704fe195b
.dword 0xbff79556c0841e18
.dword 0x7fe4cdc24cb9149f
.dword 0x7f9c48f21909621f
.dword 0xc0172c5b0c847b8b
.dword 0x7fc47ba2c9621783
.dword 0x7f9c48f21909621f
.dword 0xc0172c5b0c847b8b
.dword 0x7fc47ba2c9621783
.dword 0x7f9c48f21909621f
.dword 0xc0172c5b0c847b8b
.dword 0x7fc47ba2c9621783
.dword 0x7f9c48f21909621f
.dword 0xc0172c5b0c847b8b
.dword 0x7fc47ba2c9621783
.dword 0x7f9c48f21909621f
.dword 0xc0172c5b0c847b8b
.dword 0x7fc47ba2c9621783
.dword 0x7fe46136351533f7
.dword 0xbff219562feed3b5
.dword 0x7fe70da2a7fbebd4
.dword 0x7fe46136351533f7
.dword 0xbff219562feed3b5
.dword 0x7fe70da2a7fbebd4
.dword 0x7fe46136351533f7
.dword 0xbff219562feed3b5
.dword 0x7fe70da2a7fbebd4
.dword 0x7fe46136351533f7
.dword 0xbff219562feed3b5
.dword 0x7fe70da2a7fbebd4
.dword 0x7fe46136351533f7
.dword 0xbff219562feed3b5
.dword 0x7fe70da2a7fbebd4
.dword 0x7fe3f5a77e367c1b
.dword 0xbff3df62857d4110
.dword 0x7fe8ca619b77f06f
.dword 0x7fe3f5a77e367c1b
.dword 0xbff3df62857d4110
.dword 0x7fe8ca619b77f06f
.dword 0x7fe3f5a77e367c1b
.dword 0xbff3df62857d4110
.dword 0x7fe8ca619b77f06f
.dword 0x7fe3f5a77e367c1b
.dword 0xbff3df62857d4110
.dword 0x7fe8ca619b77f06f
.dword 0x7fe3f5a77e367c1b
.dword 0xbff3df62857d4110
.dword 0x7fe8ca619b77f06f
.dword 0x7fe54c3c93bee7ca
.dword 0xbfe43b51c6a4029a
.dword 0x7fdaee41b26bdc31
.dword 0x7fe54c3c93bee7ca
.dword 0xbfe43b51c6a4029a
.dword 0x7fdaee41b26bdc31
.dword 0x7fe54c3c93bee7ca
.dword 0xbfe43b51c6a4029a
.dword 0x7fdaee41b26bdc31
.dword 0x7fe54c3c93bee7ca
.dword 0xbfe43b51c6a4029a
.dword 0x7fdaee41b26bdc31
.dword 0x7fe54c3c93bee7ca
.dword 0xbfe43b51c6a4029a
.dword 0x7fdaee41b26bdc31
.dword 0x7fe8f8cdebbeb1b6
.dword 0xbfe7d175bb1b34cb
.dword 0x7fe29648e210d99f
.dword 0x7fe8f8cdebbeb1b6
.dword 0xbfe7d175bb1b34cb
.dword 0x7fe29648e210d99f
.dword 0x7fe8f8cdebbeb1b6
.dword 0xbfe7d175bb1b34cb
.dword 0x7fe29648e210d99f
.dword 0x7fe8f8cdebbeb1b6
.dword 0xbfe7d175bb1b34cb
.dword 0x7fe29648e210d99f
.dword 0x7fe8f8cdebbeb1b6
.dword 0xbfe7d175bb1b34cb
.dword 0x7fe29648e210d99f
.dword 0x7fe75f0e25aaa1ef
.dword 0xbfce1d2ba70c870b
.dword 0x7fc5fe6b49de552b
.dword 0x7fe75f0e25aaa1ef
.dword 0xbfce1d2ba70c870b
.dword 0x7fc5fe6b49de552b
.dword 0x7fe75f0e25aaa1ef
.dword 0xbfce1d2ba70c870b
.dword 0x7fc5fe6b49de552b
.dword 0x7fe75f0e25aaa1ef
.dword 0xbfce1d2ba70c870b
.dword 0x7fc5fe6b49de552b
.dword 0x7fe75f0e25aaa1ef
.dword 0xbfce1d2ba70c870b
.dword 0x7fc5fe6b49de552b
.dword 0x7fe620288c50ba92
.dword 0xbff0a76ad4accd30
.dword 0x7fe707abeeaef579
.dword 0x7fe620288c50ba92
.dword 0xbff0a76ad4accd30
.dword 0x7fe707abeeaef579
.dword 0x7fe620288c50ba92
.dword 0xbff0a76ad4accd30
.dword 0x7fe707abeeaef579
.dword 0x7fe620288c50ba92
.dword 0xbff0a76ad4accd30
.dword 0x7fe707abeeaef579
.dword 0x7fe620288c50ba92
.dword 0xbff0a76ad4accd30
.dword 0x7fe707abeeaef579
.dword 0x7fedff07e36a58e8
.dword 0xbfe04ab42936e1a4
.dword 0x7fde8b152a434b27
.dword 0x7fedff07e36a58e8
.dword 0xbfe04ab42936e1a4
.dword 0x7fde8b152a434b27
.dword 0x7fedff07e36a58e8
.dword 0xbfe04ab42936e1a4
.dword 0x7fde8b152a434b27
.dword 0x7fedff07e36a58e8
.dword 0xbfe04ab42936e1a4
.dword 0x7fde8b152a434b27
.dword 0x7fedff07e36a58e8
.dword 0xbfe04ab42936e1a4
.dword 0x7fde8b152a434b27
.dword 0x7fc54524f32daef7
.dword 0xc014237a343890fb
.dword 0x7feac597e572b7b4
.dword 0x7fc54524f32daef7
.dword 0xc014237a343890fb
.dword 0x7feac597e572b7b4
.dword 0x7fc54524f32daef7
.dword 0xc014237a343890fb
.dword 0x7feac597e572b7b4
.dword 0x7fc54524f32daef7
.dword 0xc014237a343890fb
.dword 0x7feac597e572b7b4
.dword 0x7fc54524f32daef7
.dword 0xc014237a343890fb
.dword 0x7feac597e572b7b4
.dword 0x7fe0949924914346
.dword 0xbff0588b20ed1e69
.dword 0x7fe0f05a9bebbacf
.dword 0x7fe0949924914346
.dword 0xbff0588b20ed1e69
.dword 0x7fe0f05a9bebbacf
.dword 0x7fe0949924914346
.dword 0xbff0588b20ed1e69
.dword 0x7fe0f05a9bebbacf
.dword 0x7fe0949924914346
.dword 0xbff0588b20ed1e69
.dword 0x7fe0f05a9bebbacf
.dword 0x7fe0949924914346
.dword 0xbff0588b20ed1e69
.dword 0x7fe0f05a9bebbacf
.dword 0x7fef3c649975046b
.dword 0xbfef5b7610493341
.dword 0x7fee9bc871565d06
.dword 0x7fef3c649975046b
.dword 0xbfef5b7610493341
.dword 0x7fee9bc871565d06
.dword 0x7fef3c649975046b
.dword 0xbfef5b7610493341
.dword 0x7fee9bc871565d06
.dword 0x7fef3c649975046b
.dword 0xbfef5b7610493341
.dword 0x7fee9bc871565d06
.dword 0x7fef3c649975046b
.dword 0xbfef5b7610493341
.dword 0x7fee9bc871565d06
.dword 0x7febd6501f77c75d
.dword 0xbfe9521af5bd0569
.dword 0x7fe606db39cc9430
.dword 0x7febd6501f77c75d
.dword 0xbfe9521af5bd0569
.dword 0x7fe606db39cc9430
.dword 0x7febd6501f77c75d
.dword 0xbfe9521af5bd0569
.dword 0x7fe606db39cc9430
.dword 0x7febd6501f77c75d
.dword 0xbfe9521af5bd0569
.dword 0x7fe606db39cc9430
.dword 0x7febd6501f77c75d
.dword 0xbfe9521af5bd0569
.dword 0x7fe606db39cc9430
.dword 0x7fd66723c760f03d
.dword 0xc0034369dcdd22ad
.dword 0x7feaf8de9cb09cc3
.dword 0x7fd66723c760f03d
.dword 0xc0034369dcdd22ad
.dword 0x7feaf8de9cb09cc3
.dword 0x7fd66723c760f03d
.dword 0xc0034369dcdd22ad
.dword 0x7feaf8de9cb09cc3
.dword 0x7fd66723c760f03d
.dword 0xc0034369dcdd22ad
.dword 0x7feaf8de9cb09cc3
.dword 0x7fd66723c760f03d
.dword 0xc0034369dcdd22ad
.dword 0x7feaf8de9cb09cc3
.dword 0x7fe79c481bc003f9
.dword 0xbff1f5a288a490a8
.dword 0x7fea808585a245b3
.dword 0x7fe79c481bc003f9
.dword 0xbff1f5a288a490a8
.dword 0x7fea808585a245b3
.dword 0x7fe79c481bc003f9
.dword 0xbff1f5a288a490a8
.dword 0x7fea808585a245b3
.dword 0x7fe79c481bc003f9
.dword 0xbff1f5a288a490a8
.dword 0x7fea808585a245b3
.dword 0x7fe79c481bc003f9
.dword 0xbff1f5a288a490a8
.dword 0x7fea808585a245b3
.dword 0x7fd643bd6230e5b5
.dword 0xbffd9f368b89c1a3
.dword 0x7fe49c2a2961e033
.dword 0x7fd643bd6230e5b5
.dword 0xbffd9f368b89c1a3
.dword 0x7fe49c2a2961e033
.dword 0x7fd643bd6230e5b5
.dword 0xbffd9f368b89c1a3
.dword 0x7fe49c2a2961e033
.dword 0x7fd643bd6230e5b5
.dword 0xbffd9f368b89c1a3
.dword 0x7fe49c2a2961e033
.dword 0x7fd643bd6230e5b5
.dword 0xbffd9f368b89c1a3
.dword 0x7fe49c2a2961e033
.dword 0x7fe4b7cdaeb1ce31
.dword 0xbff3b62b1f2cbf86
.dword 0x7fe98626d96d20d9
.dword 0x7fe4b7cdaeb1ce31
.dword 0xbff3b62b1f2cbf86
.dword 0x7fe98626d96d20d9
.dword 0x7fe4b7cdaeb1ce31
.dword 0xbff3b62b1f2cbf86
.dword 0x7fe98626d96d20d9
.dword 0x7fe4b7cdaeb1ce31
.dword 0xbff3b62b1f2cbf86
.dword 0x7fe98626d96d20d9
.dword 0x7fe4b7cdaeb1ce31
.dword 0xbff3b62b1f2cbf86
.dword 0x7fe98626d96d20d9
.dword 0x7fdda0cada4f8445
.dword 0xbffc39d54d166e8c
.dword 0x7fea223d66005b84
.dword 0x7fdda0cada4f8445
.dword 0xbffc39d54d166e8c
.dword 0x7fea223d66005b84
.dword 0x7fdda0cada4f8445
.dword 0xbffc39d54d166e8c
.dword 0x7fea223d66005b84
.dword 0x7fdda0cada4f8445
.dword 0xbffc39d54d166e8c
.dword 0x7fea223d66005b84
.dword 0x7fdda0cada4f8445
.dword 0xbffc39d54d166e8c
.dword 0x7fea223d66005b84
.dword 0x7fd00b57aa9b7409
.dword 0xc0056ee79e4569cf
.dword 0x7fe57e194d1840e7
.dword 0x7fd00b57aa9b7409
.dword 0xc0056ee79e4569cf
.dword 0x7fe57e194d1840e7
.dword 0x7fd00b57aa9b7409
.dword 0xc0056ee79e4569cf
.dword 0x7fe57e194d1840e7
.dword 0x7fd00b57aa9b7409
.dword 0xc0056ee79e4569cf
.dword 0x7fe57e194d1840e7
.dword 0x7fd00b57aa9b7409
.dword 0xc0056ee79e4569cf
.dword 0x7fe57e194d1840e7
.dword 0x7f87b799796bf9ff
.dword 0xc0479dd7cecf9d03
.dword 0x7fe180f30b184945
.dword 0x7f87b799796bf9ff
.dword 0xc0479dd7cecf9d03
.dword 0x7fe180f30b184945
.dword 0x7f87b799796bf9ff
.dword 0xc0479dd7cecf9d03
.dword 0x7fe180f30b184945
.dword 0x7f87b799796bf9ff
.dword 0xc0479dd7cecf9d03
.dword 0x7fe180f30b184945
.dword 0x7f87b799796bf9ff
.dword 0xc0479dd7cecf9d03
.dword 0x7fe180f30b184945
.dword 0x7fe4ca4730b6efdc
.dword 0xbfec9994a79146ea
.dword 0x7fe294c603684405
.dword 0x7fe4ca4730b6efdc
.dword 0xbfec9994a79146ea
.dword 0x7fe294c603684405
.dword 0x7fe4ca4730b6efdc
.dword 0xbfec9994a79146ea
.dword 0x7fe294c603684405
.dword 0x7fe4ca4730b6efdc
.dword 0xbfec9994a79146ea
.dword 0x7fe294c603684405
.dword 0x7fe4ca4730b6efdc
.dword 0xbfec9994a79146ea
.dword 0x7fe294c603684405
.dword 0x7fd2ce78cfa7b389
.dword 0xc009bdfcdecda208
.dword 0x7fee41ecf15c3c31
.dword 0x7fd2ce78cfa7b389
.dword 0xc009bdfcdecda208
.dword 0x7fee41ecf15c3c31
.dword 0x7fd2ce78cfa7b389
.dword 0xc009bdfcdecda208
.dword 0x7fee41ecf15c3c31
.dword 0x7fd2ce78cfa7b389
.dword 0xc009bdfcdecda208
.dword 0x7fee41ecf15c3c31
.dword 0x7fd2ce78cfa7b389
.dword 0xc009bdfcdecda208
.dword 0x7fee41ecf15c3c31
.dword 0x7fe8a1c573ec7fe3
.dword 0xbfecb8b02f3410e4
.dword 0x7fe61bb692dd2b3e
.dword 0x7fe8a1c573ec7fe3
.dword 0xbfecb8b02f3410e4
.dword 0x7fe61bb692dd2b3e
.dword 0x7fe8a1c573ec7fe3
.dword 0xbfecb8b02f3410e4
.dword 0x7fe61bb692dd2b3e
.dword 0x7fe8a1c573ec7fe3
.dword 0xbfecb8b02f3410e4
.dword 0x7fe61bb692dd2b3e
.dword 0x7fe8a1c573ec7fe3
.dword 0xbfecb8b02f3410e4
.dword 0x7fe61bb692dd2b3e
.dword 0x7fd1f97ae6ae8e5d
.dword 0xbffbab5376882ede
.dword 0x7fdf15777a1e6e19
.dword 0x7fd1f97ae6ae8e5d
.dword 0xbffbab5376882ede
.dword 0x7fdf15777a1e6e19
.dword 0x7fd1f97ae6ae8e5d
.dword 0xbffbab5376882ede
.dword 0x7fdf15777a1e6e19
.dword 0x7fd1f97ae6ae8e5d
.dword 0xbffbab5376882ede
.dword 0x7fdf15777a1e6e19
.dword 0x7fd1f97ae6ae8e5d
.dword 0xbffbab5376882ede
.dword 0x7fdf15777a1e6e19
.dword 0x7fd742774c7979c9
.dword 0xbfff039ccd843cce
.dword 0x7fe68b03c6ac58cf
.dword 0x7fd742774c7979c9
.dword 0xbfff039ccd843cce
.dword 0x7fe68b03c6ac58cf
.dword 0x7fd742774c7979c9
.dword 0xbfff039ccd843cce
.dword 0x7fe68b03c6ac58cf
.dword 0x7fd742774c7979c9
.dword 0xbfff039ccd843cce
.dword 0x7fe68b03c6ac58cf
.dword 0x7fd742774c7979c9
.dword 0xbfff039ccd843cce
.dword 0x7fe68b03c6ac58cf
.dword 0x7fe53fa39c232464
.dword 0xbff24dd586c91739
.dword 0x7fe84ef5e539092d
.dword 0x7fe53fa39c232464
.dword 0xbff24dd586c91739
.dword 0x7fe84ef5e539092d
.dword 0x7fe53fa39c232464
.dword 0xbff24dd586c91739
.dword 0x7fe84ef5e539092d
.dword 0x7fe53fa39c232464
.dword 0xbff24dd586c91739
.dword 0x7fe84ef5e539092d
.dword 0x7fe53fa39c232464
.dword 0xbff24dd586c91739
.dword 0x7fe84ef5e539092d
.dword 0x7fe8cbf7156c3c4d
.dword 0xbfecaf13c85d378a
.dword 0x7fe63a22f659957b
.dword 0x7fe8cbf7156c3c4d
.dword 0xbfecaf13c85d378a
.dword 0x7fe63a22f659957b
.dword 0x7fe8cbf7156c3c4d
.dword 0xbfecaf13c85d378a
.dword 0x7fe63a22f659957b
.dword 0x7fe8cbf7156c3c4d
.dword 0xbfecaf13c85d378a
.dword 0x7fe63a22f659957b
.dword 0x7fe8cbf7156c3c4d
.dword 0xbfecaf13c85d378a
.dword 0x7fe63a22f659957b
.dword 0x7fd71ff810813f2d
.dword 0xc001672eac27ff57
.dword 0x7fe92718d32e3c43
.dword 0x7fd71ff810813f2d
.dword 0xc001672eac27ff57
.dword 0x7fe92718d32e3c43
.dword 0x7fd71ff810813f2d
.dword 0xc001672eac27ff57
.dword 0x7fe92718d32e3c43
.dword 0x7fd71ff810813f2d
.dword 0xc001672eac27ff57
.dword 0x7fe92718d32e3c43
.dword 0x7fd71ff810813f2d
.dword 0xc001672eac27ff57
.dword 0x7fe92718d32e3c43
.dword 0x7fe9064ca6314142
.dword 0xbff1bf221a3e5a23
.dword 0x7febc1a1fa02e46b
.dword 0x7fe9064ca6314142
.dword 0xbff1bf221a3e5a23
.dword 0x7febc1a1fa02e46b
.dword 0x7fe9064ca6314142
.dword 0xbff1bf221a3e5a23
.dword 0x7febc1a1fa02e46b
.dword 0x7fe9064ca6314142
.dword 0xbff1bf221a3e5a23
.dword 0x7febc1a1fa02e46b
.dword 0x7fe9064ca6314142
.dword 0xbff1bf221a3e5a23
.dword 0x7febc1a1fa02e46b
.dword 0x7fb6d1b5afbd5567
.dword 0xc00870885b5bcec4
.dword 0x7fd16d877c1f1617
.dword 0x7fb6d1b5afbd5567
.dword 0xc00870885b5bcec4
.dword 0x7fd16d877c1f1617
.dword 0x7fb6d1b5afbd5567
.dword 0xc00870885b5bcec4
.dword 0x7fd16d877c1f1617
.dword 0x7fb6d1b5afbd5567
.dword 0xc00870885b5bcec4
.dword 0x7fd16d877c1f1617
.dword 0x7fb6d1b5afbd5567
.dword 0xc00870885b5bcec4
.dword 0x7fd16d877c1f1617
.dword 0x7fdff4e626f1408f
.dword 0xbfe5b1293d297fe2
.dword 0x7fd5a9a2d170e2e7
.dword 0x7fdff4e626f1408f
.dword 0xbfe5b1293d297fe2
.dword 0x7fd5a9a2d170e2e7
.dword 0x7fdff4e626f1408f
.dword 0xbfe5b1293d297fe2
.dword 0x7fd5a9a2d170e2e7
.dword 0x7fdff4e626f1408f
.dword 0xbfe5b1293d297fe2
.dword 0x7fd5a9a2d170e2e7
.dword 0x7fdff4e626f1408f
.dword 0xbfe5b1293d297fe2
.dword 0x7fd5a9a2d170e2e7
.dword 0x7feeb6cfccb7b3a4
.dword 0xbfe4e7209b2b785d
.dword 0x7fe41018d7bfa2cd
.dword 0x7feeb6cfccb7b3a4
.dword 0xbfe4e7209b2b785d
.dword 0x7fe41018d7bfa2cd
.dword 0x7feeb6cfccb7b3a4
.dword 0xbfe4e7209b2b785d
.dword 0x7fe41018d7bfa2cd
.dword 0x7feeb6cfccb7b3a4
.dword 0xbfe4e7209b2b785d
.dword 0x7fe41018d7bfa2cd
.dword 0x7feeb6cfccb7b3a4
.dword 0xbfe4e7209b2b785d
.dword 0x7fe41018d7bfa2cd
.dword 0x7fd820c7be939191
.dword 0xc004f9449495eae2
.dword 0x7fefa0df3e20838d
.dword 0x7fd820c7be939191
.dword 0xc004f9449495eae2
.dword 0x7fefa0df3e20838d
.dword 0x7fd820c7be939191
.dword 0xc004f9449495eae2
.dword 0x7fefa0df3e20838d
.dword 0x7fd820c7be939191
.dword 0xc004f9449495eae2
.dword 0x7fefa0df3e20838d
.dword 0x7fd820c7be939191
.dword 0xc004f9449495eae2
.dword 0x7fefa0df3e20838d
.dword 0x7fd9d7af8f37029d
.dword 0xbfd7389598bd5d38
.dword 0x7fc2c0b871cd0c13
.dword 0x7fd9d7af8f37029d
.dword 0xbfd7389598bd5d38
.dword 0x7fc2c0b871cd0c13
.dword 0x7fd9d7af8f37029d
.dword 0xbfd7389598bd5d38
.dword 0x7fc2c0b871cd0c13
.dword 0x7fd9d7af8f37029d
.dword 0xbfd7389598bd5d38
.dword 0x7fc2c0b871cd0c13
.dword 0x7fd9d7af8f37029d
.dword 0xbfd7389598bd5d38
.dword 0x7fc2c0b871cd0c13
.dword 0x7fdea8a1aa313989
.dword 0xbfe370b6ca44c088
.dword 0x7fd2a01d53c2b9bb
.dword 0x7fdea8a1aa313989
.dword 0xbfe370b6ca44c088
.dword 0x7fd2a01d53c2b9bb
.dword 0x7fdea8a1aa313989
.dword 0xbfe370b6ca44c088
.dword 0x7fd2a01d53c2b9bb
.dword 0x7fdea8a1aa313989
.dword 0xbfe370b6ca44c088
.dword 0x7fd2a01d53c2b9bb
.dword 0x7fdea8a1aa313989
.dword 0xbfe370b6ca44c088
.dword 0x7fd2a01d53c2b9bb
.dword 0x7fdf3dff3d82be09
.dword 0xbff7e9106e33fa27
.dword 0x7fe7581ae94553bc
.dword 0x7fdf3dff3d82be09
.dword 0xbff7e9106e33fa27
.dword 0x7fe7581ae94553bc
.dword 0x7fdf3dff3d82be09
.dword 0xbff7e9106e33fa27
.dword 0x7fe7581ae94553bc
.dword 0x7fdf3dff3d82be09
.dword 0xbff7e9106e33fa27
.dword 0x7fe7581ae94553bc
.dword 0x7fdf3dff3d82be09
.dword 0xbff7e9106e33fa27
.dword 0x7fe7581ae94553bc
.dword 0x7fef3b743a16ba1c
.dword 0xbfddbd76f744d1ce
.dword 0x7fdd06cc97ae5955
.dword 0x7fef3b743a16ba1c
.dword 0xbfddbd76f744d1ce
.dword 0x7fdd06cc97ae5955
.dword 0x7fef3b743a16ba1c
.dword 0xbfddbd76f744d1ce
.dword 0x7fdd06cc97ae5955
.dword 0x7fef3b743a16ba1c
.dword 0xbfddbd76f744d1ce
.dword 0x7fdd06cc97ae5955
.dword 0x7fef3b743a16ba1c
.dword 0xbfddbd76f744d1ce
.dword 0x7fdd06cc97ae5955
.dword 0x7feffa43e27b4aa7
.dword 0xbfeb4a8b79988117
.dword 0x7feb45a764ad5a54
.dword 0x7feffa43e27b4aa7
.dword 0xbfeb4a8b79988117
.dword 0x7feb45a764ad5a54
.dword 0x7feffa43e27b4aa7
.dword 0xbfeb4a8b79988117
.dword 0x7feb45a764ad5a54
.dword 0x7feffa43e27b4aa7
.dword 0xbfeb4a8b79988117
.dword 0x7feb45a764ad5a54
.dword 0x7feffa43e27b4aa7
.dword 0xbfeb4a8b79988117
.dword 0x7feb45a764ad5a54
.dword 0x7fd2de3709212eb9
.dword 0xbff897eeee2580a5
.dword 0x7fdd007d77604347
.dword 0x7fd2de3709212eb9
.dword 0xbff897eeee2580a5
.dword 0x7fdd007d77604347
.dword 0x7fd2de3709212eb9
.dword 0xbff897eeee2580a5
.dword 0x7fdd007d77604347
.dword 0x7fd2de3709212eb9
.dword 0xbff897eeee2580a5
.dword 0x7fdd007d77604347
.dword 0x7fd2de3709212eb9
.dword 0xbff897eeee2580a5
.dword 0x7fdd007d77604347
.dword 0x7fc31a78b0f0b973
.dword 0xc016a3e0418950a1
.dword 0x7feb080f61aebdc6
.dword 0x7fc31a78b0f0b973
.dword 0xc016a3e0418950a1
.dword 0x7feb080f61aebdc6
.dword 0x7fc31a78b0f0b973
.dword 0xc016a3e0418950a1
.dword 0x7feb080f61aebdc6
.dword 0x7fc31a78b0f0b973
.dword 0xc016a3e0418950a1
.dword 0x7feb080f61aebdc6
.dword 0x7fc31a78b0f0b973
.dword 0xc016a3e0418950a1
.dword 0x7feb080f61aebdc6
.dword 0x7fbb4c24c566faff
.dword 0xc0104d23f761e4e2
.dword 0x7fdbcfc092fbe62d
.dword 0x7fbb4c24c566faff
.dword 0xc0104d23f761e4e2
.dword 0x7fdbcfc092fbe62d
.dword 0x7fbb4c24c566faff
.dword 0xc0104d23f761e4e2
.dword 0x7fdbcfc092fbe62d
.dword 0x7fbb4c24c566faff
.dword 0xc0104d23f761e4e2
.dword 0x7fdbcfc092fbe62d
.dword 0x7fbb4c24c566faff
.dword 0xc0104d23f761e4e2
.dword 0x7fdbcfc092fbe62d
.dword 0x7fe42c3b2396030c
.dword 0xbff400115a8f3f08
.dword 0x7fe9375fcda7c10f
.dword 0x7fe42c3b2396030c
.dword 0xbff400115a8f3f08
.dword 0x7fe9375fcda7c10f
.dword 0x7fe42c3b2396030c
.dword 0xbff400115a8f3f08
.dword 0x7fe9375fcda7c10f
.dword 0x7fe42c3b2396030c
.dword 0xbff400115a8f3f08
.dword 0x7fe9375fcda7c10f
.dword 0x7fe42c3b2396030c
.dword 0xbff400115a8f3f08
.dword 0x7fe9375fcda7c10f
.dword 0x7fe769cb824195b1
.dword 0xbff4c5284c35ebf9
.dword 0x7fee64bff487f6af
.dword 0x7fe769cb824195b1
.dword 0xbff4c5284c35ebf9
.dword 0x7fee64bff487f6af
.dword 0x7fe769cb824195b1
.dword 0xbff4c5284c35ebf9
.dword 0x7fee64bff487f6af
.dword 0x7fe769cb824195b1
.dword 0xbff4c5284c35ebf9
.dword 0x7fee64bff487f6af
.dword 0x7fe769cb824195b1
.dword 0xbff4c5284c35ebf9
.dword 0x7fee64bff487f6af
.dword 0x7fead469a4d40781
.dword 0xbfc3ef164ade94e5
.dword 0x7fc0b693dfb3681f
.dword 0x7fead469a4d40781
.dword 0xbfc3ef164ade94e5
.dword 0x7fc0b693dfb3681f
.dword 0x7fead469a4d40781
.dword 0xbfc3ef164ade94e5
.dword 0x7fc0b693dfb3681f
.dword 0x7fead469a4d40781
.dword 0xbfc3ef164ade94e5
.dword 0x7fc0b693dfb3681f
.dword 0x7fead469a4d40781
.dword 0xbfc3ef164ade94e5
.dword 0x7fc0b693dfb3681f
.dword 0x7fa0c0d5f34e784f
.dword 0xc02e2af74c5b771a
.dword 0x7fdf968e4aac6955
.dword 0x7fa0c0d5f34e784f
.dword 0xc02e2af74c5b771a
.dword 0x7fdf968e4aac6955
.dword 0x7fa0c0d5f34e784f
.dword 0xc02e2af74c5b771a
.dword 0x7fdf968e4aac6955
.dword 0x7fa0c0d5f34e784f
.dword 0xc02e2af74c5b771a
.dword 0x7fdf968e4aac6955
.dword 0x7fa0c0d5f34e784f
.dword 0xc02e2af74c5b771a
.dword 0x7fdf968e4aac6955
.dword 0x7fac85a87ea8c3df
.dword 0xc03071c1175cfa80
.dword 0x7fed5070aa8da4e6
.dword 0x7fac85a87ea8c3df
.dword 0xc03071c1175cfa80
.dword 0x7fed5070aa8da4e6
.dword 0x7fac85a87ea8c3df
.dword 0xc03071c1175cfa80
.dword 0x7fed5070aa8da4e6
.dword 0x7fac85a87ea8c3df
.dword 0xc03071c1175cfa80
.dword 0x7fed5070aa8da4e6
.dword 0x7fac85a87ea8c3df
.dword 0xc03071c1175cfa80
.dword 0x7fed5070aa8da4e6
.dword 0x7fdd299df5352de3
.dword 0xbfed9e66baf38c0b
.dword 0x7fdafe12412a3f8b
.dword 0x7fdd299df5352de3
.dword 0xbfed9e66baf38c0b
.dword 0x7fdafe12412a3f8b
.dword 0x7fdd299df5352de3
.dword 0xbfed9e66baf38c0b
.dword 0x7fdafe12412a3f8b
.dword 0x7fdd299df5352de3
.dword 0xbfed9e66baf38c0b
.dword 0x7fdafe12412a3f8b
.dword 0x7fdd299df5352de3
.dword 0xbfed9e66baf38c0b
.dword 0x7fdafe12412a3f8b
.dword 0x7fe301b8dd6015ba
.dword 0xbff642342f8435b6
.dword 0x7fea7103490036bf
.dword 0x7fe301b8dd6015ba
.dword 0xbff642342f8435b6
.dword 0x7fea7103490036bf
.dword 0x7fe301b8dd6015ba
.dword 0xbff642342f8435b6
.dword 0x7fea7103490036bf
.dword 0x7fe301b8dd6015ba
.dword 0xbff642342f8435b6
.dword 0x7fea7103490036bf
.dword 0x7fe301b8dd6015ba
.dword 0xbff642342f8435b6
.dword 0x7fea7103490036bf
.dword 0x7fd9fa11c0412e3d
.dword 0xbfe2b6247a905d89
.dword 0x7fce610bbbd953db
.dword 0x7fd9fa11c0412e3d
.dword 0xbfe2b6247a905d89
.dword 0x7fce610bbbd953db
.dword 0x7fd9fa11c0412e3d
.dword 0xbfe2b6247a905d89
.dword 0x7fce610bbbd953db
.dword 0x7fd9fa11c0412e3d
.dword 0xbfe2b6247a905d89
.dword 0x7fce610bbbd953db
.dword 0x7fd9fa11c0412e3d
.dword 0xbfe2b6247a905d89
.dword 0x7fce610bbbd953db
.dword 0x7fef930a02671095
.dword 0xbfe14d99faa2cdd7
.dword 0x7fe112af0fb1c5fb
.dword 0x7fef930a02671095
.dword 0xbfe14d99faa2cdd7
.dword 0x7fe112af0fb1c5fb
.dword 0x7fef930a02671095
.dword 0xbfe14d99faa2cdd7
.dword 0x7fe112af0fb1c5fb
.dword 0x7fef930a02671095
.dword 0xbfe14d99faa2cdd7
.dword 0x7fe112af0fb1c5fb
.dword 0x7fef930a02671095
.dword 0xbfe14d99faa2cdd7
.dword 0x7fe112af0fb1c5fb
.dword 0x7fc4acff5b85a5cb
.dword 0xbfd33caa795905c4
.dword 0x7fa8dbd4452e6b5f
.dword 0x7fc4acff5b85a5cb
.dword 0xbfd33caa795905c4
.dword 0x7fa8dbd4452e6b5f
.dword 0x7fc4acff5b85a5cb
.dword 0xbfd33caa795905c4
.dword 0x7fa8dbd4452e6b5f
.dword 0x7fc4acff5b85a5cb
.dword 0xbfd33caa795905c4
.dword 0x7fa8dbd4452e6b5f
.dword 0x7fc4acff5b85a5cb
.dword 0xbfd33caa795905c4
.dword 0x7fa8dbd4452e6b5f
.dword 0x7fe60db7dd3cba12
.dword 0xbff723e350962bf4
.dword 0x7fefe52fa1ef67a1
.dword 0x7fe60db7dd3cba12
.dword 0xbff723e350962bf4
.dword 0x7fefe52fa1ef67a1
.dword 0x7fe60db7dd3cba12
.dword 0xbff723e350962bf4
.dword 0x7fefe52fa1ef67a1
.dword 0x7fe60db7dd3cba12
.dword 0xbff723e350962bf4
.dword 0x7fefe52fa1ef67a1
.dword 0x7fe60db7dd3cba12
.dword 0xbff723e350962bf4
.dword 0x7fefe52fa1ef67a1
.dword 0x7fb404ab140ecaf7
.dword 0xbffe75dcf1983ff7
.dword 0x7fc30e1bab89c4e3
.dword 0x7fb404ab140ecaf7
.dword 0xbffe75dcf1983ff7
.dword 0x7fc30e1bab89c4e3
.dword 0x7fb404ab140ecaf7
.dword 0xbffe75dcf1983ff7
.dword 0x7fc30e1bab89c4e3
.dword 0x7fb404ab140ecaf7
.dword 0xbffe75dcf1983ff7
.dword 0x7fc30e1bab89c4e3
.dword 0x7fb404ab140ecaf7
.dword 0xbffe75dcf1983ff7
.dword 0x7fc30e1bab89c4e3
.dword 0x7fd44673727309cf
.dword 0xbfe1ed5312aa8e46
.dword 0x7fc6b7977cc7c6d7
.dword 0x7fd44673727309cf
.dword 0xbfe1ed5312aa8e46
.dword 0x7fc6b7977cc7c6d7
.dword 0x7fd44673727309cf
.dword 0xbfe1ed5312aa8e46
.dword 0x7fc6b7977cc7c6d7
.dword 0x7fd44673727309cf
.dword 0xbfe1ed5312aa8e46
.dword 0x7fc6b7977cc7c6d7
.dword 0x7fd44673727309cf
.dword 0xbfe1ed5312aa8e46
.dword 0x7fc6b7977cc7c6d7
.dword 0x7fe171d1e85e4878
.dword 0xbfe25742c389cbb5
.dword 0x7fd3ff2fd57cdba5
.dword 0x7fe171d1e85e4878
.dword 0xbfe25742c389cbb5
.dword 0x7fd3ff2fd57cdba5
.dword 0x7fe171d1e85e4878
.dword 0xbfe25742c389cbb5
.dword 0x7fd3ff2fd57cdba5
.dword 0x7fe171d1e85e4878
.dword 0xbfe25742c389cbb5
.dword 0x7fd3ff2fd57cdba5
.dword 0x7fe171d1e85e4878
.dword 0xbfe25742c389cbb5
.dword 0x7fd3ff2fd57cdba5
.dword 0x7fd5c1e59a3495cf
.dword 0xc005bf982469fe46
.dword 0x7fed9306e2cf7822
.dword 0x7fd5c1e59a3495cf
.dword 0xc005bf982469fe46
.dword 0x7fed9306e2cf7822
.dword 0x7fd5c1e59a3495cf
.dword 0xc005bf982469fe46
.dword 0x7fed9306e2cf7822
.dword 0x7fd5c1e59a3495cf
.dword 0xc005bf982469fe46
.dword 0x7fed9306e2cf7822
.dword 0x7fd5c1e59a3495cf
.dword 0xc005bf982469fe46
.dword 0x7fed9306e2cf7822
.dword 0x7fe38be631735417
.dword 0xbff80c60b94db466
.dword 0x7fed60f86097c097
.dword 0x7fe38be631735417
.dword 0xbff80c60b94db466
.dword 0x7fed60f86097c097
.dword 0x7fe38be631735417
.dword 0xbff80c60b94db466
.dword 0x7fed60f86097c097
.dword 0x7fe38be631735417
.dword 0xbff80c60b94db466
.dword 0x7fed60f86097c097
.dword 0x7fe38be631735417
.dword 0xbff80c60b94db466
.dword 0x7fed60f86097c097
.dword 0x7fb7579046abe557
.dword 0xc00de56835772cb5
.dword 0x7fd5ceb1641a60d9
.dword 0x7fb7579046abe557
.dword 0xc00de56835772cb5
.dword 0x7fd5ceb1641a60d9
.dword 0x7fb7579046abe557
.dword 0xc00de56835772cb5
.dword 0x7fd5ceb1641a60d9
.dword 0x7fb7579046abe557
.dword 0xc00de56835772cb5
.dword 0x7fd5ceb1641a60d9
.dword 0x7fb7579046abe557
.dword 0xc00de56835772cb5
.dword 0x7fd5ceb1641a60d9
.dword 0x7fa2c15fdbb5e3cf
.dword 0xc039d1bad7655f2a
.dword 0x7fee43febfe9d259
.dword 0x7fa2c15fdbb5e3cf
.dword 0xc039d1bad7655f2a
.dword 0x7fee43febfe9d259
.dword 0x7fa2c15fdbb5e3cf
.dword 0xc039d1bad7655f2a
.dword 0x7fee43febfe9d259
.dword 0x7fa2c15fdbb5e3cf
.dword 0xc039d1bad7655f2a
.dword 0x7fee43febfe9d259
.dword 0x7fa2c15fdbb5e3cf
.dword 0xc039d1bad7655f2a
.dword 0x7fee43febfe9d259
.dword 0x7fe982e185781cc1
.dword 0xbff140f26a707f49
.dword 0x7feb829da92ef6eb
.dword 0x7fe982e185781cc1
.dword 0xbff140f26a707f49
.dword 0x7feb829da92ef6eb
.dword 0x7fe982e185781cc1
.dword 0xbff140f26a707f49
.dword 0x7feb829da92ef6eb
.dword 0x7fe982e185781cc1
.dword 0xbff140f26a707f49
.dword 0x7feb829da92ef6eb
.dword 0x7fe982e185781cc1
.dword 0xbff140f26a707f49
.dword 0x7feb829da92ef6eb
.dword 0x7fbba95a52df5767
.dword 0xc01bb4734aa2ffab
.dword 0x7fe7f2e07b1fbb17
.dword 0x7fbba95a52df5767
.dword 0xc01bb4734aa2ffab
.dword 0x7fe7f2e07b1fbb17
.dword 0x7fbba95a52df5767
.dword 0xc01bb4734aa2ffab
.dword 0x7fe7f2e07b1fbb17
.dword 0x7fbba95a52df5767
.dword 0xc01bb4734aa2ffab
.dword 0x7fe7f2e07b1fbb17
.dword 0x7fbba95a52df5767
.dword 0xc01bb4734aa2ffab
.dword 0x7fe7f2e07b1fbb17
.dword 0x7fe0ca5b7900ea57
.dword 0xbff7a69ea0a9f7a6
.dword 0x7fe8d1bd69d9f548
.dword 0x7fe0ca5b7900ea57
.dword 0xbff7a69ea0a9f7a6
.dword 0x7fe8d1bd69d9f548
.dword 0x7fe0ca5b7900ea57
.dword 0xbff7a69ea0a9f7a6
.dword 0x7fe8d1bd69d9f548
.dword 0x7fe0ca5b7900ea57
.dword 0xbff7a69ea0a9f7a6
.dword 0x7fe8d1bd69d9f548
.dword 0x7fe0ca5b7900ea57
.dword 0xbff7a69ea0a9f7a6
.dword 0x7fe8d1bd69d9f548
.dword 0x7fd60a5a04199781
.dword 0xbff07bd4acb086bc
.dword 0x7fd6b4ee8f2445b5
.dword 0x7fd60a5a04199781
.dword 0xbff07bd4acb086bc
.dword 0x7fd6b4ee8f2445b5
.dword 0x7fd60a5a04199781
.dword 0xbff07bd4acb086bc
.dword 0x7fd6b4ee8f2445b5
.dword 0x7fd60a5a04199781
.dword 0xbff07bd4acb086bc
.dword 0x7fd6b4ee8f2445b5
.dword 0x7fd60a5a04199781
.dword 0xbff07bd4acb086bc
.dword 0x7fd6b4ee8f2445b5
.dword 0x7fedbfbc83472936
.dword 0xbff036953caa3e91
.dword 0x7fee253919d94c5b
.dword 0x7fedbfbc83472936
.dword 0xbff036953caa3e91
.dword 0x7fee253919d94c5b
.dword 0x7fedbfbc83472936
.dword 0xbff036953caa3e91
.dword 0x7fee253919d94c5b
.dword 0x7fedbfbc83472936
.dword 0xbff036953caa3e91
.dword 0x7fee253919d94c5b
.dword 0x7fedbfbc83472936
.dword 0xbff036953caa3e91
.dword 0x7fee253919d94c5b
.dword 0x7fc9279f41e78217
.dword 0xc00ec3b664f905e6
.dword 0x7fe82efe20fbfe2b
.dword 0x7fc9279f41e78217
.dword 0xc00ec3b664f905e6
.dword 0x7fe82efe20fbfe2b
.dword 0x7fc9279f41e78217
.dword 0xc00ec3b664f905e6
.dword 0x7fe82efe20fbfe2b
.dword 0x7fc9279f41e78217
.dword 0xc00ec3b664f905e6
.dword 0x7fe82efe20fbfe2b
.dword 0x7fc9279f41e78217
.dword 0xc00ec3b664f905e6
.dword 0x7fe82efe20fbfe2b
.dword 0x7fc7285ea9faba7f
.dword 0xc0151e4ba7320788
.dword 0x7fee90d56fd14cc8
.dword 0x7fc7285ea9faba7f
.dword 0xc0151e4ba7320788
.dword 0x7fee90d56fd14cc8
.dword 0x7fc7285ea9faba7f
.dword 0xc0151e4ba7320788
.dword 0x7fee90d56fd14cc8
.dword 0x7fc7285ea9faba7f
.dword 0xc0151e4ba7320788
.dword 0x7fee90d56fd14cc8
.dword 0x7fc7285ea9faba7f
.dword 0xc0151e4ba7320788
.dword 0x7fee90d56fd14cc8
.dword 0x7f8297b073ec28bf
.dword 0xc014969a46af80a4
.dword 0x7fa7ec9ded4be93f
.dword 0x7f8297b073ec28bf
.dword 0xc014969a46af80a4
.dword 0x7fa7ec9ded4be93f
.dword 0x7f8297b073ec28bf
.dword 0xc014969a46af80a4
.dword 0x7fa7ec9ded4be93f
.dword 0x7f8297b073ec28bf
.dword 0xc014969a46af80a4
.dword 0x7fa7ec9ded4be93f
.dword 0x7f8297b073ec28bf
.dword 0xc014969a46af80a4
.dword 0x7fa7ec9ded4be93f
.dword 0x7fd76f910302cbdd
.dword 0xbff94717562172c6
.dword 0x7fe28339eb5d6c77
.dword 0x7fd76f910302cbdd
.dword 0xbff94717562172c6
.dword 0x7fe28339eb5d6c77
.dword 0x7fd76f910302cbdd
.dword 0xbff94717562172c6
.dword 0x7fe28339eb5d6c77
.dword 0x7fd76f910302cbdd
.dword 0xbff94717562172c6
.dword 0x7fe28339eb5d6c77
.dword 0x7fd76f910302cbdd
.dword 0xbff94717562172c6
.dword 0x7fe28339eb5d6c77
.dword 0x7f92804bc647cadf
.dword 0xc045ccc17c4e0cf2
.dword 0x7fe93526f5ace10b
.dword 0x7f92804bc647cadf
.dword 0xc045ccc17c4e0cf2
.dword 0x7fe93526f5ace10b
.dword 0x7f92804bc647cadf
.dword 0xc045ccc17c4e0cf2
.dword 0x7fe93526f5ace10b
.dword 0x7f92804bc647cadf
.dword 0xc045ccc17c4e0cf2
.dword 0x7fe93526f5ace10b
.dword 0x7f92804bc647cadf
.dword 0xc045ccc17c4e0cf2
.dword 0x7fe93526f5ace10b
.dword 0x7fe7fe52216e3a3d
.dword 0xbff207700538aa86
.dword 0x7feb0943a59dff43
.dword 0x7fe7fe52216e3a3d
.dword 0xbff207700538aa86
.dword 0x7feb0943a59dff43
.dword 0x7fe7fe52216e3a3d
.dword 0xbff207700538aa86
.dword 0x7feb0943a59dff43
.dword 0x7fe7fe52216e3a3d
.dword 0xbff207700538aa86
.dword 0x7feb0943a59dff43
.dword 0x7fe7fe52216e3a3d
.dword 0xbff207700538aa86
.dword 0x7feb0943a59dff43
.dword 0x7fef3403ffc18c4e
.dword 0xbf980322f838f766
.dword 0x7f976a11f9800e5f
.dword 0x7fef3403ffc18c4e
.dword 0xbf980322f838f766
.dword 0x7f976a11f9800e5f
.dword 0x7fef3403ffc18c4e
.dword 0xbf980322f838f766
.dword 0x7f976a11f9800e5f
.dword 0x7fef3403ffc18c4e
.dword 0xbf980322f838f766
.dword 0x7f976a11f9800e5f
.dword 0x7fef3403ffc18c4e
.dword 0xbf980322f838f766
.dword 0x7f976a11f9800e5f
.dword 0x7fe68ca648b458d1
.dword 0xbfb4b53acb56a497
.dword 0x7fad2f39d065486f
.dword 0x7fe68ca648b458d1
.dword 0xbfb4b53acb56a497
.dword 0x7fad2f39d065486f
.dword 0x7fe68ca648b458d1
.dword 0xbfb4b53acb56a497
.dword 0x7fad2f39d065486f
.dword 0x7fe68ca648b458d1
.dword 0xbfb4b53acb56a497
.dword 0x7fad2f39d065486f
.dword 0x7fe68ca648b458d1
.dword 0xbfb4b53acb56a497
.dword 0x7fad2f39d065486f
.dword 0x7fd435f4497a6a63
.dword 0xbff861a6c82110d2
.dword 0x7fdecc4833c7c22d
.dword 0x7fd435f4497a6a63
.dword 0xbff861a6c82110d2
.dword 0x7fdecc4833c7c22d
.dword 0x7fd435f4497a6a63
.dword 0xbff861a6c82110d2
.dword 0x7fdecc4833c7c22d
.dword 0x7fd435f4497a6a63
.dword 0xbff861a6c82110d2
.dword 0x7fdecc4833c7c22d
.dword 0x7fd435f4497a6a63
.dword 0xbff861a6c82110d2
.dword 0x7fdecc4833c7c22d
.dword 0x7fea314cd13968e7
.dword 0xbfe2cb7501dfc887
.dword 0x7fdec4877592448b
.dword 0x7fea314cd13968e7
.dword 0xbfe2cb7501dfc887
.dword 0x7fdec4877592448b
.dword 0x7fea314cd13968e7
.dword 0xbfe2cb7501dfc887
.dword 0x7fdec4877592448b
.dword 0x7fea314cd13968e7
.dword 0xbfe2cb7501dfc887
.dword 0x7fdec4877592448b
.dword 0x7fea314cd13968e7
.dword 0xbfe2cb7501dfc887
.dword 0x7fdec4877592448b
.dword 0x7fd5a01a288736c5
.dword 0xbfed5aa56f017c02
.dword 0x7fd3d659cad7c271
.dword 0x7fd5a01a288736c5
.dword 0xbfed5aa56f017c02
.dword 0x7fd3d659cad7c271
.dword 0x7fd5a01a288736c5
.dword 0xbfed5aa56f017c02
.dword 0x7fd3d659cad7c271
.dword 0x7fd5a01a288736c5
.dword 0xbfed5aa56f017c02
.dword 0x7fd3d659cad7c271
.dword 0x7fd5a01a288736c5
.dword 0xbfed5aa56f017c02
.dword 0x7fd3d659cad7c271
.dword 0x7f6bb6ea62484dff
.dword 0xc0690c64fc55e97f
.dword 0x7fe5b1a32ad4a90d
.dword 0x7f6bb6ea62484dff
.dword 0xc0690c64fc55e97f
.dword 0x7fe5b1a32ad4a90d
.dword 0x7f6bb6ea62484dff
.dword 0xc0690c64fc55e97f
.dword 0x7fe5b1a32ad4a90d
.dword 0x7f6bb6ea62484dff
.dword 0xc0690c64fc55e97f
.dword 0x7fe5b1a32ad4a90d
.dword 0x7f6bb6ea62484dff
.dword 0xc0690c64fc55e97f
.dword 0x7fe5b1a32ad4a90d
.dword 0x7fd34977ae8a092b
.dword 0xc00002a99ffaa461
.dword 0x7fe34cad56583569
.dword 0x7fd34977ae8a092b
.dword 0xc00002a99ffaa461
.dword 0x7fe34cad56583569
.dword 0x7fd34977ae8a092b
.dword 0xc00002a99ffaa461
.dword 0x7fe34cad56583569
.dword 0x7fd34977ae8a092b
.dword 0xc00002a99ffaa461
.dword 0x7fe34cad56583569
.dword 0x7fd34977ae8a092b
.dword 0xc00002a99ffaa461
.dword 0x7fe34cad56583569
.dword 0x7fc2a65c343892db
.dword 0xbfdc9ce16305fb76
.dword 0x7fb0acff0a9e8d47
.dword 0x7fc2a65c343892db
.dword 0xbfdc9ce16305fb76
.dword 0x7fb0acff0a9e8d47
.dword 0x7fc2a65c343892db
.dword 0xbfdc9ce16305fb76
.dword 0x7fb0acff0a9e8d47
.dword 0x7fc2a65c343892db
.dword 0xbfdc9ce16305fb76
.dword 0x7fb0acff0a9e8d47
.dword 0x7fc2a65c343892db
.dword 0xbfdc9ce16305fb76
.dword 0x7fb0acff0a9e8d47
.dword 0x7fd71dbc6351ba9b
.dword 0xbfdd67f63a22c8b1
.dword 0x7fc53e0c4ef901b7
.dword 0x7fd71dbc6351ba9b
.dword 0xbfdd67f63a22c8b1
.dword 0x7fc53e0c4ef901b7
.dword 0x7fd71dbc6351ba9b
.dword 0xbfdd67f63a22c8b1
.dword 0x7fc53e0c4ef901b7
.dword 0x7fd71dbc6351ba9b
.dword 0xbfdd67f63a22c8b1
.dword 0x7fc53e0c4ef901b7
.dword 0x7fd71dbc6351ba9b
.dword 0xbfdd67f63a22c8b1
.dword 0x7fc53e0c4ef901b7
.dword 0x7fec998825886bbc
.dword 0xbfd5655fb54b9f4c
.dword 0x7fd31f5b782c2cff
.dword 0x7fec998825886bbc
.dword 0xbfd5655fb54b9f4c
.dword 0x7fd31f5b782c2cff
.dword 0x7fec998825886bbc
.dword 0xbfd5655fb54b9f4c
.dword 0x7fd31f5b782c2cff
.dword 0x7fec998825886bbc
.dword 0xbfd5655fb54b9f4c
.dword 0x7fd31f5b782c2cff
.dword 0x7fec998825886bbc
.dword 0xbfd5655fb54b9f4c
.dword 0x7fd31f5b782c2cff
.dword 0x7fe619bd20c99aa7
.dword 0xbff6646aaf5982ba
.dword 0x7feeee1847dc4239
.dword 0x7fe619bd20c99aa7
.dword 0xbff6646aaf5982ba
.dword 0x7feeee1847dc4239
.dword 0x7fe619bd20c99aa7
.dword 0xbff6646aaf5982ba
.dword 0x7feeee1847dc4239
.dword 0x7fe619bd20c99aa7
.dword 0xbff6646aaf5982ba
.dword 0x7feeee1847dc4239
.dword 0x7fe619bd20c99aa7
.dword 0xbff6646aaf5982ba
.dword 0x7feeee1847dc4239
.dword 0x7fca363712e81d63
.dword 0xc0126159c540d020
.dword 0x7fee1c79b3dfcd57
.dword 0x7fca363712e81d63
.dword 0xc0126159c540d020
.dword 0x7fee1c79b3dfcd57
.dword 0x7fca363712e81d63
.dword 0xc0126159c540d020
.dword 0x7fee1c79b3dfcd57
.dword 0x7fca363712e81d63
.dword 0xc0126159c540d020
.dword 0x7fee1c79b3dfcd57
.dword 0x7fca363712e81d63
.dword 0xc0126159c540d020
.dword 0x7fee1c79b3dfcd57
.dword 0x7fe1415193812551
.dword 0xbff41cdfb6a8087a
.dword 0x7fe5b0c98a80bf69
.dword 0x7fe1415193812551
.dword 0xbff41cdfb6a8087a
.dword 0x7fe5b0c98a80bf69
.dword 0x7fe1415193812551
.dword 0xbff41cdfb6a8087a
.dword 0x7fe5b0c98a80bf69
.dword 0x7fe1415193812551
.dword 0xbff41cdfb6a8087a
.dword 0x7fe5b0c98a80bf69
.dword 0x7fe1415193812551
.dword 0xbff41cdfb6a8087a
.dword 0x7fe5b0c98a80bf69
.dword 0x7fd283f9d2825ba3
.dword 0xc00a9654e761f0b1
.dword 0x7feec46d7ccba9a3
.dword 0x7fd283f9d2825ba3
.dword 0xc00a9654e761f0b1
.dword 0x7feec46d7ccba9a3
.dword 0x7fd283f9d2825ba3
.dword 0xc00a9654e761f0b1
.dword 0x7feec46d7ccba9a3
.dword 0x7fd283f9d2825ba3
.dword 0xc00a9654e761f0b1
.dword 0x7feec46d7ccba9a3
.dword 0x7fd283f9d2825ba3
.dword 0xc00a9654e761f0b1
.dword 0x7feec46d7ccba9a3
.dword 0x7fef6ffe64a9d644
.dword 0xbfec6aa504850cbd
.dword 0x7febeac3b0aa7ae7
.dword 0x7fef6ffe64a9d644
.dword 0xbfec6aa504850cbd
.dword 0x7febeac3b0aa7ae7
.dword 0x7fef6ffe64a9d644
.dword 0xbfec6aa504850cbd
.dword 0x7febeac3b0aa7ae7
.dword 0x7fef6ffe64a9d644
.dword 0xbfec6aa504850cbd
.dword 0x7febeac3b0aa7ae7
.dword 0x7fef6ffe64a9d644
.dword 0xbfec6aa504850cbd
.dword 0x7febeac3b0aa7ae7
.dword 0x7fcacf777c60a3c7
.dword 0xbff075d1281c18a5
.dword 0x7fcb94e30f5cae37
.dword 0x7fcacf777c60a3c7
.dword 0xbff075d1281c18a5
.dword 0x7fcb94e30f5cae37
.dword 0x7fcacf777c60a3c7
.dword 0xbff075d1281c18a5
.dword 0x7fcb94e30f5cae37
.dword 0x7fcacf777c60a3c7
.dword 0xbff075d1281c18a5
.dword 0x7fcb94e30f5cae37
.dword 0x7fcacf777c60a3c7
.dword 0xbff075d1281c18a5
.dword 0x7fcb94e30f5cae37
.dword 0x7f5d144fc758c3ff
.dword 0xc07eaf869e3b1341
.dword 0x7febe28c340570cd
.dword 0x7f5d144fc758c3ff
.dword 0xc07eaf869e3b1341
.dword 0x7febe28c340570cd
.dword 0x7f5d144fc758c3ff
.dword 0xc07eaf869e3b1341
.dword 0x7febe28c340570cd
.dword 0x7f5d144fc758c3ff
.dword 0xc07eaf869e3b1341
.dword 0x7febe28c340570cd
.dword 0x7f5d144fc758c3ff
.dword 0xc07eaf869e3b1341
.dword 0x7febe28c340570cd
.dword 0x7fe3c22bc9c78300
.dword 0xbfca43e2dae46a30
.dword 0x7fc037ae321da893
.dword 0x7fe3c22bc9c78300
.dword 0xbfca43e2dae46a30
.dword 0x7fc037ae321da893
.dword 0x7fe3c22bc9c78300
.dword 0xbfca43e2dae46a30
.dword 0x7fc037ae321da893
.dword 0x7fe3c22bc9c78300
.dword 0xbfca43e2dae46a30
.dword 0x7fc037ae321da893
.dword 0x7fe3c22bc9c78300
.dword 0xbfca43e2dae46a30
.dword 0x7fc037ae321da893
.dword 0x7fe9823a6849a878
.dword 0xbfc648419e5f7622
.dword 0x7fc1c32179e3068f
.dword 0x7fe9823a6849a878
.dword 0xbfc648419e5f7622
.dword 0x7fc1c32179e3068f
.dword 0x7fe9823a6849a878
.dword 0xbfc648419e5f7622
.dword 0x7fc1c32179e3068f
.dword 0x7fe9823a6849a878
.dword 0xbfc648419e5f7622
.dword 0x7fc1c32179e3068f
.dword 0x7fe9823a6849a878
.dword 0xbfc648419e5f7622
.dword 0x7fc1c32179e3068f
.dword 0x7fe880d2a98ec8a6
.dword 0xbfcaae02012bf970
.dword 0x7fc46de92c30d8b3
.dword 0x7fe880d2a98ec8a6
.dword 0xbfcaae02012bf970
.dword 0x7fc46de92c30d8b3
.dword 0x7fe880d2a98ec8a6
.dword 0xbfcaae02012bf970
.dword 0x7fc46de92c30d8b3
.dword 0x7fe880d2a98ec8a6
.dword 0xbfcaae02012bf970
.dword 0x7fc46de92c30d8b3
.dword 0x7fe880d2a98ec8a6
.dword 0xbfcaae02012bf970
.dword 0x7fc46de92c30d8b3
.dword 0x7fd1e30a0174e413
.dword 0xc00a3ad354c23d0e
.dword 0x7fed52b387784731
.dword 0x7fd1e30a0174e413
.dword 0xc00a3ad354c23d0e
.dword 0x7fed52b387784731
.dword 0x7fd1e30a0174e413
.dword 0xc00a3ad354c23d0e
.dword 0x7fed52b387784731
.dword 0x7fd1e30a0174e413
.dword 0xc00a3ad354c23d0e
.dword 0x7fed52b387784731
.dword 0x7fd1e30a0174e413
.dword 0xc00a3ad354c23d0e
.dword 0x7fed52b387784731
.dword 0x7f8adb9cbb2edaff
.dword 0xc03086bf70a767c0
.dword 0x7fcbbdcd5687c963
.dword 0x7f8adb9cbb2edaff
.dword 0xc03086bf70a767c0
.dword 0x7fcbbdcd5687c963
.dword 0x7f8adb9cbb2edaff
.dword 0xc03086bf70a767c0
.dword 0x7fcbbdcd5687c963
.dword 0x7f8adb9cbb2edaff
.dword 0xc03086bf70a767c0
.dword 0x7fcbbdcd5687c963
.dword 0x7f8adb9cbb2edaff
.dword 0xc03086bf70a767c0
.dword 0x7fcbbdcd5687c963
.dword 0x7fe1667d2c686bf9
.dword 0xbff0e3570e2acd1c
.dword 0x7fe25db9e8ff508c
.dword 0x7fe1667d2c686bf9
.dword 0xbff0e3570e2acd1c
.dword 0x7fe25db9e8ff508c
.dword 0x7fe1667d2c686bf9
.dword 0xbff0e3570e2acd1c
.dword 0x7fe25db9e8ff508c
.dword 0x7fe1667d2c686bf9
.dword 0xbff0e3570e2acd1c
.dword 0x7fe25db9e8ff508c
.dword 0x7fe1667d2c686bf9
.dword 0xbff0e3570e2acd1c
.dword 0x7fe25db9e8ff508c
.dword 0x7fde053a2ef29387
.dword 0xbfe0d23dd9377bc1
.dword 0x7fcf8fb2d617959b
.dword 0x7fde053a2ef29387
.dword 0xbfe0d23dd9377bc1
.dword 0x7fcf8fb2d617959b
.dword 0x7fde053a2ef29387
.dword 0xbfe0d23dd9377bc1
.dword 0x7fcf8fb2d617959b
.dword 0x7fde053a2ef29387
.dword 0xbfe0d23dd9377bc1
.dword 0x7fcf8fb2d617959b
.dword 0x7fde053a2ef29387
.dword 0xbfe0d23dd9377bc1
.dword 0x7fcf8fb2d617959b
.dword 0x7fecd42d44a09da1
.dword 0xbfc0159563e0931a
.dword 0x7fbcfb10ebe5bb27
.dword 0x7fecd42d44a09da1
.dword 0xbfc0159563e0931a
.dword 0x7fbcfb10ebe5bb27
.dword 0x7fecd42d44a09da1
.dword 0xbfc0159563e0931a
.dword 0x7fbcfb10ebe5bb27
.dword 0x7fecd42d44a09da1
.dword 0xbfc0159563e0931a
.dword 0x7fbcfb10ebe5bb27
.dword 0x7fecd42d44a09da1
.dword 0xbfc0159563e0931a
.dword 0x7fbcfb10ebe5bb27
.dword 0x7fee2ffa6cff07a7
.dword 0xbfe6039e999a6b85
.dword 0x7fe4c46648351903
.dword 0x7fee2ffa6cff07a7
.dword 0xbfe6039e999a6b85
.dword 0x7fe4c46648351903
.dword 0x7fee2ffa6cff07a7
.dword 0xbfe6039e999a6b85
.dword 0x7fe4c46648351903
.dword 0x7fee2ffa6cff07a7
.dword 0xbfe6039e999a6b85
.dword 0x7fe4c46648351903
.dword 0x7fee2ffa6cff07a7
.dword 0xbfe6039e999a6b85
.dword 0x7fe4c46648351903
.dword 0x7f9db38beb9086df
.dword 0xc0300d954e12d2fc
.dword 0x7fddccc2f63529c1
.dword 0x7f9db38beb9086df
.dword 0xc0300d954e12d2fc
.dword 0x7fddccc2f63529c1
.dword 0x7f9db38beb9086df
.dword 0xc0300d954e12d2fc
.dword 0x7fddccc2f63529c1
.dword 0x7f9db38beb9086df
.dword 0xc0300d954e12d2fc
.dword 0x7fddccc2f63529c1
.dword 0x7f9db38beb9086df
.dword 0xc0300d954e12d2fc
.dword 0x7fddccc2f63529c1
.dword 0x7fe7ad3fc69bae31
.dword 0xbff3f1e4b04626ba
.dword 0x7fed83afb61ec2c3
.dword 0x7fe7ad3fc69bae31
.dword 0xbff3f1e4b04626ba
.dword 0x7fed83afb61ec2c3
.dword 0x7fe7ad3fc69bae31
.dword 0xbff3f1e4b04626ba
.dword 0x7fed83afb61ec2c3
.dword 0x7fe7ad3fc69bae31
.dword 0xbff3f1e4b04626ba
.dword 0x7fed83afb61ec2c3
.dword 0x7fe7ad3fc69bae31
.dword 0xbff3f1e4b04626ba
.dword 0x7fed83afb61ec2c3
.dword 0x7fe97239c6c3047e
.dword 0xbff2f682f6148f16
.dword 0x7fee288d7f5db50b
.dword 0x7fe97239c6c3047e
.dword 0xbff2f682f6148f16
.dword 0x7fee288d7f5db50b
.dword 0x7fe97239c6c3047e
.dword 0xbff2f682f6148f16
.dword 0x7fee288d7f5db50b
.dword 0x7fe97239c6c3047e
.dword 0xbff2f682f6148f16
.dword 0x7fee288d7f5db50b
.dword 0x7fe97239c6c3047e
.dword 0xbff2f682f6148f16
.dword 0x7fee288d7f5db50b
.dword 0x7fe3eecf8905935f
.dword 0xbff30dc050910ea3
.dword 0x7fe7bcb8116f23ed
.dword 0x7fe3eecf8905935f
.dword 0xbff30dc050910ea3
.dword 0x7fe7bcb8116f23ed
.dword 0x7fe3eecf8905935f
.dword 0xbff30dc050910ea3
.dword 0x7fe7bcb8116f23ed
.dword 0x7fe3eecf8905935f
.dword 0xbff30dc050910ea3
.dword 0x7fe7bcb8116f23ed
.dword 0x7fe3eecf8905935f
.dword 0xbff30dc050910ea3
.dword 0x7fe7bcb8116f23ed
.dword 0x7fe3d2a90fafd5bc
.dword 0xbfe62487dae23696
.dword 0x7fdb6eeac2960889
.dword 0x7fe3d2a90fafd5bc
.dword 0xbfe62487dae23696
.dword 0x7fdb6eeac2960889
.dword 0x7fe3d2a90fafd5bc
.dword 0xbfe62487dae23696
.dword 0x7fdb6eeac2960889
.dword 0x7fe3d2a90fafd5bc
.dword 0xbfe62487dae23696
.dword 0x7fdb6eeac2960889
.dword 0x7fde1789626784f5
.dword 0xbffe473bed6c803f
.dword 0x7fec790d5fbd094d
.dword 0x7fde1789626784f5
.dword 0xbffe473bed6c803f
.dword 0x7fec790d5fbd094d
.dword 0x7fe854c40164e1cb
.dword 0xbf42f2490b2c03e4
.dword 0x7f3ccfcda9e20fff
RVTEST_DATA_END

RVMODEL_DATA_BEGIN


signature_x15_0:
    .fill 0*(XLEN/32),4,0xdeadbeef


signature_x15_1:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_2:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_3:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_4:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_5:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_6:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_7:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_8:
    .fill 254*(XLEN/32),4,0xdeadbeef


signature_x15_9:
    .fill 224*(XLEN/32),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*(XLEN/32),4,0xdeadbeef

#endif

RVMODEL_DATA_END
